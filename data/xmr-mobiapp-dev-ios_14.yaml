- en: Chapter 14. Testing and Publishing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第14章 测试和发布
- en: Your app is ready and waiting to be released to the entire world. You've sat
    there, coded, tested, coded, tested, and finally decided that you've created the
    most amazing app in the world and it's time to get it onto the Apple store. The
    problem is that only you have tested it. Unlike testing on Android, testing on
    iOS is not as straightforward and neither is getting your app into the store.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 您的应用已经准备好，等待向全世界发布。您已经坐下来，编码，测试，编码，测试，最后决定您已经创造了世界上最棒的应用，现在是时候将其上传到苹果商店了。问题是只有您测试过它。与Android测试不同，iOS测试并不那么直接，将您的应用放入商店也不是那么简单。
- en: 'In this chapter we will cover:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Provisioning and signing your app
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用配置和签名
- en: Testing your app using TestFlight
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用TestFlight测试您的应用
- en: Packaging and signing the app
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打包和签名应用
- en: Releasing it on the App Store
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在App Store上发布
- en: Provisioning and signing your app
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用配置和签名
- en: 'For normal debugging to your own phone, it isn''t usually required for you
    to sign the application because a generic developer code is used when you deploy
    to the phone. This code is known as a **provisioning profile**. We''re now moving
    into a bigger league and the app needs testing. You may wonder why your app needs
    to be tested by other people. The answer is easy: to ensure the best possible
    user experience.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对于对自用手机的常规调试，通常不需要您对应用进行签名，因为当您部署到手机时，会使用一个通用的开发者代码。这个代码被称为**配置文件**。我们现在正在进入一个更大的领域，应用需要测试。您可能会想知道为什么您的应用需要其他人进行测试。答案很简单：为了确保最佳的用户体验。
- en: 'From the developer''s perspective, a piece of software follows a set pattern:
    A goes to B, B goes to C, C goes to D or E, and so on. When we test our code,
    this is the path we take; users don''t. They will go from A to C to F to B to
    C again and finally shout when the code takes exception and crashes for no reason
    while they try to go to H directly from C. The more people test your software
    before the release, the happier users are when they download the app from the
    **Mac App Store** and the fewer negative reviews get lodged against you.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 从开发者的角度来看，一款软件遵循一定的模式：A到B，B到C，C到D或E，依此类推。当我们测试我们的代码时，我们会走这条路径；用户不会。他们将从A到C到F到B再到C，最后当代码在尝试直接从C到H时出现异常并崩溃时，他们会大喊。在发布前让更多人测试您的软件，当用户从**Mac
    App Store**下载应用时，他们会更加满意，而且针对您的负面评论也会更少。
- en: 'For testing, you have to distribute the app, and it''s not as simple as uploading
    the app to your personal web space and saying, "Hey, go download and install"
    as you would for a typical desktop (or Android) application. Apple, to ensure
    the quality of the available apps, has a fairly strict and tight system for distribution,
    even for testing. Luckily, there is a way to distribute your app prior to releasing
    it on the unsuspecting public: *TestFlight*.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对于测试，您必须分发应用，这并不像上传应用到您的个人网站并说“嘿，去下载并安装”那样简单，就像典型的桌面（或Android）应用一样。为了确保可用应用的质量，苹果对分发系统有相当严格和严格的要求，即使是测试分发。幸运的是，有一种方法可以在向公众发布之前分发您的应用：*TestFlight*。
- en: TestFlight
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TestFlight
- en: '`TestFlight` is a platform that allows you to upload the test (or beta) versions
    of your software on invited users (iOS devices) or registered iOS devices. It
    is a free service that does not break any of Apple''s rules or regulations and,
    moreover, does not require the device to be jailbroken. Setting up this service
    is a three-step process:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`TestFlight`是一个平台，允许您将测试（或测试版）软件上传到受邀用户（iOS设备）或注册的iOS设备。这是一个免费服务，不会违反苹果的任何规则或规定，而且，不需要设备越狱。设置此服务是一个三步过程：'
- en: Provisioning
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置
- en: Inviting
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 邀请
- en: Building and uploading
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建和上传
- en: Provisioning
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置
- en: Provisioning sets up the device to allow for the testing of non-Apple store
    approved applications. To start with, you need to set yourself up as an iOS developer
    at [http://developer.apple.com](http://developer.apple.com)—the cost is around
    $100 per year (about £65 at the time of writing). This is a yearly cost and you
    do get quite a bit for it. Once done, you will need to sign in and create an ID
    for your app.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 配置设置设备以允许测试非苹果商店批准的应用。首先，您需要在[http://developer.apple.com](http://developer.apple.com)注册为iOS开发者——费用大约为每年100美元（在撰写本文时约为65英镑）。这是一项年度费用，您确实会得到很多回报。完成之后，您需要登录并为您应用创建一个ID。
- en: '![Provisioning](img/00047.jpeg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![配置](img/00047.jpeg)'
- en: Registering the app
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注册应用
- en: 'First, select **Identifiers**: you need to give your app a name. In my example,
    given as follows, I have filled in both the bundle name and the app name using
    a unique identifier—it''s always a good idea to keep your apps apart. You can
    set up a "catch all" identifier here if you wish.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，选择**标识符**：您需要给您的应用起一个名字。在我的例子中，如下所示，我已经使用一个唯一的标识符填写了捆绑名称和应用程序名称——始终将您的应用分开是一个好主意。如果您愿意，这里可以设置一个“捕获所有”的标识符。
- en: '![Registering the app](img/00048.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![注册应用](img/00048.jpeg)'
- en: The grayed out area (in the preceding screenshot) will be the ID that Apple
    will provide you when you first create an account with them.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 灰色区域（在先前的截图中）将是苹果在您首次创建账户时提供给您的ID。
- en: Once you're happy with the values (unless you need the likes of push notifications
    or in-app purchases, you can just create the ID), you will need to confirm the
    details. Once they are confirmed, you will be presented with a page detailing
    all of your apps in development.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您对值满意（除非您需要推送通知或应用内购买等功能，您只需创建ID即可），您将需要确认详细信息。一旦确认，您将看到一个页面，详细列出您正在开发的所有应用。
- en: '![Registering the app](img/00049.jpeg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![注册应用](img/00049.jpeg)'
- en: Creating the developer profile
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建开发者配置文件
- en: Once you have created the app ID, you need to create a developer profile for
    it.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您创建了应用ID，您需要为它创建一个开发者配置文件。
- en: On the left-side menu, click on **Provisioning Profiles** and then on **Development**.
    You will get the following screen:![Creating the developer profile](img/00050.jpeg)
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧菜单中，点击**配置文件**然后点击**开发**。您将看到以下屏幕：![创建开发者配置文件](img/00050.jpeg)
- en: Under **Distribution**, you need to select **Ad Hoc**. Click on **Continue**.
    The next couple of screens are simple to navigate.![Creating the developer profile](img/00051.jpeg)
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**分发**下，您需要选择**Ad Hoc**。点击**继续**。接下来的几个屏幕都很简单。![创建开发者配置文件](img/00051.jpeg)
- en: From the dropdown, select your app. Once it's done, click on **Continue**.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择您的应用。完成后，点击**继续**。
- en: Next, you will be presented with a screen asking you to select the certificate
    you wish to sign the apps with. The certificate is unique to you. If you don't
    have one, you can now create a new one quickly at this point.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您将看到一个屏幕，要求您选择要用于签名应用的证书。该证书是您独有的。如果您还没有，现在可以快速创建一个新的证书。
- en: Creating your certificate
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建您的证书
- en: Start Xcode and, under the **Window** option, select **Organizer**. Next, select
    the **Devices** option. You will see a menu on the left. Scroll down to **LIBRARY**
    and select **Provision Profiles**. You'll need to enter your Apple ID and password.
    Once done, click on the refresh icon. Xcode will inform you if you don't have
    a developer profile and give you the option to submit an application for creating
    one. Click the button with that option in. As soon as you submit the request,
    the certificate will be added to your keychain. Save the key somewhere safe and
    give it a username and password. That's it!
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 启动Xcode，在**窗口**选项下选择**组织者**。然后选择**设备**选项。您将在左侧看到一个菜单。滚动到**库**并选择**配置文件**。您需要输入您的Apple
    ID和密码。完成后，点击刷新图标。Xcode会通知您是否没有开发者配置文件，并给您提交一个创建一个的选项。点击带有该选项的按钮。一旦提交请求，证书将被添加到您的密钥链中。将证书保存在安全的地方，并为其设置用户名和密码。这就完成了！
- en: You then need to download and install the certificate. On the left-side menu,
    click on **Certificates**. You will be given an option to load a `.cert` file—this
    is the file you have just created. Upload the file and once you are done, you
    will see the following screenshot. Download the file, double-click on it to install,
    and the job is done. Your certificate is valid as long as you pay money to Apple,
    and it's all you need for development and distribution.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您需要下载并安装证书。在左侧菜单中，点击**证书**。您将有一个选项来加载一个`.cert`文件——这正是您刚刚创建的文件。上传文件，完成后，您将看到以下截图。下载文件，双击安装，工作就完成了。只要您向苹果支付费用，您的证书就是有效的，并且这是您进行开发和分发所需的一切。
- en: '![Creating your certificate](img/00052.jpeg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![创建您的证书](img/00052.jpeg)'
- en: Back to registering your app
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回注册您的应用
- en: Once you have selected your app, you can then select the devices it needs to
    go onto. If you have no devices, the page can be skipped and you can download
    the certificate. Once downloaded, double-click on it, and the profile is installed.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您选择了您的应用，您就可以选择它需要安装到哪些设备上。如果您没有设备，可以跳过此页面并下载证书。下载后，双击它，配置文件就安装完成了。
- en: Enabling TestFlight within Xamarin Studio
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Xamarin Studio中启用TestFlight
- en: Xamarin Studio supports `TestFlight`, out of the box. To enable a build using
    Xamarin Studio, you need to set up the project correctly.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Xamarin Studio默认支持`TestFlight`。要使用Xamarin Studio启用构建，您需要正确设置项目。
- en: Select your application under **Project**. Next, it needs to be enabled for
    **AdHoc/Enterprise distribution**. You will find this in the IPA section (check
    the tick box to enable it).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在**项目**下选择您的应用。接下来，需要将其启用为**AdHoc/企业分发**。您可以在IPA部分找到它（勾选复选框以启用）。
- en: 'Finally (for now), select the correct provisioning; here, it is **Distribution
    (Automatic)** and the name of the app certificate:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 最后（目前是这样），选择正确的配置；这里，是**分发（自动）**以及应用证书的名称：
- en: '![Enabling TestFlight within Xamarin Studio](img/00053.jpeg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![在Xamarin Studio中启用TestFlight](img/00053.jpeg)'
- en: Registering on TestFlight
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在TestFlight上注册
- en: Signing up on `TestFlight` is very easy. Create an account and they will provide
    you with an app and team ID. Don't worry about remembering these since Xamarin
    Studio will pick up the values when you build out to `TestFlight`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在`TestFlight`上注册非常简单。创建一个账户，他们将会提供给您一个应用和团队ID。不用担心记住这些，因为当您构建到`TestFlight`时，Xamarin
    Studio会自动获取这些值。
- en: Inviting and registering devices
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 邀请和注册设备
- en: Once registered, you will be invited to create a team. This is essential so
    you can invite people to test your app. Click on the **Create a new Team** button,
    type in the name you want to give that area, and click on **Save**.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 注册后，您将被邀请创建一个团队。这是必需的，这样您就可以邀请人们测试您的应用。点击**创建新团队**按钮，输入您想要给该区域的名称，然后点击**保存**。
- en: '![Inviting and registering devices](img/00054.jpeg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![邀请和注册设备](img/00054.jpeg)'
- en: Next, you will be invited to upload a build. This is rather like asking for
    the car before you've taken lessons. Uploading a build here is pointless as no
    one will be able to install the app! For this to happen, the testers must have
    their devices registered on your developer provisioning profile, which only happens
    once you've invited them.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将被邀请上传一个构建版本。这就像在您还没有上课之前就要求您提供汽车一样。在这里上传构建版本是没有意义的，因为没有人能够安装应用！为了实现这一点，测试人员必须在其设备上注册您的开发者配置文件，而这只有在您邀请他们之后才会发生。
- en: 'Before that, though, you have to create an app. Click on the **Apps** link
    at the top of the page and then on **Create an app**. You will be presented with
    the following screen:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之前，您需要创建一个应用。点击页面顶部的**应用**链接，然后点击**创建应用**。您将看到以下屏幕：
- en: '![Inviting and registering devices](img/00055.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![邀请和注册设备](img/00055.jpeg)'
- en: '**App Name** is the common name for the app (for example, `mywhizzoapp`). For
    sanity, keep **BundleID** the same as you have used on the adhoc provisioning
    profile (`com.sporkish.mywhizzoapp`). You will need to add this to the application
    profile in Xamarin Studio (it''s under **Bundle**). Once created and saved, you
    can start inviting people.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**应用名称**是应用的通用名称（例如，`mywhizzoapp`）。为了方便，请将**包标识符**与您在adhoc配置文件中使用的相同（`com.sporkish.mywhizzoapp`）。您需要将其添加到Xamarin
    Studio中的应用配置文件中（位于**包**下）。创建并保存后，您就可以开始邀请人们了。'
- en: Inviting and registering someone is very simple. On the `TestFlight` website,
    click on the **People** option at the top. Next, create a new distribution list.
    These lists are very useful as it means with one account you can distribute a
    large number of apps to a large number of people.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 邀请和注册某人非常简单。在`TestFlight`网站上，点击顶部的**人员**选项。接下来，创建一个新的分发列表。这些列表非常有用，因为它意味着您可以使用一个账户向大量人员分发大量应用。
- en: '![Inviting and registering devices](img/00056.jpeg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![邀请和注册设备](img/00056.jpeg)'
- en: Give the list a name and, as there is only one person available (that is, you),
    select your profile, and click on **Save**.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 给列表命名，由于只有一个人可用（即您自己），选择您的配置文件，然后点击**保存**。
- en: Next, you need to invite people. On the left-side menu, click on **Invitations**.
    As there are no testers invited, you will be prompted to invite someone.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要邀请人们。在左侧菜单中，点击**邀请**。由于还没有邀请测试人员，您将被提示邀请某人。
- en: '![Inviting and registering devices](img/00057.jpeg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![邀请和注册设备](img/00057.jpeg)'
- en: If the person you're inviting is also a developer in your team, turn **ON**
    the **Team Developer** option; otherwise, leave that **OFF**. Once you click on
    the **Send Invitation** button, an e-mail will be sent to the person, who will
    in turn, accept the invitation and register the device. You will receive an e-mail
    once this has been done.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你邀请的人也是你团队中的开发者，请**开启****团队开发者**选项；否则，请保持**关闭**。一旦你点击**发送邀请**按钮，将会给那个人发送一封电子邮件，那个人会接受邀请并注册设备。完成此操作后，你会收到一封电子邮件。
- en: Copy the device `UUID` (or if it has been sent by e-mail, you can upload the
    file sent containing the device `UUID` code), and go to the Apple developer website.
    Log in and select **Devices**. Here you can add one or more devices. Once added,
    go back to the **Developer Provisioning** option and enable that device. You will
    need to re-download the provisioning file and open it again with Xcode, and then
    rebuild the app with the updated profile. Failing to do this will result in the
    user not being able to install the app.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 复制设备的`UUID`（或者如果它已经通过电子邮件发送，你可以上传包含设备`UUID`代码的文件），然后前往苹果开发者网站。登录并选择**设备**。在这里你可以添加一个或多个设备。一旦添加，返回到**开发者配置**选项，并启用该设备。你需要重新下载配置文件，并使用Xcode再次打开它，然后使用更新的配置重新构建应用。如果不这样做，用户将无法安装应用。
- en: Building to TestFlight
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建到TestFlight
- en: Once you have made sure that the **BundleID** in your project is the same as
    it is for the **BundleID** of `TestFlight`, things become very easy.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你的项目中的**BundleID**与`TestFlight`的**BundleID**相同后，事情变得非常简单。
- en: '![Building to TestFlight](img/00058.jpeg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![构建到TestFlight](img/00058.jpeg)'
- en: After you have completed entering the details (similar to the preceding screenshot),
    click on **OK** and set the build to **Ad Hoc**. Select **Project** and then the
    `TestFlight` option.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成输入详细信息（类似于前面的截图）后，点击**确定**，并将构建设置为**Ad Hoc**。选择**项目**，然后选择`TestFlight`选项。
- en: '![Building to TestFlight](img/00059.jpeg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![构建到TestFlight](img/00059.jpeg)'
- en: Initially, this window will be blank. Click on **Get your API token** and then
    **Get your team token**, which will launch your default web browser. Copy and
    paste these values into the **API token** and **Team token** fields on the **Publish
    to TestFlight** screen (as seen in preceding screenshot). Next, provide some details
    of what changes are in the file, and finally select the distribution lists you've
    set up. Ensure that the top two tick boxes are ticked (it helps to let people
    know when something has been uploaded).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 初始时，此窗口将是空的。点击**获取你的API令牌**，然后点击**获取你的团队令牌**，这将启动你的默认网页浏览器。将这些值复制并粘贴到**发布到TestFlight**屏幕上的**API令牌**和**团队令牌**字段（如前述截图所示）。接下来，提供一些关于文件中更改的详细信息，最后选择你已设置的分发列表。确保前两个复选框被勾选（这有助于让人们知道何时上传了某些内容）。
- en: When you're done, click on **Publish** and, assuming there are no build issues,
    the app will be sent to `TestFlight` and the testers on the notified list.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成操作后，点击**发布**，假设没有构建问题，应用将被发送到`TestFlight`，并且通知列表中的测试者会收到通知。
- en: After a few weeks of testing, you should be ready to submit the app to Apple
    for distribution. This is the final step to getting your app approved, but there
    are some hurdles you need to be aware of.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 经过几周的测试后，你应该准备好将应用提交给苹果进行分发。这是获得你的应用批准的最终步骤，但你需要注意一些障碍。
- en: Releasing your app
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布你的应用
- en: Testing is complete and you've ironed out a majority of the bugs. There may
    still be some in there, but for now the app is behaving and you're ready to release
    it to the world.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 测试已完成，并且你已经解决了大多数bug。可能还有一些bug存在，但现在应用表现良好，你准备好将其发布给世界了。
- en: App checklist
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用清单
- en: 'Before you submit your app to Apple for release through their App Store, you
    must have the following in place:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在你将应用提交给苹果通过其App Store发布之前，你必须确保以下事项：
- en: The correct number and size of icons (see below for the sizes)
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正确的数量和尺寸的图标（见下文以获取尺寸）
- en: The app needs to be correctly signed
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用需要正确签名
- en: Support for iPhone 5 must be included (this includes the widgets being correctly
    placed on the screen for the new larger visible area)
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须包含对iPhone 5的支持（这包括小部件被正确放置在新更大的可见屏幕区域）
- en: You've not used any private API or forbidden API calls (Apple does not want
    you using libraries that it does not control and will throw out apps that circumvent
    hardware or software controls, or interfere with the operation of other software)
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你没有使用任何私有API或禁止的API调用（苹果不希望你使用它无法控制的库，并将丢弃绕过硬件或软件控制或干扰其他软件操作的应用）。
- en: Icon sizes
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图标尺寸
- en: 'All of the following icons *must* be present with their correct sizes prior
    to submitting your app to Apple. The size of the icons (in pixels) are as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在将您的应用提交给苹果之前，以下所有图标*必须*以正确的尺寸存在。图标的尺寸（以像素为单位）如下：
- en: '| iPhone | iPad |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| iPhone | iPad |'
- en: '|   |   |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '|   |   |'
- en: '| App icons | Normal | Retina | iPad Compatibility | Normal | Retina |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| 应用图标 | 正常 | Retina | iPad兼容性 | 正常 | Retina |'
- en: '| 57 x 57 | 114 x 114 | 72 x 72 | 72 x 72 | 144 x 144 |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 57 x 57 | 114 x 114 | 72 x 72 | 72 x 72 | 144 x 144 |'
- en: '|   |   |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '|   |   |'
- en: '| Launch images | Normal | Retina (3.5") | Retina (4") | Normal | Retina |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 启动图像 | 正常 | Retina (3.5") | Retina (4") | 正常 | Retina |'
- en: '| 320 x 480 | 640 x 960 | 640 x 1136 | 768 x 1024 | 1536 x 2048 |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| 320 x 480 | 640 x 960 | 640 x 1136 | 768 x 1024 | 1536 x 2048 |'
- en: '|   |   |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '|   |   |'
- en: '| iTunes artwork | Normal | Retina |   |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| iTunes艺术品 | 正常 | Retina |   |'
- en: '| 512 x 512 | 1024 x 1024 |   |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 512 x 512 | 1024 x 1024 |   |'
- en: Preparing to package
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备打包
- en: 'With the icons in place, you next need an App Store provisioning profile. This
    is set up in a way similar to a **Developer** or **Ad Hoc** provisioning file:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在放置好图标后，接下来需要一个App Store配置文件。这的设置方式与**开发者**或**Ad Hoc**配置文件类似：
- en: '![Preparing to package](img/00060.jpeg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![准备打包](img/00060.jpeg)'
- en: The process for creating the **App Store** profile is similar to the **Ad Hoc**
    profile generation except that you're not asked which devices you want the test
    software to be installed on. Download the provisioning file and install it as
    you did for the **Ad Hoc** profile. You will need to supply a name for the profile,
    though.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 创建**App Store**配置文件的流程与**Ad Hoc**配置文件生成类似，除了您不需要选择要安装测试软件的设备。下载配置文件，并像为**Ad
    Hoc**配置文件那样安装它。尽管如此，您仍需要为配置文件提供一个名称。
- en: Packaging your app
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 打包您的应用
- en: Once you have created and installed the provisioning profile, you next need
    to package the app for distribution. This is not as straightforward as it may
    seem.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建并安装了配置文件，接下来需要为分发打包应用。这并不像看起来那么简单。
- en: You have already created a development certificate; you now need to repeat the
    process to generate a distribution certificate. The process for doing this is
    exactly the same as that for a development certificate. Once you have done this,
    install the certificate in your keychain.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经创建了一个开发证书；现在需要重复此过程以生成分发证书。执行此操作的过程与开发证书完全相同。完成此操作后，将证书安装到您的密钥链中。
- en: '![Packaging your app](img/00061.jpeg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![打包您的应用](img/00061.jpeg)'
- en: Once the certificate is installed, the next stage takes place in Xamarin Studio.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦证书安装完成，下一个阶段将在Xamarin Studio中进行。
- en: Creating the build configuration
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建构建配置
- en: 'This is the profile you need for creating your iOS application. Load the project
    that you wish to submit. Navigate to **Project** | **Solution Profile**. On the
    left-hand side, click on the **Configurations** option, shown as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这是创建iOS应用所需的配置文件。加载您希望提交的项目。导航到**项目** | **解决方案配置文件**。在左侧，点击**配置**选项，如下所示：
- en: '![Creating the build configuration](img/00062.jpeg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![创建构建配置](img/00062.jpeg)'
- en: To add the profile (assuming it's not there), click on **Add**. You will be
    presented with a **New Configuration** box. You will need to fill this in as shown.
    Once you've done this, click on **OK** and then click on **OK** again to remove
    the **Solution Options** window.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加配置文件（假设它尚未存在），请点击**添加**。您将看到一个**新配置**框。您需要按照所示填写此信息。完成此操作后，点击**确定**，然后再次点击**确定**以关闭**解决方案选项**窗口。
- en: '![Creating the build configuration](img/00063.jpeg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![创建构建配置](img/00063.jpeg)'
- en: If the app you've created is universal (in other words, for iPhone and iPad),
    the platform should be universal. Failing that, for an iPad app, it will be just
    iPad for the platform.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您创建的应用是通用型（换句话说，适用于iPhone和iPad），平台应该是通用型。如果不是，对于iPad应用，平台将是iPad。
- en: Next, the application needs to be signed. Navigate to **Project** | **mywhizzoapp**
    (or whatever your app is called). Under the **Build** option, select **iOS build**
    and choose your AppStore configuration. After this, select the iOS bundle signing
    option. For the Identity drop-down, set this to Distribution (automatic) and the
    provisioning profile to the one you created to distribute the app (not the one
    created for distribution on TestFlight).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，应用程序需要签名。导航到**项目** | **mywhizzoapp**（或您的应用名称）。在**构建**选项下，选择**iOS构建**并选择您的AppStore配置。之后，选择iOS捆绑签名选项。在身份下拉菜单中，将其设置为分发（自动），并将配置文件设置为用于分发的配置文件（而不是用于TestFlight分发的配置文件）。
- en: Once this has been done, click on **OK** to remove the window and set the build
    type for the app to **AppStore**.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些后，点击 **确定** 以关闭窗口并将应用程序的构建类型设置为 **AppStore**。
- en: '![Creating the build configuration](img/00064.jpeg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![创建构建配置](img/00064.jpeg)'
- en: For safety, click on **Build** | **Clean All** and then **Build** | **Build
    all**. If everything works, we're in the App Store.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 为了安全起见，点击 **构建** | **清理所有**，然后 **构建** | **构建所有**。如果一切正常，我们就在 App Store 中了。
- en: The App Store Submission Process
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: App Store 提交流程
- en: The first step is to create a record with **iTunes Connect** ([https://itunesconnect.apple.com](https://itunesconnect.apple.com)).
    This is a simple process. The description has to reflect what the app can do (for
    example, you cannot submit a messenger application that is actually a game).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是使用 **iTunes Connect** ([https://itunesconnect.apple.com](https://itunesconnect.apple.com))
    创建一个记录。这是一个简单的流程。描述必须反映应用程序的功能（例如，您不能提交一个实际上是游戏的即时通讯应用程序）。
- en: Assuming that the record has been created correctly, click on the **Ready To
    Upload** binary button. You will be presented with a number of questions, and
    you can progress by answering them correctly. The last screen will tell you that
    the App Store is ready to upload and you can use the uploader facility. But *don't*.
    There is a simpler method via Xamarin Studio and Xcode, which has fewer issues.
    The first part is to create an archive.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 假设记录已正确创建，点击 **准备上传** 二进制按钮。您将面临一系列问题，您可以通过正确回答这些问题来继续操作。最后一屏将告诉您 App Store
    已准备好上传，您可以使用上传工具。但请不要这样做。Xamarin Studio 和 Xcode 有一个更简单的方法，问题更少。第一部分是创建存档。
- en: Creating an archive
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建存档
- en: Navigate to **Build** | **Archive**. This will build the app and create an archive
    from it that is correctly provisioned for distribution. Once the archive has been
    built, an **Archive** tab will appear in the code designer. Here you can look
    at any of the archives that you have created.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到 **构建** | **存档**。这将构建应用程序并从中创建一个正确配置以供分发的存档。一旦存档构建完成，代码设计器中将会出现一个**存档**标签。在这里，您可以查看您创建的任何存档。
- en: Submission via Xcode
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过 Xcode 提交
- en: 'Start Xcode and navigate to **Window** | **Organiser**. Click on the **Archives**
    tab. You will be presented with a list of all your apps for distribution. Select
    the one you wish to submit and you will see two options: **Validate** and **Submit**.
    Click on **Validate**. If there are no issues with the app, proceed to **Submit**.
    Typically, validation fails if there isn''t a correct provisioning certificate
    applied to the app or the certificate can''t be found. Fix the issue, rearchive,
    and validate again.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 启动 Xcode 并导航到 **窗口** | **组织者**。点击 **存档** 标签。您将看到所有用于分发的应用程序列表。选择您想要提交的应用程序，您将看到两个选项：**验证**
    和 **提交**。点击 **验证**。如果没有应用程序的问题，请继续到 **提交**。通常，如果应用程序没有正确应用配置文件证书或找不到证书，验证会失败。修复问题，重新存档，并再次验证。
- en: The submission wizard
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提交向导
- en: To guide you through the process of submission, Apple has included a very simple-to-use
    submission wizard. You must ensure that you have a network connection for this
    stage and that the app is ready for upload.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 为了指导您完成提交过程，苹果公司包含了一个非常易于使用的提交向导。您必须确保在此阶段您有一个网络连接，并且应用程序已准备好上传。
- en: Click on **Submit**. Xcode communicates with **iTunes Connect** and retrieves
    a list of apps you have submitted for upload. Select the one you want to submit.
    Xcode will then upload the archive for you. Once uploaded, if you go back to **iTunes
    Connect**, you will see that the app is now waiting for approval. (Don't worry
    as this is largely an automated procedure.) Once approved, you're home and dry
    and your app is in the App Store.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **提交**。Xcode 与 **iTunes Connect** 通信并检索您已提交以供上传的应用程序列表。选择您想要提交的应用程序。Xcode
    将为您上传存档。一旦上传完成，如果您回到 **iTunes Connect**，您将看到应用程序现在正在等待批准。（请不要担心，这基本上是一个自动化的过程。）一旦批准，您就完成了，您的应用程序现在在
    App Store 中。
- en: Summary
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Testing and distribution of iOS applications may seem a waste of time, but at
    the end of the day, controlling who is testing your app allows you to pick and
    choose who you want to test the code. Moreover, it doesn't allow for versions
    to be leaked and in turn giving you a potentially bad name. Yes, it may seem very
    control-freaky, but that's the game Apple wants you to play, and if you want to
    distribute your apps with them, that's the game you have to play.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 测试和分发 iOS 应用可能看起来是浪费时间，但最终，控制谁在测试你的应用让你能够挑选和选择你希望测试代码的人。此外，它不允许版本泄露，从而避免给你带来潜在的坏名声。是的，这可能会显得非常控制欲强，但这就是苹果希望你玩的游戏，如果你想通过他们分发你的应用，这就是你必须玩的游戏。
