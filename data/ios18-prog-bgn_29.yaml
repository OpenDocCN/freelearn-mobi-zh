- en: '25'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '25'
- en: Getting Started with Swift Testing
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Swift 测试入门
- en: Apple introduced **Swift Testing** during WWDC24\. It is a new framework that
    makes it easy for you to test your Swift code using expressive and intuitive APIs.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果在 WWDC24 上推出了 **Swift 测试**。这是一个新的框架，它使您能够使用表达性和直观的 API 简单地测试您的 Swift 代码。
- en: In this chapter, you’ll create and run tests for the `JournalEntry` class to
    make sure it works as intended.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将为 `JournalEntry` 类创建和运行测试，以确保它按预期工作。
- en: You’ll start by adding a new **Unit Testing** target to your app. Next, you’ll
    write some tests for the `JournalEntry` class, and finally, you’ll run the tests
    on your `JournalEntry` class to make sure it works as it should.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您将首先为您的应用添加一个新的 **单元测试** 目标。接下来，您将为 `JournalEntry` 类编写一些测试，最后，您将在 `JournalEntry`
    类上运行这些测试，以确保它按预期工作。
- en: By the end of this chapter, you’ll have learned how to write tests for the classes
    in your app to make sure that they work as intended. This will be useful for larger
    projects involving many people, where you are not able to view the source code
    for all the classes in your project.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将学会如何为您的应用中的类编写测试，以确保它们按预期工作。这对于涉及许多人员的大型项目非常有用，在这些项目中，您无法查看项目中所有类的源代码。
- en: 'The following topics will be covered:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 以下内容将涵盖：
- en: Introducing Swift Testing
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 Swift 测试
- en: Adding a Unit Testing target to your app
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将单元测试目标添加到您的应用中
- en: Writing tests for the `JournalEntry` class
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 `JournalEntry` 类编写测试
- en: Testing the `JournalEntry` class
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试 `JournalEntry` 类
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will continue working on the `JRNL` project that you modified in *Chapter
    23*, *Getting Started with SwiftData*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您将继续在 *Chapter 23* 中修改的 `JRNL` 项目上工作，*SwiftData 入门*。
- en: 'The completed Xcode project for this chapter is in the `Chapter25` folder of
    the code bundle for this book, which can be downloaded here:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章完成的 Xcode 项目位于本书代码包的 `Chapter25` 文件夹中，您可以通过以下链接下载：
- en: '[https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition](https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition%0D)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition](https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition%0D)'
- en: 'Check out the following video to see the code in action:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频以查看代码的实际运行情况：
- en: '[https://youtu.be/se9ae9wrYC8](https://youtu.be/se9ae9wrYC8%0D)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://youtu.be/se9ae9wrYC8](https://youtu.be/se9ae9wrYC8%0D)'
- en: Let’s start by learning about Swift Testing and how it works.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先了解 Swift 测试及其工作原理。
- en: Introducing Swift Testing
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Swift 测试
- en: If you are the lead developer of a large project involving many developers,
    it would not be practical for you to review everyone’s source code in detail,
    and in some cases, you would not be able to view the source code at all. Instead,
    you would issue specifications on what a class is supposed to do, and it would
    be the developer’s job to write the class for you.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是涉及许多开发者的大型项目的首席开发者，您详细审查每个人的源代码可能并不实用，在某些情况下，您甚至无法查看源代码。相反，您将发布关于一个类应该做什么的规范，然后开发者的工作是为您编写这个类。
- en: 'As an example, let’s look at the initializer code for the `JournalEntry` class
    in the *JRNL* app:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们看看 *JRNL* 应用中 `JournalEntry` 类的初始化代码：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As you can see, you can only create valid `JournalEntry` instances if `entryTitle`
    and `entryBody` are not empty and `rating` is between 0 and 5 inclusive. If these
    requirements are not met, the initializer will return `nil`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，只有当 `entryTitle` 和 `entryBody` 不为空且 `rating` 在 0 到 5（包括 0 和 5）之间时，您才能创建有效的
    `JournalEntry` 实例。如果这些要求不满足，初始化器将返回 `nil`。
- en: Assume that you’re not able to view the source code for the `JournalEntry` class.
    How would you know that this class works as intended? This is where Swift Testing
    comes in.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您无法查看 `JournalEntry` 类的源代码。您如何知道这个类按预期工作？这就是 Swift 测试发挥作用的地方。
- en: Swift Testing has a clear and expressive API built using macros, which makes
    it easy to write tests to determine that your code is working properly. It works
    on all major platforms supported by Swift, and it is open source.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Swift 测试使用宏构建了一个清晰且表达性强的 API，这使得编写测试以确定您的代码是否正常工作变得容易。它适用于 Swift 支持的所有主要平台，并且是开源的。
- en: 'For more information on Swift Testing, you can watch Apple’s WWDC24 video on
    it here: [https://developer.apple.com/videos/play/wwdc2024/10179/](https://developer.apple.com/videos/play/wwdc2024/10179/).'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此处观看有关 Swift 测试的更多信息：[https://developer.apple.com/videos/play/wwdc2024/10179/](https://developer.apple.com/videos/play/wwdc2024/10179/).
- en: In the next section, you’ll see how to add a Unit Testing target to your project.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，您将了解如何将单元测试目标添加到您的项目中。
- en: Adding a Unit Testing target to your app
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将单元测试目标添加到您的应用中
- en: 'In order to be able to test the `JournalEntry` class, you’ll add a Unit Testing
    target to your app. You will be able to write all the tests for classes in your
    app here. Follow these steps:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够测试 `JournalEntry` 类，您将向您的应用添加一个单元测试目标。您将能够在这里编写应用中所有类的所有测试。按照以下步骤操作：
- en: In Xcode, choose **File** | **New** | **Target** to open the template selector.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Xcode 中，选择 **文件** | **新建** | **目标** 以打开模板选择器。
- en: '**iOS** should already be selected. In the **Test** section, click **Unit Testing
    Bundle** and click **Next**:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**iOS** 应已选中。在 **测试** 部分，单击 **单元测试包** 并单击 **下一步**：'
- en: '![](img/B31371_25_01.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_25_01.png)'
- en: 'Figure 25.1: Template chooser window'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 25.1：模板选择器窗口
- en: 'In the **Choose options for your new target:** window, leave all the options
    at their default values and click **Finish**:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **选择新目标选项** 窗口中，保留所有选项的默认值并单击 **完成**：
- en: '![](img/B31371_25_02.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_25_02.png)'
- en: 'Figure 25.2: Options window'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 25.2：选项窗口
- en: 'Verify that the **JRNLTests** folder is visible in the Project navigator:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认在项目导航器中可见 **JRNLTests** 文件夹：
- en: '![](img/B31371_25_03.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_25_03.png)'
- en: 'Figure 25.3: Project navigator showing JRNLTests folder'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 25.3：项目导航器显示 JRNLTests 文件夹
- en: You have successfully added the Unit Testing target to your app! In the next
    section, you’ll write some tests to ensure that the `JournalEntry` class works
    as it should.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功将单元测试目标添加到您的应用中！在下一节中，您将编写一些测试以确保 `JournalEntry` 类按预期工作。
- en: Writing tests for the JournalEntry class
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 JournalEntry 类编写测试
- en: 'As you have seen, the initializer for the `JournalEntry` class will only return
    a `JournalEntry` instance if `title` and `body` are not empty, and `rating` is
    between 0 and 5 inclusive. If these conditions are not met, the initializer will
    return `nil`. To test this, you will write tests to confirm that a valid `JournalEntry`
    instance is created when the above conditions are met, and `nil` is returned when
    they are not. Follow these steps:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，`JournalEntry` 类的初始化器只有在 `title` 和 `body` 不为空且 `rating` 在 0 到 5（包含）之间时才会返回
    `JournalEntry` 实例。如果这些条件不满足，初始化器将返回 `nil`。为了测试这一点，您将编写测试以确认在满足上述条件时创建了有效的 `JournalEntry`
    实例，并且在不满足条件时返回 `nil`。按照以下步骤操作：
- en: Click the **JRNLTests** file inside the **JRNLTests** folder in the Project
    navigator.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中单击 **JRNLTests** 文件夹内的 **JRNLTests** 文件。
- en: 'Modify the contents of this file as follows:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下方式修改此文件的内容：
- en: '[PRE1]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let’s break this down:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下：
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This imports the Swift Testing framework.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这导入了 Swift 测试框架。
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This makes all the code inside the `JRNL` project available for testing.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得 `JRNL` 项目中的所有代码都可用于测试。
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This function is used to confirm that valid instances of the `JournalEntry`
    class are created when `entryTitle` has a value, `entryBody` has a value, and
    `rating` is between 0 and 5 inclusive. The `#expect` macro checks that both `zeroRatingJournalEntry`
    and `positiveRatingJournalEntry` are not `nil`, therefore confirming that a valid
    `JournalEntry` instance has been created.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数用于确认当 `entryTitle` 有值、`entryBody` 有值且 `rating` 在 0 到 5（包含）之间时，创建了有效的 `JournalEntry`
    类实例。`#expect` 宏检查 `zeroRatingJournalEntry` 和 `positiveRatingJournalEntry` 都不是
    `nil`，因此确认已创建了有效的 `JournalEntry` 实例。
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This function is used to confirm that `nil` will be returned when `entryTitle`
    is empty, `entryBody` is empty, and `rating` is not between 0 and 5 inclusive.
    The `#expect` macro will determine if `entryTitleEmptyJournalEntry`, `entryBodyEmptyJournalEntry`,
    `negativeRatingJournalEntry`, and `invalidRatingJournalEntry` are all `nil`, therefore
    confirming that a `JournalEntry` instance has not been created.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数用于确认当 `entryTitle` 为空、`entryBody` 为空且 `rating` 不在 0 到 5（包含）之间时，将返回 `nil`。`#expect`
    宏将确定 `entryTitleEmptyJournalEntry`、`entryBodyEmptyJournalEntry`、`negativeRatingJournalEntry`
    和 `invalidRatingJournalEntry` 是否都是 `nil`，因此确认没有创建 `JournalEntry` 实例。
- en: Since this is a brief introduction to Swift Testing, multiple conditions are
    checked in a single function, but for clarity, professional programmers typically
    use one function to perform one test.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是 Swift 测试的简要介绍，单个函数中会检查多个条件，但为了清晰起见，专业程序员通常使用一个函数执行一个测试。
- en: You’ve completed writing all the tests for the `JournalEntry` class. In the
    next section, you’ll run the tests to confirm that the `JournalEntry` class works
    as it should.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您已完成了 `JournalEntry` 类所有测试的编写。在下一节中，您将运行测试以确认 `JournalEntry` 类按预期工作。
- en: Testing the JournalEntry class
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试JournalEntry类
- en: 'Since you have completed writing all the tests for the `JournalEntry` class
    in the previous section, you will now run the test to see if the `JournalEntry`
    class works as expected. Follow these steps:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你在上一节中已经完成了JournalEntry类的所有测试编写，你现在将运行测试以查看JournalEntry类是否按预期工作。请按照以下步骤操作：
- en: In Xcode, choose **Test** from the **Product** menu.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Xcode中，从**产品**菜单中选择**测试**。
- en: 'Xcode will automatically run all your tests. Upon completion, you will see
    the following results:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Xcode将自动运行所有测试。完成后，你将看到以下结果：
- en: '![](img/B31371_25_04.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_25_04.png)'
- en: 'Figure 25.4: Canvas showing widget preview'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图25.4：显示小部件预览的画布
- en: The green squares with tick marks show that all the tests have been completed
    successfully and the `JournalEntry` class works as expected. Great job!
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 带勾号的绿色方块表明所有测试都已成功完成，JournalEntry类按预期工作。做得好！
- en: Summary
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you tested the JournalEntry class to determine if it works
    as expected.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你测试了JournalEntry类，以确定它是否按预期工作。
- en: First, you added a new **Unit Testing** target to your app. Next, you wrote
    some tests for the `JournalEntry` class, and finally, you ran tests on your `JournalEntry`
    class to make sure it works as it should.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你为你的应用添加了一个新的**单元测试**目标。接下来，你为JournalEntry类编写了一些测试，最后，你运行了JournalEntry类的测试，以确保它按预期工作。
- en: You have now learned how to write tests for the classes in your app to make
    sure that they work as intended. This will be useful for larger projects involving
    many people, where you are not able to view the source code for all the classes
    in your project, and also ensure that changes made anywhere in the app do not
    break existing functionality.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经学会了如何为你的应用中的类编写测试，以确保它们按预期工作。这对于涉及许多人的大型项目非常有用，在这些项目中，你无法查看项目中所有类的源代码，并且还能确保在应用中任何地方所做的更改都不会破坏现有功能。
- en: In the next chapter, you’ll learn about **Apple Intelligence**, Apple’s implementation
    of AI technology introduced during WWDC24.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将了解**Apple Intelligence**，这是苹果在WWDC24期间推出的AI技术的实现。
- en: Join us on Discord!
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的Discord！
- en: Read this book alongside other users, experts, and the author himself. Ask questions,
    provide solutions to other readers, chat with the author via Ask Me Anything sessions,
    and much more. Scan the QR code or visit the link to join the community.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他用户、专家和作者本人一起阅读这本书。提出问题，为其他读者提供解决方案，通过Ask Me Anything（问我任何问题）会议与作者聊天，等等。扫描二维码或访问链接加入社区。
- en: '[https://packt.link/ios-Swift](https://packt.link/ios-Swift%0D)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[(https://packt.link/ios-Swift)]'
- en: '[![](img/QR_Code2370024260177612484.png)](https://packt.link/ios-Swift%0D)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '![二维码](img/QR_Code2370024260177612484.png)[(https://packt.link/ios-Swift%0D)]'
