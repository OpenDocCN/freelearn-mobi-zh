- en: Chapter 1. Getting Started with Sparrow
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. Sparrow入门
- en: '*Before we dive right into the concept of development, we first need to set
    up our development environment and set up Sparrow on our system. In this chapter,
    we will take a short look at what Sparrow actually is, set up Xcode and Sparrow
    for our needs, create a game template, and set up goals and expectations for the
    game we are going to develop.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在我们深入探讨开发概念之前，我们首先需要设置我们的开发环境，并在我们的系统上设置Sparrow。在本章中，我们将简要了解Sparrow实际上是什么，为我们的需求设置Xcode和Sparrow，创建游戏模板，并为我们要开发的游戏设定目标和期望。*'
- en: Understanding the basics of Sparrow
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解Sparrow的基础知识
- en: Sparrow is a game framework that might feel familiar to those who already have
    some experience with ActionScript, the Flash API, and/or Starling. The familiarity
    to Starling is not a coincidence; the core development team of both Starling and
    Sparrow are the same. Starling could be considered the ActionScript version of
    Sparrow. We will delve into these aspects once we use the different features of
    Sparrow in detail.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Sparrow是一个游戏框架，对于那些已经有一定ActionScript、Flash API和/或Starling经验的人来说可能会感到熟悉。与Starling的熟悉性并非巧合；Starling和Sparrow的核心开发团队是相同的。Starling可以被认为是Sparrow的ActionScript版本。一旦我们详细使用Sparrow的不同功能，我们将深入探讨这些方面。
- en: '**Open Graphics Library for Embedded Systems** (**OpenGL ES**) is a graphics
    renderer for mobile devices which is available on all kinds of devices ranging
    from iOS devices to Android devices and even consoles such as OUYA. OpenGL can
    be seen as the older and bigger brother of OpenGL ES. OpenGL itself is available
    for all desktop platforms such as Windows, Linux, Mac OS X, and next-generation
    consoles such as the PlayStation 4.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**嵌入式系统开放图形库**（**OpenGL ES**）是适用于移动设备的图形渲染器，可在各种设备上使用，从iOS设备到Android设备，甚至到OUYA这样的游戏机。OpenGL可以看作是OpenGL
    ES的较老、更大的兄弟。OpenGL本身适用于所有桌面平台，如Windows、Linux、Mac OS X以及下一代游戏机，如PlayStation 4。'
- en: OpenGL and OpenGL ES are the kind of libraries that let us perform magic on
    the screen, be it drawing textures, or having some kind of geometrical shapes
    or particle effects on the screen.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: OpenGL和OpenGL ES是那种让我们在屏幕上施展魔法（无论是绘制纹理，还是在屏幕上有某种几何形状或粒子效果）的库。
- en: Sparrow abstracts all the OpenGL components away from the developer. We don't
    have to worry about the inner workings of OpenGL at all. Sparrow fully concentrates
    on 2D rendering and puts it into a bunch of logically structured classes and methods.
    While the choice for performance-heavy graphics applications is usually C or C++
    as far as programming language is concerned, Sparrow uses Objective-C to keep
    it familiar for Mac and iOS developers.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Sparrow将所有OpenGL组件从开发者那里抽象出来。我们根本不必担心OpenGL的内部工作原理。Sparrow完全专注于2D渲染，并将其放入一系列逻辑上结构化的类和方法中。就编程语言而言，性能密集型图形应用程序的选择通常是C或C++，而Sparrow使用Objective-C来保持对Mac和iOS开发者的熟悉度。
- en: Sparrow is not only a 2D graphics engine, but it also provides the functionality
    to create animations on the screen—ranging from simple effects such as fading
    objects in and out to more sophisticated actions such as moving a ball from the
    left to the right of the screen with a bouncing animation. This mechanism is also
    referred to as tweening.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Sparrow不仅是一个2D图形引擎，它还提供了在屏幕上创建动画的功能——从简单的效果，如淡入淡出对象，到更复杂的行为，如使用弹跳动画将球从屏幕的左侧移动到右侧。这种机制也被称为补间动画。
- en: Apart from graphic-related features, Sparrow also gives us the means to load
    audio files and play music and sounds in our games.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 除了图形相关功能外，Sparrow还为我们提供了加载音频文件和在游戏中播放音乐和声音的手段。
- en: When directly compared with other game frameworks, Sparrow does not impose a
    specific workflow on us. As a result, a few things need to be set up by hand,
    such as structuring all the needed assets for our game and managing our scenes.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当与其他游戏框架直接比较时，Sparrow不会对我们施加特定的工作流程。因此，一些事情需要手动设置，例如为我们的游戏结构化所有需要的资产，以及管理我们的场景。
- en: System requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 系统要求
- en: From a hardware perspective, any Mac that can run the latest Mac OS X works
    just fine.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 从硬件角度来看，任何能够运行最新Mac OS X的Mac都完全可以胜任。
- en: On the software side, we will need the latest version of Mac OS X and all the
    latest updates need to be installed. The minimum at the time of writing this book
    is OS X 10.8 Mountain Lion.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在软件方面，我们需要最新版本的Mac OS X，并且所有最新的更新都需要安装。在撰写本书时的最低要求是OS X 10.8 Mountain Lion。
- en: For the platforms we are going to target, we need at least a device with iOS
    5.0 and Xcode 4.0 or higher. The latest version of Sparrow uses OpenGL ES 2.0
    internally, which is only supported by iPhone 3GS or newer devices.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们将要针对的平台，我们至少需要一个运行 iOS 5.0 和 Xcode 4.0 或更高版本的设备。Sparrow 的最新版本内部使用 OpenGL
    ES 2.0，这仅支持 iPhone 3GS 或更新的设备。
- en: Setting up the Apple developer account
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Apple 开发者账户
- en: Setting up the Apple developer account and joining the iOS developer program
    is entirely optional for the purpose of this book, but it will become necessary
    if you would like to test the game on a physical device or publish it to the Apple
    App Store.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 Apple 开发者账户并加入 iOS 开发者计划对于本书的目的来说是完全可选的，但如果您想在物理设备上测试游戏或将其发布到 Apple App Store，则这是必要的。
- en: The iOS Simulator bundled with Apple Developer Tools is a great platform to
    test different functionalities. However, performance can be misleading in the
    simulator itself. Performance is a crucial factor in game development, so testing
    on a real device should be a priority.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 随附于 Apple 开发者工具的 iOS 模拟器是一个测试不同功能的好平台。然而，模拟器本身的性能可能会误导。性能是游戏开发中的一个关键因素，因此在实际设备上进行测试应该是优先考虑的。
- en: Depending on the performance of your Mac, apps on the iOS simulator can run
    from terribly slow to quite fast. All in all, don't take the performance in the
    simulator as a reference to how well the game is going to perform on real devices.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的 Mac 性能，iOS 模拟器上的应用程序运行速度可能从极慢到相当快。总的来说，不要将模拟器中的性能作为游戏在实际设备上表现良好的参考。
- en: For more information on the iOS developer program and Apple developer accounts,
    go to [https://developer.apple.com/](https://developer.apple.com/).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 iOS 开发者计划和 Apple 开发者账户的更多信息，请访问 [https://developer.apple.com/](https://developer.apple.com/)。
- en: Downloading Xcode
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载 Xcode
- en: '**Xcode** is the default integrated-development environment for developing
    everything related to Mac and iOS. Xcode is available for free and the latest
    version—at the time of writing this book—is 5.0.2.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**Xcode** 是开发与 Mac 和 iOS 相关所有内容的默认集成开发环境。Xcode 可免费获取，书写此书时的最新版本是 5.0.2。'
- en: The first step is to download Xcode from the Mac App Store. Click on the Mac
    App Store icon from the dock to open the Mac App Store.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是从 Mac App Store 下载 Xcode。点击 dock 上的 Mac App Store 图标以打开 Mac App Store。
- en: Search `Xcode` using the search box and select the appropriate result.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用搜索框搜索 `Xcode` 并选择适当的结果。
- en: 'The store page might look something like the following screenshot:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 商店页面可能看起来如下截图所示：
- en: '![Downloading Xcode](img/1509_01_01.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![下载 Xcode](img/1509_01_01.jpg)'
- en: Click on the **Install** button right under the logo. (If Xcode is already installed,
    the caption of the button changes to **Installed**.) The download is around 2.6
    GB, so it may take a while depending on the speed of your Internet connection.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 点击位于标志正下方的 **安装** 按钮。（如果 Xcode 已经安装，按钮的标题将更改为 **已安装**。）下载大小约为 2.6 GB，因此根据您的网络连接速度，可能需要一段时间。
- en: It's always a good idea to keep the Xcode installation up to date as updates
    are frequent.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 总是保持 Xcode 安装更新到最新是一个好主意，因为更新很频繁。
- en: Downloading Sparrow
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载 Sparrow
- en: Now that Xcode is installed and ready to go, the next step is to get the latest
    stable version of Sparrow. Go to the official Sparrow homepage at [http://sparrow-framework.org](http://sparrow-framework.org)
    or [http://gamua.com/sparrow/](http://gamua.com/sparrow/).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在 Xcode 已经安装并准备就绪，下一步是获取 Sparrow 的最新稳定版本。访问 Sparrow 的官方主页 [http://sparrow-framework.org](http://sparrow-framework.org)
    或 [http://gamua.com/sparrow/](http://gamua.com/sparrow/)。
- en: 'The latest Sparrow version—at the time of writing this book—is 2.0.1\. The
    download page will look like the following screenshot:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 书写此书时的最新 Sparrow 版本是 2.0.1。下载页面看起来可能如下截图所示：
- en: '![Downloading Sparrow](img/1509_01_02.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![下载 Sparrow](img/1509_01_02.jpg)'
- en: Click on the big blue **Download** button and the download should start.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 点击大蓝色 **下载** 按钮，下载应该就会开始。
- en: Cloning the Git repository
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 克隆 Git 仓库
- en: If you are familiar with the version control system Git, you can also get the
    latest version by cloning the Git repository. This section is meant for advanced
    users who have already worked with Git.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您熟悉版本控制系统 Git，您也可以通过克隆 Git 仓库来获取最新版本。本节是为已经使用过 Git 的高级用户准备的。
- en: 'The Sparrow GitHub repository is located at [https://github.com/Gamua/Sparrow-Framework/](https://github.com/Gamua/Sparrow-Framework/),
    where more information on the procedure can be found. Typically, Git commands
    are entered in the terminal:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Sparrow 的 GitHub 仓库位于 [https://github.com/Gamua/Sparrow-Framework/](https://github.com/Gamua/Sparrow-Framework/)，有关流程的更多信息可以在那里找到。通常，Git
    命令在终端中输入：
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This will take a while to download; the current progress is being shown in the
    terminal. After the download is complete, you will have the latest development
    version. Only use this version if you want to test a specific feature of Sparrow
    before its release or if you are feeling adventurous.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 下载可能需要一些时间；当前进度在终端中显示。下载完成后，您将拥有最新的开发版本。只有当您想在 Sparrow 发布前测试其特定功能或您喜欢冒险时才使用此版本。
- en: Never use this version for production code in games about to be released on
    Apple's App Store.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 请勿使用此版本为即将在苹果 App Store 上发布的游戏的生产代码。
- en: 'To get the latest stable version of Sparrow, check out the stable tag:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取 Sparrow 的最新稳定版本，请查看稳定标签：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now we can update to the latest version if we want to.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果我们想更新到最新版本，我们可以这样做。
- en: Contents of the Sparrow package
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Sparrow 包的内容
- en: 'After the download has finished, extract the file to a location of your choice.
    We can use the unpacker that is included in Mac OS X by default, but any third-party
    unpacker should work as well. Let''s take a look at the following screenshot to
    see what the Sparrow package has to offer:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，将文件解压到您选择的地点。我们可以使用 Mac OS X 默认包含的解压程序，但任何第三方解压程序也应该可以工作。让我们看一下以下截图，看看
    Sparrow 包提供了哪些内容：
- en: '![Contents of the Sparrow package](img/1509_01_03.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![Sparrow 包的内容](img/1509_01_03.jpg)'
- en: The samples folder
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`samples` 文件夹'
- en: 'The `samples` folder consists of three subfolders, and they are as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`samples` 文件夹包含三个子文件夹，具体如下：'
- en: '`barebone`: This is a bare minimum project and a good start for creating your
    own games and will serve as the template for our game as well'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`barebone`：这是一个最小化项目，是创建您自己的游戏的好起点，也将作为我们游戏的模板'
- en: '`demo`: This is a sample application showcasing many of the features found
    within Sparrow'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`demo`：这是一个展示 Sparrow 中许多功能的示例应用程序'
- en: '`scaffold`: The scaffold template provides some base classes and more boilerplate
    code than the `barebone` example'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scaffold`：该模板提供了一些基础类和比 `barebone` 示例更多的样板代码'
- en: The sparrow folder
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`sparrow` 文件夹'
- en: 'The `sparrow` folder has three subfolders, and they are as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`sparrow` 文件夹包含三个子文件夹，具体如下：'
- en: '`doc`: This has a script to generate the documentation'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`doc`：这个脚本用于生成文档'
- en: '`src`: This is the entire source of the Sparrow framework itself'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`src`：这是 Sparrow 框架本身的全部源代码'
- en: '`util`: This has different command-line tools which will help our workflow
    when dealing with graphic assets'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`util`：这个文件夹包含不同的命令行工具，这些工具将帮助我们处理图形资源时的工作流程'
- en: Markdown files in the root folder
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 根目录下的 Markdown 文件
- en: 'Markdown files are, in essence, text files that can be rendered into HTML files.
    They are as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Markdown 文件本质上是可以渲染成 HTML 文件的文本文件。具体如下：
- en: '`BUILDING.md`: This gives a quick start on how to use the library'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`BUILDING.md`：这提供了如何使用库的快速入门指南'
- en: '`CHANGELOG.md`: This gives a detailed list of items on what exactly changed
    between the versions'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CHANGELOG.md`：这提供了详细的项目列表，说明了版本之间的具体变化'
- en: '`LICENSE.md`: This is the license Sparrow uses'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LICENSE.md`：这是 Sparrow 使用的许可协议'
- en: '`README.md`: This is a short introduction into what Sparrow is'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`README.md`：这是一篇简短的介绍，介绍了 Sparrow 是什么'
- en: License
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: License
- en: Sparrow is a free and open source software, which means its source can be viewed
    and modified by anyone.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Sparrow 是一款免费且开源的软件，这意味着其源代码可以被任何人查看和修改。
- en: Like many other pieces of software in the Mac/iOS universe, Sparrow is licensed
    under an unmodified two-clause Simplified BSD license, which allows us to use
    Sparrow as long as the copyright notice, the list of conditions, and the disclaimer
    is distributed with the source or the application.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 和 Mac/iOS 宇宙中的许多其他软件一样，Sparrow 在未经修改的两条款简化版 BSD 许可证下授权，这意味着只要版权声明、条件列表和免责声明与源代码或应用程序一起分发，我们就可以使用
    Sparrow。
- en: Note
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Note
- en: What does this mean if we were to modify the source code?
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们要修改源代码，这意味着什么？
- en: The modified source code must have the same `LICENSE.md` file and the contents
    of this file are not allowed to change.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 修改后的源代码必须包含相同的 `LICENSE.md` 文件，且该文件的内容不允许更改。
- en: What does this mean if we were to develop a game with Sparrow and distribute
    the game on the Apple App Store?
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们要使用 Sparrow 开发游戏并在苹果的 App Store 上分发游戏，这意味着什么？
- en: The game needs to have the contents of `LICENSE.md` present in the game itself.
    Having the contents of the file in the options or credits screen is a valid solution.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏需要将 `LICENSE.md` 文件的内容包含在游戏本身中。在选项或致谢屏幕中包含文件内容也是一个有效的解决方案。
- en: Setting up Sparrow
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Sparrow
- en: There are two different ways to set up Sparrow on your machine. The first is
    probably the easiest way to set up Sparrow.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的机器上设置 Sparrow 有两种不同的方式。第一种可能是设置 Sparrow 最简单的方法。
- en: The second option is to use **CocoaPods**, a dependency management system for
    Objective-C. CocoaPods is probably the better way to go in the long run, especially
    when working with large-scale projects and more than one dependency. Setting up
    CocoaPods takes a bit longer than the first option and requires some knowledge
    on how to use the terminal.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种选项是使用**CocoaPods**，这是一个 Objective-C 的依赖管理系统。从长远来看，CocoaPods 可能是更好的选择，尤其是在处理大型项目和多个依赖项时。设置
    CocoaPods 比第一个选项需要更长的时间，并且需要一些关于如何使用终端的知识。
- en: While these options are not mutually exclusive, it's best to try out both and
    stick with the one that appeals the most.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这些选项不是相互排斥的，但最好都尝试一下，并坚持使用最吸引你的那个。
- en: Option 1 – source tree reference
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选项 1 - 源树引用
- en: First, copy the `sparrow` folder inside the downloaded folder to a location
    of your choice. Refrain from using spaces in your folder names, as Xcode can't
    really handle them in source trees.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，将下载文件夹内的`sparrow`文件夹复制到您选择的位置。请勿在文件夹名称中使用空格，因为 Xcode 实际上无法在源树中处理它们。
- en: Time for action – adding Sparrow as a source tree reference
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 将 Sparrow 添加为源树引用
- en: 'To add Sparrow as a source tree reference, follow these steps:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 Sparrow 添加为源树引用，请按照以下步骤操作：
- en: Open Xcode.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Xcode。
- en: Open the Xcode settings through **Xcode** at the top menu bar and then click
    on **Preferences…**.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过顶部菜单栏的**Xcode**打开 Xcode 设置，然后点击**偏好设置…**。
- en: Navigate to **Locations**.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**位置**。
- en: Click on the **Source Trees** tab.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**源树**选项卡。
- en: Click on the plus (**+**) button to add a source tree item.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击加号（**+**）按钮添加一个源树项目。
- en: Enter `SPARROW_SRC` in the **Name** tab.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**名称**选项卡中输入`SPARROW_SRC`。
- en: Enter `Sparrow` in the **Display Name** tab. (Alternatively, using **SPARROW_SRC**
    as the display name works as well.)
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**显示名称**选项卡中输入 `Sparrow`。（或者使用**SPARROW_SRC**作为显示名称也是可以的。）
- en: Add the absolute path to where we put the `sparrow` folder. Let's not forget
    the `src` suffix.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将我们放置`sparrow`文件夹的绝对路径添加进去。别忘了`src`后缀。
- en: '![Time for action – adding Sparrow as a source tree reference](img/1509_01_04.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 - 添加 Sparrow 作为源树引用](img/1509_01_04.jpg)'
- en: '*What just happened?*'
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We added the Sparrow source location as a source tree item in Xcode. This only
    has to be done once, as all Sparrow projects use this source tree item.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将 Sparrow 源位置作为源树项目添加到 Xcode 中。这只需要做一次，因为所有 Sparrow 项目都使用这个源树项目。
- en: As the next step, we will set up our template which we are going to use throughout
    the book.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 作为下一步，我们将设置我们将贯穿整本书的模板。
- en: Time for action – using the barebone project as a template
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 使用裸骨项目作为模板
- en: 'Follow these steps to use the `barebone` project as a template:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤使用`barebone`项目作为模板：
- en: Copy the `barebone` application from **samples** | **barebone** to a location
    of your choice.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**samples** | **barebone**中的`barebone`应用程序复制到您选择的位置。
- en: Open up the project in Xcode by double-clicking on `Barebone.xcodeproj`.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过双击`Barebone.xcodeproj`打开 Xcode 中的项目。
- en: Click on the project name in the project navigator to make it editable.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击项目导航器中的项目名称以使其可编辑。
- en: Rename it to `PirateGame`.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其重命名为`PirateGame`。
- en: Open the **Product** menu from the top menu bar.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从顶部菜单栏打开**产品**菜单。
- en: Select **Scheme** and **Manage Schemes**.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**方案**和**管理方案**。
- en: Rename the **Scheme** name from **Barebone** to `PirateGame`.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**方案**名称从**Barebone**重命名为`PirateGame`。
- en: Run the project in the iOS Simulator by hitting the play button. Make sure **PirateGame**
    is selected and not **Sparrow**.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击播放按钮在 iOS 模拟器中运行项目。确保选择**PirateGame**而不是**Sparrow**。
- en: '![Time for action – using the barebone project as a template](img/1509_01_05.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 - 使用裸骨项目作为模板](img/1509_01_05.jpg)'
- en: '*What just happened?*'
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We copied the `barebone` Sparrow template and used it as a template for our
    game. We renamed all project and scheme references and ran the template in order
    to see if everything went ok.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们复制了`barebone` Sparrow 模板，并将其用作我们游戏的模板。我们重命名了所有项目和方案引用，并运行了模板以查看是否一切顺利。
- en: The indication for everything working as expected is when there are no errors
    while compiling the template and a red rectangle shows up on the screen.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 一切按预期工作时的指示是编译模板时没有错误，屏幕上出现一个红色矩形。
- en: Option 2 – CocoaPods
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选项 2 – CocoaPods
- en: CocoaPods is a dependency manager for Objective-C projects. It can handle Mac
    OS X and iOS dependencies alike and is similar to package managers of other systems.
    It can be compared to what Ruby's package manager RubyGems is to the Ruby platform
    or what NPM is to Node.js.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: CocoaPods 是 Objective-C 项目的依赖管理器。它可以处理 Mac OS X 和 iOS 依赖项，类似于其他系统的包管理器。它可以与
    Ruby 的包管理器 RubyGems 相比 Ruby 平台，或者与 NPM 相比 Node.js。
- en: CocoaPods needs Ruby and RubyGems to run, which is nothing to worry about, as
    both come preinstalled on every Mac OS X machine.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: CocoaPods 需要 Ruby 和 RubyGems 来运行，这没什么好担心的，因为它们都预安装在每台 Mac OS X 机器上。
- en: Before we begin installing CocoaPods, we need to make sure that the command-line
    tools are installed.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始安装 CocoaPods 之前，我们需要确保命令行工具已安装。
- en: Time for action – installing command-line tools
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 安装命令行工具
- en: 'To install command-line tools, follow these steps:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装命令行工具，请按照以下步骤操作：
- en: Open a terminal.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端。
- en: Enter `xcode-select` and press *Enter* to confirm.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `xcode-select` 并按 *Enter* 确认。
- en: A dialog will pop up if the command-line tools are not installed yet. If a dialog
    does not pop up, the command-line tools are already installed and there is nothing
    to do here.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果尚未安装命令行工具，将弹出一个对话框。如果没有弹出对话框，则命令行工具已安装，这里没有需要做的事情。
- en: Click on the **Install** button to continue as shown in the following screenshot:![Time
    for action – installing command-line tools](img/1509_01_06.jpg)
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如以下截图所示，单击 **安装** 按钮继续：![安装命令行工具的行动时间](img/1509_01_06.jpg)
- en: '*What just happened?*'
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: Before we can install CocoaPods, we need to have the latest version of the command-line
    tools.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们能够安装 CocoaPods 之前，我们需要确保有最新版本的命令行工具。
- en: If you want to trigger a reinstallation of the command-line tools regardless
    of whether they are already installed, this can be achieved by entering `xcode-select
    --install`.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想触发命令行工具的重新安装，无论它们是否已安装，可以通过输入 `xcode-select --install` 来实现。
- en: Now that the command-line tools are installed, we can begin with the CocoaPods
    installation.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在命令行工具已安装，我们可以开始安装 CocoaPods。
- en: Time for action – installing CocoaPods
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 安装 CocoaPods
- en: 'To install CocoaPods, follow these steps:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 CocoaPods，请按照以下步骤操作：
- en: Open a terminal.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端。
- en: Enter `sudo gem update –system` and press *Enter* to confirm.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `sudo gem update –system` 并按 *Enter* 确认。
- en: Enter `sudo gem install cocoapods`.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `sudo gem install cocoapods`。
- en: Enter `pod setup`. This may take a long time, so be patient.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `pod setup`。这可能需要很长时间，所以请耐心等待。
- en: '![Time for action – installing CocoaPods](img/1509_01_07.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![安装 CocoaPods 的行动时间 – 安装 CocoaPods](img/1509_01_07.jpg)'
- en: '*What just happened?*'
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: As CocoaPods needs to be installed using the command line, our requirement is
    to have a terminal window opened.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 CocoaPods 需要通过命令行安装，我们的要求是打开一个终端窗口。
- en: In the second step, we are going to update RubyGems to the latest available
    version.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二步中，我们将更新 RubyGems 到最新可用版本。
- en: After that, we trigger the installation of CocoaPods. This also installs all
    dependencies. If there is a conflict, we get a prompt to deal with this conflict.
    If you are unsure about what to do, just press *Enter* in this case and the safest
    option will be chosen.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们触发 CocoaPods 的安装。这也会安装所有依赖项。如果有冲突，我们会收到提示来处理这个冲突。如果您不确定该怎么做，在这种情况下只需按 *Enter*，最安全的选项将被选择。
- en: The last step is necessary in order to set up CocoaPods. It's recommended to
    run this command from time to time as it updates the local repository with all
    the latest specifications of libraries that can be used.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是设置 CocoaPods 所必需的。建议时不时地运行此命令，因为它会更新本地仓库，包含所有可用的最新库规范。
- en: Now that CocoaPods is installed, we can go ahead and set up our Sparrow template.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在 CocoaPods 已安装，我们可以继续设置我们的 Sparrow 模板。
- en: Time for action – using the barebone project as a template
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 将 barebone 项目作为模板使用
- en: 'Follow these steps to use the `barebone` project as a template:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤使用 `barebone` 项目作为模板：
- en: Copy the `barebone` application from **samples** | **barebone** to a location
    of your choice.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **samples** | **barebone** 中的 `barebone` 应用程序复制到您选择的位置。
- en: Open the Xcode project.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Xcode 项目。
- en: Click on the project name in the project navigator to make it editable.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中单击项目名称以使其可编辑。
- en: Rename it to `PirateGame`.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其重命名为 `PirateGame`。
- en: Open the **Product** menu from the top menu bar.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从顶部菜单栏打开 **Product** 菜单。
- en: Select **Scheme** and **Manage Schemes**.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **Scheme** 和 **Manage Schemes**。
- en: Rename the **Scheme** name from **Barebone** to `PirateGame`.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **Scheme** 名称从 **Barebone** 更改为 `PirateGame`。
- en: Close Xcode.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭 Xcode。
- en: Open any text editor.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开任何文本编辑器。
- en: 'Type in the following code:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下代码：
- en: '[PRE2]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Save the file as `Podfile` in the recently copied `barebone` folder on the same
    level as the Xcode project file. If you are using TextEdit (OS X default text
    editor), make sure to save the file in the plain format which can be done by changing
    **Format** to **Make Plain Text** in the menu. Also disable **Smart Quotes** by
    navigating to **TextEdit** | **Preferences…**.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为 `Podfile`，在最近复制的 `barebone` 文件夹中，与 Xcode 项目文件在同一级别。如果您使用的是 TextEdit（OS
    X 默认文本编辑器），请确保以纯文本格式保存文件，这可以通过在菜单中将 **Format** 更改为 **Make Plain Text** 来完成。另外，通过导航到
    **TextEdit** | **Preferences…** 来禁用 **Smart Quotes**。
- en: Open a terminal.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端。
- en: Navigate to the copied `barebone` folder.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到复制的 `barebone` 文件夹。
- en: Execute the `pod install` command in the terminal.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中执行 `pod install` 命令。
- en: Open `PirateGame.xcworkspace` with Xcode.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Xcode 打开 `PirateGame.xcworkspace`。
- en: Remove `Sparrow.xcodeproj` from the project by right-clicking on it and selecting
    **Delete**.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过右键单击并选择 **Delete** 来从项目中移除 `Sparrow.xcodeproj`。
- en: Run the project in the iOS Simulator by hitting the play button. If there are
    any errors, try to change the **Build Settings** in the configuration by changing
    **recursive** to **non-recursive** in **User Header Search Paths**.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击播放按钮在 iOS 模拟器中运行项目。如果有任何错误，尝试通过在配置中更改 **User Header Search Paths** 中的 **recursive**
    为 **non-recursive** 来更改 **Build Settings**。
- en: '![Time for action – using the barebone project as a template](img/1509_01_05.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![使用裸骨项目作为模板的行动时间 – img/1509_01_05.jpg](img/1509_01_05.jpg)'
- en: '*What just happened?*'
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We copied the barebone Sparrow template and used it as a template for our game.
    We renamed all project and scheme references.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们复制了裸骨 Sparrow 模板并将其用作游戏的模板。我们重命名了所有项目和方案引用。
- en: We then needed to close Xcode, as CocoaPods will generate some files and we
    didn't want Xcode to interfere with the process.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们当时需要关闭 Xcode，因为 CocoaPods 将生成一些文件，我们不希望 Xcode 干扰这个过程。
- en: In the next step, we had to define `Podfile`, which is the specification file
    for CocoaPods. This file tells CocoaPods which dependencies to fetch.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们必须定义 `Podfile`，这是 CocoaPods 的规范文件。此文件告诉 CocoaPods 要获取哪些依赖项。
- en: The specifications are written in Ruby, but they are easily understandable even
    to those who don't know the Ruby programming language.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 规范是用 Ruby 编写的，但对于不了解 Ruby 编程语言的人来说也很容易理解。
- en: The first statement sets the dependencies for the iOS platform. As mentioned
    earlier, CocoaPods can handle Mac OS and iOS dependencies even in the same project,
    so it makes sense for it to have a statement separating one from the other. As
    we are only targeting iOS, we don't need to worry about Mac OS dependencies and
    we leave that one out.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 第一条语句设置了 iOS 平台的依赖项。如前所述，CocoaPods 可以处理同一项目中的 Mac OS 和 iOS 依赖项，因此它有一个语句来区分它们是有意义的。因为我们只针对
    iOS，所以我们不需要担心 Mac OS 依赖项，所以我们将其省略。
- en: The second part of the `Podfile` in our example has all the dependencies we
    need in our project. As we only have one dependency—which is Sparrow—we only need
    to define that one.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，`Podfile` 的第二部分包含了我们项目中需要的所有依赖项。因为我们只有一个依赖项——Sparrow，所以我们只需要定义这一个。
- en: 'A dependency is written in the following format:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖项的格式如下：
- en: '[PRE3]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The repository with all dependencies and versions currently available can be
    found on GitHub at [https://github.com/CocoaPods/Specs](https://github.com/CocoaPods/Specs).
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 所有当前可用的依赖项和版本的存储库可以在 GitHub 上找到，网址为 [https://github.com/CocoaPods/Specs](https://github.com/CocoaPods/Specs)。
- en: After our `Podfile` is written and saved, we need to get back to the terminal
    and let CocoaPods fetch our dependencies which is what `pod install` does. CocoaPods
    also generates a `Pod` folder which is where all dependencies are stored as well
    as an Xcode workspace.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的 `Podfile` 编写并保存后，我们需要回到终端，并让 CocoaPods 获取我们的依赖项，这就是 `pod install` 命令所做的事情。CocoaPods
    还会生成一个 `Pod` 文件夹，所有依赖项都存储在这里，以及一个 Xcode 工作空间。
- en: From now on, instead of opening the project file, we need to open the workspace
    file as this is what CocoaPods updates and maintains.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，我们不需要打开项目文件，而是需要打开工作空间文件，因为这是 CocoaPods 更新和维护的地方。
- en: If we were to open the project file and try to run the application, the application
    would fail to compile.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们打开项目文件并尝试运行应用程序，应用程序将无法编译。
- en: As the last step, we run our example. The indication that everything worked
    fine is when there are no errors while compiling the template and a red rectangle
    shows up on the screen.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最后一步，我们运行我们的示例。一切正常工作的指示是编译模板时没有错误，并且屏幕上出现一个红色矩形。
- en: Running the template on the actual device
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在实际设备上运行模板
- en: Even though our template is still a bit basic, we can run it on an actual device.
    For this section, we'll need an Apple developer account and we will need to be
    a member of the iOS Developer Program.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们的模板仍然有点基础，但我们可以在实际设备上运行它。对于本节，我们需要一个 Apple 开发者账户，并且我们需要成为 iOS 开发者计划的成员。
- en: Time for action – running the template on the actual device
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 在实际设备上运行模板
- en: 'To run the template on the actual device, follow these steps:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 要在实际设备上运行模板，请按照以下步骤操作：
- en: Open the Xcode settings through **Xcode** at the top menu bar and then click
    on **Preferences…**.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过顶部菜单栏的 **Xcode** 打开 Xcode 设置，然后点击 **偏好设置…**。
- en: Navigate to **Accounts**.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **账户**。
- en: Click on the plus icon to add a new account.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击加号图标添加一个新账户。
- en: Select **Add Apple ID…** from the menu.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从菜单中选择 **添加 Apple ID…**。
- en: Enter the required credentials and confirm by clicking on **Add**.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入所需的凭据，并通过点击 **添加** 来确认。
- en: Connect your device to your Mac.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的设备连接到您的 Mac。
- en: Open the Xcode organizer by going to **Window** | **Organizer** to check whether
    the device has been successfully detected.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过转到 **窗口** | **组织者** 打开 Xcode 组织者，以检查设备是否已成功检测到。
- en: Select the device from the menu by clicking on the application name and selecting
    the correct device.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击应用程序名称并选择正确的设备来从菜单中选择设备。
- en: Run the project by hitting the play button.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击播放按钮运行项目。
- en: '![Time for action – running the template on the actual device](img/1509_01_05.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 – 在实际设备上运行模板](img/1509_01_05.jpg)'
- en: '*What just happened?*'
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We connected a device to our Mac, and set the build configuration to the device
    so that the application would run on the device instead of the simulator.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将一个设备连接到我们的 Mac，并将构建配置设置为设备，以便应用程序在设备上运行而不是在模拟器上。
- en: As expected, the red rectangle should be successfully displayed on the device
    as it did on the simulator.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期的那样，红色矩形应该成功显示在设备上，就像在模拟器上一样。
- en: Getting Sparrow documentation files
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取 Sparrow 文档文件
- en: The Sparrow framework features documentation, also known as a docset, which
    can be integrated in order to get additional information on Sparrow classes and
    methods.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: Sparrow 框架具有文档功能，也称为 docset，可以集成以获取有关 Sparrow 类和方法的更多信息。
- en: To add a docset for Xcode 5, a free application called **Docs for Xcode** is
    necessary and can be downloaded from the Mac App Store. More information on Docs
    for Xcode can be found at [http://documancer.com/xcode/](http://documancer.com/xcode/).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 要为 Xcode 5 添加 docset，需要一个名为 **Docs for Xcode** 的免费应用程序，可以从 Mac App Store 下载。有关
    Docs for Xcode 的更多信息，请参阅 [http://documancer.com/xcode/](http://documancer.com/xcode/)。
- en: Time for action – adding the Sparrow API documentation to Xcode
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 将 Sparrow API 文档添加到 Xcode
- en: 'To add the Sparrow API documentation, just follow these easy steps:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加 Sparrow API 文档，只需按照以下简单步骤操作：
- en: Open Docs for Xcode (if you launch Docs for Xcode for the first time, grant
    it the access to the documentation folder).
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Docs for Xcode（如果您第一次启动 Docs for Xcode，请授予它对文档文件夹的访问权限）。
- en: Click on **Add Feed**.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **添加订阅**。
- en: Enter `http://doc.sparrow-framework.org/core/feed/docset.atom` in the text field
    and confirm by clicking on **Add**.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本框中输入 `http://doc.sparrow-framework.org/core/feed/docset.atom` 并通过点击 **添加**
    来确认。
- en: Restart Xcode (or open Xcode if Xcode was already closed).
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新启动 Xcode（如果 Xcode 已经关闭，请先打开）。
- en: Open a Sparrow project and open the inline documentation by pressing the *Alt*
    button and clicking on any class name or method.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个 Sparrow 项目，通过按 *Alt* 键并点击任何类名或方法来打开内联文档。
- en: '![Time for action – adding the Sparrow API documentation to Xcode](img/1509_01_08.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 – 将 Sparrow API 文档添加到 Xcode](img/1509_01_08.jpg)'
- en: '*What just happened?*'
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We added a docset feed in Docs for Xcode so that we get more precise and always
    up-to-date documentation when developing with Sparrow.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 Xcode 的 Docs 中添加了一个 docset 资源订阅，这样在用 Sparrow 开发时，我们可以获得更精确且始终更新的文档。
- en: The idea for the game
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 游戏的想法
- en: 'Finding the right idea for a game can be quite tricky. As a rule of thumb,
    find something to be excited about and something you might want to play yourself.
    A good motivation is playing games and finding bits and pieces that you really
    like or that can be improved. One thing is for certain: do not clone. Don''t make
    clones, make something original instead.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 找到适合游戏的好想法可能相当棘手。一般来说，找到让你兴奋的东西，以及你可能想玩的东西。一个好的动机是玩游戏，找到你真的很喜欢或可以改进的片段。有一点是肯定的：不要克隆。不要制作克隆，而是创造一些原创的东西。
- en: Tip
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Finding game ideas**'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '**寻找游戏想法**'
- en: Probably the best way to find game ideas is during game jams, where you get
    to develop a game in a very short time frame. One of the more popular ones is
    Ludum Dare ([http://www.ludumdare.com/compo/](http://www.ludumdare.com/compo/))
    and Global Game Jam ([http://globalgamejam.org/](http://globalgamejam.org/)).
    The first one is an online solo competition whereas at Global Game Jam you have
    to work in teams. What both game jams have in common is a theme that is provided
    and should be used by all entrants.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 可能最好的找到游戏想法的方式是在游戏节期间，那时你可以在非常短的时间内开发一个游戏。其中最受欢迎的是 Ludum Dare ([http://www.ludumdare.com/compo/](http://www.ludumdare.com/compo/))
    和 Global Game Jam ([http://globalgamejam.org/](http://globalgamejam.org/))。第一个是一个在线单人竞赛，而
    Global Game Jam 你需要团队合作。这两个游戏节共同的特点是提供了一个主题，所有参赛者都应该使用这个主题。
- en: For a less competitive approach, you might also want to check the Twitter `@PeterMolydeux`,
    which is a parody account of Peter Molyneux, the creative mind behind Fable, Black
    & White, and Populous. There are tweets about completely crazy and/or funny game
    ideas, most of which would be very fun to play.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 对于不那么具有竞争力的方法，你也可以查看 Twitter `@PeterMolydeux`，这是一个 Fable、Black & White 和 Populous
    的创意大脑 Peter Molyneux 的讽刺账户。有一些关于完全疯狂和/或有趣的游戏想法的推文，其中大多数都会非常有趣。
- en: The kind of game we are developing is something a bit like an action game with
    role-playing game elements. The player is going to control a ship full of pirates
    who are waiting for ships to attack, seize, and scavenge.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在开发的游戏类型是一种有点像动作游戏的角色扮演游戏元素。玩家将控制一艘装满海盗的船，这些海盗正在等待船只攻击、夺取和掠夺。
- en: After each mission, we'll get back to the pirate cove and buy better items such
    as cannonballs or hire a more experienced crew. Our game will be called "A Practical
    Survival Guide for Pirates". However, as the name is long, we'll just leave the
    game template name as "PirateGame".
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在每次任务之后，我们将回到海盗湾，购买更好的物品，如炮弹，或者雇佣一个更有经验的船员。我们的游戏将被称为 "海盗生存实用指南"。然而，由于名字太长，我们只将游戏模板名称保留为
    "PirateGame"。
- en: Setting goals and expectations
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设定目标和期望
- en: It's always a good idea to have some kind of plan. While most of game development
    is iterative, it doesn't hurt to communicate the vision of the game.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 制定某种计划总是一个好主意。虽然大多数游戏开发都是迭代的，但传达游戏愿景并没有什么坏处。
- en: The most important thing when developing is to remember the scope. It's very
    important to keep the scope as small as possible; in most situations, you still
    have to cut gameplay elements out in latter stages of the development cycle.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发过程中，最重要的是记住范围。尽可能保持范围尽可能小非常重要；在大多数情况下，你仍然需要在开发周期的后期阶段削减游戏元素。
- en: So saying we are going to create the next *Angry Birds* with more levels is
    probably as unrealistic as saying we're going to develop the next *World of WarCraft*
    just with more weapons and quests.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 说我们要创造下一个拥有更多级别的 *愤怒的小鸟*，可能和说我们要仅通过更多武器和任务来开发下一个 *魔兽世界* 一样不切实际。
- en: 'Let''s put our goals and expectations into a list. The following is the list
    of goals we have for this book:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们把我们的目标和期望列成一个清单。以下是这本书我们设定的目标清单：
- en: Finished game by the end of the book
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 书末完成的游戏
- en: Gained an understanding of development with Sparrow
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对 Sparrow 的开发有了理解
- en: Examples are relevant for game development and working with Sparrow
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例子对于游戏开发和与 Sparrow 合作是相关的
- en: 'The following is the list of expectations we have out of this book:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们对这本书的期望列表：
- en: The game is polished enough so that it can be published to the Apple App Store
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 游戏已经足够完善，可以发布到苹果应用商店
- en: The game is fun to play
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 游戏很有趣
- en: Examining our gameplay elements
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查我们的游戏元素
- en: Most independent games generally focus on a single mechanic and polish it to
    the maximum. *Tiny Wings* and *Snapshot* are good examples.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数独立游戏通常专注于一个机制，并将其打磨到极致。"小鸟飞" 和 "快照" 是很好的例子。
- en: As with all software, there is always the danger of becoming a feature creep,
    which means adding all kinds of features during development without planning for
    it or balancing. In the end, the game might have all the features we want, but
    these features might be mutually exclusive and the game might not be fun.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 就像所有软件一样，总会有变成功能膨胀的危险，这意味着在开发过程中添加各种功能，而没有计划或平衡。最终，游戏可能拥有我们想要的所有功能，但这些功能可能相互排斥，游戏可能不会有趣。
- en: 'So keeping in mind the scope and limitations, let''s make a list with our features
    and gameplay elements for our game:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，考虑到范围和限制，让我们列出我们游戏的功能和游戏元素列表：
- en: Attacking enemy ships
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 攻击敌舰
- en: Collecting loot from enemy ships
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从敌舰收集战利品
- en: Upgrading ship equipments
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级舰船装备
- en: Hiring new crew members
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 招募新船员
- en: Code conventions
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码规范
- en: Before we head into our first lines of code, we should take a moment and settle
    on code conventions for all code examples. The most used code guideline in the
    Objective-C world is the one made by Apple, which we are going to follow as closely
    as possible.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编写第一行代码之前，我们应该花点时间确定所有代码示例的代码规范。在Objective-C世界中，最常用的代码规范是由苹果公司制定的，我们将尽可能地遵循。
- en: 'The most important conventions to remember are as follows:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 需要记住的最重要规范如下：
- en: Keep all method names in camel case (as in `myMethodName`)
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持所有方法名使用驼峰命名法（如`myMethodName`）
- en: The method names should be descriptive
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方法名应该是描述性的
- en: Don't abbreviate method names
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要缩写方法名
- en: Instance variables should be prefixed with an underscore
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例变量应该以下划线开头
- en: The complete guideline for these conventions is available at [https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/CodingGuidelines/CodingGuidelines.html](https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/CodingGuidelines/CodingGuidelines.html).
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 这些规范的完整指南可在[https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/CodingGuidelines/CodingGuidelines.html](https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/CodingGuidelines/CodingGuidelines.html)找到。
- en: Pop quiz
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验
- en: Q1\. What is the Sparrow Framework?
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: Q1. Sparrow框架是什么？
- en: A game framework for 2D games
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个用于2D游戏的框架
- en: A 3D graphics engine
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个3D图形引擎
- en: A scene graph library
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个场景图库
- en: Q2\. What is CocoaPods?
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: Q2. CocoaPods是什么？
- en: Source control for Objective-C
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Objective-C的源代码控制
- en: An add-on library for Cocoa
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Cocoa的附加库
- en: A dependency manager for Objective-C packages
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Objective-C包的依赖管理器
- en: Q3\. In order to develop games with Sparrow 2.x, we need at least iOS 5.0 SDK
    and preferably an iPhone 3GS or a more recent device.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: Q3. 为了使用Sparrow 2.x开发游戏，我们需要至少iOS 5.0 SDK，最好是一个iPhone 3GS或更先进的设备。
- en: 'True'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真的
- en: 'False'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假的
- en: Summary
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We learned a lot in this chapter about setting up our development environment
    for Sparrow. Specifically, we covered how to set up Xcode, the Sparrow game framework,
    and creating our own game template.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们关于为Sparrow设置开发环境学到了很多。具体来说，我们涵盖了如何设置Xcode、Sparrow游戏框架以及创建我们自己的游戏模板。
- en: We also touched on some general game development topics and learned about dependency
    management with CocoaPods.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还涉及了一些通用的游戏开发主题，并学习了如何使用CocoaPods进行依赖管理。
- en: Now that we have a game template set up, we're ready to learn about display
    objects and how to use them—which is the topic of the next chapter.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置了游戏模板，我们准备好学习关于显示对象及其使用方法了——这是下一章的主题。
