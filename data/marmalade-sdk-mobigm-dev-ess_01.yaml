- en: Chapter 1. Getting Started with Marmalade
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章. Marmalade 入门
- en: 'In this chapter, we will first be learning how to get the Marmalade SDK set
    up for development. While Marmalade is available in both Windows and Mac versions,
    the Windows version is the most developed of the two and is what we shall be primarily
    covering in this book. By the end of this chapter, we will know how to do the
    following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将首先学习如何为开发设置 Marmalade SDK。虽然 Marmalade 既有 Windows 版本也有 Mac 版本，但 Windows
    版本是两个版本中开发最完善的，也是本书将主要涵盖的内容。在本章结束时，我们将知道如何完成以下操作：
- en: Set up a Windows PC for development using the Marmalade SDK
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Marmalade SDK 设置 Windows PC 以进行开发
- en: Create and build a "Hello World" project
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建并构建 "Hello World" 项目
- en: Deploy and run the "Hello World" project on several mobile platforms
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在多个移动平台上部署和运行 "Hello World" 项目
- en: So without further ado, let's get started!
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，无需多言，让我们开始吧！
- en: Installing the Marmalade SDK
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Marmalade SDK
- en: The following sections will show you how to get your PC set up for development
    using Marmalade, from installing a suitable development environment through to
    licensing, downloading, and installing your copy of Marmalade.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分将向您展示如何使用 Marmalade 将您的 PC 设置为开发环境，从安装合适的开发环境到许可、下载和安装您的 Marmalade 版本。
- en: Installing a development environment
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装开发环境
- en: 'Before we can start coding, we will first need to install a version of Microsoft''s
    Visual C++, which is the Windows development environment that Marmalade uses.
    If you don''t already have a version installed, you can download a copy for free.
    At the time of writing, the Express 2012 version had just been released but the
    most recent, free version directly supported by Marmalade was still Visual C++
    2010 Express, which can be downloaded from the following URL:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编码之前，我们首先需要安装 Microsoft Visual C++ 的一个版本，这是 Marmalade 使用的 Windows 开发环境。如果您还没有安装版本，您可以免费下载一个副本。在撰写本文时，Express
    2012 版本刚刚发布，但 Marmalade 直接支持的最新免费版本仍然是 Visual C++ 2010 Express，可以从以下 URL 下载：
- en: '[http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-cpp-express](http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-cpp-express)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-cpp-express](http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-cpp-express)'
- en: Follow the instructions on this web page to download and install the product.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 按照此网页上的说明下载和安装产品。
- en: Note
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For the Apple Mac version of Marmalade, the supported development environment
    is Xcode, which is available as a free download from the Mac App Store. In this
    book, we will be assuming that the Windows version of Marmalade will be used,
    unless specifically stated otherwise.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Marmalade 的 Apple Mac 版本，支持的开发环境是 Xcode，它可以从 Mac App Store 免费下载。在本书中，我们将假设使用的是
    Marmalade 的 Windows 版本，除非特别说明。
- en: Choosing your Marmalade license type
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择您的 Marmalade 许可类型
- en: 'With a suitable development environment in place, we can now get on to downloading
    Marmalade itself. First, you need to head over to the Marmalade website using
    the following URL:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置好合适的开发环境后，我们现在可以开始下载 Marmalade 本身。首先，您需要使用以下 URL 访问 Marmalade 网站：
- en: '[http://www.madewithmarmalade.com](http://www.madewithmarmalade.com)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.madewithmarmalade.com](http://www.madewithmarmalade.com)'
- en: 'At the top of the website are two buttons labeled **Buy** and **Free Trial**.
    Click on one of these (it doesn''t matter which, as they both go to the same place!)
    and you''ll see a page explaining the licensing options, which are also described
    in the following table:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 网站顶部有两个按钮，分别标有 **购买** 和 **免费试用**。点击其中一个（哪个都行，因为它们都指向同一个地方！）您将看到一个页面，解释许可选项，这些选项也在以下表格中描述：
- en: '| License type | Description |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 许可类型 | 描述 |'
- en: '| --- | --- |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Evaluation | This is free to use but is time limited (currently 45 days),
    and while you can deploy it to all supported platforms, you are not allowed to
    distribute the applications built with this version. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 评估版 | 这是免费的，但有时间限制（目前为 45 天），虽然您可以将其部署到所有支持的平台，但您不允许分发使用此版本构建的应用程序。 |'
- en: '| Community | This is the cheapest way of getting started with Marmalade, but
    you are limited to only being able to release it on iOS and Android, and your
    application will also feature a Marmalade splash screen on startup. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| Community | 这是开始使用 Marmalade 最低成本的方式，但您只能将其发布在 iOS 和 Android 上，并且您的应用程序在启动时也会显示
    Marmalade 启动画面。 |'
- en: '| Indie | This version removes the limitations of the basic license, with no
    splash screen and the ability to target any supported platform. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| Indie | 此版本消除了基本许可证的限制，没有启动画面，并且可以针对任何受支持的平台。|'
- en: '| Professional | This version adds dedicated support from Marmalade should
    you face any issues during development, and provides early access to the new versions
    of Marmalade. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| Professional | 此版本在开发过程中遇到任何问题时，提供Marmalade的专属支持，并允许提前访问Marmalade的新版本。|'
- en: When you have chosen the license level, you will first need to register with
    the Marmalade website by providing an e-mail address and password.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当您选择了许可证级别后，您首先需要通过提供电子邮件地址和密码在Marmalade网站上注册。
- en: Note
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The e-mail address you register will be linked to your license and will be used
    to activate it later. Make sure you use a valid e-mail address when registering.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您注册的电子邮件地址将与您的许可证相关联，并将在稍后用于激活。请确保在注册时使用有效的电子邮件地址。
- en: Once you are registered, you will be taken to a web page where you can choose
    the level of license you require. After confirming payment, you will be sent an
    e-mail that allows you to activate your license and download the Marmalade installer.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您完成注册，您将被带到网页，您可以在此选择所需的许可证级别。确认付款后，您将收到一封电子邮件，允许您激活许可证并下载Marmalade安装程序。
- en: Downloading and installing Marmalade
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载和安装Marmalade
- en: Now that you have a valid license, head back to the Marmalade website using
    the same URL we used earlier.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经拥有有效的许可证，请使用我们之前使用的相同URL返回Marmalade网站。
- en: If you are not already logged on to the website, do so using the **Login** link
    at the top-right corner of the web page.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您尚未登录到网站，请使用网页右上角的**登录**链接进行登录。
- en: Click on the **Download** button, and you will be taken to a page where you
    can download both the most recent and previous releases of the Marmalade installer.
    Click on the button for the version you require, to start downloading it. Once
    the download is complete, run the installer and follow the instructions. The installer
    will first ask you to accept the **End User License Agreement** by selecting a
    radio button, and will then ask for an installation location.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下载**按钮，您将被带到可以下载Marmalade安装程序最新和以前版本的页面。点击您所需的版本按钮，开始下载。下载完成后，运行安装程序并按照说明操作。安装程序将首先要求您通过选择单选按钮接受**最终用户许可协议**，然后要求输入安装位置。
- en: Next, enter the file location you want to install to. The default installation
    directory drops the minor revision number (so version 6.1.1 will be installed
    into a subdirectory called 6.1). You may want to add the minor revision number
    back in, to make it easier to have multiple versions of Marmalade installed at
    the same time.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，输入您想要安装的文件位置。默认安装目录会丢弃次要修订号（因此版本6.1.1将安装到名为6.1的子目录中）。您可能希望将次要修订号重新添加回去，以便更容易同时安装多个版本的Marmalade。
- en: Once the installer has finished copying the files to your hard drive, it will
    then display the Marmalade Configuration Utility, which is described in greater
    detail in the next section. Once the Configuration Utility has been closed, the
    installer will then offer you the option of launching some useful resources, such
    as the SDK documentation, before it exits.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦安装程序将文件复制到您的硬盘驱动器后，它将显示Marmalade配置实用程序，这在下一节中有更详细的描述。一旦配置实用程序关闭，安装程序将提供选项，在退出前启动一些有用的资源，例如SDK文档。
- en: Note
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It is possible to have more than one version of the Marmalade SDK installed
    at a time and switch between versions as you need, hence the advice regarding
    the installation directory. This becomes very useful when device-specific bugs
    are fixed in a new version of Marmalade, but you still need to support an older
    project that requires a different version of Marmalade.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 同时安装多个版本的Marmalade SDK并按需切换版本是可能的，因此有关安装目录的建议变得非常有用。当Marmalade的新版本修复了特定设备的bug，但您仍然需要支持需要不同版本Marmalade的旧项目时，这一点尤其有用。
- en: Using the Marmalade Configuration Utility
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Marmalade配置实用程序
- en: 'The **Marmalade Configuration Utility** window appears at the end of the installation
    process, but it can also be launched from its shortcut icon:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**Marmalade配置实用程序**窗口在安装过程结束时出现，但也可以通过其快捷图标启动：'
- en: '![Using the Marmalade Configuration Utility](img/3363_01_01.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![使用Marmalade配置实用程序](img/3363_01_01.jpg)'
- en: Note
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When launching the Marmalade Configuration Utility on Windows Vista or Windows
    7, you should right-click on the icon and select the **Run as administrator**
    option, otherwise any changes that you make might not be applied.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows Vista 或 Windows 7 上启动 Marmalade 配置实用程序时，您应该在图标上右键单击并选择 **以管理员身份运行**
    选项，否则您所做的任何更改可能不会被应用。
- en: 'The most important element is the **License Information** box. Below this is
    a button labeled **Activate License...** that allows you to activate your Marmalade
    installation. Follow these steps to get activated:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要元素是 **License Information** 框。在此框下方有一个标签为 **Activate License...** 的按钮，允许您激活您的
    Marmalade 安装。按照以下步骤进行激活：
- en: Click on the **Activate License...** button to display a dialog box that asks
    you to enter the e-mail address and password you used when obtaining your license.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Activate License...** 按钮以显示一个对话框，该对话框要求您输入您在获取许可证时使用的电子邮件地址和密码。
- en: The dialog box also has a drop-down box labeled **Machine ID (Ethernet MAC address)**,
    which you should make sure is set to the MAC address of an Ethernet port that
    will always be present on your computer. Normally you won't need to change this.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对话框还有一个带有标签 **Machine ID (Ethernet MAC address)** 的下拉框，您应该确保将其设置为始终存在于您计算机上的以太网端口的
    MAC 地址。通常您不需要更改此设置。
- en: Click on the **OK** button to connect to the Marmalade licensing server. You
    will be asked to select the license you want to install. (Normally there will
    only be a single option available.) Do so and click on **OK**.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **OK** 按钮连接到 Marmalade 许可证服务器。您将被要求选择您想要安装的许可证。（通常只有一个选项可用。）选择它并点击 **OK**。
- en: A summary of the **End User License Agreement** (**EULA**), appropriate to the
    type of license you are using, will be displayed, so click on **OK** to accept
    it. A reference to the full EULA is also provided in the dialog box.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将显示适用于您所使用许可证类型的 **End User License Agreement**（EULA）摘要，因此请点击 **OK** 以接受它。对话框中也提供了完整
    EULA 的引用。
- en: You should now see a message confirming successful license installation. At
    this point Marmalade is ready to go!
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在应该会看到一个确认成功安装许可证的消息。此时 Marmalade 准备就绪！
- en: Before we finish here though, let's look at the other available options. The
    first is labeled **Marmalade System (S3E) Base** and consists of a drop-down box
    that allows you to select the version of the Marmalade SDK you want to use, if
    you have more than one installed of course!
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们完成之前，让我们看看其他可用的选项。第一个选项标签为 **Marmalade System (S3E) Base**，它由一个下拉框组成，允许您选择您想要使用的
    Marmalade SDK 版本，当然，如果您安装了多个版本的话！
- en: Note
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: S3E is short for Segundo Embedded Execution Environment and this is the lowest
    layer of the Marmalade SDK. This naming convention was adopted by the SDK during
    its early days of development, and it remains to this day. As you will see later
    in this book, there are a great many APIs that are prefixed with this name.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: S3E 是 Segundo Embedded Execution Environment 的缩写，这是 Marmalade SDK 的最低层。这个命名约定是在
    SDK 开发初期采用的，并且一直沿用至今。正如您将在本书后面看到的那样，有许多以这个名称为前缀的 API。
- en: The **Default Build Environment** lets you choose which development environment
    you wish to use, assuming you have more than one supported version of Visual C++
    installed.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**Default Build Environment** 允许您选择您希望使用的开发环境，假设您安装了多个受支持的 Visual C++ 版本。'
- en: The drop-down box labeled **RVCT ARM Compiler** allows you to change the compiler
    that will be used when making a device build. (Most mobile devices contain an
    ARM CPU, so we must compile our code for this processor type.) Marmalade ships
    with the GCC compiler and uses this by default, but it can also make use of the
    RVCT C++ compiler from ARM, which is an additional purchase and can produce better
    optimized code. We normally do not need to change this setting and can leave it
    on the first option labeled **Do not use RVCT**.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 带有标签 **RVCT ARM Compiler** 的下拉框允许您更改在制作设备构建时将使用的编译器。（大多数移动设备都包含 ARM CPU，因此我们必须为这种处理器类型编译我们的代码。）Marmalade
    随 GCC 编译器一起发货，并默认使用它，但它也可以使用 ARM 的 RVCT C++ 编译器，这是一项额外购买，可以生成更好的优化代码。我们通常不需要更改此设置，可以将其保留在第一个选项
    **不使用 RVCT** 上。
- en: The **Advanced Options...** button provides access to a more verbose project-building
    option and also some experimental parts of the SDK. You will not normally need
    to make any changes here.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**Advanced Options...** 按钮提供了访问更详细的项目构建选项以及 SDK 的一些实验性部分。您通常不需要在此处进行任何更改。'
- en: Managing your Marmalade account and licenses
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理您的 Marmalade 账户和许可证
- en: Before we get on to doing some actual coding, it is worth mentioning how you
    can manage your Marmalade license and account. If you head back to the Marmalade
    website and log on, you'll notice a link at the top-right corner of the site labeled
    **My Account**.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始实际编码之前，值得提一下如何管理您的Marmalade许可证和账户。如果您回到Marmalade网站并登录，您会注意到网站右上角有一个标记为**我的账户**的链接。
- en: Hover your mouse pointer over this link, and a menu of options that allow you
    to change your account details and license usage will appear. The following sections
    provide further information on each of these options.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 将鼠标指针悬停在链接上，将出现一个选项菜单，允许您更改账户详情和许可证使用情况。以下各节提供了有关这些选项的更多信息。
- en: Viewing an overview of your account
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查看您的账户概览
- en: The menu option called **Overview** takes you to a page where you can see your
    personal details along with a summary of the number of licenses and users you
    have set up under your account. From this screen, there are buttons that allow
    you to update your profile, modify registered user information, buy new licenses,
    and manage existing ones.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单选项**概览**将带您到一个页面，您可以在其中查看您的个人详细信息以及您账户下设置的许可证和用户的总结。从该屏幕，有按钮允许您更新您的个人资料，修改注册用户信息，购买新的许可证，以及管理现有的许可证。
- en: Updating your profile information
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更新您的个人资料信息
- en: Clicking the **Profile** option in the **My Account** menu or clicking on the
    **Update Profile Information** button on the profile overview screen will display
    a page that allows you to alter information such as your name, contact information,
    address, and account login password. There is also a checkbox that allows you
    to sign up for e-mail news updates from Marmalade.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**我的账户**菜单中的**个人资料**选项或点击个人资料概览屏幕上的**更新个人资料信息**按钮，将显示一个页面，允许您更改诸如您的姓名、联系信息、地址和账户登录密码等信息。还有一个复选框，允许您订阅Marmalade的电子邮件新闻更新。
- en: Managing your licenses
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 管理您的许可证
- en: Clicking the **Licenses** link in the **My Account** menu or clicking on the
    button labeled **Manage** on the overview screen will take you to a page where
    you can upgrade the level of your license or buy further licenses for new team
    members.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**我的账户**菜单中的**许可证**链接或在概览屏幕上点击标记为**管理**的按钮，将带您到一个页面，您可以在其中升级许可证级别或为新的团队成员购买更多许可证。
- en: The **Manage Licenses** section at the bottom of this page shows all the currently
    active licenses in your account, and also allows you to release a license that
    is currently in use so that it can be transferred to another computer.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 本页底部的**管理许可证**部分显示了您账户中所有当前活跃的许可证，并允许您释放当前正在使用的许可证，以便将其转移到另一台电脑。
- en: Releasing a license is useful if you need to work on a different computer for
    some reason, or if you have a new development computer that you wish to transfer
    your license to. You can release a license as often as you like, but a single
    license can only be used on a single computer at a time.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要因某些原因在另一台电脑上工作，或者如果您有一台新的开发电脑希望将许可证转移到上面，那么释放许可证是有用的。您可以随时释放许可证，但单个许可证一次只能在一台电脑上使用。
- en: Managing your user list
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 管理您的用户列表
- en: If you are working in a team then you will obviously need more than one Marmalade
    license, but you also need to manage who has access to those licenses. Clicking
    on the **Users** option in the **My Account** menu or clicking on the **Manage
    Users** button on the overview page allows you to do this.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在一个团队中工作，那么您显然需要不止一个Marmalade许可证，但您还需要管理谁可以访问这些许可证。点击**我的账户**菜单中的**用户**选项或点击概览页面上的**管理用户**按钮，您就可以这样做。
- en: This page shows a list of all the users assigned to your account, and also has
    an **Invite Users** section that allows you to add new users to your account.
    Enter their e-mail addresses in the boxes provided, and click the **Send invite**
    button to send them a mail telling them how to activate their own Marmalade account.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 此页面显示分配给您的所有用户的列表，还有一个**邀请用户**部分，允许您将新用户添加到您的账户。在提供的框中输入他们的电子邮件地址，然后点击**发送邀请**按钮，发送一封邮件告诉他们如何激活他们自己的Marmalade账户。
- en: Creating a Marmalade project
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Marmalade项目
- en: With Marmalade installed, we can now get down to doing some coding, and what
    better place to start than with the classic example of a "Hello World" program.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了Marmalade后，我们现在可以开始进行一些编码工作了，还有什么比从经典的“Hello World”程序开始更好的地方呢。
- en: Creating the "Hello World" project
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建“Hello World”项目
- en: To begin a new project, we must first create an MKB file, which is Marmalade's
    own project file format. We use MKB files to specify all the source files, libraries,
    and build options needed to build our project.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始一个新的项目，我们首先必须创建一个 MKB 文件，这是 Marmalade 的自有项目文件格式。我们使用 MKB 文件来指定构建我们的项目所需的所有源文件、库和构建选项。
- en: The MKB file is actually used to generate a Visual C++ project file, but whenever
    we want to add or remove a source file to our project, we must do so by editing
    the MKB file and regenerating the Visual C++ project file from it using Marmalade's
    make file builder script, which we'll be looking at in just a moment.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: MKB 文件实际上用于生成一个 Visual C++ 项目文件，但每次我们想要向我们的项目添加或删除源文件时，我们必须通过编辑 MKB 文件，并使用 Marmalade
    的 makefile 构建脚本从它重新生成 Visual C++ 项目文件，我们将在稍后查看这个脚本。
- en: In addition to source files, the MKB file also allows you to list all the other
    datafiles and resource files that your application will need in order to run,
    as this information will be needed when it comes to deploying your application
    on different mobile platforms.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 除了源文件外，MKB 文件还允许你列出你的应用程序运行所需的所有其他数据文件和资源文件，因为这些信息在将你的应用程序部署到不同的移动平台时将会被需要。
- en: Marmalade does come with a small tool called the LaunchPad, which can be used
    to create a new project, but in the interest of learning how a Marmalade project
    is put together, we will go about creating everything from scratch instead.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Marmalade 确实附带了一个名为 LaunchPad 的小工具，可以用来创建新项目，但为了学习如何构建 Marmalade 项目，我们将从头开始创建一切。
- en: Tip
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.PacktPub.com](http://www.PacktPub.com). If you
    purchased this book elsewhere, you can visit [http://www.PacktPub.com/support](http://www.PacktPub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从你在 [http://www.PacktPub.com](http://www.PacktPub.com) 的账户中下载你购买的所有 Packt
    书籍的示例代码文件。如果你在其他地方购买了这本书，你可以访问 [http://www.PacktPub.com/support](http://www.PacktPub.com/support)
    并注册以直接将文件通过电子邮件发送给你。
- en: The MKB file for the "Hello World" project
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: “Hello World”项目的 MKB 文件
- en: 'Let''s make a start on our "Hello World" project. Create a new directory to
    hold the project files, and then create a file called `Hello.mkb` in this directory
    and enter the following into it:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从“Hello World”项目开始。创建一个新目录来存放项目文件，然后在这个目录中创建一个名为 `Hello.mkb` 的文件，并将以下内容输入到其中：
- en: '[PRE0]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The first section of `Hello.mkb` is the `subprojects` section, which lists all
    the additional code modules used by our application. In this instance, a code
    module is a library that can be added to our project either as a group of C or
    C++ source files or, alternatively, as pre-compiled, linkable object files accompanying
    header files. In the previous example, there is just one, `iwgx`, which is the
    Marmalade code module responsible for rendering graphics.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`Hello.mkb` 的第一个部分是 `subprojects` 部分，它列出了我们的应用程序使用的所有附加代码模块。在这个例子中，一个代码模块是一个可以作为一组
    C 或 C++ 源文件添加到我们的项目中的库，或者作为与头文件一起的预编译、可链接的对象文件。在先前的例子中，只有一个，`iwgx`，这是负责渲染图形的 Marmalade
    代码模块。'
- en: All the higher level modules within Marmalade are referenced in this manner,
    and you can also use this system to create your own modules to enable code re-use
    across projects. To create a subproject module we use an MKF file, which amounts
    to a little more than an MKB file with a different file extension! When we add
    an entry to the `subprojects` list, the Marmalade makefile builder script will
    search for a suitable MKF file that describes each subproject. We'll see detailed
    examples of how to do this later in the book.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Marmalade 中的所有高级模块都以这种方式引用，你也可以使用这个系统创建自己的模块，以实现跨项目代码的重用。要创建一个子项目模块，我们使用一个 MKF
    文件，这实际上比 MKB 文件多了一个不同的文件扩展名！当我们向 `subprojects` 列表中添加条目时，Marmalade 的 makefile 构建脚本将搜索一个合适的
    MKF 文件，该文件描述了每个子项目。我们将在本书后面的详细示例中看到如何做到这一点。
- en: The next section is labeled `files`, and this is where we list all the source
    code files for our project. It is possible to split your source files up into
    different directories. To make it easy, you simply put the directory name in brackets
    (`(source)` in our example) and then list all the source files in the directory
    below.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个部分被标记为 `files`，这是我们列出我们项目中的所有源代码文件的地方。你有可能将你的源文件拆分到不同的目录中。为了方便，你只需在括号中放入目录名（在我们的例子中是
    `(source)`），然后列出目录下的所有源文件。
- en: It is also possible to group the related files together into subsections, which
    we do using square brackets (`[SourceCode]` in our example). Any source files
    below this will be added to that section and will then appear in a separate folder
    in the Visual C++ Solution Explorer. There is no need for the directory and group
    names to match, and indeed you can have more than one directory in a group if
    you so wish.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以将相关的文件分组到子部分中，我们使用方括号（例如我们示例中的`[SourceCode]`）来做到这一点。任何位于此以下的源文件都将被添加到该部分，并随后在Visual
    C++解决方案资源管理器中的单独文件夹中显示。不需要目录和组名匹配，实际上，如果你愿意，一个组中可以有多个目录。
- en: Finally we have the `deployments` section, which is where various settings are
    made that control the process of deploying our application to different device
    types.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们来到了`deployments`部分，这是设置各种控制将我们的应用程序部署到不同设备类型的各种设置的地点。
- en: In our example we are making two settings. The `name` setting provides the filename
    of our final executable and is also used in file and directory names created for
    us by Marmalade, while `caption` sets the name that will appear under the application's
    icon when installed on a device.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，我们设置了两个设置。`name`设置提供了我们最终可执行文件的文件名，并且也被用于Marmalade为我们创建的文件和目录名，而`caption`设置则在设备上安装应用程序图标时显示的名称。
- en: Both the aforementioned settings are examples of general settings that apply
    across all device types, but there are also a great many other settings available,
    which are specific to particular platforms, such as iOS or Android. A full list
    of these can be found in the `Marmalade Documentation` help file that is installed
    as part of the Marmalade SDK, and we'll also be looking at this in [Chapter 8](ch08.html
    "Chapter 8. Supporting a Wide Range of Devices"), *Supporting a Wide Range of
    Devices*, of this book along with the additional sections of the MKB file that
    have not yet been shown for this example.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 上述两种设置都是适用于所有设备类型的通用设置示例，但还有许多其他设置可用，这些设置特定于特定平台，如iOS或Android。这些设置的完整列表可以在作为Marmalade
    SDK一部分安装的`Marmalade Documentation`帮助文件中找到，我们还将在本书的[第8章](ch08.html "第8章。支持广泛的设备")“支持广泛的设备”以及尚未为这个示例展示的MKB文件的附加部分中查看。
- en: The use of whitespace in the MKB file is pretty much up to your own personal
    preference. Though most of the Marmalade examples tend to indent entries within
    blocks, tabs or spaces can also be used.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在MKB文件中使用空白完全取决于你个人的喜好。尽管大多数Marmalade示例倾向于在块内缩进条目，但也可以使用制表符或空格。
- en: Comments can also be added using the hash (`#`) character. Everything after
    the hash character till the end of the current line is then considered a comment.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以使用井号（`#`）字符添加注释。然后，从井号字符到当前行末尾的所有内容都被视为注释。
- en: The source file for the "Hello World" project
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '"Hello World"项目的源文件'
- en: We may now use the MKB file for our project but we still can't do anything with
    it yet, as we've told Marmalade that there is a source file called `Main.cpp`,
    which doesn't exist yet. If we were to try and use the MKB file to build the project,
    we would get an error reported about this missing file, so let's create it.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以为我们的项目使用MKB文件，但我们仍然无法对它做任何事情，因为我们已经告诉Marmalade存在一个名为`Main.cpp`的源文件，而这个文件还不存在。如果我们尝试使用MKB文件来构建项目，我们会收到关于此缺失文件的错误报告，所以让我们创建它。
- en: 'You will recall that we said that our `Main.cpp` file would reside in a directory
    called `source` in the MKB file, so first create this new subdirectory in the
    project directory. Now, create a file called `Main.cpp` in the source directory
    and enter the following into it:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 你会记得我们说过，我们的`Main.cpp`文件将位于MKB文件中的`source`目录下，因此首先在项目目录中创建这个新的子目录。现在，在源目录中创建一个名为`Main.cpp`的文件，并将以下内容输入其中：
- en: '[PRE1]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The code should be fairly simple to follow, but here is a quick breakdown.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 代码应该相当简单易懂，但这里有一个快速分解。
- en: First we reference the include files to allow us to use the parts of Marmalade
    that are necessary for our application, and then we create our main entry point
    function `main`. This is equivalent to the `main()` function in a standard C or
    C++ program, except that it takes no parameters as Marmalade does not accept command-line
    parameters. It's quite hard to specify command-line parameters on mobile devices,
    so there really isn't any need!
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们引用包含文件，以便我们可以使用Marmalade中对我们应用程序必要的部分，然后我们创建我们的主要入口点函数`main`。这相当于标准C或C++程序中的`main()`函数，但因为它不接受参数，因为Marmalade不接受命令行参数。在移动设备上指定命令行参数相当困难，所以实际上并没有必要！
- en: The first thing our application needs to do is initialize Marmalade's rendering
    module with a call to `IwGxInit()`, which will initialize the screen and set up
    standard behavior such as double buffering of the display.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应用程序需要做的第一件事是通过调用 `IwGxInit()` 初始化 Marmalade 的渲染模块，这将初始化屏幕并设置标准行为，例如显示的双缓冲。
- en: Next we allocate a character buffer that will contain the message that we will
    be displaying on screen. We initialize it to a default message to make sure that
    there is something to be shown, but we then use a call to the `s3eConfigGetString`
    function to see if another message has been specified in the application's configuration
    file, which will be explained in more detail shortly.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们分配一个字符缓冲区，它将包含我们将在屏幕上显示的消息。我们将其初始化为默认消息以确保有内容显示，但随后我们使用对 `s3eConfigGetString`
    函数的调用来查看是否在应用程序的配置文件中指定了另一条消息，这将在稍后详细解释。
- en: The following call to `IwGxSetColClear` sets the desired screen background color
    to black, and then the call to `IwGxPrintSetScale` tells Marmalade to display
    text using its built-in font (which is quite small in size) at double its default
    resolution.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 以下对 `IwGxSetColClear` 的调用将所需的屏幕背景色设置为黑色，然后对 `IwGxPrintSetScale` 的调用告诉 Marmalade
    使用其内置字体（字体大小相当小）以双倍默认分辨率显示文本。
- en: We now enter our main processing loop that will continue until the `s3eDeviceCheckQuitRequest`
    function returns a true value, which will happen if the user quits the application
    or if the device sends a quit request to the application for any reason.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们进入主处理循环，它将持续进行，直到 `s3eDeviceCheckQuitRequest` 函数返回一个真值，这将在用户退出应用程序或设备因任何原因向应用程序发送退出请求时发生。
- en: The first line of our main loop is a call to `s3eDeviceYield`. This is a very
    important function that must be called at regular intervals during our application,
    to allow the device's OS to perform important tasks such as handling events—user
    inputs, incoming phone calls, and so on. Under most circumstances, a single call
    to this function in the main loop is sufficient.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们主循环的第一行是对 `s3eDeviceYield` 的调用。这是一个非常重要的函数，必须在应用程序运行期间定期调用，以便允许设备的操作系统执行重要任务，如处理事件——用户输入、来电等。在大多数情况下，主循环中对该函数的单次调用就足够了。
- en: The value passed to `s3eDeviceYield` is the maximum time (in milliseconds) that
    our application will yield to the OS for. Normally this value is set to zero,
    which yields long enough for the device to process the events, but will return
    control to our application as soon as all the events have been processed.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给 `s3eDeviceYield` 的值是我们应用程序将让给操作系统处理的最大时间（以毫秒为单位）。通常这个值被设置为零，这足以让设备处理事件，但一旦所有事件都处理完毕，就会将控制权返回给我们的应用程序。
- en: Next, we call `IwGxClear` to clear the screen and then use `IwGxPrintString`
    to display a message on the screen. `IwGxFlush` causes the Marmalade engine to
    then process all our drawing requests to yield a final screen image that we can
    then display to the world using `IwGxSwapBuffers`.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们调用 `IwGxClear` 清除屏幕，然后使用 `IwGxPrintString` 在屏幕上显示一条消息。`IwGxFlush` 导致 Marmalade
    引擎处理所有我们的绘图请求，以生成最终的屏幕图像，然后我们可以使用 `IwGxSwapBuffers` 将其显示给世界。
- en: Finally, outside the main loop, we call `IwGxTerminate` to shut down Marmalade's
    rendering engine, and finally return zero to indicate that our application was
    completed without any errors.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在主循环之外，我们调用 `IwGxTerminate` 关闭 Marmalade 的渲染引擎，并最终返回零以指示我们的应用程序在没有任何错误的情况下完成。
- en: Building the "Hello World" project
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建 "Hello World" 项目
- en: Now that we have set up our project and written the necessary code, it is finally
    time to build it. To do this open a Windows Explorer window and navigate to the
    folder containing `Hello.mkb`, and then just double-click on the file. You might
    see a brief flash of a command-prompt window, but after a short delay, Visual
    C++ should automatically start up with our project.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置了项目并编写了必要的代码，现在是时候构建它了。为此，打开一个 Windows 资源管理器窗口，导航到包含 `Hello.mkb` 文件的文件夹，然后只需双击该文件。你可能看到命令提示符窗口的短暂闪烁，但经过短暂的延迟后，Visual
    C++ 应该会自动启动并打开我们的项目。
- en: The act of double-clicking the MKB file actually causes the Marmalade makefile
    builder script to be executed. This is actually a script written in the Python
    language, which takes the MKB file and outputs a Visual C++ solution file and
    other required elements. A file association is automatically set up when installing
    Marmalade, so you can either double-click the file, or alternatively use the command
    prompt to create your project by changing to the project directory and entering
    `Hello.mkb`.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 双击MKB文件实际上会执行Marmalade的makefile构建脚本。这是一个用Python语言编写的脚本，它接收MKB文件并输出一个Visual C++解决方案文件和其他必需的元素。在安装Marmalade时，会自动设置文件关联，因此你可以双击文件，或者使用命令提示符通过切换到项目目录并输入`Hello.mkb`来创建你的项目。
- en: Before we go on to compile and run the project though, let's take a quick look
    at what Marmalade has created for us.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续编译和运行项目之前，让我们快速看一下Marmalade为我们创建了什么。
- en: If you look in the project directory, there should be two new directories, which
    are described in the following sections.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看项目目录，应该有两个新目录，以下部分将描述它们。
- en: The build directory
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建目录
- en: One of the directories created by the MKB file will be named `build_hello_vcxx`,
    where the "xx" part is dependent on the version of Visual C++ you are using.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: MKB文件创建的目录之一将被命名为`build_hello_vcxx`，其中“xx”部分取决于你使用的Visual C++版本。
- en: This directory is Marmalade's working directory and is where all the object
    files created during building are stored. It will also be the home to our deployment
    packages when it comes to making device builds.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 此目录是Marmalade的工作目录，所有在构建过程中创建的对象文件都存储在这里。在制作设备构建时，它也将成为我们的部署包的存放地。
- en: A Visual C++ solution file created from the MKB file also lives in this directory,
    and while you can use these files to switch between projects, you should never
    add files or change project settings using the options in the Visual C++ IDE.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 从MKB文件创建的Visual C++解决方案文件也位于此目录中，虽然你可以使用这些文件在项目之间切换，但你绝不应该使用Visual C++ IDE中的选项添加文件或更改项目设置。
- en: Note
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Always make project changes to the MKB file, then either close Visual C++ and
    double-click the MKB file to rebuild the solution, or alternatively perform a
    build inside Visual C++ to update the solution file with any changes. You should
    not make changes directly within the Visual C++ IDE as they will be lost the next
    time that the MKB file is used to recreate the project file.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 总是修改MKB文件中的项目更改，然后关闭Visual C++并双击MKB文件以重新构建解决方案，或者使用命令提示符在Visual C++内部执行构建以更新解决方案文件中的任何更改。你不应该在Visual
    C++ IDE中直接进行更改，因为它们将在下一次使用MKB文件重新创建项目文件时丢失。
- en: The data directory
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据目录
- en: The MKB file will also generate a directory called `data`, and this is where
    Marmalade requires you to place any files that your application will need to load,
    such as images, 3D model data, sound files, and others. While you can create this
    directory and these files yourself, and it will not cause a problem, we might
    as well let the makefile builder do it for us!
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: MKB文件还会生成一个名为`data`的目录，这是Marmalade要求你放置任何应用程序需要加载的文件的地方，例如图像、3D模型数据、声音文件等。虽然你可以自己创建此目录和这些文件，而且不会造成问题，但我们还是让makefile构建器为我们完成这项工作吧！
- en: If you take a look inside the `data` directory, you will see that the build
    process has also created two more files called `app.icf` and `app.config.txt`.
    These files are used to configure your application and are explained in the following
    sections.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看`data`目录，你会看到构建过程还创建了两个名为`app.icf`和`app.config.txt`的文件。这些文件用于配置你的应用程序，并在以下部分中解释。
- en: The app.config.txt file
  id: totrans-117
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: app.config.txt文件
- en: 'This file provides a list of all the application-specific settings that can
    be made in the `app.icf` file, along with a description of what each setting does
    and how it is used. There are two reasons for using this file:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件提供了在`app.icf`文件中可以设置的所有应用程序特定设置的列表，以及每个设置的作用描述和如何使用。使用此文件有两个原因：
- en: Adding entries to this file keeps your project settings documented in a single
    place, so other coders can check this file to see what a particular setting does.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向此文件添加条目可以保持你的项目设置在一个地方记录，这样其他编码者可以检查此文件以了解特定设置的作用。
- en: Any setting contained in the `app.icf` file that is not documented in the `app.config.txt`
    file will generate a runtime error message when you try to specify or access it
    in your program.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`app.icf`文件中包含的任何设置，如果不在`app.config.txt`文件中记录，当你尝试在程序中指定或访问它时，将会生成一个运行时错误信息。
- en: Additionally, the `app.config.txt` file also requires you to define a group
    name for your settings, which is specified by using square brackets.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`app.config.txt`文件还要求你为你的设置定义一个组名，这可以通过使用方括号来指定。
- en: 'If you look at the `s3eConfigGetString` function call in the "Hello World"
    project code, you will see an example of this. This call is trying to access a
    setting called `Message` from the group `APP`, so let''s add this into the `app.config.txt`
    file now, to stop any asserts from firing when running our application. Edit the
    file and add the following lines to the bottom of it:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看“Hello World”项目代码中的`s3eConfigGetString`函数调用，你将看到这个示例。这个调用试图从`APP`组中访问一个名为`Message`的设置，所以现在让我们将它添加到`app.config.txt`文件中，以防止在运行我们的应用程序时触发任何断言。编辑文件并在底部添加以下行：
- en: '[PRE2]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The app.icf file
  id: totrans-124
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: app.icf文件
- en: The `app.icf` file is used to add the configuration settings to your application,
    and as already stated these must be either documented in your project's `app.config.txt`
    file or must alternatively be defined in a similar file within one of the subprojects
    used by your application.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`app.icf`文件用于将配置设置添加到你的应用程序中，如前所述，这些设置必须在你的项目`app.config.txt`文件中记录，或者可以定义在应用程序使用的子项目中的一个类似文件中。'
- en: 'Adding a configuration setting is simply a matter of adding the setting name
    followed by an equals sign and then the value you wish to use. You must also ensure
    that you add the setting to the correct group, using the same square bracket notation
    used in the `app.config.txt` file. Here''s an example:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 添加配置设置只是简单地添加设置名称后跟一个等号，然后是你希望使用的值。你还必须确保使用与`app.config.txt`文件中相同的方括号符号将设置添加到正确的组中。以下是一个示例：
- en: '[PRE3]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The settings made in the `app.icf` file can then be accessed in code using the
    `s3eConfigGetInt` and `s3eConfigGetString` functions.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在`app.icf`文件中创建的设置可以通过`s3eConfigGetInt`和`s3eConfigGetString`函数在代码中访问。
- en: 'The `app.icf` file also has another couple of tricks up its sleeve, as settings
    can also be made that are specific to a certain platform or even specific to an
    individual device. Here''s how you achieve this:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`app.icf`文件还有一些其他技巧，因为也可以创建特定于某个平台或甚至特定于单个设备的设置。以下是实现方法：'
- en: To limit the application to a particular platform add the line `{OS=platform}`,
    and any settings following this will only apply to that device platform. The value
    used for `platform` is normally just the name of the operating system, for example,
    `ANDROID`, `BADA`, or `WINDOWS`, although it is worth mentioning that you should
    use `IPHONE` to refer to iPhones, iPods, and iPads! If in doubt, you can use a
    call to `s3eDeviceGetString(S3E_DEVICE_OS)` to discover the value that you need
    to use for a particular operating system.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将应用程序限制在特定的平台上，添加行`{OS=platform}`，并且在此之后的所有设置将仅适用于该设备平台。`platform`值通常是操作系统的名称，例如`ANDROID`、`BADA`或`WINDOWS`，尽管值得提一下，你应该使用`IPHONE`来指代iPhone、iPod和iPad！如果有疑问，你可以使用调用`s3eDeviceGetString(S3E_DEVICE_OS)`来发现特定操作系统需要使用的值。
- en: To limit the application to a particular device or devices, add the line `{ID=platform
    id}`, and any following settings will only be applied when run on the specified
    device. The `platform` value is the same as that used previously, while the `id`
    is an identifier for a particular device. The format of the `id` value depends
    on the operating system, but you can discover what value to use for a particular
    device by calling `s3eDeviceGetString(S3E_DEVICE_ID)`. It is also possible to
    provide a comma-separated list of `id` values if you need the settings to apply
    to more than one device.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将应用程序限制在特定的设备或设备上，添加行`{ID=platform id}`，并且任何后续设置只有在运行在指定的设备上时才会应用。`platform`值与之前使用的相同，而`id`是特定设备的标识符。`id`值的格式取决于操作系统，但你可以通过调用`s3eDeviceGetString(S3E_DEVICE_ID)`来发现特定设备应使用什么值。如果你需要将设置应用于多个设备，也可以提供以逗号分隔的`id`值列表。
- en: Note that both of these settings will continue to take effect until a new OS
    or ID value is specified. If you wish to return to applying all the settings globally,
    just add `{}` after your last OS- or ID-specific setting.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这两个设置将继续生效，直到指定了新的操作系统或ID值。如果你希望将所有设置全局应用，只需在你最后的操作系统或ID特定设置后添加`{}`。
- en: Tip
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: It is good practice to ensure that your OS- or ID-specific sections always terminate
    with `{}`, as not doing so can lead to a major head-scratching session when you
    deploy to device and find that some setting you have just changed doesn't appear
    to be taking effect.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您的OS-或ID特定的部分始终以`{}`结束是一个好习惯，否则在部署到设备并发现您刚刚更改的一些设置似乎没有生效时，可能会导致您大伤脑筋。
- en: 'To illustrate the use of `{}` , let''s add some settings to the "Hello World"
    project `app.icf` file. Open the file and add the following lines to the bottom
    of it:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明`{}`的使用，让我们向“Hello World”项目的`app.icf`文件添加一些设置。打开文件，将其以下几行添加到文件底部：
- en: '[PRE4]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You should be able to see from this that we have specified a different message
    string for each different platform type that we wish to support.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该能从中看出，我们已经为每个我们希望支持的不同的平台类型指定了不同的消息字符串。
- en: Building and running in the Windows simulator
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Windows模拟器中构建和运行
- en: Now it's time for us to see the "Hello World" project in action. It is just
    a simple matter of compiling the code in Visual C++ and running it.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候看看“Hello World”项目在实际中的运行情况了。这只是一个简单的问题，就是在Visual C++中编译代码并运行它。
- en: To compile the code, simply select **Build** | **Build Solution** or press the
    *F7* key. Visual C++ will compile and link the `Main.cpp` file.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 要编译代码，只需选择**构建** | **构建解决方案**或按*F7*键。Visual C++将编译并链接`Main.cpp`文件。
- en: 'Now we can execute the program. Select **Debug** | **Start Debugging** or simply
    press *F5*. The Marmalade Windows Simulator will be launched, which will in turn
    load and execute our program. The following image shows what the "Hello World"
    project should look like when run in the Windows Simulator:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以执行程序了。选择**调试** | **开始调试**或简单地按*F5*。Marmalade Windows模拟器将被启动，它将加载并执行我们的程序。以下图像显示了在Windows模拟器中运行时“Hello
    World”项目应该看起来像什么：
- en: '![Building and running in the Windows simulator](img/3363_01_02.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![在Windows模拟器中构建和运行](img/3363_01_02.jpg)'
- en: 'You will notice that the Windows Simulator contains a number of menu options.
    These allow you to make the Windows Simulator run in as close a manner to any
    device you choose as possible. The best way to see what you can change is to explore
    the menu options yourself, but here are a few of the more useful things you can
    do:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到Windows模拟器包含许多菜单选项。这些选项允许Windows模拟器尽可能接近您选择的任何设备运行。最好的方法是亲自探索菜单选项，但以下是一些您可能想做的更有用的事情：
- en: 'Accelerometer: Testing accelerometer inputs on Windows would be impossible
    without **Configuration** | **Accelerometer...**. This brings up a dialog box
    that allows you to use the mouse to rotate a 3D image of a phone, to simulate
    the accelerometer input.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加速度计：在Windows上测试加速度计输入是不可能的，没有**配置** | **加速度计...**。这将弹出一个对话框，允许您使用鼠标旋转手机的3D图像，以模拟加速度计输入。
- en: 'OpenGL ES version: The Windows Simulator option **Configuration** | **GL...**
    allows you to emulate different versions of OpenGL ES, which makes it easy to
    see what your game may look like on different types of hardware. It also allows
    you to disable OpenGL ES support entirely, which will then force Marmalade to
    use its built-in software renderer.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenGL ES版本：Windows模拟器选项**配置** | **GL...**允许您模拟不同版本的OpenGL ES，这使得您能够轻松地看到您的游戏在不同类型的硬件上可能看起来像什么。它还允许您完全禁用OpenGL
    ES支持，这将迫使Marmalade使用其内置的软件渲染器。
- en: 'Screen resolution: Mobile devices have a wide range of supported screen resolutions,
    so **Configuration** | **Surface...** allows you to select any size for the screen
    that you desire.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 屏幕分辨率：移动设备支持广泛的屏幕分辨率，因此**配置** | **表面...**允许您选择您想要的任何屏幕大小。
- en: 'Emulation of device suspend and resume: It is easy to forget that the primary
    function of many devices is actually that of a telephone rather than of a gaming
    platform, which means your application could potentially be interrupted at any
    time by an incoming call. Marmalade takes care of most of the fiddly details of
    handling this automatically, but there may still be situations when you need to
    do something special under such circumstances. The Windows Simulator allows you
    to test whether your application responds correctly by way of **Events** | **Simulate
    Suspend** and **Events** | **Simulate Resume**.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备挂起和恢复的模拟：很容易忘记许多设备的主要功能实际上是电话而不是游戏平台，这意味着你的应用程序可能会在任何时候被来电中断。Marmalade负责处理大多数自动处理这种情况的繁琐细节，但仍然可能存在需要在这种情况下执行特殊操作的情况。Windows模拟器允许你通过**事件**
    | **模拟挂起**和**事件** | **模拟恢复**来测试你的应用程序是否正确响应。
- en: Deploying a Marmalade project
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署Marmalade项目
- en: We have now managed to create and run our first Marmalade application, but running
    it on Windows isn't our ultimate goal. The whole reason for the Marmalade SDK
    is to make it easy for us to develop our application once and then deploy it on
    a whole range of mobile device platforms.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经成功创建并运行了我们的第一个Marmalade应用程序，但将其在Windows上运行并不是我们的最终目标。Marmalade SDK的整个目的就是为了让我们能够一次性开发应用程序，然后将其部署到一系列移动设备平台。
- en: Of course we might need to alter some of our assets, for example, because we
    are targeting a wide range of different screen resolutions and want our application
    to look its best at all times, the code itself should need no modification in
    order to run successfully.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可能需要更改一些资产，例如，因为我们针对的是广泛的屏幕分辨率，希望我们的应用程序始终看起来最佳，代码本身应该不需要修改才能成功运行。
- en: To illustrate this, we will now take the "Hello World" project and get it running
    on a number of different mobile device platforms.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明这一点，我们现在将“Hello World”项目部署到多个不同的移动设备平台。
- en: Compiling the "Hello World" project for the ARM CPU
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为ARM CPU编译“Hello World”项目
- en: Running our project in Windows meant we were compiling our code using the standard
    Visual C++ compiler and therefore generating Intel x86 code. However, it is a
    fact that the vast majority of mobile devices available today contain some version
    or other of the ARM processor, so the first thing we need to do is compile our
    code for ARM.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上运行我们的项目意味着我们使用标准的Visual C++编译器编译代码，因此生成Intel x86代码。然而，一个事实是，今天大多数可用的移动设备都包含某种版本的ARM处理器，因此我们首先需要为ARM编译我们的代码。
- en: Luckily, Marmalade has made this incredibly easy for us. At the top of the Visual
    C++ window, you should see a drop-down box that defaults to a setting called **(x86)
    Debug**.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，Marmalade为我们简化了这一点。在Visual C++窗口的顶部，你应该看到一个默认设置为**（x86）调试**的下拉菜单。
- en: If you open the drop-down box, you will see several build types pre-configured
    for us, but the one we are interested in is the **GCC (ARM) Release** option.
    Select this and build the solution again (**Build** | **Build Solution** or press
    *F7*), and Visual C++ will use the GCC compiler to create an ARM version of our
    application.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打开下拉菜单，你会看到为预配置了几个针对我们的构建类型，但我们感兴趣的是**GCC (ARM) Release**选项。选择此选项并再次构建解决方案（**构建**
    | **构建解决方案**或按*F7*），Visual C++将使用GCC编译器创建我们应用程序的ARM版本。
- en: Now we just need to get the code onto a device!
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们只需要将代码上传到设备上！
- en: Deploying the "Hello World" project
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署“Hello World”项目
- en: 'Now that we have an ARM-compiled version of our code, we need to create an
    install package so we can test it on a real mobile device. To do this we need
    to use **Marmalade System Deployment Tool**. Follow these steps to go through
    the deployment process:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有了代码的ARM编译版本，我们需要创建一个安装包，以便我们可以在真实移动设备上测试它。为此，我们需要使用**Marmalade系统部署工具**。按照以下步骤进行部署过程：
- en: To launch the tool, make sure the **GCC (ARM) Release** build type is selected
    and the code has been compiled. Select **Debug | Start Debugging** (or press *F5*).
    Instead of running the code in the debugger (which would make little sense given
    that the Visual C++ debugger can only debug an Intel x86 executable), **Marmalade
    System Deployment Tool** will be launched instead.![Deploying the "Hello World"
    project](img/3363_01_04.jpg)
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启动工具，确保选择了**GCC (ARM) Release**构建类型并且代码已经编译。选择**调试** | **开始调试**（或按*F5*）。由于Visual
    C++调试器只能调试Intel x86可执行文件，所以没有太多意义，**Marmalade系统部署工具**将被启动。![部署“Hello World”项目](img/3363_01_04.jpg)
- en: The program will first ask us to select the build type we wish to deploy and
    will have a number of radio buttons for the types available. Only those build
    types that are currently built will be selectable. In our case, we need to select
    the **ARM GCC Release** radio button and then click on the button labeled **Next
    Stage >**, to proceed to the next step.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 程序将首先要求我们选择要部署的构建类型，并将有多个单选按钮可供选择。只有当前已构建的构建类型才是可选择的。在我们的情况下，我们需要选择 **ARM GCC
    发布** 单选按钮，然后点击标有 **下一阶段 >** 的按钮，以继续到下一步。
- en: The next page asks us to select a deployment configuration. We can specify the
    directory where we want our deployed package files to be created, and we also
    have a list of checkboxed items for the available deployment configurations that
    we can choose from. Marmalade allows us to create different configurations, which
    means we can deploy different resource packages to different devices. For now
    we won't concern ourselves with any of this, so just ensure that the **Default**
    setting is checked and then click on the **Next Stage >** button again.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一页要求我们选择部署配置。我们可以指定我们想要创建部署包文件的目录，并且还有一个可供选择的可用部署配置的复选框列表。Marmalade 允许我们创建不同的配置，这意味着我们可以将不同的资源包部署到不同的设备上。目前我们不会关注这些，所以请确保
    **默认** 设置被选中，然后再次点击 **下一阶段 >** 按钮。
- en: We are now presented with a page listing all the device types that we can deploy
    to. Use the checkboxes to select which platforms to deploy to, and then click
    on **Next Stage >** once more to be taken to the final page.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们面前是一个列出我们可以部署的所有设备类型的页面。使用复选框选择要部署的平台，然后再次点击 **下一阶段 >**，即可进入最终页面。
- en: At the top of this last page, we can see a brief description of the different
    deployment types we are about to make, with drop-down boxes for each, to specify
    whether we should just generate the necessary package files, ignore that build
    type completely, or optionally install and run the package as well.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在最后一页的顶部，我们可以看到即将制作的不同的部署类型的简要描述，每个都有下拉框，用于指定我们是否只需生成必要的包文件，完全忽略该构建类型，或者可选地安装并运行包。
- en: Note
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The **Package and Install** options available in the Marmalade System Configuration
    Tool often rely on your system being set up with extra third-party software that
    isn't automatically installed as part of the Marmalade SDK. For this reason in
    this book, we will generally keep to using the **Package** option and install
    and run our deployment packages using manual methods.
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Marmalade 系统配置工具中可用的 **包和安装** 选项通常依赖于你的系统已经设置了额外的第三方软件，这些软件不是作为 Marmalade SDK
    的一部分自动安装的。因此，在这本书中，我们将一般保持使用 **包** 选项，并使用手动方法安装和运行部署包。
- en: Now that we have configured the type of deployment we want, just press the **Deploy
    All** button and Marmalade will make packages for all the different targets we
    selected.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 既然我们已经配置了想要的部署类型，只需按下 **部署全部** 按钮，Marmalade 将为所有选定的不同目标创建包。
- en: The default location for the deployment packages is within the Marmalade `Build`
    directory. If you use Windows Explorer to look into this directory, you will see
    that a new directory called `deployments` has been created. In turn, this directory
    contains a folder called `default`, which comes from the deployment configuration
    we used.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的部署包位置位于 Marmalade 的 `Build` 目录中。如果你使用 Windows 资源管理器查看此目录，你会看到已创建一个名为 `deployments`
    的新目录。反过来，此目录包含一个名为 `default` 的文件夹，它来自我们使用的部署配置。
- en: Note
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It is possible to open Windows Explorer to the deployment folder by clicking
    on the **Explore…** button on the final page of the deployment utility.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过点击部署实用程序的最终页面上的 **探索…** 按钮来打开 Windows 资源管理器到部署文件夹。
- en: The `default` directory contains subdirectories for each of our selected deployment
    platforms, and each of these will contain a `release` directory since it was the
    release build that we created the deployments from. Note that it is also possible
    to deploy a debug build, which can be useful when debugging. Go into the `release`
    folder and there you will find our freshly made deployment package.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`default` 目录包含我们选择的每个部署平台的子目录，并且每个子目录都将包含一个 `release` 目录，因为我们是从发布构建创建部署的。请注意，也可以部署调试构建，这在调试时可能很有用。进入
    `release` 文件夹，在那里你会找到我们刚刚制作的部署包。'
- en: All that is left to do now is to install and run it on a device.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在剩下的只是安装并在设备上运行它。
- en: Installing on Android devices
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Android 设备上安装
- en: Let's start by looking at how to install an Android build.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先看看如何安装Android构建。
- en: Note
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Before being able to make an Android deployment with the deployment tool, there
    is a prerequisite that the Java JDK must be installed. You can download this from
    the following web page:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在能够使用部署工具进行Android部署之前，有一个先决条件，即必须安装Java JDK。你可以从以下网页下载它：
- en: '[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)'
- en: The Android package file for the "Hello World" project is called `Hello.apk`,
    and to install it we first need to copy it to an Android device. This can be done
    by copying the file to an SD card, or if your device has built-in storage memory,
    copying the file into that.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '"Hello World"项目的Android包文件名为`Hello.apk`，要安装它，我们首先需要将其复制到Android设备上。这可以通过将文件复制到SD卡上完成，或者如果你的设备有内置存储内存，可以将文件复制到那里。'
- en: Before we can install our package, we first need to make sure that the Android
    device will allow us to do so. Go into your device's **Settings** program and
    select the **Applications** option. Here there is an **Unknown sources** option,
    which allows us to install our own packages. Make sure this option is ticked.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们能够安装我们的包之前，我们首先需要确保Android设备允许我们这样做。进入你的设备的**设置**程序并选择**应用程序**选项。在这里有一个**未知来源**选项，它允许我们安装自己的包。确保这个选项被勾选。
- en: Next find the file manager application on your device. Different devices may
    have different names for this application, but it often has an icon with a picture
    of a filing cabinet folder on it. Navigate the directories to find the location
    where you copied the `Hello.apk` file, then tap on the file's entry in the list.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在你的设备上找到文件管理应用程序。不同的设备可能为这个应用程序有不同的名称，但通常它有一个图标，上面有一个档案文件夹的图片。导航目录以找到你复制的`Hello.apk`文件的位置，然后点击列表中的文件条目。
- en: The screen will change to show a big list of things that the application is
    asking to access, along with the **Install** and **Cancel** buttons. Click on
    the **Install** button and the package will be installed. You can then choose
    the **Open** button to start your application, or the **Done** button if you don't
    want to run it now. Click on **Open** and we should then be greeted with our **Hello
    Android!** message.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕将切换以显示应用程序请求访问的大列表，以及**安装**和**取消**按钮。点击**安装**按钮，包将被安装。然后你可以选择**打开**按钮来启动你的应用程序，或者如果你现在不想运行它，可以选择**完成**按钮。点击**打开**，我们应该会看到我们的**Hello
    Android**消息。
- en: Note
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: By installing the Android SDK, it is also possible to speed up testing on the
    device by allowing the deployment tool to automatically package, install, and
    run the deployed package. Instructions on setting up the Android SDK so this will
    work can be found in [Chapter 10](ch10.html "Chapter 10. Extending Marmalade with
    the Extensions Development Kit (EDK)"), *Extending Marmalade with the Extensions
    Development Kit (EDK)* of this book.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 通过安装Android SDK，还可能通过允许部署工具自动打包、安装和运行部署的包来加速设备上的测试。关于如何设置Android SDK以使其工作的说明可以在本书的[第10章](ch10.html
    "第10章。使用扩展开发工具包(EDK)扩展Marmalade") *使用扩展开发工具包(EDK)扩展Marmalade* 中找到。
- en: Installing on iOS devices
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在iOS设备上安装
- en: If you've tried to create an iOS build of the "Hello World" project, you will
    have noticed that it currently fails to complete with a signing error. This is
    because you will need to provide Marmalade with some certificate files, which
    can only be generated by becoming a registered Apple developer.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你尝试创建"Hello World"项目的iOS构建，你会注意到它目前无法完成，因为签名错误。这是因为你需要向Marmalade提供一些证书文件，这些文件只能通过成为注册的苹果开发者来生成。
- en: 'Joining the **iOS Developer Program** currently costs $99 per year, and you
    can find more details about it at the following web page:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 加入**iOS开发者计划**目前每年需要99美元，你可以在以下网页上找到更多详细信息：
- en: '[https://developer.apple.com/programs/which-program/](https://developer.apple.com/programs/which-program/)'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/programs/which-program/](https://developer.apple.com/programs/which-program/)'
- en: 'Once you''ve signed up, you''ll be able to access the **iOS Dev Center** that
    will then allow you to create the required certificates. Normally you would require
    an Apple Mac to generate these certificates, but, handily, Marmalade provides
    a small utility called the **iPhone Sign Request Tool** that gets around this
    issue. Here is what you need to do:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦注册，您将能够访问**iOS Dev Center**，这将允许您创建所需的证书。通常您需要一个Apple Mac来生成这些证书，但方便的是，Marmalade提供了一个名为**iPhone
    Sign Request Tool**的小工具，可以解决这个问题。以下是您需要执行的操作：
- en: 'Launch the Marmalade iPhone Sign Request Tool and fill in the fields as follows:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Marmalade iPhone Sign Request Tool，并按照以下方式填写字段：
- en: '**Certificate Request File**: Pick a location where this file will be saved.
    You will need to upload this to the iOS Dev Center shortly.'
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**证书请求文件**：选择一个位置来保存此文件。您需要稍后将其上传到iOS Dev Center。'
- en: '**Key File**: Choose **developer_identity.key** from the drop-down box.'
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**密钥文件**：从下拉框中选择**developer_identity.key**。'
- en: '**Common Name**: The name you used when registering with the iOS Developer
    Program.'
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**通用名称**：您在注册iOS Developer Program时使用的名称。'
- en: '**Email Address**: The e-mail address you used when registering with the iOS
    Developer Program.'
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**电子邮件地址**：您在注册iOS Developer Program时使用的电子邮件地址。'
- en: Now log on to the iOS Dev Center and click on the **iOS Provisioning Portal**
    link.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，登录到iOS Dev Center并点击**iOS Provisioning Portal**链接。
- en: In the left-hand pane, click on the **Certificates** link. Click on the **Development**
    tab and then on the **Request Certificate** button to bring up a page of instructions.
    On this new page, press the **Choose File** button to upload the file you generated
    in step 1.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧面板中，点击**Certificates**链接。点击**Development**选项卡，然后点击**Request Certificate**按钮以打开一个包含说明的页面。在新页面上，按**Choose
    File**按钮上传在第1步中生成的文件。
- en: Click on the **Certificates** link in the left-hand pane again, and click on
    the link telling you to download the WWDR intermediate certificate. Save this
    file into the subdirectory `s3e\deploy\plugins\iphone\certificates` of your Marmalade
    SDK installation.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次点击左侧面板中的**Certificates**链接，然后点击提示您下载WWDR中间证书的链接。将此文件保存到您的Marmalade SDK安装目录下的子目录`s3e\deploy\plugins\iphone\certificates`中。
- en: Refresh the **Certificates** page in your web browser until you see a **Download**
    button in the **Action** column. Click on this button and save the file into the
    directory from step 4, renaming it to `developer_identity.cer`.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的网络浏览器中刷新**Certificates**页面，直到您在**Action**列中看到**Download**按钮。点击此按钮并将文件保存到步骤4中的目录，将其重命名为`developer_identity.cer`。
- en: In the left-hand pane, click on the **Devices** link to register your test devices
    with the iOS Dev Center by clicking on the **Add Devices** button and then entering
    a description for the device and its 40-character hex device ID. There is a link
    labeled **Finding the Device ID**, which tells you how to discover this value
    for a particular device.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧面板中，点击**Devices**链接，通过点击**Add Devices**按钮并输入设备及其40位十六进制设备ID的描述来将您的测试设备注册到iOS
    Dev Center。有一个标记为**Finding the Device ID**的链接，它告诉您如何为特定设备发现此值。
- en: Next click on the **App IDs** link and then on the **New App ID** button, and
    register a new App ID to use for your applications. You just need to enter a description
    (which can be anything you want) and a bundle identifier that is of the form `com.domainname.appname`.
    The `domainname` part can be pretty much anything you like (it doesn't necessarily
    have to relate to a real URL), while the `appname` part should either be the name
    of your application, or you can use an asterisk that then lets you use that App
    ID for any application.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来点击**App IDs**链接，然后点击**New App ID**按钮，注册一个新的App ID以供您的应用程序使用。您只需输入一个描述（可以是您想要的任何内容）和一个形式为`com.domainname.appname`的包标识符。`domainname`部分可以是您喜欢的任何内容（它不必与真实的URL相关），而`appname`部分应该是您应用程序的名称，或者您可以使用一个星号，这样就可以使用该App
    ID为任何应用程序。
- en: Click on the **Provisioning** link and then click on the **New Profile** button.
    Enter a descriptive name for the profile and tick the checkbox next to your certificate
    name. Select the App ID you generated in step 7 from the drop-down box, and then
    tick all the checkboxes for any device that you want this provisioning profile
    to apply to.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Provisioning**链接，然后点击**New Profile**按钮。为配置文件输入一个描述性名称，并勾选您的证书名称旁边的复选框。从下拉框中选择在第7步中生成的App
    ID，然后勾选所有您希望此配置文件应用于的设备的复选框。
- en: Click on the **Provisioning** link again and keep refreshing this page until
    a **Download** button appears next to your new provisioning profile.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次点击**配置文件**链接，并不断刷新此页面，直到在您的新配置文件旁边出现**下载**按钮。
- en: There is more information on this process in the Marmalade Documentation help
    file, and there are also **How To** tabs on most of the iOS Provisioning Portal
    pages explaining the processes involved, although most of these assume that you
    are using an Apple Mac to generate the various files.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在Marmalade文档的帮助文件中可以找到有关此过程的信息，大多数iOS配置文件门户页面上也有**如何**标签，解释了涉及的过程，尽管大多数这些假设您正在使用Apple
    Mac生成各种文件。
- en: With all those hurdles negotiated, we can then use **Marmalade System Deployment
    Tool** to generate a properly signed iOS install package, which will be named
    `Hello.ipa`. Now to get it installed onto a device!
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在克服所有这些障碍之后，我们可以使用**Marmalade系统部署工具**生成一个正确签名的iOS安装包，该包将被命名为`Hello.ipa`。现在，要将它安装到设备上！
- en: 'It is possible to use iTunes to install your builds, but be warned that it
    tends to be a little bit of hit and miss as to whether it will work. Sometimes
    iTunes does not recognize that a new build is available and needs to be synched
    to the device. In my experience, a more reliable option is to use the **iPhone
    Configuration Utility** , which is a freely available Apple tool that can be downloaded
    from the following URL:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用iTunes来安装您的构建版本，但请注意，它可能有点儿运气成分，不一定能成功。有时iTunes无法识别新的构建版本，需要同步到设备上。根据我的经验，一个更可靠的选项是使用**iPhone配置实用工具**，这是一个可以从以下网址免费下载的Apple工具：
- en: '[http://support.apple.com/kb/DL1466](http://support.apple.com/kb/DL1466)'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://support.apple.com/kb/DL1466](http://support.apple.com/kb/DL1466)'
- en: '![Installing on iOS devices](img/3363_01_03.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![在iOS设备上安装](img/3363_01_03.jpg)'
- en: First of all, you need to let the iPhone Configuration Utility know about your
    provisioning profile. Click on **Provisioning Profiles** in the far left pane
    and then click on the **Add** button in the toolbar. Navigate to the provisioning
    profile file you created in step 9 and click the **Open** button to add it to
    the list of available profiles. Alternatively, you can drag-and-drop the file
    into the list from Windows Explorer.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您需要让iPhone配置实用工具了解您的配置文件。在左侧最远端面板中点击**配置文件**，然后在工具栏中点击**添加**按钮。导航到步骤9中创建的配置文件文件，并点击**打开**按钮将其添加到可用配置文件列表中。或者，您也可以从Windows资源管理器中将文件拖放到列表中。
- en: Next, click on the **Applications** entry in the left-hand panel and then click
    on the **Add** button. Find the `Hello.ipa` file in the deployment's `release`
    directory and click on **OK** to add it to the list of known applications, or
    again you can drag-and-drop the file from Windows Explorer into the list.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在左侧面板中点击**应用程序**条目，然后点击工具栏中的**添加**按钮。在部署的**发布**目录中找到`Hello.ipa`文件，并点击**确定**将其添加到已知应用程序列表中，或者您也可以从Windows资源管理器中将文件拖放到列表中。
- en: Now connect your iOS device to your computer using a USB cable. It should appear
    in the bottom of the left-hand pane after a short delay. Click on the name of
    your device and you should see five tabs appear in the main panel. Click the **Provisioning
    Profiles** tab and then click on the **Install** button next to your provisioning
    profile. Once done, this button will change to become a **Remove** button.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用USB线将您的iOS设备连接到计算机。在短暂延迟后，它应该出现在左侧面板的底部。点击您的设备名称，您应该在主面板中看到五个标签出现。点击**配置文件**标签，然后点击您配置文件旁边的**安装**按钮。完成后，此按钮将更改为**移除**按钮。
- en: Our next step is to install the application itself, so click on the **Applications**
    tab to see a list of all applications that are either installed on the device
    already, or which can be installed. Find the entry labeled **Hello** and click
    on its **Install** button, which will change to read **Remove** once the application
    is installed.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来的步骤是安装应用程序本身，因此点击**应用程序**标签以查看设备上已安装或可安装的所有应用程序的列表。找到标记为**Hello**的条目，并点击其**安装**按钮，一旦应用程序安装完成，该按钮将更改为显示**移除**。
- en: After all that, we can finally run our application by finding its icon on the
    device and tapping on it. You should see the message **Hello iOS!**, which I admit
    may seem like something of an anticlimax after going through such a drawn-out
    process.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成所有这些之后，我们最终可以通过在设备上找到其图标并点击它来运行我们的应用程序。您应该会看到消息**Hello iOS**，我承认在经过如此漫长的过程后，这可能显得有些令人失望。
- en: Installing on BlackBerry QNX devices
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在BlackBerry QNX设备上安装
- en: Marmalade can also deploy to BlackBerry QNX devices, the best known of which
    is the PlayBook tablet. In order to deploy to PlayBook, we need to do some setup
    work first. In the steps that follow, there are some commandlines that need to
    be entered. In these commandlines there are some arguments enclosed in angled
    brackets. After each set of commands, there is a table explaining what to replace
    the angle-bracketed arguments with.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: Marmalade还可以部署到BlackBerry QNX设备，其中最著名的是PlayBook平板电脑。为了部署到PlayBook，我们首先需要进行一些设置工作。在接下来的步骤中，需要输入一些命令行。在这些命令行中，有一些用尖括号括起来的参数。在每个命令组之后，有一个表格解释了如何替换尖括号内的参数。
- en: 'First head over to the following URL to download the BlackBerry Native SDK,
    which contains some tools needed for signing builds:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先转到以下URL下载BlackBerry Native SDK，其中包含一些用于签名构建的工具：
- en: '[https://developer.blackberry.com/native/download/](https://developer.blackberry.com/native/download/)'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://developer.blackberry.com/native/download/](https://developer.blackberry.com/native/download/)'
- en: Run the installer by right-clicking on its icon in Windows Explorer and selecting
    the **Run as Administrator** option to avoid permission problems when installing
    the SDK.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在Windows资源管理器中右键单击安装程序的图标并选择**以管理员身份运行**选项来运行安装程序，以避免在安装SDK时出现权限问题。
- en: 'After the installation is complete, head over to the following URL to request
    some signing keys:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，请转到以下URL请求一些签名密钥：
- en: '[https://www.blackberry.com/SignedKeys/nfc-form.html](https://www.blackberry.com/SignedKeys/nfc-form.html)'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://www.blackberry.com/SignedKeys/nfc-form.html](https://www.blackberry.com/SignedKeys/nfc-form.html)'
- en: We need to request a **Device Code Signing Key**, so select the first radio
    button to request this key type and then enter the personal information requested
    (your name, company name, and so on). You will also be asked to enter a PIN value
    consisting of eight alphanumeric characters. Ensure that you remember what you
    enter at this stage because you will need it to complete the registration of the
    keys.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要请求一个**设备代码签名密钥**，因此选择第一个单选按钮以请求此密钥类型，然后输入所需的个人资料信息（你的姓名、公司名称等）。你还将被要求输入一个由八个字母数字字符组成的PIN值。确保你记住在这个阶段输入的内容，因为你需要它来完成密钥的注册。
- en: Make sure the checkbox labeled **For BlackBerry PlayBook OS and BlackBerry 10
    and Higher** is checked before ticking the license agreement checkbox and clicking
    on the **Submit** button.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在勾选许可协议复选框并单击**提交**按钮之前，请确保已勾选标记为**适用于BlackBerry PlayBook OS和BlackBerry 10及以上版本**的复选框。
- en: The key files will be e-mailed to you, but there can be a delay of a few hours
    before they arrive. When you have the key files, create an empty folder on your
    PC and save them into it. We'll be assuming a folder called `C:\PlayBook` for
    the following steps.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 密钥文件将通过电子邮件发送给你，但它们到达之前可能会有几小时的延迟。当你拥有密钥文件时，在你的PC上创建一个空文件夹并将它们保存到该文件夹中。以下步骤将假设文件夹名为`C:\PlayBook`。
- en: 'Open a command-prompt window and change the current directory to be the one
    you created in step 6, and enter the following commands. The first command sets
    up the `PATH` environment variable so that the other commands can be executed.
    These commands register your key files with the BlackBerry signing servers and
    allow your PC to generate debug tokens:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个命令提示符窗口，将当前目录更改为你在第6步中创建的目录，并输入以下命令。第一个命令设置`PATH`环境变量，以便其他命令可以执行。这些命令将你的密钥文件注册到BlackBerry签名服务器，并允许你的PC生成调试令牌：
- en: '[PRE5]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '| Argument | Value to enter |'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 参数 | 需要输入的值 |'
- en: '| --- | --- |'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `<company name>` | The company name you specified when requesting the key
    files in step 4. |'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `<公司名称>` | 在第4步请求密钥文件时指定的公司名称。|'
- en: '| `<password>` | A password of your choosing. Use the same value in each command.
    |'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `<密码>` | 你选择的密码。在每个命令中使用相同的值。|'
- en: '| `<PBDT file>` | The filename of the PBDT key file that was e-mailed to you
    in step 6\. This filename should be of the form `client-PBDT-1234567.csj`, where
    the numeric part will be unique to your key file. |'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `<PBDT文件>` | 这是第6步中通过电子邮件发送给你的PBDT密钥文件的文件名。该文件名应采用`client-PBDT-1234567.csj`的形式，其中数字部分将唯一标识你的密钥文件。|'
- en: '| `<pin>` | The PIN value you specified when requesting the key files in step
    4. |'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `<pin>` | 在第4步请求密钥文件时指定的PIN值。|'
- en: '| `<RDK file>` | The filename of the RDK key file that was e-mailed to you
    in step 6\. This filename should be of the form `client-RDK-1234567.csj`, where
    the numeric part will be unique to your key file. |'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `<RDK文件>` | 这是第6步中通过电子邮件发送给你的RDK密钥文件的文件名。该文件名应采用`client-RDK-1234567.csj`的形式，其中数字部分将唯一标识你的密钥文件。|'
- en: 'We can now generate a debug token file with the following commandline:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以使用以下命令行生成调试令牌文件：
- en: '[PRE6]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '| Argument | Value to enter |'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 参数 | 需要输入的值 |'
- en: '| --- | --- |'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `<device id>` | The device ID of your BlackBerry device. As an example, you
    can find out this value on a PlayBook by going into the settings screen, clicking
    on the **About** item in the left-hand pane, and selecting the **Hardware** option
    in the drop-down box. The value labeled **PIN** is the device ID. When you specify
    this value in the commandline, make sure you prefix it with `0x`, as you would
    in C++ source code, to indicate a hexadecimal value. |'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `<设备ID>` | 您BlackBerry设备的设备ID。例如，您可以在PlayBook的设置屏幕中找到此值，进入设置屏幕，在左侧面板中点击**关于**项，然后在下拉框中选择**硬件**选项。标记为**PIN**的值是设备ID。当您在命令行中指定此值时，确保您以`0x`为前缀，就像在C++源代码中一样，以表示十六进制值。
    |'
- en: '| `<password>` | This is the same password you used in the previous set of
    commands. |'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `<密码>` | 这是您在上一组命令中使用的相同密码。 |'
- en: To install the debug token on to the device, first ensure that the device is
    connected via WiFi to the same network as your PC and then look at the device
    settings to determine the IP address assigned to it. This can be found by going
    to the **About** panel and selecting **Network** in the drop-down box.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在设备上安装调试令牌，首先确保设备通过WiFi连接到与您的PC相同的网络，然后查看设备设置以确定分配给它的IP地址。这可以通过转到**关于**面板并在下拉框中选择**网络**来找到。
- en: Next we must enable development mode on the device, which can be done in the
    settings screen. Choose the **Security** panel and then click on the **Development
    Mode** entry on that screen. Set the toggle control next to **Use Development
    Mode** to **On**. You will be asked to enter a password for using development
    mode, so enter one into the edit boxes and click on the **Upload Debug Token**
    button.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们必须在设备上启用开发模式，这可以在设置屏幕中完成。选择**安全**面板，然后在该屏幕上点击**开发模式**条目。将**使用开发模式**旁边的切换控制设置为**开启**。您将被要求输入用于开发模式的密码，因此输入一个到编辑框中，然后点击**上传调试令牌**按钮。
- en: Now we have to enter one more commandline to install the debug token on the
    device.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们必须输入一个额外的命令行来在设备上安装调试令牌。
- en: '[PRE7]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '| Argument | Value to Enter |'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 参数 | 需要输入的值 |'
- en: '| --- | --- |'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `<device password>` | The device password you set in step 10. |'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `<设备密码>` | 在第10步设置的设备密码。 |'
- en: '| `<ip address>` | The IP address of the device as discovered in step 9. |'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `<IP地址>` | 在第9步发现的设备IP地址。 |'
- en: 'Now we have to add the following two lines to the `deployments` sections of
    the MKB file, to allow us to make a valid deployment package:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们必须将以下两行添加到MKB文件的`deployments`部分，以便我们可以创建一个有效的部署包：
- en: '[PRE8]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '| Argument | Value to Enter |'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 参数 | 需要输入的值 |'
- en: '| --- | --- |'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `<company name>` | The company name value you specified when requesting the
    key files in step 4. |'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `<公司名称>` | 在第4步请求密钥文件时指定的公司名称值。 |'
- en: '| `<author id>` | Finding the value for this is a little convoluted. First
    make a copy of the `debugtoken.bar` file generated in step 8, renaming it with
    the extension `.zip`. You can now use an archiving program to look inside this
    file. Enter the `META_INF` directory and extract the `MANIFEST.MF` file. Open
    this file in a text editor and look for an entry called `Package-Author-Id`. The
    string of characters following this entry is the value you need to put in the
    MKB file. |'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `<作者ID>` | 找到这个值有点复杂。首先复制第8步生成的`debugtoken.bar`文件，将其重命名为`.zip`扩展名。现在您可以使用归档程序查看此文件。进入`META_INF`目录并提取`MANIFEST.MF`文件。在文本编辑器中打开此文件，查找名为`Package-Author-Id`的条目。此条目后面的字符串就是您需要在MKB文件中输入的值。
    |'
- en: If Visual C++ is open, shut it down. Double-click the project MKB file to rebuild
    it with the changes made previously and start up Visual C++. Perform a **GCC (ARM)
    Release** build of the project and then press *F5* to launch the deployment tool.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果Visual C++已打开，请关闭它。双击项目MKB文件以使用之前所做的更改重新构建它，并启动Visual C++。执行项目的**GCC (ARM)
    发布**构建，然后按*F5*启动部署工具。
- en: In the deployment tool, change the settings to create a BlackBerry QNX deployment.
    When you reach the page labeled **Deployment Summary**, change the drop-down box
    to the **Package and Install** option before clicking the **Deploy All** button.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在部署工具中，更改设置以创建BlackBerry QNX部署。当您到达标记为**部署摘要**的页面时，在点击**部署所有**按钮之前，将下拉框更改为**包和安装**选项。
- en: The final page in the deployment tool will be displayed, which for BlackBerry
    deployments has two additional fields. The first is labeled **Device hostname
    (or IP address)** for which you should supply the IP address of the device that
    you want to install the package to. The other field is labeled **Device password**,
    and you should enter the password you set up in step 10\. Click on the **Deploy
    All** button again and the deployment will be made and installed to the device
    over WiFi.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在部署工具的最后页面将显示，对于 BlackBerry 部署，有两个额外的字段。第一个字段标记为**设备主机名（或 IP 地址**），您应提供您想要安装包的设备的
    IP 地址。另一个字段标记为**设备密码**，您应输入在第 10 步中设置的密码。然后再次点击**部署全部**按钮，部署将通过 WiFi 传输并安装到设备上。
- en: The build should now be installed on the device, so breathe a sigh of relief
    and then look for its icon in the applications list. Touch the icon to run the
    program, and you should be greeted with the merry little message **Hello BlackBerry!**
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 构建现在应该已经安装到设备上，所以松一口气，然后在应用程序列表中寻找它的图标。触摸图标以运行程序，你应该会看到一个愉快的短消息**Hello BlackBerry**！
- en: Installing on Bada devices
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Bada 设备上安装
- en: Installing a build on to a Bada device is one example where using the **Package,
    Install and Run** option in **Marmalade System Deployment Tool** is actually a
    very good idea, as it is not possible to copy the package to a Bada device manually
    to install it.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Bada 设备上安装构建是一个例子，说明在**Marmalade 系统部署工具**中使用**包、安装和运行**选项实际上是一个非常不错的选择，因为无法手动将包复制到
    Bada 设备上以进行安装。
- en: 'To begin with, you need to install some device drivers for your Bada device
    so that the deployment tool can connect to it. Marmalade does ship with some drivers
    for Bada, but working out which of the three possible drivers matches your device
    can be hard to work out. For this reason, it is better to first install the Samsung
    Kies utility, which comes with a number of drivers and will install the correct
    one for you automatically. You can download Kies from the following web address:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您需要为您的 Bada 设备安装一些设备驱动程序，以便部署工具可以连接到它。Marmalade 确实附带了一些 Bada 驱动程序，但确定三个可能的驱动程序中哪一个与您的设备匹配可能很困难。因此，最好首先安装
    Samsung Kies 工具，它附带了许多驱动程序，并将自动为您安装正确的驱动程序。您可以从以下网址下载 Kies：
- en: '[http://www.samsung.com/uk/support/usefulsoftware/KIES/JSP](http://www.samsung.com/uk/support/usefulsoftware/KIES/JSP)'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.samsung.com/uk/support/usefulsoftware/KIES/JSP](http://www.samsung.com/uk/support/usefulsoftware/KIES/JSP)'
- en: After installing Kies, connect your device to your computer with a USB cable
    and run the deployment tool. When you get to the platform selection page, you
    will see that there are four possible options for Bada. You must select the correct
    one for your device, which is based on both the version of Bada your device has
    and also its screen resolution.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Kies 后，使用 USB 线缆将您的设备连接到计算机，并运行部署工具。当您到达平台选择页面时，您将看到有四个可能的 Bada 选项。您必须选择适合您设备的正确选项，这取决于您的设备所具有的
    Bada 版本以及其屏幕分辨率。
- en: Having chosen the correct Bada platform option, click on the **Next Stage >**
    button and then choose **Package, Install and Run** in the drop-down box at the
    top of the window. Click on the **Deploy All** button and an install package will
    be made, which is installed on to your device and executed, and you should then
    see the **Hello Bada!** message in all its monochrome glory!
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 选择正确的 Bada 平台选项后，点击**下一阶段 >**按钮，然后在窗口顶部的下拉框中选择**包、安装和运行**。点击**部署全部**按钮，将创建一个安装包，该包将安装到您的设备上并执行，然后您应该会看到所有单色的**Hello
    Bada**消息！
- en: Summary
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: The "Hello World" project may have been very simple, but it has served to demonstrate
    a surprising amount of the power of Marmalade. We now know how to create a new
    Marmalade project, build it, and create and apply our own application-specific
    settings to it.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: “Hello World”项目可能非常简单，但它已经展示了 Marmalade 的惊人力量。我们现在知道如何创建一个新的 Marmalade 项目，构建它，并为其创建和应用我们自己的应用程序特定设置。
- en: We then ran our project in the Windows simulator and learned how to deploy and
    run it on a number of different mobile platforms.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 我们然后在 Windows 模拟器中运行我们的项目，并学习了如何在多个不同的移动平台上部署和运行它。
- en: Displaying some text on the screen isn't the most exciting thing in the world
    though, so in the next chapter we will learn how we can use the Marmalade SDK
    to draw simple 2D images on the screen. We'll also be finding out how Marmalade
    makes it easy for us to use bitmapped images.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在屏幕上显示一些文本虽然不是世界上最令人兴奋的事情，但接下来的一章我们将学习如何使用Marmalade SDK在屏幕上绘制简单的2D图像。我们还将了解Marmalade是如何使我们轻松使用位图图像的。
