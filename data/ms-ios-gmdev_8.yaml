- en: Chapter 8. It's Too Dangerous to Go Alone, Take a Friend!
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。独自一人去太危险了，带上一个朋友吧！
- en: 'You''ve done it! You''ve officially released your game and it''s doing great!
    But now you want to add more features and push an update, right? Because the same
    thing over and over is kind of repetitive and we don''t want to lose people''s
    interest. This is what we will discuss in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你做到了！你已经正式发布了你的游戏，而且它做得很好！但现在你想要添加更多功能并推送更新，对吧？因为重复同样的事情有点单调，我们不想失去人们的兴趣。这就是本章我们将要讨论的内容：
- en: Multiplayer integration
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多人游戏集成
- en: Game Center integration (we mix multiplayer and Game Center)
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 游戏中心集成（我们混合多人游戏和游戏中心）
- en: Pushing an update to the AppStore
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将更新推送到AppStore
- en: Now, we can make things super fun for our players because, really, who doesn't
    like playing with friends? It's going to be a fair amount of work, but hey, it
    will be totally worth it!
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以让我们的玩家玩得更开心，因为，说实话，谁不喜欢和朋友一起玩呢？这将会是一大堆工作，但嘿，这绝对值得！
- en: Let's do this...
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们这么做...
- en: Multiplayer integration
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多人游戏集成
- en: I'm sure all of us remember sitting down in front of our old CRT TV with a friend
    and loading up *Super Mario 3* (blowing on the cartridge before inserting it to
    ensure that it works) and playing together for hours on end.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信我们所有人都记得和朋友们坐在老式CRT电视前，加载上*超级马里奥3*（在插入之前吹一下卡带以确保它能工作）并一起玩上好几个小时。
- en: Then, the split screen multiplayer was introduced and that blew everyone's minds.
    "We can play together at the same time? We don't have to take turns? Awesome sauce!"
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，引入了分屏多人游戏，这让大家震惊。“我们可以同时一起玩吗？我们不需要轮流玩？太酷了！”
- en: Now, we are in the age of Bluetooth/online multiplayer games. No more are we
    sitting down with friends in the same room to play our games; no, we are antisocial
    now. That's not an issue though; it does leave a smaller mess to clean up when
    you're done playing. This is what will integrate—multiplayer with matchmaking—and
    it will be so cool!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们处于蓝牙/在线多人游戏的时代。我们不再和朋友们坐在同一个房间里玩游戏；不，我们现在是不合群的。但这不是问题；当你玩完之后，这会留下更少的混乱要清理。这就是我们将要集成的——多人游戏与匹配——这将非常酷！
- en: 'In order to do this, however, we do need to enable and integrate **Game Center**
    into our game. To start doing this, let''s open up our project in Xcode. With
    our project selected on the left-hand side, click on the **Capabilities** tab
    in the center of the screen, as shown in the following screenshot:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，为了做到这一点，我们确实需要启用并将**游戏中心**集成到我们的游戏中。为了开始做这件事，让我们在Xcode中打开我们的项目。在左侧选择我们的项目后，点击屏幕中央的**能力**标签，如下面的截图所示：
- en: '![Multiplayer integration](img/B03553_08_01.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![多人游戏集成](img/B03553_08_01.jpg)'
- en: Then, scroll through the list of capabilities we can add and find **Game Center**
    (it's usually the third one in this list). Click on the arrow to roll out the
    options. You will see a button that says **OFF**, click that button to turn on
    **Game Center**.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，浏览一下我们可以添加的功能列表，找到**游戏中心**（通常在这个列表中是第三个）。点击箭头展开选项。你会看到一个写着**关闭**的按钮，点击这个按钮来打开**游戏中心**。
- en: We can't run our game and expect **Game Center** to automatically work, no no!
    For that, we actually have to authenticate the user by logging them in when our
    app opens up.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不能运行我们的游戏并期望**游戏中心**自动工作，不，不！为了做到这一点，我们实际上需要在我们的应用打开时让用户进行身份验证。
- en: In order to ensure that everything is organized within our app, we will create
    a new group (or folder) within our project and name it `Multiplayer.`
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保我们的应用中一切井井有条，我们将在项目中创建一个新的组（或文件夹），并将其命名为`Multiplayer`。
- en: We will then have to create a new class (by navigating to **File** | **New**
    | **File**) and create a new `.h` file as well as a new `.m` file and name them
    both `MultiplayerHelper`. Then, drag the two files into the `Multiplayer` folder
    we just created.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们必须创建一个新的类（通过导航到**文件** | **新建** | **文件**）并创建一个新的`.h`文件以及一个新的`.m`文件，并将它们都命名为`MultiplayerHelper`。然后，将这两个文件拖入我们刚刚创建的`Multiplayer`文件夹中。
- en: 'We will now replace the code within `MultiplayerHelper.h` with the following
    code:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将`MultiplayerHelper.h`中的代码替换为以下代码：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This imports the `GameKit` API (we will use this to connect the two players
    together) and then defines two properties—one is a view controller that we will
    use to display the Game Center authentication and the other is used to keep track
    of the last error (if any) that occurred while interacting with Game Center.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码导入`GameKit` API（我们将使用它来连接两个玩家）并定义了两个属性——一个是视图控制器，我们将用它来显示游戏中心的认证，另一个用于跟踪在交互游戏中心时发生的最后一个错误（如果有）。
- en: 'Now, let''s pop on over to our `.m` file and change the code to the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们转到我们的`.m`文件，并将代码更改为以下内容：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: I know this does seem a bit daunting at first, but let's break it all down.
    At once, we get an instance of the `GKLocalPlayer` class, which represents the
    currently authenticated player. We then give `GKLocalPlayer` an authentication
    handler, which the `GameKit` API will call.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道一开始这看起来可能有点令人畏惧，但让我们把它分解一下。一次，我们得到`GKLocalPlayer`类的实例，它代表当前认证的玩家。然后我们给`GKLocalPlayer`一个认证处理程序，`GameKit`
    API将调用它。
- en: We set up a method to store any errors that may appear for easy debugging with
    the `setLastError:` method.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设置了一个方法来存储可能出现的任何错误，以便使用`setLastError:`方法进行易于调试。
- en: Next, we check whether the player is logged in to Game Center in either the
    GC app or anywhere else within your device. If not, the `GameKit` API will attempt
    to authenticate the user. This is where we display the authentication window (we
    all know the Game Center login popup window, don't we?). It's ideal for authenticating
    the user as soon as possible. No one wants to be interrupted with the authentication
    window midway through gameplay or while typing game settings.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们检查玩家是否在GC应用或设备中的任何其他地方登录到游戏中心。如果没有，`GameKit` API将尝试对用户进行认证。这就是我们显示认证窗口的地方（我们都知道游戏中心的登录弹出窗口，不是吗？）。尽快对用户进行认证是理想的。没有人想在游戏过程中或输入游戏设置时被认证窗口打断。
- en: Alternatively, if the player is logged in, the `authenticated` property of the
    `Game Kit` local player will be set to `true`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果玩家已经登录，`Game Kit`本地玩家的`authenticated`属性将被设置为`true`。
- en: Finally, the last method is just turning Game Center off. Who knows, maybe the
    player doesn't want to be bothered by it, so all the features get shut off.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，最后一个方法只是关闭游戏中心。谁知道呢，也许玩家不想被它打扰，所以所有功能都被关闭了。
- en: As Game Center authentication occurs in the background of the app, the game
    can authenticate at any time when the app is open, irrespective of whether the
    player is navigating screens or fighting a boss battle. That's not what we want.
    In order to counteract this from killing our game, we will use a bit of trickery.
    Basically, we will get Game Center to create a notification, and the current view
    that we are on will be responsible for displaying it. So, for example, if the
    notification is called in the main menu, no problem, we will call it right away.
    However, if we are mid-level and the notification is called, we will need to display
    the authentication window at a convenient time, such as when the player pauses
    or dies.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 由于游戏中心认证发生在应用的背景中，游戏可以在应用打开时随时进行认证，无论玩家是否在导航屏幕或与Boss战斗。这不是我们想要的。为了防止这种情况破坏我们的游戏，我们将使用一些技巧。基本上，我们将让游戏中心创建一个通知，而当前视图将负责显示它。例如，如果通知在主菜单中调用，没问题，我们会立即调用它。然而，如果我们处于关卡中间，并且通知被调用，我们需要在方便的时候显示认证窗口，比如玩家暂停或死亡时。
- en: 'To do this, we need to define the notification. So, in our `MultiplayerHelper.m`
    file, we will add the following line directly at the top of the file, just under
    the `@import GameKit` line:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，我们需要定义通知。因此，在我们的`MultiplayerHelper.m`文件中，我们将在文件顶部直接添加以下行，位于`@import GameKit`行下方：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Further down in our `setAuthenticationViewController:` method, add the following
    block of code:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的`setAuthenticationViewController:`方法中向下进一步，添加以下代码块：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: All that this method does is store and send the notification to the current
    view controller. Are you following me? I know it's a lot to take in, isn't it?
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法所做的只是存储并发送通知到当前视图控制器。你明白了吗？我知道这听起来可能很多，不是吗？
- en: 'Let''s now scroll down to our `-(void)setLastError:` method and add the following
    code within the parentheses:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们向下滚动到我们的`-(void)setLastError:`方法，并在括号内添加以下代码：
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will just send a log into the console if anything awry occurs. We set `MultiplayerHelper`
    first before the error so in the log we will actually see `MultiplayerHelper Error:`
    "`Connection Failed`" This way it is much easier to see what error is being thrown.
    There can be a lot of times a connection fails, by doing this we will be able
    to tell, not only what the error is, but what is causing the error. This is a
    good practice to follow; it makes things a heck of a lot easier when debugging
    issues!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这将仅在控制台中有任何异常发生时记录日志。我们在错误之前设置了 `MultiplayerHelper`，所以在日志中我们实际上会看到 `MultiplayerHelper
    Error:` "连接失败"。这样就可以更容易地看到抛出的错误。很多时候连接会失败，通过这样做，我们不仅能够知道错误是什么，还能知道导致错误的原因。这是一个很好的实践；在调试问题时会使事情变得容易得多！
- en: 'We then need to hop on over to our `MultiplayerHelper.h` file, and we need
    to add an external linkage method just above the `interface` method:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要跳转到我们的 `MultiplayerHelper.h` 文件，并在 `interface` 方法上方添加一个外部链接方法：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This will allow us to access this function through other parts of our project,
    so we can show the authentication view whenever needed.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这将允许我们通过项目的其他部分访问此函数，因此我们可以在需要时显示认证视图。
- en: 'Finally, we need to add in a declaration to authenticate the local player just
    above `@end`:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要在 `@end` 之上添加一个用于验证本地玩家的声明：
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: That's all we need to authenticate the player!
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们需要验证玩家身份的所有内容！
- en: 'For the moment, the content of your `MultiplayerHelper.h` file should look
    like the following:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，你的 `MultiplayerHelper.h` 文件的内容应该如下所示：
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Also, the content of your `MultiplayerHelper.m` file should look like the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你的 `MultiplayerHelper.m` 文件的内容应该如下所示：
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'With that all sorted out (hopefully everything is working perfectly for you),
    we will hop into our `ViewController.m` file, and we will add the following functions
    inside the `(void)viewDidAppear:` method:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有这些问题都解决（希望一切对你来说都运行得完美），我们将跳转到我们的 `ViewController.m` 文件，并在 `(void)viewDidAppear:`
    方法内添加以下函数：
- en: '[PRE9]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Again, we will use the `NSNotificationCenter` method, which will allow each
    `ViewController` class to send a notification, in this case to display the authentication
    view controller, so it can be handled differently depending on where it's being
    called in the `ViewController` class.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我们将使用 `NSNotificationCenter` 方法，这将允许每个 `ViewController` 类发送一个通知，在这种情况下是显示认证视图控制器，以便可以根据在
    `ViewController` 类中的调用位置进行不同的处理。
- en: 'Now, we need to add the method to actually show the authentication view controller.
    Further in the `ViewController.m` file, add the following function:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要添加一个实际显示认证视图控制器的方法。在 `ViewController.m` 文件中，添加以下函数：
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'When you run and test the game after a few seconds, you will be greeted with
    the following page:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在几秒钟后运行并测试游戏时，你会看到以下页面：
- en: '![Multiplayer integration](img/B03553_08_02.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![多人游戏集成](img/B03553_08_02.jpg)'
- en: 'When you type your credentials, you will be logged in, and then you will see
    the following page:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当你输入你的凭据时，你将登录，然后你会看到以下页面：
- en: '![Multiplayer integration](img/B03553_08_03.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![多人游戏集成](img/B03553_08_03.jpg)'
- en: We aren't done yet! We still need to search for other players to play with.
    The great thing about Game Center is that a matchmaking system is built right
    into the API, so we don't have to do any funky complicated programming or GUI
    creation.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有完成！我们还需要搜索其他玩家来一起玩。Game Center 的好处是匹配系统已经直接集成到 API 中，所以我们不需要进行任何复杂的编程或
    GUI 创建。
- en: 'Let''s hop back over to our `MultiPlayerHelper.h` file so that we can make
    the following changes by adding this block of code after our `@import` line:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到我们的 `MultiPlayerHelper.h` 文件，以便我们可以在 `@import` 行之后添加以下代码块进行以下更改：
- en: '[PRE11]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We then have to modify our `@interface` line, so we can support the matchmaking
    protocol we just created:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们必须修改我们的 `@interface` 行，以便我们可以支持我们刚刚创建的匹配协议：
- en: '[PRE12]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We will then add these functions after our `@interface` line:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们在 `@interface` 行之后添加以下函数：
- en: '[PRE13]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Whoa, whoa! Settle down there, cowboy! That's some trickery I've never seen
    before! Let's break it down!
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 哇，哇！冷静一下，牛仔！这是我以前从未见过的技巧！让我们来分解一下！
- en: First, we added a new protocol entitled `MultiPlayerHelperDelegate`. This is
    so we can notify other objects and functions when certain events occur, such as
    a new game starting or ending.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们添加了一个名为 `MultiPlayerHelperDelegate` 的新协议。这是为了在发生某些事件时通知其他对象和函数，例如新游戏开始或结束。
- en: Next, the `MultiplayerHelper` class defines two new protocols. The first protocol
    is the `GKMatchmakerViewControllerDelegate` function, which enables the `MultiplayerHelper`
    class to notify the player when it's found a new match. The second protocol is
    the `GKMatchDelegate` function, which is for Game Center to notify `MultiplayerHelper`
    if new data is coming in or if we lose the connection.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，`MultiplayerHelper` 类定义了两个新的协议。第一个协议是 `GKMatchmakerViewControllerDelegate`
    函数，它使 `MultiplayerHelper` 类能够在找到新的匹配时通知玩家。第二个协议是 `GKMatchDelegate` 函数，用于 Game
    Center 通知 `MultiplayerHelper` 如果有新数据传入或我们失去了连接。
- en: Finally, the next action allows the `MultiplayerHelper` class to search for
    someone to play with.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，下一个动作允许 `MultiplayerHelper` 类寻找可以一起玩的人。
- en: Easy, right? YES!
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 简单，对吧？YES！
- en: We will now hop over to our `GameKitHelper.m` file so that we can add more functions!
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将跳转到 `GameKitHelper.m` 文件，以便我们可以添加更多函数！
- en: 'The first function has to be added within our `@implementation` line:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个函数必须添加在我们的 `@implementation` 行内：
- en: '[PRE14]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This is a simple `true` or `false` statement that we will call if there is
    a new match beginning. Now, we will add the following function (I added it just
    after the `(void)authenticateLocalPlayer` method):'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的 `true` 或 `false` 声明，当有新的匹配开始时我们将调用它。现在，我们将添加以下函数（我是在 `(void)authenticateLocalPlayer`
    方法之后添加的）：
- en: '[PRE15]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This is the function that will allow a match to be found. We set it up so that,
    if the player doesn't sign in to Game Center, it will invalidate and do nothing.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这是允许找到匹配的功能。我们设置它，如果玩家没有登录到 Game Center，它将无效化并什么都不做。
- en: After this, we begin the search for a new match. This method allows us to customize
    the type of match we want, for example, the minimum or maximum players desired
    in the match. You can create a GUI so that the matchmaker can customize the match
    himself like in your typical FPS game.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们开始寻找新的匹配。此方法允许我们自定义我们想要的匹配类型，例如，匹配中所需的玩家数量最小或最大。你可以创建一个 GUI，让匹配器可以像在典型的
    FPS 游戏中那样自定义匹配。
- en: Then, we create a new instance of the Game Kit `MatchMakerViewController` function
    by setting the delegate to our `MultiplayerHelper` object, and it then pops it
    into the screen.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们通过将委托设置为我们的 `MultiplayerHelper` 对象来创建一个新的 Game Kit `MatchMakerViewController`
    实例，然后将其弹出屏幕。
- en: 'Finally, the `MatchMakerViewController` function begins to start searching.
    It will send out some call-backs, which we will now add. Insert the following
    directly after that method we just added; the first will be called when the user
    cancels searching for a friend:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`MatchMakerViewController` 函数开始搜索。它将发送一些回调，我们现在将添加。在刚刚添加的方法之后插入以下内容；第一个将在用户取消搜索朋友时被调用：
- en: '[PRE16]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The next is when the matchmaking process has failed; we then show in the log
    what happened:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个是在匹配过程失败时；我们将在日志中显示发生了什么：
- en: '[PRE17]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Now, we've located a match!
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经找到了一个匹配！
- en: '[PRE18]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The following block of code tells us whether the match has received any data
    sent from the player:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码块告诉我们匹配是否收到了玩家发送的数据：
- en: '[PRE19]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This tells us if there''s a change in the connection:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉我们连接是否发生变化：
- en: '[PRE20]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This will tell us if the game can''t start for some odd reason:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这将告诉我们游戏由于某些奇怪的原因无法开始：
- en: '[PRE21]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Finally, this tells us if there was an error in connecting to any player:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这告诉我们是否在连接任何玩家时出现了错误：
- en: '[PRE22]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We will add another `NSString` class at the top of our `MultiplayerHelper.m`
    file. Add the following declaration just under the definition of our `present_authentication_view_controller`
    line:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 `MultiplayerHelper.m` 文件的顶部添加另一个 `NSString` 类。在 `present_authentication_view_controller`
    定义下方添加以下声明：
- en: '[PRE23]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We will then scroll down to our `authenticatedLocalPlayer` method, and we will
    edit it so that it looks like the following:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将滚动到 `authenticatedLocalPlayer` 方法，我们将编辑它，使其看起来如下：
- en: '[PRE24]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Again, what we did here is create a new notification (the `NSString` class)
    to be called later on when the player is authenticated, as we will handle the
    calling of that notification momentarily.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们在这里创建了一个新的通知（`NSString` 类），稍后当玩家被认证时将被调用，因为我们将立即处理那个通知的调用。
- en: 'Let''s pop back over to our `MultiPlayerHelper.h` file, where we will add the
    following line of code just below the `@import` line:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到我们的 `MultiPlayerHelper.h` 文件，我们将在此 `@import` 行下方添加以下代码行：
- en: '[PRE25]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Again, this is an external linkage that we will access later. For the moment,
    we will change our `ViewController.h` file:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，这是一个外部链接，我们稍后会访问。目前，我们将更改我们的 `ViewController.h` 文件：
- en: '[PRE26]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: We needed to adjust the `ViewController` interface to implement the `MultiPlayerHelperDelegate`
    method.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要调整`ViewController`接口以实现`MultiPlayerHelperDelegate`方法。
- en: 'We now need to adjust our `ViewController.m` file with the following additions
    and changes. First, we will add this block to our `(void)viewDidAppear` function:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在需要调整我们的`ViewController.m`文件，添加以下添加和更改。首先，我们将添加以下代码块到我们的`(void)viewDidAppear`函数中：
- en: '[PRE27]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The following code shows us how we accept the notification we created earlier
    to authenticate the player:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了我们如何接受我们之前创建的通知以验证玩家：
- en: '[PRE28]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now, add the following definitions under the `dealloc` function:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在`dealloc`函数下添加以下定义：
- en: '[PRE29]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: These will simply log each notification that comes through the `MultiPlayerHelperDelegate`
    method, so when a game begins or ends or when data is received, you will see a
    log in the console.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这些将简单地记录通过`MultiPlayerHelperDelegate`方法传递的每个通知，所以当游戏开始或结束或接收到数据时，你将在控制台中看到日志。
- en: 'Now run it, and you will see the following output:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在运行它，你将看到以下输出：
- en: '![Multiplayer integration](img/B03553_08_04.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![多人集成](img/B03553_08_04.jpg)'
- en: Awesome!! That part is looking pretty cool, but we still have quite a way to
    go.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！！这部分看起来相当酷，但我们还有很长的路要走。
- en: Game Center integration
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 游戏中心集成
- en: Matchmaker, matchmaker find me a match! Now's the time to start finding our
    friends!
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 匹配师，匹配师，为我找一个匹配对象！现在是开始寻找我们的朋友的时候了！
- en: 'Let''s pop over to our `MultiplayerHelper.h` file so that we can add in a new
    dictionary to store the players we find. Just after the `@interface` line, add
    in the following declaration:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们转到我们的`MultiplayerHelper.h`文件，以便我们可以在`@interface`行之后添加一个新的字典来存储我们找到的玩家。就在`@interface`行之后，添加以下声明：
- en: '[PRE30]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: This dictionary allows Game Kit to easily look up player data.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这个字典允许游戏工具包轻松查找玩家数据。
- en: 'Now, we will go over to our `MultiplayerHelper.m` file and make a few new changes.
    First, we will add a new method just after we authenticate our local player:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将转到我们的`MultiplayerHelper.m`文件并做一些新的更改。首先，我们将在验证我们的本地玩家后添加一个新的方法：
- en: '[PRE31]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Next, we need to actually call this method, and we will call it in two separate
    areas. In the first method, we will adjust the following code:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要实际调用这个方法，我们将在两个不同的地方调用它。在第一个方法中，我们将调整以下代码：
- en: '[PRE32]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'We need to adjust yet another method:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要调整另一个方法：
- en: '[PRE33]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Now, if you were to test our code on two devices, you should get the following
    in the console:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你要在两个设备上测试我们的代码，你应该在控制台看到以下内容：
- en: '[PRE34]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: That's it! Now all that is required to finish our multiplayer integration is
    to handle the controls between the two connected devices.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！现在完成我们的多人集成所需的所有工作就是处理两个连接设备之间的控制。
- en: Now that we have the multiplayer features all integrated, it's up to you to
    make both players appear! (You didn't think I would make it that easy for you,
    did you?)
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将多人功能全部集成，接下来就轮到你了，让两个玩家都出现！（你不会以为我会让你那么容易做到吧，对吧？）
- en: Most of the work has been completed for you; just keep in mind how to work between
    multiple classes. Want a hint? Send messages! For example, when you press the
    jump button, send the `MultiPlayerHelper` method a message to make `player2` move
    within the `GameScene` class. Oh, and don't forget to set up `player2`.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分工作已经为你完成了；只需记住如何在多个类之间工作。想要一个提示吗？发送消息！例如，当你按下跳跃按钮时，向`MultiPlayerHelper`方法发送消息使`player2`在`GameScene`类中移动。哦，别忘了设置`player2`。
- en: I know you can do it!
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道你能做到！
- en: This will be the final challenge for you.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这将是你的最后一个挑战。
- en: When you're done...
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成时...
- en: Pushing updates to the AppStore!
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 正在向AppStore推送更新！
- en: Now that you have completed your awesome new multiplayer game, it's time to
    push the latest version of your game to the AppStore! Do you remember how we pushed
    our game in the first place? The steps are very similar!
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经完成了你那令人惊叹的新多人游戏，是时候将你游戏的最新版本推送到AppStore了！你还记得我们最初是如何推送我们的游戏的吗？步骤非常相似！
- en: To begin, simply log in to [itunesconnect.apple.com](http://itunesconnect.apple.com)
    and, in the **My Apps** section, click on the app you want to update.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，简单地登录到[itunesconnect.apple.com](http://itunesconnect.apple.com)，然后在**我的应用**部分点击你想要更新的应用。
- en: '![Pushing updates to the AppStore!](img/B03553_08_05.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![向AppStore推送更新！](img/B03553_08_05.jpg)'
- en: Once you have selected the app, you will be greeted with a big blue circle with
    an **i** in the center asking you to create a new app version if you want to change
    the app information. Well how the heck do I do that?!
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你选择了应用，你将看到一个中间有**i**的大蓝色圆圈，要求你创建一个新的应用版本，如果你想要更改应用信息。那么我该如何做到这一点呢？！
- en: It's easy, try to stay calm.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 很简单，尽量保持冷静。
- en: 'On the sidebar, simply click on the **+** button where it says **VERSION OR
    PLATFORM**, as shown in the following screenshot:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在侧边栏中，只需点击显示**版本或平台**处的**+**按钮，如下面的截图所示：
- en: '![Pushing updates to the AppStore!](img/B03553_08_06.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![向AppStore推送更新！](img/B03553_08_06.jpg)'
- en: At the time of writing this book, it will ask you whether you want to create
    a new iOS version or a tvOS version.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写这本书的时候，它会问你想要创建新的iOS版本还是tvOS版本。
- en: For this book (because we didn't cover tvOS).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这本书（因为我们没有涵盖tvOS）。
- en: ITunes connect will then ask you to type in the new version number. When you
    click on **Done**, it will appear above the current version that says **Ready
    for Sale**.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: ITunes connect将要求你输入新版本号。当你点击**完成**时，它将出现在当前版本上方，显示为**准备销售**。
- en: 'Once you click on the new version, you will be asked to fill in new version
    information and upload new screenshots, as shown in the following screenshot:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦点击新版本，你将被要求填写新版本信息和上传新截图，如下面的截图所示：
- en: '![Pushing updates to the AppStore!](img/B03553_08_07.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![向AppStore推送更新！](img/B03553_08_07.jpg)'
- en: You can then change the description of the app and contact information and select
    when you want the app to be released. When you have it all filled out and all
    the new screenshots uploaded, you can exit your browser and open up Xcode again.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以更改应用的描述和联系方式，并选择你希望应用何时发布。当你填写完所有内容并上传了所有新截图后，你可以退出浏览器并再次打开Xcode。
- en: I know, earlier we used Application Loader, but Xcode seems to be a much easier
    way to do it because you can build and submit directly through it.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道，我们之前使用了Application Loader，但Xcode似乎是一个更简单的方法，因为你可以直接通过它构建和提交。
- en: Do you remember how we do this? No problem!
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 你还记得我们是怎么做的吗？没问题！
- en: 'Click on the scheme at the top of our project and ensure that we have a device
    build selected (otherwise, the archive option will not be available), as shown
    in the following screenshot:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 点击我们项目顶部的方案，确保我们已选择设备构建（否则，将不可用存档选项），如下面的截图所示：
- en: '![Pushing updates to the AppStore!](img/B03553_08_08.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![向AppStore推送更新！](img/B03553_08_08.jpg)'
- en: Once you have a device build selected, navigate to **Product** | **Archive**.
    Xcode will now build our app and archive it for AppStore submission. Once it's
    done, it will show you the organizer with all the builds of our app and the other
    apps we have built in the past. The most recent build will automatically be selected.
    On the sidebar, simply click on **Upload to App Store**.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择了设备构建，导航到**产品** | **存档**。Xcode现在将构建我们的应用并将其存档以供AppStore提交。完成后，它将显示包含我们应用和过去构建的其他应用的组织者。最近的构建将自动选中。在侧边栏中，只需点击**上传到App
    Store**。
- en: '![Pushing updates to the AppStore!](img/B03553_08_09.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![向AppStore推送更新！](img/B03553_08_09.jpg)'
- en: Xcode will validate our package, sign it, and then archive it.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode将验证我们的包，签名，然后存档它。
- en: '![Pushing updates to the AppStore!](img/B03553_08_10.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![向AppStore推送更新！](img/B03553_08_10.jpg)'
- en: Once that's done, simply click on the **Upload** button! Xcode will automatically
    upload your project file to the AppStore. Don't forget to change the version number
    in the list before you upload it, or else it will come up with an error after
    the upload.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成，只需点击**上传**按钮！Xcode将自动将你的项目文件上传到AppStore。在上传之前，别忘了更改列表中的版本号，否则上传后会出现错误。
- en: Now all you have to do is wait for your awesome new version to be released!
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你只需要等待你那令人惊叹的新版本发布！
- en: I'm so proud of you guys! You've come such a long way!
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我为你们感到非常自豪！你们已经走了这么长的路！
- en: I didn't forget... I just missed it
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我没有忘记……我只是错过了它
- en: Did you have any issues when implementing the multiplayer functionality of our
    game? Did it show you it wasn't recognized by Game Center? Silly me! I forgot
    to mention a somewhat critical step to follow... Oops! Hey, it happens!
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在实现我们游戏的多玩家功能时，你遇到任何问题吗？它显示它没有被Game Center识别吗？真傻！我忘记提到一个相当关键的步骤……哎呀！嘿，这种情况是会发生的！
- en: So, if you did get that error when running your app on a device or even in the
    simulator, it's because your game hasn't been registered in Game Center.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你在设备或模拟器上运行你的应用时遇到了那个错误，那是因为你的游戏还没有在Game Center注册。
- en: How do you do this?
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 你是怎么做到这一点的？
- en: Log in to [itunesconnect.apple.com](http://itunesconnect.apple.com) again, go
    to **My Apps**, and then open up your app. Scroll down and, if you see a gray
    box with the text **Click + to select Multiplayer Compatibility for this app version**
    under the **Multiplayer Compatibility** section, then you know where I've, you've,
    I've, you've gone wrong.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 再次登录到 [itunesconnect.apple.com](http://itunesconnect.apple.com)，进入**我的应用**，然后打开你的应用。向下滚动，如果你在**多人游戏兼容性**部分看到一个带有文本**点击+以选择此应用版本的多人游戏兼容性**的灰色框，那么你就知道我之前哪里做错了。
- en: '![I didn''t forget... I just missed it](img/B03553_08_11.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![我没有忘记...我只是错过了它](img/B03553_08_11.jpg)'
- en: Simply click the **+** button and select your app to add multiplayer compatibility.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 简单地点击**+**按钮，选择你的应用以添加多人游戏兼容性。
- en: You're done!
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你完成了！
- en: Guys, I'm so happy you've come all this way with me! I know, at times it may
    have been confusing or a lot to take in, but you've made it!
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 伙计们，我非常高兴你们能陪我走这么远！我知道，有时可能会感到困惑或信息量很大，但你们做到了！
- en: I hope you will be able to Master iOS Development with all the knowledge and
    tips and tricks I have taught you!
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你能通过我所传授的所有知识和技巧，掌握iOS开发！
- en: Have an awesome game development career, and never give up on your dreams and
    passions. The following image shows us the final result when the game is all completed.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你在游戏开发生涯中一切顺利，永远不要放弃你的梦想和热情。以下图片展示了游戏全部完成时的最终结果。
- en: '![You''re done!](img/B03553_08_12.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![你完成了！](img/B03553_08_12.jpg)'
- en: Summary
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We discussed implementing multiplayer integration! We set up GameCenter for
    our game, and we even got player authentication and match searching all ready
    to go. It's all up to you to finish the awesome project. We also discussed how
    to upload an update of our game, so the millions around the world can enjoy your
    newest update.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了实现多人游戏集成！我们为我们的游戏设置了GameCenter，甚至已经准备好了玩家认证和匹配搜索。完成这个精彩项目的任务完全取决于你。我们还讨论了如何上传我们游戏的更新版本，这样全世界的数百万玩家都可以享受你的最新更新。
