- en: Building Our App Structure in Storyboard
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Storyboard中构建我们的应用结构
- en: In the last chapter, we created our Tab Bar Controller. In this chapter, we
    will be creating other View Controllers that we need in our app. Our goal for
    the end of this chapter is to be able to navigate through the app with the least
    amount of code needed.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一章，我们创建了Tab Bar Controller。在这一章，我们将创建我们应用中需要的其他View Controllers。我们本章的目标是使用最少的代码在应用中导航。
- en: 'The following will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: Collection View
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Collection View
- en: Outlets
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 出口
- en: Modals
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模态
- en: Before we begin setting up our Collection View Controller, you will need to
    add two files, `ExploreViewController` and `RestaurantViewController`, which you'd
    have downloaded from Packt's website or GitHub. By adding these files and then
    a bit of code, we will be able to focus on the design of our app.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始设置Collection View Controller之前，你需要添加两个文件，`ExploreViewController`和`RestaurantViewController`，这些文件你可以从Packt的网站或GitHub下载。通过添加这些文件和一些代码，我们将能够专注于我们应用的设计。
- en: 'Later in the book, we will delete these files, and create them ourselves. But,
    for the purposes of this chapter, let''s add these two files into our project:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的后面部分，我们将删除这些文件，并自己创建它们。但是，为了本章的目的，让我们将这两个文件添加到我们的项目中：
- en: 'Open the project `assets` folder that you downloaded from Packt''s website
    or GitHub. Open `Chapter_08` and drag the two files in the folder into your project
    in the Navigator panel:'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开从Packt的网站或GitHub下载的项目`assets`文件夹。打开`Chapter_08`，并将文件夹中的两个文件拖到导航器面板中的项目中：
- en: '![](img/dac41712-72f1-443c-8b7c-22a896e13a81.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dac41712-72f1-443c-8b7c-22a896e13a81.png)'
- en: 'When you drop the folder, you will get the following message:'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你放下文件夹时，你会得到以下消息：
- en: '![](img/fc963047-00ae-4ba1-9f24-ecac8a6144a2.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fc963047-00ae-4ba1-9f24-ecac8a6144a2.png)'
- en: Make sure you have both Copy items if needed and Create groups selected. Then,
    hit Finish.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你选中了“如果需要则复制项目”和“创建组”选项。然后，点击完成。
- en: 'Now we can add code to these new files, which will allow us to dismiss modals
    that we will create later in this chapter. A modal is a container that opens on
    top of the current content showing in an app, and allows you to take more action
    without opening up all of the information on the screen being viewed. Let''s add
    the code to enable us to dismiss modals:'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以向这些新文件添加代码，这将允许我们关闭本章后面将创建的模态。模态是一个容器，它会在应用当前显示的内容上方打开，并允许你进行更多操作，而无需打开屏幕上查看的所有信息。让我们添加代码，使我们能够关闭模态：
- en: 'Open the `ExploreViewController.swift` file and, under where it says `// Add
    Unwind here` at the bottom of the file, add the following code:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`ExploreViewController.swift`文件，并在文件底部标有`// 在此处添加Unwind`的地方，添加以下代码：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](img/254432a2-3608-4247-85ff-7b05cf3003ed.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/254432a2-3608-4247-85ff-7b05cf3003ed.png)'
- en: If we look at our app design, which we reviewed earlier in this book, in our
    first tab, the Explore tab, we show a grid of food cuisines as well as a list
    of locations. First, we will set up our grid.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看本书前面回顾的应用设计，在我们的第一个标签，探索标签中，我们显示了一个食物菜系的网格以及位置列表。首先，我们将设置我们的网格。
- en: Adding a Collection View Controller
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加Collection View Controller
- en: 'As we discussed earlier in the book, Collection View Controllers allow us to
    display elements within a grid. Let''s set up our Collection View:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如本书前面所述，Collection View Controllers允许我们在网格中显示元素。让我们设置我们的Collection View：
- en: Select the `Main.storyboard` file, making sure that you are zoomed out and can
    see all of your scenes. In the Utilities panel, ensure that you have the object
    library tab selected.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`Main.storyboard`文件，确保你已经缩小视图，可以看到所有的场景。在工具面板中，确保你选择了对象库标签页。
- en: 'Next, in the filter field, type: `collectionview`:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在过滤器字段中，输入：`collectionview`：
- en: '![](img/f2d03077-fa58-4f92-8dc6-7473c043ce1a.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f2d03077-fa58-4f92-8dc6-7473c043ce1a.png)'
- en: 'Click on and drag Collection View, and drop it onto the Explore View Controller:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击并拖动Collection View，并将其拖放到探索视图控制器：
- en: '![](img/f44bf39f-a4c7-4f1d-a162-29f1ed7f5573.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f44bf39f-a4c7-4f1d-a162-29f1ed7f5573.png)'
- en: 'After you drop it onto the scene, you will see small boxes around the entire
    Collection View component. Select the Pin icon, and enter the following values:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其拖放到场景中后，你将看到整个Collection View组件周围有小的方框。选择固定图标，并输入以下值：
- en: '![](img/e9b27992-f007-42f6-bb3b-8de87017010f.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e9b27992-f007-42f6-bb3b-8de87017010f.png)'
- en: All values under Add New Constraints are set to `0`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在“添加新约束”下的所有值都设置为`0`。
- en: Click on Add 4 Constraints.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击添加4个约束。
- en: We now have our Collection View component set up for our Explore tab.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经为探索标签设置了Collection View组件。
- en: Hooking up our outlets
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接我们的出口
- en: 'Let''s now link our file, `ExploreViewController`, to our `UIViewController`
    in storyboard:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在将我们的文件`ExploreViewController`链接到Storyboard中的`UIViewController`：
- en: 'While still in the `Main.storyboard` file, select the `UIViewController` with
    the Collection View that we just created, by clicking on the left-most icon at
    the top of that controller:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在仍然处于`Main.storyboard`文件的情况下，通过点击该控制器顶部的最左侧图标来选择我们刚刚创建的带有集合视图的`UIViewController`：
- en: '![](img/efec4212-7ead-4873-93dd-eff73cb2e848.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/efec4212-7ead-4873-93dd-eff73cb2e848.png)'
- en: 'Now, in the Utilities panel, select the Identity Inspector, which is the third
    icon from the left:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在工具面板中，选择身份检查器，这是从左数第三个图标：
- en: '![](img/40860bbe-444e-4af8-882e-6a5a835026c3.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/40860bbe-444e-4af8-882e-6a5a835026c3.png)'
- en: Under Custom Class, in the Class dropdown menu, select `ExploreViewController`
    and hit *Enter*.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在自定义类部分，在类下拉菜单中选择`ExploreViewController`并按*Enter*。
- en: 'After you hit *Enter*, select the Connections Inspector, the last icon on the
    right, in the Utilities panel:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你按下*Enter*后，选择连接检查器，工具面板中右侧的最后一个图标：
- en: '![](img/acabb04d-9b04-41fb-b27a-aaf6cc941d14.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/acabb04d-9b04-41fb-b27a-aaf6cc941d14.png)'
- en: 'Under Outlets, you will see collectionView and an empty circle:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在输出部分，你会看到collectionView和一个空白圆圈：
- en: '![](img/4a2db1e3-3e49-4ada-a4f3-166042f574d1.png)`IBOutlet` is a way to a connect
    to a UI element. We have a Collection View on our `UIViewController`; now, we
    are hooking into that variable. Later in the book, you will learn how to create
    these variables.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/4a2db1e3-3e49-4ada-a4f3-166042f574d1.png)`IBOutlet`是一种连接到UI元素的方式。我们在`UIViewController`上有一个集合视图；现在，我们正在连接到这个变量。在本书的后面，你将学习如何创建这些变量。'
- en: 'Click on the collectionView circle, and drag from the circle to the Collection
    View that we just added inside of the `UIViewController`:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击collectionView圆圈，并从圆圈拖动到我们刚刚添加到`UIViewController`内部的集合视图：
- en: '![](img/29ba7deb-48f4-42f5-8769-54a5a9fdcc81.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/29ba7deb-48f4-42f5-8769-54a5a9fdcc81.png)'
- en: 'Once you release it, you will see the circle become filled:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你释放它，你会看到圆圈被填充：
- en: '![](img/6475920c-1d10-4d45-9f62-f68636a87f26.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6475920c-1d10-4d45-9f62-f68636a87f26.png)'
- en: Next, we need to hook up the data source and delegate. This allows us to pass
    data to our Collection View, as well as know when our Collection View has some
    kind of interaction.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要连接数据源和代理。这允许我们将数据传递到我们的集合视图，并知道我们的集合视图何时发生某种交互。
- en: The `dataSource` property is what is used to supply the data for our Collection
    View, so we need to pass whatever data we have to this property. On the other
    hand, the `delegate` property, which supplies the behavior, does not require us
    to supply anything, as it receives interactions that happen within our Collection
    View.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`dataSource`属性是我们用来为我们的集合视图提供数据的，因此我们需要将我们拥有的任何数据传递给这个属性。另一方面，提供行为的`delegate`属性不需要我们提供任何内容，因为它接收在我们集合视图内发生的交互。'
- en: In your scene, select your Collection View and then, in the Utilities panel,
    select the Connections Inspector.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的场景中，选择你的集合视图，然后在工具面板中选择连接检查器。
- en: 'Under the Outlets section, you will see two empty circles, `dataSource` and
    `delegate`:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在输出部分，你会看到两个空白圆圈，`dataSource`和`delegate`：
- en: '![](img/5a0ad791-5071-4909-8fe9-710e90245306.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5a0ad791-5071-4909-8fe9-710e90245306.png)'
- en: 'Click on and drag from the empty circle of the `dataSource` property to the
    Explore View Controller in your Outline view, and then release:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击并从`dataSource`属性的空白圆圈拖动到你的大纲视图中的Explore View Controller，然后释放：
- en: '![](img/1ce7db31-ec91-489c-976c-cc4743b8d894.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1ce7db31-ec91-489c-976c-cc4743b8d894.png)'
- en: 'Repeat for the `delegate` property:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对`delegate`属性重复此操作：
- en: '![](img/86efc494-4da5-421b-9222-558d968a1103.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/86efc494-4da5-421b-9222-558d968a1103.png)'
- en: Next, let's set up our Collection View prototype cell to have a color.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们设置我们的集合视图原型单元格以具有颜色。
- en: Creating a custom color
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自定义颜色
- en: 'In Xcode 9, we are now able to add colors to your `Assets.xcassets` folder.
    This is great when you want to have all your colors in one location. Before we
    update our explore cell, let''s create a new color:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在Xcode 9中，我们现在能够向你的`Assets.xcassets`文件夹添加颜色。当你想要将所有颜色放在一个位置时，这很棒。在我们更新我们的探索单元格之前，让我们创建一个新的颜色：
- en: Open the `Assets.xcassets` file.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`Assets.xcassets`文件。
- en: Right-click inside of the `Assets.xcassets`, where you will see folders, and
    create a new folder called colors:![](img/6ac0f8cc-7541-4516-92dd-8b9580276e33.png)
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Assets.xcassets`内部右键单击，你会看到文件夹，并创建一个名为colors的新文件夹：![图片](img/6ac0f8cc-7541-4516-92dd-8b9580276e33.png)
- en: 'Next, right-click the `Color` folder, and this time, select New Color Set.
    You will see a new color added to your folder. Select the Attributes inspector
    in the Utilities panel:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，右键点击 `Color` 文件夹，这次选择新建颜色集。你会在文件夹中看到一个新的颜色被添加。在实用工具面板中选择属性检查器：
- en: '![](img/51fb249c-dc6b-41d2-8d43-9ea04f80d4f8.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/51fb249c-dc6b-41d2-8d43-9ea04f80d4f8.jpg)'
- en: 'Under Color set, update name: `Demo Grey`.'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在颜色集下，更新名称：`Demo Grey`。
- en: 'Under Color, click on the color, and you will see a color panel:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在颜色下，点击颜色，你会看到一个颜色面板：
- en: '![](img/f0a3f6ec-fbab-4a4f-9d0b-34205345258d.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f0a3f6ec-fbab-4a4f-9d0b-34205345258d.jpg)'
- en: 'Click the second tab, Color Slider, and change the Hex Color # value to `AAAAAA`.
    When you are done, you should see the following:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击第二个标签页，颜色滑块，并将十六进制颜色值更改为 `AAAAAA`。完成操作后，你应该看到以下内容：
- en: '![](img/944e7e68-a927-422c-ba7c-a6fecb733431.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/944e7e68-a927-422c-ba7c-a6fecb733431.png)'
- en: Now that we have a color, we will be able to find our new color in the Color
    drop-down, as you will see next.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们有了颜色，我们将在颜色下拉菜单中找到我们的新颜色，就像你接下来会看到的那样。
- en: Setting up our cell
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置我们的单元格
- en: 'To set up our cell, we need to perform the following steps:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置我们的单元格，我们需要执行以下步骤：
- en: In `Main.storyboard`, select the Collection View prototype cell, which is the
    small box inside of your Collection View.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Main.storyboard` 中，选择集合视图原型单元格，这是集合视图内部的小方块。
- en: 'Open the Attributes inspector in the Utilities panel:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在实用工具面板中打开属性检查器：
- en: '![](img/4106dba3-92d7-41e9-8902-9ec472de8d2f.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4106dba3-92d7-41e9-8902-9ec472de8d2f.png)'
- en: 'Update the following:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新以下内容：
- en: 'Identifier: `exploreCell`'
  id: totrans-73
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标识符：`exploreCell`
- en: 'Background: Demo Grey'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 背景：演示灰色
- en: 'In order to update the background, you will need to click on the drop-down
    arrow under Background. You will see that our Demo Grey has been added:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了更新背景，你需要点击背景下的下拉箭头。你会看到我们的 Demo Grey 已经被添加：
- en: '![](img/e159f61b-f6c2-4e1f-8694-d7f7fe0db594.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e159f61b-f6c2-4e1f-8694-d7f7fe0db594.png)'
- en: 'You should now see the following:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该看到以下内容：
- en: '![](img/2c54ec16-00df-4aa7-80d4-943b5c1f1ec4.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2c54ec16-00df-4aa7-80d4-943b5c1f1ec4.png)'
- en: Next, we need to add a section header.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要添加一个部分标题。
- en: Section header
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部分标题
- en: 'Our section header will include the page title, selected location, and a button
    that we will use to see the locations:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的部分标题将包括页面标题、所选位置和一个我们将用来查看位置的按钮：
- en: Select the Collection View in the `Main.storyboard` outline.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Main.storyboard` 概要中选中集合视图。
- en: 'Then, in your Utilities panel, select the Attributes inspector and, under Collection
    View Accessories, select the checkbox next to **section header**:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在你的实用工具面板中选择属性检查器，在集合视图附件下，选择 **部分标题** 旁边的复选框：
- en: '![](img/5987211d-837f-4f39-89b0-e7338785501c.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5987211d-837f-4f39-89b0-e7338785501c.png)'
- en: 'Next, you will see a box appear above our Demo Grey cell, which is our new
    section header; you should select this:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你将看到一个框出现在我们的 Demo Grey 单元格上方，这是我们新的部分标题；你应该选择这个：
- en: '![](img/a645b8fb-2be6-48d3-aab2-9e9ce3b86067.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a645b8fb-2be6-48d3-aab2-9e9ce3b86067.png)'
- en: 'Finally, in the Attributes inspector in the Utilities panel, update Identifier
    to Header:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在实用工具面板中的属性检查器中，更新标识符为 Header：
- en: '![](img/429dca3c-3302-4f33-aa44-aedc8a140fbf.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/429dca3c-3302-4f33-aa44-aedc8a140fbf.png)'
- en: 'Let''s build and run the project by hitting the Play button (or use *cmd* +
    *R*):'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过点击播放按钮（或使用 *cmd* + *R*）来构建和运行项目：
- en: '![](img/0057c303-5124-4619-970d-6f4b011a0fb8.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0057c303-5124-4619-970d-6f4b011a0fb8.png)'
- en: You will see that you now have a grid of boxes and some white space (the section
    header) near the top of the grid. Before we work on the section header, let's
    update our grid to match our design of two items per row with a particular size
    cell.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到现在你有一个网格状的方块和一些白色空间（部分标题）在网格的顶部附近。在我们开始处理部分标题之前，让我们更新我们的网格以匹配每行两个特定大小的单元格的设计。
- en: Updating the grid
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新网格
- en: 'In order to update our grid, we need to take the following steps:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更新我们的网格，我们需要采取以下步骤：
- en: Use *cmd* + *Shift* + *O*, and in the Open Quickly window, type `Main.storyboard`,
    and then hit *Enter*.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 *cmd* + *Shift* + *O*，在快速打开窗口中输入 `Main.storyboard`，然后按 *Enter*。
- en: Select the Collection View, and then, in the Utilities panel, select Size Inspector.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择集合视图，然后在实用工具面板中选择大小检查器。
- en: 'Update the following values, based on the simulator that you are currently
    using. These values may need to be changed so that your grid has two columns of
    cells, so feel free to alter the values:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据你当前使用的模拟器，更新以下值。这些值可能需要更改，以便你的网格有两列单元格，所以请随意更改这些值：
- en: 'For iPhone 7, use the following values:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 iPhone 7，使用以下值：
- en: '![](img/ee06d59a-9c3e-45b6-b512-f43575150a39.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ee06d59a-9c3e-45b6-b512-f43575150a39.png)'
- en: 'For iPhone 7 Plus, use the following values:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 对于iPhone 7 Plus，请使用以下值：
- en: '![](img/caf4656d-f4e0-4c1a-a8a8-cb0f7f5f6f62.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/caf4656d-f4e0-4c1a-a8a8-cb0f7f5f6f62.png)'
- en: 'For iPhone 4/iPhone SE/iPhone 5/iPhone 5s, use the following values:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 对于iPhone 4/iPhone SE/iPhone 5/iPhone 5s，请使用以下值：
- en: '![](img/0522565b-4276-4ef7-8085-f5c6ed89af89.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0522565b-4276-4ef7-8085-f5c6ed89af89.png)'
- en: 'This is what everything should look like when you are done:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，一切应该看起来像这样：
- en: '![](img/37498974-a3ff-4377-9125-2aeecb6ada2b.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/37498974-a3ff-4377-9125-2aeecb6ada2b.png)'
- en: For now, as we just did, we will use storyboard settings to get our cells set
    up. Later in the book, we will make this dynamic so that our widths and heights
    adjust with code. Next, we will work on our section header.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，就像我们刚刚做的那样，我们将使用故事板设置来设置我们的单元格。在本书的后面部分，我们将使它动态化，以便我们的宽度和高度可以通过代码进行调整。接下来，我们将处理我们的部分标题。
- en: Adding a modal
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加模态
- en: 'Let''s review the design for the section header:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下部分标题的设计：
- en: '![](img/8ee30136-2e16-412c-a26e-37dea6261bbe.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8ee30136-2e16-412c-a26e-37dea6261bbe.png)'
- en: 'Notice that we have a + Location button that will display our locations. Let''s
    add that modal now:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们有一个显示位置的 + 位置按钮。现在让我们添加这个模态：
- en: While in the `Main.storyboard` file, select the object library and, in the filter
    field at the bottom of the Library pane, type `button`.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您在 `Main.storyboard` 文件中时，选择对象库，并在库窗格底部的筛选字段中输入 `button`。
- en: 'Now, drag and drop the `Button` component into the section header we created
    in our Explore View Controller:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将 `Button` 组件拖放到我们在探索视图控制器中创建的部分标题：
- en: '![](img/e45a7a85-98a4-41b9-b232-a704f91ad725.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e45a7a85-98a4-41b9-b232-a704f91ad725.png)'
- en: We will format the button later in terms of location and size.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在稍后对按钮进行格式化，包括位置和大小。
- en: 'Next, we need to add another View Controller to our storyboard:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要在我们的故事板中添加另一个视图控制器：
- en: In the filter, type `viewcontroller`, and drag and drop the `ViewController`
    component above the Explore View Controller in the `Main.storyboard`.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在筛选中输入 `viewcontroller`，并将 `ViewController` 组件拖放到 `Main.storyboard` 中的探索视图控制器上方。
- en: With the View Controller selected, navigate to Editor | EmbedIn | NavigationController.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选择视图控制器后，导航到编辑器 | 嵌入 | 导航控制器。
- en: 'Now, Ctrl + drag from where it says Button in the View Controller under the
    Explore tab to the Navigation Controller that was just created (you can also do
    this within Outline view by, Ctrl dragging from the button to the new Navigation
    Controller you just created):'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，从探索标签下的视图控制器中的“按钮”处，使用 Ctrl + 拖动到刚刚创建的导航控制器（您也可以在大纲视图中这样做，通过从按钮拖动到您刚刚创建的新导航控制器）：
- en: '![](img/f7849e8f-bdd8-47a3-89b0-d0e342484993.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f7849e8f-bdd8-47a3-89b0-d0e342484993.png)'
- en: 'When you let go, you will be presented with the following menu, and you should
    select Present Modally:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您松开鼠标时，会出现以下菜单，您应该选择模态显示：
- en: '![](img/ac8cfc22-0ba0-4107-adf6-e621405420cd.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ac8cfc22-0ba0-4107-adf6-e621405420cd.png)'
- en: Now, let's run the project by hitting the Play button (or use *cmd* *+* *R*).
    You will see that our button now launches a modal. In the next chapter, we will
    make this button match our design.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过点击播放按钮（或使用 *cmd* *+* *R*）来运行项目。您会看到我们的按钮现在可以打开一个模态。在下一章中，我们将使这个按钮符合我们的设计。
- en: '![](img/d8d0ed02-fb9b-4511-8810-603b0d8652b9.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d8d0ed02-fb9b-4511-8810-603b0d8652b9.png)'
- en: 'Currently, as you can see in the preceding screenshot, we cannot dismiss this
    modal. Therefore, we need a cancel button and a done button to dismiss the view.
    Let''s fix this:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，正如您在前面的截图中所见，我们无法关闭此模态。因此，我们需要一个取消按钮和一个完成按钮来关闭视图。让我们修复这个问题：
- en: 'Open `Main.storyboard` and select the segue that is connected to the button
    in the header. It should now be highlighted:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `Main.storyboard` 并选择与标题中的按钮连接的 segue。现在它应该被突出显示：
- en: '![](img/2fc9e412-f674-4735-a852-6e827a3e9dd9.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2fc9e412-f674-4735-a852-6e827a3e9dd9.png)'
- en: 'Then, go to your View Controller (not the Navigation Controller) of your modal:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，转到您的模态视图控制器（不是导航控制器）：
- en: '![](img/2f7c1196-0815-4774-8aa7-9d6b10713423.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2f7c1196-0815-4774-8aa7-9d6b10713423.png)'
- en: Next, type in `bar button` into the filter area of the objects library in the
    Utilities panel.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在实用工具面板中对象库的筛选区域输入 `bar button`。
- en: 'Drag and drop a Bar Button Item into the right area of the Navigation Bar of
    your `View Controller Scene`:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Bar Button Item 拖放到您的 `View Controller Scene` 导航栏的右侧区域：
- en: '![](img/697e07b4-6eae-43ee-96a3-35a1be85643b.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/697e07b4-6eae-43ee-96a3-35a1be85643b.png)'
- en: 'Drag another Bar Button Item into the left area of the Navigation Bar:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将另一个 Bar Button Item 拖动到导航栏的左侧区域：
- en: '![](img/2d9e63d8-3931-4047-bbbd-cbe704351293.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2d9e63d8-3931-4047-bbbd-cbe704351293.png)'
- en: 'You should now have two Bar Button Items that both say Item:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你应该有两个条形按钮项，都显示为“项”：
- en: '![](img/706af21b-2bc9-4d6b-934b-a513cd27e27d.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/706af21b-2bc9-4d6b-934b-a513cd27e27d.png)'
- en: Updating Bar Button Items
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新条形按钮项
- en: 'Next, we need to update both of the Bar Button Items to say cancel and done:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要更新两个条形按钮项，使其显示为“取消”和“完成”：
- en: Select the left Bar Button Item, and, in the Utilities panel, select the Attributes
    inspector.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择左侧条形按钮项，并在“实用工具”面板中选择属性检查器。
- en: Click on System Item and select Cancel in the drop-down menu.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“系统项”，并在下拉菜单中选择“取消”。
- en: Select the right Bar Button Item, and, while still in the Attributes inspector
    in the Utilities panel, update System Item to Done.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择右侧条形按钮项，并在“实用工具”面板中的属性检查器中，将“系统项”更新为“完成”。
- en: 'Now, you should see Cancel on the left and Done on the right:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该在左侧看到“取消”，在右侧看到“完成”：
- en: '![](img/c39cd58d-68b5-41a2-a7c5-74c1c2e7c1c8.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c39cd58d-68b5-41a2-a7c5-74c1c2e7c1c8.png)'
- en: Unwinding our Cancel button
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回滚我们的“取消”按钮
- en: 'Now that we have our buttons, we want to dismiss the modal when a user hits
    Cancel:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了我们的按钮，我们希望当用户点击“取消”时关闭模态：
- en: 'In the `Main.storyboard`, Ctrl drag from the Cancel button to Exit:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Main.storyboard`中，使用Ctrl从“取消”按钮拖动到退出：
- en: '![](img/37b24ffe-0535-4bd1-8b51-3140fcdfcabd.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/37b24ffe-0535-4bd1-8b51-3140fcdfcabd.png)'
- en: You can also do this in the Outline view.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在轮廓视图中这样做。
- en: 'You will see a window popup that says Action Segue and unwindLocationCancelWithSegue.
    Select `unwindLocationCancelWithSegue`:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到一个弹出窗口，显示“操作转换”和“unwindLocationCancelWithSegue”。选择`unwindLocationCancelWithSegue`：
- en: '![](img/2f8334b3-e9bc-4a09-9019-5ae2ed8d3277.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2f8334b3-e9bc-4a09-9019-5ae2ed8d3277.png)'
- en: Let's build and run the project by hitting the Play button (or use *cmd* *+**R*),
    and test our Cancel button. It should now dismiss the View. We will update the
    Done button when we add code later.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击播放按钮（或使用*cmd* *+**R*）构建和运行项目，并测试我们的“取消”按钮。现在它应该关闭视图。我们将在稍后添加代码时更新“完成”按钮。
- en: Adding our first Table View
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加我们的第一个表格视图
- en: 'Now, let''s add a `UITableView` into our `UIViewController`:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在我们的`UIViewController`中添加一个`UITableView`：
- en: 'In the Utilities panel of `Main.storyboard`, in the filter field, type `tableview`;
    then, drag the Table View onto the scene:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Main.storyboard`的“实用工具”面板中，在过滤器字段中输入`tableview`；然后，将表格视图拖到场景中：
- en: '![](img/d72bf081-65cc-4de4-b538-c157a0949835.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d72bf081-65cc-4de4-b538-c157a0949835.png)'
- en: 'Select the Pin icon and enter the following values:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“固定”图标并输入以下值：
- en: Set all values under Add New Constraints to `0`
  id: totrans-155
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将“添加新约束”下的所有值设置为`0`
- en: The Constrain to margins checkbox should be unchecked
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: “限制到边距”复选框应该是不勾选的
- en: Now, click on Add 4 Constraints.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击添加4个约束。
- en: If you build and run the project, and then launch the modal, you will see an
    empty Table View. We will complete this Table View later.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你构建并运行项目，然后启动模态，你会看到一个空的表格视图。我们将在稍后完成这个表格视图。
- en: Summary
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We are about halfway through the setup of our UI structure. In this chapter,
    we created our Collection View with a dummy cell. This allows us to continue to
    work on the basic structure of our app and focus on the design of the app, getting
    all of the assets ready to go before we add code. We also added our first prototype
    header, as well as presenting a modal to the user.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了UI结构设置的一半。在本章中，我们创建了一个带有占位符单元格的集合视图。这使我们能够继续工作于我们应用程序的基本结构，并专注于应用程序的设计，在我们添加代码之前准备好所有资产。我们还添加了第一个原型标题，并向用户展示了一个模态。
- en: In the next chapter, we complete the rest of our basic structure, before concentrating
    on adapting our structure to match our design.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们完成基本结构的其余部分，然后集中精力调整我们的结构以匹配我们的设计。
