- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: Building Your User Interface
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建你的用户界面
- en: In the previous chapter, you modified an existing Xcode project, added a tab
    bar to your app that allowed the user to select between the Journal List and Map
    screens, and configured the tab bar button titles and icons. When your app is
    launched, the Journal List screen is displayed, but it is currently blank.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你修改了一个现有的 Xcode 项目，向你的应用添加了一个标签栏，允许用户在日记列表和地图屏幕之间进行选择，并配置了标签栏按钮的标题和图标。当你的应用启动时，显示的是日记列表屏幕，但它目前是空的。
- en: As you saw in the app tour in *Chapter 10*, *Setting Up the User Interface*,
    the Journal List screen should display a table view showing a list of journal
    entries in table view cells.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在第 10 章*设置用户界面*中的应用游览中看到的那样，日记列表屏幕应显示一个表格视图，显示表格视图单元格中的日记条目列表。
- en: In this chapter, you will make the Journal List screen display a table view
    containing 10 empty table view cells, as well as a button that will display a
    view representing the Add New Journal Entry screen when tapped. You’ll also configure
    a **Cancel** button to dismiss this view and return you to the Journal List screen.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将使日记列表屏幕显示一个包含 10 个空表格视图单元格的表格视图，以及一个按钮，当点击时将显示一个表示添加新日记条目屏幕的视图。你还将配置一个**取消**按钮来关闭此视图并返回到日记列表屏幕。
- en: You’ll be adding a small amount of code to your app, but don’t worry too much
    about this—you’ll learn more about it in the next part of this book.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在你的应用中添加少量代码，但不用担心太多——你将在本书的下一部分中了解更多关于它的内容。
- en: By the end of this chapter, you’ll have learned how to add view controllers
    to a storyboard scene, link outlets in view controllers to scenes, set up table
    view cells, and present a view controller modally. This will be very useful when
    you’re designing the user interface for your own apps.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将学会如何向故事板场景添加视图控制器，将视图控制器中的输出连接到场景，设置表格视图单元格，并以模态方式呈现视图控制器。这在你设计自己的应用的用户界面时将非常有用。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Adding a table view to the Journal List screen
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将表格视图添加到日记列表屏幕
- en: Connecting storyboard elements to the view controller
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将故事板元素连接到视图控制器
- en: Configuring data source methods for the table view
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为表格视图配置数据源方法
- en: Presenting a view modally
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以模态方式呈现视图
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will continue working on the `JRNL` Xcode project that you created in the
    previous chapter.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你将继续在上一章中创建的 `JRNL` Xcode 项目上工作。
- en: 'The completed Xcode project for this chapter is in the `Chapter11` folder of
    the code bundle for this book, which can be downloaded here:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的完成 Xcode 项目位于本书代码包的 `Chapter11` 文件夹中，可以在此处下载：
- en: '[https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition](https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition%0D)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition](https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition%0D)'
- en: 'Check out the following video to see the code in action:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频以查看代码的实际效果：
- en: '[https://youtu.be/EsDaVgrGLus](https://youtu.be/EsDaVgrGLus%0D)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://youtu.be/EsDaVgrGLus](https://youtu.be/EsDaVgrGLus%0D)'
- en: Let’s start by adding a table view to the Journal List screen, which will eventually
    display the list of journal entries.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从向日记列表屏幕添加表格视图开始，该表格视图最终将显示日记条目列表。
- en: Adding a table view to the Journal List screen
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将表格视图添加到日记列表屏幕
- en: As you saw in the app tour, the *JRNL* app displays journal entries in a table
    view. A table view is an instance of the `UITableView` class. It displays a column
    of cells. Each cell in a table view is a table view cell, which is an instance
    of the `UITableViewCell` class. In this section, you’ll start by adding a table
    view to the view controller scene for the Journal List screen in the `Main` storyboard
    file, then you’ll add Auto Layout constraints to make it fill the screen.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在应用游览中看到的那样，*JRNL* 应用在表格视图中显示日记条目。表格视图是 `UITableView` 类的一个实例。它显示一列单元格。表格视图中的每个单元格都是一个表格视图单元格，它是
    `UITableViewCell` 类的一个实例。在本节中，你将首先在 `Main` 故事板文件中为日记列表屏幕的视图控制器场景添加一个表格视图，然后你将添加自动布局约束使其填充整个屏幕。
- en: For more information on Auto Layout and how to use it, go to [https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/](https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 有关自动布局及其使用方法的更多信息，请访问 [https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/](https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/)。
- en: 'Open the *JRNL* project you created in the previous chapter and run the app
    to make sure everything still works as it should, then follow these steps:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 打开您在前一章中创建的*JRNL*项目并运行应用程序，以确保一切仍然按预期工作，然后按照以下步骤操作：
- en: 'Click the **Main** storyboard file in the Project navigator, select the view
    controller scene representing the Journal List screen, and click the Library button:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击**主**故事板文件，选择代表期刊列表屏幕的视图控制器场景，然后点击库按钮：
- en: '![](img/B31371_11_01.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_01.png)'
- en: 'Figure 11.1: Toolbar with the Library button shown'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.1：显示库按钮的工具栏
- en: 'The library will appear. Type `table` in the filter field. A **Table View**
    object will appear as one of the results. Drag it to the middle of the view of
    the view controller scene for the Journal List screen:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 库将出现。在过滤器字段中输入`table`。**表格视图**对象将作为结果之一出现。将其拖动到期刊列表屏幕视图控制器场景的中间：
- en: '![](img/B31371_11_02.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_02.png)'
- en: 'Figure 11.2: Library with Table View object selected'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.2：选择表格视图对象的库
- en: The table view has been added, but it only takes up a small part of the screen.
    As shown in the app tour in the previous chapter, it should fill the screen.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 表格视图已添加，但它只占据了屏幕的一小部分。如前一章中的应用程序导游所示，它应该填充整个屏幕。
- en: 'You will use the **Auto Layout Add New Constraints** button to bind the edges
    of the table view to the edges of its enclosing view. Make sure the table view
    is selected and click the Auto Layout Add New Constraints button:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将使用**自动布局添加新约束**按钮将表格视图的边缘绑定到其封装视图的边缘。确保表格视图被选中，然后点击自动布局添加新约束按钮：
- en: '![](img/B31371_11_03.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_03.png)'
- en: 'Figure 11.3: View controller scene with table view selected'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.3：选择表格视图的视图控制器场景
- en: 'Type `0` in the top, left, right, and bottom edge constraint fields and click
    all the pale red struts. Make sure all the struts have turned bright red. Click
    the **Add 4 Constraints** button:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部、左侧、右侧和底部边缘约束字段中输入`0`，然后点击所有浅红色支柱。确保所有支柱都已变为亮红色。点击**添加4个约束**按钮：
- en: '![](img/B31371_11_04.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_04.png)'
- en: 'Figure 11.4: Auto Layout pop-up dialog box for adding new constraints'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.4：添加新约束的自动布局弹出对话框
- en: This sets the space between the edges of the table view and the edges of the
    enclosing view to 0, binding the table view’s edges to those of the enclosing
    view. Now the table view will fill the screen, regardless of the device and orientation.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这将设置表格视图边缘与封装视图边缘之间的空间为0，将表格视图的边缘绑定到封装视图的边缘。现在表格视图将填充屏幕，无论设备方向如何。
- en: 'Verify that all four sides of the table view are now bound to the edges of
    the screen, as shown in the following screenshot:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认表格视图的四面现在都已绑定到屏幕边缘，如下面的截图所示：
- en: '![](img/B31371_11_05.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_05.png)'
- en: 'Figure 11.5: View controller scene with table view filling the screen'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.5：表格视图填充屏幕的视图控制器场景
- en: You have added a table view to the view of the view controller scene for the
    Journal List screen and used Auto Layout constraints to make it fill the screen,
    but the Journal List screen will still be blank when you build and run your app.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您已将表格视图添加到期刊列表屏幕视图控制器场景的视图中，并使用自动布局约束使其填充整个屏幕，但构建并运行您的应用程序时，期刊列表屏幕仍然会保持空白。
- en: In the next section, you will implement the code for the `JournalListViewController`
    class, and you’ll connect outlets in this class to the UI elements on the Journal
    List screen. This will enable an instance of the `JournalListViewController` class
    to control what is displayed by the Journal List screen.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，您将实现`JournalListViewController`类的代码，并将此类的出口连接到期刊列表屏幕上的UI元素。这将使`JournalListViewController`类的一个实例能够控制期刊列表屏幕显示的内容。
- en: Connecting storyboard elements to the view controller
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将故事板元素连接到视图控制器
- en: You’ve added a table view to the Journal List screen, but it does not display
    anything yet. You’ll need to modify the existing view controller to manage the
    table view in the Journal List screen. The `ViewController` file was automatically
    created by Xcode when you created the `JRNL` project.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 您已将表格视图添加到期刊列表屏幕，但它目前还没有显示任何内容。您需要修改现有的视图控制器以在期刊列表屏幕中管理表格视图。当您创建`JRNL`项目时，Xcode自动创建了`ViewController`文件。
- en: 'It contains the declaration and definition of a `UIViewController` subclass
    named `ViewController`, and this class is currently set as the view controller
    for the Journal List screen. You’ll change the name of the class in the `ViewController`
    file to `JournalListViewController` and create an outlet for the table view that
    you added to the view controller scene earlier. Follow these steps:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 它包含了名为 `ViewController` 的 `UIViewController` 子类的声明和定义，并且这个类目前被设置为 Journal List
    屏幕的视图控制器。你需要在 `ViewController` 文件中将类的名称更改为 `JournalListViewController`，并为之前添加到视图控制器场景中的表格视图创建一个出口。按照以下步骤操作：
- en: Click the **ViewController** file in the Project navigator. In the Editor area,
    right-click the class name and choose **Refactor** | **Rename**...
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击 **ViewController** 文件。在编辑区域，右键点击类名，选择 **重构** | **重命名**...
- en: '![](img/B31371_11_06.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_06.png)'
- en: 'Figure 11.6: Editor area showing the pop-up menu with Rename...highlighted'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.6：编辑区域显示带有重命名...高亮的弹出菜单
- en: 'Change the class name to `JournalListViewController`and click **Rename**:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将类名更改为 `JournalListViewController` 并点击 **重命名**：
- en: '![](img/B31371_11_07.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_07.png)'
- en: 'Figure 11.7: Editor area showing the new name for the ViewController class'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.7：显示 ViewController 类新名称的编辑区域
- en: 'Verify both the class name and the file name have been changed to **JournalListViewController**:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认类名和文件名都已更改为 **JournalListViewController**：
- en: '![](img/B31371_11_08.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_08.png)'
- en: 'Figure 11.8: File name and class name both changed to JournalListViewController'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.8：文件名和类名都更改为 JournalListViewController
- en: Click on the **Main** storyboard file in the Project navigator and select the
    first **Journal Scene** (the one containing the table view) in the document outline.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击 **Main** 故事板文件，并在文档大纲中选择第一个 **Journal Scene**（包含表格视图的那个）。
- en: '![](img/B31371_11_09.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_09.png)'
- en: 'Figure 11.9: Document outline showing the first Journal Scene selected'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.9：文档大纲显示已选择第一个 Journal Scene
- en: 'Click on the Identity inspector button and verify that, under **Custom Class**,
    **Class** is set to **JournalListViewController**:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击身份检查器按钮，并确认在 **自定义类** 下，**类** 设置为 **JournalListViewController**：
- en: '![](img/B31371_11_10.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_10.png)'
- en: 'Figure 11.10: Identity inspector with Class set to JournalListViewController'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.10：身份检查器中类设置为 JournalListViewController
- en: This means that the content of the Journal List screen is being managed by an
    instance of the `JournalListViewController` class.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着 Journal List 屏幕的内容由 `JournalListViewController` 类的一个实例管理。
- en: 'Click the Navigator and Inspector buttons to hide the Navigator and Inspector
    areas so you have more room to work:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击导航器和检查器按钮以隐藏导航器和检查器区域，以便有更多空间工作：
- en: '![](img/B31371_11_11.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_11.png)'
- en: 'Figure 11.11: Toolbar showing Navigator and Inspector buttons'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.11：工具栏显示导航器和检查器按钮
- en: 'Click the Adjust Editor Options button and choose **Assistant** from the pop-up
    menu:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击调整编辑器选项按钮，并从弹出菜单中选择 **辅助**：
- en: '![](img/B31371_11_12.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_12.png)'
- en: 'Figure 11.12: Adjust Editor Options menu with Assistant selected'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.12：调整编辑器选项菜单中已选择辅助
- en: This will display any Swift files associated with this scene in an assistant
    editor. As you can see, the **Main** storyboard file’s content appears on the
    left side and the `JournalListViewController` class definition appears on the
    right side of the Editor area.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在辅助编辑器中显示与此场景关联的任何 Swift 文件。如你所见，**Main** 故事板文件的内容显示在编辑区域的左侧，而 `JournalListViewController`
    类的定义显示在右侧。
- en: 'Look at the bar just above the code and verify that **JournalListViewController.swift**
    is selected:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看代码上方的小条，确认 **JournalListViewController.swift** 已被选中：
- en: '![](img/B31371_11_13.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_13.png)'
- en: 'Figure 11.13: Bar showing JournalListViewController.swift selected'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.13：显示已选择的 JournalListViewController.swift
- en: If you don’t see **JournalListViewController.swift** selected, click the bar
    and select **JournalListViewController.swift** from the pop-up menu.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有看到 **JournalListViewController.swift** 被选中，点击条并从弹出菜单中选择 **JournalListViewController.swift**。
- en: 'To connect the table view in the Journal scene to an outlet in the `JournalListViewController`
    class, *Ctrl* + *Drag* from the table view to the `JournalListViewController`
    file, just below the class name declaration:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将 Journal 场景中的表格视图连接到 `JournalListViewController` 类中的出口，从表格视图 *Ctrl* + *拖动*
    到类名声明下方的 `JournalListViewController` 文件：
- en: '![](img/B31371_11_14.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_14.png)'
- en: 'Figure 11.14: Editor area showing drag destination'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.14：显示拖拽目标位置的编辑区域
- en: You can also drag from the table view in the document outline.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以从文档大纲中的表格视图拖动。
- en: 'A small pop-up dialog box will appear. Type the name of the outlet, `tableView`,
    into the **Name** text field, set **Storage** to **Strong**, and click **Connect**:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会弹出一个小的弹出对话框。在 **名称** 文本框中输入出口名称，`tableView`，将 **存储** 设置为 **强**，然后点击 **连接**：
- en: '![](img/B31371_11_15.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_15.png)'
- en: 'Figure 11.15: Pop-up dialog box for outlet creation'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.15：出口创建的弹出对话框
- en: 'Verify that the `tableView` outlet declaration has been automatically added
    to the `JournalListViewController` class. After you have done so, click the **x**
    to close the assistant editor window:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证 `tableView` 出口声明是否已自动添加到 `JournalListViewController` 类。完成此操作后，点击 **x** 关闭辅助编辑器窗口：
- en: '![](img/B31371_11_16.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_16.png)'
- en: 'Figure 11.16: Editor area showing tableView outlet'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.16：显示 tableView 出口的编辑区域
- en: The `JournalListViewController` class now has an outlet, `tableView`, for the
    table view in the Journal List screen. This means a `JournalListViewController`
    instance can manage what the table view displays.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`JournalListViewController` 类现在在 **Journal List** 屏幕中有一个出口，`tableView`。这意味着一个
    `JournalListViewController` 实例可以管理表格视图显示的内容。'
- en: 'It is common to make mistakes when using *Ctrl* + *Drag* to drag from an element
    in a storyboard scene to a file. If you make a mistake while doing so, this may
    cause a crash to occur when the app is launched. To check whether there are any
    errors in the connection between the table view and `JournalListViewController`
    class, follow these steps:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 *Ctrl* + *拖动* 从故事板场景中的元素拖动到文件时，经常会出错。如果你在这个过程中出错，这可能会导致应用启动时崩溃。为了检查表格视图和
    `JournalListViewController` 类之间的连接是否存在错误，请按照以下步骤操作：
- en: Click the Navigator and Inspector buttons to display the Navigator and Inspector
    areas.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击导航器和检查器按钮以显示导航器和检查器区域。
- en: 'With **Journal** in the **Journal Scene** selected, click the Connections inspector
    button:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Journal Scene** 中选择 **Journal**，然后点击连接检查器按钮：
- en: '![](img/B31371_11_17.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_17.png)'
- en: 'Figure 11.17: Connections inspector selected'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.17：选择连接检查器
- en: The Connections inspector displays the links between your UI objects and your
    code. You will see the **tableView** outlet connected to the table view in the
    **Outlets** section.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 连接检查器显示你的 UI 对象和代码之间的链接。你将在 **出口** 部分看到 **tableView** 出口连接到表格视图。
- en: 'If you see a tiny yellow warning icon, click on the **x** to break the connection:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你看到一个微小的黄色警告图标，点击 **x** 来断开连接：
- en: '![](img/B31371_11_18.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_18.png)'
- en: 'Figure 11.18: Connections inspector showing tableView outlet with yellow warning
    icon'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.18：显示带有黄色警告图标的 tableView 出口的连接检查器
- en: 'Under **Outlets**, drag from the **tableView** outlet to the table view to
    re-establish the connection:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **出口** 下，从 **tableView** 出口拖动到表格视图以重新建立连接：
- en: '![](img/B31371_11_19.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_19.png)'
- en: 'Figure 11.19: Editor area showing table view to be connected'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.19：显示要连接的表格视图的编辑区域
- en: If you need to change the name of an outlet in your code after it has been created,
    right-click the outlet name and choose **Refactor** | **Rename** from the pop-up
    menu instead of changing it manually to avoid errors.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要在创建后更改代码中的出口名称，右键单击出口名称，然后从弹出菜单中选择 **重构** | **重命名** 而不是手动更改，以避免错误。
- en: You’ve successfully created an outlet in the `JournalListViewController` class
    for the table view. Great job!
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经在 `JournalListViewController` 类中成功创建了一个用于表格视图的出口。做得好！
- en: To display table view cells onscreen, you will need to implement data source
    methods for the table view by adding some code to the `JournalListViewController`
    class. You will do this in the next section.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 要在屏幕上显示表格视图单元格，你需要通过向 `JournalListViewController` 类添加一些代码来实现表格视图的数据源方法。你将在下一节中这样做。
- en: Configuring data source methods for the table view
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置表格视图的数据源方法
- en: When your app is running, an instance of the `JournalListViewController` class
    acts as the view controller for the Journal List screen. It is responsible for
    loading and displaying all the views on that screen, including the table view
    you added earlier. The table view needs to know how many table view cells to display
    and what to display in each cell. Normally, the view controller is responsible
    for providing this information. Apple has created a protocol, `UITableViewDataSource`,
    for this purpose. All you need to do is set the table view’s `dataSource` property
    to the `JournalListViewController` class and implement the required methods of
    this protocol.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的应用运行时，`JournalListViewController` 类的一个实例充当 Journal 列表屏幕的视图控制器。它负责加载和显示该屏幕上的所有视图，包括您之前添加的表格视图。表格视图需要知道要显示多少个表格视图单元格以及每个单元格中要显示什么。通常，视图控制器负责提供这些信息。苹果为这个目的创建了一个协议，`UITableViewDataSource`。您需要做的只是将表格视图的
    `dataSource` 属性设置为 `JournalListViewController` 类，并实现此协议的必需方法。
- en: The table view also needs to know what to do if the user taps on a table view
    cell. Again, the view controller for the table view is responsible, and Apple
    has created the `UITableViewDelegate` protocol for this purpose. You will set
    the table view’s `delegate` property to the `JournalListViewController` class,
    but you won’t be implementing any methods from this protocol yet.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 表格视图还需要知道如果用户点击表格视图单元格时应该做什么。同样，表格视图的视图控制器负责此事，而苹果为这个目的创建了 `UITableViewDelegate`
    协议。您将设置表格视图的 `delegate` 属性为 `JournalListViewController` 类，但您目前不会实现此协议中的任何方法。
- en: Protocols are covered in *Chapter 8*, *Protocols, Extensions, and Error Handling*.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 协议在 *第 8 章*，*协议、扩展和错误处理* 中有所介绍。
- en: You will need to type in a small amount of code in this chapter. Don’t worry
    about what it means; you’ll learn more about table view controllers and their
    associated protocols in *Part 3* of this book.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 您在本章中需要输入少量代码。不用担心它的含义；您将在本书的 *第 3 部分* 中学习更多关于表格视图控制器及其相关协议的内容。
- en: In the next section, you’ll use the Connections inspector to assign the table
    view’s `dataSource` and `delegate` properties to outlets in the `JournalListViewController`
    class.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，您将使用连接检查器将表格视图的 `dataSource` 和 `delegate` 属性分配给 `JournalListViewController`
    类中的输出。
- en: Setting the delegate and data source properties of the table view
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置表格视图的委托和数据源属性
- en: 'An instance of the `JournalListViewController` class will provide the data
    that the table view will display, as well as the methods that will be executed
    when the user interacts with the table view. To make this work, you’ll connect
    the table view’s `dataSource` and `delegate` properties to outlets in the `JournalListViewController`
    class. Follow these steps:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`JournalListViewController` 类的一个实例将提供表格视图将显示的数据，以及当用户与表格视图交互时将执行的方法。为了使这生效，您需要将表格视图的
    `dataSource` 和 `delegate` 属性连接到 `JournalListViewController` 类中的输出。按照以下步骤操作：'
- en: Click the Navigator and Inspector buttons to display the Navigator and Inspector
    areas again if you haven’t done so already.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您还没有这样做，请点击导航器和检查器按钮以再次显示导航器和检查器区域。
- en: 'The **Main** storyboard file should still be selected. Select the **Table View**
    for the **Journal Scene** in the document outline and click the Connections inspector
    button. In the **Outlets** section, you will see two empty circles next to the
    **dataSource** and **delegate** outlets. Drag from each empty circle to the **Journal**
    icon in the document outline:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**主**故事板文件仍然被选中。在文档大纲中选择 **Journal Scene** 的 **表格视图**，然后点击连接检查器按钮。在 **输出**
    部分，您将在 **dataSource** 和 **delegate** 输出旁边看到两个空圆圈。从每个空圆圈拖动到文档大纲中的 **Journal** 图标：'
- en: '![](img/B31371_11_20.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_20.png)'
- en: 'Figure 11.20: Connections inspector showing the dataSource and delegate outlets'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.20：连接检查器显示 dataSource 和 delegate 输出
- en: 'Verify that the `dataSource` and `delegate` properties of the table view have
    been connected to outlets in the `JournalListViewController` class:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证表格视图的 `dataSource` 和 `delegate` 属性是否已连接到 `JournalListViewController` 类中的输出：
- en: '![](img/B31371_11_21.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_21.png)'
- en: 'Figure 11.21: Connections inspector with the dataSource and delegate outlets
    set'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.21：已设置 dataSource 和 delegate 输出的连接检查器
- en: In the next section, you will add some code to make the `JournalListViewController`
    class conform to the `UITableViewDataSource` protocol, and configure the table
    view to display 10 table view cells when you run your app.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，你将添加一些代码，使 `JournalListViewController` 类符合 `UITableViewDataSource` 协议，并在运行你的应用时配置表格视图以显示
    10 个表格视图单元格。
- en: Adopting the UITableViewDataSource and UITableViewDelegate protocols
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 采用 UITableViewDataSource 和 UITableViewDelegate 协议
- en: 'So far, you’ve made the `JournalListViewController` class the data source and
    delegate for the table view. The next step is to make it adopt the `UITableViewDataSource`
    and `UITableViewDelegate` protocols and implement any required methods. You’ll
    also change the color of the table view cells to make them visible onscreen. Follow
    these steps:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经使 `JournalListViewController` 类成为表格视图的数据源和代理。下一步是使其采用 `UITableViewDataSource`
    和 `UITableViewDelegate` 协议并实现任何必需的方法。你还将更改表格视图单元格的颜色，使它们在屏幕上可见。按照以下步骤操作：
- en: 'Click **Table View** in the document outline and click the Attributes inspector
    button. Under **Table View**, change the number of **Prototype Cells** to `1`:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中点击 **表格视图** 并点击属性检查器按钮。在 **表格视图** 下，将 **原型单元格** 的数量更改为 `1`：
- en: '![](img/B31371_11_22.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_22.png)'
- en: 'Figure 11.22: Attributes inspector showing Prototype Cells set to 1'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.22：属性检查器显示原型单元格设置为 1
- en: 'Click the **>** button next to **Table View** in the document outline to display
    **Table View Cell**:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中点击 **表格视图** 旁边的 **>** 按钮，以显示 **表格视图单元格**：
- en: '![](img/B31371_11_23.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_23.png)'
- en: 'Figure 11.23: Document outline showing > button'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.23：文档大纲显示 > 按钮
- en: This represents the table view cells that the table view will display.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这表示表格视图将显示的表格视图单元格。
- en: 'Click **Table View Cell** in the document outline. In the **Attributes inspector**
    under **Table View Cell**, set **Identifier** to `journalCell` and press *Return*:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中点击 **表格视图单元格**。在 **表格视图单元格** 下的 **属性检查器** 中，将 **标识符** 设置为 `journalCell`
    并按 *Enter* 键：
- en: '![](img/B31371_11_24.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_24.png)'
- en: 'Figure 11.24: Attributes inspector with Identifier set'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.24：属性检查器中已设置标识符
- en: The name **Table View Cell** in the document outline will change to **journalCell**.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 文档大纲中的 **表格视图单元格** 名称将更改为 **journalCell**。
- en: 'In the Attributes inspector under **View**, set **Background** to **System
    Cyan Color** so that you can see the table view cells easily when you run the
    app:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **视图** 下的属性检查器中，将 **背景** 设置为 **系统青色**，这样在运行应用时可以轻松看到表格视图单元格：
- en: '![](img/B31371_11_25.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_25.png)'
- en: 'Figure 11.25: Attributes inspector with table view cell background color set'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.25：属性检查器中表格视图单元格背景色已设置
- en: 'Click on the **JournalListViewController** file in the Project navigator. Type
    in the following code after the class declaration to make the `JournalListViewController`
    class adopt the `UITableViewDataSource` and `UITableViewDelegate` protocols:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击 **JournalListViewController** 文件。在类声明之后输入以下代码，使 `JournalListViewController`
    类采用 `UITableViewDataSource` 和 `UITableViewDelegate` 协议：
- en: '[PRE0]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After a few seconds, an error will appear:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 几秒钟后，将出现一个错误：
- en: '![](img/B31371_11_26.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_26.png)'
- en: 'Figure 11.26: Editor area showing error'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.26：编辑区域显示错误
- en: 'Click on it to display an error message. The error message says **Type ‘JournalListViewController’
    does not conform to protocol ‘UITableViewDataSource’**. **Add stubs for conformance**:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击它以显示错误信息。错误信息显示 **类型‘JournalListViewController’不符合协议‘UITableViewDataSource’**。**添加符合性的占位符**：
- en: '![](img/B31371_11_27.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_27.png)'
- en: 'Figure 11.27: Editor area showing an error message'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.27：显示错误信息的编辑区域
- en: This means you need to implement the required methods for the `UITableViewDataSource`
    protocol to make `JournalListViewController` conform to it.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着你需要实现 `UITableViewDataSource` 协议的必需方法，以使 `JournalListViewController` 符合该协议。
- en: Click **Fix** to automatically add stubs for the required methods into the `JournalListViewController`
    class.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **修复** 以自动将必需方法的占位符添加到 `JournalListViewController` 类中。
- en: 'Verify the stubs for the two required methods for the `UITableViewDataSource`
    protocol have been automatically inserted into the `JournalListViewController`
    class, as shown here:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证两个必需的 `UITableViewDataSource` 协议方法占位符已自动插入到 `JournalListViewController` 类中，如图所示：
- en: '![](img/B31371_11_28.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_28.png)'
- en: 'Figure 11.28: Editor area showing UITableViewDataSource method stubs'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.28：显示 UITableViewDataSource 方法占位符的编辑区域
- en: The first method tells the table view how many cells to display, while the second
    method tells the table view what to display in each table view cell.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个方法告诉表格视图显示多少个单元格，而第二个方法告诉表格视图在每个表格视图单元格中显示什么。
- en: 'Replace the placeholder text in the first method with `10` (the `return` keyword
    is optional if it’s just a single line of code). This tells the table view to
    display 10 cells:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将第一个方法中的占位符文本替换为`10`（如果只是一行代码，则`return`关键字是可选的）。这告诉表格视图显示10个单元格：
- en: '![](img/B31371_11_29.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_29.png)'
- en: 'Figure 11.29: Editor area showing code to display 10 table view cells'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.29：显示显示10个表格视图单元格的代码的编辑区域
- en: 'Replace the placeholder text in the second method with the following code:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将第二个方法中的占位符文本替换为以下代码：
- en: '[PRE1]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](img/B31371_11_30.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_30.png)'
- en: 'Figure 11.30: Editor area showing code to display a table view cell for each
    row'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.30：显示为每行显示一个表格视图单元格的代码的编辑区域
- en: Don’t worry about what this means for now as you’ll learn more about table views
    in *Part 3*.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 不要担心这现在意味着什么，因为您将在第3部分“表格视图”中学习更多关于表格视图的内容。
- en: 'Build and run your app. Simulator will display a column of 10 cyan table view
    cells, as shown here:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建并运行您的应用。模拟器将显示10个青色表格视图单元格的列，如图所示：
- en: '![](img/B31371_11_31.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_31.png)'
- en: 'Figure 11.31: Simulator showing 10 table view cells'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.31：显示10个表格视图单元格的模拟器
- en: As you saw in the app tour in *Chapter 10*, *Setting Up the User Interface*,
    there should be a **+** button at the top right of this screen. You will add this
    button in the next section.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在第10章“设置用户界面”的应用程序游览中看到的那样，屏幕右上角应该有一个**+**按钮。您将在下一节中添加此按钮。
- en: Presenting a view modally
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以模态方式呈现视图
- en: The navigation bar for the Journal List screen can be configured to display
    a title and buttons. You have already configured the title in *Chapter 10*, *Setting
    Up the User Interface*. Now you will add and configure a bar button item to the
    navigation bar. When tapped, this button will display a view representing the
    Add New Journal Entry screen. This view will be from a new view controller scene
    embedded in a navigation controller, which you will add to the project. The view
    will be presented modally, which means you won’t be able to do anything else until
    it is dismissed.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 期刊列表屏幕的导航栏可以配置为显示标题和按钮。您已经在第10章“设置用户界面”中配置了标题。现在您将向导航栏添加并配置一个栏按钮项。当点击时，此按钮将显示一个表示添加新期刊条目屏幕的视图。此视图将来自一个嵌入在导航控制器中的新视图控制器场景，您将将其添加到项目中。视图将以模态方式呈现，这意味着在它被关闭之前，您将无法执行其他任何操作。
- en: To dismiss it, you’ll add a **Cancel** button to the view’s navigation bar.
    You’ll also add a **Save** button, but you’ll only implement its functionality
    in *Chapter 16*, *Passing Data between View Controllers*. Let’s start by adding
    a bar button item from the library to the navigation bar in the next section.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 要关闭它，您将在视图的导航栏中添加一个**取消**按钮。您还将添加一个**保存**按钮，但您将在第16章“在视图控制器之间传递数据”中实现其功能。让我们先在下一节中将库中的栏按钮项添加到导航栏中。
- en: Adding a bar button to the navigation bar
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向导航栏添加栏按钮
- en: 'As shown in the app tour in *Chapter 10*, *Setting Up the User Interface*,
    there is a **+** button in the top right-hand corner of the screen. To implement
    this, you’ll add a bar button item to the Journal List screen’s navigation bar.
    Follow these steps:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 正如第10章“设置用户界面”的应用程序游览中所示，屏幕右上角有一个**+**按钮。为了实现这一点，您将向期刊列表屏幕的导航栏添加一个栏按钮项。按照以下步骤操作：
- en: 'Click the **Main** storyboard file in the Project navigator. Make sure the
    first **Journal Scene** is selected in the document outline. Click the Library
    button to display the library:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中单击**Main**故事板文件。确保在文档大纲中选择第一个**Journal Scene**。单击库按钮以显示库：
- en: '![](img/B31371_11_32.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_32.png)'
- en: 'Figure 11.32: Toolbar with Library button shown'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.32：显示库按钮的工具栏
- en: 'Type `bar b` in the filter field. A **Bar Button Item** object will appear
    in the results. Drag the bar button object to the right side of the navigation
    bar:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在过滤器字段中键入`bar b`。一个**栏按钮项**对象将出现在结果中。将栏按钮对象拖到导航栏的右侧：
- en: '![](img/B31371_11_33.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_33.png)'
- en: 'Figure 11.33: Library with Bar Button Item object selected'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.33：选择栏按钮项对象的库
- en: 'With the bar buttonselected, click the Attributes inspector button. Under **Bar
    Button Item**, set **System Item** to **Add**:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选择栏按钮后，单击属性检查器按钮。在**栏按钮项**下，将**系统项**设置为**添加**：
- en: '![](img/B31371_11_34.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_34.png)'
- en: 'Figure 11.34: Attributes inspector with System Item set to Add'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.34：将系统项设置为添加的属性检查器
- en: You now have a **+** button in your navigation bar. In the next section, you
    will add a view controller scene to represent the Add New Journal Entry screen
    that will appear when the button is tapped.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在在导航栏中有一个 **+** 按钮。在下一节中，你将添加一个视图控制器场景来表示当按钮被点击时出现的添加新日记条目屏幕。
- en: Adding a new view controller scene
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加新的视图控制器场景
- en: 'As shown in the app tour in *Chapter 10*, *Setting Up the User Interface*,
    when you tap the **+** button in the navigation bar, the Add New Journal Entry
    screen will be displayed. You’ll add a new view controller scene to your project
    to represent this screen. Follow these steps:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 如 *第 10 章* 中应用程序浏览所示，在 *设置用户界面* 时，当你点击导航栏中的 **+** 按钮时，将显示添加新日记条目屏幕。你将在项目中添加一个新的视图控制器场景来表示此屏幕。按照以下步骤操作：
- en: 'Click the Library button to display the library and type `view con` in the
    filter field. A **View Controller** object will be among the search results. Drag
    the **View Controller** object onto the storyboard:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击库按钮以显示库，并在过滤器字段中输入 `view con`。**视图控制器** 对象将在搜索结果中。将 **视图控制器** 对象拖放到故事板中：
- en: '![](img/B31371_11_35.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_35.png)'
- en: 'Figure 11.35: Library with the View Controller object selected'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.35：库中已选择视图控制器对象
- en: 'Position the view controller to the right of the **Journal** scene:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将视图控制器放置在 **日记** 场景的右侧：
- en: '![](img/B31371_11_36.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_36.png)'
- en: 'Figure 11.36: Editor area showing view controller scene next to Journal scene'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.36：显示视图控制器场景与日记场景并排的编辑区域
- en: 'Select the newly added view controller scene. In the document outline, click
    on the **View Controller** icon for this scene:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择新添加的视图控制器场景。在文档大纲中，点击此场景的 **视图控制器** 图标：
- en: '![](img/B31371_11_37.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_37.png)'
- en: 'Figure 11.37: Document outline with View Controller selected'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.37：选择视图控制器的文档大纲
- en: You will need space for the **Cancel** and **Save** buttons, so you will embed
    this view controller scene in a navigation controller to provide a navigation
    bar where the buttons can be placed. Choose **Embed In** | **Navigation Controller**
    from the **Editor** menu.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将需要为 **取消** 和 **保存** 按钮留出空间，因此你将在这个视图控制器场景中嵌入导航控制器以提供一个可以放置按钮的导航栏。从 **编辑**
    菜单中选择 **嵌入** | **导航控制器**。
- en: 'Verify that a navigation controller scene has appeared to the left of the view
    controller scene:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证是否在视图控制器场景左侧出现了一个导航控制器场景：
- en: '![](img/B31371_11_38.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_38.png)'
- en: 'Figure 11.38: Editor area showing view controller scene embedded in a navigation
    controller'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.38：显示嵌入在导航控制器中的视图控制器场景的编辑区域
- en: 'Click the **Navigation Item** for the new view controller scene in the document
    outline. In the Attributes inspector, under **Navigation Item**, set **Title**
    to `New Entry`:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中点击新视图控制器场景的 **导航项**。在属性检查器中，在 **导航项** 下，将 **标题** 设置为 `新条目`：
- en: '![](img/B31371_11_39.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_39.png)'
- en: 'Figure 11.39: Attributes inspector with Title set to New Entry'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.39：属性检查器中标题设置为“新条目”
- en: The name of the navigation item will change to **New Entry**.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 导航项的名称将更改为 **新条目**。
- en: '*Ctrl* + *Drag* from the button to the navigation controller scene:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Ctrl* + *拖动*从按钮到导航控制器场景：'
- en: '![](img/B31371_11_40.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_40.png)'
- en: 'Figure 11.40: Editor area showing the drag destination'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.40：显示拖动目标的编辑区域
- en: 'The segue pop-up menu will appear. Choose **Present Modally**:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将出现切换弹出菜单。选择 **以模态方式呈现**：
- en: '![](img/B31371_11_41.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_41.png)'
- en: 'Figure 11.41: Segue pop-up menu with Present Modally selected'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.41：选择“以模态方式呈现”的切换弹出菜单
- en: This makes the view controller’s view slide up from the bottom of the screen
    when the button is tapped. You won’t be able to interact with any other view until
    this view is dismissed.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 当按钮被点击时，这会使视图控制器视图从屏幕底部向上滑动。在此视图关闭之前，你无法与其他任何视图进行交互。
- en: 'Verify that a segue has linked the **Journal** scene and the **Navigation Controller**
    scene together:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证是否有一个切换将 **日记** 场景和 **导航控制器** 场景连接在一起：
- en: '![](img/B31371_11_42.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_42.png)'
- en: 'Figure 11.42: Editor area showing segue between the Journal scene and Navigation
    Controller scene'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.42：显示从日记场景到导航控制器场景的切换的编辑区域
- en: 'Build and run your app. Click the **+** button and the new view controller’s
    view will slide up from the bottom of the screen:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建并运行你的应用。点击 **+** 按钮，新的视图控制器视图将从屏幕底部向上滑动：
- en: '![](img/B31371_11_43.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_43.png)'
- en: 'Figure 11.43: Simulator showing new view controller’s view'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.43：模拟器显示新的视图控制器视图
- en: You can only dismiss this view by dragging it downward at present. In the next
    section, you will add a **Cancel** button to the navigation bar and program it
    to dismiss the view. You’ll also add a **Save** button, but you won’t program
    it yet.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 目前您只能通过向下拖动来取消此视图。在下一节中，您将在导航栏中添加一个**取消**按钮，并编程使其取消视图。您还会添加一个**保存**按钮，但暂时不会对其进行编程。
- en: Adding Cancel and Save buttons to the navigation bar
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在导航栏中添加取消和保存按钮
- en: 'As you have seen earlier, one of the benefits of embedding a view controller
    in a navigation controller is the navigation bar at the top of the screen. You
    can place buttons on its left and right sides. Follow these steps to add the **Cancel**
    and **Save** buttons to the navigation bar:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 如您之前所见，将视图控制器嵌入导航控制器的一个好处是屏幕顶部的导航栏。您可以在其左右两侧放置按钮。按照以下步骤将**取消**和**保存**按钮添加到导航栏：
- en: 'Click the **Navigation Item** for the **New Entry** scene in the document outline.
    Click the **Library** button:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击文档轮廓中**新条目**场景的**导航项**。点击**图书馆**按钮：
- en: '![](img/B31371_11_44.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_44.png)'
- en: 'Figure 11.44: Toolbar with Library button shown'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.44：显示图书馆按钮的工具栏
- en: 'Type `bar b` into the filter field and drag a **Bar Button Item** object to
    each side of the navigation bar:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在过滤器字段中输入`bar b`，并将**栏按钮项**对象拖到导航栏的每一侧：
- en: '![](img/B31371_11_45.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_45.png)'
- en: 'Figure 11.45: Library with Bar Button Item object selected'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.45：选中栏按钮项对象的图书馆
- en: 'Click the right **Item** button. In the Attributes inspector under **Bar Button
    Item**, set **Style** to **Done** and set **System Item** to **Save**:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击右侧的**项目**按钮。在**栏按钮项**的属性检查器下，将**样式**设置为**完成**，并将**系统项**设置为**保存**：
- en: '![](img/B31371_11_46.png)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_46.png)'
- en: 'Figure 11.46: Attributes inspector with Style set to Done and System Item set
    to Save'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.46：将样式设置为完成并将系统项设置为保存的属性检查器
- en: 'Click the left **Item** button and set **System Item** to **Cancel**:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧的**项目**按钮，并将**系统项**设置为**取消**：
- en: '![](img/B31371_11_47.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_47.png)'
- en: 'Figure 11.47: Attributes inspector with System Item set to Cancel'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.47：将系统项设置为取消的属性检查器
- en: Remember that the navigation controller has a property, `viewControllers`, that
    holds an array of view controllers. When you click the **+** button on the Journal
    List screen, the new view controller is added to the `viewControllers` array and
    its view appears from the bottom of the screen, covering the Journal List screen,
    and the only way to dismiss the view is to drag it downward.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，导航控制器有一个属性，`viewControllers`，它包含一个视图控制器数组。当您在期刊列表屏幕上点击**+**按钮时，新的视图控制器将被添加到`viewControllers`数组中，其视图从屏幕底部出现，覆盖期刊列表屏幕，唯一取消视图的方法是向下拖动。
- en: 'To enable the **Cancel** button to dismiss the view, you will link the **Cancel**
    button to the scene exit and implement a method in the `JournalListViewController`
    class that will be executed when the Journal List screen reappears. In the Project
    navigator, click the **JournalListViewController** file and add the following
    method at the bottom of the file before the final closing curly brace:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使**取消**按钮能够取消视图，您需要将**取消**按钮链接到场景退出，并在`JournalListViewController`类中实现一个方法，该方法将在期刊列表屏幕重新出现时执行。在项目导航器中，点击**JournalListViewController**文件，并在文件底部在最后的闭合花括号之前添加以下方法：
- en: '[PRE2]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Click on the **Main** storyboard file in the Project navigator, and click the
    **Cancel** button in the New Entry scene. In the document outline, *Ctrl* + *Drag*
    from the **Cancel** button to the scene exit icon and choose **unwindNewEntryCancelWithSegue:**
    from the pop-up menu:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中，点击**主**故事板文件，并在**新条目**场景中点击**取消**按钮。在文档轮廓中，*Ctrl* + *拖动*从**取消**按钮到场景退出图标，并从弹出菜单中选择**unwindNewEntryCancelWithSegue:**：
- en: '![](img/B31371_11_48.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_11_48.png)'
- en: 'Figure 11.48: Document outline showing the Cancel button action being set'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.48：文档轮廓显示正在设置取消按钮动作
- en: When your app is running, clicking the **Cancel** button will remove the view
    controller from the navigation controller’s `viewControllers` array, dismiss the
    view that is presented modally, and execute the `unwindNewEntryCancel(segue:)`
    method. Note that this method doesn’t do anything at present.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的应用运行时，点击**取消**按钮将从导航控制器的`viewControllers`数组中移除视图控制器，取消所呈现的模态视图，并执行`unwindNewEntryCancel(segue:)`方法。请注意，此方法目前没有任何操作。
- en: 'Build and run your app and click the **+** button in the navigation bar of
    the Journal List screen. The new view will appear. When you click the **Cancel**
    button, the new view disappears:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建并运行你的应用程序，点击Journal List屏幕导航栏中的**+**按钮。新视图将出现。当你点击**取消**按钮时，新视图将消失：
- en: '![](img/B31371_11_49.png)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_11_49.png)'
- en: 'Figure 11.49: Simulator showing the Cancel button'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.49：模拟器显示的取消按钮
- en: Congratulations! You’ve completed the basic structure for the Journal List screen!
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经完成了Journal List屏幕的基本结构！
- en: Summary
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you added a table view to the Journal List screen in the Main
    storyboard file and modified the existing view controller class to implement the
    `JournalListViewController` class. Then, you modified the `JournalListViewController`
    class to have an outlet for the table view in the storyboard and made it the data
    source and delegate for the table view. Finally, you added a button to display
    a second view and configured a **Cancel** button to dismiss it.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将表格视图添加到主Storyboard文件中的Journal List屏幕，并修改现有的视图控制器类以实现`JournalListViewController`类。然后，你修改了`JournalListViewController`类，使其在Storyboard中有一个表格视图出口，并使其成为表格视图的数据源和代理。最后，你添加了一个按钮来显示第二个视图，并配置了一个**取消**按钮来关闭它。
- en: At this point, you should be proficient in using Interface Builder to add views
    and view controllers to a storyboard scene, link view controller outlets to UI
    elements in storyboards, set up table views, and present views modally. This will
    be very useful when you’re designing the UI for your own apps.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你应该已经熟练使用Interface Builder向Storyboard场景添加视图和视图控制器，将视图控制器出口链接到Storyboard中的UI元素，设置表格视图，以及以模态方式显示视图。当你设计自己的应用程序的用户界面时，这将非常有用。
- en: In the next chapter, you’ll implement the Journal Entry Detail screen of your
    app and implement a map view for the Map screen.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将实现应用程序的Journal Entry Detail屏幕，并为Map屏幕实现一个地图视图。
- en: Join us on Discord!
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的Discord！
- en: Read this book alongside other users, experts, and the author himself. Ask questions,
    provide solutions to other readers, chat with the author via Ask Me Anything sessions,
    and much more. Scan the QR code or visit the link to join the community.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他用户、专家以及作者本人一起阅读这本书。提出问题，为其他读者提供解决方案，通过“问我任何问题”的环节与作者聊天，以及更多。扫描二维码或访问链接加入社区。
- en: '[https://packt.link/ios-Swift](https://packt.link/ios-Swift%0D)'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/ios-Swift](https://packt.link/ios-Swift%0D)'
- en: '[![](img/QR_Code2370024260177612484.png)](https://packt.link/ios-Swift%0D)'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](img/QR_Code2370024260177612484.png)](https://packt.link/ios-Swift%0D)'
