- en: Chapter 1. An Introduction to Sprite Kit
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章. Sprite Kit 简介
- en: In this book we will be discussing about iOS game development using Sprite Kit.
    We will be taking a fun approach and shall make an actual 2D platform game on
    the iPhone in the process. We are going to develop a 2D (two dimensional) game;
    a game which relies on only two coordinates. Some famous 2D games include *Mario*,
    *Hill Climb Racing*, *Angry Birds*, *Cut the Rope*, and so on.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们将讨论使用 Sprite Kit 进行 iOS 游戏开发。我们将采取一种有趣的方法，并在过程中在 iPhone 上制作一个实际的 2D
    平台游戏。我们将开发一个 2D（二维）游戏；一个只依赖于两个坐标的游戏。一些著名的 2D 游戏包括 *马里奥*，*爬山赛车*，*愤怒的小鸟*，*割绳子*，等等。
- en: A 2D game only deals with two dimensions along *x* and *y* axes (left/right
    and up/down) but not along the *z* axis (forward/backward). So basically, players
    cannot rotate or move the camera freely in a 3D space to view objects from other
    angles and perspectives. Although there are exceptions such as 2.5D games; we
    will be talking about that in later chapters. So, let's not keep things waiting
    and dive into the book.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 2D 游戏只处理沿 *x* 和 *y* 轴（左右和上下）的两个维度，但不处理沿 *z* 轴（前后）。所以基本上，玩家不能在 3D 空间中自由旋转或移动摄像头来从其他角度和视角查看对象。尽管有例外，如
    2.5D 游戏；我们将在后面的章节中讨论这一点。所以，让我们不要让事情等待，直接进入这本书。
- en: What's new in iOS 8?
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iOS 8 的新特性是什么？
- en: You might be familiar with Apple's mobile operating system, popularly known
    as iOS; the latest version of this operating system is iOS 8\. This version has
    a lot of new additions over its predecessor, iOS 7\. Some of the additions in
    this version are the introduction of the Swift programming language, loads of
    new API's, and most importantly, improvements in Sprite Kit and its peripheral
    frameworks.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能熟悉苹果的移动操作系统，通常称为 iOS；这个操作系统的最新版本是 iOS 8。这个版本在其前辈 iOS 7 上有很多新增功能。这个版本的一些新增功能包括
    Swift 编程语言的引入，大量的新 API，以及最重要的是，Sprite Kit 及其外围框架的改进。
- en: In this book, we will be using the Swift programming language over Objective-C.
    Although, you can use Sprite Kit with either Objective-C or Swift, Swift offers
    much easier syntax, and has a simpler learning curve.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们将使用 Swift 编程语言而不是 Objective-C。尽管你可以使用 Sprite Kit 与 Objective-C 或 Swift
    一起使用，但 Swift 提供了更简单的语法，并且学习曲线更简单。
- en: Getting to know Swift
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 Swift
- en: Swift is Apple's entirely new multi-paradigm programming language for developing
    applications on Apple devices. Swift has been in development for 4 years, and
    was announced in 2014 at the **Worldwide Developer Conference** (**WWDC**). Swift
    is both, a scripting and programming language; it has the ability to return multiple
    return values. Swift takes different constructs that are loved from many languages
    including Objective-C, Rust, Haskell, Ruby, Python, C#, CLU, and more. It has
    type safety feature that is, to prevent you passing string as `int` thus minimizing
    possible errors in your code.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Swift 是苹果为在苹果设备上开发应用程序而设计的全新多范式编程语言。Swift 开发已经进行了 4 年，于 2014 年在 **全球开发者大会**（**WWDC**）上宣布。Swift
    既是脚本语言也是编程语言；它具有返回多个返回值的能力。Swift 采用了许多语言中受喜爱的不同结构，包括 Objective-C、Rust、Haskell、Ruby、Python、C#、CLU
    等。它具有类型安全功能，即防止你将字符串作为 `int` 传递，从而最小化代码中的可能错误。
- en: We will be discussing more about Swift, as and when required, in the further
    topics covered.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在后续章节中根据需要进一步讨论 Swift。
- en: Getting to know Sprite Kit
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 Sprite Kit
- en: Sprite Kit is a framework from Apple, meant for developing 2D games for iOS
    devices. It is one of the best ways to make games for iOS devices. It is easy
    to learn, powerful and fully supported by Apple, which makes it more reliable
    to use than third-party game development engines.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Sprite Kit 是苹果的一个框架，旨在为 iOS 设备开发 2D 游戏。它是制作 iOS 设备游戏的最佳方式之一。它易于学习，功能强大，并且完全由苹果支持，这使得它比第三方游戏开发引擎更可靠。
- en: Sprite Kit was introduced in iOS 7 and allowed easy, fast game development;
    it has similarities with Cocos2d, which is a popular library for game development.
    If you are somewhat familiar with Cocos2d, Sprite Kit will be a breeze for you.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Sprite Kit 在 iOS 7 中引入，允许轻松、快速的游戏开发；它与流行的游戏开发库 Cocos2d 有相似之处。如果你对 Cocos2d 有一定了解，Sprite
    Kit 对你来说将是一件轻而易举的事情。
- en: Sprite Kit provides various functionalities that are useful for games, such
    as graphics rendering, animation utilities, sound playback, a particle system,
    and physics simulation. In Sprite Kit, every node will have a property name and
    physics body, which can consist of arbitrary shapes such as rectangles, polygons,
    circles, paths, and so on. Sprite Kit provides a richer particle system, where
    any aspect can be changed by code during the animation. In Sprite Kit's particle
    system, you can also add custom actions to the particles created. In addition,
    Xcode provides built-in support for Sprite Kit so that you can create complex
    special effects and texture atlases directly in Xcode. This combination of framework
    and tools makes Sprite Kit a good choice for games and other apps that require
    similar kinds of animation.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Sprite Kit 提供了各种对游戏开发有用的功能，例如图形渲染、动画工具、声音播放、粒子系统和物理模拟。在 Sprite Kit 中，每个节点都将有一个属性名称和物理体，物理体可以由任意形状组成，如矩形、多边形、圆形、路径等。Sprite
    Kit 提供了一个更丰富的粒子系统，在动画过程中可以通过代码更改任何方面。在 Sprite Kit 的粒子系统中，你还可以为创建的粒子添加自定义动作。此外，Xcode
    为 Sprite Kit 提供了内置支持，因此你可以在 Xcode 中直接创建复杂特效和纹理图集。这种框架和工具的组合使 Sprite Kit 成为游戏和其他需要类似动画功能的
    apps 的好选择。
- en: Because Sprite Kit supports a rich rendering infrastructure, and handles all
    of the low-level work to submit drawing commands to OpenGL, you can focus your
    efforts on solving higher-level design problems and creating your game functionality.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Sprite Kit 支持丰富的渲染基础设施，并处理所有将绘图命令提交给 OpenGL 的底层工作，你可以将精力集中在解决更高级的设计问题和创建游戏功能上。
- en: As Sprite Kit is a native framework of iOS, it provides in-built support for
    using the particle effects, texture effects, and physics simulations. The performance
    of Sprite Kit is better than other third-party frameworks/gaming engines, as it
    is a native framework.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Sprite Kit 是 iOS 的原生框架，它提供了内置支持以使用粒子效果、纹理效果和物理模拟。由于它是原生框架，Sprite Kit 的性能优于其他第三方框架/游戏引擎。
- en: Advantages of Sprite Kit
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Sprite Kit 的优势
- en: The main advantage of Sprite Kit is that it's built into iOS. There is no need
    to download any other third-party libraries or depend on external resources to
    develop 2D games. Other iOS APIs such as, iAd, In-App purchases, and so on, can
    be easily used without banking on extra plugins. You don't have to get familiar
    with any new programming language, the languages supported for Sprite Kit can
    also be used for app development on iOS. The best thing of all is that it is free,
    you get all the functionalities of Sprite Kit at no cost. You can run your game
    on both Mac and iOS without much effort, all you need to do is change its controls.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Sprite Kit 的主要优势是它内置在 iOS 中。开发 2D 游戏，无需下载任何其他第三方库或依赖外部资源。其他 iOS API，如 iAd、内购等，也可以轻松使用，无需依赖额外的插件。你无需熟悉任何新的编程语言，支持
    Sprite Kit 的语言也可以用于 iOS 的 app 开发。最好的是它是免费的，你可以免费获得 Sprite Kit 的所有功能。你可以在 Mac 和
    iOS 上轻松运行你的游戏，你所需做的只是更改其控制方式。
- en: Elements of Sprite Kit
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Sprite Kit 的元素
- en: Now we are going to discuss some elements of Sprite Kit, which are essential
    for game development. A game made in Sprite Kit consists of many scenes which
    are made of nodes, and the functioning of a node in a scene is determined by actions.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将讨论一些 Sprite Kit 的元素，这些元素对于游戏开发至关重要。在 Sprite Kit 中制作的游戏由许多场景组成，这些场景由节点构成，场景中节点的功能由动作决定。
- en: Scenes
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 场景
- en: A level or environment in a game is termed as a scene. We make scenes as per
    our requirement, such as menus, levels, and so on. So, there are different scenes
    for different levels and also for different menus in a game. It's like a canvas
    where you position your elements.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏中的关卡或环境被称为场景。我们根据需求制作场景，例如菜单、关卡等。因此，不同关卡和不同菜单有不同的场景。它就像一个画布，你在上面放置你的元素。
- en: A scene in Sprite Kit is represented by an `SKScene` object. A scene holds sprites
    and other contents to be rendered. To switch scenes, we can use the `SKTransition`
    class.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Sprite Kit 中的场景由一个 `SKScene` 对象表示。场景包含要渲染的精灵和其他内容。要切换场景，我们可以使用 `SKTransition`
    类。
- en: Nodes
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 节点
- en: 'Nodes are fundamental building blocks for all content in a scene. The `SKScene`
    class is a descendant of the `SKNode` class, so a scene is a root node. The `SKNode`
    class does not draw anything on scene by itself; we can think of it as a base
    class for other node classes. There are node subclasses as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 节点是场景中所有内容的根本构建块。`SKScene` 类是 `SKNode` 类的子类，因此场景是一个根节点。`SKNode` 类本身不会在场景上绘制任何内容；我们可以将其视为其他节点类的基类。以下是一些节点子类：
- en: '`SKSpriteNode`: This can be used for drawing textured sprites, playing video
    content, and more'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SKSpriteNode`：这可以用于绘制纹理精灵，播放视频内容等'
- en: '`SK3DNode`: This can be used for rendering a Scene Kit scene as a 2D textured
    image'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SK3DNode`：这可以用于将 Scene Kit 场景渲染为 2D 纹理图像'
- en: '`SKVideoNode`: This can be used for playing video content'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SKVideoNode`：这可以用于播放视频内容'
- en: '`SKLabelNode`: This can be used for rendering a text string'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SKLabelNode`：这可以用于渲染文本字符串'
- en: '`SKShapeNode`: This can be used for rendering shape, based on a core graphics
    path'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SKShapeNode`：这可以用于根据核心图形路径渲染形状'
- en: '`SKEmitterNode`: This can be used for creating and rendering particles'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SKEmitterNode`：这可以用于创建和渲染粒子'
- en: '`SKCropNode`: This can be used for cropping child nodes using a mask'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SKCropNode`：这可以用于使用蒙版裁剪子节点'
- en: '`SKEffectNode`: This can be used for applying a core image filter to its child
    node'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SKEffectNode`：这可以用于将其子节点应用核心图像滤镜'
- en: '`SKLightNode`: This can be used for applying lighting and shadows to a scene'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SKLightNode`：这可以用于将光照和阴影应用于场景'
- en: '`SKFieldNode`: This can be used for applying physics effects to a specific
    portion of the scene'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SKFieldNode`：这可以用于将物理效果应用于场景的特定部分'
- en: Actions
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动作
- en: 'An action tells a node what to do and allows you to perform different things,
    such as:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 一个动作告诉节点要做什么，并允许你执行不同的事情，例如：
- en: Moving nodes in any direction
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在任何方向上移动节点
- en: Making any node follow a path
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使任何节点遵循路径
- en: Rotating nodes
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 旋转节点
- en: Scaling of nodes
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缩放节点
- en: Showing or hiding a node
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示或隐藏一个节点
- en: Changing the content of a sprite node
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改精灵节点的内文
- en: Playing sound
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 播放声音
- en: Removing nodes from a scene
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从场景中删除节点
- en: Performing action on a child's node, and so on
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在一个孩子的节点上执行操作，等等
- en: To create a run action, first, create the action using the particular action
    class, configure the properties for the created action, and call a run action
    by passing action object as a parameter. When the scene processes the node, the
    actions of that particular node will be executed.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个运行动作，首先，使用特定的动作类创建动作，配置创建的动作属性，并通过传递动作对象作为参数来调用运行动作。当场景处理节点时，该节点的动作将被执行。
- en: Features of Sprite Kit
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Sprite Kit 的功能
- en: Sprite Kit provides many features to facilitate the development of a game. These
    features can be used for enhancing the experience as well as performance of the
    game. Let's discuss them in brief.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Sprite Kit 提供了许多功能来简化游戏开发。这些功能可以用于增强游戏体验和性能。让我们简要讨论它们。
- en: Particle editor
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 粒子编辑器
- en: 'This feature was introduced in iOS 7\. Particle editor is used to add special
    effects in a game, like adding a mist effect in a game scene. Here, we can customize
    many things, such as:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能是在 iOS 7 中引入的。粒子编辑器用于在游戏中添加特殊效果，例如在游戏场景中添加雾效。在这里，我们可以自定义许多事情，例如：
- en: The number of particles
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 粒子的数量
- en: Limit of particles allowed
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许的粒子数量限制
- en: The color of particles
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 粒子的颜色
- en: The size of a particle
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 粒子的大小
- en: The life of a particle
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 粒子的寿命
- en: The location of a particle in a scene, and so on
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 场景中粒子的位置，等等
- en: Texture atlas generator
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 纹理图集生成器
- en: Texture atlas generator combines all image files into one or more large images,
    in order to improve performance. We will discuss this in detail in the later chapters.
    It is recommended to use a lesser number of images to reduce draw calls (number
    of images rendering on a scene).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 纹理图集生成器将所有图像文件合并为一个或多个大图像，以提高性能。我们将在后面的章节中详细讨论这一点。建议使用较少的图像以减少绘制调用（场景上渲染的图像数量）。
- en: Shaders
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 着色器
- en: Shaders were introduced in iOS 8\. They are used to produce a variety of special
    effects; they calculate rendering effects on graphic hardware with a high degree
    of flexibility, for example, we have seen ripple effects in many apps/games. Wherever
    a user touches the screen, a ripple effect will be produced.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 着色器是在 iOS 8 中引入的。它们用于产生各种特殊效果；它们以高度灵活的方式在图形硬件上计算渲染效果，例如，我们在许多应用程序/游戏中看到了涟漪效果。无论用户在屏幕上触摸哪里，都会产生涟漪效果。
- en: In Sprite Kit, shaders are represented by the `SKShaderNode` class object.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Sprite Kit 中，着色器由 `SKShaderNode` 类对象表示。
- en: Lighting and shadows
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 灯光与阴影
- en: 'Lighting and shadows were introduced in iOS 8\. These effects are produced
    using the `SKLightNode` class object. The `SKLightNode` object can:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 灯光与阴影在 iOS 8 中引入。这些效果是通过 `SKLightNode` 类对象产生的。`SKLightNode` 对象可以：
- en: Spread a lighting effect at any desirable position on the scene
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在场景的任何期望位置扩散灯光效果
- en: Add lighting in any sprite
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在任何精灵中添加灯光
- en: Support colors and shadows
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持颜色和阴影
- en: It's just a type `SKNode,` so we can apply any property that we apply to any
    `SKNode`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 它只是一个 `SKNode` 类型，因此我们可以应用任何应用于任何 `SKNode` 的属性。
- en: Physics
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 物理
- en: Simulating physics in Sprite Kit can be achieved by adding physics bodies to
    the scenes. A physics engine has the sole purpose of moving objects around in
    a simulated world. The physics bodies take the properties of objects, such as
    mass, shape material, current trajectory, and so on, and calculate a new position
    for all those objects.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Sprite Kit 中模拟物理可以通过向场景中添加物理体来实现。物理引擎的唯一目的是在模拟世界中移动对象。物理体具有对象的属性，如质量、形状、材料、当前轨迹等，并为所有这些对象计算新的位置。
- en: Every object on the Sprite Kit game scene will have a physics body. A physics
    body object is connected to a node on the node tree of a particular scene. The
    scene will simulate the effect of forces and collisions on those particular physics
    bodies that are connected to the node tree, whenever the scene computes a new
    frame of animation. We can apply a particular physics property on those nodes
    using their particular physics properties such as gravity, mass, force, friction,
    and so on.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Sprite Kit 游戏场景中的每一个对象都将拥有一个物理体。物理体对象连接到特定场景的节点树上的一个节点。每当场景计算新的动画帧时，场景将模拟作用于那些连接到节点树上的特定物理体的力和碰撞效果。我们可以使用它们的特定物理属性（如重力、质量、力、摩擦等）在这些节点上应用特定的物理属性。
- en: The game loop
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 游戏循环
- en: 'Following is a frame life cycle diagram:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个帧生命周期图：
- en: '![The game loop](img/4201_01_01.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![游戏循环](img/4201_01_01.jpg)'
- en: At the start, the update function is called to where we set up the logic of
    the game. After that, the scene evaluates the actions. After the actions are evaluated,
    we get a callback. After that, we set up physics, if any. When the physics simulation
    is finished, we get another call with `didSimulatePhysics`. Then, we apply constraint
    and get another callback, `didApplyConstraints`. The last callback method is `didFinishUpdate`;
    we get it just before frame is completed and view is ready to render. Finally
    `SKView` renders the scene; the frame is complete and it continues 60 times per
    second.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始时，调用更新函数来设置游戏的逻辑。之后，场景评估动作。动作评估后，我们得到一个回调。然后，如果有的话，我们设置物理。当物理模拟完成后，我们通过 `didSimulatePhysics`
    获得另一个调用。然后，我们应用约束并得到另一个回调，`didApplyConstraints`。最后一个回调方法是 `didFinishUpdate`；我们在帧完成和视图准备好渲染之前得到它。最后
    `SKView` 渲染场景；帧完成，并且每秒继续60次。
- en: Setting up a project
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置项目
- en: We have discussed many things about Sprite Kit, now it's time to see a project
    in action and gain some practical knowledge.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了许多关于 Sprite Kit 的内容，现在是时候看看一个实际的项目并获取一些实际知识了。
- en: The Hello World project
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hello World 项目
- en: 'We''ll need to create a new project to build `Hello World`. An Xcode project
    organizes everything your app needs into one convenient place. Let''s begin by
    creating a brand new game project in Xcode by carrying out either of the first
    two points, and then continuing as shown in the list:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要创建一个新的项目来构建 `Hello World`。Xcode 项目将您的应用程序所需的一切组织到一个方便的地方。让我们通过执行以下前两点中的任意一点，然后在列表中继续操作，来在
    Xcode 中创建一个全新的游戏项目：
- en: Click on **Create a new Xcode project** on the welcome screen:![The Hello World
    project](img/B04201_01_02.jpg)
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在欢迎屏幕上点击 **创建一个新的 Xcode 项目**：![Hello World 项目](img/B04201_01_02.jpg)
- en: Instead, you can also select **File** | **New** | **Project…** from the file
    menu:![The Hello World project](img/B04201_01_03.jpg)
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 相反，您也可以从文件菜单中选择 **文件** | **新建** | **项目…**：![Hello World 项目](img/B04201_01_03.jpg)
- en: Select **Game** from the new project selection window:![The Hello World project](img/B04201_01_04.jpg)
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从新项目选择窗口中选择 **游戏**：![Hello World 项目](img/B04201_01_04.jpg)
- en: The next window asks you to customize options for your project. Fill out the
    fields as shown in the following screenshot:![The Hello World project](img/B04201_01_05.jpg)
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个窗口会要求您自定义项目的选项。填写如下截图所示的字段：![Hello World 项目](img/B04201_01_05.jpg)
- en: '**Product Name**: It is the name of the game'
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**产品名称**：这是游戏名称'
- en: '**Organization Name**: If you are an individual, then your name, or the name
    of the organization'
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组织名称**：如果您是个人，则您的姓名或组织的名称'
- en: '**Organization Identifier**: A unique identifier of your organization'
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组织标识符**：您组织的唯一标识符'
- en: '**Bundle Identifier**: It is a default ID generated automatically using organization
    identifier and product name.'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**包标识符**：这是一个默认ID，通过组织标识符和产品名称自动生成。'
- en: '**Language**: The programming language you are using, that is, Objective-C
    or Swift'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语言**：您正在使用的编程语言，即Objective-C或Swift'
- en: '**Game Technology**: The game framework being used, like Scene Kit, Sprite
    Kit, Metal, and so on'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**游戏技术**：正在使用的游戏框架，例如Scene Kit、Sprite Kit、Metal等'
- en: '**Devices**: The devices you want your game to run on; iPad, iPhone, or both'
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设备**：您希望游戏运行的设备；iPad、iPhone或两者都行'
- en: These fields can be anything you want
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些字段可以是您想要的任何内容
- en: Press **Next** and Xcode will ask where to save your new project. Choose a directory
    and then click on **Create**.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按**下一步**，Xcode将询问您要保存新项目的地方。选择一个目录，然后点击**创建**。
- en: After saving, it should open Xcode to your brand new `Hello World` project,
    specifically to the project properties screen. On this screen, unselect the **Portrait**
    option under **Device Orientation**. This file will be automatically saved, so
    you won't have to do anything further:![The Hello World project](img/B04201_01_06.jpg)
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存后，它应该会打开Xcode到您全新的`Hello World`项目，具体到项目属性屏幕。在此屏幕上，取消选择**纵向**选项下的**设备方向**。此文件将自动保存，因此您不需要做任何事情：![Hello
    World项目](img/B04201_01_06.jpg)
- en: Result
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结果
- en: 'Run the default game project by pressing *⌘* + *R* on your keyboard, or by
    clicking on the little play button in the top left corner. If a simulator isn''t
    present, Xcode will download one for you before launching the app. The result
    will look as follows:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 通过按键盘上的*⌘* + *R*或点击左上角的播放按钮来运行默认的游戏项目。如果没有模拟器，Xcode将在启动应用之前为您下载一个。结果将如下所示：
- en: '![Result](img/B04201_01_07.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![结果](img/B04201_01_07.jpg)'
- en: Summary
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We also learned how to create a Sprite Kit project and run `Hello World` in
    it.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还学习了如何创建Sprite Kit项目并在其中运行`Hello World`。
- en: In the next chapter, we will be diving deeply into scenes, and also into adding
    scenes to our *Platformer* game.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨场景，以及如何将场景添加到我们的*平台游戏*中。
