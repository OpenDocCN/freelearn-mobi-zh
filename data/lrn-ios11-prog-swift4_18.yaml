- en: Displaying Data in Restaurant Detail
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在餐厅详细视图中显示数据
- en: 'Our app is coming together nicely, but we have one more section to do before
    we can start adding features. We have data in all of our views except for in our
    restaurant detail. In the last chapter, we passed data using segues, and we are
    going to do this again in this chapter.  We have a few other things in this view
    that we need to set up before we move on to some of the features of the app; so
    in this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的应用程序正在顺利地进行，但在我们可以开始添加功能之前，我们还有一个部分要做。在我们的所有视图中都有数据，除了餐厅详细视图。在上一个章节中，我们使用segues传递数据，我们将在本章再次这样做。在这个视图中，我们还有一些其他事情需要设置，在继续到应用程序的一些功能之前；因此，在本章中，我们将涵盖：
- en: Passing data using segues
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用segues传递数据
- en: Connecting IBOutlet to display data
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接IBOutlet以显示数据
- en: Displaying one annotation in a Map view
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在地图视图中显示一个注释
- en: 'Let''s set up our `RestaurantDetailViewController` by adding the following:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过添加以下内容来设置我们的`RestaurantDetailViewController`：
- en: 'Add the following variables after the class declaration and before the `selectedRestaurant`
    variable:'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在类声明之后和`selectedRestaurant`变量之前添加以下变量：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Make sure you save the file.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保保存文件。
- en: 'Now that we''ve created our `IBOutlet`, we need to connect them:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了`IBOutlet`，我们需要将它们连接起来：
- en: Open the `RestaurantDetail.storyboard`, select the Restaurant Detail View Controller
    in the Outline view, and then open the Connections inspector in the Utilities
    panel.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`RestaurantDetail.storyboard`，在大纲视图中选择餐厅详细视图控制器，然后在实用工具面板中打开连接检查器。
- en: Now click on and drag from the empty circle of each of the following variables
    we just added under Outlets to their respective elements listed as follows in
    either the scene or Outline view.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在点击并从我们刚刚添加的以下变量的空圆圈拖动到场景或大纲视图中列出的相应元素。
- en: 'An empty circle for `imgMap` to the Map View in the Outline view:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 场景中用于`imgMap`标签到地图视图的空圆圈：
- en: '![](img/ff6e39c9-1aa9-44d7-9d37-3ac1dedb6f8d.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ff6e39c9-1aa9-44d7-9d37-3ac1dedb6f8d.png)'
- en: 'An empty circle for `lblAddress` to the address Label above the map:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 场景中用于`lblAddress`标签到地图上方的地址标签的空圆圈：
- en: '![](img/e6b2d9af-605c-4016-94ab-95eb6c9e5881.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e6b2d9af-605c-4016-94ab-95eb6c9e5881.png)'
- en: 'An empty circle for `lblOverallRating` to the Label inside the Reviews cell:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 场景中用于`lblOverallRating`标签到评论单元格内的标签的空圆圈：
- en: '![](img/63b0ffe4-f29c-4b27-ae49-4349ec06c1be.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/63b0ffe4-f29c-4b27-ae49-4349ec06c1be.png)'
- en: 'An empty circle for `lblTableDetails` to the Label under the header in the
    scene:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 场景中用于`lblTableDetails`标签到标题下方的标签的空圆圈：
- en: '![](img/88fc7ed3-0f37-4124-8881-8cc8404076a0.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/88fc7ed3-0f37-4124-8881-8cc8404076a0.png)'
- en: 'An empty circle for `lblName` to the Label under the logo in the scene:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 场景中用于`lblName`标签下logo下的空圆圈：
- en: '![](img/de5080c3-2bf2-4eb2-a5c0-2ce4eba827a8.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/de5080c3-2bf2-4eb2-a5c0-2ce4eba827a8.png)'
- en: 'An empty circle for `lblCuisine` to the Label under `lblName` in the scene:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 场景中用于`lblCuisine`标签下`lblName`标签的空圆圈：
- en: '![](img/af0ddf35-a74f-4cc6-911f-c6eca0f2cb20.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/af0ddf35-a74f-4cc6-911f-c6eca0f2cb20.png)'
- en: 'An empty circle for `lblHeaderAddress` to the Label under `lblCuisine` in the
    scene:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 场景中用于`lblHeaderAddress`标签下`lblCuisine`标签的空圆圈：
- en: '![](img/3a020d3e-f0f2-4380-a1b5-99fbff35e0d2.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3a020d3e-f0f2-4380-a1b5-99fbff35e0d2.png)'
- en: Adding a navigation button
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加导航按钮
- en: 'Adding a navigation button used to be as simple as just dragging out the button;
    however, for some reason that isn''t the case anymore. To display a heart in the
    navigation bar, we will have to do the following:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 添加导航按钮曾经是如此简单，只需拖出按钮即可；然而，不知何故，现在不再是这种情况。要在导航栏中显示心形图标，我们需要执行以下操作：
- en: Select the Restaurant Detail View Controller in the Outline view.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在大纲视图中选择餐厅详细视图控制器。
- en: Next, go to Editor | Embed In | Navigation Controller.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，转到编辑器 | 嵌入 | 导航控制器。
- en: 'When complete, you should see the following:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，你应该会看到以下内容：
- en: '![](img/78204bb9-9cfc-4d9e-b34c-05911f2ea1ab.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/78204bb9-9cfc-4d9e-b34c-05911f2ea1ab.png)'
- en: 'Next, open the Utilities panel, and in the filter bar of the object library,
    type `bar`; drag a bar button item to the top-right of the Restaurant Detail View
    Controller. You will see an outline appear in this area, as follows:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，打开实用工具面板，在对象库的筛选栏中输入`bar`；将一个工具栏按钮拖到餐厅详细视图控制器的右上角。你将在这个区域看到一个轮廓出现，如下所示：
- en: '![](img/7409004b-29c6-4fa8-96ee-d24c2ef9d64e.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7409004b-29c6-4fa8-96ee-d24c2ef9d64e.png)'
- en: 'In the Attributes inspector, under Bar Item, delete the text Item for Title
    and Image and update the image value to heart-unselected. When complete, you should
    see the following:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在属性检查器中，在工具栏下，删除标题和图像的文本项，并将图像值更新为heart-unselected。完成后，你应该会看到以下内容：
- en: '![](img/b9f4740a-64de-4846-99ee-99054ee0a3cc.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b9f4740a-64de-4846-99ee-99054ee0a3cc.png)'
- en: 'Now we need to connect our favorite icon in the navigation bar. Select the
    Restaurant Detail View Controller in the Outline view. Then, in the Outlet inspector,
    click and drag `btnHeart` to our newly created button, as follows:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要连接导航栏中的收藏图标。在大纲视图中选择餐厅详情视图控制器。然后，在输出检查器中点击并拖动 `btnHeart` 到我们新创建的按钮，如下所示：
- en: '![](img/23563ce0-65e3-4a4a-a765-b1ae31670d02.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/23563ce0-65e3-4a4a-a765-b1ae31670d02.png)'
- en: 'Next, with the View Controller still selected, in the Attributes inspector
    click on the checkbox next to Is Initial View Controller. When complete, you should
    see the following:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，仍然选择视图控制器，在属性检查器中点击“是初始视图控制器”旁边的复选框。完成后，你应该看到以下内容：
- en: '![](img/177d7ed6-ce61-46b4-a867-20b860ced851.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/177d7ed6-ce61-46b4-a867-20b860ced851.png)'
- en: 'Now select the Navigation Controller and delete it. When you are done, you
    should see the following:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在选择导航控制器并将其删除。完成后，你应该看到以下内容：
- en: '![](img/9970e8bf-8e63-49a4-b453-f1d26578fef0.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9970e8bf-8e63-49a4-b453-f1d26578fef0.png)'
- en: For some reason, we had to go through all of that just to add the bar button
    item, even though typically we could just drag it and drop it. Now that we have
    everything connected, we can now jump into coding and get our detail page displaying
    data.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 由于某种原因，我们不得不经历所有这些步骤，只是为了添加条形按钮项，尽管通常我们只需拖放即可。现在我们已经将所有内容连接起来，我们可以开始编码，并让我们的详情页面显示数据。
- en: Displaying data in our static Table View
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在我们的静态表格视图中显示数据
- en: Next, we need to create a method that will display all of our data in our labels.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要创建一个方法，该方法将在我们的标签中显示所有数据。
- en: 'So, open the `RestaurantDetailViewController.swift` file and add the following
    before the last curly brace:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，打开 `RestaurantDetailViewController.swift` 文件，并在最后一个花括号之前添加以下内容：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This method will now get the data and display it inside our labels. Next, we
    want to display a map of the restaurant location at the bottom of our Detail view. 
    Now, you might be wondering why we are using an image and not a map. Using a map
    uses a lot more resources, whereas an image makes things a lot smoother.  Let''s
    arrange for an image of a map to display, and also show our custom annotation
    in the image. Add the following method under the `setupLabels()` method and before
    the last curly brace:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法现在将获取数据并在我们的标签内显示。接下来，我们想在详情视图的底部显示餐厅位置的地图。现在，你可能想知道为什么我们使用图片而不是地图。使用地图需要更多的资源，而图片可以使事情更加流畅。让我们安排显示地图图片，并在图片中显示我们的自定义注释。在
    `setupLabels()` 方法下和最后一个花括号之前添加以下方法：
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In this method, we get the longitude and latitude and enter the values into
    a `CLLocationCoordinate2D` object. We then pass the location to a method called
    `takeSnapShot(with:)`.  Add the following method under the `createMap()` method:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在此方法中，我们获取经纬度并将值输入到 `CLLocationCoordinate2D` 对象中。然后我们将位置传递给名为 `takeSnapShot(with:)`
    的方法。在 `createMap()` 方法下添加以下方法：
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This method is long, but it allows us to create a map at the size we need. We
    then pass all of our settings to our snapshotter to create a picture. Once we
    have created our image, we then add our custom annotation to it. Although this
    requires a lot of code, it is the best way to understand it in its entirety. Here,
    we would recommend changing values line-by-line to see how it affects the image.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法虽然很长，但它允许我们创建所需大小的地图。然后我们将所有设置传递给我们的快照器以创建图片。一旦我们创建了图片，我们就在其上添加自定义注释。尽管这需要很多代码，但这是完全理解它的最佳方式。在这里，我们建议逐行更改值以查看它对图片的影响。
- en: 'Now that we have created our functions, we just need to call them, as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了我们的函数，我们只需按照以下方式调用它们：
- en: 'Add the following after the `viewDidLoad()` method in the `RestaurantDetailViewController.swift`
    file:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `RestaurantDetailViewController.swift` 文件中 `viewDidLoad()` 方法之后添加以下内容：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This method now needs to be called inside your `viewDidLoad()` method.  Replace
    the `dump` statement in the `viewDidLoad()` method with the following:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在需要在你的 `viewDidLoad()` 方法中调用此方法。将 `viewDidLoad()` 方法中的 `dump` 语句替换为以下内容：
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now we have finished with our Restaurant Detail View Controller.  Let's build
    and run the project by hitting the Play button (or using *cmd* + *R*). When you
    select a restaurant, you should see all of the restaurant's information on the
    details page.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了餐厅详情视图控制器的开发。让我们通过点击播放按钮（或使用 *cmd* + *R*）来构建和运行项目。当你选择一家餐厅时，你应该在详情页面上看到所有关于该餐厅的信息。
- en: 'Also, you should see a pin dropped at the restaurant''s location on the map,
    which is actually an image:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你应该在地图上看到餐厅位置的标记，实际上这是一个图片：
- en: '![](img/77e1d5b1-0086-4fd4-9c5c-4af292901419.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/77e1d5b1-0086-4fd4-9c5c-4af292901419.png)'
- en: We are done with the restaurant detail for now, but we still need to be able
    to show ratings, reviews, and photos. We will work on all of these features in
    upcoming chapters.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 目前我们已经完成了餐厅详情的设置，但我们仍然需要能够显示评分、评论和图片。我们将在接下来的章节中处理所有这些功能。
- en: Summary
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We now have JSON data loading into our app.  As you can see, going from a plist
    to a JSON file was not a huge step. Our app is now looking more and more like
    it should be available on the App Store. In the following chapters, we will turn
    our attention to adding features that you might want to use in your app. These
    features will enhance the user experience, and therefore learning them will be
    invaluable. Even if the features don't seem like something you want or need, it
    will be beneficial in the long run to understand what they are and how they work.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将 JSON 数据加载到我们的应用中。正如你所见，从 plist 文件转换到 JSON 文件并不是一个巨大的步骤。我们的应用现在看起来越来越像可以在
    App Store 上发布了。在接下来的章节中，我们将关注添加你可能想在应用中使用的功能。这些功能将增强用户体验，因此学习它们将非常有价值。即使这些功能看起来不是你想要的或需要的，从长远来看，了解它们是什么以及它们是如何工作的也将是有益的。
- en: In the next chapter, you will work with the camera and learn how to apply filters
    and save images to the Camera Roll.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将使用相机，学习如何应用滤镜并将图片保存到相机胶卷。
