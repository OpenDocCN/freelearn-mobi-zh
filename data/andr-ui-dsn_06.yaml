- en: Chapter 6.  Turning Your Sketches into Wireframes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第六章：将你的草图转换为线框图
- en: In the previous chapter, we concentrated on planning our screens at a very high
    level by creating things such as screen maps and flowcharts. In this chapter,
    we'll move on from high-level planning to start designing the screens that'll
    make up our app.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们通过创建屏幕图和流程图等东西，在非常高的层面上集中规划我们的屏幕。在本章中，我们将从高级规划转向开始设计将构成我们的应用屏幕。
- en: 'During the screen designing process, you''ll usually complete the following
    steps:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在屏幕设计过程中，你通常会完成以下步骤：
- en: '**First draft wireframing**: This is where you begin to layout your screens
    by making quick sketches with paper and pencils. A wireframe is a low-fidelity,
    visual representation of your app''s layout; sometimes, it is referred to as a
    skeleton, outline, page schematic, or screen blueprint. To help you focus on each
    screen''s layout, functionality, and usability, wireframes are usually stripped
    of all look and feel elements, and at least initially, most content and text.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**初稿线框图**：这是你开始通过使用纸张和铅笔快速草图来布局屏幕的地方。线框图是你应用布局的低保真度、视觉表示；有时，它被称为骨架、轮廓、页面示意图或屏幕蓝图。为了帮助你专注于每个屏幕的布局、功能和可用性，线框图通常会去除所有外观和感觉元素，至少最初是这样，大多数内容和文本。'
- en: '**Digital wireframe**: Once you''re happy with your pencil-and-paper wireframes,
    it''s time to refine these first drafts using digital software. This step is also
    where you check whether your emerging designs are suitable for the kind of content
    you want to display, by starting to add the content and text that each screen
    will eventually display.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数字线框图**：一旦你对铅笔和纸张的线框图感到满意，就是时候使用数字软件来细化这些初稿了。这一步也是你检查你正在形成的设计是否适合你想要展示的内容类型的地方，通过开始添加每个屏幕最终将显示的内容和文本。'
- en: '**Prototyping**: The next step is creating a prototype based on your digital
    wireframe using paper and pencil.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原型制作**：下一步是基于你的数字线框图使用纸张和铅笔创建原型。'
- en: '**Usability testing**: This is where you test your paper prototypes on an actual
    user. This type of testing is crucial for highlighting any issues with your navigation
    and helping you get an idea of how easy your user interface is for users to understand.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可用性测试**：这是你在实际用户身上测试你的纸质原型的地方。这种测试对于突出显示你导航中的任何问题，并帮助你了解用户界面对用户理解有多容易至关重要。'
- en: Note
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In design, low-fidelity refers to a rough representation of concepts, design
    alternatives, and screen layouts. By creating low-fidelity prototypes and wireframes,
    you can test various ideas without having to invest too much time and effort in
    the design process. The high-fidelity design is where you fill in all the details
    missing from a design's low-fidelity predecessors. In this chapter, we'll create
    low-fidelity wireframes using paper and pencils, and then develop these initial
    ideas into more detailed, high-fidelity digital wireframes.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计中，低保真度指的是概念、设计替代方案和屏幕布局的粗略表示。通过创建低保真度原型和线框图，你可以在不投入太多时间和精力到设计过程中去的情况下测试各种想法。高保真度设计是指填补设计低保真度前身所缺失的所有细节。在本章中，我们将使用纸张和铅笔创建低保真度线框图，然后把这些初步想法发展成为更详细、高保真度的数字线框图。
- en: What is wireframing?
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是线框图？
- en: Think of a wireframe as a skeleton of a screen's layout that describes how major
    UI components should be arranged in the screen's hierarchy. The purpose of wireframing
    is to focus on things such as functionality, usability, behavior, and the positioning
    and priority of your content. Wireframing *isn't* about graphic design. In fact,
    at this stage, it's better to leave out all design-related elements. You may even
    want to make your wireframes look very rough and sketch-like on purpose to help
    you focus on what each screen *does* and not what it looks like.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 将线框图想象成屏幕布局的骨架，它描述了主要UI组件在屏幕层次结构中应该如何排列。线框图的目的在于关注诸如功能、可用性、行为以及内容的定位和优先级等问题。线框图**不是**关于图形设计的。实际上，在这个阶段，最好省略所有与设计相关的元素。你可能甚至故意让你的线框图看起来非常粗糙和草图般，以帮助你专注于每个屏幕*做什么*，而不是它看起来像什么。
- en: Your wireframes typically won't include color, unless you're using color to
    distinguish certain elements of your UI; for example, you might want to grab a
    colored pencil and draw a box around related content groups, or to add elements
    that don't have a physical onscreen presence such as interaction and movement.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你的线框图通常不会包括颜色，除非你使用颜色来区分UI中的某些元素；例如，你可能想拿一支彩色铅笔在相关内容组周围画一个框，或者添加没有屏幕上物理存在的元素，如交互和运动。
- en: You can create wireframes using pencil and paper, by scribbling on a whiteboard
    or using a wide range of free and commercial software applications. However, for
    the first drafts, it makes sense to wireframe via quick sketches using a pencil
    and paper.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用铅笔和纸、在白板上涂鸦或使用广泛的免费和商业软件应用来创建线框图。然而，对于初稿来说，使用铅笔和纸快速草图线框图是有意义的。
- en: What are the benefits of wireframing?
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 线框图的优点是什么？
- en: 'Wireframing may sound straightforward, but these deceptively simple sketches
    are an important step in designing more effective application screens. Here are
    a few of the reasons why it''s well worth breaking out your pencil case, grabbing
    a notebook, and wireframing your app:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 线框图听起来很简单，但这些看似简单的草图是设计更有效应用屏幕的重要步骤。以下是几个值得你拿出铅笔盒、拿起笔记本并线框图你的应用的理由：
- en: Wireframing is ideal for rapidly testing different layouts.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线框图非常适合快速测试不同的布局。
- en: Creating sketches is quick and easy, which means wireframing is the perfect
    opportunity to explore lots of different potential layouts.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 制作草图既快又简单，这意味着线框图是探索多种不同潜在布局的完美机会。
- en: Wireframes encourage you to get creative and experiment with different positioning
    and sizing of UI elements as well as different navigation. They're also an easy
    ways of mapping out the relationship between your UI elements.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 线框图鼓励你发挥创意，尝试不同的UI元素的位置和尺寸以及不同的导航。它们也是映射UI元素之间关系的一种简单方法。
- en: By wireframing lots of different possibilities, you can discover the optimal
    layout for each screen that makes up your app.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过线框图多种不同的可能性，你可以发现构成你应用的每个屏幕的最佳布局。
- en: While *technically* there's nothing stopping you from getting experimental at
    every stage of the design process, the more time and effort you invest in your
    project, the less inclined you'll be to experiment with new ideas and alternate
    layouts.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然从技术上讲，你可以在设计过程的每个阶段进行实验，但你在项目上投入的时间和精力越多，你就越不愿意尝试新的想法和不同的布局。
- en: One thing you should be aware of while wireframing lots of different layouts
    is that wireframes are static representations of your screens. Wireframes *aren't*
    very good at displaying interactive details or moving elements. You'll need to
    use your imagination to get a better idea of how any interactive or moving elements
    work in your layouts, or spend some extra time prototyping and testing your layouts,
    which is something we'll cover later on in this chapter.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在线框图多种不同的布局时，你应该注意的一点是，线框图是屏幕的静态表示。线框图并不擅长显示交互细节或移动元素。你需要发挥想象力来更好地了解你的布局中任何交互或移动元素的工作方式，或者花更多的时间原型设计和测试你的布局，这将在本章后面讨论。
- en: They help you identify problems early in the design process.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们帮助你早期在设计过程中识别问题。
- en: As with everything in life, sometimes things work better in theory than they
    do in practice, so what seemed like a good idea on a screen map or in your head
    may break down as soon as you try and implement it.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 就像生活中的一切一样，有时候理论上的事情比实际操作中做得更好，所以你在屏幕地图或脑海中看似不错的想法，一旦尝试实施可能会立刻出现问题。
- en: Whether your app goes through multiple extensive design changes or simply a
    few tweaks, design changes are an inevitable part of creating a mobile app, so
    isn't it better to discover potential problems as early as possible? Wireframing
    is one of the quickest and easiest ways of uncovering issues with your designs,
    and revising a wireframe is approximately 1 billion times easier than revising
    a high-fidelity mockup or, even worse, a user interface that's already under development.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无论你的应用经历了多次广泛的设计变更还是仅仅是一些微调，设计变更都是创建移动应用不可避免的一部分，所以不是尽早发现潜在问题更好吗？线框图是快速发现设计问题的最快、最简单的方法之一，而且修改线框图大约比修改高保真原型或更糟糕的，已经处于开发中的用户界面要容易1亿倍。
- en: Discovering issues at the wireframing stage also means you're more likely to
    make whatever changes are necessary to properly resolve the issue, even if it
    means drastically changing your design. When you uncover issues further down the
    line, you're naturally going to be tempted to look for workarounds and quick fixes
    that'll patch the issue without causing too much disruption to your design. This
    approach may make your life easier in the short term, but it probably isn't going
    to make for very happy end users in the long run.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在线框图阶段发现问题也意味着你更有可能做出必要的更改，以正确解决这些问题，即使这意味着彻底改变你的设计。当你发现后续问题，你自然会倾向于寻找解决方案和快速修复，以修补问题而不会对你的设计造成太大干扰。这种做法可能短期内让你生活更轻松，但长期来看，可能不会让最终用户感到非常满意。
- en: They encourage you to capture a complete design rather than winging it.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们鼓励你捕捉一个完整的设计，而不是随意发挥。
- en: Do you feel like you have a crystal-clear picture in your mind's eye of how
    your app should look? Maybe you've had this vision before you even started the
    planning process.. If this is the case, then great, but you still need to capture
    this vision on paper!
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你是否觉得你对应用的外观有一个清晰的心理图像？也许你在开始规划过程之前就有了这个愿景。如果是这样，那很好，但你仍然需要将这个愿景记录在纸上！
- en: Mental pictures have a tendency to be a bit fuzzy around the edges, and sometimes,
    you don't even quite realize how fuzzy they are until you try to capture them
    on paper. Once you start trying to recreate what you see in your mind's eye, you
    may realize that there are still a few question marks hanging over certain parts
    of your design.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 心理图像的边缘往往有点模糊，有时，直到你试图在纸上捕捉它们，你甚至都没有意识到它们有多模糊。一旦你开始尝试重现你心中的景象，你可能会意识到，你的设计中仍有一些部分悬而未决。
- en: And as you move through the design process, it's far easier to redraft and refine
    something that's physically there in front of you, rather than an image that's
    floating around in the ether.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 随着你进入设计流程，在面前实际存在的某个东西上进行重绘和细化，远比在虚空中飘浮的图像要容易得多。
- en: They give everyone a common design language.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它为每个人提供了一个共同的设计语言。
- en: At their core, wireframes are basically just labeled and annotated sketches,
    so they're something that everyone can understand. This is good news if your app
    is a team effort, as wireframes help to bridge the gap between *developing* an
    app and *designing* an app *without* resorting to any developer or designer lingo.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在本质上，线框图基本上只是标注和注释的草图，因此它们是每个人都能理解的东西。如果你的应用是一个团队项目，这是一个好消息，因为线框图有助于弥合开发应用和设计应用之间的差距，而无需使用任何开发人员或设计师的专业术语。
- en: If you're developing an app for a client, wireframes are also a great way of
    making sure your client has a clear picture of how their project is progressing.
    You can then get the client's input and, hopefully, their sign-off on your design
    before you move onto the next stage of your project.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你正在为某个客户开发应用，线框图也是确保客户对其项目进展有一个清晰了解的绝佳方式。然后你可以获取客户的反馈，并希望在他们进入项目下一个阶段之前，获得他们对设计的认可。
- en: People are naturally more reluctant to pick fault with a design that someone's
    clearly spent hours, perhaps even days, perfecting. Although it's nice to want
    to spare a team member's feelings, this isn't going to help you create the best
    possible app in the long run.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 人们自然不愿意对某人显然花费数小时，甚至数天时间完美化设计提出批评。虽然想要照顾团队成员的感情是好事，但这从长远来看并不能帮助你创建出最好的应用。
- en: Make sure your wireframe *looks* like a quick sketch, and even the politest
    member of your team should feel comfortable pointing out its flaws.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保你的线框图看起来像是一个快速草图，即使是最有礼貌的团队成员也应该感到舒适地指出其缺陷。
- en: They encourage you to start thinking about navigation in more detail.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们鼓励你更详细地思考导航问题。
- en: It's impossible to overestimate the negative impact of poorly-designed navigation.
    If a user can't navigate through your app with ease, they're going to navigate
    straight *out* of your app.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 过度估计设计不良导航的负面影响是不可能的。如果一个用户无法轻松地在你应用中导航，他们很可能会直接退出你的应用。
- en: We touched on navigation in the previous chapter, but up until now, navigation
    has been nothing more than a set of up, down, and side-to-side arrows on a screen
    map. Wireframing is the perfect opportunity to start thinking about *how* you're
    going to implement your app's navigation. How exactly are your users going to
    move from the home screen to the Settings screen? Via tabs, action bars? How about
    their device's **Back** button? Wireframing is an essential step in designing
    effective navigation. In fact, whenever you create a wireframe, the first thing
    you'll need to do is decide what navigational elements should appear on the screen,
    as you'll see later on in this chapter.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们在上一个章节中提到了导航，但到目前为止，导航在屏幕地图上不过是一组向上、向下和侧向的箭头。线框设计是开始思考如何实现你的应用导航的完美机会。用户究竟将通过标签、操作栏还是他们的设备的**返回**按钮从主页移动到设置页？线框设计是设计有效导航的关键步骤。实际上，每次你创建线框时，你首先需要决定屏幕上应该出现哪些导航元素，正如你将在本章后面看到的。
- en: Creating a Wireframe
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建线框
- en: Creating a wireframe may seem fairly straightforward. Anyone can slap a bunch
    of sketches together, right? While wireframing is supposed to be quick and easy,
    if you're going to get the maximum value out of your wireframing sessions, then
    you'll want to put as much thought as possible into your wireframes.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 创建线框可能看起来相当直接。任何人都可以随意堆砌一堆草图，对吧？虽然线框设计应该是快速和简单的，但如果你想要从你的线框设计会议中获得最大价值，那么你将想要尽可能多地思考你的线框。
- en: For the early drafts, the most effective method of wireframing is to simply
    sketch out your screens using paper and pencils. Ideally, you should produce several
    versions of each screen, and paper sketches are the quickest way to test out a
    few ideas. Once you've finished sketching, simply place your sketches side by
    side and decide which is the most effective design, or you may even decide to
    combine elements from multiple sketches to create the perfect layout.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在早期草稿中，最有效的线框设计方法是简单地使用纸张和铅笔绘制你的屏幕。理想情况下，你应该为每个屏幕制作几个版本，纸张草图是测试几个想法的最快方式。一旦完成草图，只需将草图并排放置，并决定哪个设计最有效，或者你也可以甚至决定从多个草图中选择元素来创建完美的布局。
- en: Even if you prefer the thought of digital wireframing and are itching to sit
    down in front of your computer and boot up your favorite image-editing program,
    you should still take the time to create rough sketches first, as this is the
    perfect way to get your ideas flowing, and quickly test out multiple designs before
    moving onto the more time-consuming process of digital wireframing.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你更喜欢数字线框设计，并迫不及待地想坐在电脑前启动你最喜欢的图像编辑程序，你也应该先花时间创建粗略草图，因为这正是让你的想法流动起来，并在进入耗时更长的数字线框设计过程之前快速测试多个设计的方法。
- en: Creating your first wireframe
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建你的第一个线框
- en: During your wireframing sessions, it's helpful to have your screen map handy,
    so you can keep referring to it. When approaching a new project, it usually makes
    sense to start with the first screen the user will see when they launch your app.
    In our recipe app, this just so happens to be the home screen.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的线框设计会议期间，将你的屏幕地图放在手边是有帮助的，这样你可以随时参考它。当你开始一个新的项目时，通常从用户启动你的应用时将看到的第一个屏幕开始是有意义的。在我们的食谱应用中，这恰好就是主页。
- en: 'Draw a rough outline of your screen, and then work out what navigational elements
    you need to include. For our recipe home screen, these are as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的屏幕上绘制一个粗略的轮廓，然后确定你需要包含哪些导航元素。对于我们的食谱主页，这些元素如下：
- en: The screens the user can reach the home screen *from*. Essentially, you need
    to consider how the user will navigate back to the previous screen. A lot of the
    time, this is handled automatically by the device's **Back** button, but you can
    also provide backward navigation via the left-point caver that appears in the
    action bar or a UI element, such as a **Return to previous screen** button. To
    keep things simple, let's assume that the backward navigation is handled automatically
    by the device's **Back** softkey.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以从哪些屏幕到达主页。本质上，你需要考虑用户如何导航回到上一个屏幕。很多时候，这可以通过设备的**返回**按钮自动处理，但你也可以通过动作栏中出现的左指箭头或一个UI元素，如**返回上一个屏幕**按钮来提供向后导航。为了简化问题，让我们假设向后导航是由设备的**返回**软键自动处理的。
- en: 'The screens the user can navigate *to*. In our recipe example, this is the
    list of saved recipes, the list of categories, and the search screen. To present
    all these options in a compact way, I''m going to add them to a menu that''ll
    appear along the left-hand side of the screen:'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以导航到的屏幕。在我们的食谱示例中，这是已保存食谱列表、类别列表和搜索屏幕。为了以紧凑的方式展示所有这些选项，我打算将它们添加到一个菜单中，该菜单将出现在屏幕的左侧：
- en: '![Creating your first wireframe](img/B05061_6_1.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![创建你的第一个线框图](img/B05061_6_1.jpg)'
- en: Next, decide what content you need to display. Start by adding the most important
    content such as images, headings, subheadings, and other large blocks of content,
    and then work your way down the content hierarchy.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，决定你需要显示哪些内容。首先添加最重要的内容，如图片、标题、副标题和其他大型内容块，然后按内容层次结构逐步进行。
- en: 'For my home screen, I want to display the app''s title and logo, plus a few
    tantalizing images of the meals that users can cook by following the recipes included
    in this app:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我的主页，我想显示应用的标题和标志，以及一些诱人的用户可以通过遵循此应用中包含的食谱制作的菜肴的图片：
- en: '![Creating your first wireframe](img/B05061_6_2.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![创建你的第一个线框图](img/B05061_6_2.jpg)'
- en: Tip
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Feeling uninspired?**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**感觉灵感枯竭了吗？**'
- en: If you're struggling for inspiration, then taking a critical look at other apps
    is a great way to kickstart the creative process. The best places to draw inspiration
    from are high-rated apps on the Google Play store or Google's own suite of apps.
    The latter are particularly useful as they're usually good examples of the latest
    best practices and design principles, particularly Material Design.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正为灵感而苦恼，那么批判性地审视其他应用是一个很好的启动创意过程的方法。从评分高的Google Play商店或Google自己的应用套件中汲取灵感是最佳选择。后者尤其有用，因为它们通常是最新最佳实践和设计原则的绝佳示例，尤其是Material
    Design。
- en: Spend some time flicking through the different screens and ask yourself what
    you like about each screen's layout and whether there are any improvements you
    could make. It may help to create wireframes of any screen you particularly like,
    and then look for any similarities, elements, or just general design principles
    that you can use in your own wireframes.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 花些时间浏览不同的屏幕，问问自己你喜欢每个屏幕布局的哪些方面，以及是否有可以改进的地方。创建你特别喜欢的屏幕的线框图可能会有所帮助，然后寻找任何可以用于你自己的线框图的相似之处、元素或一般设计原则。
- en: Exploring more wireframes
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索更多线框图
- en: Every time you create a wireframe, the process will differ slightly depending
    on factors such as the kind of app you're creating, the content you want to display,
    the screen's purpose, and your target audience. However, it is possible to identify
    certain *types* of screens that occur across multiple apps as these often share
    similar characteristics and UI elements.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 每次你创建线框图时，过程都会因你创建的应用类型、你想要显示的内容、屏幕的目的以及你的目标受众等因素而略有不同。然而，可以识别出某些在多个应用中出现的**类型**的屏幕，因为这些屏幕通常具有相似的特征和UI元素。
- en: 'Case in point: our home screen wireframe. Many apps have some form of home
    screen, and these screens often feature things such as headings, logos, and main
    menus–exactly like our recipe app home screen. In addition to the home screen,
    this app is a great example of a few other common *types* of screens. Since you''re
    likely to encounter these screens in your own projects at some point, let''s look
    at how you can approach creating wireframes for each of these screens.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 以我们的主页线框图为例。许多应用都有某种形式的主页，这些屏幕通常包括标题、标志和主菜单等元素——就像我们的食谱应用主页一样。除了主页之外，这个应用还是几个其他常见**类型**的屏幕的绝佳示例。由于你很可能在自己的项目中遇到这些屏幕，让我们看看如何为每个这些屏幕创建线框图的方法。
- en: I'll start with what I'm going to call a *details* screen. This is a screen
    that appears when the user selects an item on a previous screen, and the app displays
    a new screen containing more information about the selected item. In our recipe
    app, the screen containing each recipe is a details screen; users scroll through
    a list of recipes, spots one they like the look of, and then tap the recipe. At
    this point, they're taken to a separate screen containing all the information
    they need to recreate this meal.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我将从我称之为**细节**屏幕的内容开始。这是一个当用户在前一个屏幕上选择一个项目时出现的屏幕，应用会显示一个包含有关所选项目更多信息的新屏幕。在我们的食谱应用中，包含每个食谱的屏幕就是一个细节屏幕；用户浏览食谱列表，找到一个他们喜欢的，然后点击食谱。这时，他们会进入一个单独的屏幕，包含他们需要重新制作这道菜所需的所有信息。
- en: Note
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: In our screen map, we have referred to this screen as the *detailed recipe view*.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的屏幕图中，我们将这个屏幕称为*详细食谱视图*。
- en: Wireframing a details screen
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 细节屏幕的线框设计
- en: As the name suggests, details screens are all about displaying information,
    which is typically a mix of text and media, such as images, videos, or audio.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如其名所示，细节屏幕都是关于展示信息，这通常是文本和媒体（如图片、视频或音频）的混合。
- en: 'Let''s follow the same process we used for wireframing our home screen and
    start by identifying all the navigational elements we need to add. Taking a look
    at the screen map, I can see that I need to add the following:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们遵循我们用于线框设计主页的过程，首先确定我们需要添加的所有导航元素。看一下屏幕图，我发现我需要添加以下内容：
- en: The screens the user can reach the detailed recipe screen *from*. Since we glossed
    over backward navigation in our home screen wireframe, let's explore it in more
    detail here. According to the screen map, the user can reach the detailed recipe
    screen from the search results screen, the list of recipes for a given category,
    and the list of saved recipes. Although we could potentially rely on the user
    tapping their device's **Back** softkey to return to the previous screen, wireframing
    is all about exploring different options, so I'm going to try something different
    and add a **Back to previous screen** button to this particular wireframe.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以从哪些屏幕到达详细食谱屏幕。由于我们在主页线框设计中忽略了向后导航，让我们在这里更详细地探讨它。根据屏幕图，用户可以从搜索结果屏幕、特定类别的食谱列表和保存的食谱列表到达详细食谱屏幕。尽管我们可能依赖于用户点击设备上的**返回**软键返回上一个屏幕，但线框设计完全是关于探索不同选项，所以我要尝试一些不同的事情，并在这个特定的线框中添加一个**返回上一个屏幕**按钮。
- en: The screens the user can navigate *to*. In our simple screen map, the detailed
    recipe screen looks like it's the final screen in the app, but in reality, you
    rarely encounter this kind of *dead end* in a mobile application. When users add
    this recipe to their list of saved recipes, I think it'd be helpful if the app
    takes users to their online scrapbook, so they can view all their saved recipes.
    To create this effect, I'm going to add an **Add to scrapbook** button that, when
    pressed, performs this action *and* takes the user to their online scrapbook.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以导航到的屏幕。在我们的简单屏幕图中，详细食谱屏幕看起来像是应用程序中的最后一个屏幕，但在现实中，你很少在移动应用程序中遇到这种*死胡同*。当用户将这个食谱添加到他们保存的食谱列表中时，我认为如果应用程序将用户带到他们的在线剪贴簿，以便他们可以查看所有保存的食谱，这将是有帮助的。为了创建这种效果，我将添加一个**添加到剪贴簿**按钮，当按下时，执行此操作*并*将用户带到他们的在线剪贴簿。
- en: 'Now, it''s time for content. In no particular order, I want this screen to
    display the following:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是内容展示的时候了。不分先后顺序，我希望这个屏幕显示以下内容：
- en: The recipe's title
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 食谱的标题
- en: How difficult the recipe is to make
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制作这个食谱有多难
- en: An estimate of how long it takes to cook
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 烹饪所需时间的估算
- en: An estimate of how much the ingredients cost
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成本估算
- en: How many people the recipe feeds
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个食谱可以供多少人食用
- en: An enticing, mouth-watering photo of the finished result
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一张诱人、令人垂涎的成品照片
- en: The recipe itself
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本身就是食谱
- en: Tip
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Do you really need a details screen?**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**你真的需要一个细节屏幕吗？**'
- en: The golden rule of creating a details screen is that it *must* contain enough
    information to warrant its status as a separate screen. For example, imagine you've
    just downloaded an app where you can check what films are being shown at your
    local cinema.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 创建细节屏幕的黄金法则就是它*必须*包含足够的信息，以证明其作为独立屏幕的地位。例如，想象你刚刚下载了一个应用程序，你可以用它来查看你当地电影院正在上映的电影。
- en: The first screen is a timetable that displays all the films alongside their
    showing times. You can tap every film in the timetable and the app will load a
    new screen that's dedicated to the selected film. What new information might you
    expect to find on this screen? Maybe a synopsis or a list of the lead actresses
    and actors? How about a star rating or links to reviews, so you can decide whether
    this is a film that you *need* to see on the big screen with popcorn, or whether
    you should just wait for it to come out on Netflix instead?
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 第一屏幕是一个时间表，显示了所有电影及其放映时间。你可以点击时间表中的每部电影，应用程序将加载一个新屏幕，专门用于所选电影。你可能会在这个屏幕上找到哪些新信息？也许是一个剧情简介或主演女演员和男演员的列表？或者是一个星级评分或链接到评论，这样你可以决定这是否是一部你需要带着爆米花在大银幕上观看的电影，或者你是否应该等待它在Netflix上播出？
- en: Now, imagine you didn't see any of this additional information, and the details
    screen simply reiterated the information that you'd already seen on the main screen.
    Would you feel like this was a well-designed app that was giving you a great user
    experience? The answer is a resounding *nope*.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设你没有看到任何这些额外信息，详情屏幕只是重复了你在主屏幕上已经看到的信息。你会觉得这是一个设计精良、提供良好用户体验的应用吗？答案是响亮的**不**。
- en: If you *do* decide to include a details screen, then make sure it contains some
    new information. If it doesn't, then it has no value, and therefore, it has no
    place in your app.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你确实决定包含一个详情屏幕，那么请确保它包含一些新信息。如果没有，那么它就没有价值，因此，它就没有在应用中的位置。
- en: 'As always, add the most important content to your wireframe first. In this
    example, that''s the **Heading**, an image of the finished product, and the **Recipe**
    itself:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 总是首先在你的线框图中添加最重要的内容。在这个例子中，那就是**标题**、成品图片以及**食谱**本身：
- en: '![Wireframing a details screen](img/B05061_6_3.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![绘制详情屏幕的线框图](img/B05061_6_3.jpg)'
- en: 'As you work your way down the content hierarchy, you may encounter content
    that could work in numerous positions in your screen layout. If you do, then this
    is the ideal time to experiment with different layouts by creating multiple wireframes.
    You can then place these drawings side by side and decide which layout you prefer,
    or you can combine elements from multiple wireframes to create your perfect layout.
    Here''s a selection of the wireframes I created for the detailed recipe screen:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当你沿着内容层次结构向下工作时，你可能会遇到可以在屏幕布局中多个位置工作的内容。如果是这样，那么这是通过创建多个线框图来尝试不同布局的理想时机。然后你可以将这些草图并排放置，并决定你更喜欢哪种布局，或者你可以从多个线框图中组合元素来创建你完美的布局。以下是我为详细食谱屏幕创建的线框图选择：
- en: '![Wireframing a details screen](img/B05061_6_4.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![绘制详情屏幕的线框图](img/B05061_6_4.jpg)'
- en: This wireframe contains several elements that could conceivably work in different
    locations–specifically, the text boxes that contain the estimated time, estimated
    cost, and the number of people this recipe feeds, plus the recipe's star rating.
    Wireframing gives you a quick and easy way of testing out these elements in several
    different positions.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这个线框图包含了一些可能在不同的位置工作的元素——特别是包含估计时间、估计成本和这个食谱可以喂多少人以及食谱的星级评分的文本框。线框图为你提供了一个快速简单的方法来测试这些元素在多个不同位置的效果。
- en: '![Wireframing a details screen](img/B05061_6_5.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![绘制详情屏幕的线框图](img/B05061_6_5.jpg)'
- en: 'While wireframing these elements in various positions, I''ve decided to keep
    the major content areas the same in all these wireframes:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些元素的不同位置绘制线框图时，我决定在所有这些线框图中保持主要的内容区域相同：
- en: '![Wireframing a details screen](img/B05061_6_6.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![绘制详情屏幕的线框图](img/B05061_6_6.jpg)'
- en: Note
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: There's lots more content we could add to this screen; for example, it might
    be nice for users to be able to post comments, upload photos, or award each recipe
    a rating out of 10\. You might also want to include multiple photos of the finished
    results, so the user can scroll through these photos. To keep this chapter short,
    I'm not going to wireframe all these options, but if you're feeling creative,
    you might want to grab a piece of paper and a pencil, and create your own wireframes
    that include all this additional content.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以在这个屏幕上添加更多内容；例如，可能让用户能够发表评论、上传照片或为每个食谱打分（满分10分）会很好。你可能还希望包含多张成品照片，让用户可以滚动查看这些照片。为了使这一章简短，我不会绘制所有这些选项的线框图，但如果你有创意，你可能想拿一张纸和一支铅笔，创建包含所有这些额外内容的自己的线框图。
- en: Wireframing search screens
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 绘制搜索屏幕的线框图
- en: Many apps have some form of search functionality, and our recipe app is no exception,
    so let's take a look at wireframing the search screen.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 许多应用都有某种形式的搜索功能，我们的食谱应用也不例外，所以让我们看看如何绘制搜索屏幕的线框图。
- en: 'You know the drill by now! Look at the screen map and work out all the navigational
    elements you need to include:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该知道了！看看屏幕图，并确定你需要包含的所有导航元素：
- en: All the screens the user can reach the search screen *from*. According to the
    screen map, users can reach the search screen from the home screen only.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以从哪些屏幕到达搜索屏幕。根据屏幕图，用户只能从主页屏幕到达搜索屏幕。
- en: All the screens the user can navigate *to*. The only screen the user can reach
    from the search screen is the search results screen.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以导航到的所有屏幕。用户只能从搜索屏幕到达的屏幕是搜索结果屏幕。
- en: In the previous wireframes, we handled backward navigation by relying on the
    device's **Back** softkey and by creating a **Return to previous screen** button,
    so let's try something different this time around! I'm going to use a left-facing
    caret in the action bar.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的线框中，我们通过依赖设备的**返回**软键和创建一个**返回上一屏幕**按钮来处理向后导航，所以这次让我们尝试一些不同的方法！我打算在操作栏中使用一个向左的箭头。
- en: Note
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意事项
- en: When you're creating Android apps in real life, you'll typically select one
    method of navigation and use it across your app, rather than the mixture we're
    using in this chapter. Although I'm experimenting with lots of different navigational
    options, just be aware that in a real-life project, you'd select one form of navigation
    and apply it across your entire app to avoid confusing and frustrating your users.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实生活中创建Android应用时，你通常会选择一种导航方式并在整个应用中使用它，而不是我们在本章中使用的混合方式。尽管我在尝试很多不同的导航选项，但请记住，在实际项目中，你会选择一种导航形式并在整个应用中应用它，以避免让用户感到困惑和沮丧。
- en: 'Let''s create our search functionality. I''m going to keep things simple and
    use the following:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建我们的搜索功能。我会保持简单，并使用以下内容：
- en: An `EditText` where users can enter the keyword(s) they want to search for.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`EditText`，用户可以输入他们想要搜索的关键词。
- en: A button the user presses to submit their search term(s). I'm going to label
    this button with the standard search system icon to ensure that the user instantly
    knows what action this button performs.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户按下以提交他们的搜索词的按钮。我将使用标准的搜索系统图标来标记此按钮，以确保用户立即知道此按钮执行的操作。
- en: You might have noticed that in the previous wireframes, we were talking in general
    terms, such as heading boxes and images, and now, we're using the technical term
    *EditText.* This is because there are no strict rules when it comes to wireframing,
    so if you already have an idea of how you're going to create certain UI elements,
    and you want to add this information to your wireframes, then go ahead!
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，在之前的线框中，我们使用的是一般术语，如标题框和图像，而现在，我们使用的是技术术语*EditText*。这是因为线框设计没有严格的规则，所以如果你已经有了创建某些UI元素的想法，并且想要将此信息添加到你的线框中，那么请继续！
- en: Note
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意事项
- en: The only exception is when you're planning on sharing your wireframes with other
    people, particularly if these people aren't Android developers themselves! If
    you're creating wireframes as a collaborative effort with non-Android types, then
    you should stick to civilian terms such as text boxes and images.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的例外是当你打算与他人分享你的线框，尤其是如果这些人本身不是Android开发者时！如果你与非Android类型的人一起创建线框作为协作努力，那么你应该坚持使用民用术语，如文本框和图像。
- en: '![Wireframing search screens](img/B05061_6_7.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![绘制搜索屏幕线框](img/B05061_6_7.jpg)'
- en: 'While there''s nothing wrong with this layout, there''s no denying that it''s
    pretty basic. It would be better if our users could search for recipes based on
    a few different criteria:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这种布局没有问题，但不可否认的是，它相当基础。如果我们的用户能够根据几个不同的标准搜索食谱会更好：
- en: How easy a recipe is to make
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该食谱制作有多简单
- en: How much the ingredients cost to purchase
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 购买食材的成本
- en: How many people the recipe feeds
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该食谱可以供多少人食用
- en: 'There are lots of ways of implementing this functionality, but the two that
    immediately spring to my mind are here:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 实现此功能的方法有很多，但我想到的两种方法是这里：
- en: Give the user the ability to filter recipes based on different criteria by adding
    checkboxes to the existing search screen wireframe. Users can then enter any keyword
    they want to search for *and* select the relevant checkboxes; for example, they
    might search for recipes that contain the words `prawn madras` (yum, yum) and
    then select the checkboxes marked **Costs £2-£3** and **Takes 15-20 minutes to
    cook**.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在现有的搜索屏幕线框中添加复选框，让用户能够根据不同的标准过滤食谱。用户可以输入他们想要搜索的任何关键词，并选择相关的复选框；例如，他们可能会搜索包含单词`prawn
    madras`（美味，美味）的食谱，然后选择标记为**成本 £2-£3**和**烹饪时间 15-20 分钟**的复选框。
- en: Stick with our simple search screen, but add filters to the search *results*
    screen. The user searches for keywords as normal and is taken to the search results
    screen, which contains additional filters that allow the user to narrow down their
    search results.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 坚持使用我们简单的搜索屏幕，但在搜索结果屏幕中添加过滤器。用户像平常一样搜索关键词，然后被带到搜索结果屏幕，该屏幕包含额外的过滤器，使用户能够缩小搜索结果。
- en: 'Both of these are viable options, so I''ve quickly wireframed each approach.
    This is a great example of how you can use wireframes to quickly test out various
    layouts:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种方案都是可行的，所以我迅速地为每种方法制作了线框图。这是一个很好的例子，说明了你可以如何使用线框图快速测试各种布局：
- en: '![Wireframing search screens](img/B05061_6_8.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![线框图搜索屏幕](img/B05061_6_8.jpg)'
- en: In this wireframe, the user performs a search as usual, but the search results
    screen contains three new buttons (**Price**,**Time**, and **Feeds...**), which
    they can use to filter their search results based on different criteria.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个线框图中，用户像往常一样进行搜索，但搜索结果屏幕包含三个新的按钮（**价格**、**时间**和**订阅...**），他们可以使用这些按钮根据不同的标准过滤搜索结果。
- en: 'The following wireframe is a new version of the Search screen where users enter
    their search terms into the `EditText` as normal, but then uses various checkboxes
    to be more specific about the search results they want to see:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的线框图是搜索屏幕的新版本，用户像往常一样在`EditText`中输入搜索词，但随后使用各种复选框来更具体地说明他们想要看到的搜索结果：
- en: '![Wireframing search screens](img/B05061_6_9.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![线框图搜索屏幕](img/B05061_6_9.jpg)'
- en: The search screen as a fragment
  id: totrans-116
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 搜索屏幕作为一个片段
- en: Regardless of where you are in the design and development process, you should
    always be thinking about how to support as many different Android devices as possible.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你在设计和开发过程的哪个阶段，你都应该始终考虑如何支持尽可能多的不同Android设备。
- en: When you're busy wireframing, it's easy to fall into the trap of designing with
    one device in mind. Although this does make wireframing easier, it won't make
    for a very effective UI in the long run.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 当你忙于制作线框图时，很容易陷入只针对一种设备进行设计的陷阱。虽然这确实让线框图制作变得容易，但从长远来看，这并不会对UI设计产生很大的效果。
- en: Tip
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Wireframing for landscape and portrait**'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**横屏和竖屏线框图**'
- en: Playing around with the sizing and positioning of your content during the wireframing
    phase not only helps you work out how you might better support multiple screen
    configurations, but it also helps you to design an app that functions equally
    well in both landscape and portrait modes.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在线框图阶段对内容的尺寸和位置进行调整，不仅有助于你更好地支持多种屏幕配置，还能帮助你设计出在横屏和竖屏模式下都能良好运行的APP。
- en: Planning for multiple screens may mean creating several wireframes that target
    different screen configurations, or it could mean combining your content in different
    ways using fragments.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 为多个屏幕进行规划可能意味着创建针对不同屏幕配置的多个线框图，或者可能意味着使用片段以不同的方式组合你的内容。
- en: In the previous chapter, we mentioned displaying our search screen as a standalone
    activity on smaller devices, but displaying it as a fragment alongside the home
    screen on devices with larger screens. Since we've already wireframed the first
    possibility, it only seems right to wireframe how the search screen might function
    as part of a multi-pane layout.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们提到在较小设备上显示我们的搜索屏幕作为一个独立的活动，但在较大屏幕设备上，将其作为片段与主页并排显示。既然我们已经为第一种可能性制作了线框图，那么绘制搜索屏幕作为多窗格布局的一部分似乎也是正确的。
- en: To speed up this process, I'm going to reuse the home screen wireframe that
    we created earlier as well as the original, basic search screen wireframe.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 为了加快这个流程，我将重用我们之前创建的主页线框图以及原始的基本搜索屏幕线框图。
- en: As always, let's start with navigation. Most of the navigational elements from
    our home screen wireframe are still valid apart from the **Search for recipes**
    item in the left-hand menu. Since the search box will appear alongside the home
    screen in this scenario, we can remove this link from the menu.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，让我们从导航开始。除了左侧菜单中的“搜索食谱”项目外，我们主页线框图中的大多数导航元素仍然有效。由于在这种情况下搜索框将出现在主页旁边，我们可以从菜单中删除此链接。
- en: Similarly, the original search wireframe included an action bar with a left-facing
    caret that's no longer necessary; since the fragment appears as part of the home
    screen, there's nowhere for the user to navigate back *to* apart from exiting
    the app, and we don't want to help them do that!
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，原始的搜索线框图包含一个带有左向箭头的操作栏，这现在不再必要；由于片段作为主页的一部分出现，用户除了退出应用外没有其他地方可以导航回，我们不希望帮助他们这样做！
- en: With navigation sorted, let's look at the content. All the content from the
    original home screen and search wireframes is still relevant, and therefore, it
    has a place in our multi-pane layout.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 导航问题解决后，让我们看看内容。原始主页和搜索线框图中的所有内容仍然相关，因此它们在我们的多窗格布局中都有位置。
- en: 'Let''s take a look at the finished result:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看最终的结果：
- en: '![The search screen as a fragment](img/B05061_6_10.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![搜索屏幕作为片段](img/B05061_6_10.jpg)'
- en: Note
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Feeling overwhelmed?**'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**感到不知所措了吗？**'
- en: Working out the best position for each element while also trying to design for
    multiple devices may leave you staring at a blank sheet of paper and wondering
    *where do I start?* If you're feeling overwhelmed, then it may help to think of
    wireframes as a series of drafts.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试为多个设备设计的同时确定每个元素的最佳位置，可能会让你对着一张空白的纸发呆，想知道**从哪里开始**？如果你感到不知所措，那么将线框视为一系列草稿可能会有所帮助。
- en: When creating you first draft, you should wireframe without stressing about
    trying to support multiple devices. Instead, concentrate on defining how your
    app looks in its *natural* state. How wide would you like that heading to be,
    if you didn't have to worry about running out of space on smaller handsets? Ideally,
    how far would that button be placed from the edge of the screen? And do you *really*
    want to display two images side by side? Are you sure you wouldn't prefer three?
    Or four? How about five?
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建你的第一个草稿时，你应该在不担心尝试支持多个设备的情况下绘制线框。相反，集中精力定义你的应用在其**自然**状态下的外观。如果你不担心在小型手机上空间不足，你希望那个标题有多宽？理想情况下，那个按钮应该离屏幕边缘有多远？你真的想并排显示两张图片吗？你确定你不会更喜欢三张？或者四张？五张呢？
- en: Grab a pencil and wireframe without a care in the world. Then, after you've
    finished patting yourself on the back for an excellent first draft, you can start
    worrying about how this wireframe might translate across different devices.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 拿起铅笔，无忧无虑地绘制线框。然后，在你为自己出色的初稿拍手称快之后，你就可以开始担心这个线框如何在不同设备上转换了。
- en: Digital wireframes
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数字线框
- en: Once you're satisfied with your paper wireframes, you should develop them further.
    This may mean creating a more detailed, thought-out sketch using your trusty pencil
    and paper, or it may mean developing these paper wireframes into *digital* wireframes.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你对你的纸质线框感到满意，你应该进一步发展它们。这可能意味着使用你信任的铅笔和纸张创建一个更详细、经过深思熟虑的草图，或者这可能意味着将这些纸质线框发展成**数字**线框。
- en: If you do decide to digitize your wireframes, there's plenty of wireframing
    software out there, from professional image-editing programs such as Adobe Photoshop,
    Illustrator, and Fireworks, right through to tools created specifically for wireframing,
    such as Pidoco, Axure, InDesign, Sketch, Omnigraffle, and Balsamiq Mockups.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你决定数字化你的线框，市面上有大量的线框软件，从专业的图像编辑程序，如Adobe Photoshop、Illustrator和Fireworks，一直到专门为线框设计的工具，如Pidoco、Axure、InDesign、Sketch、Omnigraffle和Balsamiq
    Mockups。
- en: '![Digital wireframes](img/B05061_6_11.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![数字线框](img/B05061_6_11.jpg)'
- en: The previous image is an example of our recipe app home screen, created with
    the Balsamiq digital wireframing tool.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张图片是我们食谱应用主屏幕的示例，使用Balsamiq数字线框工具创建。
- en: If you're unsure about what tool to use, then a quick Google search will return
    lots of potential wireframing software, at which point you'll be faced with a
    whole new problem–too much choice!
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不确定要使用哪个工具，那么快速进行一次谷歌搜索会返回大量的潜在线框软件，这时你将面临一个全新的问题——选择太多！
- en: 'If you''re struggling to decide between several potential wireframing tools,
    then ask yourself the following questions:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你难以在几个潜在的线框工具之间做出选择，那么请自问以下问题：
- en: Does this tool have all the features I need? Before taking the plunge, you should
    make sure your chosen tool has all the features you need to quickly and easily
    create wireframes for your *specific* project. This is especially important if
    you're investing cold hard cash in professional wireframing software. If you download
    free wireframing software, and then realize that it isn't quite right for you,
    then at least you haven't wasted any of your hard-earned cash! To avoid being
    swayed by persuasive website copy, jot down all the features your ideal wireframing
    tool should include. You can then check whether each potential tool meets your
    list of criteria; and if it doesn't, then you can move onto the next one.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个工具是否具备我需要的所有功能？在做出决定之前，你应该确保你选择的工具具备你快速轻松创建针对你**特定**项目线框所需的所有功能。如果你在投资专业的线框软件，这一点尤为重要。如果你下载了免费的线框软件，然后发现它并不完全适合你，那么至少你没有浪费你辛苦赚来的钱！为了避免被有说服力的网站文案所影响，记下你理想的线框工具应该包含的所有功能。然后你可以检查每个潜在的工具是否符合你的标准；如果不符，那么你可以继续考虑下一个。
- en: Is it customizable? Being able to tweak the wireframing program to meet your
    exact needs is always positive, but this is particularly important if you're developing
    an unusual or niche UI.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否可定制？能够调整线框图程序以满足你的具体需求总是积极的，但如果你在开发不寻常或利基的用户界面时，这一点尤为重要。
- en: Can you store reusable elements? You'll typically use many UI elements across
    multiple screens such as action bars, menu, and buttons. To supercharge the wireframing
    process, keep an eye out for tools that allow you to easily store and reuse visual
    elements.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你能存储可重用元素吗？你通常会在多个屏幕上使用许多UI元素，例如操作栏、菜单和按钮。为了提升线框图过程，留意一下允许你轻松存储和重用视觉元素的工具。
- en: What's the learning curve? Professional vector illustration tools may sound
    like just the thing your project needs, but complex tools may leave you scratching
    your head, particularly if you're not overly familiar with design. The whole purpose
    of wireframing is to save yourself time by quickly testing out multiple layouts.
    However, this whole exercise becomes pretty pointless if you end up spending hours
    with your head buried in the program's user manual rather than actually creating
    wireframes.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习曲线是怎样的？专业的矢量插图工具可能听起来正是你项目所需的东西，但复杂的工具可能会让你感到困惑，尤其是如果你对设计不太熟悉。线框图的整个目的就是通过快速测试多个布局来节省你的时间。然而，如果你花几个小时埋头于程序的用户手册而不是实际创建线框图，那么整个练习就变得毫无意义。
- en: Are you already familiar with software that has wireframing potential? Even
    if this program isn't the most modern or feature rich, if you can use it to create
    effective wireframes in a reasonable amount of time, then it may make sense to
    use this old favorite, rather than investing time in getting to grips with some
    new software.
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你是否已经熟悉具有线框图潜力的软件？即使这个程序不是最现代或功能最丰富的，如果你能在合理的时间内用它创建有效的线框图，那么使用这个老牌的软件，而不是花时间学习新软件，可能是有意义的。
- en: If you're struggling with the sheer variety of wireframing tools out there,
    then you may want to focus on free wireframing software, rather than jumping headfirst
    into purchasing a professional image-editing tool. The huge benefit of free tools
    is that you can see firsthand whether they're right for you by downloading a few
    and giving them a quick trial *without* racking up a massive bill.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在与众多线框图工具的多样性作斗争，那么你可能想要专注于免费的线框图软件，而不是一头扎进购买专业的图像编辑工具。免费工具的巨大好处是，你可以通过下载几个并快速试用，*无需*支付巨额账单，就能亲自看看它们是否适合你。
- en: Adding content to your wireframes
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 向你的线框图添加内容
- en: Up until now, we've made a point of not adding content to our wireframes; but
    at some point, you'll need to test whether the way your screens are shaping up
    is suitable for the kind of content you want to display. Once you have a set of
    digital wireframes you're happy with, it's time to test whether your content fits
    into these wireframes, or you need to make some adjustments to said wireframes.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直强调不在线框图中添加内容；但到了某个时候，你需要测试你的屏幕形状是否适合你想要显示的内容类型。一旦你对一系列满意的数字线框图感到满意，就是时候测试你的内容是否适合这些线框图，或者你是否需要调整这些线框图。
- en: Content, mainly copy, doesn't really look appealing on *any* platform, but this
    is even more true on mobile devices. The smaller screen of a smartphone or tablet
    can make large blocks of undifferentiated text seem even larger.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 内容，主要是副本，在*任何*平台上看起来都不太吸引人，但在移动设备上更是如此。智能手机或平板电脑的小屏幕可能会使未分化的文本块看起来更大。
- en: If you're going to present your app's copy in an elegant way, then you need
    to put some thought into its design, and wireframes are the perfect place to start.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打算以优雅的方式展示你的应用副本，那么你需要对其设计进行一些思考，而线框图是完美的起点。
- en: As you move into digital wireframing territory, you can start experimenting
    with design elements, such as different fonts, text sizes, bullets and numbered
    lists, as well as headings and subheadings. The end result? A UI that blends your
    sparkling, engaging copy with appealing presentation and design–basically, text
    that your users will actually *want* to read.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 当你进入数字线框图领域时，你可以开始尝试设计元素，如不同的字体、文本大小、项目符号和编号列表，以及标题和副标题。最终结果？一个将你闪耀、引人入胜的副本与吸引人的展示和设计相结合的UI——基本上，是用户真正*想要*阅读的文本。
- en: If you leave content and copy design issues until you have the final screen
    design in front of you, then chances are that you'll try and convince yourself
    that it isn't *really* that big a problem; or you'll look for the quickest and
    easiest workarounds even if they don't make for the best screen design.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你把内容和复制设计问题留到最终屏幕设计摆在你面前的时候，那么你可能会试图说服自己这并不是一个真正的大问题；或者你会寻找最快最简单的工作方案，即使这些方案并不适合最佳的屏幕设计。
- en: When adding content to your wireframes, it's crucial to keep in mind what *real*
    content looks like. It's tempting to use text that just so happens to be the right
    size and length to fit neatly into your wireframe. Unfortunately, unless you're
    *very* lucky, this simply isn't the way real content works, so it's important
    to use realistic text in your wireframes.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在线框中添加内容时，牢记真实内容的外观至关重要。使用恰好适合你的线框大小和长度的文本很诱人。不幸的是，除非你非常幸运，否则这并不是真实内容的工作方式，因此在使用线框时使用逼真的文本很重要。
- en: Although you can use the classic `Lorem ipsum` Latin filler text or some dummy
    content, the best way to test that your layout is suitable for the kind of content
    you want to display is to use the same copy that'll eventually appear on the screen.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你可以使用经典的`Lorem ipsum`拉丁语填充文本或一些占位符内容，但测试你的布局是否适合你想要显示的内容的最佳方式是使用最终将出现在屏幕上的相同复制内容。
- en: In the case of our recipe app, this presents a bit of a problem as the text
    on each detailed recipe screen will be different. For example, each recipe title
    will be a different length, so how do we ensure all these titles will fit into
    the available space?
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的食谱应用的情况下，这带来了一点问题，因为每个详细食谱屏幕上的文本都将不同。例如，每个食谱标题的长度都不同，那么我们如何确保所有这些标题都能适合可用空间？
- en: The answer is to look at the full range of titles that are ultimately going
    to have to fit into the heading box, and then work out the average length. You
    should also go out of your way to find awkward content, as this'll help you plan
    how your UI will support these edge cases. In this instance, this means finding
    the longest and shortest recipe titles, and then working out how to display them
    effectively.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 解决办法是查看最终需要放入标题框中的所有标题的完整范围，然后计算出平均长度。你还应该尽力寻找尴尬的内容，因为这有助于你规划你的UI如何支持这些边缘情况。在这种情况下，这意味着找到最长和最短的食谱标题，然后想出如何有效地展示它们。
- en: When the detailed recipe screen has to display a short title, will the size
    of the heading box remain fixed or will it shrink? And if it does shrink, how
    can we prevent lots of empty whitespace appearing around the newly shrunken box?
    Will the box expand to accommodate recipes with unusually long-winded titles?
    Will the text wrap onto multiple lines?
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 当详细的食谱屏幕需要显示简短标题时，标题框的大小会保持固定还是缩小？如果它缩小了，我们如何防止大量空白出现在新缩小的框周围？框会扩展以容纳具有异常冗长标题的食谱吗？文本会换行到多行吗？
- en: You don't have to wireframe *every* possibility, but you should try to identify
    all the major problems varying copy and content could cause your layout. Only
    then will you be able to create a wireframe that's flexible enough to take unusual
    copy and content in its stride.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要为每一种可能性都绘制线框，但你应该尝试识别所有可能由复制和内容引起的重大问题。只有在这种情况下，你才能创建一个足够灵活的线框，以便轻松处理不寻常的复制和内容。
- en: What is paper prototyping?
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 纸质原型是什么？
- en: Once you've created a digital wireframe that you're relatively happy with, it's
    a good idea to put this design to the test via paper prototyping.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你创建了一个相对满意的数字线框，通过纸质原型来测试这个设计是个好主意。
- en: Paper prototyping is where you create rough drawings of the different screens
    that make up your app, representing each screen as a separate sheet of paper.
    You then test this paper prototype on a user (or ideally, *users*) and incorporate
    the user's feedback into your digital wireframes. This method of usability testing
    may seem simple, but it's actually a valuable way of reviewing and refining your
    design so it's the best it can possibly be.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 纸质原型是在你创建组成你应用的各个屏幕的草图时，将每个屏幕表示为单独的一张纸。然后你在一个用户（或者理想情况下，*多个用户*）身上测试这个纸质原型，并将用户的反馈纳入你的数字线框中。这种可用性测试方法可能看起来很简单，但实际上它是一种非常有价值的方法，可以审查和改进你的设计，使其尽可能完美。
- en: 'Creating a paper prototype is an important step in the design process for two
    main reasons:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 创建纸质原型是设计过程中的一个重要步骤，主要有两个原因：
- en: '**They''re great for identifying any usability problems that you might have
    overlooked**: Spotting the faults in your own design isn''t always easy. Paper
    prototyping gives you a way of testing your app on your target audience without
    you having to write any code. And as we''ve already discussed, the earlier you
    can identify flaws in your design, the easier it is to fix those flaws.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**它们非常适合识别你可能忽视的任何可用性问题**：发现你自己的设计中的错误并不总是容易的。纸质原型为你提供了一个在不需要编写任何代码的情况下对你的目标受众进行应用测试的方法。而且正如我们之前讨论的，你越早发现设计中的缺陷，就越容易修复这些缺陷。'
- en: '**They help you test your app''s navigation up-front**: Designing easy and
    frictionless navigation is an essential part of creating a successful app, but
    it''s difficult to properly evaluate navigation until you have actually experienced
    that navigation. Prototypes are a way of taking your planned navigation for a
    test drive and seeing first-hand how easy or difficult it is for users to navigate
    your app. If you skip the paper prototyping stage, the danger is that you won''t
    realize there''s a problem with your navigation until you''ve actually started
    to build your app. And since navigation should be consistent across your app,
    if you realize that you need to tweak the navigation on one screen, you may find
    that you need to change the navigation across *all* your screens; and this is
    not something you want to discover at the last minute! Paper prototyping increases
    your chances of getting navigation right the first time around.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**它们帮助你提前测试你的应用导航**：设计简单且无摩擦的导航是创建成功应用的关键部分，但在实际体验导航之前，很难正确评估导航。原型提供了一种测试你计划中的导航的方法，并亲眼看到用户导航你的应用是容易还是困难。如果你跳过纸质原型阶段，风险是直到你真正开始构建应用时，你才意识到你的导航有问题。而且由于导航应该在应用中保持一致，如果你发现你需要调整一个屏幕的导航，你可能会发现你需要改变所有屏幕的导航；而这不是你希望在最后一刻才发现的事情！纸质原型增加了你第一次就做对导航的机会。'
- en: Usability testing
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可用性测试
- en: Paper prototypes are perfect for usability testing. Ideally, you'll want to
    test your prototypes on a member of your target audience, but colleagues, friends,
    and family members make good stand-ins as long as they haven't been involved in
    the design process.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 纸质原型非常适合可用性测试。理想情况下，你希望对你的目标受众成员进行原型测试，但只要他们没有参与设计过程，同事、朋友和家人也可以作为很好的替代者。
- en: For the most effective usability testing, you'll want someone's genuine reaction
    to approaching your app *blind*, just as a regular user would after downloading
    your app from the Google Play store. If you enlist the help of someone who has
    insider knowledge of your project, then this isn't really replicating the typical
    user experience.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进行最有效的可用性测试，你希望有人像普通用户一样，在下载了你的应用后，以**盲测**的方式对你的应用进行真实反应。如果你请了一位对你项目有内部知识的人帮忙，那么这并不能真正复制典型的用户体验。
- en: In usability testing, your test subject interacts with the paper prototype while
    you manipulate the prototype to reflect the user's actions. For example, if they
    tap a **Go to home screen** button, you should switch pages and present them with
    your home screen prototype. Okay, so this may sound a bit silly, but it's also
    one of the most effective ways of discovering potential usability issues before
    you invest any more time in designing and developing your app, so it's well worth
    feeling a bit silly for.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在可用性测试中，测试对象与纸质原型互动，而你则操纵原型以反映用户的行为。例如，如果他们点击了“**转到主页**”按钮，你应该切换页面并向他们展示你的主页原型。好吧，这听起来可能有点愚蠢，但它也是在你投入更多时间进行设计和开发应用之前发现潜在可用性问题的最有效方法之一，所以为了这个目的，感觉有点愚蠢也是值得的。
- en: Ask the user for feedback as they're interacting with your paper prototype,
    and be sure to prompt them to explain why they're performing each action and what
    they expect to happen next. You should also encourage them to speak up about anything
    that confuses them, or if there's anything about your UI that they don't like.
    Do they understand how to navigate to the next screen? Do they immediately understand
    what task they need to perform on each new screen, or do they need to stop and
    think about it?
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户在使用你的纸质原型时，请他们提供反馈，并确保提示他们解释他们为何执行每个动作以及他们期望接下来会发生什么。你也应该鼓励他们说出任何让他们感到困惑的地方，或者如果他们对你的用户界面有任何不喜欢的地方。他们是否理解如何导航到下一个屏幕？他们是否立即理解在每个新屏幕上需要执行的任务，或者他们需要停下来思考？
- en: Ideally, you'll get enough information to warrant making some revisions to your
    digital wireframes. If you do make any significant changes to your wireframes,
    then consider creating a new set of paper prototypes and testing them on the same
    user. Repeat this process until your test subjects are navigating your paper prototypes
    with ease and have no further feedback or suggestions.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，您将获得足够的信息来对您的数字线框进行一些修订。如果您对线框进行了任何重大更改，那么请考虑创建一套新的纸质原型并在同一用户上进行测试。重复此过程，直到您的测试对象能够轻松地导航您的纸质原型，并且没有进一步的反馈或建议。
- en: At this stage, you should have a set of digital wireframes that you feel confident
    about. We'll be using these wireframes to create more detailed, digital prototypes
    in the next chapter.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，您应该有一套您感到自信的数字线框。我们将在下一章中使用这些线框来创建更详细、更精细的数字原型。
- en: Rapid prototyping
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 快速原型设计
- en: If your app is a team effort, you may want to consider using paper prototyping
    as part of a rapid prototyping approach.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的应用程序是团队合作的结果，您可能希望考虑将纸质原型设计作为快速原型设计方法的一部分。
- en: In rapid prototyping, each team member creates a paper prototype and tests it
    on a single user. The team then comes together to share their feedback and ideas,
    at which point each person creates a second prototype. Again, each prototype is
    tested on a single user before the team meets again to share their feedback. You
    can then update your digital wireframes based on the collective feedback. This
    is one of the quickest and easiest ways of collecting feedback from multiple users
    and incorporating all this valuable information into your design.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在快速原型设计中，每个团队成员都会创建一个纸质原型并在单个用户上进行测试。然后团队聚集在一起分享他们的反馈和想法，此时每个人会创建第二个原型。同样，在团队再次聚集分享反馈之前，每个原型都会在单个用户上进行测试。您可以根据集体反馈更新您的数字线框。这是从多个用户那里收集反馈并整合所有这些宝贵信息到您的设计中的一种最快、最简单的方法。
- en: Summary
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: When it comes to developing Android apps, it's impossible to overestimate the
    value of planning.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到开发Android应用程序时，规划的价值是无法高估的。
- en: In this chapter, we looked at how to translate the high-level plans that we
    made in the previous chapter into actual screen designs. We created quick paper
    wireframes, and then used them as the basis for detailed digital wireframes complete
    with content and copy. Finally, we created paper prototypes and looked at how
    usability testing can help you refine your screen designs, making them the best
    they can possibly be. In the next chapter, we'll look at how to create more complex
    and polished digital prototypes using Android Studio and the Android SDK.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了如何将上一章中制定的高级计划转化为实际的屏幕设计。我们创建了快速纸质线框，然后以此为基础创建包含内容和副本的详细数字线框。最后，我们创建了纸质原型，并探讨了可用性测试如何帮助您完善屏幕设计，使它们尽可能完美。在下一章中，我们将探讨如何使用Android
    Studio和Android SDK创建更复杂和精细的数字原型。
- en: If this chapter was your first taste of wireframing and prototyping, then you
    may still be feeling overwhelmed, but the important thing to remember is that
    as long as you're doing *some *form of wireframing and prototyping, then you're
    already doing much more planning than you were before.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这一章是您对线框和原型设计的第一次尝试，那么您可能仍然感到不知所措，但重要的是要记住，只要您在进行某种形式的线框和原型设计，那么您就已经比之前做了更多的规划。
- en: The only word of warning is don't invest too much time and effort perfecting
    your screen designs early on in the design process. Your designs should start
    off very rough around the edges and gradually become more refined and detailed
    as you move through the different planning stages.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的警告是，在设计过程的早期阶段不要投入太多时间和精力去完美化您的屏幕设计。您的设计应该一开始就非常粗糙，随着您通过不同的规划阶段，逐渐变得更加精细和详细。
- en: If you're still unsure, then take another look at the recipe wireframes included
    in this chapter and ask yourself "how could I improve these designs?" Then, wireframe
    the results! You may even want to create prototypes based on these wireframes.
    Alternatively, boot up one of your favourite Android apps and create wireframe
    and prototype versions of all the main screens. These are both valuable ways of
    refining your skills so that by the time you come to plan your own real-life Android
    projects, you'll be a wireframing and prototyping pro.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你仍然不确定，那么请再次查看本章中包含的食谱线框图，并问自己“我如何可以改进这些设计？”然后，绘制线框图！你甚至可能想要根据这些线框图创建原型。或者，启动你最喜欢的Android应用，创建所有主要屏幕的线框图和原型版本。这些都是提高你技能的有价值的方法，这样当你开始规划自己的真实Android项目时，你将是一名线框图和原型制作的专家。
- en: Now that we've got a rough design for our application, it's time to dive into
    some development work. In the next chapter, you'll use Android Studio to create
    a working digital prototype based on your wireframes and paper prototypes.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经为我们的应用程序得到了一个粗略的设计，是时候深入开发工作了。在下一章中，你将使用Android Studio根据你的线框图和纸版原型创建一个可工作的数字原型。
