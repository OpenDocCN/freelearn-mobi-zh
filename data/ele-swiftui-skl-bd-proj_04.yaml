- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: iPad Project – Photo Gallery Overview
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iPad 项目 – 照片库概述
- en: In the previous two chapters, we created a Tax Calculator app for the iPhone.
    We implemented it from scratch, and we looked at the technical requirements, design
    specifications, wireframes, and code implementation. We will use these newly acquired
    skills in this and the next chapter, but worry not, we will go over all necessary
    aspects in case you have jumped straight to this chapter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在前两章中，我们为 iPhone 创建了一个税务计算器应用程序。我们从零开始实现它，并查看技术要求、设计规范、线框和代码实现。我们将在本章和下一章中使用这些新获得的知识，但请放心，我们将回顾所有必要的方面，以防你直接跳到本章。
- en: 'In this chapter, we will work on the design of our second project, a photo
    gallery application for the iPad that will showcase its big screen. We will assess
    the requirements for designing such an application and discuss the design specifications,
    allowing us to get a better understanding of what is required and how it will
    all fit together. Then we will start coding our application to build out the UI,
    which will be connected to the gallery’s enhanced view in the next chapter. This
    project will cover the foundations of SwiftUI components. We will discuss all
    this in the following sections:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将着手设计我们的第二个项目，一个用于展示大屏幕的 iPad 照片库应用程序。我们将评估设计此类应用程序的要求，并讨论设计规范，以便我们更好地了解所需内容以及它们如何组合在一起。然后我们将开始编码我们的应用程序，构建
    UI，这将在下一章中与画廊的增强视图连接。本项目将涵盖 SwiftUI 组件的基础。我们将在以下章节中讨论所有这些内容：
- en: Requirements
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求
- en: Design Specifications
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计规范
- en: Building the Gallery UI
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建画廊 UI
- en: By the end of this chapter, you will have a better understanding of what features/components
    are required in our photo gallery application, how we will utilize the larger
    screen of the iPad (compared to the iPhone), and the design of our application.
    By the end of this chapter, we will have implemented the wireframe for the first
    page, which will serve as the foundation for the next chapter.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将更好地了解我们照片库应用程序中所需的功能/组件，我们将如何利用 iPad 的更大屏幕（与 iPhone 相比），以及我们应用程序的设计。到本章结束时，我们将实现第一页的线框，这将为下一章奠定基础。
- en: Technical Requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter requires you to download Xcode version 14 or above from Apple’s
    App Store.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章要求您从 Apple 的 App Store 下载 Xcode 14 或更高版本。
- en: To install Xcode, just search for Xcode in the App Store and download the latest
    version. Open Xcode and follow the installation instructions. Once Xcode has opened
    and launched, you’re ready to go.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Xcode，只需在 App Store 中搜索 Xcode 并下载最新版本。打开 Xcode 并按照安装说明进行操作。一旦 Xcode 打开并启动，你就可以开始了。
- en: 'Version 14 of Xcode has the following features/requirements:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode 14 版本具有以下功能/要求：
- en: Includes SDKs for iOS 16, iPadOS 16, macOS 12.3, tvOS 16, and watchOS 9.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含 iOS 16、iPadOS 16、macOS 12.3、tvOS 16 和 watchOS 9 的 SDK。
- en: Supports on-device debugging in iOS 11 or later, tvOS 11 or later, and watchOS
    4 or later.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持在 iOS 11 或更高版本、tvOS 11 或更高版本和 watchOS 4 或更高版本中进行设备调试。
- en: Requires a Mac running macOS Monterey 12.5 or later.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要 macOS Monterey 12.5 或更高版本的 Mac。
- en: For further information regarding technical details, please refer to [*Chapter
    1*](B18783_01.xhtml#_idTextAnchor014).
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如需有关技术细节的更多信息，请参阅[*第 1 章*](B18783_01.xhtml#_idTextAnchor014)。
- en: 'The code files for this chapter can be found here: [https://github.com/PacktPublishing/Elevate-SwiftUI-Skills-by-Building-Projects](https://github.com/PacktPublishing/Elevate-SwiftUI-Skills-by-Building-Projects).'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码文件可以在以下位置找到：[https://github.com/PacktPublishing/Elevate-SwiftUI-Skills-by-Building-Projects](https://github.com/PacktPublishing/Elevate-SwiftUI-Skills-by-Building-Projects)。
- en: In the next section, we will provide clarity on the specifications of our application’s
    design and look at mockups of what the app will look like.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将阐明我们应用程序设计规范的具体内容，并查看应用程序外观的草图。
- en: Understanding the Design Specifications
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解设计规范
- en: In this section, we will look at the design specifications of our gallery application.
    This section describes the features we are going to implement in our gallery app.
    The best method for figuring out the features required is to put yourself in the
    user’s shoes to determine how they will use the app and break it into individual
    steps.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将查看我们画廊应用程序的设计规范。本节描述了我们将要在我们的画廊应用程序中实现的功能。确定所需功能的最有效方法是站在用户的角度，确定他们将如何使用该应用程序，并将其分解为单独的步骤。
- en: 'The features of our app we would like to present are as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望展示的应用程序功能如下：
- en: '**Highlight view**: This is the main view that the user will see, which showcases
    all the images.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高亮视图**：这是用户将看到的主要视图，展示了所有图像。'
- en: '**Enhanced view**: This shows a larger version of the image along with information
    such as a description and a date.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增强视图**：这显示了图像的较大版本，以及如描述和日期等信息。'
- en: '**Fullscreen mode**: View the image in fullscreen mode without any extra information.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全屏模式**：在全屏模式下查看图像，没有任何额外信息。'
- en: '**Fullscreen tap for more info**: A single tap while in fullscreen mode will
    show the photo’s title.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全屏点击查看更多信息**：在全屏模式下单次点击将显示照片的标题。'
- en: '**Collections**: Different image collections, or albums:'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集合**：不同的图像集合或相册：'
- en: '**Side panel**: This shows all the collection names in horizontal mode.'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**侧面板**：以水平模式显示所有集合名称。'
- en: '**Delete and rename**: This allows the user to delete an image and rename it.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**删除和重命名**：这允许用户删除图像并重命名它。'
- en: '**Editing**: Image editing functionality:'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编辑**：图像编辑功能：'
- en: Drawing using the Apple Pencil.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Apple Pencil进行绘图。
- en: '**Sharing**: The ability to share an image.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分享**：分享图像的能力。'
- en: '**Display mode switching**: Change how the images are displayed on the Highlight
    page, as a list or using tiles.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示模式切换**：更改在突出显示页面上的图像显示方式，作为列表或使用瓷砖。'
- en: '**Annotations and highlighting**: Allow the user to annotate and highlight
    parts of the image.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注释和高亮**：允许用户注释和高亮图像的部分。'
- en: Images and information come from an external source such as a local database
    or online.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像和信息来自外部源，如本地数据库或在线。
- en: 'Now that we have listed the ideal features we would like, it is important for
    us to determine which features are crucial. To do this, we must understand the
    purpose of our product. For me, the purpose of creating this photo gallery app
    is to showcase some images and provide an enhanced mode that gives more information.
    I know that not all the features are required, and it could be useful if some
    were omitted and assigned as extra tasks for you as the developer to undertake.
    The extra tasks are optional and should only be performed when you’ve finished
    this project. With this in mind, the following are the core features we will be
    implementing:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经列出了我们希望拥有的理想功能，对我们来说，确定哪些功能是至关重要的非常重要。为此，我们必须了解我们产品的目的。对我来说，创建这个照片画廊应用的目的是为了展示一些图像并提供一个增强模式，以提供更多信息。我知道并非所有功能都是必需的，如果某些功能被省略，并作为额外的任务分配给你作为开发者去完成，这可能是有用的。这些额外任务是可选的，并且只有在完成此项目后才能执行。考虑到这一点，以下是我们将实现的核心功能：
- en: Highlight view
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高亮视图
- en: Enhanced view
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强视图
- en: Sharing
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分享
- en: The rest of the features will be an exercise for you once you have completed
    this and the next chapter. The next section will cover the acceptance criteria
    for our application.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成本章和下一章之后，其余的功能将留给你作为练习。下一节将涵盖我们应用的接受标准。
- en: Acceptance criteria
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 接受标准
- en: 'We will discuss the acceptance criteria for our application that we want to
    see in the end product, which will be completed at the end of the next chapter.
    If possible, we should try to make them measurable. Let’s do this right now:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论我们希望在最终产品中看到的接受标准，这些标准将在下一章的结尾完成。如果可能的话，我们应该尝试使它们可衡量。让我们现在就做这件事：
- en: Utilize small images for the gallery view, providing an overview of the whole
    gallery.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在画廊视图中使用小图像，提供整个画廊的概览。
- en: A scrollable view to navigate through all our images.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个可滚动的视图，用于浏览所有我们的图像。
- en: An enhanced view to display extra information, thus allowing optional parameters.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种增强视图，用于显示额外信息，从而允许可选参数。
- en: A native sharing menu should appear when sharing an image.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在分享图像时应该出现一个本机共享菜单。
- en: Navigation from the highlight view to the enhanced view.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从高亮视图导航到增强视图。
- en: Navigation from the enhanced view to the fullscreen view.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从增强视图导航到全屏视图。
- en: Develop test cases in which the application’s acceptance criteria will be tested.
    Using this method allows us to see the conditions under which the application
    will be used by the end user and the level that needs to be attained for it to
    be considered successful.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 开发测试用例，以测试应用的接受标准。使用这种方法，我们可以看到最终用户将使用应用的条件以及需要达到的成功水平。
- en: Wireframe
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 线框图
- en: 'One of the most useful tools for designing layouts is wireframing. A wireframe
    is an overview of the layout. The following image shows what the highlight page
    of our app will look like using a wireframe:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 设计布局最有用的工具之一是线框设计。线框是布局的概述。以下图像显示了我们的应用突出显示页面将如何使用线框来呈现：
- en: '![Figure 4.1 – Wireframe of the Highlight view in portrait mode](img/Figure_4.01_B18783.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图4.1 – 竖屏模式的突出显示视图线框](img/Figure_4.01_B18783.jpg)'
- en: Figure 4.1 – Wireframe of the Highlight view in portrait mode
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1 – 竖屏模式的突出显示视图线框
- en: 'With iPad applications, it is very important to have a landscape mode. The
    following image shows the wireframe of our highlight view in landscape mode:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在iPad应用程序中，拥有横屏模式非常重要。以下图像显示了我们的突出显示视图在横屏模式下的线框：
- en: '![Figure 4.2 – Wireframe of the Highlight view in landscape mode](img/Figure_4.02_B18783.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图4.2 – 横屏模式的突出显示视图线框](img/Figure_4.02_B18783.jpg)'
- en: Figure 4.2 – Wireframe of the Highlight view in landscape mode
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2 – 横屏模式的突出显示视图线框
- en: 'The following two images show the portrait and landscape wireframes for the
    enhanced view:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下两幅图像显示了增强视图的横屏和竖屏线框：
- en: '![Figure 4.3 – Wireframe of the Enhanced view in portrait mode](img/Figure_4.03_B18783.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图4.3 – 竖屏模式的增强视图线框](img/Figure_4.03_B18783.jpg)'
- en: Figure 4.3 – Wireframe of the Enhanced view in portrait mode
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.3 – 竖屏模式的增强视图线框
- en: "![Figure 4.4 – Wireframe of the Enhanced view in landscap\uFEFFe mode](img/Figure_4.04_B18783.jpg)"
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图4.4 – 横屏模式的增强视图线框](img/Figure_4.04_B18783.jpg)'
- en: Figure 4.4 – Wireframe of the Enhanced view in landscape mode
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.4 – 横屏模式的增强视图线框
- en: In the next section, we will build the interface for our application and make
    sure it looks the way we designed it in the wireframes. Though we will build it
    the same way, there may be small differences. This will serve as the foundation
    for connecting it all together in the next chapter.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将构建我们应用程序的界面，并确保它看起来与我们设计在线框图中的样子一致。虽然我们将以相同的方式构建它，但可能会有一些小的差异。这将为下一章中将其全部连接起来奠定基础。
- en: Building the Gallery UI
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建画廊UI
- en: 'We will now build the UI for the gallery app. There are three main parts of
    the gallery, the first being the highlight page, which is loaded on launch and
    shows all the images. Once the user clicks on an image, the user is taken to the
    enhanced page, which is the second part. On this page, a bigger version of the
    image is shown along with more information. Finally, the last part is fullscreen
    mode, which simply shows a selected image in fullscreen. Naturally, we will start
    with the first part, the highlight page, but before that, we will create our project.
    Follow these steps:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将构建画廊应用程序的UI。画廊有三个主要部分，首先是突出显示页面，它在启动时加载并显示所有图片。一旦用户点击图片，用户将被带到增强页面，这是第二部分。在这个页面上，显示图片的大版本以及更多信息。最后，最后一部分是全屏模式，它简单地以全屏显示所选图片。自然地，我们将从第一部分，突出显示页面开始，但在那之前，我们将创建我们的项目。按照以下步骤操作：
- en: 'Open Xcode and select **Create a new** **Xcode project**:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Xcode并选择**创建一个新的** **Xcode项目**：
- en: '![Figure 4.5 – Create a new Xcode project](img/Figure_4.05_B18783.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图4.5 – 创建新的Xcode项目](img/Figure_4.05_B18783.jpg)'
- en: Figure 4.5 – Create a new Xcode project
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.5 – 创建新的Xcode项目
- en: 'Now, we will choose the template for our application. As we are creating an
    iPad application, we will select **iOS** from the top, then select **App**, and
    click **Next**:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将选择我们应用程序的模板。由于我们正在创建iPad应用程序，我们将从顶部选择**iOS**，然后选择**App**，点击**下一步**：
- en: '![Figure 4.6 – Xcode project template selection](img/Figure_4.06_B18783.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图4.6 – Xcode项目模板选择](img/Figure_4.06_B18783.jpg)'
- en: Figure 4.6 – Xcode project template selection
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.6 – Xcode项目模板选择
- en: 'We will now choose the options for our project. There are only two crucial
    things to set. Make sure **Interface** is set to **SwiftUI**. This will be the
    UI our system will use. Set **Language** to **Swift**; this is the programming
    language used for our application:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将选择我们项目的选项。只有两个关键的事情需要设置。确保**界面**设置为**SwiftUI**。这将是我们系统将使用的UI。将**语言**设置为**Swift**；这是我们应用程序使用的编程语言：
- en: '![Figure 4.7 – Xcode project options](img/Figure_4.07_B18783.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图4.7 – Xcode项目选项](img/Figure_4.07_B18783.jpg)'
- en: Figure 4.7 – Xcode project options
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.7 – Xcode项目选项
- en: 'Once you click on **Next**, you can choose where to create your project:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦点击**下一步**，您可以选择在哪里创建您的项目：
- en: '![Figure 4.8 – Xcode project save directory](img/Figure_4.08_B18783.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图4.8 – Xcode项目保存目录](img/Figure_4.08_B18783.jpg)'
- en: Figure 4.8 – Xcode project save directory
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.8 – Xcode项目保存目录
- en: 'Once you have chosen a location, click **Create** in the bottom right. Xcode
    shows your project in all its glory:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你选择了位置，点击右下角的 **创建**。Xcode 以其全部荣耀显示你的项目：
- en: '![Figure 4.9 – New Xcode project overview](img/Figure_4.09_B18783.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.9 – 新 Xcode 项目的概述](img/Figure_4.09_B18783.jpg)'
- en: Figure 4.9 – New Xcode project overview
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9 – 新 Xcode 项目的概述
- en: In the next section, we will set our project to iPad only.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将设置我们的项目为仅限 iPad。
- en: Set Project to iPad
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置项目为 iPad
- en: 'You have probably noticed in the preview that it’s currently set to an iPhone
    project or, more accurately, an iOS project. This means it runs on iPhones and
    iPads, and the preview by default shows the iPhone view. We want our project to
    be iPad only, so follow these steps to set our project to iPad only:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到在预览中，它目前设置为 iPhone 项目，或者更准确地说，是 iOS 项目。这意味着它在 iPhone 和 iPad 上运行，并且默认预览显示
    iPhone 视图。我们希望我们的项目仅限 iPad，因此按照以下步骤将我们的项目设置为仅限 iPad：
- en: 'Let’s change it now. Select the project in the **Project Navigator**:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们立即更改它。在 **项目导航器** 中选择项目：
- en: '![Figure 4.10 – Project in Project Navigator](img/Figure_4.10_B18783.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.10 – 项目在项目导航器中](img/Figure_4.10_B18783.jpg)'
- en: Figure 4.10 – Project in Project Navigator
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10 – 项目在项目导航器中
- en: 'Now select **Photo Gallery** from the **TARGETS** section:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在从 **TARGETS** 部分选择 **Photo Gallery**：
- en: '![Figure 4.11 – Target selection](img/Figure_4.11_B18783.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.11 – 目标选择](img/Figure_4.11_B18783.jpg)'
- en: Figure 4.11 – Target selection
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.11 – 目标选择
- en: 'The next step is to remove the iPhone and Mac destinations. Doing this is simple;
    select each destination and press the minus button:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是移除 iPhone 和 Mac 目的地。这样做很简单；选择每个目的地并按减号按钮：
- en: '![Figure 4.12 – Remove destinations](img/Figure_4.12_B18783.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.12 – 移除目的地](img/Figure_4.12_B18783.jpg)'
- en: Figure 4.12 – Remove destinations
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12 – 移除目的地
- en: 'After removing iPhone and Mac from the destinations, it should look as follows:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在从目的地中移除 iPhone 和 Mac 之后，它应该看起来如下：
- en: '![Figure 4.13 – Supported destinations](img/Figure_4.13_B18783.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.13 – 支持的目的地](img/Figure_4.13_B18783.jpg)'
- en: Figure 4.13 – Supported destinations
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.13 – 支持的目的地
- en: In the next section, we will implement the highlight page of our application
    using SwiftUI.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将使用 SwiftUI 实现我们应用程序的高亮页面。
- en: Highlight Page
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高亮页面
- en: 'In this section, we will implement the highlight page’s UI. As a reminder,
    this is what it will look like:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将实现高亮页面的 UI。作为一个提醒，它将看起来像这样：
- en: '![Figure 4.14 – Wireframe of the Highlight view in portrait mode](img/Figure_4.14_B18783.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.14 – 竖屏模式下高亮视图的线框](img/Figure_4.14_B18783.jpg)'
- en: Figure 4.14 – Wireframe of the Highlight view in portrait mode
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.14 – 竖屏模式下高亮视图的线框
- en: There is one main element on the highlight page. As a little task, see if you
    can figure out what it is. Don’t worry if you don’t know the exact UI component
    name; we will look at it in the following section.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 高亮页面上有一个主要元素。作为一个小任务，看看你是否能找出它是什么。如果你不知道确切的 UI 组件名称，不用担心；我们将在下一节中查看它。
- en: Image Component
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图像组件
- en: The image component is one of the core components provided by SwiftUI. It allows
    you to display an image, which can be used to provide a visual representation
    of something or to embellish a body of text. We will use it to show all the images
    in our gallery as highlights on our Highlight page. The following image shows
    the image on the Highlight page. As you will remember from *Figure 4**.14*, The
    Highlight page is full of small images. These images will be clickable, which
    will take the user to the Enhanced view.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图像组件是 SwiftUI 提供的核心组件之一。它允许你显示图像，可以用来提供某物的视觉表示或装饰一段文本。我们将使用它来显示我们画廊中的所有图像作为高亮页面上的高亮。以下图像显示了高亮页面上的图像。正如你从
    *图 4**.14* 记忆的那样，高亮页面充满了小图像。这些图像将是可点击的，将用户带到增强视图。
- en: '![Figure 4.15 – Image component on the Highlight view](img/Figure_4.15_B18783.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.15 – 高亮视图中的图像组件](img/Figure_4.15_B18783.jpg)'
- en: Figure 4.15 – Image component on the Highlight view
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.15 – 高亮视图中的图像组件
- en: In the next section, we will add the image components we discussed earlier into
    our application using SwiftUI.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将使用 SwiftUI 将我们之前讨论过的图像组件添加到我们的应用程序中。
- en: Adding Highlight Page Components
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加高亮页面组件
- en: 'In this section, we will add the image components to our highlight page, which
    currently is named **ContentView**:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将向我们的高亮页面添加图像组件，该页面目前命名为 **ContentView**：
- en: 'First, let’s rename `HighlightView`. Doing this is simple: open **ContentView**,
    right-click any reference **ContentView** in the code, then go to **Refactor |
    Rename**. I will use the first reference, as shown in the following screenshot:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，让我们重命名 `HighlightView`。这样做很简单：打开 **ContentView**，在代码中右键单击任何对 **ContentView**
    的引用，然后转到 **重构 | 重命名**。我将使用第一个引用，如下面的截图所示：
- en: '![Figure 4.16 – Rename button](img/Figure_4.16_B18783.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.16 – 重命名按钮](img/Figure_4.16_B18783.jpg)'
- en: Figure 4.16 – Rename button
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.16 – 重命名按钮
- en: 'Next, the following screen will be shown:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将显示以下屏幕：
- en: '![Figure 4.17 – Rename screen](img/Figure_4.17_B18783.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.17 – 重命名屏幕](img/Figure_4.17_B18783.jpg)'
- en: Figure 4.17 – Rename screen
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.17 – 重命名屏幕
- en: 'Change the name from `HighlightView`, and as you can see, all other references
    to **ContentView** are automatically updated. Finally, click the **Rename** button
    in the top right:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将名称从 `HighlightView` 改变，如您所见，所有对 **ContentView** 的其他引用都会自动更新。最后，点击右上角的 **重命名**
    按钮：
- en: '![Figure 4.18 – Changing the view’s name](img/Figure_4.18_B18783.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.18 – 更改视图名称](img/Figure_4.18_B18783.jpg)'
- en: Figure 4.18 – Changing the view’s name
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.18 – 更改视图名称
- en: 'We have now renamed our view, including the file, as can be seen in the **Project
    Navigator**:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已经将视图重命名，包括文件名，如下所示，在**项目导航器**中：
- en: '![Figure 4.19 – Updated filename in the Project Navigator](img/Figure_4.19_B18783.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.19 – 项目导航器中更新的文件名](img/Figure_4.19_B18783.jpg)'
- en: Figure 4.19 – Updated filename in the Project Navigator
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.19 – 项目导航器中更新的文件名
- en: 'There is one extra step, which is optional. That is to rename the `ContentView_Previews`
    struct. Though this is not crucial, I highly recommend renaming it to keep all
    the name references in sync. Using the same process as before, rename the `ContentView_Previews``HighlightView_Previews`.
    The location of the struct is at the bottom of the `HighlightView` file (previously
    named `ContentView`):'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有一个额外的步骤，这是可选的。那就是重命名 `ContentView_Previews` 结构。虽然这不是关键，但我强烈建议重命名它，以保持所有名称引用的一致性。使用之前的过程，重命名
    `ContentView_Previews` 为 `HighlightView_Previews`。该结构的位置在 `HighlightView` 文件的底部（之前命名为
    `ContentView`）：
- en: "![Figure 4.20 – Renaming the previews str\uFEFFuct](img/Figure_4.20_B18783.jpg)"
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.20 – 重命名预览结构](img/Figure_4.20_B18783.jpg)'
- en: Figure 4.20 – Renaming the previews struct
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.20 – 重命名预览结构
- en: In the next section, we will take a look at column layouts and determine which
    one will be best for our application.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将查看列布局并确定哪一种最适合我们的应用程序。
- en: Column layouts
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 列布局
- en: 'Before we start coding our highlight page, let’s discuss the three main types
    of column layouts:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编写高亮页面代码之前，让我们讨论三种主要的列布局类型：
- en: '**Flexible layout**: Allows you to specify the number of columns and spaces
    them according to the screen size dynamically.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活布局**：允许你指定列数，并根据屏幕大小动态地分配空间。'
- en: '**Fixed layout**: Creates columns with fixed dimensions, which is restrictive.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**固定布局**：创建具有固定尺寸的列，这比较受限。'
- en: '**Adaptive columns**: As the name suggests, they adapt to the size of the contents.
    You set the minimum size, which is used by the adaptive system to calculate how
    many items can be placed on a single row, depending on the screen size. Naturally,
    more items will be displayed when the iPad is in horizontal mode than in portrait
    mode.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自适应列**：正如其名所示，它们会根据内容的大小进行调整。你设置最小尺寸，自适应系统会根据屏幕大小计算单行可以放置多少项。自然地，当iPad处于横屏模式时，显示的项数会比竖屏模式多。'
- en: Each has its use cases, but to truly show off our photo gallery, we will use
    the adaptive column system. In the next section, we will implement the highlight
    view programmatically.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 每种布局都有其用例，但为了真正展示我们的照片库，我们将使用自适应列系统。在下一节中，我们将以编程方式实现高亮视图。
- en: Implementing the Highlight View
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现高亮视图
- en: 'As we have created a fresh project, the coding standards aren’t in line with
    my personal preferences. So, firstly, I will change the standards. Feel free to
    take a few moments to do the same:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们创建了一个新的项目，编码标准并不符合我的个人偏好。因此，首先，我将更改标准。请随意花几分钟时间做同样的事情：
- en: 'First, we need to add the images to our project. Doing this is simple. Select
    **Assets** from the **Project Navigator**:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要将图片添加到我们的项目中。这样做很简单。从 **项目导航器** 中选择 **Assets**：
- en: '![Figure 4.21 – Assets location in Project Navigator](img/Figure_4.21_B18783.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.21 – 项目导航器中的资源位置](img/Figure_4.21_B18783.jpg)'
- en: Figure 4.21 – Assets location in Project Navigator
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.21 – 项目导航器中的资源位置
- en: 'Now the **Assets** view will appear. Importing an image/asset can be done in
    one of two ways:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在**Assets**视图将出现。导入图像/资产可以通过以下两种方式之一完成：
- en: 'Dragging and dropping the files into the **Assets** section:'
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件拖放到**Assets**部分：
- en: '![Figure 4.22 – Dragging and dropping Assets](img/Figure_4.22_B18783.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图4.22 – 拖放Assets](img/Figure_4.22_B18783.jpg)'
- en: Figure 4.22 – Dragging and dropping Assets
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.22 – 拖放Assets
- en: 'Right-clicking the **Assets** section and selecting **Import**:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击**Assets**部分并选择**导入**：
- en: '![Figure 4.23 – Import button](img/Figure_4.23_B18783.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![图4.23 – 导入按钮](img/Figure_4.23_B18783.jpg)'
- en: Figure 4.23 – Import button
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.23 – 导入按钮
- en: 'Once the asset(s) have been imported, the **Assets** view will look as follows:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦导入资产，**Assets**视图将如下所示：
- en: '![Figure 4.24 – Asset(s) imported](img/Figure_4.24_B18783.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![图4.24 – 导入的Asset(s)](img/Figure_4.24_B18783.jpg)'
- en: Figure 4.24 – Asset(s) imported
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.24 – 导入的Asset(s)
- en: Tip
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: I have only imported one image, and I will use it multiple times, but you can
    and should use different images.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我只导入了一张图像，并将多次使用它，但您可以使用不同的图像。
- en: Next, we will create an array of strings. Each string will be the name of an
    image in our gallery. As mentioned previously, I will be using the same image,
    hence why all the strings will be the same. Update it according to your requirements.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建一个字符串数组。每个字符串将是我们图库中图像的名称。如前所述，我将使用相同的图像，因此所有字符串都将相同。根据您的需求进行更新。
- en: Note
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'I am using the thumbnail for my developer-centric podcast FireDEV. Feel free
    to use it and tune in every Thursday to my podcast using the following links:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我正在使用缩略图作为我的以开发者为中心的播客FireDEV。请随意使用，并每周四通过以下链接收听我的播客：
- en: 'Spotify: [https://open.spotify.com/show/387RiHksQE33KYHTitFXhg](https://open.spotify.com/show/387RiHksQE33KYHTitFXhg)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 'Spotify: [https://open.spotify.com/show/387RiHksQE33KYHTitFXhg](https://open.spotify.com/show/387RiHksQE33KYHTitFXhg)'
- en: 'Apple Podcasts: [https://podcasts.apple.com/us/podcast/firedev-fireside-chat-with-industry-professionals/id1602599831](https://podcasts.apple.com/us/podcast/firedev-fireside-chat-with-industry-professionals/id1602599831)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 'Apple Podcasts: [https://podcasts.apple.com/us/podcast/firedev-fireside-chat-with-industry-professionals/id1602599831](https://podcasts.apple.com/us/podcast/firedev-fireside-chat-with-industry-professionals/id1602599831)'
- en: 'Google Podcasts: [https://podcasts.google.com/feed/aHR0cHM6Ly9hbm     Nob3IuZm0vcy83Yjg2YTNiNC9wb2RjYXN0L3Jzc](https://podcasts.google.com/feed/aHR0cHM6Ly9hbmNob3IuZm0vcy83Yjg2YTNiNC9wb2RjYXN0L3Jzcw).'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 'Google Podcasts: [https://podcasts.google.com/feed/aHR0cHM6Ly9hbmNob3IuZm0vcy83Yjg2YTNiNC9wb2RjYXN0L3Jzcw](https://podcasts.google.com/feed/aHR0cHM6Ly9hbmNob3IuZm0vcy83Yjg2YTNiNC9wb2RjYXN0L3Jzcw).'
- en: 'Add the following code to the start of the `HighlightView` struct, before the
    body:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`HighlightView`结构体的开头添加以下代码，在主体之前：
- en: '[PRE0]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The code we have added is just an array of strings that correspond to image
    files. The file type, for example, `.png`, doesn’t need to be included when specifying
    assets in Swift.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加的代码只是一个与图像文件对应的字符串数组。在Swift中指定资源时，不需要包含文件类型，例如，`.png`。
- en: 'Next, we will create a variable, which sets how the columns will be organized.
    Earlier, we discussed the different column layouts and chose adaptive columns.
    Add the following code underneath the previous code:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将创建一个变量，用于设置列的排列方式。之前，我们讨论了不同的列布局，并选择了自适应列。在之前的代码下方添加以下代码：
- en: '[PRE1]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This code sets the grid items to be adaptive, with a minimum size of 300 pixels,
    which means regardless of the iPad size, the images will be easy to view and not
    too small or large.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码将网格项设置为自适应，最小尺寸为300像素，这意味着无论iPad的大小如何，图像都易于查看，不会太小或太大。
- en: 'Now, we are going to display the images. Add the following code inside the
    body, and we will go over what each part does:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将显示图像。在主体内部添加以下代码，我们将介绍每一部分的作用：
- en: '[PRE2]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Before we run it, let’s see what each part of the code does:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们运行它之前，让我们看看代码的每一部分都做了什么：
- en: '`LazyVGrid( columns: adaptiveColumns, spacing: 20 )`: Creates a lazy vertical
    grid with adaptive columns that have a spacing of 20 between each item.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LazyVGrid( columns: adaptiveColumns, spacing: 20 )`: 创建一个具有自适应列且每项之间间隔为20的懒加载垂直网格。'
- en: '`ForEach(` `images.indices )`'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ForEach(` `images.indices )`'
- en: '`{ i in`: Loops through every image filename, and `i` represents the index
    number, starting at 0, which will be used to reference the image shortly.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`{ i in`: 遍历每个图像文件名，`i`代表索引号，从0开始，稍后将用于引用图像。'
- en: '`Image(` `images[i] )`'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Image(` `images[i] )`'
- en: '`.``resizable( )`'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '`.``resizable( )`'
- en: '`.``scaledToFill( )`'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '`.``scaledToFill( )`'
- en: '`.frame( width: 300, height: 300 )`: Creates an image using the filename from
    the `images` array. `resizable` allows an image’s size to be modified. It’s important
    to set the `resizable()` modifier before applying any scaling or sizing to an
    image, or it won’t have an effect. `scaledToFill` is used to maintain the aspect
    ratio of an image and scales to fill its parent. Finally, the `frame` parameter
    is used to set the width and height of the image.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`.frame(width: 300, height: 300)`: 使用`images`数组中的文件名创建一个图像。`resizable`允许修改图像的大小。在应用任何缩放或尺寸之前设置`resizable()`修饰符很重要，否则它将不起作用。`scaledToFill`用于保持图像的宽高比并将其缩放以填充其父元素。最后，使用`frame`参数设置图像的宽度和高度。'
- en: 'Running the application will result in the following:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行应用程序将产生以下结果：
- en: '![Figure 4.25 – HighlightView Preview](img/Figure_4.25_B18783.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.25 – 高亮视图预览](img/Figure_4.25_B18783.jpg)'
- en: Figure 4.25 – HighlightView Preview
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.25 – 高亮视图预览
- en: 'Now let’s rotate our device/simulator to see how it looks:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们旋转我们的设备/模拟器，看看它看起来如何：
- en: '![Figure 4.26 – Horizontal orientation preview](img/Figure_4.26_B18783.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.26 – 横向布局预览](img/Figure_4.26_B18783.jpg)'
- en: Figure 4.26 – Horizontal orientation preview
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.26 – 横向布局预览
- en: 'Rotating the simulator can be achieved by pressing the *⌘* *+ left/right arrow*
    keys or by pressing the rotate button at the top of the simulator, as shown in
    the following screenshot:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按*⌘* *+ 左/右箭头键*或通过按模拟器顶部的旋转按钮，如图下所示，可以实现模拟器的旋转：
- en: '![Figure 4.27 – Rotate button](img/Figure_4.27_B18783.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.27 – 旋转按钮](img/Figure_4.27_B18783.jpg)'
- en: Figure 4.27 – Rotate button
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.27 – 旋转按钮
- en: As we can see, the Highlight view for our gallery application is looking really
    good. It works flawlessly in portrait and landscape. The beauty of using a grid
    instead of a custom implementation is that it handles the rotation, which saves
    time and energy, while keeping it in line with the design standards users are
    used to.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，我们画廊应用的高亮视图看起来非常好。它在纵向和横向模式下都能完美工作。使用网格而不是自定义实现的美妙之处在于它处理了旋转，这节省了时间和精力，同时保持了与用户习惯的设计标准一致。
- en: 'That was the last bit of code for this chapter. Here is all the code for the
    `HighlightView` file:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是本章的最后一段代码。以下是`HighlightView`文件的全部代码：
- en: '[PRE3]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We first looked at the design of our photo gallery application. It was unique
    from a design perspective due to it being on an iPad. We looked at the wireframe
    of the Highlight view, enhanced view, and full-screen mode. We used SwiftUI to
    implement the Highlight view and made sure it rotated correctly.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先研究了我们的照片画廊应用的设计。由于它是在iPad上，从设计角度来看它是独特的。我们研究了高亮视图、增强视图和全屏模式的线框图。我们使用SwiftUI实现了高亮视图，并确保它正确旋转。
- en: Summary
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we covered the design of our photo gallery application for
    the iPad. We looked at wireframes and broke down each element into SwiftUI components.
    We then implemented the SwiftUI components to match the design from the highlight
    view wireframe. We also took a look at the requirements for building this application,
    and the design specifications a photo gallery application can have. Then we simplified
    it to the core features our app will provide. We expanded our design specifications
    with acceptance criteria to show what we would like our app to do.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了iPad上我们的照片画廊应用的设计。我们研究了线框图，并将每个元素分解为SwiftUI组件。然后我们实现了SwiftUI组件以匹配高亮视图线框图的设计。我们还研究了构建此应用程序的要求，以及照片画廊应用可能具有的设计规范。然后我们将其简化为应用的核心功能。我们通过验收标准扩展了设计规范，以展示我们希望我们的应用能够做什么。
- en: In our next chapter, we’ll take a look at implementing the enhanced view based
    on the wireframe discussed in this chapter and connect it to the highlight view.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们下一章中，我们将探讨基于本章讨论的线框图实现增强视图，并将其与高亮视图连接起来。
