- en: '19'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '19'
- en: Getting Started with Custom Views
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用自定义视图
- en: At this point, your *JRNL* app is functional. All the screens are working, but
    as the rating user interface element is missing, you can’t set a star rating for
    a journal entry as shown in the app tour. You also can’t set a custom picture,
    but that will be addressed in *Chapter 20*, *Getting Started with the Camera and
    Photo Library*.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您的 *JRNL* 应用已经可以正常工作。所有屏幕都正常工作，但由于缺少评分用户界面元素，您无法设置如应用演示中所示的星星评分。您也无法设置自定义图片，但这将在
    *第 20 章*，*开始使用相机和照片库* 中解决。
- en: You have been using Apple’s standard UI elements so far. In this chapter, you’ll
    create a **custom view** subclass of the `UIStackView` class that displays a journal
    entry rating in the form of stars, and you’ll modify this subclass so users can
    set a rating for a journal entry by tapping it. After that, you’ll implement it
    on the Add New Journal Entry screen. Finally, you’ll implement it on the Journal
    Entry Detail screen.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您一直在使用苹果的标准 UI 元素。在本章中，您将创建一个 `UIStackView` 类的 **自定义视图** 子类，该子类以星星的形式显示日记条目的评分，并且您将修改这个子类，以便用户可以通过点击来设置日记条目的评分。之后，您将在“添加新日记条目”屏幕上实现它。最后，您将在“日记条目详情”屏幕上实现它。
- en: By the end of this chapter, you’ll have learned how to create custom views for
    your own apps.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将学会如何为您的应用创建自定义视图。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Creating a custom `UIStackView` subclass
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建自定义 `UIStackView` 子类
- en: Adding your custom view to the Add New Journal Entry screen
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将您的自定义视图添加到“添加新日记条目”屏幕
- en: Adding your custom view to the Journal Entry Detail screen
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将您的自定义视图添加到“日记条目详情”屏幕
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will continue working on the `JRNL` project that you modified in the previous
    chapter.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 您将继续在上一章中修改的 `JRNL` 项目上工作。
- en: 'The completed Xcode project for this chapter is in the `Chapter19` folder of
    the code bundle for this book, which can be downloaded here:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章完成的 Xcode 项目位于本书代码包的 `Chapter19` 文件夹中，可以通过以下链接下载：
- en: '[https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition](https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition%0D)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition](https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition%0D)'
- en: 'Check out the following video to see the code in action:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 观看以下视频以查看代码的实际效果：
- en: '[https://youtu.be/Y21q6voqYuk](https://youtu.be/Y21q6voqYuk%0D)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://youtu.be/Y21q6voqYuk](https://youtu.be/Y21q6voqYuk%0D)'
- en: Let’s start by learning how to create a custom `UIStackView` subclass that will
    display a star rating on the screen.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先学习如何创建一个自定义 `UIStackView` 子类，该子类将在屏幕上显示星星评分。
- en: Creating a custom UIStackView subclass
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自定义 UIStackView 子类
- en: 'You’ve only used Apple’s predefined UI elements so far, such as labels and
    buttons. All you had to do was click the Library button, search for the object
    you want, and drag it into the storyboard. However, there will be cases where
    the objects provided by Apple are either unsuitable or don’t exist. In such cases,
    you will need to build your own. Let’s review the Add New Journal Entry screen
    that you saw in the app tour:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您只使用了苹果预定义的 UI 元素，例如标签和按钮。您所需要做的只是点击库按钮，搜索您想要的元素，并将其拖入故事板。然而，在某些情况下，苹果提供的对象可能不适合或不存在。在这种情况下，您将需要自己构建。让我们回顾一下您在应用演示中看到的“添加新日记条目”屏幕：
- en: '![](img/B31371_19_01.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_19_01.png)'
- en: 'Figure 19.1: Add New Journal Entry screen showing the star rating'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.1：显示星星评分的“添加新日记条目”屏幕
- en: You can see a group of five stars just above the **Get Location** switch. Currently,
    the **New Entry Scene** and the **Entry Detail Scene** in the `Main` storyboard
    file have placeholder view objects where the stars should be. You will create
    the `RatingView` class, a custom subclass of the `UIStackView` class, which you
    will use in both scenes. An instance of this class will display ratings as stars.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到一组五个星星位于 **获取位置** 开关的上方。目前，`Main` 故事板文件中的 **新条目场景** 和 **条目详情场景** 有占位符视图对象，星星应该在那里。您将创建
    `RatingView` 类，这是一个 `UIStackView` 类的定制子类，您将在两个场景中使用它。这个类的实例将显示评分作为星星。
- en: For the rest of this chapter, an instance of the `RatingView` class will be
    referred to as a rating view (the same way an instance of the `UIButton` class
    is referred to as a button).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的剩余部分，`RatingView` 类的实例将被称为评分视图（与 `UIButton` 类的实例被称为按钮的方式相同）。
- en: 'Let’s begin by creating a subclass of the `UIStackView` class. Follow these
    steps:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从创建 `UIStackView` 类的子类开始。按照以下步骤操作：
- en: 'In the Project navigator, right-click on the **JRNL** folder and choose **New
    Group** from the pop-up menu. Name this group **Views**. Move this group to a
    new location below the **Model** group:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中，右键单击**JRNL**文件夹，从弹出菜单中选择**新建组**。将此组命名为**视图**。将此组移动到**模型**组下方的新位置：
- en: '![](img/B31371_19_02.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_19_02.png)'
- en: 'Figure 19.2: Project navigator showing Views group below the Model group'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.2：项目导航器显示视图组位于模型组下方
- en: Right-click the **Views** folder and select **New File from Template...** from
    the pop-up menu.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击**视图**文件夹，从弹出菜单中选择**从模板新建文件...**。
- en: '**iOS** should already be selected. Choose **Cocoa Touch Class** and then click
    **Next**.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**iOS**应该已经选中。选择**Cocoa Touch 类**然后点击**下一步**。'
- en: 'Configure the file as follows:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下方式配置文件：
- en: '**Class**: `RatingView`'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**类**：`RatingView`'
- en: '**Subclass**: `UIStackView`'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**子类**：`UIStackView`'
- en: '**Language**: `Swift`'
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语言**：`Swift`'
- en: Click **Next**.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**下一步**。
- en: Click **Create**. The `RatingView` file will appear in the Project navigator.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**。`RatingView`文件将出现在项目导航器中。
- en: 'Remove all the commented code in this file, and type the following after the
    `RatingView` class declaration to declare the properties for the class:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除此文件中的所有注释代码，并在`RatingView`类声明之后输入以下内容以声明类的属性：
- en: '[PRE0]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `ratingButtons` property is an array that will hold all the buttons for
    this class.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`ratingButtons`属性是一个数组，将包含此类中所有的按钮。'
- en: The `rating` property is used to store a journal entry rating. It determines
    the number and types of stars that will be drawn. For instance, if `rating` contains
    `3`, the rating view will display three filled stars and two empty stars.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`rating`属性用于存储日记条目的评分。它决定了将要绘制多少个星形以及星形的类型。例如，如果`rating`包含`3`，评分视图将显示三个填充星形和两个空星形。'
- en: The `buttonSize` property determines the height and the width of the buttons
    that will be drawn onscreen.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`buttonSize`属性确定要在屏幕上绘制的按钮的高度和宽度。'
- en: The `buttonCount` property determines the total number of buttons to be drawn
    onscreen.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`buttonCount`属性确定要在屏幕上绘制的按钮总数。'
- en: 'Implement the initializer for this class after the property declarations:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在属性声明之后实现此类的初始化器：
- en: '[PRE1]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Implement a method to draw stars on the screen after the initializer:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在初始化器之后实现一个在屏幕上绘制星形的方法：
- en: '[PRE2]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let’s break this down:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: These statements remove any existing buttons from the stack view and the `ratingButtons`
    array.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这些语句从堆叠视图中移除任何现有的按钮和`ratingButtons`数组。
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: These statements create three `UIImage` instances from symbols in Apple’s `SFSymbols`
    library. `filledStar` will store an image of a filled star, `emptyStar` will store
    an image of a star outline, and `highlightedStar` will store an image of a filled
    star that has been tinted red.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这些语句从苹果的`SFSymbols`库中的符号创建三个`UIImage`实例。`filledStar`将存储填充星形的图像，`emptyStar`将存储星形轮廓的图像，而`highlightedStar`将存储被着色为红色的填充星形的图像。
- en: For more information on Apple’s `SFSymbols` library, see [https://developer.apple.com/design/human-interface-guidelines/sf-symbols](https://developer.apple.com/design/human-interface-guidelines/sf-symbols).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于苹果的`SFSymbols`库的信息，请参阅[https://developer.apple.com/design/human-interface-guidelines/sf-symbols](https://developer.apple.com/design/human-interface-guidelines/sf-symbols)。
- en: '[PRE5]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Since `buttonCount` is set to `5`, this `for` loop will repeat five times.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 由于`buttonCount`设置为`5`，这个`for`循环将重复五次。
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This statement assigns an instance of `UIButton` to `button`.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句将`UIButton`的一个实例分配给`button`。
- en: For more information on `UIButton`, see [https://developer.apple.com/documentation/uikit/uibutton](https://developer.apple.com/documentation/uikit/uibutton).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于`UIButton`的信息，请参阅[https://developer.apple.com/documentation/uikit/uibutton](https://developer.apple.com/documentation/uikit/uibutton)。
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: These statements set the images for the different states of the `UIButton` instance.
    The `.normal` state displays a star outline. When in the `.selected` state, a
    filled star is displayed. If you tap the `UIButton` instance, it will be in either
    the `.highlighted` state or the `.highlighted` and `.selected` states, depending
    on whether it was in the `.normal` state or `.selected` state prior to being tapped.
    It then displays a red-tinted filled star.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这些语句设置了`UIButton`实例的不同状态下的图像。`.normal`状态显示星形轮廓。在`.selected`状态下，显示填充星形。如果你点击`UIButton`实例，它将处于`.highlighted`状态或`.highlighted`和`.selected`状态，这取决于点击之前它是在`.normal`状态还是`.selected`状态。然后显示带有红色色调的填充星形。
- en: '[PRE8]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: These statements set the size of the buttons. The first statement sets the `UIButton`
    instance’s `translatesAutoresizingMaskIntoConstraints` property to `false`; otherwise,
    the system would create a set of constraints that duplicate the behavior specified
    by the view’s auto-resizing mask, and you would not be able to set your own constraints.
    The next two statements set the instance’s height and width by programmatically
    setting the height and width constraints using the value stored in `buttonSize`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这些语句设置了按钮的大小。第一条语句将`UIButton`实例的`translatesAutoresizingMaskIntoConstraints`属性设置为`false`；否则，系统将创建一组约束，这些约束会重复视图自动调整大小掩码中指定的行为，你将无法设置自己的约束。接下来的两个语句通过使用存储在`buttonSize`中的值以编程方式设置实例的高度和宽度约束。
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This statement adds the `UIButton` instance as a subview of the stack view programmatically.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这条语句将`UIButton`实例作为子视图以编程方式添加到堆叠视图中。
- en: '[PRE10]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This statement adds the `UIButton` instance to the `ratingButtons` array.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这条语句将`UIButton`实例添加到`ratingButtons`数组中。
- en: 'Call the `setupButtons()` method in the initializer:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在初始化器中调用`setupButtons()`方法：
- en: '[PRE11]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This draws the rating view onscreen when the rating view is initialized.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 当评分视图初始化时，这将在屏幕上绘制评分视图。
- en: 'You have created a custom `UIStackView` subclass named `RatingView`, and you
    have added code to make it draw five stars on the screen. Now let’s add code to
    enable the user to change the rating when the stars in the rating view are tapped.
    Follow these steps:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经创建了一个名为`RatingView`的自定义`UIStackView`子类，并且已经添加了代码使其在屏幕上绘制五个星星。现在让我们添加代码，使用户能够在评分视图中的星星被点击时更改评分。按照以下步骤操作：
- en: 'Implement a method to change the rating view’s `rating` property when a button
    in the `ratingButtons` array is tapped after the `setupButtons()` method:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实现一个方法，在`setupButtons()`方法之后，当在`ratingButtons`数组中的按钮被点击时，更改评分视图的`rating`属性：
- en: '[PRE12]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: When a button in the `ratingButtons` array is tapped, the `guard` statement
    assigns the index of the button to `index`. `selectedRating` is then set to the
    value stored in `index` + 1\. If the `rating` property has the same value as `selectedRating`,
    it is set to `0`; otherwise, it is set to the same value as `selectedRating`.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 当`ratingButtons`数组中的按钮被点击时，`guard`语句将按钮的索引分配给`index`。然后`selectedRating`被设置为`index`
    + 1存储的值。如果`rating`属性的值与`selectedRating`相同，则将其设置为`0`；否则，将其设置为与`selectedRating`相同的值。
- en: For example, let’s say you tap the third star in the rating view. Since the
    third star is the third element in the `ratingButtons` array, `index` would be
    set to `2` and `selectedRating` would be set to 2 + 1 = `3`. Assuming that the
    initial value of the `rating` property is `0`, `selectedRating == rating` would
    return `false`, and the `rating` property’s value would be set to `3`.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设你在评分视图中的第三个星星上点击。由于第三个星星是`ratingButtons`数组中的第三个元素，`index`将被设置为`2`，`selectedRating`将被设置为2
    + 1 = `3`。假设`rating`属性的初始值是`0`，`selectedRating == rating`将返回`false`，因此`rating`属性的值将被设置为`3`。
- en: 'Assign this method as the button action in the `for` loop of the `setupButtons`
    method after the statements setting the constraints:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置约束的语句之后，在`setupButtons`方法的`for`循环中将此方法分配为按钮动作：
- en: '[PRE13]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Add a method to change the button state according to the rating that was set
    before the closing curly brace:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个方法来根据在闭合花括号之前设置的评分来改变按钮的状态：
- en: '[PRE14]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: To see how this works, let’s say that the `rating` property is set to `3`. The
    default state for each button is `.normal`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 为了了解这是如何工作的，让我们假设`rating`属性被设置为`3`。每个按钮的默认状态是`.normal`。
- en: The first button is at index `0`, so `button.isSelected` is 0 < 3, which returns
    `true`. Since the image for the `.selected` state is a filled star, this button’s
    image is set to a filled star. The same is true for the next two buttons.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个按钮位于索引`0`，因此`button.isSelected`是0 < 3，返回`true`。由于`.selected`状态下的图像是一个填充的星星，因此这个按钮的图像被设置为填充的星星。对于接下来的两个按钮也是如此。
- en: The fourth button is at index `3`, so `button.isSelected` is 3 < 3, which returns
    `false`. This means that the button’s state remains `.normal`. The image for the
    `.normal` state is a star outline, so this button’s image is set to a star outline.
    The same is true for the fifth button.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 第四个按钮位于索引`3`，因此`button.isSelected`是3 < 3，返回`false`。这意味着按钮的状态保持为`.normal`。`.normal`状态下的图像是一个星星轮廓，因此这个按钮的图像被设置为星星轮廓。对于第五个按钮也是如此。
- en: In short, when the `rating` property is set to `3`, the rating view displays
    the first three buttons with filled stars, and the remaining two buttons with
    star outlines.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，当`rating`属性设置为`3`时，评分视图显示前三个带有填充星星的按钮，其余两个按钮带有星星轮廓。
- en: 'You’ll need to call the `updateButtonSelectionStates()` method every time the
    `rating` property’s value changes. To do so, modify the `rating` property as shown:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每当`rating`属性的值发生变化时，都需要调用`updateButtonSelectionStates()`方法。为此，按如下方式修改`rating`属性：
- en: '[PRE15]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This is known as a **property observer**, and every time the `rating` property’s
    value changes, the `updateButtonSelectionStates()` method will be called.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这被称为**属性观察者**，每当`rating`属性的值发生变化时，`updateButtonSelectionStates()`方法都会被调用。
- en: You have completed the implementation of the rating view. In the next section,
    you’ll add it to the Add New Journal Entry screen.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 您已完成了评分视图的实现。在下一节中，您将将其添加到添加新日志条目屏幕。
- en: Adding your custom view to the Add New Journal Entry screen
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将您的自定义视图添加到添加新日志条目屏幕
- en: 'So far, you have created a new `RatingView` class in your project and configured
    it to set its `rating` property when a star in it is tapped. In this section,
    you will set the identity of the stack view object above the **Get Location**
    switch in the **New Entry Scene** to the `RatingView` class, configure an outlet
    for it in the `AddJournalEntryViewController` class, and add code to use the `rating`
    property’s value when creating a new journal entry. Follow these steps:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已在项目中创建了一个新的`RatingView`类，并配置它在其中的星形按钮被点击时设置其`rating`属性。在本节中，您将设置**新条目场景**中位于**获取位置**开关上方的堆栈视图对象的身份为`RatingView`类，在`AddJournalEntryViewController`类中为其配置一个出口，并在创建新日志条目时添加使用`rating`属性值的代码。按照以下步骤操作：
- en: 'In the Project navigator, click the **AddJournalEntryViewController** file.
    Add a new outlet for a rating view in the `AddJournalEntryViewController` class
    after all other property declarations:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中，点击**AddJournalEntryViewController**文件。在所有其他属性声明之后，在`AddJournalEntryViewController`类中为评分视图添加一个新的出口：
- en: '[PRE16]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Modify the `prepare(for:sender:)` method to get the rating view’s `rating`
    property value when creating a new journal entry:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`prepare(for:sender:)`方法，在创建新日志条目时获取评分视图的`rating`属性值：
- en: '[PRE17]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Click the **Main** storyboard file and select **New Entry Scene** in the document
    outline. Click the `UIStackView` object above the **Get Location** switch, as
    shown:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**主**故事板文件，并在文档大纲中选择**新条目场景**。如图所示，点击位于**获取位置**开关上方的`UIStackView`对象：
- en: '![](img/B31371_19_03.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_19_03.png)'
- en: 'Figure 19.3: Editor area showing UIStackView object above the Get Location
    switch'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.3：编辑区域显示位于获取位置开关上方的UIStackView对象
- en: 'Click the Identity inspector button. Under **Custom Class**, set **Class**
    to `RatingView`:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击身份检查器按钮。在**自定义类**下，将**类**设置为`RatingView`：
- en: '![](img/B31371_19_04.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_19_04.png)'
- en: 'Figure 19.4: Identity inspector with Class set to RatingView'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.4：身份检查器，类设置为RatingView
- en: 'Click the Attributes inspector button. Verify the settings under **Stack View**,
    and under **View**, set **Background** to `Default`:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击属性检查器按钮。验证**堆栈视图**下的设置，并在**视图**下将**背景**设置为`Default`：
- en: '![](img/B31371_19_05.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_19_05.png)'
- en: 'Figure 19.5: Attributes inspector with Background set to Default'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.5：背景设置为默认的属性检查器
- en: 'Click **New Entry Scene** in the document outline, and click the Connections
    inspector button. Connect the `ratingView` outlet to the rating view in the **New
    Entry** **Scene**:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中点击**新条目场景**，然后点击连接检查器按钮。将`ratingView`出口连接到**新条目**场景中的评分视图：
- en: '![](img/B31371_19_06.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_19_06.png)'
- en: 'Figure 19.6: Connections inspector showing ratingView outlet'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.6：连接检查器显示ratingView出口
- en: 'Build and run your app. Tap the **+** button to go to the Add New Journal Entry
    screen and you will see the rating view displayed above the **Get Location** switch.
    Add a journal entry title, body, and rating, and tap **Save**:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建并运行您的应用。点击**+**按钮进入添加新日志条目屏幕，您将看到评分视图显示在**获取位置**开关上方。添加日志条目标题、正文和评分，然后点击**保存**：
- en: '![](img/B31371_19_07.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_19_07.png)'
- en: 'Figure 19.7: Simulator showing the rating view on the Add New Journal Entry
    screen'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.7：模拟器显示在添加新日志条目屏幕上的评分视图
- en: A new journal entry with a rating is now visible on the Journal List screen.
    In the next section, you’ll modify the Journal Entry Detail screen to display
    the rating for this journal entry.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 带有评分的新日志条目现在在日志列表屏幕上可见。在下一节中，您将修改日志条目详情屏幕以显示此日志条目的评分。
- en: Adding your custom view to the Journal Entry Detail screen
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将您的自定义视图添加到日志条目详情屏幕
- en: At this point, you’re able to set a rating when you create a new journal entry
    using the Add New Journal Entry screen, but the rating you set is not visible
    on the Journal Entry Detail screen. You’ll add an outlet for a rating view and
    modify the code in the `JournalEntryDetailViewController` class, and you’ll add
    a rating view to the **Entry Detail Scene**.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你可以在使用“添加新日记条目”屏幕创建新日记条目时设置评分，但你设置的评分在“日记条目详情”屏幕上不可见。你将为评分视图添加一个输出，并修改`JournalEntryDetailViewController`类中的代码，你将在**条目详情场景**中添加一个评分视图。
- en: 'Follow these steps:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤操作：
- en: 'In the Project navigator, click the **JournalEntryDetailViewController** file.
    Add an outlet for a rating view after all other property declarations:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中，点击**JournalEntryDetailViewController**文件。在其他属性声明之后添加一个评分视图的输出：
- en: '[PRE18]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Modify the code in the `viewDidLoad()` method to set the value of the rating
    view’s `rating` property:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`viewDidLoad()`方法中的代码以设置评分视图的`rating`属性：
- en: '[PRE19]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Click the **Main** storyboard file and click **Entry Detail Scene** in the
    document outline. Select the stack view in the second table view cell. Click the
    Identity inspector button and, under **Custom Class**, set **Class** to `RatingView`:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Main**故事板文件，然后在文档大纲中点击**Entry Detail Scene**。选择第二个表格视图单元格中的堆叠视图。点击身份检查器按钮，并在**自定义类**下将**类**设置为`RatingView`：
- en: '![](img/B31371_19_08.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_19_08.png)'
- en: 'Figure 19.8: Identity inspector with Class set to RatingView'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.8：身份检查器，类设置为RatingView
- en: 'Click the Attributes inspector button and verify the settings under **Stack
    View**. Under **View**, untick the **User Interaction Enabled** checkbox (as the
    user should not be able to change the rating on the Journal Entry Detail screen),
    and set **Background** to `Default`:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击属性检查器按钮，并验证**堆叠视图**下的设置。在**视图**下，取消选中**用户交互启用**复选框（因为用户不应该能够在“日记条目详情”屏幕上更改评分），并将**背景**设置为`默认`：
- en: '![](img/B31371_19_09.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_19_09.png)'
- en: 'Figure 19.9: Attributes inspector with Background set to Default'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.9：背景设置为默认的属性检查器
- en: 'Click **Entry Detail Scene** in the document outline, and click the Connections
    inspector button. Connect the **ratingView** outlet to the rating view in the
    **Entry Detail** scene:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中点击**Entry Detail Scene**，然后点击连接检查器按钮。将**ratingView**输出连接到**Entry Detail**场景中的评分视图：
- en: '![](img/B31371_19_10.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_19_10.png)'
- en: 'Figure 19.10: Connections inspector showing ratingView outlet'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.10：连接检查器显示ratingView输出
- en: 'Build and run your app. Tap the journal entry you added in the previous section,
    and you’ll see the rating displayed in a rating view on the Journal Entry Detail
    screen:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建并运行你的应用程序。点击上一节中添加的日记条目，你将在“日记条目详情”屏幕上的评分视图中看到评分：
- en: '![](img/B31371_19_11.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_19_11.png)'
- en: 'Figure 19.11: Simulator showing the rating view on the Journal Entry Detail
    screen'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.11：模拟器显示“日记条目详情”屏幕上的评分视图
- en: You’ve successfully added and configured a rating view on the Journal Entry
    Detail screen! Good job!
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经在“日记条目详情”屏幕上成功添加并配置了评分视图！做得好！
- en: Summary
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you created a custom subclass of the `UIStackView` class that
    displays a journal entry rating in the form of stars, and you modified this subclass
    so users can set a rating for a journal entry by tapping it. After that, you added
    it to the Add New Journal Entry screen. Finally, you implemented it on the Journal
    Entry Detail screen.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你创建了一个自定义的`UIStackView`类子类，以星形的形式显示日记条目的评分，并且修改了这个子类，使用户可以通过点击来设置日记条目的评分。之后，你将其添加到“添加新日记条目”屏幕中。最后，你在“日记条目详情”屏幕上实现了它。
- en: You now know how to create custom views for your own apps.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你知道如何为你的应用程序创建自定义视图。
- en: In the next chapter, you’ll learn how to work with photos from the camera or
    photo library.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习如何处理来自相机或照片库的照片。
- en: Join us on Discord!
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的Discord社区！
- en: Read this book alongside other users, experts, and the author himself. Ask questions,
    provide solutions to other readers, chat with the author via Ask Me Anything sessions,
    and much more. Scan the QR code or visit the link to join the community.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他用户、专家和作者本人一起阅读这本书。提问、为其他读者提供解决方案、通过“问我任何问题”环节与作者聊天，等等。扫描二维码或访问链接加入社区。
- en: '[https://packt.link/ios-Swift](https://packt.link/ios-Swift%0D)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/ios-Swift](https://packt.link/ios-Swift%0D)'
- en: '[![](img/QR_Code2370024260177612484.png)](https://packt.link/ios-Swift%0D)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](img/QR_Code2370024260177612484.png)](https://packt.link/ios-Swift%0D)'
