- en: Chapter 1. Setting Up the Development Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 设置开发环境
- en: Android 5 is the most significant update available at the present time, since
    its platform was created in 2009\. It introduced a completely reworked user interface
    and thousands of new APIs, including the all new camera APIs. Android 5 also incorporates
    exciting, new, power-saving technologies, and improved app performance.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Android 5 是目前可用的最重要的更新，因为它的平台是在2009年创建的。它引入了一个全新的用户界面和数千个新的 API，包括全新的相机 API。Android
    5 还集成了令人兴奋的新节能技术和改进的应用性能。
- en: In this chapter, we will install and configure all the development tools required
    for building an Android app. These will include the Android Studio and Android
    SDK, various platform specific tools and system images, and an Android Virtual
    Device. Once our environment is properly set up, we will create a simple "Hello
    World" project and test it on a mobile device, as well as on an emulator. This
    exercise will give us a good opportunity to become acquainted with some of the
    most widely used elements of our development environment, as well as providing
    a quick, but useful, demonstration of how an Android Studio project is put together.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将安装和配置构建 Android 应用所需的所有开发工具。这些工具将包括 Android Studio 和 Android SDK，各种平台特定工具和系统镜像，以及一个
    Android 虚拟设备。一旦我们的环境设置妥当，我们将创建一个简单的“Hello World”项目，并在移动设备和模拟器上对其进行测试。这个练习将为我们提供一个很好的机会，熟悉我们开发环境中最广泛使用的元素，同时也提供了一个快速但实用的演示，说明
    Android Studio 项目是如何构建的。
- en: 'In this chapter, we will:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: Understand what is new and different about Android 5
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解 Android 5 的新功能和不同之处
- en: Download and install the Android Studio and SDK
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载并安装 Android Studio 和 SDK
- en: Install the latest SDK tools, platform-tools, and build-tools
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装最新的 SDK 工具、平台工具和构建工具
- en: Install the Lollipop platform and system images
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Lollipop 平台和系统镜像
- en: Create a basic "Hello World" project
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个基本的“Hello World”项目
- en: Run the app on a handset
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在手机上运行应用
- en: Configure an Android Virtual Device (AVD)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 Android 虚拟设备 (AVD)
- en: Run the app on the AVD emulator
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 AVD 模拟器上运行应用
- en: Before we start, it's worth while taking a closer look at Android 5 itself,
    and see what sets it apart from other Android versions, and what it has to offer
    to us, as developers.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，仔细了解一下 Android 5 本身是很有价值的，看看它与其他 Android 版本有什么不同，以及它能为开发者提供什么。
- en: What is Android 5?
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android 5 是什么？
- en: Android 5, or Lollipop, represents the most revolutionary upgrade to the Android
    operating system to date. It introduces many exciting, new features for users,
    plus a host of new APIs and access to cutting edge technologies for developers.
    The most significant, and obvious, changes have to be the new Material Design
    UI and the ability to deploy Lollipop on wearables, TVs, and in our cars.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Android 5，或称 Lollipop，代表了迄今为止对 Android 操作系统的最革命性升级。它为用户引入了许多令人兴奋的新功能，同时为开发者提供了一大批新的
    API 和访问前沿技术的途径。最显著和明显的变化无疑是新的 Material Design UI 以及能够在可穿戴设备、电视和我们的汽车上部署 Lollipop
    的能力。
- en: It's not a bad idea to have a quick look at how Android 5 appears to the user,
    before exploring what it means for us as developers.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在探索它对我们作为开发者意味着什么之前，快速看看 Android 5 对用户来说看起来是什么样子，并不是一个坏主意。
- en: Lollipop from a user's perspective
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从用户的角度看 Lollipop
- en: The first thing any Android 5 user will will be aware of, other than the expanded
    and improved notifications bar and a more functional lock screen, is the new visual
    language-Material Design. They will notice how almost everything they touch or
    interact with responds with an animation. These simple onscreen behaviors are
    intended to provide the user with a clear, and intuitive, visual feedback. Another
    interesting change is the new Overview feature which replaces Recent apps, allowing
    individual documents and entire apps to be available.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 除了扩展和改进的通知栏以及更功能性的锁屏之外，任何 Android 5 用户首先会注意到的是新的视觉语言——Material Design。他们会注意到几乎他们接触或与之交互的每一件事都会有一个动画响应。这些简单的屏幕行为旨在为用户提供清晰直观的视觉反馈。另一个有趣的变化是新的概览功能，它取代了最近应用，允许单个文档和整个应用都可用。
- en: '![Lollipop from a user''s perspective](img/B04321_01_01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![从用户的角度看 Lollipop](img/B04321_01_01.jpg)'
- en: Perhaps the most interesting departure, from the user's point of view, that
    Lollipop makes from previous versions is how they will now encounter it on their
    television sets, in their cars, and on wearable devices, such as watches and glasses.
    Those with these wearables will undoubtedly want these apps that take advantage
    of the two new sensors that Lollipop introduces, such as the heart rate and tilt
    sensors.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 从用户的角度来看，Lollipop与之前版本最有趣的区别之一是，他们现在将在电视、汽车以及可穿戴设备，如手表和眼镜上遇到它。那些拥有这些可穿戴设备的人无疑会想要这些利用Lollipop引入的两个新传感器（如心率传感器和倾斜传感器）的应用程序。
- en: Lollipop from a developer's perspective
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从开发者的角度来看，Lollipop
- en: From a developer's point of view, Android 5 provides far more exciting prospects
    than a prettier UI, improved battery life, and a better lock screen. For us, with
    over 5,000 new APIs, a whole new design language and dozens of new features and
    technologies, Android 5 gives us the most powerful set of tools yet. Not only
    is Android now more powerful, it is also easier to program than before. With a
    truly helpful IDE, and APIs that are designed for ease of use, developing an app
    has never been simpler or less daunting. If you want to turn your ideas into a
    reality, then Android 5 is the way. It is truer now than it has ever been that
    we are limited only by the power of our imagination.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 从开发者的角度来看，Android 5提供的不仅仅是更漂亮的UI、改进的电池寿命和更好的锁屏。对于我们来说，超过5,000个新API、全新的设计语言以及数十个新功能和技术的出现，Android
    5为我们提供了迄今为止最强大的工具集。Android现在不仅更强大，而且编程起来也比以前更容易。有了真正有帮助的IDE和为易用性而设计的API，开发应用程序从未如此简单或令人畏惧。如果你想把你的想法变成现实，那么Android
    5就是你的选择。现在比以往任何时候都更真实，我们受限于的只有我们想象力的力量。
- en: Material Design
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 材料设计
- en: 'The Material Design UI paradigm is far more than an attractive and easier to
    understand interface. It is a serious design language, with some important points
    to make about how we interact with our devices. Inspired by ideas of how materials
    of the future might behave, such material can be thought of as a dynamic and responsive
    piece of paper, which can move, change shape and size, split apart, join together,
    and exist in three dimensions. It is this added dimension, with real-time, programmable
    shadows that gives Material Design its sense of depth. The way content is displayed
    on material is also dynamic and Google suggests that we think of it as "smart
    ink". There a few design rules that need to be considered when building apps using
    Material Design, and we will cover these when we return to the subject in later
    chapters. From a practical point of view, the SDK provides us with two versions
    of material theme (light and dark) and two widgets: `CardView` for simple content
    and `RecyclerView` for lists. We can also define and customize the shadows, animations,
    and drawables our apps use.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 材料设计UI范式远不止是一个吸引人且易于理解的界面。它是一种严肃的设计语言，其中包含一些关于我们如何与设备互动的重要观点。受到对未来材料可能行为想法的启发，这种材料可以被视为一个动态且响应式的纸张片段，它可以移动、改变形状和大小、分裂、合并，并且存在于三维空间中。正是这个额外的维度，加上实时可编程的阴影，赋予了材料设计其深度感。在材料上显示内容的方式也是动态的，谷歌建议我们将其视为“智能墨水”。在构建使用材料设计的应用程序时，需要考虑一些设计规则，我们将在后续章节中讨论这些规则。从实际的角度来看，SDK为我们提供了两种材料主题版本（浅色和深色）和两个小部件：`CardView`用于简单内容，`RecyclerView`用于列表。我们还可以定义和自定义应用程序使用的阴影、动画和可绘制元素。
- en: Other devices
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他设备
- en: One of the most exciting opportunities that Lollipop offers us as developers
    is the ability to create apps for devices other than phones and tablets. Android
    5 makes it possible to write apps for screens as small as wrist watches or as
    large as home cinemas, including anything in between.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Lollipop为我们开发者提供的最激动人心的机会之一是能够为除手机和平板电脑以外的设备创建应用程序。Android 5使得编写适用于从手表大小的屏幕到家庭影院大小的屏幕的应用程序成为可能，包括任何介于两者之间的尺寸。
- en: TV
  id: totrans-26
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 电视
- en: Android 5 makes coding for TV sets very similar to coding for handsets. The
    major differences are size, viewing distances and the way that the TV apps are
    generally navigated with a remote control and D-pad. The Android 5 SDK comes equipped
    with purpose-built themes and layouts, which make it simple for us to deploy an
    app built for a tablet, onto a TV, or vice versa.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Android 5使得为电视编码与为手机编码非常相似。主要区别在于尺寸、观看距离以及电视应用程序通常使用遥控器和D-pad进行导航的方式。Android
    5 SDK配备了专门设计的主题和布局，这使得我们能够轻松地将为平板电脑构建的应用程序部署到电视上，反之亦然。
- en: Wear
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 可穿戴
- en: When it comes to designing apps for wearables, issues such as power consumption
    and restricted screen size become some of the more important deciding factors.
    For this reason, Android 5 imposes a strict time-out policy on wearable apps.
    As all Android wearable apps need to be installed on a handset first, we have
    the opportunity to present the content on either the wearable or the parent device.
    Despite these restrictions, and the fact that not all features are available on
    wearables (such as web browsing), the addition of an API for the new heart-rate
    sensor, provides the developers interested in creating health and fitness based
    apps with new and exciting opportunities.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到为可穿戴设备设计应用时，功耗和屏幕尺寸受限等问题成为一些更为重要的决定因素。因此，Android 5对可穿戴应用实施了严格的时间超时策略。由于所有Android可穿戴应用都需要首先在手机上安装，我们有在可穿戴设备或父设备上展示内容的机会。尽管存在这些限制，并且并非所有功能都可在可穿戴设备上使用（例如网页浏览），但新增的心率传感器API为那些对创建基于健康和健身的应用感兴趣的开发者提供了新的和令人兴奋的机会。
- en: Auto
  id: totrans-30
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 自动
- en: 'Android in our cars offers another new field introduced by Lollipop. The emphasis
    here rests entirely on safety: only messaging and audio features are allowed to
    run on in-car apps. This means that when developing apps for cars, we need to
    take into account which features will be disabled for safety reasons.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的汽车中使用的Android提供了Lollipop引入的另一个新领域。这里的重点完全在于安全：车内应用只允许运行消息和音频功能。这意味着在为汽车开发应用时，我们需要考虑哪些功能会因为安全原因而被禁用。
- en: This is all the theory and background we will need for now. It's time to get
    to work and set up our work space.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们现在需要的所有理论和背景知识。现在是时候开始工作并设置我们的工作空间了。
- en: Installing and configuring the development environment
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置开发环境
- en: 'Before we can even begin to work with the Android SDK, we need to make sure
    that we have the latest Java Development Kit (JDK) installed. It is more than
    likely that you have this already, but if you are unsure, type `java -version`
    at the command line, and hopefully you will see something like this:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们甚至开始使用Android SDK之前，我们需要确保已经安装了最新的Java开发工具包（JDK）。你很可能已经安装了它，但如果你不确定，请在命令行中输入`java
    -version`，希望你会看到类似以下的内容：
- en: '![Installing and configuring the development environment](img/B04321_01_02.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![安装和配置开发环境](img/B04321_01_02.jpg)'
- en: Note
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that Android 5 requires Java 1.7 or higher.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Android 5需要Java 1.7或更高版本。
- en: Installing the SDK
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装SDK
- en: 'If you only have the Java Runtime Environment (JRE), you can download the JDK
    from [http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html).
    You will also need to take a note of where the JDK is installed on your computer.
    It should be something like `C:\Program Files\Java\jdk1.8.0_25`. Let us get started
    with the installation, by performing the following steps:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只有Java运行时环境（JRE），你可以从[http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)下载JDK。你还需要记录JDK在你的计算机上的安装位置。它可能类似于`C:\Program
    Files\Java\jdk1.8.0_25`。让我们开始安装，按照以下步骤操作：
- en: Download and install the Android Studio and SDK. They can be found at [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)
    and should come bundled together as a single executable.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并安装Android Studio和SDK。它们可以在[http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)找到，并且应该作为一个单独的可执行文件捆绑在一起。
- en: Run the executable and follow the wizard, making sure to install all the components,
    as seen in the following screenshot:![Installing the SDK](img/B04321_01_03.jpg)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行可执行文件，按照向导操作，确保安装所有组件，如下面的截图所示：![安装SDK](img/B04321_01_03.jpg)
- en: Before running the Android Studio we need to set up an environment variable
    to point to our JDK. From your control panel's **System Properties** window, select
    the **Advanced** tab and then the **Environment Variables...** button. Add a new
    user variable called `JAVA_HOME` and paste it in the path to your JDK, as noted
    earlier:![Installing the SDK](img/B04321_01_04.jpg)
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在运行Android Studio之前，我们需要设置一个环境变量，使其指向我们的JDK。从控制面板的**系统属性**窗口中，选择**高级**选项卡，然后选择**环境变量...**按钮。添加一个名为`JAVA_HOME`的新用户变量，并将它粘贴到之前提到的JDK路径中：![安装SDK](img/B04321_01_04.jpg)
- en: Managing the SDK tools
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理SDK工具
- en: There are still one or two tools we need before we can start to build and test
    any apps. The SDK separates tools, platforms, and device system images, allowing
    us to download only the packages we need or those that are specific to our project.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始构建和测试任何应用之前，还需要一两个工具。SDK将工具、平台和设备系统镜像分开，使我们能够只下载我们需要的包或那些针对我们项目的特定包。
- en: The Android SDK Manager is the program we use to do this. It can be run from
    the Android Studio, or as a stand-alone application from the SDK's root directory,
    by executing the `SDK Manager.exe` file. For now, we will run it from within the
    Android Studio environment. This can be done from within an open project, by clicking
    on the SDK Manager icon in the toolbar, or from the quick start screen from the
    Configure page.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Android SDK管理器是我们用来做这件事的程序。它可以从Android Studio运行，或者作为SDK根目录下的独立应用程序运行，通过执行`SDK
    Manager.exe`文件。现在，我们将从Android Studio环境中运行它。这可以通过在工具栏中点击SDK管理器图标在打开的项目中完成，或者从配置页面的快速启动屏幕中完成。
- en: '![Managing the SDK tools](img/B04321_01_05.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![管理SDK工具](img/B04321_01_05.jpg)'
- en: 'Open the SDK Manager; we can see that there are three sections: a `Tools` folder,
    a list of API platform folders, dating right back to Android 1.5 and an `Extras`
    folder.'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开SDK管理器；我们可以看到有三个部分：一个**工具**文件夹，一个从Android 1.5开始的历史API平台文件夹列表，以及一个** Extras**文件夹。
- en: Open the `Tools` folder. At the top, you will see **Android SDK Tools** and
    **Android SDK Platform-tools**. These will represent the latest tools available
    and both of them have to be installed.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**工具**文件夹。在顶部，你会看到**Android SDK Tools**和**Android SDK Platform-tools**。这些将代表可用的最新工具，并且两者都必须安装。
- en: Beneath this, you will see a list of build tools, and as this book is focused
    on Lollipop, we need to only install the latest version.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此之下，你会看到一个构建工具列表，由于本书专注于Lollipop，我们只需要安装最新版本。
- en: '![Managing the SDK tools](img/B04321_01_06.jpg)'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![管理SDK工具](img/B04321_01_06.jpg)'
- en: Moving on to the list of platforms, again, all we need to do is select those
    that apply to us as Lollipop developers, and that means anything with an API level
    of 21 or higher.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来是平台列表，我们只需要选择适用于我们的Lollipop开发者的平台，这意味着任何API级别为21或更高的平台。
- en: At some point, you will want to test your apps on earlier platforms to reach
    the widest possible market, but as this book is focused on Android 5, it is only
    necessary to install the most recent platform. Select all items in this folder.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在某个时候，你可能想要在更早的平台测试你的应用以覆盖尽可能广泛的市场，但由于本书专注于Android 5，安装最新的平台就足够了。选择此文件夹中的所有项目。
- en: There are several handy tools in the **Extras** folder. In particular, the **Android
    Support Library** and **Google Play services**, which offer a wide range of extra
    APIs. If you are planning on testing your apps on a real device connected to a
    PC, then you will need the **Google USB Driver** and if you have a recent Intel
    processor, you will want the hardware accelerator for running the emulators. Select
    the packages shown below, and install them.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**Extras**文件夹中有几个实用的工具。特别是**Android Support Library**和**Google Play services**，它们提供了广泛的额外API。如果你计划在连接到PC的实体设备上测试你的应用，那么你需要**Google
    USB Driver**，如果你有较新的英特尔处理器，你将需要硬件加速器来运行模拟器。选择下面显示的包，并安装它们。'
- en: '![Managing the SDK tools](img/B04321_01_07.jpg)'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![管理SDK工具](img/B04321_01_07.jpg)'
- en: We are now ready to create our first app, but first, a note on hardware acceleration.
    The Emulator Accelerator needs to be executed manually and can be found in the
    SDK folder under `extras\intel\Hardware_Accelerated_Execution_Manager\intelhaxm-android.exe`.
    Depending on your system, you may also have to enable virtualization in your BIOS.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在准备好创建我们的第一个应用了，但首先，关于硬件加速的一个注意事项。模拟器加速器需要手动执行，可以在SDK文件夹下的`extras\intel\Hardware_Accelerated_Execution_Manager\intelhaxm-android.exe`中找到。根据你的系统，你可能还需要在BIOS中启用虚拟化。
- en: Android software is regularly updated, and it is well worth while checking back
    with the SDK Manager from time to time for updates, especially before starting
    a new project.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Android软件定期更新，定期检查SDK管理器以获取更新是非常有价值的，尤其是在开始新项目之前。
- en: Tip
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Unfortunately, as Android is under constant development, installation is not
    always as straightforward as it appears here. Google do their best to address
    issues as they arrive, and in case of any problems, the web page [http://tools.android.com/knownissues](http://tools.android.com/knownissues)
    can be very useful.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 很遗憾，由于Android系统处于持续开发中，安装过程并不总是像这里显示的那么简单。谷歌会尽力解决出现的问题，如果遇到任何问题，可以访问网页 [http://tools.android.com/knownissues](http://tools.android.com/knownissues)
    获取非常有用的信息。
- en: Creating a "Hello World" app
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建“Hello World”应用程序
- en: 'Finally, it is time to build our first app. It will do next to nothing but
    will give us a good look at how apps are put together by the Android Studio. We
    will see which files and code are automatically generated for us and get to grips
    with the directory structure of our project, by performing the following steps:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，是时候构建我们的第一个应用程序了。它几乎什么都不会做，但将让我们详细了解Android Studio如何构建应用程序。我们将看到哪些文件和代码会自动为我们生成，并通过以下步骤掌握项目的目录结构：
- en: Start the Android Studio and from the start screen, select **Start a new Android
    Studio project**.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Android Studio，从起始屏幕选择**创建新的Android Studio项目**。
- en: Follow the wizard, and accept the suggested values, making sure that you select
    the **Phone and Tablet** form factor and a minimum SDK level, no lower than API
    21.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照向导操作，接受建议的值，确保您选择了**手机和平板**的设备类型以及最低SDK级别，不低于API 21。
- en: Select the **Blank Activity** template and accept the field values suggested
    by the wizard on the final screen and click on **Finish**. After a brief pause,
    the IDE will open up.![Creating a "Hello World" app](img/B04321_01_08.jpg)
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**空白活动**模板，并接受向导在最终屏幕上建议的字段值，然后点击**完成**。短暂的暂停后，IDE将打开。[![创建“Hello World”应用程序](img/B04321_01_08.jpg)]
- en: At first sight the IDE can appear daunting, but if we approach it one element
    at a time it is actually very straightforward. Take a look at the panel on the
    left – this displays the directory structure of our project. There are two main
    branches, **app** and **Gradle Scripts**. We will return to Gradle, when it comes
    to packaging our apps, but for now, expand the **app** branch.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 初看起来，IDE可能显得令人畏惧，但如果我们逐个元素地接近它，实际上是非常直接的。看看左侧的面板——它显示了项目的目录结构。有两个主要分支，**app**和**Gradle
    Scripts**。当涉及到打包我们的应用程序时，我们将回到Gradle，但现在，展开**app**分支。
- en: '![Creating a "Hello World" app](img/B04321_01_09.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![创建“Hello World”应用程序](img/B04321_01_09.jpg)'
- en: 'There are three main sections here, `manifests`, `java`, and `res` (which is
    short for resources). Along with this directory structure, the Android Studio
    also generates several code files for us automatically, so when we first create
    a project below including the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有三个主要部分，`manifests`、`java`和`res`（代表资源）。除了这个目录结构，Android Studio还会为我们自动生成几个代码文件，因此当我们第一次创建项目时，包括以下内容：
- en: The `manifest` file declares many of our app's broader properties, such as the
    permissions required by the user. It can be opened, viewed, and edited by double-clicking
    on the `AndroidManifest.xml` node.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`manifest`文件声明了我们的应用程序的许多更广泛的属性，例如用户所需的权限。可以通过双击`AndroidManifest.xml`节点来打开、查看和编辑它。'
- en: 'Android projects keep the layout data and procedural code separate. The layout
    information for the single activity we created here can be found in the XML file
    that was named `activity_main.xml` for us. There are two ways to view this file:
    the design view, which displays a list of widgets and an image of a phone and
    a text view, which can be accessed via the **Text** tab at the bottom of the pane.
    Any drawables, strings, and menu definitions we might need are also filed in the
    `res` directory.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android项目将布局数据和过程代码分开。我们创建的单一活动的布局信息可以在名为`activity_main.xml`的XML文件中找到。有两种方式查看此文件：设计视图，它显示小部件列表和手机图像；以及文本视图，可以通过面板底部的**文本**选项卡访问。我们可能需要的任何可绘制内容、字符串和菜单定义也都存放在`res`目录中。
- en: When we created the project, the IDE also created a Java class called `MainActivity`.
    To start with, all it contains are empty callback routines that are called when
    the Activity is first created, when the menu is created and when a menu item is
    selected.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们创建项目时，IDE也会创建一个名为`MainActivity`的Java类。一开始，它只包含一些空的回调函数，这些函数在Activity首次创建、菜单创建以及菜单项被选中时被调用。
- en: Both Android Studio and the emulator generate a lot of temporary files during
    operation. This can lead to performance issues with your anti-virus software.
    If you are comfortable doing so, setting exclusions for Android directories can
    help to speed up the software considerably.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio 和模拟器在运行过程中都会生成大量的临时文件。这可能导致你的防病毒软件出现性能问题。如果你愿意，为 Android 目录设置排除规则可以显著加快软件的速度。
- en: Testing the app on a physical device
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在物理设备上测试应用
- en: It is now time to see how our app looks on an actual device and also on an emulator.
    To run the project on an actual phone or tablet, you will first have had to download
    the Google USB driver from the SDK Manager and enabled USB debugging in your handset's
    settings. Connect your handset and click on the **Run** button on the IDE's main
    toolbar, or select **Run** from the menu. After confirming the device you are
    using, the app will be installed and launched.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候看看我们的应用在实际设备和模拟器上的样子了。要在实际手机或平板上运行项目，你首先必须从 SDK 管理器下载 Google USB 驱动程序并在手机设置中启用
    USB 调试。连接你的手机并点击 IDE 主工具栏上的**运行**按钮，或者从菜单中选择**运行**。确认你使用的设备后，应用将被安装并启动。
- en: Setting up a virtual device
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置虚拟设备
- en: 'It is unlikely that we will always have access to all the hardware we want
    our apps to run on, but with Android Virtual Devices, we can create almost any
    form factor we can imagine and test out our apps on those. Let''s set up a virtual
    device by performing the following steps:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能无法总是访问我们希望应用运行的所有硬件，但有了 Android 虚拟设备，我们可以创建几乎任何我们想象中的形态，并在这些设备上测试我们的应用。让我们通过以下步骤设置一个虚拟设备：
- en: Open the AVD Manager from the main toolbar:![Setting up a virtual device](img/B04321_01_10.jpg)
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主工具栏打开 AVD 管理器：![设置虚拟设备](img/B04321_01_10.jpg)
- en: We could simply select one of the preconfigured devices, but to get a better
    understanding of how AVDs work, hit the **Create Virtual Device...** button.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以简单地选择一个预配置的设备，但要更好地理解 AVD 的工作原理，请点击**创建虚拟设备...**按钮。
- en: Select **Phone** from the **Category** list.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**类别**列表中选择**手机**。
- en: Select one of the phones presented. I chose **Nexus 6**, but this is not important.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个展示的手机。我选择了**Nexus 6**，但这并不重要。
- en: Click on the **Clone Device...** button, so as to maintain the original device.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**克隆设备...**按钮，以保持原始设备不变。
- en: The following page allows us to edit the device's hardware profile. Here, we
    get to choose features such as screen size, memory capacity, and sensors. Leave
    everything as it is but do have a quick look at the options available, for later.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下页面允许我们编辑设备的硬件配置文件。在这里，我们可以选择屏幕大小、内存容量和传感器等特性。保持一切不变，但快速查看一下可用的选项，以备后用。
- en: Hit **Finish**.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**。
- en: You will be returned to the hardware selection screen. As before, select **Phone**
    from the **Category** list, and you will now find the AVD we just cloned. Select
    it and click on **Next**.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将返回到硬件选择屏幕。和之前一样，从**类别**列表中选择**手机**，现在你会找到我们刚刚克隆的 AVD。选择它并点击**下一步**。
- en: Select a system image with an API level of 21 or higher and a target of 5 or
    greater and click on **Next**.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个 API 级别为 21 或更高且目标为 5 或更高的系统镜像，然后点击**下一步**。
- en: Tip
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you have the Intel hardware acceleration enabled, then choose **x86** or
    **x86_64** as the ABI. Otherwise, you will have to make do with ARM. For the purposes
    of this demonstration, I will assume that you are using an ARM ABI.
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你启用了英特尔硬件加速，则选择**x86**或**x86_64**作为 ABI。否则，你将不得不使用 ARM。在本演示中，我将假设你正在使用 ARM
    ABI。
- en: The following page is mainly used just to verify our settings, but it also gives
    us the opportunity to adjust the scale and improve the performance of the emulator.
    Whether or not you adjust the scale will depend on the screen you are working
    on and the resolution of the emulated device. Similarly, the choice between accelerating
    the emulator's performance by harnessing your computer's own GPU or by speeding
    up start times with a snapshot will depend on your hardware and your project's
    purpose.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下页面主要用于验证我们的设置，但也给了我们调整缩放和提升模拟器性能的机会。是否调整缩放将取决于你正在工作的屏幕和模拟设备的分辨率。同样，通过利用你自己的计算机
    GPU 加速模拟器性能或通过快照加快启动时间的选择将取决于你的硬件和项目目的。
- en: Hit **Finish**.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**。
- en: Running an app on a virtual device is no different from running one on an actual
    phone, the only difference being which device you choose.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在虚拟设备上运行应用与在实际手机上运行没有区别，唯一的区别是选择哪个设备。
- en: '![Setting up a virtual device](img/B04321_01_11.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![设置虚拟设备](img/B04321_01_11.jpg)'
- en: As one would imagine, the touch screen of the AVD can be operated with the mouse.
    The device can be rotated by pressing Left *Ctrl* + *F12*. Also, the power button
    can be pressed with *F7* and the volume can be turned up and down with *Ctrl*
    + *F5* and *Ctrl* + *F6*.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所想，AVD的触摸屏可以用鼠标操作。可以通过按下左*Ctrl* + *F12*来旋转设备。此外，可以通过*F7*键来按下电源按钮，可以通过*Ctrl*
    + *F5*和*Ctrl* + *F6*来调节音量大小。
- en: This pretty much concludes our whistle-stop tour of Lollipop, Android Studio,
    and the SDK. Before we get started with some actual programming, there is one
    last tool that it is worth taking a look at, the **Android Device Monitor**.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本上结束了我们对Lollipop、Android Studio和SDK的快速浏览。在我们开始实际编程之前，还有一个值得一看的最后工具，那就是**Android设备监控器**。
- en: Monitoring devices
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 监控设备
- en: Run the app again, on either a device or an emulator, but first open the Android
    Device Monitor. It can be found on the main toolbar, to the right of the SDK Manager.
    The device monitor provides some very useful views on what is actually going on
    inside our devices and some fun ways of manipulating them. A paired down version
    of the Device Monitor is available directly from the IDE, by selecting Android
    from the icon in the lower left corner of the editor.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行应用，无论是在设备上还是在模拟器上，但首先打开Android设备监控器。它可以在主工具栏上找到，位于SDK管理器右侧。设备监控器提供了对我们设备内部实际发生情况的非常有用的视图，以及一些有趣的操控方式。通过在编辑器左下角的图标中选择Android，可以直接从IDE中获取设备监控器的简化版本。
- en: '![Monitoring devices](img/B04321_01_12.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![监控设备](img/B04321_01_12.jpg)'
- en: Along with a stream of useful debug information, the device monitor gives us
    direct access to its data, via a file explorer and tools that allow us to send
    it calls, SMS messages and set it to fake locations.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 除了大量有用的调试信息外，设备监控器还直接提供了对数据的访问，通过文件浏览器和允许我们发送调用、短信消息并将其设置为虚假位置的工具。
- en: Tip
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The camera icon in the **Devices** toolbar can be used to take full-sized screenshots,
    even when the onscreen device is scaled.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**设备**工具栏中的相机图标可以用来截取全尺寸屏幕截图，即使屏幕上的设备被缩放。'
- en: Summary
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We have covered quite a lot for an introductory chapter, but we have encountered
    most of the essential tools that we will need later. By now, you will have a fully
    functional and up-to-date IDE, and know how to create and test apps on an AVD.
    You have seen some of the more important files and resources that are generated
    when an Android project is first created and should now understand where these
    files can be found within the project.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个入门章节来说，我们已经涵盖了相当多的内容，但我们已经遇到了我们以后需要的几乎所有基本工具。到目前为止，你将拥有一个功能齐全且最新的IDE，并且知道如何在AVD上创建和测试应用。你已经看到了在创建Android项目时生成的一些重要文件和资源，现在你应该理解这些文件在项目中的位置。
- en: Having had a look around the most prominent features of our development environment,
    we are now in a position to dig a little deeper, and see how we can build sophisticated
    and dynamic layouts, looking at how a Java code can bring these designs to life.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览了我们开发环境中最显著的功能之后，我们现在可以深入挖掘，看看我们如何构建复杂和动态的布局，以及如何通过Java代码使这些设计栩栩如生。
