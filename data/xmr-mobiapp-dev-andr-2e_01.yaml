- en: Chapter 1. The Anatomy of an Android App
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 Android应用程序的解剖结构
- en: We live in an age where technologies are being developed and have become more
    and more accessible than ever before. The rise of the mobile computing platform
    has taken the technology evolution to a new high. The phones and tablets are getting
    smarter day by day and becoming the alternatives to a traditional PC. In this
    fiercely competitive world of mobile computing, every traditional PC manufacturers
    to small start-ups are in the race brining the devices of various form factors.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们生活在一个技术正在发展和变得比以往任何时候都更容易获取的时代。移动计算平台的兴起将技术进化提升到了一个新的高度。手机和平板电脑正变得越来越智能，成为传统PC的替代品。在这个激烈竞争的移动计算世界中，从传统的PC制造商到小型初创公司都在竞相推出各种形态的设备。
- en: 'In this book, we will show you how to take advantage of your existing C# skills
    to write applications that run on Android powered devices. While most of this
    book will be focused on learning how to develop Android apps using C# and Xamarin.Android,
    we will start with a more general discussion of Android. What is Android? How
    does Android facilitate the task of creating great mobile apps? This chapter will
    help you answer these questions by providing a base-level understanding of the
    following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们将向您展示如何利用您现有的C#技能来编写在Android设备上运行的应用程序。虽然这本书的大部分内容将专注于学习如何使用C#和Xamarin.Android开发Android应用程序，但我们将从对Android的更一般性讨论开始。什么是Android？Android如何促进创建优秀的移动应用程序的任务？本章将通过提供以下主题的基础级理解来帮助您回答这些问题：
- en: An overview of the Android platform
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android平台概述
- en: Android platform versions and feature releases
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android平台版本和功能发布
- en: Android applications (building blocks)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android应用程序（构建块）
- en: The Android platform
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android平台
- en: The Android platform has been one of the most powerful, evolving, and advanced
    mobile operating systems developed in recent years, which provides various services
    and features, that helps developers to build rich mobile applications. Android
    is an open source operating system currently developed and maintained by Google.
    Due to its open source nature, it has a larger community base of developers and
    device manufacturers.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Android平台是近年来开发的最强大、最进化、最先进的移动操作系统之一，它提供了各种服务和功能，帮助开发者构建丰富的移动应用程序。Android是一个由Google开发和维护的开源操作系统。由于其开源性质，它拥有一个更大的开发者社区和设备制造商基础。
- en: The Android operating system was primarily designed for low powered computing
    phones, but later, its base was widen to various form factors, including smartphones,
    tablets, Android TV, and Wearables.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Android操作系统最初主要是为低功耗计算手机设计的，但后来，其基础被扩展到各种形态，包括智能手机、平板电脑、Android TV和可穿戴设备。
- en: Versions of Android
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android版本
- en: The Android operating system has evolved with a series of frequent updates since
    its initial beta release in November 2007\. Identifying the version of the Android
    platform can be somewhat confusing; there is a version number, API level, and
    nickname, and these are sometimes used interchangeably.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 自2007年11月首次发布测试版以来，Android操作系统经历了一系列频繁的更新。识别Android平台的版本可能会有些令人困惑；有一个版本号、API级别和昵称，有时它们被交替使用。
- en: The version number represents a release of the platform. Sometimes, a new release
    is created to deliver new capabilities, while sometimes it is created to fix bugs.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 版本号代表平台的发布。有时，创建一个新的发布是为了提供新的功能，而有时是为了修复错误。
- en: The API level is an integer value that represents a set of capabilities. As
    the API level increases, new capabilities are delivered to the developer.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: API级别是一个整数值，代表一组功能。随着API级别的提高，新的功能被提供给开发者。
- en: 'The following table lists all the major Android platform releases in the reverse
    chronological order:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格按逆时间顺序列出了所有主要的Android平台发布版本：
- en: Platform version
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 平台版本
- en: API level
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: API级别
- en: Release date
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期
- en: Feature updates
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 功能更新
- en: 5.1 (Lollipop)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 5.1（棒棒糖）
- en: '22'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '22'
- en: 03/09/2015
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 03/09/2015
- en: Stability and performance improvements over Lollipop.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相比Lollipop的稳定性和性能改进。
- en: Adds multiple SIM card support.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了对多张SIM卡的支持。
- en: 5.0 (Lollipop)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 5.0（棒棒糖）
- en: '21'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '21'
- en: 11/12/2014
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 11/12/2014
- en: Introduced new runtime ART that replaced Dalvik.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入了新的运行时ART，取代了Dalvik。
- en: A complete UI overhaul with an introduction to material design.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完全的UI重设计和材料设计的介绍。
- en: Improved lock screen notification.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了锁屏通知。
- en: Updated the media API for better camera capture and media playback.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新了媒体API，以实现更好的相机捕获和媒体播放。
- en: Added the project Volta to increase the battery life.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了 Volta 项目以增加电池寿命。
- en: 4.4W, 4.4W.1, 4.4W.2 (KitKat Wearables)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 4.4W, 4.4W.1, 4.4W.2 (奇巧可穿戴)
- en: '20'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '20'
- en: 06/25/2014
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 06/25/2014
- en: Initial release for the Android Wear platform's smart watches.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android Wear 平台智能手表的初始发布。
- en: Fork of same Android 4.4 KitKat code branch with added wearable extensions.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同一 Android 4.4 奇巧代码分支的分支，增加了可穿戴扩展。
- en: 4.4.x (KitKat)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 4.4.x (奇巧)
- en: '19'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '19'
- en: 10/31/2013
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 10/31/2013
- en: The default interface is made white instead of blue.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认界面改为白色而不是蓝色。
- en: Added wireless printing capability.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了无线打印功能。
- en: Support for translucent navigation and status bars.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持半透明导航栏和状态栏。
- en: Ability for apps to use immersive mode to allow navigation and status bars hidden
    while maintaining user interaction.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许应用程序使用沉浸模式，在隐藏导航栏和状态栏的同时保持用户交互。
- en: Action overflow menu buttons are always visible, even for the devices with the
    hardware Menu key.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动作溢出菜单按钮始终可见，即使对于具有硬件菜单键的设备也是如此。
- en: New framework (property animation) for UI transitions.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的 UI 转换框架（属性动画）。
- en: Built-in screen recording feature.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置屏幕录制功能。
- en: Introduced **Android Runtime** (**ART**) as a new experimental runtime environment.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入了新的实验性运行时环境 **Android Runtime**（**ART**）。
- en: Other security enhancements and bug fixes.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他安全增强和错误修复。
- en: 4.3.x (Jelly Bean)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 4.3.x (蜂巢豆)
- en: '18'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '18'
- en: 07/24/2013
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 07/24/2013
- en: Supports restricted access mode for new user profiles.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持新用户配置文件的受限访问模式。
- en: Introduced a platform support for Khronos OpenGL ES 3.0, providing better performance
    for 2D and 3D graphics rendering.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入了 Khronos OpenGL ES 3.0 的平台支持，为 2D 和 3D 图形渲染提供了更好的性能。
- en: Bluetooth low energy support.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持蓝牙低功耗。
- en: Optimized location and sensor capabilities, including hardware geo fencing optimizations.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化了位置和传感器功能，包括硬件地理围栏优化。
- en: Many security enhancements, performance enhancements, and bug fixes.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多安全增强、性能增强和错误修复。
- en: 4.2, 4.2.2 (Jelly Bean)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 4.2, 4.2.2 (蜂巢豆)
- en: '17'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '17'
- en: 11/13/2012
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 11/13/2012
- en: Improved the hardware-accelerated 2D renderer to make the animation smoother.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了硬件加速的 2D 渲染器，使动画更平滑。
- en: Introduced the interactive screensaver mode called Daydream.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入了名为 Daydream 的交互式屏保模式。
- en: Adds a presentation window and external display support.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了演示窗口和外部显示支持。
- en: Full native support for **right-to-left** (**RTL**) layouts.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完全支持从右到左（**RTL**）布局。
- en: Numerous bug fixes.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数量众多的错误修复。
- en: 4.1, 4.1.x (Jelly Bean)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 4.1, 4.1.x (蜂巢豆)
- en: '16'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '16'
- en: 07/09/2012
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 07/09/2012
- en: Faster and smoother interface.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 界面更快更平滑。
- en: Bi-directional text and other language support.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 双向文本和其他语言支持。
- en: Introduced expandable notification.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入了可展开的通知。
- en: Added the new activity launcher animation via `ActivityOptions`.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 `ActivityOptions` 添加了新的活动启动动画。
- en: Improved `WebView` to provide better HTML5 video viewing and canvas animation.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了 `WebView` 以提供更好的 HTML5 视频观看和画布动画。
- en: 4.0.3, 4.0.4 (Ice Cream Sandwich)
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 4.0.3, 4.0.4 (冰淇淋三明治)
- en: '15'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '15'
- en: 12/16/2011
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 12/16/2011
- en: Bug fixes and stability improvements.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误修复和稳定性改进。
- en: New APIs, including a social stream API in the Contacts provider.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的 API，包括联系人提供者的社交流 API。
- en: Better camera performance.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相机性能更好。
- en: Smoother screen rotation.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 屏幕旋转更平滑。
- en: 4.0, 4.0.1, 4.0.2 (Ice Cream Sandwich)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 4.0, 4.0.1, 4.0.2 (冰淇淋三明治)
- en: '14'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '14'
- en: 10/19/2011
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 10/19/2011
- en: Major interface overhaul with the new Roboto font family.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用新的 Roboto 字体家族进行了主要界面重整。
- en: Unified the UI framework to work for phones, tablets, and more.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 统一了 UI 框架，使其适用于手机、平板电脑等。
- en: Lock screen improvements with the ability to access apps from lock screen.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了锁屏，能够从锁屏访问应用程序。
- en: Introduced the new voice input engine.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入了新的语音输入引擎。
- en: Improved media streaming capabilities.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了媒体流传输能力。
- en: Ability to shut down applications from the recent apps list with a swipe.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过滑动从最近应用列表中关闭应用程序。
- en: Hardware acceleration of the UI.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UI 的硬件加速。
- en: 3.2.x (Honeycomb)
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2.x (蜂巢)
- en: '13'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '13'
- en: 07/15/2011
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 07/15/2011
- en: Optimizations for a wider range of tablets.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为更广泛的平板电脑进行了优化。
- en: Added a system-wide sync facility that made the SD card files accessible to
    apps from the system media store.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了系统级同步功能，使 SD 卡文件可通过系统媒体存储对应用程序可用。
- en: Bug fixes and other minor improvements.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误修复和其他小改进。
- en: 3.1 (Honeycomb)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1 (蜂巢)
- en: '12'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '12'
- en: 05/10/2011
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 05/10/2011
- en: Connectivity API for USB accessories.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB 配件连接 API。
- en: Various UI framework updates.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新了各种 UI 框架。
- en: Resizable home screen app widgets.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可调整大小的主屏幕应用程序小部件。
- en: Support for an HTTP proxy for each connected Wi-Fi access point.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持每个连接的 Wi-Fi 接入点的 HTTP 代理。
- en: High-performance Wi-Fi lock, maintaining high-performance Wi-Fi connections
    when the device's screen is off.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高性能Wi-Fi锁定，在设备屏幕关闭时保持高性能Wi-Fi连接。
- en: Updated the animation framework class with `ViewPropertyAnimator` and animating
    background color.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新了动画框架类，增加了`ViewPropertyAnimator`和背景颜色动画。
- en: 3.0 (Honeycomb)
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 3.0（蜂巢）
- en: '11'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '11'
- en: 02/22/2011
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 02/22/2011
- en: Added a new user interface, which optimized tablets.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了新的用户界面，优化了平板电脑。
- en: Introduced an action bar, giving access to contextual quick actions at the top
    of the screen.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入了一个操作栏，可在屏幕顶部访问上下文快速操作。
- en: Added the fragment, a self-contained container that can be embedded in an activity.
    It has its own life cycle callback and is used to design tablets.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了片段，一个可以嵌入到活动中的自包含容器。它有自己的生命周期回调，用于设计平板电脑。
- en: Added the system-wide clipboard.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了系统级剪贴板。
- en: Improved the status bar notification to support more content-rich notifications.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了状态栏通知以支持更多内容丰富的通知。
- en: Added new animation frameworks.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了新的动画框架。
- en: 2.3.3, 2.3.7 (Gingerbread)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 2.3.3、2.3.7（姜饼）
- en: '10'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '10'
- en: 02/02/2011
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 02/02/2011
- en: Improvements and bug fixes.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进和错误修复。
- en: 2.3, 2.3.1, 2.3.2 (Gingerbread)
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 2.3、2.3.1、2.3.2（姜饼）
- en: '9'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '9'
- en: 12/06/2010
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 12/06/2010
- en: Updated the user interface design for simplicity and speed.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新了用户界面设计，以实现简洁和快速。
- en: Added support for **Near Field Communication** (**NFC**).
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增加了支持**近场通信**（**NFC**）。
- en: Support for extra-large screen sizes and resolutions.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持更大的屏幕尺寸和分辨率。
- en: Native support for more sensors, including gyroscopes and barometers.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原生支持更多传感器，包括陀螺仪和气压计。
- en: Introduced the concurrent garbage collection for improved app responsiveness
    and smoother animation.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入了并发垃圾回收，以改善应用程序响应性和更平滑的动画。
- en: 2.2.x (Froyo)
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 2.2.x（冻酸奶）
- en: '8'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '8'
- en: 05/20/2010
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 05/20/2010
- en: Improved speed, memory, and performance optimizations.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了速度、内存和性能优化。
- en: Improved application speed using the JIT compilation.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用即时编译技术提高应用程序速度。
- en: Support for the **Android Cloud to Device Messaging** (**C2DM**) service.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持Android云到设备消息服务（**C2DM**）。
- en: Support for installing applications to the SD card memory.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持将应用程序安装到SD卡内存。
- en: USB tethering and Wi-Fi hotspot functionality.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB网络共享和Wi-Fi热点功能。
- en: Bug fixes and security patch updates.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误修复和安全补丁更新。
- en: 2.1 (Eclair)
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1（clair）
- en: '7'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '7'
- en: 01/12/2010
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 01/12/2010
- en: Minor API changes and bug fixes.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行了小的API更改和错误修复。
- en: 2.0.1 (Eclair)
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 2.0.1（clair）
- en: '6'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '6'
- en: 12/03/2009
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 12/03/2009
- en: Minor API changes and bug fixes.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行了小的API更改和错误修复。
- en: 2.0 (Donut)
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 2.0（甜甜圈）
- en: '5'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '5'
- en: 10/26/2009
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 10/26/2009
- en: Updated camera features, including flash, digital zoom, white balance, color
    effect, and scene mode.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新了相机功能，包括闪光灯、数码变焦、白平衡、色彩效果和场景模式。
- en: Optimized hardware speed and UI overhaul.
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化硬件速度和用户界面全面升级。
- en: The `MotionEvent` class enhanced to track multi-touch events.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MotionEvent`类增强以跟踪多点触摸事件。'
- en: Expanded account sync, allowing users to add multiple accounts to a device.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展账户同步功能，允许用户将多个账户添加到设备中。
- en: 1.6 (Donut)
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 1.6（甜甜圈）
- en: '4'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '4'
- en: 09/15/2009
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 09/15/2009
- en: Multilingual speech synthesis engine added to convert a text to speech.
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了多语言语音合成引擎，用于将文本转换为语音。
- en: Updated support for CDMA/EVDO, 802.1x, VPNs technologies.
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新了对CDMA/EVDO、802.1x、VPN技术支持。
- en: 1.5 (Cupcake)
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5（纸杯蛋糕）
- en: '3'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '3'
- en: 04/27/2009
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 04/27/2009
- en: Added third-party keyboard support with text prediction and user dictionary.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了带有文本预测和用户词典的第三方键盘支持。
- en: Video recording and playback in MPEG-4 and 3GP formats.
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持MPEG-4和3GP格式的视频录制和播放。
- en: Added copy and paste features in the web browser.
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在网页浏览器中添加了复制和粘贴功能。
- en: Animated screen transitions.
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动画屏幕转换。
- en: Home screen widget support.
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持主屏幕小部件。
- en: '1.1'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '1.1'
- en: '2'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '2'
- en: 02/09/2009
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 02/09/2009
- en: First Android platform update.
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首次Android平台更新。
- en: Updated the Map application.
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新了地图应用程序。
- en: In-call screen timeout default is now longer when using the speakerphone.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用免提电话时，通话屏幕超时默认值现在更长。
- en: Adds support for saving attachments from MMS.
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了对从MMS保存附件的支持。
- en: Adds support for marquee in layouts.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在布局中添加了对滚动公告的支持。
- en: Various bug fixes.
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了各种错误。
- en: '1.0'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '1.0'
- en: '1'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '1'
- en: 09/23/2008
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 09/23/2008
- en: First commercial version of the Android platform.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首个Android平台的商业版本。
- en: Included apps such as Android Market, Gmail, Camera, Calendar, Contacts, Google
    Talk, Map, Media Player, Picture, Settings, and Browser.
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含了如Android市场、Gmail、相机、日历、联系人、Google Talk、地图、媒体播放器、图片、设置和浏览器等应用程序。
- en: Wi-Fi and Bluetooth support.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持Wi-Fi和蓝牙。
- en: Instant messaging, text messaging, and MMS support.
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持即时通讯、短信和MMS。
- en: 'The Android platform is comprised of applications, operating systems, runtime,
    middleware, services, and libraries. The following diagram provides a high-level
    view of how each layer in the Android platform is organized, and the subsequent
    sections provide a brief description of each major component:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: Android平台由应用程序、操作系统、运行时、中间件、服务和库组成。以下图表提供了一个高级视图，说明了Android平台中每一层的组织方式，接下来的部分提供了每个主要组件的简要描述：
- en: '![](img/E5ZZ97vm.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/E5ZZ97vm.jpg)'
- en: The Linux kernel
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux 内核
- en: Android is a Linux-based operating system designed and customized primarily
    for mobile devices, such as smartphones and tablets. Positioned at the bottom
    of the Android stack, the Linux kernel provides the interface between device hardware
    and Android software layers. The latest versions of Android are based on the Linux
    kernel version 3.4 or above (version 2.6 for versions prior to Android 4.0).
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Android是一个基于Linux的操作系统，主要设计和定制用于移动设备，如智能手机和平板电脑。位于Android堆栈的底部，Linux内核为设备硬件和Android软件层之间提供了接口。Android的最新版本基于Linux内核版本3.4或更高（Android
    4.0之前的版本为2.6）。
- en: The Linux kernel provides some of the core system services such as memory management,
    process and task management, power management, networking stack, and various device
    drivers to interact with the device hardware.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: Linux内核提供了一些核心系统服务，如内存管理、进程和任务管理、电源管理、网络堆栈以及各种设备驱动程序，以与设备硬件交互。
- en: Native libraries
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本地库
- en: Android is delivered with a set of native libraries written in C/C++, which
    provide various types of services. These libraries predominantly come from the
    open source community.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: Android提供了一套用C/C++编写的本地库，提供各种类型的服务。这些库主要来自开源社区。
- en: The Android runtime
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android运行时
- en: The Android apps run within the **Dalvik Virtual Machine** (**Dalvik VM**),
    which is similar to a Java VM but has been optimized for devices with limited
    memory and processing capacity.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Android应用在**Dalvik虚拟机（Dalvik VM**）中运行，类似于Java VM，但已针对内存和处理能力有限的设备进行了优化。
- en: 'The Android apps are initially compiled to the Java byte code using the Java
    compiler, but they have an additional compilation step that transforms the Java
    byte code to the Dalvik byte code using a process called the **Just in Time**
    (**JIT**) compilation. The output produced by the JIT compiler is suitable to
    run within the Dalvik VM:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: Android应用最初使用Java编译器编译成Java字节码，但它们有一个额外的编译步骤，使用称为**即时编译（JIT**）的过程将Java字节码转换为Dalvik字节码。JIT编译器产生的输出适合在Dalvik
    VM中运行：
- en: '![](img/xxjTzrxi.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/xxjTzrxi.jpg)'
- en: Dalvik is delivered with the Android core libraries. These libraries do not
    align with a specific Java platform (JSE, JEE, or JME) but rather act as a hybrid
    platform most closely aligned with JSE, minus the user interface-focused components,
    AWT and Swing. The **Android Application Framework** (**AAF**) provides an alternate
    means of creating user interfaces.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: Dalvik与Android核心库一起提供。这些库并不与特定的Java平台（JSE、JEE或JME）对齐，而更像是与JSE最接近的混合平台，但不包括以用户界面为中心的组件AWT和Swing。**Android应用框架（AAF**）提供了一种创建用户界面的替代方法。
- en: Although Dalvik worked pretty well, the downside is that there is a huge lag
    every time the application is launched. That's where the new virtual machine,
    ART, comes in.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Dalvik运行得相当不错，但缺点是每次应用启动时都会有一个巨大的延迟。这就是新虚拟机ART出现的地方。
- en: ART is precursor to Dalvik. It is the new application runtime introduced in
    Android 4.4 (KitKat) as a new experimental runtime environment and is implemented
    fully in Android 5.0 (Lollipop). This is primarily designed for performance and
    an improved app start up time. The primary difference between ART and Dalvik is
    the compilation approach. While Dalvik uses JIT, ART employs a new concept called
    **Ahead-of-Time** (**AOT**). What this means is that new apps are getting compiled
    during installation, before they are even launched. To learn more about ART, you
    can refer to [https://source.android.com/devices/tech/dalvik/](https://source.android.com/devices/tech/dalvik/).
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: ART是Dalvik的前身。它是Android 4.4（KitKat）中引入的新应用运行时，作为新的实验性运行环境，并在Android 5.0（Lollipop）中得到完全实现。这主要是为了性能和改进的应用启动时间。ART与Dalvik的主要区别在于编译方法。虽然Dalvik使用JIT，但ART采用了一种称为**即时编译（AOT**）的新概念。这意味着新应用在安装期间被编译，甚至在它们启动之前。要了解更多关于ART的信息，您可以参考[https://source.android.com/devices/tech/dalvik/](https://source.android.com/devices/tech/dalvik/)。
- en: The application framework
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用框架
- en: 'The application framework is the part of the Android platform, which is most
    familiar to developers. It is delivered as a set of Java libraries and allows
    you to build user interfaces, interact with device capabilities such as the camera
    or location services, load and work with various types of application resources,
    and perform many more useful tasks. Here are some of the major services:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序框架是Android平台的一部分，这是开发者最熟悉的部分。它作为一组Java库提供，允许你构建用户界面，与设备功能（如相机或位置服务）交互，加载和处理各种类型的应用程序资源，并执行许多其他有用任务。以下是一些主要服务：
- en: '**ActivityManager**: This service is responsible for the activity life cycle,
    state management, and controls the activity stack. Later, in this chapter, we
    will learn more about the activity life cycle.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**活动管理器**: 该服务负责活动生命周期、状态管理和控制活动堆栈。稍后，在本章中，我们将了解更多关于活动生命周期的内容。'
- en: '**WindowManager**: This service is responsible for managing the z-order list
    of screens. Each activity is attached to a window that is used to display the
    content on the screen, which is controlled by `WindowManager`.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**窗口管理器**: 该服务负责管理屏幕的z顺序列表。每个活动都附加到一个窗口上，用于在屏幕上显示内容，该窗口由`WindowManager`控制。'
- en: '**Content providers**: This provides an interface to publish and share data
    between applications.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内容提供者**: 这提供了一个接口，用于在应用程序之间发布和共享数据。'
- en: '**View system**: This provides a set of UI controls to build an application
    user interface.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视图系统**: 这提供了一套UI控件来构建应用程序用户界面。'
- en: '**NotificationManage**: This service manages application alerts and notifications.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通知管理器**: 该服务管理应用程序警报和通知。'
- en: '**Resource** Manager: This service provides access to resources, such as user
    interface layout, strings, color, dimensions, and so on.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源管理器**: 该服务提供对资源（如用户界面布局、字符串、颜色、尺寸等）的访问。'
- en: '**PackageManager**: This holds the metadata of all the installed applications
    on the device.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**包管理器**: 这包含设备上所有已安装应用程序的元数据。'
- en: '**TelephonyManager**: This provides information on the telephone services available
    on the device, such as status and subscriber information, to the application.'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电话管理器**: 这为应用程序提供有关设备上可用的电话服务的信息，例如状态和订阅者信息。'
- en: '**LocationManager**: This provides access to system location services.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**位置管理器**: 这提供了对系统位置服务的访问。'
- en: The application layer
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用程序层
- en: At the top of the stack sits the humble application, the component that actually
    delivers value to the user. Android comes with a set of applications that provide
    base functionality such as managing contacts, using the phone, checking e-mails,
    and browsing the web. The key to Android's success is the vast array of third-party
    applications that can be installed, which allow users to do things, such as stream
    live sports events, edit a movie captured on the phone, interact with friends
    through their favorite social media site, and much more.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在堆栈的顶部是谦逊的应用程序，这是实际向用户交付价值的组件。Android自带一系列提供基本功能的应用程序，例如管理联系人、使用电话、检查电子邮件和浏览网页。Android成功的关键是庞大的第三方应用程序库，用户可以通过安装这些应用程序来完成各种事情，例如直播体育赛事、编辑手机上捕获的电影、通过他们最喜欢的社交媒体网站与朋友互动，等等。
- en: The building blocks of the Android application
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android应用程序的构建块
- en: Now, let's spend some time discussing applications—those things we write that
    provide value to the user. The Android applications are made up of various types
    of classes and resources. The following sections describe the different building
    blocks that an application can be composed of.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们花些时间讨论应用程序——那些我们编写并提供给用户价值的东西。Android应用程序由各种类型的类和资源组成。以下各节描述了应用程序可以由哪些不同的构建块组成。
- en: The Android packages (.apk)
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android包（.apk）
- en: Applications are delivered for installation in an Android package format. An
    Android package is created as the result of compiling an Android app and is an
    archive file with an `.apk` extension.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序以Android包格式交付安装。Android包是在编译Android应用程序的结果中创建的，是一个具有`.apk`扩展名的存档文件。
- en: 'An Android package contains all of the code and the supporting files required
    to run a single application, including the following:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: Android包包含运行单个应用程序所需的全部代码和支持文件，包括以下内容：
- en: Dalvik executables (`.dex` files)
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dalvik可执行文件（.dex文件）
- en: Resources
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源
- en: Native libraries
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原生库
- en: The application manifest
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序清单
- en: The Android packages can be installed directly via e-mails, URLs, or memory
    cards. They can also be installed indirectly through app stores such as Google
    Play.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓包可以直接通过电子邮件、URL或内存卡安装。它们也可以通过应用商店（如Google Play）间接安装。
- en: The application manifest
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用程序清单
- en: 'All the Android applications have a manifest file (`AndroidManifest.xml`) that
    tells the Android platform everything it needs to know to successfully run the
    application, including the following:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 所有安卓应用程序都有一个清单文件（`AndroidManifest.xml`），它告诉安卓平台运行应用程序所需知道的一切，包括以下内容：
- en: Minimum API level required by the application
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序所需的最低API级别
- en: Hardware/software features used or required by the application
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序使用或要求的硬件/软件功能
- en: Permissions required by the application such as location or camera
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序所需的权限，如位置或摄像头
- en: The initial screen (Android activity) to start with when the application is
    launched
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当应用程序启动时，要开始的初始屏幕（安卓活动）
- en: The ability to install the application in the external memory
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在外部存储中安装应用程序的能力
- en: Libraries, other than AAF, required by the application and so on
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序所需的库（除AAF外）等
- en: Activities
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动
- en: One of the most fundamental parts of an Android application is an activity.
    An activity represents a single screen with a user interface through which a user
    can interact with the application. A single application is composed of many activities.
    For example, a phone book application can have multiple activities representing
    different functions, such as list contacts, add contacts, capture contact photos,
    and so on.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓应用中最基本的组成部分之一是活动。活动代表一个用户界面屏幕，用户可以通过它与应用程序进行交互。一个应用程序由许多活动组成。例如，电话簿应用程序可以包含多个活动，代表不同的功能，如列出联系人、添加联系人、捕捉联系人照片等。
- en: A user interacts with an activity through one or more Views, which are described
    later in this chapter. If you are familiar with the **Model-View-Controller**
    (**MVC**) pattern, you would have noticed that the activities fulfill the role
    of the controller.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 用户通过一个或多个视图与活动交互，这些视图将在本章后面进行描述。如果您熟悉**模型-视图-控制器**（**MVC**）模式，您会注意到活动扮演了控制器的角色。
- en: The life cycle of an activity
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动的生命周期
- en: 'Activities have a well-defined life cycle that can be described in terms of
    states, transitions, and events. The following diagram provides a graphical view
    of the life cycle of an activity:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 活动具有一个定义良好的生命周期，可以用状态、转换和事件来描述。以下图表提供了活动生命周期的图形视图：
- en: '![](img/uFpzoHIM.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![](img/uFpzoHIM.jpg)'
- en: 'The states depicted in the preceding diagram are derived, which means that
    there is no `State` variable on an activity that explicitly identifies one of
    these states, but the state is implied and useful for discussion. The following
    table describes the behavior of an activity based on its state:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 上图中描述的状态是派生的，这意味着活动上没有明确标识这些状态的`State`变量，但状态是隐含的，并且对讨论很有用。以下表格描述了活动基于其状态的行为：
- en: State
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 状态
- en: Description
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 描述
- en: '`Running`'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '`运行中`'
- en: The activity has been created and initialized and is visible and available to
    the user for interaction.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 活动已被创建和初始化，对用户可见并可交互。
- en: '`Paused`'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '`暂停`'
- en: The activity view is being partially blocked by another activity.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 活动视图被另一个活动部分遮挡。
- en: '`Stopped`'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '`已停止`'
- en: The activity is no longer visible to the user. The activity has not been destroyed,
    and the state is retained but it is placed in the background and no processing
    is allowed.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 活动对用户不再可见。活动尚未被销毁，状态被保留，但被放置在后台，不允许进行任何处理。
- en: The events of an activity
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动的各种事件
- en: 'During the transition between states, a series of events are called on the
    activity. These events provide developers a platform for various types of processing.
    The following table describes the different event callbacks and typically, the
    processing done in the application during each callback:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 在状态之间的转换过程中，会在活动上调用一系列事件。这些事件为开发者提供了各种类型处理的平台。以下表格描述了不同的回调事件以及通常在每个回调期间在应用程序中执行的处理：
- en: Event
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 事件
- en: Called
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 被调用
- en: Typical processing
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 典型处理
- en: '`onCreate`'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '`onCreate`'
- en: When an activity is created, generally from a user choosing to start the app
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 当活动被创建时，通常是从用户选择启动应用程序开始的
- en: This creates Views
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这创建了视图
- en: This initializes variables
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这初始化了变量
- en: This allocates long-lived resources
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这分配了长期资源
- en: '`onStart`'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '`onStart`'
- en: After `onCreate` and right before an activity becomes visible to the user
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在`onCreate`之后，在活动对用户可见之前
- en: This allocates resources
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这会分配资源
- en: '`onResume`'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '`onResume`'
- en: Before an activity is ready to start interacting with a user and immediately
    after the `onStart` callback
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在活动准备好与用户交互以及`onStart`回调之后立即
- en: This initializes UI widgets for viewing
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这会初始化用于查看的UI小部件
- en: This starts animations or videos
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这会启动动画或视频
- en: This starts listening for GPS updates
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这会开始监听GPS更新
- en: '`onPause`'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '`onPause`'
- en: When an activity's view has become partially blocked and is not the focus of
    input
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个活动的视图部分被遮挡且不是输入焦点时
- en: This commits unsaved updates
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这会提交未保存的更新
- en: This pauses animations or videos
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这会暂停动画或视频
- en: This stops listening for GPS updates
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这会停止监听GPS更新
- en: '`onStop`'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '`onStop`'
- en: When an activity's view is no longer visible to the user
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 当活动的视图对用户不再可见时
- en: This releases resources
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这会释放资源
- en: '`onRestart`'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`onRestart`'
- en: An activity is being placed back in the foreground, generally, because the user
    has selected the back button
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 活动正在回到前台，通常是因为用户选择了返回按钮
- en: This allocates resources
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这会分配资源
- en: '`onDestroy`'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '`onDestroy`'
- en: Before the activity is destroyed
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在活动被销毁之前
- en: This cleans up resources that may have been allocated by an activity
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这会清理活动可能分配的资源
- en: Something that is not obvious to developers and new to Android is the way the
    framework deals with device orientation changes. By default, when the orientation
    of a device is changed from portrait to landscape, Android destroys and recreates
    existing activities to help ensure that the most appropriate layout is used for
    the current device orientation.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 对于开发者和Android新手来说，框架处理设备方向变化的方式可能并不明显。默认情况下，当设备方向从纵向变为横向时，Android会销毁并重新创建现有活动，以确保使用最适合当前设备方向的布局。
- en: If needed, this behavior can be overridden and activities can be retained. We
    will discuss special considerations in dealing with state and other processing
    concerns related to this topic in Chapter 6, *Making Your App Orientation-aware*.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，此行为可以被覆盖，活动可以被保留。我们将在第6章“使您的应用方向感知”中讨论处理与此主题相关的状态和其他处理问题的特殊考虑。
- en: Fragments
  id: totrans-272
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 片段
- en: A fragment is a reusable user interface component, introduced since Android
    3.0 (API level 11), and is primarily intended to build dynamic and modular user
    interfaces for different screen sizes. A fragment is always embedded in an activity,
    and like any other view, it lives in a `ViewGroup` (**ViewGroups** are explained
    in more detail later in this chapter) inside the view hierarchy. Like an activity,
    a fragment defines its own layout and has its own life cycle callbacks. When designing
    your application to support multiple form factors, fragments can be reused to
    optimize the user experience based on the available screen space.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 片段是一个可重用的用户界面组件，自Android 3.0（API级别11）以来引入，主要用于构建适用于不同屏幕尺寸的动态和模块化用户界面。片段始终嵌入在活动中，并且像任何其他视图一样，它存在于视图层次结构中的`ViewGroup`（**ViewGroups**将在本章后面详细解释）中。像活动一样，片段定义自己的布局并有自己的生命周期回调。在设计支持多种形态的应用程序时，可以通过重用片段来优化基于可用屏幕空间的用户体验。
- en: Let's examine how fragments can be used to develop a modular user interface
    with the following example.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过以下示例来考察如何使用片段来开发模块化用户界面。
- en: 'The following figure depicts the wireframe of a newsreader application, designed
    to work on both smartphone and tablet devices. As a tablet has more screen space,
    the news list and the details are presented as split views in a single activity,
    whereas the phone uses two different activities for this:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了新闻阅读器应用的线框图，该应用旨在在智能手机和平板设备上运行。由于平板电脑有更多的屏幕空间，新闻列表和详情以分割视图的形式在一个活动中呈现，而手机则使用两个不同的活动来处理此功能：
- en: '![](img/XkseWZq2.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/XkseWZq2.jpg)'
- en: 'The Android smartphone uses two activities: **ActivityA** containing **FragmentA**
    is used to show the news list and **ActivityB** containing **FragmentB** is used
    to show the details of the selected news. In a tablet, we have a single activity
    **ActivityA** that contains both **FragmentA** and **FragmentB.**'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓智能手机使用两个活动：包含**FragmentA**的**ActivityA**用于显示新闻列表，包含**FragmentB**的**ActivityB**用于显示所选新闻的详情。在平板电脑上，我们有一个包含**FragmentA**和**FragmentB**的单个活动**ActivityA**。
- en: As you can see here, **FragmentA** and **FragmentB** are the same implementation
    and are reused in different layout configurations to provide a different user
    experience on both the phone and tablet.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，**FragmentA**和**FragmentB**是相同的实现，并在不同的布局配置中被重用来在手机和平板电脑上提供不同的用户体验。
- en: The fragment life cycle
  id: totrans-279
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 片段生命周期
- en: Unlike the activity life cycle, understanding the fragment life cycle can be
    a bit tricky. In the following section, we will dig more into the fragment behavior
    and its life cycle methods.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 与活动生命周期不同，理解片段生命周期可能有点棘手。在下一节中，我们将更深入地探讨片段的行为及其生命周期方法。
- en: The Android fragment has its own life cycle method, which is very similar to
    an activity. It contains all of the activity life cycle methods and is supplied
    with some additional callback methods. Fragments are always embedded in an activity,
    so its callbacks are directly affected due to the host activities' life cycle.
    For example, if the host activity receives `onStop()`, all the attached fragments
    also receive the `onStop()` callback.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: Android片段有自己的生命周期方法，这与活动非常相似。它包含所有活动生命周期方法，并提供了额外的回调方法。片段始终嵌入在活动中，因此其回调直接受到宿主活动生命周期的直接影响。例如，如果宿主活动收到`onStop()`，所有附加的片段也会收到`onStop()`回调。
- en: 'The following diagram provides a graphical view of the fragment life cycle:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图提供了片段生命周期的图形视图：
- en: '![](img/wePfR5c7.jpg)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![](img/wePfR5c7.jpg)'
- en: 'Let''s take a look at each of the fragment life cycle events that gets called:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看每个被调用的片段生命周期事件：
- en: '`onInflate`: This event is called only if we define a fragment directly in
    an activity layout using the `fragment` tag, and while the content view of the
    activity is being inflated (typically, when `setContentView()` is called on an
    activity). This method passes `AttributeSet` that holds all the fragment attributes
    passed from the `fragment` tag. These attributes can be stored for later use.
    At this stage, the fragment is not even associated with an activity, and hence,
    we cannot perform any user interface-related tasks.'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onInflate`: 仅当我们直接在活动布局中使用`fragment`标签定义片段，并且活动的内容视图正在填充时（通常在活动上调用`setContentView()`时），会调用此事件。此方法传递包含所有从`fragment`标签传递的片段属性的`AttributeSet`。这些属性可以存储以供以后使用。在这个阶段，片段甚至还没有与活动关联，因此我们无法执行任何与用户界面相关的任务。'
- en: '`onAttach`: This is called once the fragment instance is associated with an
    activity.'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onAttach`: 当片段实例与活动关联时，会调用此方法。'
- en: '`onCreate`: This event is called after `onAttach` and before `onCreateView`;
    when the fragment instance is created or recreated. At this point, the base activity
    that holds this fragment is in the process of being created. At this point, you
    may use a background thread to get data for the fragment to use.'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onCreate`: 在`onAttach`之后和`onCreateView`之前调用此事件；当片段实例被创建或重新创建时。在这个时候，持有此片段的基活动正处于创建过程中。在这个时候，你可以使用后台线程为片段获取数据。'
- en: '`onCreateView`: At this point, the fragment instantiates its user interface
    and loads the view object hierarchy it contains. This method passes three arguments:
    `LayoutInflater`, `ViewGroup`, and `bundle`. The `LayoutInflater` argument can
    be used to inflate any layout for a fragment. A `bundle` specifies whether the
    fragment is created freshly or recreated. If it is recreated from the previous
    saved state, then the bundle will be non-null.'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onCreateView`: 在这个阶段，片段实例化其用户界面并加载它包含的视图对象层次结构。此方法传递三个参数：`LayoutInflater`、`ViewGroup`和`bundle`。`LayoutInflater`参数可用于为片段填充任何布局。`bundle`指定片段是全新创建还是重新创建。如果是从之前的保存状态重新创建，则该bundle将非空。'
- en: '`onActivityCreated`: This method is called when the activity that contains
    the fragment has been created, and the fragment''s view hierarchy is instantiated.
    At this point, you can access the view by its ID using the `findViewById()` method
    and make any changes before it is visible to the user.'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onActivityCreated`: 当包含片段的活动被创建，并且片段的视图层次结构被实例化时，会调用此方法。在这个时候，你可以使用`findViewById()`方法通过ID访问视图，并在它对用户可见之前进行任何更改。'
- en: '`onStart`: This method is tied to the activity `onStart()` callback and is
    called when the fragment becomes visible to the user. At this point, the fragment
    is visible but not available for user interaction just yet.'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onStart`: 此方法与活动的`onStart()`回调相关联，当片段对用户可见时被调用。在这个时候，片段是可见的，但尚未准备好与用户交互。'
- en: '`onResume`: This method is called before the fragment is ready to start interacting
    with a user. At this point, the fragment is said to be running and the user is
    free to perform any operations on the app.'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onResume`: 在片段准备好开始与用户交互之前调用此方法。在这个时候，片段被认为是正在运行，用户可以自由地对应用执行任何操作。'
- en: '`onPause`: This method is tied to the activity `onPause()` callback and is
    called when the fragment is taken out of the foreground.'
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onPause`: 此方法与活动的`onPause()`回调相关联，并在片段被移出前台时调用。'
- en: '`onStop`: This method is tied to the activity `onStop()` callback and called
    when the fragment is not visible.'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onStop`: 此方法与活动的`onStop()`回调相关联，并在片段不可见时被调用。'
- en: '`onDestroyView`: This method tells the fragment that the view created from
    `onCreateView()` is now detached from the fragment. This callback is called after
    `onStop()` and before the `onDestroy()` method.'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onDestroyView`: 此方法通知片段由`onCreateView()`创建的视图现在已从片段中分离。此回调在`onStop()`之后和`onDestroy()`方法之前被调用。'
- en: '`onDestroy`: This method is called when the fragment is no longer in use. This
    is called after `onStop()` and before `onDetach()`.'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onDestroy`: 当片段不再使用时，会调用此方法。此方法在`onStop()`之后和`onDetach()`之前被调用。'
- en: '`onDetach`: This method is called after `onDestroy()`, and when the fragment
    is no longer attached to an activity.'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onDetach`: 在`onDestroy()`之后调用此方法，并且当片段不再附加到活动上时。'
- en: Services
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 服务
- en: Services are application components that run in the background to perform long-running
    operations with no direct access to the user interface. A typical long-running
    task can be periodic downloading of data from the Internet, persisting multiple
    records in a database, performing file I/O, fetching a phone contacts list, and
    so on. Such long-running tasks can be implemented using services to provide a
    smooth user experience by letting the user interact with other activities, while
    long-running jobs are being processed in the background.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 服务是运行在后台的应用组件，用于执行长时间运行的操作，且没有直接访问用户界面的权限。一个典型的长时间运行的任务可以是定期从互联网下载数据、在数据库中持久化多个记录、执行文件I/O、获取电话联系人列表等。这些长时间运行的任务可以通过服务实现，以提供平滑的用户体验，允许用户在后台处理长时间运行的任务时与其他活动交互。
- en: Content providers
  id: totrans-299
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内容提供者
- en: Content providers manage access to a central repository of data such as contacts.
    It provides you with a standard interface through which the other applications
    can access and manage the data repository.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 内容提供者管理对中央数据存储库（如联系人）的访问。它为你提供了一个标准接口，其他应用程序可以通过该接口访问和管理数据存储库。
- en: Broadcast receivers
  id: totrans-301
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 广播接收器
- en: Broadcast receivers are components that perform some type of processing in response
    to system-wide broadcasts. Broadcasts are generally initiated by the system for
    events such as low battery, taking a picture, or turning on Bluetooth. Applications
    may also choose to send broadcasts; a content provider might send a broadcast
    when data, such as a contact, has been updated. While broadcast receivers do not
    have a user interface, they may indirectly cause updates to a status.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 广播接收器是响应系统级广播执行某些类型处理的组件。广播通常由系统为低电量、拍照或开启蓝牙等事件启动。应用程序也可以选择发送广播；当数据（如联系人）更新时，内容提供者可能会发送广播。虽然广播接收器没有用户界面，但它们可能会间接导致状态更新。
- en: Views and ViewGroups
  id: totrans-303
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 视图和ViewGroup
- en: Everything that you see in an Android app is a View; buttons, labels, text boxes,
    and radio buttons are all examples of Views. Views are organized in a hierarchy
    using various types of ViewGroups. A ViewGroup is a special kind of View that
    is used to arrange (layout) other Views on the screen.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android应用中，你所看到的一切都是视图；按钮、标签、文本框和单选按钮都是视图的例子。视图通过各种类型的ViewGroup组织成层次结构。ViewGroup是一种特殊的视图，用于在屏幕上排列（布局）其他视图。
- en: Declarative versus programmatic View creation
  id: totrans-305
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 声明式与程序式视图创建
- en: 'Views and ViewGroups can be created using two different methods: programmatically
    or declaratively. When using a programmatic approach, a developer makes API calls
    to create and position each individual View on the screen. When using a declarative
    approach, a developer creates XML layout files that specify how Views should be
    arranged. The declarative method enjoys several advantages stated as follows:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 视图和ViewGroup可以使用两种不同的方法创建：程序式或声明式。当使用程序式方法时，开发者通过API调用创建和定位屏幕上的每个单独的视图。当使用声明式方法时，开发者创建XML布局文件，指定视图应该如何排列。声明式方法具有以下优点：
- en: It provides better separation of the visual design of an application from the
    processing logic
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了更好的应用视觉设计和处理逻辑之间的分离
- en: It allows multiple layouts to be created to support multiple devices or device
    configurations with a single code base
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它允许创建多个布局以支持单个代码库支持多个设备或设备配置
- en: Development tools, such as Android Studio and the Android plugins for Eclipse
    and Xamarin Studio Android designer, allow you to view the user interface as you
    build it, without the need to compile and execute your application after each
    change
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发工具，如Android Studio和Eclipse及Xamarin Studio的Android插件，Android设计师，允许您在构建用户界面时查看它，无需在每次更改后编译和执行应用程序
- en: While most developers prefer the declarative method of View creation; in practice,
    some combination of programmatic and declarative methods is often required.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然大多数开发者更喜欢声明性方法创建View；在实践中，通常需要程序性和声明性方法的某种组合。
- en: User interface widgets
  id: totrans-311
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户界面小部件
- en: Android provides a comprehensive set of user interface widgets that can be used
    to build a rich user experience. All of these widgets are subtypes of a View and
    can be organized into sophisticated layouts using various types of ViewGroups.
    All of the user interface widgets can be found in the `android.widget` package
    within the application framework.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: Android提供了一套全面的用户界面小部件，可用于构建丰富的用户体验。所有这些小部件都是View的子类型，可以使用各种类型的ViewGroups组织成复杂的布局。所有用户界面小部件都可以在应用程序框架中的`android.widget`包中找到。
- en: 'The following screenshot depicts some of the basic Android widgets:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了Android中的一些基本小部件：
- en: '![](img/ThiUXqjF.jpg)'
  id: totrans-314
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ThiUXqjF.jpg)'
- en: Common layouts
  id: totrans-315
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见布局
- en: 'The application framework has a number of subclasses of `ViewGroup`, each of
    which provides a unique and useful way of organizing content:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序框架有几个`ViewGroup`的子类，每个子类都提供了一种独特且有用的组织内容的方式：
- en: '![](img/dWevjEtX.jpg)'
  id: totrans-317
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dWevjEtX.jpg)'
- en: The preceding diagram depicts some of the common layout managers available in
    Android. Layout managers are the `ViewGroup` classes that act as containers to
    host child views or layouts. Each of these standard layout managers provides a
    specific strategy to manage the size and position of its children. For example,
    the `LinearLayout` class places its children either horizontally or vertically,
    one view adjacent to the other.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表示例展示了Android中的一些常见布局管理器。布局管理器是作为容器来托管子视图或布局的`ViewGroup`类。每个标准布局管理器都提供了一种特定的策略来管理其子的大小和位置。例如，`LinearLayout`类将其子元素水平或垂直排列，一个视图紧邻另一个视图。
- en: 'The following table lists the different types of layout managers available
    in Android:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了Android中可用的不同类型的布局管理器：
- en: Layout
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 布局
- en: Description
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 描述
- en: Scenario
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 场景
- en: Linear layout
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 线性布局
- en: This organizes its children into a single horizontal or vertical row and creates
    a scrollbar when required.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 此布局将子元素组织成单个水平或垂直行，并在需要时创建滚动条。
- en: Use this when widget positions flow horizontally or vertically.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 当小部件的位置水平或垂直流动时使用此布局。
- en: Relative layout
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 相对布局
- en: This organizes child objects relative to each other or to the parent.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 此布局将子对象相对于彼此或相对于父对象进行组织。
- en: Use this when widget positions can best be described in relationship to another
    widget (to the left of) or the boundary area of the parent (right side, centered).
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 当小部件的位置最好描述为相对于另一个小部件（在左侧）或父级的边界区域（右侧，居中）时使用此布局。
- en: Table layout
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 表格布局
- en: This organizes its children into rows and columns.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 此组织将其子元素排列成行和列。
- en: Use this when widget positions would naturally fit into rows and columns. This
    is great when multiple columns of entry and labels are needed.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 当小部件的位置自然适合于行和列时使用此布局。当需要多个列的输入和标签时，这非常出色。
- en: For complex layout scenarios, Android allows layouts to be nested. Deeply nested
    layouts can have an impact on the performance and should be avoided if possible.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 对于复杂的布局场景，Android允许嵌套布局。深度嵌套的布局可能会影响性能，如果可能的话应避免。
- en: Tip
  id: totrans-333
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://www.packtpub.com](http://www.packtpub.com)下载您购买的所有Packt Publishing书籍的示例代码文件。如果您在其他地方购买了此书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册以将文件直接通过电子邮件发送给您。
- en: Adapter layouts
  id: totrans-336
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 适配器布局
- en: 'For layouts that are driven by a dynamic data source, the application framework
    has a set of classes derived from `AdapterView`:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 对于由动态数据源驱动的布局，应用程序框架有一组从`AdapterView`派生的类：
- en: '![](img/AN5eT7Jh.jpg)'
  id: totrans-338
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/AN5eT7Jh.jpg)'
- en: 'The preceding diagram depicts two of the most common adapter layouts:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图示描述了两种最常见的适配器布局：
- en: '**ListView**: This organizes content from the data source into a scrolling
    single column list'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ListView**：这将从数据源组织内容到一个可滚动的单列列表中'
- en: '**GridView**: This organizes content from the data source into a grid of columns
    and rows'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GridView**：这将从数据源组织内容到一个列和行的网格中'
- en: XML layout files
  id: totrans-342
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XML布局文件
- en: 'To create a UI using a declarative method, Android provides an XML vocabulary
    with tags that define the various types of elements that can compose a View. The
    concept behind Android XML layout files is very similar to the way HTML tags are
    used to define web pages or Microsoft''s XAML tags are used to define **Windows
    Presentation Foundation** (**WPF**) user interfaces. The following example shows
    a simple View using a linear layout and containing a search entry field and search
    button:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用声明性方法创建UI，Android提供了一个带有标签的XML词汇表，这些标签定义了可以组成视图的各种类型元素。Android XML布局文件背后的概念与HTML标签用于定义网页或Microsoft的XAML标签用于定义**Windows
    Presentation Foundation**（**WPF**）用户界面的方式非常相似。以下示例展示了使用线性布局的简单视图，其中包含搜索输入字段和搜索按钮：
- en: '[PRE0]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Element and attribute names
  id: totrans-345
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 元素和属性名称
- en: Care has been taken to align the names for elements and attributes in the XML
    vocabulary with class and method names from the application framework. In the
    previous example, the element names `LinearLayout`, `TextView`, and `Button` correspond
    to class names in the application framework. Likewise, in the `Button` element,
    the `android:text` attribute corresponds to the `setText()` setter on the class.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 已经注意将XML词汇表中的元素和属性名称与应用程序框架中的类和方法名称对齐。在前面的示例中，元素名称`LinearLayout`、`TextView`和`Button`对应于应用程序框架中的类名称。同样，在`Button`元素中，`android:text`属性对应于类的`setText()`设置器。
- en: The View and layout identifiers
  id: totrans-347
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 视图和布局标识符
- en: 'Each View can have a unique integer ID associated with it and can be used to
    reference the View from within an application''s code. In the XML file, the ID
    is specified as a user-friendly text name. For example, consider the following
    line of code:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 每个视图都可以与一个唯一的整数ID相关联，并可用于在应用程序代码中引用视图。在XML文件中，ID被指定为一个用户友好的文本名称。例如，考虑以下代码行：
- en: '[PRE1]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In this example, the `@` operator tells the parser that it should treat the
    remainder of the string as an ID resource; the `+` symbol tells the parser that
    this is a new resource name that should be added to the resource file, `R.java`.
    The resource file defines integer constants that can be used to reference resources.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，`@`运算符告诉解析器将字符串的其余部分视为ID资源；`+`符号告诉解析器这是一个新的资源名称，应该添加到资源文件`R.java`中。资源文件定义了可以用于引用资源的整数常量。
- en: Using XML layouts from activities
  id: totrans-351
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在活动中使用XML布局
- en: 'XML layouts can easily be loaded by an application at runtime. This task is
    generally performed from within the `onCreate()` method of an activity using the
    `setContentView()` method. For example, consider the following line of code:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: XML布局可以在应用程序运行时轻松加载。这项任务通常是在活动的`onCreate()`方法中使用`setContentView()`方法来执行的。例如，考虑以下代码行：
- en: '[PRE2]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Intents
  id: totrans-354
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 意图
- en: 'Intents are messages that can be sent to the various types of components in
    an Android app in order to request some type of action to be performed. Intents
    may be used to accomplish any of the following:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 意图是消息，可以发送到Android应用程序中的各种类型组件，以请求执行某种类型的操作。意图可以用于完成以下任何一项：
- en: Start an activity with the option of receiving a result
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动一个活动，并可选择接收结果
- en: Start or stop a service
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动或停止服务
- en: Notify the component of conditions, such as low battery or time zone change
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通知组件条件，例如低电量或时区更改
- en: Request an action from another app, such as request the map app to display a
    location or request that the camera app take a picture and save it
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从另一个应用程序请求操作，例如请求地图应用程序显示位置或请求相机应用程序拍照并保存
- en: Resources
  id: totrans-360
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源
- en: Creating an Android application involves more than simply writing code. A rich
    mobile app requires things such as images, audio files, animations, menus, and
    style, just to name a few. The application framework provides APIs that can be
    used to load and utilize the various types of resources with your Android apps.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 创建Android应用程序不仅仅是编写代码。一个丰富的移动应用程序需要诸如图像、音频文件、动画、菜单和样式等元素，仅举几例。应用程序框架提供了可以用于加载和利用各种类型资源的API。
- en: The R.java file
  id: totrans-362
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: R.java文件
- en: 'Resources are generally referenced from within an application using an integer
    constant that is automatically assigned when the resource is added to the project
    and compiled. These constants are placed in a Java source file named `R.java`.
    The following example shows the `R.java` class from a simple application:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 资源通常通过在应用程序中使用一个整数常量来引用，该常量在资源被添加到项目并编译时自动分配。这些常量放置在一个名为`R.java`的Java源文件中。以下示例展示了来自一个简单应用程序的`R.java`类：
- en: '[PRE3]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Summary
  id: totrans-365
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have provided a concise and adequate introduction to the
    Android platform and the Android application's building blocks. We have also seen
    how the Android platform has evolved with rich features being added to each platform
    releases.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们提供了一个简洁且充分的介绍，包括Android平台及其Android应用程序构建块。我们还了解了Android平台是如何随着每个平台版本的发布而不断进化，并增加了丰富的功能。
- en: In the next chapter, we will turn our attention to Xamarin.Android and the facilities
    it provides to allow the Android development with .NET and C#.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将关注Xamarin.Android及其提供的功能，这些功能允许使用.NET和C#进行Android开发。
