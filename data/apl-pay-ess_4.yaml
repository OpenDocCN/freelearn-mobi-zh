- en: Chapter 4. Payment Processing Workflow
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章 支付处理工作流程
- en: After the user authorizes the payment request, the *user app*, the *payment
    gateway*, and the *order processing web app* team up to securely deliver payment
    information to the issuing bank to transfer the funds from the user's account
    to the acquiring bank and to inform the user of the transaction status (that is,
    whether it is approved or declined).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在用户授权支付请求后，*用户应用*、*支付网关*和*订单处理网络应用*团队协作，安全地将支付信息传递给发卡行，将资金从用户的账户转移到收单银行，并通知用户交易状态（即是否被批准或拒绝）。
- en: 'The payment processing workflow is made up of three phases:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 支付处理工作流程由三个阶段组成：
- en: '**Preprocess phase**: In this phase, the app gets a charge token from the payment
    gateway and sends the order information (including the charge token) to the order
    processing server'
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**预处理阶段**：在这个阶段，应用从支付网关获取扣费令牌，并将订单信息（包括扣费令牌）发送到订单处理服务器'
- en: '**Process phase**: In this phase, the order processing web app (running on
    your server) charges the user''s card through the payment gateway, updates the
    order and inventory data if the charge is successful, and sends the transaction
    status to the user app'
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**处理阶段**：在这个阶段，订单处理网络应用（在您的服务器上运行）通过支付网关对用户的卡进行扣费，如果扣费成功，则更新订单和库存数据，并将交易状态发送给用户应用'
- en: '**Postprocess phase**: In this, the user app informs the user about the status
    of the transaction and dismisses the payment sheet'
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**后处理阶段**：在这个阶段，用户应用通知用户交易状态并关闭支付表单'
- en: 'This chapter will do the following:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将完成以下内容：
- en: Introduce the actors and operations in the payment processing workflow
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍支付处理工作流程中的演员和操作
- en: Describe each phase of the payment processing workflow and the steps taken within
    each phase
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述支付处理工作流程的每个阶段以及每个阶段内采取的步骤
- en: Note
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As the payment gateway API does not run appropriately in the Simulator app in
    general, you must use an actual iOS device to test the payment processing workflow
    in your development environment.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于支付网关API通常在模拟器应用中运行不适当，您必须在实际的iOS设备上使用您的开发环境测试支付处理工作流程。
- en: Actors and operations in the processing workflow
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理工作流程中的演员和操作
- en: The *payment processing workflow* is the process by which the payment information
    generated by Apple Pay, from the payment request and the information the user
    entered into the payment sheet, is transmitted to your payment gateway and the
    card's issuing bank in order to charge the card and make the payment's funds available
    in your acquiring bank.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*支付处理工作流程* 是将苹果支付生成的支付信息（从支付请求和用户在支付表单中输入的信息）传输到您的支付网关和发卡行的过程，以便对卡进行扣费并使支付资金在您的收单银行中可用。'
- en: The workflow starts when the payment sheet calls the `paymentAuthorizationViewController:didAuthorizePayment:completion:`
    delegate method, providing the user app with the general order information (such
    as the shipping and billing information) and a payment token containing the encrypted
    payment data.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 工作流程从支付表单调用 `paymentAuthorizationViewController:didAuthorizePayment:completion:`
    委托方法开始，向用户应用提供一般订单信息（如运输和账单信息）以及包含加密支付数据的支付令牌。
- en: 'This diagram depicts the actors, operations, and data that are part of the
    payment processing workflow:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此图展示了支付处理工作流程中的演员、操作和数据：
- en: '![Actors and operations in the processing workflow](img/B05093_04_01.png.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![处理工作流程中的演员和操作](img/B05093_04_01.png.jpg)'
- en: 'These are the operations and data that are part of the workflow:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是工作流程中的一部分操作和数据：
- en: '**payment authorized**: The payment sheet tells the app that the user authorized
    the payment'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支付授权**：支付表单告知应用用户已授权支付'
- en: '**payment token**: The app provides the payment token to the payment gateway,
    which returns a **charge token**'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支付令牌**：应用向支付网关提供支付令牌，支付网关返回一个**扣费令牌**'
- en: '**order info and charge token**: the app sends information about the order
    and the charge token to the order processing web app'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**订单信息和扣费令牌**：应用将订单信息和扣费令牌发送到订单处理网络应用'
- en: '**charge card**: The web app charges the card through the payment gateway'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扣费卡**：网络应用通过支付网关对卡进行扣费'
- en: '**approved or declined**: The payment gateway tells the web app whether the
    payment is approved or declined'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**批准或拒绝**：支付网关告知网络应用支付是否被批准或拒绝'
- en: '**transaction result and order metadata**: The web app provides the user app
    with the result of the transaction and order information such as the order number'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** 交易结果和订单元数据 **：Web 应用向用户应用提供交易结果和订单信息，如订单号'
- en: '**transaction result**: The app tells the payment sheet the result of the payment
    transaction—that is, whether it is approved or declined'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** 交易结果 **：应用告知支付表单支付交易的结果——即是否被批准或拒绝'
- en: '**payment sheet done**: The payment sheet tells the app that the transaction
    is complete'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** 支付表单完成 **：支付表单告知应用交易已完成'
- en: '**dismiss**: The app dismisses the payment sheet'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** dismiss **：应用将支付表单关闭'
- en: The preprocess phase
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预处理阶段
- en: In the *Preprocess* phase, the user app uses the payment information that the
    payment sheet generates (in the form of a `PKPayment` object) as a result of the
    user's authorization. The app sends this information to the payment gateway and
    obtains a charge token (this item may be identified using different names, such
    as the registration ID, depending on the payment gateway; the order processing
    web app uses the charge token to charge the user's card). The app then packages
    the charge token along with pertinent information about the order (such as *billing
    information*, *shipping information*, *shipping method*, and so on) and sends
    it to the order processing web app on your server.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *预处理* 阶段，用户应用使用支付表单生成的支付信息（以 `PKPayment` 对象的形式）作为用户授权的结果。应用将此信息发送到支付网关，并获取一个收费令牌（此项目可能根据支付网关的不同名称进行标识，例如注册
    ID；订单处理 Web 应用使用收费令牌向用户的卡收费）。然后，应用将收费令牌与订单的相关信息（如 *账单信息*、*配送信息*、*配送方式* 等）打包，并将其发送到服务器上的订单处理
    Web 应用。
- en: The following three sections describe the steps of the *Preprocess* phase.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以下三个部分描述了 *预处理* 阶段的步骤。
- en: The merchant app receives the payment token
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 商户应用接收支付令牌
- en: 'When the user authorizes the payment request, the payment sheet calls the `paymentAuthorizationViewController:didAuthorizePayment:completion`:
    delegate method (which is part of the `PKPaymentAuthorizationViewControllerDelegate`
    protocol). This method provides the payment information (a `PKPayment` object)
    and a completion block.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户授权支付请求时，支付表单调用 `paymentAuthorizationViewController:didAuthorizePayment:completion:`
    代理方法（这是 `PKPaymentAuthorizationViewControllerDelegate` 协议的一部分）。此方法提供支付信息（一个 `PKPayment`
    对象）和一个完成块。
- en: 'These are the components of a `PKPayment` object:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是 `PKPayment` 对象的组成部分：
- en: '**payment token** (`PKPaymentToken`): This is generated when the user authorizes
    the payment request'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** payment token ** (`PKPaymentToken`）：当用户授权支付请求时生成'
- en: '**billing contact**: This is the billing contact information, including the
    e-mail address (`NSString`), name (`NSPersonNameComponents`), phone number (`CNPhoneNumber`),
    and postal address (`CNPostalAddress`)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** 账单联系人 **：这是账单联系人信息，包括电子邮件地址（`NSString`）、姓名（`NSPersonNameComponents`）、电话号码（`CNPhoneNumber`）和邮政地址（`CNPostalAddress`）'
- en: '**shipping contact**: This is the shipping contact information (which has the
    same components as the billing contact)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** 配送联系人 **：这是配送联系人信息（与账单联系人具有相同的组成部分）'
- en: '**shipping method** (`PKShippingMethod`): This is the shipping method selected
    by the user'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** 配送方式 ** (`PKShippingMethod`）：这是用户选择的配送方式'
- en: 'These are the components of a `PKPaymentToken` object:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是 `PKPaymentToken` 对象的组成部分：
- en: '**payment data** (an encrypted `NSData` object): This is the data used by the
    payment gateway and issuing bank to charge the user''s card'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** 支付数据 **（一个加密的 `NSData` 对象）：这是支付网关和发卡行用来向用户收费的数据'
- en: '**payment method** (`PKPaymentMethod`): This identifies the type of card used
    for the transaction, such as debit, credit, prepaid, or store card'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** 支付方式 ** (`PKPaymentMethod`）：这标识了用于交易的卡的类型，例如借记卡、信用卡、预付卡或商店卡'
- en: '**transaction identifier** (`NSString`): This is a user-friendly identifier
    for the payment transaction'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** 交易标识符 ** (`NSString`）：这是支付交易的友好标识符'
- en: 'The example merchant app implementation of the `paymentAuthorizationViewController:didAuthorizePayment:completion:`
    method is listed here:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 下面列出了 `paymentAuthorizationViewController:didAuthorizePayment:completion:` 方法的示例实现，该实现是示例商户应用的一部分：
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The method calls `process_ApplePay_payment_with_Stripe:completion:` to start
    processing the payment. This method is tailored for a particular payment gateway.
    The `payment_info` parameter contains the payment token, and the shipping and
    billing information requested in the payment request. The `payment_completion`
    parameter defines the block that tells the payment sheet that the transaction
    is processed.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法调用`process_ApplePay_payment_with_Stripe:completion:`以开始处理支付。此方法针对特定的支付网关定制。`payment_info`参数包含支付令牌和支付请求中请求的运费和账单信息。`payment_completion`参数定义了一个块，告诉支付表单交易已处理。
- en: The merchant app receives the charge token from the payment gateway
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 商家应用从支付网关接收收费令牌
- en: After the app gets the payment information (a `PKPayment` object), it uses the
    payment gateway API to obtain a charge token, which is used by the order processing
    web app to charge the card. (Some payment gateways provide a native iOS API to
    issue the charge token; others require that the app makes an HTTP request to their
    payment server.) The APIs of some payment gateways operate on the payment token
    (`PKPaymentToken`), while others require the `PKPayment` object.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用获取支付信息（一个`PKPayment`对象）后，它使用支付网关API来获取一个收费令牌，该令牌由订单处理Web应用用来对卡进行收费。（一些支付网关提供原生iOS
    API来发行收费令牌；而其他则要求应用向他们的支付服务器发送HTTP请求。）一些支付网关的API在支付令牌（`PKPaymentToken`）上操作，而另一些则要求使用`PKPayment`对象。
- en: In the example merchant app, the `process_ApplePay_payment_with_Stripe:completion:`
    method of the `ProductCard` class calls the native iOS API provided by the Stripe
    payment gateway, which operates on the `PKPayment` object, returning a charge
    token (an `STPToken` object). Other payment gateways have a similar native or
    web API that provides the same functionality.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例商家应用中，`ProductCard`类的`process_ApplePay_payment_with_Stripe:completion:`方法调用由Stripe支付网关提供的原生iOS
    API，该API在`PKPayment`对象上操作，返回一个收费令牌（一个`STPToken`对象）。其他支付网关也有类似的本地或Web API，提供相同的功能。
- en: 'This is the `process_ApplePay_payment_with_Stripe:completion`: method in the
    example merchant app:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这是示例商家应用中的`process_ApplePay_payment_with_Stripe:completion:`方法：
- en: '[PRE1]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If the method that creates the charge token (`createTokenWithPayment:completion:`
    of the `STPAPIClient` class) reports an error, this method calls the payment completion
    block with the `PKPaymentAuthorizationStatusFailure` argument, which effectively
    ends the transaction. Otherwise, it calls the `backend_process_payment_info:gateway:charge_token:completion:`
    method, which is described in the next section.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果创建收费令牌的方法（`STPAPIClient`类的`createTokenWithPayment:completion:`）报告错误，此方法将使用`PKPaymentAuthorizationStatusFailure`参数调用支付完成块，这实际上结束了交易。否则，它调用下一节中描述的`backend_process_payment_info:gateway:charge_token:completion:`方法。
- en: The merchant app sends the order information to the order processing system
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 商家应用将订单信息发送到订单处理系统
- en: After obtaining the payment information (`PKPayment`) from the payment sheet
    and the charge token from the payment gateway, the app packages the charge token
    and other information required by the order processing web app and sends it to
    your server through an HTTP request.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在从支付表单获取支付信息（`PKPayment`）和从支付网关获取收费令牌后，应用将收费令牌和其他订单处理Web应用所需的信息打包，并通过HTTP请求将其发送到您的服务器。
- en: 'In the example merchant app, the `backend_process_payment_info:gateway:charge_token:completion:`
    method of the `ProductCard` class packages the required information into a JSON
    object (the payload) and sends it to the order processing web app through an HTTP
    `POST` request to the `http://red:12345/payment` unique resource identifier (URI).
    Take a look at the following code:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例商家应用中，`ProductCard`类的`backend_process_payment_info:gateway:charge_token:completion:`方法将所需信息打包成一个JSON对象（有效载荷），并通过HTTP
    `POST`请求发送到`http://red:12345/payment`唯一资源标识符（URI）到订单处理Web应用。请查看以下代码：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `payment_info` parameter is the `PKPayment` object provided by the payment
    sheet in the `paymentAuthorizationViewController:didAuthorizePayment:completion:`
    delegate method. The `gateway` parameter identifies the payment gateway the app
    uses to get the charge token; this could be useful for merchant apps that use
    more than one payment gateway but only one order processing web app. The `charge_token`
    parameter is the charge token obtained from the payment gateway API. The `payment_completion`
    parameter is the same completion block provided in the `paymentAuthorizationViewController:didAuthorizePayment:completion:`
    delegate method.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`payment_info`参数是支付表单在`paymentAuthorizationViewController:didAuthorizePayment:completion:`代理方法中提供的`PKPayment`对象。`gateway`参数标识应用用于获取充电令牌的支付网关；这可能对使用多个支付网关但只有一个订单处理Web应用的商户应用很有用。`charge_token`参数是从支付网关API获得的充电令牌。`payment_completion`参数与`paymentAuthorizationViewController:didAuthorizePayment:completion:`代理方法中提供的相同完成块。'
- en: In the order processing web app, the handler for the `/payment` request takes
    a JSON object (which is stored in the `order_info_package_json` variable in the
    `backend_process_payment_info:` method) with the required information. In the
    example project's web app, this information is the name of the payment gateway,
    the information the payment processor requires to charge the payment card (the
    payment token, the payment amount, and the payment's currency), and the shipping
    details.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在订单处理Web应用中，`/payment`请求的处理程序接收一个包含所需信息的JSON对象（在`backend_process_payment_info:`方法中的`order_info_package_json`变量中存储），例如示例项目Web应用中的信息是支付网关的名称、支付处理器要求为支付卡充电的信息（支付令牌、支付金额和支付货币），以及运输详情。
- en: The process phase
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理阶段
- en: In the *Process* phase of the payment processing workflow, the order processing
    web app charges the user's card, updates the ordering and inventory data, and
    returns the transaction's status (that is, whether it is approved or declined)
    to the user app on the user's device as an HTTP response to the app's original
    HTTP request. This web app uses the payment gateway's server-side API to communicate
    with it.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在支付处理工作流程的*处理*阶段，订单处理Web应用为用户的卡片充电，更新订单和库存数据，并将交易的批准或拒绝状态作为HTTP响应返回给用户设备上的用户应用。此Web应用使用支付网关的服务器端API与其通信。
- en: 'In the example order processing web app (a Node.js web app), the HTTP request
    from the user app is handled by the middleware, as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例订单处理Web应用（一个Node.js Web应用）中，用户应用的HTTP请求由中间件处理，如下所示：
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This middleware is divided into four steps:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 此中间件分为四个步骤：
- en: Parse the request's JSON content.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解析请求的JSON内容。
- en: Charge the card using the API provided by the payment gateway; in this case,
    the `charge` function is provided in the `Stripe JavaScript` module.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用支付网关提供的API为卡片充电；在这种情况下，`charge`函数由`Stripe JavaScript`模块提供。
- en: If the transaction is approved, create the order and update the quantity on
    hand of the ordered product.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果交易被批准，创建订单并更新所订购产品的库存数量。
- en: Send the transaction result (including the order number if the payment was approved)
    to the user's device.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将交易结果（包括如果支付被批准则包括订单号）发送到用户的设备。
- en: The postprocess phase
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后处理阶段
- en: In the *Postprocess* phase of the payment processing workflow, the app analyzes
    the response the order processing web app gave to the HTTP request that the app
    made in the *Preprocess* phase. In general terms, the response indicates whether
    the issuing bank approved or declined the payment. The response may also include
    an order number, order status, and other details that you deem useful for the
    user; the app may display a custom confirmation sheet containing this information.
    Finally, the app dismisses the payment sheet.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在支付处理工作流程的*后处理*阶段，应用分析订单处理Web应用对应用在*预处理*阶段发出的HTTP请求的响应。一般来说，响应指示发行银行是否批准或拒绝了支付。响应还可能包括订单号、订单状态和其他您认为对用户有用的详细信息；应用可能显示包含此信息的自定义确认表单。最后，应用关闭支付表单。
- en: The following three sections describe the steps of the *Postprocess* phase.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 以下三个部分描述了*后处理*阶段的步骤。
- en: The merchant app receives the transaction status from the order processing web
    app
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 商户应用从订单处理Web应用接收交易状态
- en: 'The example user app receives the response from the order processing web app
    in a block in the `backend_process_payment_info:gateway:charge_token:completion:`
    method. The block''s arguments are an `NSURLResponse` object and an `NSData` object.
    The code that processes the response and returned data is highlighted here:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 示例用户应用在`backend_process_payment_info:gateway:charge_token:completion:`方法中的块中接收订单处理Web应用的响应。块的参数是一个`NSURLResponse`对象和一个`NSData`对象。处理响应和返回数据的代码在此处突出显示：
- en: '[PRE4]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If the HTTP response code is `200`, there were no server-side problems generating
    the response. In this case, the method transforms the JSON that makes up the returned
    content into an `NSDictionary` object (`result`), which contains several entries
    describing the transaction (refer to the *Process* Phase section for details).
    The method focuses on one entry in particular: the `"status"` key.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果HTTP响应代码是`200`，则表示在生成响应时没有服务器端问题。在这种情况下，该方法将构成返回内容的JSON转换为`NSDictionary`对象（`result`），其中包含多个条目描述交易（有关详细信息，请参阅*处理*阶段部分）。该方法特别关注一个条目：`"status"`键。
- en: The merchant app conveys the transaction status to the user
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 商户应用将交易状态传达给用户
- en: 'After the example merchant app receives the response from the order processing
    web app (as a JSON object in the HTTP response payload), it determines whether
    the transaction was approved or declined by examining the returned data. Then,
    it calls the `payment_completion` block to inform the payment sheet of the transaction
    status so that the sheet can convey this information to the user. The highlighted
    code in this listing performs this process:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例商户应用从订单处理Web应用接收响应（作为HTTP响应有效载荷中的JSON对象）之后，它通过检查返回数据来确定交易是否被批准或拒绝。然后，它调用`payment_completion`块来通知支付表格交易状态，以便表格可以将此信息传达给用户。此列表中的突出显示代码执行此过程：
- en: '[PRE5]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If the value for the `"status"` key in the returned data is `"succeeded"`, it
    means that the payment was approved by the issuing bank, and the funds will be
    available in the acquiring bank sometime in the near future. In this case, the
    method calls the completion block the payment sheet provided (`payment_completion`)
    to indicate that the payment was approved with `PKPaymentAuthorizationStatusSuccess`
    as the argument. If the HTTP response code is not `200` or the value for the `"status"`
    key in the returned data is not `"succeeded"`, the method calls the completion
    block with `PKPaymentAuthorizationStatusFailure` as the argument.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果返回数据中`"status"`键的值是`"succeeded"`，则表示支付已被发行银行批准，资金将在不久的将来在收购银行中可用。在这种情况下，该方法调用支付表格提供的完成块（`payment_completion`）以指示支付已批准，并将`PKPaymentAuthorizationStatusSuccess`作为参数。如果HTTP响应代码不是`200`或返回数据中`"status"`键的值不是`"succeeded"`，则该方法将使用`PKPaymentAuthorizationStatusFailure`作为参数调用完成块。
- en: 'Calling the `payment_completion` block with `PKPaymentAuthorizationStatusSuccess`
    results in the payment sheet displaying a checkmark, indicating that the payment
    was approved, as shown in the following screenshot:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`PKPaymentAuthorizationStatusSuccess`调用`payment_completion`块会导致支付表格显示勾选标记，表示支付已被批准，如下面的截图所示：
- en: '![The merchant app conveys the transaction status to the user](img/B05093_04_02.png.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![商户应用传达交易状态给用户](img/B05093_04_02.png.jpg)'
- en: You can display an additional sheet providing more information about the transaction,
    such as the order number and estimated delivery date.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以显示一个额外的表格，提供有关交易的更多信息，例如订单号和预计交货日期。
- en: The merchant app dismisses the payment sheet
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 商户应用关闭支付表格
- en: When the payment sheet is done (either because the transaction was approved
    or declined, or because the user canceled the transaction), it calls the `paymentAuthorizationViewControllerDidFinish:`
    delegate method. Here, you can perform any necessary cleanup or app-state updates.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当支付表格完成时（无论是由于交易被批准或拒绝，还是由于用户取消了交易），它将调用`paymentAuthorizationViewControllerDidFinish:`代理方法。在这里，您可以执行任何必要的清理或应用状态更新。
- en: 'This is how the example merchant app implements the delegate method:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这是示例商户应用实现代理方法的方式：
- en: '[PRE6]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Summary
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you have learned how Apple Pay payments are processed. The
    chapter has described each of the phases of the payment processing workflow, identifying
    the steps that make up each phase. The *Processing phase*, in particular, is where
    all the components are linked to securely charge the user's card and make the
    funds available in your acquiring bank.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您已经学习了苹果支付（Apple Pay）的支付处理过程。本章详细描述了支付处理工作流程的每个阶段，并确定了构成每个阶段的步骤。特别是，*处理阶段*是所有组件连接起来，安全地为用户的卡片充值并在您的收单银行中使资金可用的地方。
- en: The chapter has based its explanations on the example project that accompanies
    this book. This project will be described in the next chapter.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的解释基于本书附带的示例项目。该项目将在下一章中进行描述。
