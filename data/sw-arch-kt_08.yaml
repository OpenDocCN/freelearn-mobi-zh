- en: '8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '8'
- en: Domain-Driven Design (DDD)
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 领域驱动设计 (DDD)
- en: Engineers are often not the experts in business domains. Yet, they’re responsible
    for building complex applications that represent real-world domains. Traditionally,
    software architectures often struggle to express the intricacies and subtlety
    of business domains effectively, leading to systems that are challenging to understand,
    maintain, and evolve. This is where **domain-driven design** (**DDD**) is brought
    into play.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 工程师通常不是业务领域的专家。然而，他们负责构建代表现实世界领域的复杂应用程序。传统上，软件架构往往难以有效地表达业务领域的复杂性和微妙之处，导致系统难以理解、维护和演进。这就是领域驱动设计（**DDD**）发挥作用的地方。
- en: In [*Chapter 7*](B21737_07.xhtml#_idTextAnchor255), we covered three architectural
    styles around the concept of having a dedicated layer to host business logic within
    an application. DDD aims to help engineers identify business behaviors that belong
    to the corresponding domain and the boundaries around it so that they can be implemented
    in the Core, Domain, or Use Case layer of an application.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第 7 章*](B21737_07.xhtml#_idTextAnchor255) 中，我们介绍了围绕在应用程序中为业务逻辑设置专用层的三种架构风格。DDD
    的目标是帮助工程师识别属于相应领域及其边界的业务行为，以便它们可以在应用程序的核心、领域或用例层中实现。
- en: This chapter explores the powerful software design approach of DDD, which centers
    around the business domain in the software design process. It focuses on capturing
    and expressing the core business concepts, rules, and behaviors.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章探讨了 DDD 的强大软件设计方法，该方法围绕软件设计过程中的业务领域。它侧重于捕捉和表达核心业务概念、规则和行为。
- en: First, we’ll dive deep into the theoretical principles and practical implementation
    strategies of DDD, illustrated by real-life examples. Then, we’ll explore how
    this approach can be used to build maintainable, scalable, and flexible software
    systems that align closely with business requirements.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将深入探讨 DDD 的理论原则和实际实施策略，并通过实际案例进行说明。然后，我们将探讨如何使用这种方法构建与业务需求紧密对齐的、可维护的、可扩展和灵活的软件系统。
- en: By applying DDD, we can gain a better understanding of the domain and create
    a common language between domain experts and software developers.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 通过应用 DDD，我们可以更好地理解领域，并在领域专家和软件开发者之间建立一个共同语言。
- en: 'We’re going to cover the following topics in this chapter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Fundamentals of DDD
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DDD 的基础
- en: Strategic and tactical designs in DDD
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DDD 中的战略和战术设计
- en: Modeling activities in DDD
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DDD 中的建模活动
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'You can find the code files used in this chapter on GitHub: [https://github.com/Packt
    Publishing/Software-Architecture-with-Kotlin/tree/main/chapter-8](https://github.com/PacktPublishing/Software-Architecture-with-Kotlin/tree/main/chapter-8%0D)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 GitHub 上找到本章使用的代码文件：[https://github.com/Packt Publishing/Software-Architecture-with-Kotlin/tree/main/chapter-8](https://github.com/PacktPublishing/Software-Architecture-with-Kotlin/tree/main/chapter-8%0D)
- en: Fundamentals of DDD
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DDD 的基础
- en: The goal of DDD is to close the gap between the technical implementation of
    software and the business domain it serves. DDD heavily focuses on building software
    that accurately models the core concepts, business rules, and behaviors of the
    domain so that the software system is closely aligned with the needs of the business.
    This results in it being valuable, maintainable, flexible, and sustainable for
    the future.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: DDD 的目标是缩小软件技术实现与它所服务的业务领域之间的差距。DDD 侧重于构建准确模型核心概念、业务规则和行为的软件，以便软件系统与业务需求紧密对齐。这使其具有价值、可维护、灵活和可持续性。
- en: 'DDD highlights the distinction between the problem space and the solution space:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: DDD 强调了问题空间和解决方案空间之间的区别：
- en: '**Problem space**: The problem space is the reality of the business – that
    is, the current circumstances of the business operations'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**问题空间**：问题空间是业务现实——即业务运营的当前状况'
- en: '**Solution space**: The solution space is the software system we have or will
    build to solve specific business cases in the problem space'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**解决方案空间**：解决方案空间是我们拥有的或将要构建的软件系统，用于解决问题空间中的特定业务案例'
- en: 'The dominant part of the problem space is the **domain**, which represents
    specific business use cases and operations. The solution space provides a way
    to model the domain to solve the given business cases, hence the name **domain
    model**. This relationship is illustrated in *Figure 8**.1*:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 问题空间的主导部分是**领域**，它代表特定的业务用例和操作。解决方案空间提供了一种建模领域以解决给定业务用例的方法，因此得名**领域模型**。这种关系在*图
    8*.*1*中得到了说明：
- en: '![Figure 8.1 – Problem space and solution space](img/B21737_08_1.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.1 – 问题空间和解决方案空间](img/B21737_08_1.jpg)'
- en: Figure 8.1 – Problem space and solution space
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.1 – 问题空间和解决方案空间
- en: 'A domain model abstracts and selects certain elements in the domain so that
    a software system can be built upon it. The abstraction and selection result in
    the domain model is never 100% correct and complete. It is exactly what statistician
    *George Box* wrote in 1976 in a paper published in the *Journal of the American*
    *Statistical Association*:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 领域模型抽象和选择领域中的某些元素，以便在它之上构建软件系统。这种抽象和选择的结果在领域模型中永远不会是100%正确和完整的。这正是统计学家 *George
    Box* 在1976年发表在 *《美国统计协会杂志》* 上的论文中所写的：
- en: “*All models are wrong, but some* *are useful.*”
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: “*所有模型都是错误的，但其中一些是有用的。*”
- en: In DDD, domain models don’t aim to be complete and accurate; instead, they aim
    to be useful in specific business contexts.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DDD 中，领域模型的目标不是完整和准确；相反，它们的目标是在特定的业务环境中是有用的。
- en: DDD encourages engineers to gain a deep understanding of the domain for which
    they’re building software. There are domain experts who understand what software
    they need to get the job done. This is particularly true for the domains that
    originally used manual processes or paperwork to operate the business. Software
    systems are often seen as automation tools for business operations. Having a domain
    expert who operates the business brings a lot of value to engineers in building
    the corresponding software.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: DDD 鼓励工程师深入了解他们正在为构建软件的领域。有领域专家了解他们需要什么软件来完成工作。这对于最初使用手动流程或纸质文件来运营业务的领域尤其如此。软件系统通常被视为业务运营的自动化工具。拥有运营业务的领域专家为工程师在构建相应的软件中带来了很多价值。
- en: 'DDD comprises two design methodologies:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: DDD 包含两种设计方法：
- en: '**Strategic design**: This focuses on the overall structure and organization
    among multiple cohesive areas, named bounded contexts, within a larger business
    domain. It works toward a flexible and loose coupling system among bounded contexts
    by defining their collaborations.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**战略设计**：这侧重于更大业务领域内多个连贯区域（称为边界上下文）之间的整体结构和组织。它通过定义它们的协作，致力于在边界上下文之间实现灵活和松散耦合的系统。'
- en: '**Tactical design**: This refers to patterns, tools, and practices that make
    it simpler to build helpful domain models. We use tactical design when we have
    complex business logic to model or when complexity may be introduced in the future.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**战术设计**：这指的是使构建有用的领域模型更简单的模式、工具和实践。当我们有复杂的业务逻辑要建模或未来可能引入复杂性时，我们使用战术设计。'
- en: It’s important to point out that DDD has nothing to do with what technology
    and frameworks are chosen. Modeling a business domain is purely the way a software
    system should be built, not which tools are used.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 需要指出的是，DDD 与选择的技术和框架无关。对业务领域的建模纯粹是软件系统应该构建的方式，而不是使用的工具。
- en: DDD – strategic design
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DDD – 战略设计
- en: It’s recommended to start DDD with strategic design to establish the big picture
    before drilling down into the more granular tactical design. The very first step
    is known as **ubiquitous language**.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 建议从战略设计开始 DDD，在深入到更细粒度的战术设计之前建立整体图景。第一步被称为**通用语言**。
- en: Ubiquitous language
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通用语言
- en: Using a common language between engineers and domain experts is crucial to the
    success of software systems. Business domains often involve a lot of industry
    terms, specialized concepts, and subtle rules. However, not all of them can be
    applied to the scope of a software system. On the other hand, engineering involves
    a lot of technical terms, methodologies, and best practices, all of which are
    needed for the given software system.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在工程师和领域专家之间使用一种共同的语言对于软件系统的成功至关重要。业务领域通常涉及许多行业术语、专业概念和微妙规则。然而，并非所有这些都可以应用于软件系统的范围。另一方面，工程涉及许多技术术语、方法和最佳实践，所有这些对于给定的软件系统都是必需的。
- en: '**Ubiquitous language** is a term that was introduced by *Eric Evans* in his
    book *Domain-Driven Design: Tackling Complexity in the Heart of Software*, published
    in 2004\. It serves as a common understanding and mental model of the domain that’s
    shared between engineers and domain experts. It aims for a consistent, well-defined,
    and precise language to eliminate misunderstandings and ambiguities. It’s a continuous,
    collaborative effort to build a common ground for effective and meaningful communication.
    Ubiquitous language is the common tongue between the domain and the domain model.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**通用语言**是由*埃里克·埃文斯*在他的2004年出版的书籍《领域驱动设计：软件核心的复杂性处理》中引入的术语。它作为工程师和领域专家之间共享的业务领域共同理解和心智模型。它旨在使用一致、明确和精确的语言来消除误解和歧义。它是一个持续、协作的努力，旨在为有效的和有意义的沟通建立一个共同的基础。通用语言是领域和领域模型之间的共同语言。'
- en: Ubiquitous language is also a form of documentation and the knowledge base of
    systems. Once established, new team members can understand the domain and the
    existing code base quickly. It also facilitates knowledge transfer among teams
    and stakeholders, thus promoting better collaboration and reducing the risk of
    information loss.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 通用语言也是文档和系统知识库的一种形式。一旦建立，新团队成员可以快速理解领域和现有的代码库。它还促进了团队和利益相关者之间的知识转移，从而促进了更好的协作，并降低了信息丢失的风险。
- en: 'Ubiquitous language is the overlapping part between domain expert language
    and engineering language and implies a mutual understanding, as shown in *Figure
    8**.2*:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 通用语言是领域专家语言和工程语言的重叠部分，如图*图8.2*所示，它暗示了一种相互理解：
- en: '![Figure 8.2 – Ubiquitous language in DDD](img/B21737_08_2.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图8.2 – DDD中的通用语言](img/B21737_08_2.jpg)'
- en: Figure 8.2 – Ubiquitous language in DDD
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.2 – DDD中的通用语言
- en: 'The benefits of ubiquitous language manifest themselves in various forms:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 通用语言的好处以各种形式体现：
- en: '**Glossary**: A glossary of terms and concepts and their definitions, available
    for everyone to read and learn about the business domain. Each term is reviewed
    and agreed upon by everyone involved in the development process. Ideally, there
    should be a process where changes can be submitted, reviewed, approved, and tracked
    in an auditable repository such as **GitHub**.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**术语表**：术语表包含术语和概念及其定义，可供每个人阅读和学习业务领域。每个术语都经过参与开发过程的所有人的审查和同意。理想情况下，应该有一个流程，可以提交、审查、批准和跟踪更改，例如在**GitHub**这样的可审计仓库中。'
- en: '**Documentation**: All documents related to the business domain should use
    the same terms and concepts that are defined in the glossary. These documents
    include user manuals, operation instructions, project plans, architectural design
    documents, diagrams, user stories, screen mockups, presentations, API documentation,
    and more. Any new term and concept should be added to the glossary.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档**：所有与业务领域相关的文档都应使用术语表中定义的相同术语和概念。这些文档包括用户手册、操作说明、项目计划、架构设计文档、图表、用户故事、屏幕原型、演示文稿、API文档等。任何新的术语和概念都应添加到术语表中。'
- en: '**Private large language modules (LLMs)**: The business domain knowledge, including
    terms, concepts, rules, and processes, can be used to train an LLM so that it
    can answer questions, complete text, generate dialog, and even become a part of
    the customer service bot. It does, however, require carefully crafting the input
    that’s given to the model to generate the desired outputs or responses. This process
    is called **prompt engineering**, but it’s beyond the scope of this book. OpenAI’s
    documentation has a section on prompt engineering that provides practical guidance:
    https://platform.openai.com/docs/guides/prompt-engineering.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**私有大型语言模块（LLMs）**：业务领域知识，包括术语、概念、规则和流程，可以用来训练LLM，使其能够回答问题、完成文本、生成对话，甚至成为客户服务机器人的组成部分。然而，这确实需要精心设计提供给模型的输入，以生成期望的输出或响应。这个过程被称为**提示工程**，但超出了本书的范围。OpenAI的文档有一个关于提示工程的章节，提供了实用的指导：https://platform.openai.com/docs/guides/prompt-engineering。'
- en: '**Source code**: The names of source files, functions, interfaces, classes,
    and even variables should use the same terms that have been defined in the glossary.
    Message payloads, database tables and fields, log messages, and error messages
    should also use these terms and concepts whenever applicable. These terms are
    used in every element in the code base. Seeing the same language everywhere related
    to the business domain for a software system is what we define as ubiquitous language.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**源代码**：源文件、函数、接口、类甚至变量的命名应使用在词汇表中定义的相同术语。消息负载、数据库表和字段、日志消息和错误消息也应在使用时使用这些术语和概念。这些术语在代码库的每个元素中都被使用。对于软件系统，我们将其定义为通用语言的是在业务域中随处可见的相同语言。'
- en: Subdomains
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 子域
- en: A **subdomain** is a distinct area of the business domain that has its own set
    of concepts and business rules. The language that’s used in a subdomain is part
    of ubiquitous language, and the corresponding concepts within the subdomain naturally
    form their own group.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**子域**是业务域中的一个独立区域，它有自己的概念集和业务规则。子域中使用的语言是通用语言的组成部分，子域内的相应概念自然形成自己的群体。'
- en: Subdomains help break down the complexity of large domains into smaller, more
    manageable parts, allowing teams to focus on understanding and addressing the
    unique requirements and challenges of each subdomain. Subdomains belong to the
    problem space, and they may not always have a one-to-one mapping with a part of
    the system in the solution space.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 子域有助于将大型域的复杂性分解为更小、更易于管理的部分，使团队能够专注于理解和解决每个子域的独特需求和挑战。子域属于问题空间，并且它们可能并不总是与解决方案空间中的一部分一一对应。
- en: 'Subdomains can be categorized into three groups:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 子域可以分为三个组：
- en: '**Core domains**: Core domains are at the heart of business operations. Without
    them, there’s no problem to solve, and there’s no reason to build software systems.
    Core subdomains are the most critical part of an organization to differentiate
    them from competitors. They also have the most complex business cases.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**核心域**：核心域是业务运营的核心。没有它们，就没有问题需要解决，也就没有理由构建软件系统。核心子域是组织区分竞争对手的最关键部分，它们也拥有最复杂的业务案例。'
- en: '**Supporting subdomains**: Supporting subdomains provide peripheral tools and
    functionalities that complement and accelerate the core subdomains, but they aren’t
    the primary area of expertise for the business. They’re typically well-known capabilities
    where corresponding solutions can be found in the market or outsourced. They’re
    still relevant to the business but don’t provide significant competitive advantages.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支持子域**：支持子域提供辅助工具和功能，这些工具和功能补充并加速核心子域，但它们不是业务的主要专业领域。它们通常是众所周知的能力，相应的解决方案可以在市场上找到或外包。它们对业务仍然相关，但并不提供显著的竞争优势。'
- en: '**Generic subdomains**: Generic subdomains refer to common problems that aren’t
    specific to the business. Their corresponding solutions are off-the-shelf commercial
    products. They’re essential for running business operations, but they don’t directly
    contribute to the core value proposition of the business.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通用子域**：通用子域指的是不特定于业务的常见问题。它们相应的解决方案是现成的商业产品。它们对于运行业务运营至关重要，但它们并不直接贡献于业务的核心理念。'
- en: By identifying and modeling subdomains, DDD enables the development of cohesive,
    modular, and loosely coupled software systems. This leads us to an important concept
    in the solution space known as bounded contexts.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 通过识别和建模子域，领域驱动设计（DDD）使得开发出凝聚、模块化和松散耦合的软件系统成为可能。这引出了解决方案空间中的一个重要概念，即有界上下文。
- en: Bounded contexts
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 有界上下文
- en: In [*Chapter 6*](B21737_06.xhtml#_idTextAnchor212), we mentioned the importance
    of identifying highly cohesive functions and grouping them as individual deployable
    artifacts so that we don’t end up building a large monolithic application that’s
    expensive to maintain, difficult to understand, and almost impossible to optimize.
    The system can be broken down into bounded contexts.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第六章*](B21737_06.xhtml#_idTextAnchor212)中，我们提到了识别高度凝聚的功能并将它们分组为独立的可部署工件的重要性，这样我们就不会最终构建出一个庞大且难以维护的单体应用，这种应用难以理解，几乎无法优化。系统可以被分解为有界上下文。
- en: A **bounded context** is a concept in the solution space. It represents a cohesive
    area of the business domain. It has its own scope, responsibilities, and rules
    that don’t overlap with other bounded contexts. A bounded context should have
    a clear purpose and a clear boundary. A well-defined bounded context gives a straightforward
    answer to whether a term or a rule belongs to the within or outside of the context.
    Within a bounded context, each building block has a specific semantic and purpose.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**有界上下文**是解决方案空间中的一个概念。它代表业务域的一个连贯区域。它有自己的范围、责任和规则，这些规则与其他有界上下文不重叠。一个有界上下文应该有一个明确的目的和一个清晰的边界。一个定义良好的有界上下文可以清楚地回答一个术语或规则是否属于上下文内部或外部。在有界上下文中，每个构建块都有特定的语义和目的。'
- en: It takes away some parts of the complex business domain and turns them into
    a smaller and more manageable unit. Eventually, the sum of a sufficient collection
    of bound contexts is the overall domain model and thus eliminates the chance of
    it becoming a monolithic application.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 它移除了一些复杂业务域的部分，并将它们转化为更小、更易于管理的单元。最终，足够数量的有界上下文的总和构成了整体域模型，从而消除了它成为一个单体应用的机会。
- en: A bounded context should represent one subdomain only, but a subdomain model
    might need a small portion of another subdomain model to function properly.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有界上下文应该只代表一个子域，但一个子域模型可能需要另一子域模型的一小部分才能正常工作。
- en: Also, a bounded context should have its own source code repository. It has its
    own data schema and data that are only shared with other bounded contexts via
    external representations defined in API documentation. It should also have dedicated
    deployable artifacts. They can be released independently without dependency on
    or affecting other bounded contexts. They should have their own release cadence.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，一个有界上下文应该有自己的源代码仓库。它有自己的数据模式和数据，这些数据仅通过API文档中定义的外部表示与其他有界上下文共享。它还应拥有专门的部署工件。它们可以独立发布，而不依赖于或影响其他有界上下文。它们应该有自己的发布周期。
- en: A bounded context should be owned by one team only. The team has full autonomy
    in the choice of frameworks and development methodologies. In [*Chapter 1*](B21737_01.xhtml#_idTextAnchor013),
    we mentioned **Conway’s law**, which states that an organization often produces
    software systems that mirror the internal structures of the organization. Instead
    of being constrained by the organization structure, teams should be re-structured
    based on the bounded contexts that are discovered during the DDD process.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 有界上下文应由一个团队拥有。团队在选择框架和开发方法上拥有完全的自主权。在[*第一章*](B21737_01.xhtml#_idTextAnchor013)中，我们提到了**康威定律**，该定律指出，一个组织通常会生产出反映组织内部结构的软件系统。团队不应受组织结构的限制，而应根据在DDD过程中发现的有界上下文进行重组。
- en: Context mapping
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上下文映射
- en: Because bounded contexts break down a system, they need to collaborate for the
    system to function and achieve the overall goals. **Context mapping** is a technique
    that can be used to identify the relationships and interactions among bounded
    contexts.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 因为有界上下文分解了一个系统，所以它们需要协作以使系统能够运行并实现整体目标。**上下文映射**是一种可以用来识别有界上下文之间关系和交互的技术。
- en: 'Here are the common patterns in this relationship:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是这个关系中的常见模式：
- en: '**Partnership**: Two or more bounded contexts establish a collaborative relationship.
    This involves establishing close collaboration, shared understanding, and joint
    decision-making to address a specific business need. Even bounded contexts have
    their own goals, but their goals are connected to help solve a particular problem.
    So, they succeed and fail together:'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合作**：两个或更多有界上下文建立合作关系。这包括建立紧密合作、共享理解和联合决策，以解决特定的业务需求。即使有界上下文有自己的目标，但它们的目标是相互连接以帮助解决特定问题。因此，它们共同成功或失败：'
- en: '![Figure 8.3 – Partnership](img/B21737_08_3.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图8.3 – 合作](img/B21737_08_3.jpg)'
- en: Figure 8.3 – Partnership
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.3 – 合作
- en: '**Shared kernel**: Two bounded contexts share a subset of their model or code.
    They might share the same data schema, a source code module, or compiled code
    as an artifact. However, it’s considered an anti-pattern to share a data schema
    or raw source code between two bounded contexts. However, it’s acceptable for
    two bounded contexts to depend on the same artifact that’s treated as a shared
    library:'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共享内核**：两个有界上下文共享它们模型或代码的子集。它们可能共享相同的数据模式、源代码模块或作为工件的可编译代码。然而，在两个有界上下文之间共享数据模式或原始源代码被视为反模式。然而，两个有界上下文依赖于同一被视为共享库的工件是可以接受的：'
- en: '![Figure 8.4 – Shared kernel](img/B21737_08_4.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.4 – 共享内核](img/B21737_08_4.jpg)'
- en: Figure 8.4 – Shared kernel
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.4 – 共享内核
- en: '**Customer-supplier**: The upstream bounded context supplies data, while the
    downstream bounded context consumes that data. The customer and the supplier collaborate
    and agree on the protocol of the data:'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户-供应商**：上游边界上下文提供数据，而下游边界上下文消费这些数据。客户和供应商合作并就数据协议达成一致：'
- en: '![Figure 8.5 – Customer-supplier](img/B21737_08_5.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.5 – 客户-供应商](img/B21737_08_5.jpg)'
- en: Figure 8.5 – Customer-supplier
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.5 – 客户-供应商
- en: '**Conformist**: The upstream bounded context supplies data and dictates the
    protocol of the data. The downstream bounded context conforms to the protocol
    and consumes that data. The upstream bounded context can be an external system
    or use an industry-standard protocol, making it unable to accommodate the downstream
    bounded context:'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一致者**：上游边界上下文提供数据并规定数据协议。下游边界上下文遵守该协议并消费这些数据。上游边界上下文可以是外部系统或使用行业标准协议，这使得它无法适应下游边界上下文：'
- en: '![Figure 8.6 – Conformist](img/B21737_08_6.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.6 – 一致者](img/B21737_08_6.jpg)'
- en: Figure 8.6 – Conformist
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.6 – 一致者
- en: '**Anti-corruption layer**: The upstream bounded context supplies data and dominates
    the protocol of the data. The downstream bounded context, however, isn’t willing
    to conform to the protocol. Instead, the downstream bounded context builds an
    anti-corruption layer to consume the data and translate it into the structure
    that it desires:'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**反腐败层**：上游边界上下文提供数据并主导数据协议。然而，下游边界上下文并不愿意遵守该协议。相反，下游边界上下文构建一个反腐败层来消费数据并将其转换为它所需的结构：'
- en: '![Figure 8.7 – Anti-corruption layer](img/B21737_08_7.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.7 – 反腐败层](img/B21737_08_7.jpg)'
- en: Figure 8.7 – Anti-corruption layer
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.7 – 反腐败层
- en: 'There are several scenarios where the downstream bounded context decides not
    to conform:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种情况下，下游边界上下文决定不遵守：
- en: The upstream bounded context uses an inconvenient data protocol, making it difficult
    to integrate and consume the data
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上游边界上下文使用的数据协议不方便，这使得集成和消费数据变得困难
- en: The upstream bounded context is unreliable, changes often, or occasionally brings
    breaking changes that the downstream bounded context intends to minimize so that
    the impact of any issue brought by the upstream bounded context is diminished
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上游边界上下文不可靠，经常变化，或偶尔带来破坏性的变更，下游边界上下文试图最小化这些变更，以便减少上游边界上下文带来的任何问题的影响
- en: The data protocol used in the upstream bounded context brings conflicting or
    irrelevant data to the downstream bounded context
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上游边界上下文中使用的数据协议将冲突或不相关的数据带到下游边界上下文
- en: The downstream bounded context reflects the core domain, which warrants reasons
    not to depend on a foreign data protocol
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下游边界上下文反映了核心领域，这为不依赖外国数据协议提供了理由
- en: '**Separate ways**: There are no interactions between bounded contexts as they’ve
    decided to go separate ways. This can be due to integration being too expensive,
    unsustainable, or impossible. The following are some example scenarios where this
    has occurred:'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分道扬镳**：由于它们决定分道扬镳，边界上下文之间没有交互。这可能是因为集成成本过高、不可持续或不可能。以下是一些已经发生这种情况的示例场景：'
- en: The teams for each bounded context have a tough time collaborating and agreeing.
    This can be due to legacy systems being involved or just organizational politics.
    Instead of dragging on the long negotiation process, the bounded context finds
    it easier and quicker to replicate the logic in its own spaces.
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个边界上下文的团队在协作和达成一致方面都遇到了困难。这可能是由于涉及遗留系统或仅仅是组织政治问题。而不是让漫长的谈判过程拖延下去，边界上下文发现复制其自身空间中的逻辑更容易且更快。
- en: The models between bounded contexts are too different for the conformist pattern
    to be used or too expensive for the anti-corruption layer pattern to be used compared
    to implementing tailored logic in its own bounded context. The upstream bounded
    context may only supply part of the data required by the downstream bounded context,
    while the downstream bounded context can replicate a part of the logic but create
    a complete model that’s suitable for its specific purpose.
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 边界上下文之间的模型差异太大，无法使用一致模式，或者与在其自身边界上下文中实现定制逻辑相比，使用反腐败层模式成本太高。上游边界上下文可能只提供下游边界上下文所需的部分数据，而下游边界上下文可以复制部分逻辑，但创建一个适合其特定目的的完整模型。
- en: Often, it’s in the generic subdomain where collaboration has little value compared
    to replicating the logic in the respective bounded contexts. It could be that
    certain libraries are used to generate data, hence why the cost of integration
    isn’t justified.
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常，在通用子领域中，与在各自的边界上下文中复制逻辑相比，协作的价值很小。可能某些库被用来生成数据，这就是为什么集成成本不合理的理由。
- en: '**Open-host service**: A bounded context defines and exposes a public API that
    other bounded contexts can use to extend its functionality. The public API is
    intentionally decoupled from the internal model so that both can be evolved independently.
    The internal model of the bounded context also remains private:'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开放式主机服务**：一个边界上下文定义并公开了一个公共API，其他边界上下文可以使用它来扩展其功能。公共API有意与内部模型解耦，以便两者可以独立演进。边界上下文的内部模型也保持私有：'
- en: '![Figure 8.8 – Open-host service](img/B21737_08_8.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图8.8 – 开放式主机服务](img/B21737_08_8.jpg)'
- en: Figure 8.8 – Open-host service
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.8 – 开放式主机服务
- en: '**Published language**: The published language focuses on establishing a shared
    language and glossary among bounded contexts. The published language doesn’t intend
    to conform to its ubiquitous language, though there’s no need to re-invent vocabulary
    if an appropriate term already exists in ubiquitous language.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布语言**：发布语言侧重于在边界上下文中建立共享语言和术语表。发布语言并不旨在符合其通用语言，尽管如果通用语言中已经存在合适的术语，则无需重新发明词汇。'
- en: Published language intends to expose a protocol that’s convenient for consuming
    bounded contexts. It’s expressed in an integration-oriented language that’s usually
    not related to any programming language. Also, each bounded context should be
    able to translate between published language and corresponding internal models.
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 发布语言旨在暴露一个方便消费边界上下文的协议。它用一种通常与任何编程语言无关的集成导向语言表达。此外，每个边界上下文都应该能够将发布语言与相应的内部模型之间进行转换。
- en: Published language ensures a consistent understanding of domain concepts and
    facilitates communication among bounded contexts.
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 发布语言确保了对领域概念的统一理解，并促进了边界上下文之间的沟通。
- en: Published language can be defined in many well-known formats, such as **OpenAPI**,
    **Avro**, **Protobuf**, fixed-length values, and comma-separated values.
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 发布语言可以定义在许多知名格式中，例如**OpenAPI**、**Avro**、**Protobuf**、固定长度值和逗号分隔值。
- en: Applying strategic design to a real-life example
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将战略设计应用于实际案例
- en: So far, we’ve outlined the techniques and methods that are used in strategic
    design in DDD. Now, we’re going to apply them to the same real-life example we’ve
    been using throughout this book.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经概述了在领域驱动设计中战略设计所使用的技巧和方法。现在，我们将把它们应用到本书中一直使用的相同实际案例中。
- en: Step 1 – synopsis of the business problem
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第1步 – 业务问题摘要
- en: 'Let’s revisit the real-life example of households exchanging services. The
    team managed to find a senior lady who started to exchange services in the village.
    The team interviewed her, and their notes were captured. Here’s the synopsis that
    was validated and clarified with her as the domain expert:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下家庭交换服务的实际案例。团队设法找到了一位开始在该村庄交换服务的资深女士。团队对她进行了采访，并记录了他们的笔记。以下是经过她作为领域专家验证和澄清的摘要：
- en: “We’re a tight-knit community where villagers frequently exchange services to
    support each other. The village consists of various households, each with its
    unique skills, talents, and needs. The households recognized that by offering
    their services, they could help one another and create a stronger community.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: “我们是一个紧密团结的社区，村民经常交换服务以支持彼此。村庄由各种家庭组成，每个家庭都有其独特的技能、才能和需求。家庭认识到，通过提供他们的服务，他们可以帮助彼此并创建一个更强大的社区。
- en: In this village, there were households specializing in different areas, such
    as carpentry, farming, cooking, and childcare. For instance, Mr. Whittington was
    a skilled carpenter who built and repaired furniture. When Mrs. Barker needed
    a new dining table, she approached Mr. Whittington to request his services.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个村庄里，有专门从事不同领域的家庭，如木工、农业、烹饪和育儿。例如，惠丁顿先生是一位技艺高超的木匠，他制作和修理家具。当巴克太太需要一张新的餐桌时，她找到惠丁顿先生请求他的服务。
- en: In return for Mr. Whittington’s carpentry work, Mrs. Barker offered fresh produce
    from her farm to Mr. Carpenter’s household throughout the year.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 作为惠丁顿先生木工工作的回报，巴克太太全年向木匠家庭提供她农场的新鲜农产品。
- en: Mrs. Barker drafted a contract to capture the details of the exchange, such
    as materials and dimensions of the table, what and how much fresh produce to provide,
    and a timeline. Mr. Whittington reviewed the contract and made a few adjustments.
    In the end, both Mr. Whittington and Mrs. Barker signed the contract.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 巴克夫人起草了一份合同，以记录交换的细节，例如桌子的材料和尺寸，提供什么和多少新鲜农产品，以及时间表。惠廷顿先生审查了合同并做了一些调整。最后，惠廷顿先生和巴克夫人都签署了合同。
- en: This arrangement helped Mr. Whittington and his family have a steady supply
    of nutritious food while allowing Mrs. Barker to enjoy beautifully crafted furniture
    in her home.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这种安排帮助惠廷顿先生和他的家庭获得了稳定的营养食品供应，同时允许巴克夫人在家中享受精美制作的家具。
- en: These exchanges created the fabric of the village’s social and economic ecosystem.
    They fostered trust, cooperation, and mutual support among households, creating
    a harmonious and resilient community.”
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这些交换构成了村庄社会和经济生态系统的框架。它们在家庭之间培养了信任、合作和相互支持，创造了一个和谐且具有弹性的社区。”
- en: Through this interview, the team captured the essence of the household service
    exchanges in the village. The team now understands the motivations, interactions,
    and benefits involved in the process.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这次访谈，团队捕捉到了村庄家庭服务交换的本质。现在，团队理解了过程中涉及到的动机、互动和利益。
- en: Step 2 – ubiquitous language
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第2步 – 通用语言
- en: 'At this point, the domain expert and the team can start to develop a shared
    understanding of the domain by identifying the following concepts mentioned in
    domain storytelling:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，领域专家和团队可以通过识别以下在领域故事中提到的概念来开始开发对领域的共同理解：
- en: '**Household**: A group of villagers who live together in the same place of
    residence.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**家庭**：居住在同一居住地的一群村民。'
- en: '**Services**: The skills that a household specializes in and can be offered
    to another household.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务**：家庭专长并能提供给另一个家庭的能力。'
- en: '**Contract**: An agreement of the details of the services that have been exchanged
    between two households.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合同**：两个家庭之间交换的服务细节的协议。'
- en: '**Draft contract**: A contract initiated by a household for another household
    to review.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**起草合同**：由一个家庭发起，供另一个家庭审查的合同。'
- en: '**Agreed contract**: A contract has its details mutually agreed upon and signed
    by the two households involved. An agreed contract is ready to be exercised.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**已达成协议的合同**：合同细节已由双方家庭共同商定并签署。已达成协议的合同准备执行。'
- en: '**Exercised contract**: A contract in which services performed by both households
    are completed, as per the details of each service.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**已执行合同**：一项双方家庭执行的服务已完成的合同，按照每个服务的详细信息。'
- en: This is the basis of the **ubiquitous language** in the form of a **glossary**.
    It’s developed by both the domain expert and the team.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这是**通用语言**的基础，以**术语表**的形式存在。它由领域专家和团队共同开发。
- en: Step 3 – subdomains
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第3步 – 子域
- en: Identifying subdomains is the next step of the DDD process. With the help of
    the glossary, the team has identified **Contract** as the core domain and **Household**
    as a supporting subdomain.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 识别子域是DDD过程的下一步。在术语表的帮助下，团队已将**合同**识别为核心域，将**家庭**识别为支持子域。
- en: '**Contract** is the core domain as it’s the heart of the business domain. Without
    it, there’s no need to build a system. Household is an essential supporting subdomain
    so that the households involved in each contract can be identified.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合同**是核心域，因为它是业务域的核心。没有它，就没有必要构建系统。家庭是一个必要的支持子域，以便识别每个合同中涉及的家庭。'
- en: '**Household** itself can’t be a core domain because it’s technically possible
    to solve the business problem with a Household subdomain. If households are merely
    names in each contract without capabilities to verify and identify them, there
    could be a cutdown version of the system that has no Household subdomain.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**家庭**本身不能作为核心域，因为技术上可能仅使用家庭子域就能解决业务问题。如果家庭在合同中仅仅是名称而没有验证和识别的能力，那么可能存在一个没有家庭子域的系统简化版本。'
- en: The team also recognized the need to notify households at several stages of
    a contract, such as when a contract is mutually agreed upon and ready to be exercised.
    Here, **notification** is also identified as a generic subdomain.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 团队也认识到在合同的几个阶段需要通知家庭，例如当合同双方达成一致并准备执行时。在这里，“通知”也被识别为一个通用子域。
- en: 'The core domain and the subdomains that have been identified are illustrated
    in *Figure 8**.9*:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 核心域和已识别的子域在**图8**.9中展示：
- en: '![Figure 8.9 – Core domain and subdomains](img/B21737_08_9.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.9 – 核心域和子域](img/B21737_08_9.jpg)'
- en: Figure 8.9 – Core domain and subdomains
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.9 – 核心域和子域
- en: Step 4 – bounded contexts
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 4 步 – 有限上下文
- en: With the core domain and subdomains defined in the problem space, it’s time
    to identify bounded contexts in the solution space. As mentioned previously, bounded
    contexts are defined by their scopes, responsibilities, and purposes.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在问题空间中定义了核心域和子域后，现在是时候在解决方案空间中识别有限上下文了。如前所述，有限上下文由其范围、责任和目的定义。
- en: The team understands that Contract is the core domain, and there are two workflows
    with contracts. The first one starts from a contract drafted until agreed. The
    second one starts from agreed until exercised. The team also understands that
    the only connecting point of these two workflows is an agreed contract.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 团队理解“合同”是核心域，并且有两个涉及合同的流程。第一个流程从起草合同开始，直到达成协议。第二个流程从达成协议开始，直到执行。团队还理解这两个流程的唯一连接点是达成协议的合同。
- en: There are team members who suggest one bounded context for the whole Contract
    core domain. There are also others suggesting one bounded context for the first
    journey and another one for the second.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 有团队成员建议为整个合同核心域创建一个有限上下文。也有其他人建议为第一个旅程创建一个有限上下文，为第二个旅程创建另一个。
- en: The team decides that the first journey of a contract from drafted to exercised
    is a bounded context and names it **Contract Service**. This bounded context maintains
    the workflow of contract from drafted to agreed, and then to exercised. However,
    a contract must involve two different households and services provided by each
    household. As a result, **Contract Service** covers the major portion of the Contract
    domain and a small portion of the Household subdomain to validate a contract.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 团队决定将合同的第一个旅程从起草到执行视为一个有限上下文，并将其命名为**合同服务**。这个有限上下文维护从起草到达成协议，再到执行的合同流程。然而，合同必须涉及两个不同的家庭以及每个家庭提供的服务。因此，**合同服务**覆盖了合同域的大部分以及家庭子域的一小部分以验证合同。
- en: The supporting subdomain, Household, also needs a bounded context to support
    the classic **Create, Read, Update, and Delete** (**CRUD**) operations of households.
    The corresponding bounded context is named **Household Service**.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 支持子域“家庭”也需要一个有限上下文来支持家庭的经典**创建、读取、更新和删除**（**CRUD**）操作。相应的有限上下文命名为**家庭服务**。
- en: The solution intends to notify households involved in a contract when it’s upon
    agreed or exercised. This generic subdomain, Notification, is covered by a bounded
    context named **Notification Service**.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案旨在在合同达成或执行时通知涉及该合同的家庭。这个通用子域“通知”由名为**通知服务**的有限上下文覆盖。
- en: '*Figure 8**.10* demonstrates how the bounded contexts overlay the core domain
    and subdomains:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8**.10* 展示了有限上下文如何覆盖核心域和子域：'
- en: '![Figure 8.10 – Bounded contexts, core domain, and subdomains](img/B21737_08_10.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.10 – 有限上下文、核心域和子域](img/B21737_08_10.jpg)'
- en: Figure 8.10 – Bounded contexts, core domain, and subdomains
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.10 – 有限上下文、核心域和子域
- en: '**Household Service** is the only bounded context that’s dedicated to its subdomain.
    Other bounded contexts have a major subdomain or core domain while also covering
    small portions of other subdomains so that they can function.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '**家庭服务**是唯一一个专门针对其子域的有限上下文。其他有限上下文有一个主要子域或核心域，同时覆盖其他子域的小部分，以便它们能够运行。'
- en: Step 5 – context mapping
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 5 步 – 上下文映射
- en: The relationships among bounded contexts need to be defined via context mapping.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 需要通过上下文映射来定义有限上下文之间的关系。
- en: '**Household Service** has no upstream dependencies, but **Contract Service**
    needs to receive household information to carry out their operations.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**家庭服务**没有上游依赖，但**合同服务**需要接收家庭信息以执行其操作。'
- en: A household under Household Service contains information such as the household’s
    name, contact email address, list of member names, residential address, and more.
    **Contract Service** only cares about the household name to validate a contract
    and the contact email address to be able to request a notification to be sent
    to a given household.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在“家庭服务”下的家庭包含诸如家庭名称、联系电子邮件地址、成员名单、居住地址等信息。“合同服务”只关心家庭名称以验证合同，以及联系电子邮件地址以便能够请求发送通知给指定的家庭。
- en: Since **Contract Service** represents the core domain, it’s beneficial to avoid
    bringing in elements from other bounded contexts using an anti-corruption layer
    when communicating with **Household Service**.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 **Contract Service** 代表核心领域，因此在与 **Household Service** 通信时，使用反腐败层避免引入来自其他边界上下文的内容是有益的。
- en: '**Notification Service**, as a generic bounded context, only needs to receive
    notification requests from a household and integrate with an email service provider
    to achieve its goal. It has a small portion of concepts that are supported by
    **Household Service** and **Contract Service**, but they dissolve into an email
    address, a title, and a body text. This is a customer-supplier relationship where
    **Notification Service** is the customer and other bounded contexts are suppliers.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**通知服务**作为一个通用边界上下文，只需要从家庭接收通知请求并与电子邮件服务提供商集成以实现其目标。它支持由 **Household Service**
    和 **Contract Service** 支持的一小部分概念，但它们溶解为一个电子邮件地址、一个标题和正文文本。这是一个客户-供应商关系，其中 **通知服务**
    是客户，其他边界上下文是供应商。'
- en: 'The overall **context map** is shown in *Figure 8**.11*:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 整体 **上下文映射**如 *图 8.11* 所示：
- en: '![Figure 8.11 – Context mapping](img/B21737_08_11.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.11 – 上下文映射](img/B21737_08_11.jpg)'
- en: Figure 8.11 – Context mapping
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.11 – 上下文映射
- en: The team and the domain expert have established ubiquitous language with a glossary
    as the output. They’ve also identified the core domain and subdomains. Finally,
    they’ve identified bounded contexts and the mapping among them.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 团队和领域专家已经通过输出词汇表建立了通用语言。他们还确定了核心领域和子领域。最后，他们确定了边界上下文及其之间的映射。
- en: The team now has a big picture of the whole household exchange service business
    model with strategic design in DDD. From now on, the team can focus on each of
    the bounded Contexts and their internal models.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 团队现在对整个家庭交换服务业务模型有了战略设计的大图景，这是 DDD 的一部分。从现在起，团队可以专注于每个边界上下文及其内部模型。
- en: DDD – tactical design
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DDD – 战术设计
- en: Tactical design focuses on the internal model and relationships within a bounded
    context. It aims to create a highly cohesive domain model that expresses the essential
    business concepts and aligns with the ubiquitous language that’s used within the
    context.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 战术设计关注于边界上下文内部的模型和关系。它的目标是创建一个高度内聚的领域模型，该模型表达了基本业务概念并与上下文中使用的通用语言保持一致。
- en: 'Tactical design consists of several building blocks that provide a foundation
    for designing and building a bounded context within complex business domains:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 战术设计由几个构建块组成，为在复杂业务域内设计和构建边界上下文提供基础：
- en: '`Address` class is a value object as it has no identity but encapsulates multiple
    fields that form an address:'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Address` 类是一个值对象，因为它没有标识符，但封装了构成地址的多个字段：'
- en: '[PRE0]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`Household` class is an entity that’s been identified by `name`:'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Household` 类是一个通过 `name` 标识的实体：'
- en: '[PRE1]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`Party` class is an aggregate because it contains the `Household` entity class:'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Party` 类是一个聚合，因为它包含 `Household` 实体类：'
- en: '[PRE2]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The `Contract` class is an aggregate root as it’s a top-level entrance to other
    aggregates, such as `Party`, and other entities, such as `Household`:'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Contract` 类是一个聚合根，因为它是对其他聚合（如 `Party`）和其他实体（如 `Household`）的最高级别入口：'
- en: '[PRE3]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The entry point to read and modify the state of an aggregate is called an **aggregate
    root**. Aggregates take part in maintaining the integrity of the domain model
    and ensuring all related entities are linked together sensibly.
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 读取和修改聚合状态入口点被称为 **聚合根**。聚合参与维护领域模型的完整性并确保所有相关实体都合理地链接在一起。
- en: '**Domain services**: Domain services encapsulate domain behaviors that aren’t
    tied to a specific entity or value object. They enforce collaboration among multiple
    objects. Domain services help maintain the cohesion and integrity of the domain
    model.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**领域服务**：领域服务封装了与特定实体或值对象无关的领域行为。它们强制多个对象之间的协作。领域服务有助于维护领域模型的内聚性和完整性。'
- en: '**Repositories**: A repository stores and retrieves domain objects. It defines
    the possible storage and retrieval options for domain objects but abstracts away
    the actual storage implementation. A repository can be persistent, similar to
    databases or files. It can also be transient, similar to an in-memory cache. Persistence,
    availability, isolation levels, and underlying storage methods are the only implementation
    details. In other words, the **domain service** doesn’t need to make technology
    choices for data storage.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仓储**：仓储存储和检索领域对象。它定义了领域对象的可能存储和检索选项，但抽象了实际的存储实现。仓储可以是持久的，类似于数据库或文件。它也可以是瞬时的，类似于内存缓存。持久性、可用性、隔离级别和底层存储方法是唯一的实现细节。换句话说，**领域服务**不需要为数据存储做出技术选择。'
- en: '**Domain events**: Domain events represent things that have happened within
    a bounded context. They’re all named in the past tense and are immutable.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**领域事件**：领域事件代表在边界上下文中发生的事情。它们都使用过去时态命名，且不可变。'
- en: 'Putting these building blocks together, the scope of tactical design in DDD
    can be illustrated like so:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些构建块组合起来，DDD 中战术设计的范围可以如下表示：
- en: '![Figure 8.12 – Tactical design in DDD](img/B21737_08_12.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.12 – DDD 中的战术设计](img/B21737_08_12.jpg)'
- en: Figure 8.12 – Tactical design in DDD
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.12 – DDD 中的战术设计
- en: Here, **Bounded Context** is the core of the application. Then, we have **Core**,
    which is the same concept that we covered in [*Chapter 7*](B21737_07.xhtml#_idTextAnchor255)
    when we talked about layered architectures – it’s a pure business concern area
    free of technology choices. This is also where all elements of tactical design
    are located.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，**边界上下文**是应用的核心。然后，我们有**核心**，这是我们在[*第 7 章*](B21737_07.xhtml#_idTextAnchor255)中讨论分层架构时提到的相同概念——它是一个没有技术选择纯业务关注区域。这也是战术设计所有元素所在的地方。
- en: The application transforms an external request into an internal request that
    **Domain Service** handles. The request is validated and handled by a set of business
    rules that are in **Domain Service** or the corresponding **Aggregate**. Then,
    **Domain Service** accesses **Aggregate** from the root **Entity** to access the
    underlying entities and other value objects. After, **Domain Service** uses **Repository**
    to persist and retrieve entities as part of the handling process.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 应用将外部请求转换为**领域服务**处理的内部请求。请求由**领域服务**或相应的**聚合**中的业务规则进行验证和处理。然后，**领域服务**从根**实体**访问**聚合**以访问底层实体和其他值对象。之后，**领域服务**使用**仓储**作为处理过程的一部分来持久化和检索实体。
- en: Finally, **Domain Service** returns a response to the originator of the request.
    The application transforms the internal response into an external response. Meanwhile,
    domain events are produced due to request handling. These events are picked up
    by the application, transformed into external events, and published.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，**领域服务**将响应返回给请求的发起者。应用将内部响应转换为外部响应。同时，由于请求处理，产生域事件。这些事件被应用捕获，转换为外部事件，并发布。
- en: Applying tactical design to a real-life example
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将战术设计应用于实际案例
- en: Previously, the team defined three bounded contexts during strategic design
    for the real-life example of households exchanging services. Here, the team will
    pick one bounded context and go through the tactical design exercise.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前，团队在针对家庭交换服务的实际案例的战略设计中定义了三个边界上下文。在这里，团队将选择一个边界上下文，并完成战术设计练习。
- en: Step 1 – identify aggregates, entities, and value objects
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 1 步 – 识别聚合、实体和值对象
- en: 'The bounded context that’s been chosen here is **Contract Service**, which
    represents the core domain of **Contract**. The goal of this bounded context is
    to maintain the life cycle of a contract from when it was first drafted to when
    it’s mutually exercised. The team has identified an aggregate with the following
    structure:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 这里选择的边界上下文是**合同服务**，它代表**合同**的核心领域。这个边界上下文的目标是维护合同的整个生命周期，从最初起草到双方共同执行。
- en: '[PRE4]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The **Contract** aggregate starts with the root **Contract** entity. The **Contract**
    entity is identified by an ID. The Contract entity contains two value objects
    of the same type: **Party**. The **Party** value object only holds the necessary
    fields to represent a party of a contract. The **Party** value object holds a
    **Household** entity.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '**合同**聚合从根**合同**实体开始。**合同**实体通过一个ID来识别。合同实体包含两个相同类型的值对象：**当事人**。**当事人**值对象只包含表示合同一方所需的必要字段。**当事人**值对象包含一个**住户**实体。'
- en: The **Household** entity is local to **Contract Service** as it only contains
    a name and email address that are relevant to the bounded context. Here, **Household
    Service** supplies a full **Household** entity from the bounded context of **Household
    Service**. The foreign entity contains other fields such as residential address;
    these are ignored when the anti-corruption layer in **Contract Service** transforms
    the foreign entity into the local **Household** entity.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '**住户**实体在**合同服务**中是本地的，因为它只包含与边界上下文相关的名称和电子邮件地址。在这里，**住户服务**从**住户服务**的边界上下文中提供完整的**住户**实体。外部的实体包含其他字段，如住宅地址；当**合同服务**中的反腐败层将外部实体转换为本地**住户**实体时，这些字段被忽略。'
- en: As a result, the local **Household** entity only contains a name and a contact
    email address. The local **Household** entity is identified by its name.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，本地的**住户**实体只包含一个名称和一个联系电子邮件地址。本地的**住户**实体通过其名称来识别。
- en: Step 2 – identify domain services, repositories, and domain events
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第2步 – 识别领域服务、存储库和领域事件
- en: Having defined the aggregate with the root, entities, and value objects underneath
    it, the team can identify the operations required by the bounded context to achieve
    its goal.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义了根、其下的实体和值对象之后，团队可以确定边界上下文为实现其目标所需的操作。
- en: 'There are three major operations in this bounded context:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个边界上下文中有三个主要操作：
- en: A contract is drafted by a household
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合同由一个住户起草
- en: A contract is agreed upon by all households involved
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有参与的住户都同意合同
- en: A contract is exercised by all households involved
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合同由所有参与的住户执行
- en: The corresponding timestamp should be set on the contract when these operations
    take place. The service should also notify the downstream bounded context using
    events.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 当这些操作发生时，应在合同上设置相应的时间戳。服务还应通过事件通知下游的边界上下文。
- en: '**Contract Service** validates incoming requests such as whether the contract
    and the household exist, and whether the contract should change. If everything
    goes well, a timestamp is set against the corresponding service in the contract.
    If a contract has been drafted, agreed upon, or exercised, a corresponding domain
    event is published.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '**合同服务**验证传入的请求，例如合同和住户是否存在，以及合同是否应该更改。如果一切顺利，则在合同中设置对应服务的相应时间戳。如果合同已被起草、同意或执行，则发布相应的领域事件。'
- en: To support this operation, **Contract Service** needs to know both households.
    They are supplied by domain events published by upstream bounded contexts.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 为了支持这个操作，**合同服务**需要知道两个住户。它们由上游边界上下文发布的领域事件提供。
- en: This bounded context consumes **Household Updated Event** published by **Household
    Service**. The **Household** entity is converted from this event and is stored
    in **Household Repository**.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 这个边界上下文消费由**住户服务**发布的**住户更新事件**。**住户**实体从这个事件转换而来，并存储在**住户存储库**中。
- en: The **Household** entity local to **Contract Service** is a trimmed down of
    the original **Household** entity in **Household Service**. **Contract Service**
    should only take the fields from **Household** that are relevant to the operations
    within its bounded context. Meanwhile, **Household Service** contains the full
    set of fields of **Household** relevant to the whole business domain.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '**合同服务**中的本地**住户**实体是**住户服务**中原始**住户**实体的一个简化版。**合同服务**应只取**住户**中与其边界上下文内的操作相关的字段。同时，**住户服务**包含与整个业务领域相关的**住户**的全部字段集。'
- en: These repositories serve as local caches, so **Contract Service** remains if
    other bounded contexts are unavailable.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 这些存储库作为本地缓存，因此如果其他边界上下文不可用，**合同服务**仍然存在。
- en: 'The inside of the bounded context can be seen in *Figure 8**.13*:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 边界上下文的内部结构可以在*图8.13*中看到。13*：
- en: '![Figure 8.13 – Inside the bounded context – Contract Service](img/B21737_08_13.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![图8.13 – 边界上下文内部 – 合同服务](img/B21737_08_13.jpg)'
- en: Figure 8.13 – Inside the bounded context – Contract Service
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.13 – 边界上下文内部 – 合同服务
- en: The domain expert and the team have run through both strategic and tactical
    designs for the real-life example. They’ve covered ubiquitous language, subdomains,
    bounded contexts, context mapping, aggregates, entities, value objects, domain
    services, domain events, and repositories. Through these exercises, the domain
    expert and the team have established a shared understanding of the business problems,
    and they now have a useful model that they can use as a foundation for building
    a software system.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 领域专家和团队已经针对现实生活中的例子进行了战略和战术设计的演练。他们涵盖了通用语言、子域、边界上下文、上下文映射、聚合、实体、值对象、领域服务、领域事件和存储库。通过这些练习，领域专家和团队建立了对业务问题的共同理解，并且现在他们有一个有用的模型，可以作为构建软件系统的基础。
- en: There are a few formats of DDD workshops that any organization can consider
    bringing in to improve communication and collaboration among stakeholders and
    engineers. The next section will briefly introduce them and their formats.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种领域驱动设计工作坊的格式，任何组织都可以考虑引入，以改善利益相关者和工程师之间的沟通和协作。下一节将简要介绍它们及其格式。
- en: Modeling activities for DDD
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 领域驱动设计的建模活动
- en: In our real-life example, we covered how the solution evolves and emerges from
    the input of the team and the domain expert. It’s important to understand the
    actual modeling activities that are involved in DDD so that we can put them into
    practice.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的现实生活例子中，我们介绍了解决方案是如何从团队和领域专家的输入中演变和出现的。了解领域驱动设计中涉及的实际建模活动非常重要，这样我们才能将其付诸实践。
- en: There are a few popular modeling activities that drive the direction of the
    design from both the team and the domain expert.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种流行的建模活动可以推动团队和领域专家设计方向的发展。
- en: Domain expert interview
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 领域专家访谈
- en: 'The concept of a domain expert interview was made popular by *Eric Evans* in
    his book *Domain-Driven Design: Tackling Complexity in the Heart of Software*,
    published in 2003.'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 领域专家访谈的概念是由*埃里克·埃文斯*在他的书中提出的，这本书是《领域驱动设计：软件核心的复杂性处理》，于2003年出版。
- en: 'Performing a domain expert interview is an approach that you can use to gain
    deep insights into the business domain and understand its intricacies. It is particularly
    applicable in the following scenarios:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 进行领域专家访谈是一种可以用来深入了解业务领域并理解其复杂性的方法。它特别适用于以下场景：
- en: The domain expert is external to the organization
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 领域专家是组织外部的
- en: The domain expert has only limited time to be involved
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 领域专家参与的时间有限
- en: The organization starts a new line of business and brings in domain experts
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组织开始新的业务线并引入领域专家
- en: The team is new and doesn’t have much prior knowledge of the domain
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队是新的，对领域没有太多先前的知识
- en: 'Here are some guidelines for conducting effective domain expert interviews
    in DDD:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些在领域驱动设计中进行有效领域专家访谈的指南：
- en: '**Identify the right experts**: Identify individuals, both internally and externally,
    who possess in-depth knowledge and expertise in the specific domain. Look for
    subject matter experts, experienced practitioners, or individuals who have a deep
    understanding of the business processes and rules involved.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**识别合适的专家**：识别内部和外部具有特定领域深入知识和专业知识的个人。寻找主题专家、经验丰富的实践者或对涉及的业务流程和规则有深刻理解的个人。'
- en: '**Prepare an interview plan**: State clear objectives of the interview. Develop
    an outline of each topic. Prepare a list of questions, preferably open-ended ones,
    to ask. Pay attention to potential pain points and areas of uncertainty.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**准备访谈计划**：明确访谈的目标。为每个主题制定大纲。准备一个问题清单，最好是开放式问题，以便提问。注意潜在的痛点和不明确区域。'
- en: '**Establish a comfortable environment**: Establish a collaborative atmosphere
    with the domain expert during the interview. Make them feel comfortable and valued.
    Clearly explain the interview’s purpose and outline the topics to be covered.
    Emphasize that their opinions are critical for your project’s success. Create
    an atmosphere where they feel free to share their knowledge and experiences.'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**建立一个舒适的环境**：在访谈过程中与领域专家建立协作氛围。让他们感到舒适和受重视。清楚地解释访谈的目的和概述要讨论的主题。强调他们的意见对项目成功至关重要。创造一个让他们能够自由分享知识和经验的环境。'
- en: '**Active listening**: During the interview, practice active listening. Pay
    close attention to the expert’s verbal responses and non-verbal communication.
    Clarify their answers whenever necessary and ask follow-up questions to delve
    deeper into specific areas of interest. Show genuine interest in their insights
    and validate their contributions.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**积极倾听**：在面试期间，练习积极倾听。密切关注专家的口头回答和非语言交流。在必要时澄清他们的答案，并就特定兴趣领域提出后续问题以深入了解。表现出对他们见解的真实兴趣，并验证他们的贡献。'
- en: '**Capture notes**: Take thorough and detailed notes during the interview. Document
    important concepts, terms, processes, and examples that the expert shares. Record
    key details, such as business rules, decision-making criteria, and exceptions.
    Use visual aids, such as diagrams or sketches, to capture their explanations and
    mental models.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**记录笔记**：在面试期间做详尽的详细笔记。记录专家分享的重要概念、术语、流程和例子。记录关键细节，如业务规则、决策标准以及例外情况。使用图表或草图等视觉辅助工具来捕捉他们的解释和心智模型。'
- en: '**Validate and clarify information**: After the interview, review the notes
    that were taken and validate the information that’s been gathered. Clarify with
    the domain expert or have follow-up discussions on ambiguity or uncertainty. It’s
    important to ensure that the team has a clear and accurate understanding of the
    domain.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**验证和澄清信息**：在面试后，回顾所记录的笔记并验证收集到的信息。与领域专家进行澄清，或就模糊性或不确定性进行后续讨论。确保团队对领域有清晰和准确的理解非常重要。'
- en: '**Share and validate your findings**: After the interview, share your findings
    with the domain expert and other stakeholders to validate your understanding.
    Actively seek their feedback and incorporate any corrections or additional insights
    they may provide. By incorporating their input, the domain model can be refined
    and improved, ensuring that the software system accurately reflects the intricacies
    and requirements of the business domain.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分享和验证你的发现**：在面试后，与领域专家和其他利益相关者分享你的发现以验证你的理解。积极寻求他们的反馈，并吸收他们可能提供的任何纠正或额外见解。通过吸收他们的意见，领域模型可以得到改进和优化，确保软件系统准确反映业务领域的复杂性和需求。'
- en: The domain expert interview is an iterative process. As the team understands
    more of the domain, new questions arise. Continuous collaboration and feedback
    with domain experts throughout the project can significantly contribute to the
    success of your DDD implementation.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 领域专家访谈是一个迭代过程。随着团队对领域了解的加深，新的问题会出现。在整个项目过程中与领域专家持续进行协作和反馈，可以显著促进你的领域驱动设计（DDD）实施的成功。
- en: Event storming
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 事件风暴
- en: Event storming is a domain modeling technique that was developed by *Alberto
    Brandolini* in 2013\. Event storming requires the team, domain experts, and other
    stakeholders to gather in the same place, ideally in person, and garner a mix
    of perspectives and knowledge about the domain.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 事件风暴是一种由 *Alberto Brandolini* 在 2013 年开发的领域建模技术。事件风暴要求团队、领域专家和其他利益相关者聚集在同一地点，最好是面对面，汇集关于领域的不同观点和知识。
- en: An in-person event storming session requires a large whiteboard, many marker
    pens of assorted colors, and many stickies of many colors. Alternatively, online
    collaboration drawing tools that have the same elements can suffice.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 现场事件风暴会议需要一个大的白板、多种颜色的许多记号笔和许多颜色的便签。或者，具有相同元素的在线协作绘图工具也可以满足需求。
- en: Participants are expected to actively engage in every activity of the process.
    They’re expected to move some stickies, erase lines, and draw some lines on the
    board simultaneously.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 预期参与者将积极参与过程中的每一个活动。他们需要同时移动一些便签、擦除线条并在白板上绘制线条。
- en: The session starts with outlining the scope of the session. It should focus
    on a specific business process or domain participants want to explore. This could
    also be a specific feature, a user journey, or a critical aspect of the domain.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 会议开始于概述会议范围。它应该专注于参与者想要探索的特定业务流程或领域。这也可以是一个特定功能、用户旅程或领域的关键方面。
- en: 'Afterward, the session can be run in the following sequence. If necessary,
    participants can go back and correct any sticky notes as they learn more in later
    steps:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，会议可以按照以下顺序进行。如果需要，参与者可以在后续步骤中学习更多内容时，返回并纠正任何有问题的便签：
- en: '`Contract Agreed` or `Household Updated`.'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`合同已签订` 或 `家庭信息已更新`。'
- en: '**Arrange the events**: Once there’s a collection of domain events, work on
    the domain events on the whiteboard. Group duplicated events, remove irrelevant
    events, or correct ambiguous events. Place the events in chronological order,
    creating a timeline from left to right. This helps visualize the flow of events
    and their sequence.'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**安排事件**：一旦收集到一组域事件，就在白板上处理这些域事件。分组重复事件，删除不相关的事件，或纠正模糊的事件。将事件按时间顺序排列，从左到右创建时间线。这有助于可视化事件的流动和它们的顺序。'
- en: '**Add actors and commands**: Identify the actors or entities involved in the
    events. These could be system components or human users. Capture actors as sticky
    notes but use a different color (for example, yellow). Place them above or below
    the relevant events.'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**添加演员和命令**：识别事件中涉及的演员或实体。这些可能是系统组件或人类用户。将演员以贴纸形式捕捉，但使用不同的颜色（例如，黄色）。将它们放置在相关事件上方或下方。'
- en: Identify any commands or actions that trigger the events and associate them
    with the respective events. Commands are the user’s intent to do certain things.
    Commands or actions should use a new color (for example, blue) for stickies.
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 识别触发事件的任何命令或动作，并将它们与相应的事件关联起来。命令是用户想要做某些事情的意图。命令或动作应使用新的颜色（例如，蓝色）的贴纸。
- en: Identify external systems that trigger the events. Use a dedicated color (for
    example, red) for the stickies.
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 识别触发事件的任何外部系统。使用专用颜色（例如，红色）的贴纸。
- en: '**Explore policies and business rules**: Pay attention to policies, constraints,
    and business rules associated with the events. Capture them as separate sticky
    notes of a new color (for example, purple) and link them to the relevant events,
    commands, or actors. These rules help shape the behavior and interactions within
    the domain.'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**探索策略和业务规则**：注意与事件相关的策略、约束和业务规则。将它们作为新颜色的单独贴纸捕捉（例如，紫色），并将它们链接到相关的事件、命令或演员。这些规则有助于塑造域内的行为和交互。'
- en: '**Discuss and refine the model**: Facilitate discussions among the participants
    alongside the stickies for events, actors, commands, external systems, and policies.
    Encourage them to share their knowledge, insights, and questions related to events
    and their relationships. Refine the model by rearranging, adding, or removing
    stickies during the discussions.'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**讨论和细化模型**：在贴纸旁边促进参与者之间的讨论，包括事件、演员、命令、外部系统和策略。鼓励他们分享与事件及其关系相关的知识、洞察和问题。通过在讨论期间重新排列、添加或删除贴纸来细化模型。'
- en: '**Identify aggregates and bounded contexts**: Look for patterns and events
    that often go together. This cluster of events may indicate potential aggregates.
    Identify bounded contexts, which are cohesive areas of the domain with well-defined
    purposes, boundaries, and language.'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**识别聚合和边界上下文**：寻找经常一起出现的事件和模式。这个事件群可能表明潜在的聚合。识别边界上下文，这是具有明确目的、边界和语言的域的凝聚区域。'
- en: '**Capture insights and next steps**: Capture any valuable insights, questions,
    or areas of uncertainty that arise. Make note of any follow-up actions or further
    investigations needed to refine the domain model.'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**捕捉洞察和下一步行动**：捕捉任何有价值的洞察、问题或不确定区域。记录任何后续行动或进一步调查以细化域模型所需的行动。'
- en: Event storming is also an iterative process. Sometimes, it takes multiple sessions
    to fully explore and refine the domain model. Encourage collaboration, active
    participation, and idea sharing among the participants to gain a common understanding
    and drive the software system aligned with the business objectives.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 事件风暴也是一个迭代的过程。有时，需要多次会议才能完全探索和细化域模型。鼓励参与者之间的协作、积极参与和思想共享，以获得共同的理解并推动与业务目标一致的软件系统。
- en: Domain storytelling
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 域叙事
- en: '**Domain storytelling** was introduced in 2019 by *Stefan Hofer* and *Henning
    Schwentner* in their book *Domain Storytelling: A Collaborative Approach to* *Domain-Driven
    Design.*'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '**域叙事**由*Stefan Hofer*和*Henning Schwentner*在2019年他们所著的《域叙事：域驱动设计的协作方法》一书中提出。'
- en: Domain storytelling is a collaborative and interactive approach to gaining a
    deeper understanding of a complex business domain. The team, domain experts, and
    other stakeholders come together, ideally in person, to develop stories that depict
    various aspects of the business domain.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 域叙事是一种协作和互动的方法，旨在更深入地理解复杂的企业域。团队、域专家和其他利益相关者聚集在一起，理想情况下是亲自，以开发描绘业务域各个方面的故事。
- en: Like event storming, an in-person domain storytelling session requires a large
    whiteboard, many marker pens, and many stickies. Again, online whiteboard collaboration
    tools that have the same elements can suffice.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 与事件风暴类似，面对面的领域叙事会议需要一个大的白板、许多记号笔和许多便利贴。同样，具有相同元素的在线白板协作工具也足够使用。
- en: Domain experts and stakeholders draw out a real-life business scenario by putting
    stickies on the whiteboard and connecting them with marker pens.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 领域专家和利益相关者通过在白板上贴上便利贴并用记号笔连接它们，绘制出一个真实的业务场景。
- en: 'The domain story about drafting a contract may look like this:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 关于起草合同的领域故事可能看起来像这样：
- en: '![Figure 8.14 – A domain story about drafting a contract](img/B21737_08_14.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![图8.14 – 关于起草合同的领域故事](img/B21737_08_14.jpg)'
- en: Figure 8.14 – A domain story about drafting a contract
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.14 – 关于起草合同的领域故事
- en: These stories capture the context, challenges, interactions, and relationships
    within the domain. As the story is being told, everyone actively listens, asks
    questions, provides background information such as business rules, motivation,
    and pain points, or even picks up a pen and draws.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 这些故事捕捉了领域内的上下文、挑战、交互和关系。当故事被讲述时，每个人都积极参与地倾听、提问，提供背景信息，如业务规则、动机和痛点，甚至拿起笔绘制草图。
- en: Participants may want to adopt a certain format, such as the **Business Process
    Modeling Notation** (**BPMN**) mentioned in [*Chapter 2*](B21737_02.xhtml#_idTextAnchor045),
    but this isn’t mandatory. The essence of the exercise is communication and collaboration
    to align everyone on a shared understanding. Also, domain experts may not be familiar
    with the standard visual notions. Instead of having them struggle to get the right
    notions, participants should focus on getting the right information instead.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 参与者可能希望采用某种格式，例如在[*第二章*](B21737_02.xhtml#_idTextAnchor045)中提到的**业务流程建模符号**（**BPMN**），但这并非强制要求。练习的本质是沟通和协作，以确保大家对共同的理解达成一致。此外，领域专家可能不熟悉标准的视觉概念。为了避免他们为了获得正确的概念而挣扎，参与者应专注于获取正确的信息。
- en: Participants should use this opportunity to clear up any ambiguous, unclear,
    and misused languages to aim for ubiquitous language.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 参与者应利用这个机会澄清任何含糊不清、不明确和误用的语言，以实现通用语言。
- en: The visual representation serves as a shared artifact that can be referred to
    and refined throughout the development process.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 视觉表示作为共享工件，可以在整个开发过程中被参考和改进。
- en: Domain storytelling helps bridge the gap between the team and domain experts
    by collaboratively working toward a shared language and understanding of the domain.
    It helps uncover hidden requirements, edge cases, and exceptional scenarios that
    may often be found in the middle or late stage of development. As a result, it
    reduces the cost of design modifications and lowers the risks of scope creep.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 领域叙事通过共同努力实现共享语言和领域理解，帮助弥合团队和领域专家之间的差距。它有助于揭示隐藏的需求、边缘情况和异常场景，这些通常在开发的中后期被发现。因此，它减少了设计修改的成本，并降低了范围蔓延的风险。
- en: Additionally, domain storytelling provides a user-centric perspective to software
    systems by emphasizing the needs, goals, and experiences of the users within the
    stories. It aids the team and domain experts in identifying bounded contexts,
    aggregate roots, and domain entities, promoting a robust and accurate domain model.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，领域叙事通过强调故事中用户的需求、目标和经验，为软件系统提供了一个以用户为中心的视角。它帮助团队和领域专家识别边界上下文、聚合根和领域实体，从而促进构建一个强大且准确的领域模型。
- en: Overall, domain storytelling serves as a powerful tool for domain exploration,
    analysis, and communication. It helps build a shared understanding of the domain,
    facilitates collaboration between stakeholders and the team, and supports building
    software systems that accurately reflect the intricacy and requirements of the
    business domain.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，领域叙事作为领域探索、分析和沟通的有力工具，有助于建立对领域的共同理解，促进利益相关者和团队之间的协作，并支持构建准确反映业务领域复杂性和需求的软件系统。
- en: Comparing modeling activities
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型活动比较
- en: All modeling activities in DDD are iterative. They continuously refine and shape
    the software systems as participants understand more the subject matters, and
    as business evolves.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 在领域驱动设计中，所有的模型活动都是迭代的。随着参与者对主题内容的理解不断深入，以及业务的不断发展，这些活动持续地精炼和塑造软件系统。
- en: However, the dynamics of these three activities are different. In a domain expert
    interview, the team drives the interview by preparing the topics and questions.
    The domain experts primarily react to these materials, and the team actively listens
    and responds. In event storming, everyone works on all stickies on the board,
    guided by the knowledge shared among domain experts and stakeholders. Finally,
    in domain storytelling, it’s the narrative of the domain experts and stakeholders
    but on a whiteboard, with the teams actively listening, reacting, and asking questions.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这三个活动的动态是不同的。在领域专家访谈中，团队通过准备主题和问题来驱动访谈。领域专家主要对这些材料做出反应，团队则积极倾听并做出回应。在事件风暴中，每个人都根据领域专家和利益相关者之间共享的知识在板上的所有便签上工作。最后，在领域故事讲述中，领域专家和利益相关者的叙述是在白板上进行的，团队则积极倾听、反应和提问。
- en: They’re all good tools to use. Domain expert interviews are particularly useful
    if it’s difficult to have the domain experts available. Event storming is useful
    if everyone has some knowledge and experience about the domain. It focuses on
    visualizing the flow of events in a timeline from left to right. Domain storytelling
    focuses on capturing domain knowledge with a narrative story. It doesn’t require
    a timeline to be created from left to right and doesn’t require all labels that
    event storming uses to be used.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 这些都是很好的工具。如果难以让领域专家可用，领域专家访谈尤其有用。如果每个人都对领域有一些知识和经验，事件风暴就很有用。它侧重于从左到右可视化事件流的时间线。领域故事讲述侧重于用叙述故事捕捉领域知识。它不需要创建从左到右的时间线，也不需要使用事件风暴所用的所有标签。
- en: Summary
  id: totrans-242
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we delved into two major design approaches in DDD. We covered
    the fundamental concepts of strategic design to get the bigger picture of the
    domain while providing a real-life example. Here, we covered concepts such as
    ubiquitous language, subdomains, bounded contexts, and context mapping.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们深入探讨了 DDD 中的两种主要设计方法。我们涵盖了战略设计的基本概念，以获得领域的大图景，同时提供了一个现实生活中的例子。在这里，我们涵盖了通用语言、子域、边界上下文和上下文映射等概念。
- en: Afterward, we explored tactical design by using a bounded context from the strategic
    design example. We showcased how to identify aggregates, entities, value objects,
    domain services, repositories, and domain events.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们通过使用战略设计示例中的边界上下文来探索战术设计。我们展示了如何识别聚合、实体、值对象、领域服务、存储库和领域事件。
- en: 'We also covered three popular modeling activities in DDD and discussed their
    agendas: the domain expert interview, event storming, and domain storytelling.'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还涵盖了 DDD 中的三个流行建模活动，并讨论了它们的议程：领域专家访谈、事件风暴和领域故事讲述。
- en: At this point, you should be able to plan and design an architecture with the
    DDD approach, using at least one of the modeling activities outlined.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你应该能够使用至少一种概述的建模活动来规划和设计使用 DDD 方法架构。
- en: In the next chapter, we’re going to deep dive into some of the architectural
    patterns based on DDD, namely **Command and Query Responsibility Segregation**
    (**CQRS**) and **event sourcing**.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨基于 DDD 的某些架构模式，即**命令查询责任分离**（**CQRS**）和**事件溯源**。
