- en: Chapter 2. Getting Up and Running
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章 启动和运行
- en: In this chapter we will examine the Unity Interface in detail, explore all of
    its views and tools while personalizing them to suit our particular development
    style, and configure our environment for remote debugging using Unity Remote.
    In this chapter we will finish laying down the foundation for building applications
    and explore all of the Unity options that we need.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在本章中，我们将详细检查Unity界面，探索其所有视图和工具，同时根据我们的特定开发风格进行个性化设置，并使用Unity Remote配置我们的环境以进行远程调试。在本章中，我们将完成构建应用程序的基础建设，并探索我们需要的所有Unity选项。
- en: 'In this chapter we shall:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中我们应当：
- en: Explore the Unity user interface
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索Unity用户界面
- en: Customize our interface with new custom layouts
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用新自定义布局自定义我们的界面
- en: Configure and deploy Unity Remote for debugging
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置和部署Unity Remote进行调试
- en: Test our application using Unity Remote and our new custom layout
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Unity Remote和我们的新自定义布局测试我们的应用程序
- en: So let's get on with it...
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 那我们就开始吧...
- en: Welcome home
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 欢迎回家
- en: If you've ever used a 3D modeling tool or written an application using any modern
    software development IDE you will find Unity 3 very familiar and fairly straightforward.
    The interface for Unity is composed of a Toolbar area that consists of 5 basic
    control groups and a number of user customizable areas that can contain Views.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您曾经使用过3D建模工具或使用任何现代软件开发IDE编写过应用程序，您会发现Unity 3非常熟悉且相当直观。Unity的界面由一个工具栏区域组成，该区域包含5个基本控制组以及可以包含视图的多个用户可自定义区域。
- en: Transform tools
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变换工具
- en: The transform tools are used with the Scene View and allow you to manipulate
    the objects in the scene. We will take a moment to walk through these tools since
    we will spend much of our time using them.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 变换工具与场景视图一起使用，允许您操纵场景中的对象。我们将花点时间来介绍这些工具，因为我们的大部分时间都将花费在使用它们上。
- en: '![Transform tools](img/978-1-84969-040-9_2_1.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![变换工具](img/978-1-84969-040-9_2_1.jpg)'
- en: Working our way from left to right the first of the tools is a multi-use tool
    that is used to manipulate the camera in the scene. The camera you're moving is
    of your view of the scene and has no relationship to what is actually shown in
    the game.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 从左到右工作，第一个工具是一个多用途工具，用于在场景中操纵相机。您正在移动的相机是您对场景的视图，它与游戏中实际显示的内容没有关系。
- en: In the default mode, the **Hand** tool will simply translate the camera around.
    Pressing the left mouse button and dragging will translate along the X-axis of
    the camera. If you have a mouse wheel, scrolling that wheel will move the camera
    along the Z-axis.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在默认模式下，**手形**工具将简单地沿相机周围平移。按下鼠标左键并拖动将沿相机的X轴平移。如果您有鼠标滚轮，滚动该滚轮将沿Z轴移动相机。
- en: '![Transform tools](img/978-1-84969-040-9_2_2.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![变换工具](img/978-1-84969-040-9_2_2.jpg)'
- en: Holding the *Alt* key or the right mouse button will cause the Hand to change
    into an Eye. In this mode you can orbit the camera around its current pivot point
    in the scene. The Scene Gizmo in the upper left of the scene view reflects this.
    As you pivot the camera, the gizmo will update to reflect the current camera pivot.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 按住*Alt*键或右鼠标按钮将使手形光标变为眼睛形。在此模式下，您可以在场景中围绕当前轴点旋转相机。场景视图左上角的场景Gizmo反映了这一点。当您旋转相机时，Gizmo将更新以反映当前相机的轴点。
- en: '![Transform tools](img/978-1-84969-040-9_2_3.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![变换工具](img/978-1-84969-040-9_2_3.jpg)'
- en: Holding the *Control* key allows you to zoom the camera as you move the mouse
    around in the scene. This is particularly useful if you need to get in close to
    where some critical action should be taking place.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 按住*控制*键允许您在场景中移动鼠标时缩放相机。如果您需要靠近某个关键动作发生的地方，这特别有用。
- en: Transform Gizmo Toggles
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变换 Gizmo 开关
- en: There are two gizmos that determine how the updates to an object, using the
    Transform Gizmo, will impact on the object. The Transform Gizmo is just as it
    sounds, it appears in the Scene View and allows us to change the position or rotation
    of an object. These toggles determine where the Gizmo will appear.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个Gizmo决定了使用变换Gizmo更新对象时将如何影响对象。变换Gizmo正如其名，它出现在场景视图中，允许我们更改对象的位置或旋转。这些开关决定了Gizmo将出现在哪里。
- en: '![Transform Gizmo Toggles](img/978-1-84969-040-9_2_4.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![变换 Gizmo 开关](img/978-1-84969-040-9_2_4.jpg)'
- en: The first toggle is the **Position** toggle. If set to **Center**, the Transformation
    Gizmo will appear in the center of the object's bounds that you want to transform.
    In most cases this is what you want if you are laying out an object in a scene.
    However, if you want to change an object's position based upon its pivot point,
    select **Pivot** for the setting of the toggle.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个切换按钮是**位置**切换按钮。如果设置为**居中**，变换 Gizmo 将出现在你想要变换的对象边界中心。在大多数情况下，如果你在场景中布局对象，这通常是你要做的。然而，如果你想根据对象的轴点改变对象的位置，请选择切换按钮的**轴点**设置。
- en: The second toggle is the **Rotation** toggle. Here you will determine whether
    or not rotations will be relative to the object's Local coordinate system or based
    upon the Global or world space coordinate system.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个切换按钮是**旋转**切换按钮。在这里，你将确定旋转是否相对于对象的本地坐标系，还是基于全局或世界空间坐标系。
- en: VCR Controls
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VCR 控制按钮
- en: The next set of controls is used to drive the gameplay in the Game View. The
    visual representation of these controls is so commonplace that they almost require
    no explanation.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个控制按钮组用于在游戏视图中驱动游戏玩法。这些控制按钮的视觉表示非常常见，几乎不需要解释。
- en: '![VCR Controls](img/978-1-84969-040-9_2_5.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![VCR 控制按钮](img/978-1-84969-040-9_2_5.jpg)'
- en: The **Play** control will cause the game to start playing. If you want to stop
    and look at things you press the **Pause** button. When the **Pause** button is
    pressed, Unity will switch to **Scene** view (unless already displayed) so you
    can examine the details of the scene. Pressing **Pause** again will cause the
    game to continue where it left off. If, while paused, you want to determine what
    will happen in the next cycle, you can press the **Step** button. Pressing the
    **Step** button while a game is playing will cause it to enter a paused state.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**播放**控制会使游戏开始播放。如果你想停止并查看某些内容，请按下**暂停**按钮。当按下**暂停**按钮时，Unity将切换到**场景**视图（除非已经显示），这样你就可以检查场景的细节。再次按下**暂停**按钮将使游戏从上次停止的地方继续。如果在暂停状态下，你想确定下一个循环将发生什么，可以按下**步骤**按钮。在游戏播放时按下**步骤**按钮将使游戏进入暂停状态。'
- en: Tip
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If the **Scene View** is on a separate tab you will be able to see both views
    at the same time.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果**场景视图**在单独的标签页上，你将能够同时看到两个视图。
- en: Layers drop-down
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 层下拉菜单
- en: As you develop your applications you will create layers in the **Scene View**
    which represent groups of game objects that you want to display in the view. This
    helps to unclutter the display in a very complex scene.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在你开发应用程序时，你将在**场景视图**中创建层，这些层代表你希望在视图中显示的游戏对象组。这有助于在非常复杂的场景中减少显示的杂乱。
- en: '![Layers drop-down](img/978-1-84969-040-9_2_7.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![层下拉菜单](img/978-1-84969-040-9_2_7.jpg)'
- en: In the **Layers** drop-down you can select what layers you want to see and which
    ones you want to hide. The hidden objects are still there and will display in
    Game View the next time the game is run.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在**层**下拉菜单中，你可以选择你想看到哪些层以及你想隐藏哪些层。隐藏的对象仍然存在，并在游戏下次运行时在游戏视图中显示。
- en: Layout drop-down
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 布局下拉菜单
- en: During the development of creating a game you will find that some tools are
    useful for some scenarios and not useful in others. Custom layouts allow you to
    define a collection of views, and their position and configuration, while providing
    a unique name for the layout so that you can switch to it later.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建游戏的过程中，你会发现一些工具在某些场景中很有用，而在其他场景中则没有用。自定义布局允许你定义一组视图，以及它们的定位和配置，同时为布局提供一个独特的名称，这样你可以在以后切换到它。
- en: '![Layout drop-down](img/978-1-84969-040-9_2_6.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![布局下拉菜单](img/978-1-84969-040-9_2_6.jpg)'
- en: The **Layout** drop-down will display all of the layouts that are available
    for you to switch to, allowing you to rapidly move between multiple IDE arrangements
    so that you have the tools that are important to you when you need them.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**布局**下拉菜单将显示所有可切换的布局，允许你快速在多个 IDE 安排之间切换，以便在你需要时拥有重要的工具。'
- en: Project view
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目视图
- en: '![Project view](img/978-1-84969-040-9_2_8.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![项目视图](img/978-1-84969-040-9_2_8.jpg)'
- en: The **Project** view is where you will manage all of the assets that are in
    your project. However, if the files in those folders get updated (that is, you
    change the mesh of an object in some other tool), those updates will be changed
    in Unity as well.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**项目**视图是管理你项目中所有资产的地方。然而，如果那些文件夹中的文件被更新（即，你在其他工具中更改了对象的网格），这些更新也会在 Unity 中更改。'
- en: Tip
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: This view corresponds to the Asset folder of your project, but you should NEVER
    make changes to the project folder directly, you should make your changes in the
    Unity Project view.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 此视图对应于您项目的资产文件夹，但您绝对不应该直接修改项目文件夹，您应该在Unity项目视图中进行修改。
- en: You can add new assets to your project by simply dragging them from the desktop,
    or file system browser, right into the project view and Unity will import the
    content for use. Under the covers, Unity will also move the assets into the project's
    Assets folder.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过简单地从桌面或文件系统浏览器拖动它们到项目视图中来向项目中添加新资产，Unity将导入内容以供使用。在幕后，Unity还将资产移动到项目的Assets文件夹中。
- en: Hierarchy view
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 层级视图
- en: '![Hierarchy view](img/978-1-84969-040-9_2_9.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![层级视图](img/978-1-84969-040-9_2_9.jpg)'
- en: The **Hierarchy** view is a close peer to the **Project** view. Where the **Project**
    view is responsible for managing the assets that are available to your sandbox
    — the **Scene** view, the **Hierarchy** view is used to manage the objects that
    are in the scene and the parent child relationships of those objects. For example,
    you may have a vehicle object in the scene that has a light attached to it. In
    the **Hierarchy** view these objects would have a parent child relationship, such
    that the light would be the child of the vehicle object. The result would mean
    that as the parent object changed through transform, rotation, or other the child
    object would be impacted.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**层级**视图是**项目**视图的紧密伙伴。**项目**视图负责管理可用于您沙盒的资产——**场景**视图，而**层级**视图用于管理场景中的对象以及这些对象的父子关系。例如，您可能有一个场景中的车辆对象，它有一个灯连接到它。在**层级**视图中，这些对象将具有父子关系，这样灯就会是车辆对象的子对象。结果是，当父对象通过变换、旋转或其他操作改变时，子对象也会受到影响。'
- en: In large projects there will be a large number of objects in the **Hierarchy**
    view. To make it easier to find particular objects, or types of objects, Unity
    provides the search box in the **Hierarchy** view. When you enter the name of
    an object, Unity will filter the **Scene** view such that the objects you have
    entered are clearly visible in the view while the other objects are grayed-out.
    For example, suppose you are trying to find the steering wheel component of a
    scene that consists of a large number of game objects. If you enter **steering
    wheel** in the search box it will only provide texture, color, and so on to that
    object so that it is easy to find. Similarly, if you enter a type of object, such
    as **light**, in the search box the scene will only highlight the lights in the
    scene — even if the word 'light' isn't in the name of the Game Object.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在大型项目中，**层级**视图中将有大量对象。为了更容易找到特定的对象或对象类型，Unity在**层级**视图中提供了搜索框。当您输入对象名称时，Unity将过滤**场景**视图，使得您输入的对象在视图中清晰可见，而其他对象则被灰色显示。例如，假设您正在尝试查找由大量游戏对象组成的场景中的方向盘组件。如果您在搜索框中输入**方向盘**，它将只提供纹理、颜色等，以便于查找。同样，如果您在搜索框中输入对象类型，如**灯**，场景将只突出显示场景中的灯——即使“灯”这个词不在游戏对象名称中。
- en: Scene view
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 场景视图
- en: 'The **Scene** view is where you will you will spend most of your time. It is
    in the Scene view that you will build your game, position the camera, change environment
    settings, observe occlusion levels, and so on:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**场景**视图是您将花费大部分时间的地方。您将在场景视图中构建游戏、放置相机、更改环境设置、观察遮挡级别等：'
- en: '![Scene view](img/978-1-84969-040-9_2_11.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![场景视图](img/978-1-84969-040-9_2_11.jpg)'
- en: Game view
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 游戏视图
- en: 'The **Game** view is where the action takes place. Whenever you press **Play**
    in the VCR controls, this view will use the active camera in the scene and render
    what that camera sees to the **Game** view:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**游戏**视图是动作发生的地方。每次您在VCR控件中按下**播放**时，此视图将使用场景中的活动相机并将该相机看到的渲染到**游戏**视图中：'
- en: '![Game view](img/978-1-84969-040-9_2_12.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![游戏视图](img/978-1-84969-040-9_2_12.jpg)'
- en: 'The **Control Bar**, in the **Game** view, contains useful controls for adjusting
    the Game view to deliver information useful in rendering the **Game** view closer
    to the actual target display:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**控制栏**位于**游戏**视图中，包含用于调整游戏视图以提供有助于渲染更接近实际目标显示的**游戏**视图的有用控件：'
- en: '![Game view](img/978-1-84969-040-9_2_13.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![游戏视图](img/978-1-84969-040-9_2_13.jpg)'
- en: The first tool in the **Control Bar** is the **Free Aspect** drop-down that
    allows you to change the aspect ratio of the **Game** view to different values.
    This is particularly important for iOS development as you can select the aspect
    ratio of your target device and get a better idea of how your content will look
    with the appropriate perspective applied.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**控制栏**中的第一个工具是**自由纵横比**下拉菜单，允许您将**游戏**视图的纵横比更改为不同的值。这对于iOS开发尤为重要，因为您可以选择目标设备的纵横比，并更好地了解内容在适当视角下的外观。'
- en: The next tool is the **Maximize on Play** toggle which, when enabled, will display
    the **Game** view in full screen. In the case where this **Game** view is not
    the same resolution as the screen, you will note that the **Game** view maximizes
    to cover the entire display, but only renders the scene at whatever resolution
    / aspect ratio you have set in the **Free Aspect** drop-down.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个工具是**播放时最大化**切换按钮，当启用时，将显示**游戏**视图的全屏。在这种情况下，如果**游戏**视图的分辨率与屏幕不同，您将注意到**游戏**视图最大化以覆盖整个显示，但仅以您在**自由纵横比**下拉菜单中设置的分辨率/纵横比渲染场景。
- en: The next control is the **Gizmos** control. This will force Unity to render
    all of the Gizmos that are present in the **Scene** view in the **Game** view.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个控件是** Gizmos**控件。这将强制Unity在**游戏**视图中渲染**场景**视图中存在的所有Gizmos。
- en: The final control is the **Stats** control. When enabled this will show the
    Rendering Statistics window overlaid on the **Game** view. This is an extremely
    useful control to have active, as you will gain insight into how your application
    is performing at a high-level, without having to delve into the **Profiler** view
    while playing the game.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个控件是**统计**控件。当启用时，它将在**游戏**视图上显示渲染统计窗口。这是一个非常有用的控件，因为它可以在玩游戏时获得对应用程序在高级别上的性能洞察，而无需深入**分析器**视图。
- en: Inspector
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查器
- en: 'The **Inspector** view contains all of the properties for the selected Game
    Object in a view. The properties that the Inspector shows are entirely context
    sensitive based upon the Game Object selected:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**检查器**视图包含所选游戏对象的所有属性。检查器显示的属性完全基于所选游戏对象而上下文敏感：'
- en: '![Inspector](img/978-1-84969-040-9_2_14.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![检查器](img/978-1-84969-040-9_2_14.jpg)'
- en: As Game Objects in Unity are composed of components such as meshes, scripts,
    transforms, and so on. each of the components that make up the Game Object will
    have its editor appear in the **Inspector**. So, for example, in our example **Inspector**
    we've selected a camera in the scene. As you can see the Transform, Camera, and
    so on each have editors that show up for this Game Object.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Unity中的游戏对象由网格、脚本、变换等组件组成，因此构成游戏对象的每个组件都将在其**检查器**中显示编辑器。例如，在我们的示例**检查器**中，我们已选择场景中的相机。如您所见，变换、相机等每个都有为该游戏对象显示的编辑器。
- en: Console view
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制台视图
- en: 'The **Console** view shows all of the messages that come from your game. These
    messages may come from the Unity engine, or may represent messages which you have
    sent to the **Console** view using the script commands, such as `Debug.Log()`.
    If you double-click on the messages that appear in the **Console** view, you will
    be taken directly to the script that caused the message:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**控制台**视图显示了来自您游戏的所有消息。这些消息可能来自Unity引擎，也可能代表您使用脚本命令（如`Debug.Log()`）发送到**控制台**视图的消息。如果您双击**控制台**视图中出现的消息，您将被直接带到导致消息的脚本：'
- en: '![Console view](img/978-1-84969-040-9_2_15.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![控制台视图](img/978-1-84969-040-9_2_15.jpg)'
- en: Profiler view
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分析视图
- en: 'The Unity Profiler is your best friend when building games with Unity, particularly
    when developing for an iOS device. While the tool is only available with the Pro
    version of Unity, it deserves special attention as it provides substantially more
    information than the Rendering Statistics window in **Game** view:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Unity分析器是您使用Unity构建游戏时的最佳伙伴，尤其是在为iOS设备开发时。虽然此工具仅适用于Unity的专业版，但它值得特别关注，因为它提供了比**游戏**视图中的渲染统计窗口多得多的信息：
- en: '![Profiler view](img/978-1-84969-040-9_2_16.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![分析视图](img/978-1-84969-040-9_2_16.jpg)'
- en: 'In the top are profile tools that provide information about CPU Usage, Rendering,
    Memory, and Audio statistics. Next to each Profiler is a histogram representing
    the values retrieved from the instrumentation process on each frame. You can click
    and drag the mouse across the histogram and see the results across multiple profile
    tools, which will help to correlate specific performance issues with other events
    that occur in the application:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部是性能分析工具，提供有关CPU使用率、渲染、内存和音频统计信息。每个性能分析工具旁边都有一个直方图，表示从每个帧的仪器化过程中检索到的值。您可以通过点击并拖动鼠标跨过直方图，查看多个性能分析工具的结果，这有助于将特定的性能问题与其他在应用程序中发生的事件相关联：
- en: '![Profiler view](img/978-1-84969-040-9_2_17.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![性能分析视图](img/978-1-84969-040-9_2_17.jpg)'
- en: 'The bottom provides information about function calls that are being made by
    the application. This is done by instrumenting the code and determining how often
    the functions are being called. This can help determine where the hot spots are
    within an application so that you can focus your attention and get your game performing
    well on your target platform:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 底部提供有关应用程序正在执行的功能调用的信息。这是通过代码的仪器化和确定函数被调用的频率来完成的。这有助于确定应用程序中的热点区域，以便您可以集中注意力，并在目标平台上使游戏表现良好：
- en: '![Profiler view](img/978-1-84969-040-9_2_18.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![性能分析视图](img/978-1-84969-040-9_2_18.jpg)'
- en: Time for action — Creating a new layout
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间行动 - 创建新布局
- en: While the Unity environment has a lot of features and options, it is possible
    to become entirely overwhelmed by the amount of data, or not realize that something
    has gone awry. We will look at building out a simple customization for our environment
    that contains the views we need, as well as some of the views that don't appear
    in the interface by default, in order to prepare ourselves for testing applications.
    If you're familiar with the Eclipse development environment you may be thinking
    that Unity opens views depending on what action you're performing, but Unity doesn't
    do that. However, we are going to emulate some of that functionality by creating
    a new layout that is well suited to profiling an application.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Unity环境有很多功能和选项，但可能会被数据量完全淹没，或者没有意识到某些事情出了问题。我们将探讨为我们的环境构建一个简单的自定义设置，其中包含我们需要的视图，以及一些默认情况下不会出现在界面中的视图，以便为测试应用程序做好准备。如果您熟悉Eclipse开发环境，您可能会认为Unity会根据您执行的操作打开视图，但Unity并不这样做。然而，我们将通过创建一个适合性能分析应用程序的新布局来模拟一些这种功能。
- en: Our first step for creating a new layout is to start with a base layout and
    customize it. Unity has several default layouts to choose from, but for our purposes
    we will choose the Wide layout. In the **Window** Menu, select **Wide** layout:![Time
    for action — Creating a new layout](img/978-1-84969-040-9_2_19.jpg)
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建新布局的第一步是从一个基本布局开始并对其进行自定义。Unity有几种默认布局可供选择，但就我们的目的而言，我们将选择宽布局。在**窗口**菜单中，选择**宽**布局：![创建新布局的时间
    - 创建新布局](img/978-1-84969-040-9_2_19.jpg)
- en: The next, step to creating our layout, is to decide which views are most important
    for getting things done. Since we're planning to profile an application it makes
    sense to bring in the **Profile** view into our environment. Selecting the **Window**
    menu and Profiler will show the new view. However, you will notice that it is
    a standalone window and not attached to the rest of the environment. Unity doesn't
    require that all of the views live within the same window as the others. In fact,
    this makes it easier for users with multiple screens as you can have different
    groupings of views on different screens. However, for our purposes we will assume
    that we have one screen to work with.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建我们布局的下一步是决定哪些视图对于完成任务最重要。由于我们计划进行性能分析，因此将**性能分析**视图引入我们的环境是有意义的。选择**窗口**菜单并选择性能分析将显示新视图。然而，您会注意到它是一个独立窗口，而不是连接到环境的其余部分。Unity不需要所有视图都生活在与其他视图相同的窗口中。实际上，这使用户拥有多个屏幕时更容易，因为您可以在不同的屏幕上拥有不同的视图分组。然而，就我们的目的而言，我们将假设我们只有一个屏幕可以工作。
- en: 'To position the Profiler inside our interface select the **Profiler** tab and
    drag it. This will result in a grayed out version of the tab appearing in the
    interface. As you move this grayed-out version into places where it can be docked,
    it will change shape to illustrate what it will look like if you dock it in that
    position. For now let''s release it right above the **Hierarchy** view and the
    **Project** view:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将分析器定位到我们的界面中，请选择**分析器**标签并拖动它。这将导致在界面中显示一个灰色的标签版本。当您将这个灰色的版本移动到可以停靠的位置时，它将改变形状以说明如果将其停靠在该位置将看起来如何。现在让我们将其释放到**层次**视图和**项目**视图的上方：
- en: '![Time for action — Creating a new layout](img/978-1-84969-040-9_2_20.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 — 创建新布局](img/978-1-84969-040-9_2_20.jpg)'
- en: Since we're profiling our application we probably don't really need to know
    much about the Project's layout so we can remove the **Project** view from the
    layout. To accomplish this we need to select the **Menu** drop-down which appears
    in the upper right of the view and select the **Close** tab. Once done, the **Project**
    view will no longer be in the layout. Don't worry, if you ever need to bring it
    back you can always go into the **Window** menu and dock it in the same manner
    in which we introduced the **Profiler** view.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在分析我们的应用程序，我们可能并不真的需要了解太多关于项目布局的信息，因此我们可以从布局中移除**项目**视图。为了完成这个任务，我们需要选择视图右上角出现的**菜单**下拉菜单，并选择**关闭**标签。一旦完成，**项目**视图将不再在布局中。不用担心，如果您需要将其恢复，您总是可以通过进入**窗口**菜单并以我们介绍**分析器**视图相同的方式将其停靠。
- en: 'Now we probably also want console messages, as they represent feedback from
    our game session. We will introduce the console by selecting **Window | Console**.
    When the console menu appears we will drag it right next to the **Hierarchy**
    tab, such that it appears as a tab in the same row with the **Hierarchy**. This
    represents the other layout option that Unity provides, which is to have rows
    of tabs for views:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可能还想要控制台消息，因为它们代表了我们的游戏会话的反馈。我们将通过选择**窗口 | 控制台**来介绍控制台。当控制台菜单出现时，我们将将其拖到**层次**标签的旁边，使其与**层次**标签在同一行显示为一个标签。这代表了Unity提供的另一种布局选项，即具有视图标签行的布局：
- en: '![Time for action — Creating a new layout](img/978-1-84969-040-9_2_21.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 — 创建新布局](img/978-1-84969-040-9_2_21.jpg)'
- en: What just happened?
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: We have created a new layout specifically for profiling an application and saved
    it, so that whenever we are ready to dive deep into debugging and application
    profiling we can simply switch to it, without having to otherwise clutter our
    environment when we are simply designing our game. This has some very substantial
    implications for productivity as the interface can be set up for a particular
    purpose, such as level editing, scripting, or testing and you can focus the environment
    on specifically what you need. While it may not seem like a large detail right
    now, as your projects get bigger you will be glad this level of flexibility is
    there.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个专门用于分析应用程序的新布局并将其保存，这样我们就可以在准备深入调试和应用程序分析时简单地切换到它，而无需在仅仅设计游戏时使我们的环境变得杂乱。这对生产力有很大的影响，因为界面可以根据特定目的进行设置，例如关卡编辑、脚本编写或测试，并且您可以专注于具体需要的环境。虽然现在这可能看起来不是一个很大的细节，但随着您的项目变得越来越大，您会为这种灵活性的存在而感到高兴。
- en: Time for action — Saving a new layout
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 — 保存新布局
- en: Now that we have created our new layout, we need to save it so we can reuse
    it later. In the **Window** menu select **Layouts | Save Layout:**![Time for action
    — Saving a new layout](img/978-1-84969-040-9_2_22.jpg)
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经创建了新的布局，我们需要保存它，以便以后可以重用。在**窗口**菜单中选择**布局 | 保存布局**：![行动时间 — 保存新布局](img/978-1-84969-040-9_2_22.jpg)
- en: You will be presented with a simple dialog box that will ask for the name of
    the layout. Enter **Profiler** into the text box and press **Save:**![Time for
    action — Saving a new layout](img/978-1-84969-040-9_2_23.jpg)
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到一个简单的对话框，它会要求您输入布局的名称。在文本框中输入**分析器**并按**保存**：![行动时间 — 保存新布局](img/978-1-84969-040-9_2_23.jpg)
- en: 'Now that your layout has been saved you can switch over to it at any time by
    selecting **Window | Layouts** and selecting your layout:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您的布局已经保存，您可以通过选择**窗口 | 布局**并选择您的布局来随时切换：
- en: '![Time for action — Saving a new layout](img/978-1-84969-040-9_2_24.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 — 保存新布局](img/978-1-84969-040-9_2_24.jpg)'
- en: What just happened?
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: We have just saved our layout so that we can reference it later in our development
    process. In addition, we can share our layout with other developers by giving
    them the layout files that Unity stores.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚保存了布局，以便我们可以在开发过程中稍后引用它。此外，我们可以通过给他们Unity存储的布局文件来与其他开发者共享我们的布局。
- en: 'Layouts are stored with the .wlt extension in the following folder :'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 布局存储在以下文件夹中，使用.wlt扩展名：
- en: 'on Mac OSx :'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Mac OSx上：
- en: '[PRE0]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: On Windows 7
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows 7上
- en: 'Unity 3:'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Unity 3:'
- en: '[PRE1]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Unity 2.x:'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Unity 2.x:'
- en: '[PRE2]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: On Windows XP
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows XP上
- en: Unity 3
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Unity 3
- en: '[PRE3]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Unity 2.x
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Unity 2.x
- en: '[PRE4]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The best way to see this in action is to deploy a real application and look
    at it from two different layouts to see how it will change the way you interact
    with your environment. This is also a great time to install Unity Remote, as we
    want to use it when we are doing rapid prototypes.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 最好的方法是部署一个真实的应用程序，从两个不同的布局中查看它，以了解它将如何改变你与环境交互的方式。这也是安装Unity Remote的好时机，因为我们希望在快速原型设计时使用它。
- en: Time for action — Deploying Unity Remote
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 — 部署Unity Remote
- en: One of the hardest things to do when building an application for an iOS device
    is to be able to get some real time feedback from the device, while still having
    the richness of the development environment to work with. Unity solves this problem
    with the Unity Remote application that will allow you to play test your application
    within Unity, while using the iOS device as a controller. Unity Remote accomplishes
    this by streaming the game to the iOS device through WiFi and gathering the input
    actions from the device and injecting them into the Unity environment. With Unity
    Remote you can avoid having to build and deploy your application to your device
    every time you make a change.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在为iOS设备构建应用程序时，最难的事情之一是能够从设备获得一些实时反馈，同时仍然拥有丰富的开发环境来工作。Unity通过Unity Remote应用程序解决了这个问题，它允许你在Unity中播放测试你的应用程序，同时使用iOS设备作为控制器。Unity
    Remote通过通过WiFi将游戏流式传输到iOS设备，并从设备收集输入动作并将它们注入到Unity环境中来实现这一点。使用Unity Remote，你可以避免每次更改时都必须构建和部署你的应用程序到你的设备。
- en: There is only one problem with Unity Remote when it comes to testing our application
    — we need to build it specifically for our device.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 当测试我们的应用程序时，Unity Remote只有一个问题——我们需要为我们的设备专门构建它。
- en: Note
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Remember, all iOS applications must be signed before they can be installed on
    the device.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，所有iOS应用程序在安装到设备之前都必须进行签名。
- en: 'We are going to walk through each of the steps necessary to produce commercial
    content for Unity 3 that can be deployed to an iOS device:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将逐步介绍生成可用于部署到iOS设备的Unity 3商业内容的必要步骤：
- en: The first step is to open the Unity Remote project in the XCode environment.
    The Unity Remote source project is not in the distribution for Unity and needs
    to be downloaded from the Unity website. Unity Remote is an official Unity extension
    on the website and can be downloaded at [http://unity3d.com/support/resources/unity-extensions/unity-remote:](http://unity3d.com/support/resources/unity-extensions/unity-remote)![Time
    for action — Deploying Unity Remote](img/978-1-84969-040-9_2_27.jpg)
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是打开Unity Remote项目在XCode环境中。Unity Remote源项目不在Unity的发行版中，需要从Unity网站下载。Unity
    Remote是网站上的官方Unity扩展，可以在[http://unity3d.com/support/resources/unity-extensions/unity-remote](http://unity3d.com/support/resources/unity-extensions/unity-remote)下载![行动时间
    — 部署Unity Remote](img/978-1-84969-040-9_2_27.jpg)
- en: Once this project has been downloaded, select the **UnityRemote.xcodeproj**
    to open this project in XCode. As we did in the last chapter, we need to create
    an **App ID** for Unity Remote in the **iOS Provisioning Portal:**![Time for action
    — Deploying Unity Remote](img/978-1-84969-040-9_2_28.jpg)
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦下载了此项目，请选择**UnityRemote.xcodeproj**以在XCode中打开此项目。正如我们在上一章中所做的那样，我们需要在**iOS
    Provisioning Portal**中为Unity Remote创建一个**App ID**：![行动时间 — 部署Unity Remote](img/978-1-84969-040-9_2_28.jpg)
- en: With our **App ID** created, we need to enter that **App ID** into the XCode
    project so that the application will build with that **App ID** and be deployed
    to our iPhone. While Unity takes care of these steps for us, we will need to do
    them ourselves for Unity Remote as this is a regular XCode application.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建了我们的**App ID**之后，我们需要将此**App ID**输入到XCode项目中，以便应用程序将使用该**App ID**构建并部署到我们的iPhone。虽然Unity会为我们处理这些步骤，但我们需要自己为Unity
    Remote执行这些步骤，因为这是一个常规的XCode应用程序。
- en: Note
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Don't worry, once we get Unity Remote installed we won't need to do this again.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 别担心，一旦我们安装了Unity Remote，就不再需要这样做。
- en: Open the project settings using the **Edit Project Settings** in the **Project**
    menu in XCode. This will display all of the settings that XCode will use to build
    and deploy your application:![Time for action — Deploying Unity Remote](img/978-1-84969-040-9_2_29.jpg)
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用XCode中的**项目**菜单中的**编辑项目设置**打开项目设置。这将显示XCode将用于构建和部署您的应用程序的所有设置：![行动时间 — 部署Unity远程](img/978-1-84969-040-9_2_29.jpg)
- en: 'There are two groups of settings that we are interested in for this project:
    Architectures and Code Signing.'
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于这个项目，我们关注两组设置：架构和代码签名。
- en: In the Architectures section we want to make sure that we have set the project's
    Base SDK to the appropriate version for our device. For example, if our device
    is running iOS 4.0 we want to make sure that we don't have the Base SDK set to
    build for iOS 4.2\. Simply select the drop-down list on the Base SDK line and
    XCode will tell you what the valid options are for your configuration. If XCode
    doesn't show an SDK here, it is because it is not installed properly and XCode
    will not be able to build with it.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在架构部分，我们想确保我们已经将项目的Base SDK设置为适合我们设备的适当版本。例如，如果我们的设备正在运行iOS 4.0，我们想确保基础SDK没有设置为为iOS
    4.2构建。只需选择Base SDK行上的下拉列表，XCode就会告诉您配置的有效选项。如果XCode在这里没有显示SDK，那是因为它没有正确安装，XCode将无法使用它来构建。
- en: In the Code Signing section you will want to select the Any IOS entry under
    the Code Signing Identity item. When you select the drop-down for this item it
    will display all of the possible code signing options for this project. Simply
    select the one that corresponds to the App ID you just created in the iOS Provisioning
    Portal.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码签名部分，您将在代码签名标识项下选择**任何iOS**条目。当您选择此项目的下拉列表时，它将显示此项目的所有可能的代码签名选项。只需选择与您在iOS配置文件中创建的App
    ID相对应的选项即可。
- en: With those settings updated for your App ID, and device, you can now build the
    project in XCode from the Build menu by selecting Build and Run. This will build
    the Unity Remote application with XCode and deploy it to your device.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新了App ID和设备上的这些设置后，您现在可以从XCode的构建菜单中选择构建和运行来构建项目。这将使用XCode构建Unity Remote应用程序并将其部署到您的设备上。
- en: 'Make sure that you have the target device plugged in when you run this command
    or XCode will complain profusely:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保在运行此命令时您的目标设备已连接，否则XCode会频繁地抱怨：
- en: Tip
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you aren't running the standard iOS 4.0 SDK that the Unity Remote project
    expects you will encounter a particular error.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有运行Unity Remote项目期望的标准iOS 4.0 SDK，您将遇到特定的错误。
- en: '![Time for action — Deploying Unity Remote](img/978-1-84969-040-9_2_30.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 — 部署Unity远程](img/978-1-84969-040-9_2_30.jpg)'
- en: 'What this error is saying is that the Unity Remote was expecting iphoneos4.0
    to be installed as the SDK. This is represented in the toolbar, as well in the
    build configuration drop-down as **Base SDK Missing**. Depending on when you''ve
    begun your trek into iOS development, iphoneos4.0 may be a distant memory. To
    remedy this you will have to adjust the settings for the project to match the
    SDK that you have installed by editing the Active Target for Unity Remote:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这个错误表示Unity Remote期望iphoneos4.0作为SDK已安装。这在工具栏中以及构建配置下拉菜单中的**基础SDK缺失**都有表示。根据您何时开始iOS开发，iphoneos4.0可能已经是一个遥远的记忆。为了解决这个问题，您将不得不通过编辑Unity
    Remote的Active Target来调整项目的设置以匹配您已安装的SDK：
- en: '![Time for action — Deploying Unity Remote](img/978-1-84969-040-9_2_31.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 — 部署Unity远程](img/978-1-84969-040-9_2_31.jpg)'
- en: Tip
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: In the **Architecture** section you can change the Base SDK to whichever SDK
    you desire. Generally, the best option is to set this to the **Lastest iOS** unless
    you have a particular reason to do otherwise. With this setting changed you will
    see that the **Base SDK Missing** error is gone from the toolbar and when you
    build the project it will successfully install on your device.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在**架构**部分，您可以更改基础SDK为所需的任何SDK。通常，最佳选项是将此设置为**最新版iOS**，除非您有特殊原因需要更改。更改此设置后，您会发现工具栏上的**基础SDK缺失**错误消失了，并且当您构建项目时，它将成功安装到您的设备上。
- en: '![Time for action — Deploying Unity Remote](img/978-1-84969-040-9_2_32.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 — 部署Unity远程](img/978-1-84969-040-9_2_32.jpg)'
- en: What just happened?
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: We have just built and deployed Unity Remote to our device. This allows us to
    use our iOS device as an input to our game and test the behavior of the game from
    the iOS device, without having to deploy the application on the device. This is
    useful as it will speed the development process and reduce the number of code-compile-deploy
    cycles we have to perform.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚构建并部署了Unity Remote到我们的设备。这使我们能够将iOS设备作为游戏的输入，并从iOS设备上测试游戏的行为，而无需在设备上部署应用程序。这很有用，因为它将加快开发过程，并减少我们必须执行的代码-编译-部署循环的数量。
- en: Time for action — Testing our application using Unity Remote
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——使用Unity Remote测试我们的应用程序
- en: 'Now that we have Unity Remote deployed we can get to the business of using
    our iOS device as a controller in our game development environment:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经部署了Unity Remote，我们就可以开始使用我们的iOS设备作为游戏开发环境中的控制器了：
- en: Run Unity Remote on your device and a list of the machines ready to provide
    data for Unity Remote will appear in the list. If, for some reason, yours doesn't
    because of specific DNS or Bonjour security, you can enter the IP address of the
    machine you want to control by selecting the button in the lower left. If you
    don't really care to simulate the visual interface of the game on the iOS device
    you can change the radio button for **Show image** to **Off** and the game's frames
    will not be displayed on your device, yet you will still be able to control the
    game inside of Unity with your iOS device acting as a controller:![Time for action
    — Testing our application using Unity Remote](img/978-1-84969-040-9_2_25.jpg)
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的设备上运行Unity Remote，将出现一个列表，列出了准备好为Unity Remote提供数据的机器。如果你因为特定的DNS或Bonjour安全设置而无法出现，你可以通过选择左下角的按钮来输入你想要控制的机器的IP地址。如果你不关心在iOS设备上模拟游戏的视觉界面，你可以将**显示图片**单选按钮更改为**关闭**，这样游戏帧就不会显示在你的设备上，但你仍然可以使用iOS设备作为控制器在Unity中控制游戏：![行动时间——使用Unity
    Remote测试我们的应用程序](img/978-1-84969-040-9_2_25.jpg)
- en: Press **Play** in the Unity toolbar. This will be the signal for Unity and Unity
    Remote to begin exchanging data. The content that is in the **Game** view will
    begin to appear on the iOS device, though you may think something is wrong the
    first time you see it as it will appear to be a much lower resolution version
    of your game:![Time for action — Testing our application using Unity Remote](img/978-1-84969-040-9_2_33.jpg)
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Unity工具栏中按**播放**。这将作为Unity和Unity Remote开始交换数据的信号。**游戏**视图中的内容将开始出现在iOS设备上，尽管你第一次看到它时可能会认为有问题，因为它看起来像是你的游戏的一个分辨率更低的版本：![行动时间——使用Unity
    Remote测试我们的应用程序](img/978-1-84969-040-9_2_33.jpg)
- en: Game View representation of the game in Unity
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Unity中游戏的视图表示
- en: 'If you recall, I mentioned that Unity streams the game to the iOS device. What
    the IDE is doing is actually streaming the video of what''s happening in the game
    to your device so you will see a variety of compression artifacts, depending on
    your Wi-Fi connection speed and other factors:'
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你还记得，我提到Unity会将游戏流式传输到iOS设备。IDE实际上正在将游戏中的视频流式传输到你的设备，所以你会看到各种压缩伪影，这取决于你的Wi-Fi连接速度和其他因素：
- en: '![Time for action — Testing our application using Unity Remote](img/978-1-84969-040-9_2_26.jpg)'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——使用Unity Remote测试我们的应用程序](img/978-1-84969-040-9_2_26.jpg)'
- en: View of the game on Unity Remote
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Unity Remote上的游戏视图
- en: This is a normal behavior of Unity Remote (and one of the reasons for the Show
    Image radio button) and should not detract in any way from your ability to perform
    your testing. Remember, this is purely a testing tool to enable rapid development
    so visual fidelity is not necessary. If you really need to know exactly how its
    going to look, you can deploy the game to the device — but bookmark this chapter
    as you will find that after some time the benefit of knowing how great your content
    looks on the device will pale into comparison to being more productive using Unity
    Remote.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是Unity Remote的正常行为（也是选择“显示图片”单选按钮的原因之一），它不应该以任何方式影响你进行测试的能力。记住，这纯粹是一个测试工具，用于加速开发，因此视觉保真度不是必要的。如果你真的需要知道它将如何看起来，你可以将游戏部署到设备上——但请将这一章节作为书签，因为你会发现，经过一段时间，了解你的内容在设备上的外观所带来的好处将微不足道，与使用Unity
    Remote提高生产力的好处相比。
- en: What just happened?
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发生了什么？
- en: What Unity Remote is doing behind the scenes is getting the frame buffer of
    the application and compressing that into a video stream and streaming that over
    to the iOS device. Any device input that is gathered through the iOS device is
    then transmitted through Wi-Fi to the Unity IDE and used to direct the objects
    in the environment. Whenever you enter **Play** mode in the **Editor**, your device
    will become the remote control for testing the game.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: Unity Remote在幕后所做的是获取应用程序的帧缓冲区，将其压缩成视频流，并将其流式传输到iOS设备。然后，通过iOS设备收集的任何设备输入都会通过Wi-Fi传输到Unity
    IDE，并用于指导环境中的对象。每当你在**编辑器**中的**播放**模式下时，你的设备将成为测试游戏的遥控器。
- en: While this approach is very useful for rapid application development, it is
    important to note that performance using this approach is approximated at best
    and you will still want to build and run your application on your device exclusively
    every so often, to confirm that performance and gameplay is as you expect. Similarly,
    it is important to note that this approach is very dependent on your Wi-Fi connection.
    If your device isn't showing a full Wi-Fi signal you can expect significant performance
    implications.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这种方法对于快速应用开发非常有用，但重要的是要注意，使用这种方法的效果最多只能近似估计，你仍然需要不时在设备上构建和运行应用程序，以确认性能和游戏体验符合预期。同样，重要的是要注意，这种方法非常依赖于你的Wi-Fi连接。如果你的设备没有显示完整的Wi-Fi信号，你可以预期会有显著的性能影响。
- en: We have just performed all of the steps necessary to setup our development environment
    and publish content to Unity. Further we have built our own mini testing lab using
    Unity Remote so we can utilize our device, yet debug the game in our development
    environment. This is a crucial milestone as we can now focus entirely on customizing
    Unity and building games.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚完成了设置开发环境和发布内容到Unity所需的所有步骤。此外，我们使用Unity Remote建立了一个自己的小型测试实验室，这样我们就可以利用我们的设备，同时在开发环境中调试游戏。这是一个关键的里程碑，因为我们现在可以完全专注于定制Unity和构建游戏。
- en: One last thing about Unity Remote that is worth noting, while I had you build
    the remote application yourself you can actually download this in the App Store.
    Given this you may be asking yourself then why did you have me build it? As an
    iOS developer, even one using Unity, there are a number of times that you will
    find yourself needing to debug what is happening under the covers with XCode.
    In addition, you may find yourself wanting to integrate with some native feature
    of iOS that isn't supported in Unity. In all of these scenarios you will find
    yourself digging through the underlying XCode project, so now seemed to be the
    best time to get familiar with how things are put together.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 关于Unity Remote的最后一点值得注意，虽然我让你自己构建远程应用程序，但实际上你可以在App Store中下载它。考虑到这一点，你可能想知道为什么让我构建它？作为一个iOS开发者，即使是使用Unity的开发者，你会在很多情况下发现自己需要调试XCode底层的操作。此外，你可能希望集成iOS中Unity不支持的一些原生功能。在所有这些场景中，你都会发现自己需要挖掘底层的XCode项目，因此现在似乎是熟悉这些事情的最佳时机。
- en: 'Links to the Unity Remote :'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: Unity Remote链接：
- en: 'Unity Remote 3 for iPhone :'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Unity Remote 3 for iPhone :'
- en: '[http://itunes.apple.com/fr/app/unity-remote-3/id394632904?mt=8](http://itunes.apple.com/fr/app/unity-remote-3/id394632904?mt=8)'
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://itunes.apple.com/fr/app/unity-remote-3/id394632904?mt=8](http://itunes.apple.com/fr/app/unity-remote-3/id394632904?mt=8)'
- en: 'Unity Remote 3 for iPad:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Unity Remote 3 for iPad:'
- en: '[http://itunes.apple.com/fr/app/unity-remote-3/id394632904?mt=8](http://itunes.apple.com/fr/app/unity-remote-3/id394632904?mt=8)'
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://itunes.apple.com/fr/app/unity-remote-3/id394632904?mt=8](http://itunes.apple.com/fr/app/unity-remote-3/id394632904?mt=8)'
- en: 'Unity Remote < 3 for iPhone:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Unity Remote < 3 for iPhone:'
- en: '[http://itunes.apple.com/fr/app/unity-remote/id305967442?mt=8](http://itunes.apple.com/fr/app/unity-remote/id305967442?mt=8)'
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://itunes.apple.com/fr/app/unity-remote/id305967442?mt=8](http://itunes.apple.com/fr/app/unity-remote/id305967442?mt=8)'
- en: Pop quiz - doing the thing
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速问答 - 做这件事
- en: Where can Unity views be displayed?
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unity视图可以在哪里显示？
- en: a. Toolbar
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: a. 工具栏
- en: b. Undocked on different screens
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: b. 在不同屏幕上未分离
- en: c. In Tabs
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: c. 在标签页中
- en: d. Remotely on the iOS device
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: d. 在iOS设备上远程操作
- en: e. On other Unity machines
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: e. 在其他Unity机器上
- en: Where can you go to set up an application ID for your iOS device?
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以去哪里设置iOS设备的应用程序ID？
- en: a. Apple Developer Forums
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: a. 苹果开发者论坛
- en: b. XCode Organizer
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: b. XCode组织者
- en: c. iTunes Connect
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: c. iTunes Connect
- en: d. iOS Provisioning Portal
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: d. iOS配置文件门户
- en: e. XCode SDK
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: e. XCode SDK
- en: The Unity interface can only be customized for one user and use case? (true/false)
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unity界面只能为一位用户和用例进行定制？（是/否）
- en: Unity Remote works over 3G Connections? (true/false)
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unity Remote是否可以通过3G连接工作？（是/否）
- en: You have to build Unity Remote in order to perform remote debugging? (true/false)
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您必须构建 Unity Remote 才能进行远程调试吗？（是/否）
- en: Summary
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter we explored the Unity environment and learned how to customize
    it for a particular purpose.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了 Unity 环境并学习了如何针对特定目的进行自定义。
- en: 'Specifically, we covered how to:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，我们涵盖了以下内容：
- en: Customize the Unity interface
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义 Unity 界面
- en: Customize the iOS deployments
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义 iOS 部署
- en: Deploy Unity Remote
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署 Unity Remote
- en: Test an application using custom layouts and Unity Remote
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用自定义布局和 Unity Remote 测试应用程序
- en: While we have spent some time reviewing the Unity interface, we have done so
    at a relatively high-level. To get more in depth coverage of the Unity interface
    and its options, it is recommended that you read through the Unity documentation.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们花了一些时间来回顾 Unity 界面，但我们是在相对较高的层面上进行的。为了更深入地了解 Unity 界面及其选项，建议您阅读 Unity 文档。
- en: With the first two chapters under our belts, we can now leave behind the pre-built
    projects and begin building games from scratch, which is the subject of the next
    chapter — Hello World.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在掌握前两章内容后，我们现在可以告别预构建的项目，开始从头开始构建游戏，这正是下一章的主题——Hello World。
