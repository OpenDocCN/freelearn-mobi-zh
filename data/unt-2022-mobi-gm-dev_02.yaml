- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Project Setup for Android and iOS Development
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android和iOS开发项目设置
- en: We now have a project to start with, but currently, it’s built with playing
    on a PC in mind. However, since this book is about mobile development, it’s very
    important to have the game working on the device itself before we get much further.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在有一个项目可以开始，但当前，它是针对在PC上玩而构建的。然而，由于本书是关于移动开发的，在我们进一步深入之前，让游戏在设备本身上运行非常重要。
- en: In this chapter, we will go through all of the setups we need to perform to
    deploy the project in its current state to our mobile devices. At the time of
    writing this book, mobile development is typically done either for Android or
    iOS, so we will cover those two platforms.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍我们需要执行的所有设置，以便将项目部署到我们的移动设备。在撰写本书时，移动开发通常是针对Android或iOS进行的，因此我们将涵盖这两个平台。
- en: 'This chapter will be split into a number of topics. The chapter itself will
    be a simple step-by-step process from beginning to end. The following is a list
    of the tasks we will perform:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将分为几个主题。整个章节本身将是一个从开始到结束的简单步骤过程。以下是我们将执行的任务列表：
- en: Introducing the **Build** **Settings** menu
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍**构建** **设置**菜单
- en: Building a project for a PC
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为PC构建项目
- en: Exporting your project to Android
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将您的项目导出到Android
- en: Running the Android APK with an emulator
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用模拟器运行Android APK
- en: Putting the project on your Android device
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将项目放在您的Android设备上
- en: Unity iOS installation and Xcode setup
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity iOS安装和Xcode设置
- en: Building a project for iOS
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为iOS构建项目
- en: Running the project via the iOS simulator
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过iOS模拟器运行项目
- en: Technical requirements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This book utilizes Unity 2022.1.0b16 and Unity Hub 3.3.1, but the steps should
    work with minimal changes in future versions of the editor. If you would like
    to download the exact version used in this book, and there is a new version out,
    you can visit Unity’s download archive at [https://unity3d.com/get-unity/download/archive](https://unity3d.com/get-unity/download/archive).
    You can also find the system requirements for Unity at [https://docs.unity3d.com/2022.1/Documentation/Manual/system-requirements.html](https://docs.unity3d.com/2022.1/Documentation/Manual/system-requirements.html)
    in the *Unity Editor system* *requirements* section.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用Unity 2022.1.0b16和Unity Hub 3.3.1，但步骤应该在未来版本的编辑器中只需做最小改动即可。如果您想下载本书中使用的确切版本，并且有新版本发布，您可以访问Unity的下载存档[https://unity3d.com/get-unity/download/archive](https://unity3d.com/get-unity/download/archive)。您也可以在*Unity编辑器系统*
    *要求*部分找到Unity的系统要求[https://docs.unity3d.com/2022.1/Documentation/Manual/system-requirements.html](https://docs.unity3d.com/2022.1/Documentation/Manual/system-requirements.html)。
- en: If you wish to deploy to an Android device, you can use macOS, Linux, or Windows,
    and depending on the features you wish to use, it is possible to export your game
    in such a way as to run apps on Android 5.1 Lollipop and above.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想部署到Android设备，您可以使用macOS、Linux或Windows，并且根据您希望使用的功能，您可以将游戏以某种方式导出，以便在Android
    5.1 Lollipop及以上版本上运行应用程序。
- en: Note
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For more information on the different types of Android versions that are supported,
    check out [https://docs.unity3d.com/ScriptReference/AndroidSdkVersions.html](https://docs.unity3d.com/ScriptReference/AndroidSdkVersions.html).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于支持的不同类型Android版本的信息，请查看[https://docs.unity3d.com/ScriptReference/AndroidSdkVersions.html](https://docs.unity3d.com/ScriptReference/AndroidSdkVersions.html)。
- en: To develop for an iOS device, in addition to the device itself running iOS 12
    or later, you’ll need to do some work on a Macintosh computer that runs OS X 10.13
    High Sierra or a later version for an Intel-based Macintosh and Big Sur 11.0 for
    a Macintosh using Apple silicon. I’ll be using 12.3.1 macOS Monterey. If you do
    not have one, it is possible to develop your game using Windows and, when you
    want to publish the game, bring your project to a Macintosh to do the final export.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要为iOS设备开发，除了设备本身运行iOS 12或更高版本外，您还需要在运行OS X 10.13 High Sierra或更高版本的Intel Macintosh和运行Apple硅的Macintosh上做一些工作。我将使用12.3.1
    macOS Monterey。如果您没有，您可以使用Windows开发您的游戏，当您想发布游戏时，将您的项目带到Macintosh上进行最终导出。
- en: Note
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: There are some other potential ways to build iOS apps using Windows, but they
    are not within the scope of this book. One possible option is to use Unity’s CI/CD
    Cloud Build Automation & Deployment Tools service, which automatically creates
    versions of your game. For more information, check out [https://unity.com/solutions/ci-cd](https://unity.com/solutions/ci-cd).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Windows构建iOS应用还有一些其他潜在的方法，但它们不在这个书籍的范围内。一个可能的选择是使用Unity的CI/CD云构建自动化与部署工具服务，该服务会自动创建你游戏的不同版本。有关更多信息，请查看[https://unity.com/solutions/ci-cd](https://unity.com/solutions/ci-cd).
- en: Another potential option would be to rent a Macintosh via the cloud to do the
    building yourself. For more information on that and other potential options, check
    out [https://mindster.com/how-develop-ios-apps-windows/](https://mindster.com/how-develop-ios-apps-windows/).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个潜在的选择可能是通过云服务租用一台Macintosh电脑来自行构建。有关该选项和其他潜在选项的更多信息，请查看[https://mindster.com/how-develop-ios-apps-windows/](https://mindster.com/how-develop-ios-apps-windows/).
- en: You can find the code files for this chapter on GitHub at [https://github.com/PacktPublishing/Unity-2022-Mobile-Game-Development-3rd-Edition/tree/main/Chapter02](https://github.com/PacktPublishing/Unity-2022-Mobile-Game-Development-3rd-Edition/tree/main/Chapter02).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在GitHub上找到本章的代码文件[https://github.com/PacktPublishing/Unity-2022-Mobile-Game-Development-3rd-Edition/tree/main/Chapter02](https://github.com/PacktPublishing/Unity-2022-Mobile-Game-Development-3rd-Edition/tree/main/Chapter02).
- en: Introducing the Build Settings menu
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍构建设置菜单
- en: 'There are times during development when you may want to see what your game
    looks like outside of the editor. It can give you a sense of accomplishment. I
    know I felt that way the first time I pushed a build to a console devkit. Whether
    it’s for PC, Macintosh, Linux, web player, mobile, or console, we have to go through
    the same menu – the **Build** **Settings** menu:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发过程中，有时你可能想看看你的游戏在编辑器外部的样子。这可以给你一种成就感。我知道我第一次将构建版本推送到控制台开发工具包时就有这种感觉。无论是PC、Macintosh、Linux、网络玩家、移动设备还是控制台，我们都必须通过相同的菜单——**构建设置**菜单：
- en: 'Start off by opening up the project we created in [*Chapter 1*](B18868_01.xhtml#_idTextAnchor015),
    *Building Your Game*. In addition, open the scene we created (`SampleScene.unity`,
    which is inside the `Scenes` folder):'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，打开我们在[*第1章*](B18868_01.xhtml#_idTextAnchor015)“构建你的游戏”中创建的项目。此外，打开我们创建的场景（`SampleScene.unity`，位于`Scenes`文件夹中）：
- en: "![\uFEFFFigure 2.1 –The SampleScene file](img/B18868_02_01.jpg)"
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图2.1 – SampleScene文件](img/B18868_02_01.jpg)'
- en: Figure 2.1 –The SampleScene file
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.1 – SampleScene文件
- en: Since the scene is our gameplay, let’s rename the file by first opening the
    `Scenes` folder in the `SampleScene` object, and selecting `Gameplay` and then
    press the *Enter* key to submit the change. Unity will ask whether you want to
    reload the scene. Do so by clicking **Reload**.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于场景是我们的游戏玩法，让我们首先在`SampleScene`对象中的`Scenes`文件夹中打开文件，选择`Gameplay`，然后按*Enter*键提交更改。Unity将询问你是否想要重新加载场景。通过点击**重新加载**来完成此操作。
- en: 'From here, we will open the **Build Settings** menu by selecting **File** |
    **Build Settings**:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从这里，我们将通过选择**文件** | **构建设置**来打开**构建设置**菜单：
- en: Tip
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: You may alternatively press *Ctrl* + Shift + *B* or *Command* + Shift + *B*
    to bring the menu up as well.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过按*Ctrl* + Shift + *B*或*Command* + Shift + *B*来打开菜单。
- en: '![Figure 2.2 – The Build Settings menu](img/B18868_02_02.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图2.2 – 构建设置菜单](img/B18868_02_02.jpg)'
- en: Figure 2.2 – The Build Settings menu
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2 – 构建设置菜单
- en: 'In the preceding screenshot, you will notice that the **Build Settings** menu
    came up. This menu contains three sections:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中，你会注意到**构建设置**菜单已经出现。此菜单包含三个部分：
- en: '**Scenes In Build** (top): This window contains the scenes in our project that
    we want to include when we build our project. This ensures that things such as
    test levels won’t be included unless specified.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建中的场景**（顶部）：此窗口包含我们希望在构建项目时包含的场景。这确保了除非指定，否则测试级别等事物不会被包含。'
- en: '**Platform** (bottom left): This is a list of all of the platforms to which
    you can export your game. The Unity logo shows up on the current platform you’re
    compiling for. To change your platform, you’ll need to select it from this list
    and then click on the **Switch Platform** button, which appears below the list.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平台**（左下角）：这是一个你可以导出游戏的平台列表。Unity标志出现在你正在编译的当前平台上。要更改平台，你需要从列表中选择它，然后点击列表下方的**切换平台**按钮。'
- en: '**Options** (bottom right): To the right of the **Platform** section, you’ll
    see some settings that can be tweaked based on how you want the build to work,
    with certain options that change based on the platform you will work with.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选项**（右下角）：在 **平台** 部分的右侧，你会看到一些可以根据你想要构建的方式进行调整的设置，某些选项会根据你将要工作的平台而改变。'
- en: 'By default, we have no scenes in our build, so let’s go ahead and change that.
    Click on the `Scenes/Gameplay` level appear in the list at index **0**, which
    means that when your game is played, this level will be the first one to load:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，我们的构建中没有场景，所以让我们继续更改它。点击列表中索引为 **0** 的 `Scenes/Gameplay` 级别，这意味着当你的游戏运行时，这个级别将是第一个加载的：
- en: '![Figure 2.3 – Adding the Gameplay Scene to Scenes In Build](img/B18868_02_03.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3 – 将游戏玩法场景添加到构建中的场景](img/B18868_02_03.jpg)'
- en: Figure 2.3 – Adding the Gameplay Scene to Scenes In Build
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – 将游戏玩法场景添加到构建中的场景
- en: Now that we know how the build settings work, let’s see how to build the project
    for a PC to understand the general case before continuing to build our mobile
    game.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了构建设置的工作原理，让我们看看如何为 PC 构建项目，以便在继续构建我们的移动游戏之前了解一般情况。
- en: Note
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You may also add scenes to the **Scenes In Build** section by dragging and dropping
    them from the **Project** window. You may also drag the scenes to reorder them
    however you wish.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过从 **项目** 窗口拖放场景到 **构建中的场景** 部分添加场景。你也可以拖动场景以按你希望的顺序重新排列它们。
- en: Building a project for a PC
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 PC 构建项目
- en: 'By default, our platform is set to **Windows, Mac, Linux**. Just to verify
    that everything is working correctly, let’s go ahead and get the game working
    on our own platform before moving to mobile:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，我们的平台设置为 **Windows, Mac, Linux**。为了验证一切是否正常工作，让我们先在我们的平台上运行游戏，然后再转向移动设备：
- en: To get started, we will select the **Build** option. In my case, I’ll be exporting
    the project to Windows, but the process is similar for macOS and Linux.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始，我们将选择 **构建** 选项。在我的情况下，我将把项目导出到 Windows，但这个过程对于 macOS 和 Linux 也是类似的。
- en: 'Once this is done, a window will pop up asking for a name and a location to
    put the game in. I’m going to create a new `Export` folder located in the same
    folder that contains `Assets` and `Library`, so it won’t show up in the **Project**
    window, but it will be in the same folder as my project:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成此操作后，将弹出一个窗口，要求输入游戏名称和放置游戏的位置。我将创建一个新 `Export` 文件夹，位于包含 `Assets` 和 `Library`
    的同一文件夹中，因此它不会显示在 **项目** 窗口中，但将位于我的项目文件夹中：
- en: '![Figure 2.4 – The Export folder](img/B18868_02_04.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.4 – 导出文件夹](img/B18868_02_04.jpg)'
- en: Figure 2.4 – The Export folder
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – 导出文件夹
- en: 'Click on **Select Folder** and wait for it to finish. Once it’s done, a window
    should appear as follows:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **选择文件夹** 并等待其完成。一旦完成，应该会出现以下窗口：
- en: "![Figu\uFEFFre 2.5 – Folder created](img/B18868_02_05.jpg)"
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.5 – 创建的文件夹](img/B18868_02_05.jpg)'
- en: Figure 2.5 – Folder created
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5 – 创建的文件夹
- en: We have the executable, but we also have a data folder containing all the assets
    for our application (right now, it’s called `MobileDev_Data`). You must include
    the data folder and the other files created with your game, or it will not run.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有可执行文件，但还有一个包含我们应用程序所有资源的数据文件夹（目前称为 `MobileDev_Data`）。你必须包含数据文件夹以及与你的游戏一起创建的其他文件，否则它将无法运行。
- en: If you build for Mac, it will bundle the app and data altogether, so once you
    export the game, all you need to provide is the application.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你为 Mac 构建项目，它将捆绑应用程序和数据，所以一旦你导出游戏，你只需要提供应用程序即可。
- en: 'If you double-click on the `.exe` file to run the game, you’ll be taken to
    the proper game screen, as shown in the following screenshot:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你双击 `.exe` 文件来运行游戏，你将被带到正确的游戏屏幕，如下面的截图所示：
- en: '![Figure 2.6 – Running the game](img/B18868_02_06.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.6 – 运行游戏](img/B18868_02_06.jpg)'
- en: Figure 2.6 – Running the game
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.6 – 运行游戏
- en: With that, we should be able to control and play the game as we would usually
    do. This is great!
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这样一来，我们应该能够像平时一样控制和玩游戏。这真是太好了！
- en: Tip
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: You’ll have to use *Alt* + *F4* (*Command* + *Q* on Macintosh) to quit the game,
    and you can switch to windowed mode by pressing *Alt* + *Enter*.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要使用 *Alt* + *F4*（在 Macintosh 上为 *Command* + *Q*）来退出游戏，并且你可以通过按 *Alt* + *Enter*
    切换到窗口模式。
- en: Now that we have discussed the universal ways of building a project, let’s dive
    into the specifics of different platforms. In the next section, we will discuss
    getting our project onto an Android device.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论了构建项目的通用方法，让我们深入了解不同平台的具体情况。在下一节中，我们将讨论如何将我们的项目上传到 Android 设备。
- en: Exporting a project for Android
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 Android 导出项目
- en: Now that we have all of the setup done, we can open Unity with our project and
    export it for Android devices. In this section, we will first check whether we
    have Android Build Support installed, and then we will update the build and player
    settings to export our project. So, let’s get started.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了所有设置，我们可以用我们的项目打开Unity并将其导出为Android设备。在本节中，我们首先检查是否已安装Android构建支持，然后我们将更新构建和玩家设置以导出我们的项目。那么，让我们开始吧。
- en: Installing Android Build Support for Unity
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为Unity安装Android构建支持
- en: 'First of all, if you haven’t done so already, you’ll need to select to add
    **Android Build Support** as an option when you install Unity. If you have installed
    it, you can skip this section. If you did not install it when doing the initial
    installation, we will cover the installation in the following steps:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，如果你还没有这样做，你需要在安装Unity时选择将**Android构建支持**作为选项。如果你已经安装了它，你可以跳过这一部分。如果你在初始安装时没有安装它，我们将在以下步骤中介绍安装过程：
- en: Close the Unity Editor and open the Unity Hub and select the **Installs** section.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭Unity编辑器，打开Unity Hub并选择**安装**部分。
- en: 'From there, click on the gear icon to the right of your current version of
    Unity and select the **Add** **modules** option:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从那里，点击你当前Unity版本右侧的齿轮图标，并选择**添加模块**选项：
- en: '![Figure 2.7 – Selecting the Add Modules option](img/B18868_02_07.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图2.7 – 选择添加模块选项](img/B18868_02_07.jpg)'
- en: Figure 2.7 – Selecting the Add Modules option
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.7 – 选择添加模块选项
- en: 'Check the **Android Build Support** option, which should also check the **Android
    SDK and NDK Tools** and **OpenJDK** options. Afterward, click on the **Continue**
    button:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Android构建支持**选项，这也应该选中**Android SDK和NDK工具**和**OpenJDK**选项。之后，点击**继续**按钮：
- en: '![Figure 2.8 –  Checking the Android Build Support option](img/B18868_02_08.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图2.8 – 检查Android构建支持选项](img/B18868_02_08.jpg)'
- en: Figure 2.8 – Checking the Android Build Support option
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.8 – 检查Android构建支持选项
- en: 'You’ll be brought to a license terms page. Read it over and if you agree to
    it, check the agreement box and click on the **Install** button:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将被带到许可条款页面。阅读它，如果你同意，勾选协议框并点击**安装**按钮：
- en: "![Figure 2.9 –Android SDK and NDK License Terms from Goo\uFEFFgle](img/B18868_02_09.jpg)"
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图2.9 – 来自谷歌的Android SDK和NDK许可条款](img/B18868_02_09.jpg)'
- en: Figure 2.9 –Android SDK and NDK License Terms from Google
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.9 – 来自谷歌的Android SDK和NDK许可条款
- en: 'Wait for it to finish installing. Once finished, you should see the Android
    logo at the bottom of your installation:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 等待安装完成。一旦完成，你应该会在安装底部的位置看到Android标志：
- en: '![Figure 2.10 – The newly added platform](img/B18868_02_10.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图2.10 – 新增的平台](img/B18868_02_10.jpg)'
- en: Figure 2.10 – The newly added platform
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.10 – 新增的平台
- en: This means that Android Build Support has now been added to our version of Unity,
    and we can build projects there. Next, we will see how to build the project for
    Android and the required settings.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着Android构建支持现在已添加到我们的Unity版本中，我们可以在那里构建项目。接下来，我们将了解如何为Android构建项目以及所需的设置。
- en: Updating build and player settings for Android projects
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新Android项目的构建和玩家设置
- en: 'Now that we have Android support, let’s open up our project again and change
    the platform we are developing for:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了Android支持，让我们再次打开我们的项目并更改我们正在开发的平台：
- en: At this point, we will dive into Unity and move into our **Build Settings**
    menu once again by going to **File** | **Build Settings**.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这一点上，我们将深入Unity，并通过转到**文件** | **构建设置**来再次进入我们的**构建设置**菜单。
- en: 'Click on the **Android** option from the **Platform** list and then click on
    the **Switch Platform** button to make the change:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**平台**列表中选择**Android**选项，然后点击**切换平台**按钮进行更改：
- en: '![Figure 2.11 – Location of the Switch Platform button](img/B18868_02_11.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图2.11 – 切换平台按钮的位置](img/B18868_02_11.jpg)'
- en: Figure 2.11 – Location of the Switch Platform button
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.11 – 切换平台按钮的位置
- en: 'Note that this will make Unity reimport all of the assets in our game, so this
    may be time-consuming when you start to build larger projects. Once this is complete,
    you should notice that the Unity logo is now next to the **Android** option, signifying
    that’s the platform to be built for:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这将使Unity重新导入我们游戏中的所有资产，因此在开始构建较大的项目时可能会耗时较长。一旦完成，你应该会注意到Unity标志现在位于**Android**选项旁边，表示这是要构建的平台：
- en: '![Figure 2.12 – Switched to the Android platform](img/B18868_02_12.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图2.12 – 切换到Android平台](img/B18868_02_12.jpg)'
- en: Figure 2.12 – Switched to the Android platform
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.12 – 切换到Android平台
- en: 'Now, in order to be able to build our project, we must set the bundle identifier
    for our game, which is a string that identifies the app. It’s written like a URL
    in reverse, for example, `com.yourCompanyName.yourGameName`. To modify this, we’ll
    need to open up the **Player Settings** menu, which we can access by clicking
    on the **Player Settings…** button in the bottom-left part of the **Build Settings**
    menu or by going into **Edit** | **Project Settings** | **Player**. You’ll note
    that the menu appears as a new window:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，为了能够构建我们的项目，我们必须为我们的游戏设置捆绑标识符，这是一个标识应用的字符串。它写法类似于反向的URL，例如，`com.yourCompanyName.yourGameName`。要修改这个，我们需要打开**玩家设置**菜单，我们可以通过点击**构建设置**菜单左下角的**玩家设置…**按钮或通过进入**编辑**
    | **项目设置** | **玩家**来访问它。你会注意到菜单作为一个新窗口出现：
- en: "![Figure 2\\. \uFEFF13 – The Player Settings menu](img/B18868_02_13.jpg)"
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图2.13 – 玩家设置菜单](img/B18868_02_13.jpg)'
- en: Figure 2\. 13 – The Player Settings menu
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.13 – 玩家设置菜单
- en: 'Now that we’re in the **Android** mode (note the text on the title bar of the
    Unity Editor), we can change these properties:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们处于**Android**模式（注意Unity编辑器标题栏上的文本），我们可以更改这些属性：
- en: '![Figure 2.14 – The Android mode](img/B18868_02_14.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图2.14 – Android模式](img/B18868_02_14.jpg)'
- en: Figure 2.14 – The Android mode
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.14 – Android模式
- en: We’ll discuss more of these in a later chapter, but for now, change your `JohnPDoran`.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在后面的章节中讨论更多这些内容，但现在，将你的`JohnPDoran`更改。
- en: Then scroll down until you get to the **Other Settings** option. From there,
    you’ll see the **Package Name** property is using whatever we set for **our Company
    Name** and **Product Name** properties, but we can customize it if we’d like by
    checking the **Override Default Package Name** property; we just have to ensure
    that it is different than the default value.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后向下滚动，直到你到达**其他设置**选项。从那里，你会看到**包名**属性正在使用我们为**公司名称**和**产品名称**属性设置的任何内容，但如果我们想通过勾选**覆盖默认包名**属性来自定义它，我们必须确保它与默认值不同。
- en: 'There’s also a **Minimum API Level** option; make sure that your option is
    set to the same version as your phone or earlier, depending on what you want to
    support. Note that the earlier you go, the fewer things you’ll have access to,
    but your project will be able to support more phones:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一个**最小API级别**选项；确保你的选项设置为与你的手机相同的版本或更早的版本，具体取决于你想要支持什么。注意，你越早使用，可访问的功能就越少，但你的项目将能够支持更多的手机：
- en: '![Figure 2.15 – Player settings adjustments](img/B18868_02_15.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图2.15 – 玩家设置调整](img/B18868_02_15.jpg)'
- en: Figure 2.15 – Player settings adjustments
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.15 – 玩家设置调整
- en: 'Close the `Export` folder we created earlier. It will ask for the name you’d
    like the file to have. I will use `MobileDev` as we did previously because instead
    of a `.exe` file, it will create a `.``apk` file:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭我们之前创建的`Export`文件夹。它将询问你希望文件具有的名称。我将使用`MobileDev`，因为我们之前这样做过，因为它将创建一个`.apk`文件而不是`.exe`文件：
- en: "![Figure 2.16 –\uFEFF Android APK created](img/B18868_02_16.jpg)"
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图2.16 – 创建的Android APK](img/B18868_02_16.jpg)'
- en: Figure 2.16 – Android APK created
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.16 – 创建的Android APK
- en: Wait a bit, and once it’s finished, you should have a new `.apk` file located
    in the folder. Of course, just having the APK file doesn’t do much if we can’t
    put it on our actual phone, so in the next section, we will enable our phone to
    test the game on our device.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 稍等片刻，一旦完成，你应该会在文件夹中找到一个新的`.apk`文件。当然，如果我们不能将其放在我们的实际手机上，那么仅仅拥有APK文件并没有什么作用，所以在下一个小节中，我们将使我们的手机能够在我们设备上测试游戏。
- en: Running the Android APK with an emulator
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用模拟器运行Android APK
- en: While the best way to test an Android game is on an actual Android device, it
    is also possible to test the game out on an emulator, which is a medium through
    which we can have our computer run software that was created for Android devices.
    There are several Android emulators available for Windows at the time of writing,
    but the one that I’ve had the most success with is one called *LDPlayer*, a lightweight
    and fast Android emulator; however, it does contain ads due to it being free.
    For those on an Intel-powered Macintosh, you can use *BlueStacks* ([https://www.bluestacks.com/download.html](https://www.bluestacks.com/download.html)),
    but at the time of writing, there are no Android emulators available on Apple
    silicon-powered Macintoshes. This section is completely optional; if you’d rather
    test on an actual device, skip ahead to the *Putting the project on your Android
    device* or the *Unity for iOS setup and Xcode* *installation* section.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然测试Android游戏的最佳方式是在实际的Android设备上，但也可以在模拟器上测试游戏，这是一种我们可以让计算机运行为Android设备创建的软件的中介。在撰写本文时，有几个Android模拟器适用于Windows，但我最有成功经验的是名为*LDPlayer*的一个轻量级且快速的Android模拟器；然而，由于它是免费的，所以包含广告。对于使用英特尔处理器的Macintosh用户，您可以使用*BlueStacks*
    ([https://www.bluestacks.com/download.html](https://www.bluestacks.com/download.html))，但在撰写本文时，在由Apple硅芯片驱动的Macintosh上没有可用的Android模拟器。本节完全可选；如果您更愿意在实际设备上测试，请跳到*将项目放在您的Android设备上*或*Unity
    for iOS设置和Xcode安装*部分。
- en: 'To test the game on an emulator, follow these steps:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 要在模拟器上测试游戏，请按照以下步骤操作：
- en: 'From your web browser, go to [https://www.ldplayer.net/](https://www.ldplayer.net/).
    From there, click on the **Download LDPlayer** **9** button:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从您的网页浏览器，访问[https://www.ldplayer.net/](https://www.ldplayer.net/)。从那里，点击**下载LDPlayer**
    **9** 按钮：
- en: '![Figure 2.17 – The LDPlayer website](img/B18868_02_17.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图2.17 – LDPlayer网站](img/B18868_02_17.jpg)'
- en: Figure 2.17 – The LDPlayer website
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.17 – LDPlayer网站
- en: 'Once the program is downloaded, open the installer, go through the standard
    installation process, and click the **Try Now** button once you’ve finished installation:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载程序后，打开安装程序，完成标准安装过程，并在安装完成后点击**立即尝试**按钮：
- en: '![Figure 2.18 – The Welcome to LDPlayer menu](img/B18868_02_18.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图2.18 – 欢迎使用LDPlayer菜单](img/B18868_02_18.jpg)'
- en: Figure 2.18 – The Welcome to LDPlayer menu
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.18 – 欢迎使用LDPlayer菜单
- en: From the welcome screen, click on the **X** in the top right of the **Welcome
    to** **LDPlayer** menu.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从欢迎屏幕，点击**欢迎使用LDPlayer**菜单右上角的**X**。
- en: 'Drag and drop the `MobileDev.apk` file from your `Export` folder onto the LDPlayer
    menu. If all goes well, you should see the **MobileDev** icon show up on the screen:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的`Export`文件夹中的`MobileDev.apk`文件拖放到LDPlayer菜单。如果一切顺利，您应该在屏幕上看到**MobileDev**图标：
- en: '![Figure 2.19 – Game added to the home screen](img/B18868_02_19.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图2.19 – 游戏已添加到主屏幕](img/B18868_02_19.jpg)'
- en: Figure 2.19 – Game added to the home screen
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.19 – 游戏已添加到主屏幕
- en: From there, you can click the icon to start the game!
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从那里，您可以点击图标开始游戏！
- en: '![Figure 2.20 – The game is running on the emulated device](img/B18868_02_20.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图2.20 – 游戏正在模拟设备上运行](img/B18868_02_20.jpg)'
- en: Figure 2.20 – The game is running on the emulated device
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.20 – 游戏正在模拟设备上运行
- en: As you can see, the game is running perfectly on the emulated device! We can
    click on the **X** from the **MobileDev** tab whenever we are finished playing.
    Now that we’ve seen how easy it is to run the game on an emulator, let’s see how
    to do it on an actual device!
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，游戏在模拟设备上运行得非常完美！我们可以在完成游戏后，从**MobileDev**标签页点击**X**来退出。现在我们已经看到了在模拟器上运行游戏是多么简单，让我们看看如何在实际设备上操作！
- en: Putting the project on your Android device
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将项目放在您的Android设备上
- en: 'The following steps may be different for you depending on your Android version
    and your specific phone, but here is a general set of steps to be able to sideload
    our Android app to our device:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤可能因您的Android版本和具体手机而异，但这里有一套通用的步骤，以便能够将我们的Android应用到设备上：
- en: 'On your Android device, you’ll need to go to your **Settings** app. From there
    select the **Apps** section:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Android设备上，您需要进入您的**设置**应用。从那里选择**应用**部分：
- en: '![Figure 2.21 – The Settings | Apps location](img/B18868_02_21.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图2.21 – 设置 | 应用位置](img/B18868_02_21.jpg)'
- en: Figure 2.21 – The Settings | Apps location
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.21 – 设置 | 应用位置
- en: 'From there, scroll down till you get to the **Special app access** section
    or similar, and then tap on it to go into the menu:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从那里，向下滚动直到到达**特殊应用访问**部分或类似部分，然后点击它进入菜单：
- en: '![Figure 2.22 – The Special app access option](img/B18868_02_22.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.22 – 特殊应用访问选项](img/B18868_02_22.jpg)'
- en: Figure 2.22 – The Special app access option
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.22 – 特殊应用访问选项
- en: 'Inside there, you’ll see a section called **Install unknown apps**. Enter this
    option:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在里面，你会看到一个名为 **安装未知应用** 的部分。选择此选项：
- en: '![Figure 2.23 – The Install unknown apps option](img/B18868_02_23.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.23 – 安装未知应用选项](img/B18868_02_23.jpg)'
- en: Figure 2.23 – The Install unknown apps option
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.23 – 安装未知应用选项
- en: 'We will be uploading our app to the device’s files, so we will want to enable
    **Install unknown apps** from the **Files** app. Select it and then enable it
    from the menu:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将把我们的应用到设备的文件中上传，因此我们希望从 **文件** 应用中启用 **安装未知应用**。选择它，然后从菜单中启用它：
- en: '![Figure 2.24 – Enabling the Install unknown apps option](img/B18868_02_24.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.24 – 启用安装未知应用选项](img/B18868_02_24.jpg)'
- en: Figure 2.24 – Enabling the Install unknown apps option
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.24 – 启用安装未知应用选项
- en: With this enabled, your device can now install the `.apk` file, but now you
    will need to move your game over to the device to install it. The easiest way
    is to transfer it to your device via USB; we’ll do that now.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 启用此功能后，你的设备现在可以安装 `.apk` 文件，但你现在需要将你的游戏移动到设备上以安装它。最简单的方法是通过 USB 将其传输到设备；我们现在就这样做。
- en: Tip
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: For those of you who’d rather not use USB, I would suggest using a cloud storage
    app, such as Dropbox, to upload the `.apk` file and then download it from the
    app and install it that way. There’s also another tool called ADB that can send
    files to your phone via USB or Wi-Fi. For more information on that and the rest
    of the Android build process, check out [https://docs.unity3d.com/Manual/android-BuildProcess.html](https://docs.unity3d.com/Manual/android-BuildProcess.html).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些不愿意使用 USB 的用户，我建议使用云存储应用，如 Dropbox，上传 `.apk` 文件，然后从应用中下载并以此方式安装。还有一个名为 ADB
    的工具，可以通过 USB 或 Wi-Fi 将文件发送到你的手机。有关该工具以及 Android 构建过程的更多信息，请参阅 [https://docs.unity3d.com/Manual/android-BuildProcess.html](https://docs.unity3d.com/Manual/android-BuildProcess.html)。
- en: 'Connect your phone to your computer via USB. Upon being connected, your phone
    will show a notification that it’s connected via USB for charging. Click on that
    notification and change the option to **File Transfer**:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 USB 将你的手机连接到电脑。连接后，你的手机将显示一个通知，表明它通过 USB 连接进行充电。点击该通知，将选项更改为 **文件传输**：
- en: '![Figure 2\. 25 – USB Preferences](img/B18868_02_25.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图 2\. 25 – USB 设置](img/B18868_02_25.jpg)'
- en: Figure 2\. 25 – USB Preferences
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2\. 25 – USB 设置
- en: 'After that, go back to your computer and go into **Windows Explorer/Finder**,
    and then go to the **Devices and drives** section; you should see your device
    appear there:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，回到你的电脑，进入 **Windows 资源管理器/Finder**，然后转到 **设备和驱动器** 部分；你应该在那里看到你的设备：
- en: '![Figure 2.26 – Selecting our Android device](img/B18868_02_26.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.26 – 选择我们的 Android 设备](img/B18868_02_26.jpg)'
- en: Figure 2.26 – Selecting our Android device
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.26 – 选择我们的 Android 设备
- en: 'Double-click on your device and access the internal shared storage section.
    Then, drag the `.apk` file we made before into this folder:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击你的设备并访问内部共享存储部分。然后，将我们之前制作的 `.apk` 文件拖入此文件夹：
- en: '![Figure 2.27 – Placing the APK file on the Android device](img/B18868_02_27.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.27 – 将 APK 文件放置在 Android 设备上](img/B18868_02_27.jpg)'
- en: Figure 2.27 – Placing the APK file on the Android device
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.27 – 将 APK 文件放置在 Android 设备上
- en: 'Now, back in your phone, open the **Files/File Explorer** app. From there,
    scroll down to the bottom of the menu and select the **Internal** **storage**
    option:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，回到你的手机，打开 **文件/文件资源管理器** 应用。从那里，向下滚动到菜单底部并选择 **内部** **存储** 选项：
- en: '![Figure 2.28 – The Internal storage location](img/B18868_02_28.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.28 – 内部存储位置](img/B18868_02_28.jpg)'
- en: Figure 2.28 – The Internal storage location
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.28 – 内部存储位置
- en: 'From there, select your `.apk` file from the listed files:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从那里，从列出的文件中选择你的 `.apk` 文件：
- en: "![Figure 2.29 – Selecting the a\uFEFFpplication](img/B18868_02_29.jpg)"
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.29 – 选择应用程序](img/B18868_02_29.jpg)'
- en: Figure 2.29 – Selecting the application
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.29 – 选择应用程序
- en: 'You’ll be asked to confirm the installation. Hit the **Install** button:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将需要确认安装。点击 **安装** 按钮：
- en: '![Figure 2.30 – Installing the app](img/B18868_02_30.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.30 – 安装应用](img/B18868_02_30.jpg)'
- en: Figure 2.30 – Installing the app
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.30 – 安装应用
- en: 'You may see a window pop up that mentions that Play Protect doesn’t recognize
    the developer. We will see how to solve this issue later on, in *Chapter14 Submitting
    Games to App Stores*, but for now, click **INSTALL ANYWAY** and wait for the installation
    to finish:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可能会看到一个弹出窗口，提示Play Protect无法识别开发者。我们将在*第14章*“提交游戏到App Store”中介绍如何解决这个问题，但现在，请点击**安装即可**并等待安装完成：
- en: '![Figure 2.31 – INSTALL ANYWAY](img/B18868_02_31.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图2.31 – 安装即可](img/B18868_02_31.jpg)'
- en: Figure 2.31 – INSTALL ANYWAY
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.31 – 安装即可
- en: Your phone may also ask if you want to send the app for scanning by Play Protect.
    Since we will be creating several versions of the project while working through
    this book, it’s likely not needed, so I would select **Don’t Send**.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 您的手机可能还会询问您是否希望通过Play Protect扫描应用。由于我们在阅读本书的过程中将创建多个项目版本，因此这很可能不是必需的，所以我将选择**不发送**。
- en: Tip
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: Of course, I can’t note the steps for all devices as some have different drivers
    that are required or additional steps that need to be performed in order to open
    files on the device. If these steps do not work and you do not know how to get
    files onto your device and access them and add new ones to them, go ahead and
    search on your internet search engine of choice for **phone name file transfer**,
    replacing the phone name with your phone’s name.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我无法为所有设备列出步骤，因为一些设备需要不同的驱动程序或需要执行额外的步骤才能在设备上打开文件。如果这些步骤不起作用，并且您不知道如何将文件传输到您的设备上以及如何访问和添加新文件，请使用您选择的互联网搜索引擎搜索**手机名称文件传输**，将手机名称替换为您的手机名称。
- en: 'Once it’s finished, go ahead and click on the **Open** button to open our game:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，请点击**打开**按钮来打开我们的游戏：
- en: '![Figure 2.32 – The game running on an Android device](img/B18868_02_32.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![图2.32 – 在Android设备上运行的游戏](img/B18868_02_32.jpg)'
- en: Figure 2.32 – The game running on an Android device
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.32 – 在Android设备上运行的游戏
- en: As you can see, the game is on there, and it’s working. Granted, you can’t control
    it yet, and there are many new things that you can’t do, but this lets you know
    that you’ve set up your Android device properly. Of course, now that you have
    your game on an Android device, you now need to get it working on iOS, which we
    will cover in the next section.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，游戏已经安装并正在运行。当然，您目前还不能控制它，还有很多新功能您还不能使用，但这表明您已正确设置了Android设备。当然，现在您的游戏已经安装到Android设备上，您现在需要将其在iOS上运行，我们将在下一节中介绍。
- en: Unity for iOS setup and Xcode installation
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iOS Unity设置和Xcode安装
- en: With Android, there’s a lot of setup effort required, but building and getting
    a game onto your device is less work, whereas, with iOS, there’s less work to
    do on the setup and more involvement with getting the game actually onto the device.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Android系统，需要做大量的设置工作，但将游戏构建并安装到设备上则相对轻松，而使用iOS系统，设置工作较少，但需要更多精力将游戏实际安装到设备上。
- en: Previously, you had to have a paid Apple Developer license to get your game
    onto an iOS device. Although that’s still required to get the game on the App
    Store, you are no longer required to get it for testing. Note that the free option
    doesn’t have everything available to you, most notably **in-app purchases** (**IAPs**)
    and the Game Center; however, the game should work just fine on your device. We
    will go over how to adjust your project to reflect being in the Apple Developer
    portal in [*Chapter 13*](B18868_13.xhtml#_idTextAnchor369), *Building a Release
    Copy of Our Game*, when we cover putting our project on the App Store.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，您需要付费的Apple开发者许可证才能将游戏安装到iOS设备上。尽管将游戏上传到App Store仍然需要这个许可证，但您不再需要它来进行测试。请注意，免费选项并不提供所有功能，最显著的是**应用内购买**（**IAPs**）和游戏中心；然而，游戏应该在您的设备上运行得很好。当我们在[*第13章*](B18868_13.xhtml#_idTextAnchor369)“构建游戏发布版本”中介绍将项目上传到App
    Store时，我们将介绍如何调整您的项目以反映在Apple开发者门户中。
- en: 'To develop for an iOS device, in addition to the device itself running iOS
    12 or later, you’ll also need to do some work on a Macintosh computer that runs
    OS X 10.13 High Sierra or a later version for an Intel-based Macintosh and Big
    Sur 11.0 for a Macintosh using Apple silicon. I’ll be using 12.3.1 macOS Monterey.
    Just like working with Android, we’ll also need to do some setup before we can
    actually do the exporting. Let’s get started on that now:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 要为iOS设备开发，除了设备本身运行iOS 12或更高版本外，您还需要在运行OS X 10.13 High Sierra或更高版本的Macintosh计算机上做一些工作，对于使用Apple硅的Macintosh，则需要Big
    Sur 11.0。我将使用12.3.1 macOS Monterey。就像与Android一样，我们还需要在真正进行导出之前做一些设置。现在我们就开始吧：
- en: First of all, if you haven’t done so already, you’ll need to add **iOS Build
    Support (*)** as an option when you are installing Unity. If you did not install
    it when doing the initial installation, you can open up the Unity Hub and select
    the **Installs** section.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，如果你还没有这样做，在安装 Unity 时，你需要将 **iOS 构建支持 (*)** 作为选项添加。如果你在初始安装时没有安装它，你可以打开 Unity
    Hub 并选择 **安装** 部分。
- en: 'From there, click on the three dots to the right of your current version of
    Unity and select the **Add** **modules** option:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从那里，点击你当前 Unity 版本右侧的三个点，并选择 **添加** **模块** 选项：
- en: '![Figure 2.33 – The Unity Hub Installs screen](img/B18868_02_33.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.33 – Unity Hub 安装屏幕](img/B18868_02_33.jpg)'
- en: Figure 2.33 – The Unity Hub Installs screen
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.33 – Unity Hub 安装屏幕](img/B18868_02_33.jpg)'
- en: 'From the menu that pops up, check the **iOS Build** **Support** option:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从弹出的菜单中，勾选 **iOS 构建** **支持** 选项：
- en: '![Figure 2.34 – Adding iOS Build Support](img/B18868_02_34.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.34 – 添加 iOS 构建支持](img/B18868_02_34.jpg)'
- en: Figure 2.34 – Adding iOS Build Support
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.34 – 添加 iOS 构建支持](img/B18868_02_34.jpg)'
- en: 'Click on the **Install** button and wait for the installation to finish. Once
    it''s complete, you should see some text in the platforms list for iOS support
    appear:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **安装** 按钮，等待安装完成。一旦完成，你应该会在平台列表中看到一些关于 iOS 支持的文本：
- en: '![Figure 2.35 – iOS support added](img/B18868_02_35.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.35 – iOS 支持已添加](img/B18868_02_35.jpg)'
- en: Figure 2.35 – iOS support added
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.35 – 添加 iOS 支持](img/B18868_02_35.jpg)'
- en: This module allows you to be able to export your projects for iOS. Since I’ll
    mainly use my Windows machine, I’m only adding iOS support, but you can export
    both iOS and Android apps from your Macintosh computer.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 此模块允许你能够导出你的项目到 iOS。由于我主要使用我的 Windows 机器，所以我只添加了 iOS 支持，但你也可以从你的 Macintosh 电脑导出
    iOS 和 Android 应用。
- en: You’ll also need to have `Xcode` and press *Enter*.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你还需要安装 `Xcode` 并按 *Enter*。
- en: '![Figure 2.36 – Searching for “xcode”](img/B18868_02_36.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.36 – 搜索“xcode”](img/B18868_02_36.jpg)'
- en: Figure 2.36 – Searching for “xcode”
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.36 – 搜索“xcode”](img/B18868_02_36.jpg)'
- en: 'From there, you’ll see the **Xcode** program at the top right of the page.
    Click on it and then on the **Install/Update** button (in my case, a cloud icon)
    and go through the installation process:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从那里，你将在页面右上角看到 **Xcode** 程序。点击它，然后点击 **安装/更新** 按钮（在我的情况下，是一个云图标）并完成安装过程：
- en: You may need to enter your Apple ID information; go ahead and do so and then
    wait for it to finish.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可能需要输入你的 Apple ID 信息；请继续并完成输入，然后等待其完成。
- en: Note
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you do not have an Apple ID, you can get one from [https://appleid.apple.com/](https://appleid.apple.com/).
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有 Apple ID，你可以从 [https://appleid.apple.com/](https://appleid.apple.com/)
    获取一个。
- en: Once Xcode is installed, open it up. There will be a license agreement for Xcode
    and the iOS SDK; go ahead and click on **Agree**. It’ll then begin installing
    components that are needed for it to work.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦安装了 Xcode，请打开它。你将看到 Xcode 和 iOS SDK 的许可协议；请继续点击 **同意**。然后它将开始安装它运行所需的组件。
- en: 'When you open Xcode, you’ll be brought to a welcome screen, but we want to
    do some setup first. From the top menu bar, go ahead and select **Xcode** | **Preferences**
    (or press *Command* + *,*). From there, click on the **Accounts** button. This
    will display all of the Apple IDs that you want to be able to use in Xcode:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你打开 Xcode 时，你将被带到欢迎屏幕，但我们首先需要做一些设置。从顶部菜单栏，请选择 **Xcode** | **首选项**（或按 *Command*
    + ，）。从那里，点击 **账户** 按钮。这将显示你想要在 Xcode 中使用的所有 Apple ID：
- en: '![Figure 2.37 – The Accounts window](img/B18868_02_37.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.37 – 账户窗口](img/B18868_02_37.jpg)'
- en: Figure 2.37 – The Accounts window
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.37 – 账户窗口
- en: 'Click on the **+** icon at the bottom left of the screen and then select **Apple
    ID** when it asks what kind of account to create:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕左下角的 **+** 图标，然后在询问创建哪种账户时选择 **Apple ID**：
- en: "![Figure 2.38 – Adding an Apple ID a\uFEFFccount](img/B18868_02_38.jpg)"
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.38 – 添加 Apple ID 账户](img/B18868_02_38.jpg)'
- en: Figure 2.38 – Adding an Apple ID account
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.38 – 添加 Apple ID 账户
- en: From the menu that pops up, add your Apple ID information, and you should see
    it appear on the screen.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从弹出的菜单中，添加你的 Apple ID 信息，你应该会在屏幕上看到它。
- en: If you select the name, you’ll see additional information on the right side,
    such as what teams you are on. If you are not enrolled in the Apple Developer
    Program, it’ll just be a personal team, but if you are paying for it, you should
    see additional teams there as well.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择名称，你将在右侧看到额外的信息，例如你所在的团队。如果你没有加入 Apple 开发者计划，它将只是一个个人团队，但如果你为其付费，你应该也会看到那里有额外的团队。
- en: Now that we have completed the setup and installation of iOS and Xcode, let’s
    continue to build our project.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了 iOS 和 Xcode 的设置和安装，让我们继续构建我们的项目。
- en: Building a project for iOS
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建iOS项目
- en: 'While there are some similarities to working with Android, some differences
    are very important to note, so keep that in mind while reading this section. Let’s
    build our project for the iOS device using the following steps:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然与 Android 的工作有一些相似之处，但也有一些非常重要的差异需要注意，所以在阅读本节时请记住。让我们按照以下步骤为 iOS 设备构建项目：
- en: At this point, we will dive into Unity (switching **Target** to **MacStandalone**
    if needed) and then move into our **Build Settings** menu once again by going
    to **File** | **Build** **Settings**.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这一点上，我们将进入 Unity（如果需要，将 **目标** 切换到 **MacStandalone**）并再次通过转到 **文件** | **构建**
    **设置** 来进入 **构建设置** 菜单。
- en: 'Click on the **iOS** option from the **Platform** list and then click on the
    **Switch Platform** button to make the change:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **平台** 列表中选择 **iOS** 选项，然后点击 **切换平台** 按钮进行更改：
- en: "![Figure 2.39 – Selecting the iOS option \uFEFFfrom the Platform list](img/B18868_02_39.jpg)"
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.39 – 从平台列表中选择 iOS 选项](img/B18868_02_39.jpg)'
- en: Figure 2.39 – Selecting the iOS option from the Platform list
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.39 – 从平台列表中选择 iOS 选项
- en: Note that this will make Unity reimport all of the assets in our game, which
    may be time-consuming as you build larger and larger projects. This now also means
    that when we build our project, it will create an Xcode project instead of just
    an app, which we will need to open and work with once it’s built.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这将使 Unity 重新导入我们游戏中的所有资产，随着项目的不断增大，这可能会消耗更多时间。这也意味着当我们构建项目时，它将创建一个 Xcode
    项目而不是一个简单的应用，构建完成后我们需要打开并与之工作。
- en: If we didn’t do so earlier when building for Android, we must modify the properties
    needed to modify the bundle identifier for our game. To modify this, we’ll need
    to open up the **Player Settings** menu, which we can get to by clicking on the
    **Player Settings...** button in the **Build Settings** menu or by going to **Edit**
    | **Project Settings** | **Player**.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们在为 Android 构建时没有这样做，我们必须修改修改游戏捆绑标识符所需的属性。为此，我们需要打开 **玩家设置** 菜单，我们可以通过点击
    **构建设置** 菜单中的 **玩家设置...** 按钮，或者通过转到 **编辑** | **项目设置** | **玩家** 来访问它。
- en: From the top of the menu, change the `JohnPDoran`. Then scroll down until you
    get to the **Other Settings** option, and from there, you’ll see the **Package
    Name** property is using whatever we set for our **Company Name** and **Product
    Name** properties, but we can customize it if we’d like by checking the **Override
    Default Package** name property.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从菜单顶部更改 `JohnPDoran`。然后向下滚动，直到找到 **其他设置** 选项，然后您会看到 **包名** 属性正在使用我们为 **公司名称**
    和 **产品名称** 属性设置的值，但如果我们想自定义它，可以通过勾选 **覆盖默认包名** 属性来实现。
- en: Note
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you have already changed this property when building for Android, it will
    already be done; there’s no need to do this again.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在为 Android 构建时已经更改了此属性，它已经完成；无需再次执行此操作。
- en: 'Now, we can try to build the project by clicking on the `Export` folder we
    created earlier—in this case, I created a new folder inside of it and named it
    `MobileDev_iOS`:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以通过点击我们之前创建的 `Export` 文件夹来尝试构建项目——在这种情况下，我在其中创建了一个新的文件夹，并将其命名为 `MobileDev_iOS`：
- en: "![Figure 2.40 – Selecting a build location\uFEFF](img/B18868_02_40.jpg)"
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.40 – 选择构建位置](img/B18868_02_40.jpg)'
- en: Figure 2.40 – Selecting a build location
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.40 – 选择构建位置
- en: Tip
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can press the down arrow button to search for folders in the Finder window
    that pops up.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按向下箭头按钮在弹出的查找器窗口中搜索文件夹。
- en: 'Once the project has been built, we will be taken to a Finder window at the
    location where we created the project. From there, we can double-click on the
    `.xcodeproj` file to open the project inside Xcode:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦项目构建完成，我们将被带到创建项目的 Finder 窗口位置。从那里，我们可以双击 `.xcodeproj` 文件，在 Xcode 中打开项目：
- en: '![Figure 2.41 – Location of the build’s Xcode project](img/B18868_02_41.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.41 – 构建项目的 Xcode 项目位置](img/B18868_02_41.jpg)'
- en: Figure 2.41 – Location of the build’s Xcode project
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.41 – 构建项目的 Xcode 项目位置
- en: In Xcode, after waiting for everything to load in, you’ll notice a yellow triangle
    with a **!** in the center of it in the top-center console. If you click on it,
    you’ll see some information appear on the left-hand side.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Xcode 中，等待所有内容加载完成后，您会在顶部中央控制台中注意到一个带有 **!** 的黄色三角形。如果您点击它，您会在左侧看到一些信息。
- en: 'Double-click on the **Update to recommended settings** option on the left-hand
    side of the screen and then click on the **Perform Changes** button in the window
    that pops up:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击屏幕左侧的**更新到推荐设置**选项，然后在弹出的窗口中点击**执行更改**按钮：
- en: '![Figure 2.42 – Perform Changes](img/B18868_02_42.jpg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![图2.42 – 执行更改](img/B18868_02_42.jpg)'
- en: Figure 2.42 – Perform Changes
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.42 – 执行更改
- en: 'Then, go to the middle of the window, and under **TARGETS**, select the **Unity-iPhone**
    option:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，转到窗口的中间部分，在**TARGETS**下选择**Unity-iPhone**选项：
- en: '![Figure 2.43 – Selecting the Unity-iPhone option](img/B18868_02_43.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图2.43 – 选择Unity-iPhone选项](img/B18868_02_43.jpg)'
- en: Figure 2.43 – Selecting the Unity-iPhone option
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.43 – 选择Unity-iPhone选项
- en: Afterward, in the **Signing & Capabilities** section, check the **Automatically
    manage signing** option and click on **Enable Automatic** when the popup appears.
    Then, assign your team to your profile in the window that pops up.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，在**签名与能力**部分，勾选**自动管理签名**选项，当弹出窗口出现时点击**启用自动**。然后，在弹出的窗口中将你的团队分配到你的配置文件中。
- en: Once all the preceding steps are done, plug in your phone via USB, and when
    you unlock it, it may ask if you wish to trust this device; hit the **Trust**
    button. After loading all of the symbols it needs (wait until the top-middle section
    says **Ready**), at the top right, instead of **Generic iOS Device**, change it
    to the device you’ve connected. You may need to unplug and replug your phone after
    installing the symbols to have it pick up the device.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成所有前面的步骤后，通过USB连接你的手机，当你解锁它时，可能会询问你是否信任此设备；点击**信任**按钮。在加载所有需要的符号（等待直到顶部中间部分显示**就绪**）后，在右上角，将**通用iOS设备**更改为你已连接的设备。你可能需要在安装符号后拔掉并重新插入你的手机，以便它能够识别设备。
- en: 'When you click the **Play** button, a window will appear, noting the device
    it will be building to. Once you’ve confirmed all the details are correct, click
    the **Run** button:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你点击**播放**按钮时，会出现一个窗口，显示它将要构建到的设备。一旦你确认所有细节都正确无误，点击**运行**按钮：
- en: '![Figure 2.44 – The Play settings window](img/B18868_02_44.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![图2.44 – 播放设置窗口](img/B18868_02_44.jpg)'
- en: Figure 2.44 – The Play settings window
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.44 – 播放设置窗口
- en: Your phone may be busy, so you may need to wait a bit before you can build to
    the device. You may get a window asking you to access the key access in your keychain.
    Go ahead and click **Allow**, entering your device password if required. You’ll
    also need to unlock your phone at some point so it can make the installation.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的手机可能正忙，所以在你能够构建到设备之前可能需要等待一会儿。你可能会得到一个窗口要求你访问你的钥匙链中的密钥访问权限。请点击**允许**，如果需要的话，输入你的设备密码。你还需要在某个时候解锁你的手机，以便它能够进行安装。
- en: 'If all goes well, you should see your app automatically start playing on your
    device:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，你应该会看到你的应用自动开始在设备上播放：
- en: '![Figure 2.45 – Playing our game on an iOS device](img/B18868_02_45.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![图2.45 – 在iOS设备上播放我们的游戏](img/B18868_02_45.jpg)'
- en: Figure 2.45 – Playing our game on an iOS device
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.45 – 在iOS设备上播放我们的游戏
- en: With that, we also have the game running on the iOS side.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我们也在iOS端运行了游戏。
- en: 'If you go to your home screen, you should notice that the app will now be on
    your iOS device, as you can see in the following screenshot:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你转到主屏幕，你应该会注意到应用现在已经在你的iOS设备上了，如下面的截图所示：
- en: '![Figure 2.46 – The location of the iOS app](img/B18868_02_46.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![图2.46 – iOS应用的定位](img/B18868_02_46.jpg)'
- en: Figure 2.46 – The location of the iOS app
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.46 – iOS应用的定位
- en: Note
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When building in the following manner, apps will only work for a limited time,
    possibly up to a week without the paid license. If your game crashes immediately
    and it worked correctly beforehand, this is most likely the culprit. Redeploy
    the device again to check whether that is the issue before modifying your actual
    project.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 以以下方式构建时，应用只能运行有限的时间，可能最多一周，如果没有付费许可。如果你的游戏立即崩溃，而之前运行正确，这很可能是原因。在修改你的实际项目之前，重新部署设备以检查是否是这个问题。
- en: Running the project via the iOS simulator
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过iOS模拟器运行项目
- en: 'Much like how we were able to use an Android emulator on the PC to play a simulated
    version of our game project, it is also possible to do the same exact thing on
    iOS by using the iOS simulator:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们能够在PC上使用Android模拟器来播放我们游戏项目的模拟版本一样，通过使用iOS模拟器，在iOS上也可以做同样的事情：
- en: 'Back in the Unity Editor, go to the **Player** settings. From there, go to
    the **Other Settings** section and change the **Target SDK** property from **Device
    SDK** to **Simulator SDK**:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Unity编辑器中，转到**玩家**设置。从那里，转到**其他设置**部分，将**目标SDK**属性从**设备SDK**更改为**模拟器SDK**：
- en: '![Figure 2.47 – Setting Target SDK to Simulator SDK](img/B18868_02_47.jpg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![图2.47 – 设置目标SDK为模拟器SDK](img/B18868_02_47.jpg)'
- en: Figure 2.47 – Setting Target SDK to Simulator SDK
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.47 – 设置目标SDK为模拟器SDK
- en: 'Rebuild the project. This time I created a new folder to specify that this
    build was meant for the iOS simulator:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新构建项目。这次我创建了一个新文件夹来指定这次构建是为了iOS模拟器：
- en: '![Figure 2.48 – Select a build folder](img/B18868_02_48.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![图2.48 – 选择构建文件夹](img/B18868_02_48.jpg)'
- en: Figure 2.48 – Select a build folder
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.48 – 选择构建文件夹
- en: 'Open the new project, and from there, in the top section, you’ll now see a
    simulator device selected instead of the **Any iOS device** option given in the
    previous build. You can also click on the option to open a drop-down list where
    you can select a particular device you’d like to build to:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开新项目，然后从那里，在上面的部分，你现在会看到一个模拟器设备被选中，而不是之前构建中给出的**任何iOS设备**选项。你还可以点击选项以打开一个下拉列表，你可以从中选择你想要构建的特定设备：
- en: '![Figure 2.49 – Selecting a simulator device](img/B18868_02_49.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![图2.49 – 选择模拟器设备](img/B18868_02_49.jpg)'
- en: Figure 2.49 – Selecting a simulator device
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.49 – 选择模拟器设备
- en: 'Once you have your device selected, press the **Play** button and wait until
    it completes building the project. If all goes well, you should be able to see
    the simulator open up, and you can then play your game:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你选择了设备，按下**播放**按钮，等待项目构建完成。如果一切顺利，你应该能看到模拟器打开，然后你可以玩游戏：
- en: '![Figure 2.50 – Playing the game on the simulator](img/B18868_02_50.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![图2.50 – 在模拟器上玩游戏](img/B18868_02_50.jpg)'
- en: Figure 2.50 – Playing the game on the simulator
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.50 – 在模拟器上玩游戏
- en: And with that, we’ve seen just how easy it is to build our project in a simulator
    if needed; just make sure to switch the **Target SDK** property back to **Device
    SDK** when making a build for actual devices.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些，我们已经看到了在需要时在模拟器中构建我们的项目是多么容易；只需确保在为实际设备构建时将**目标SDK**属性切换回**设备SDK**。
- en: Summary
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We now have our game running on Android and iOS devices, and we have learned
    the steps we’ll need to take each time we want to deploy our games on these devices.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经在Android和iOS设备上运行我们的游戏，并且我们已经学会了每次我们想要在这些设备上部署我们的游戏时需要采取的步骤。
- en: While I will not be writing about exporting to both kinds of devices again until
    we get to [*Chapter 13*](B18868_13.xhtml#_idTextAnchor369)*, Building a Release
    Copy of Our Game*, it’s a good idea for you to see how the changes that we will
    make will work with both platforms and keep testing on each platform to make sure
    that your project works correctly and at a frame rate that you are okay with.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我将在我们到达[*第13章*](B18868_13.xhtml#_idTextAnchor369)*，构建我们的游戏发布副本*之前不再写关于将内容导出到这两种设备的内容，但了解我们将要做的更改如何与这两个平台一起工作，并在每个平台上继续测试，以确保你的项目正确运行，并且帧率是你可接受的，这是一个好主意。
- en: This is especially important to note, as running the project on your PC via
    the editor or an emulator will not always accurately represent how the game will
    run on a different device. As a result, you may find that certain aspects of your
    game that run fine on your mobile device will cause your computer to be choppy
    instead. The thing is, you won’t know unless you are always checking the games
    on devices, so I highly advise that you do so.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 这一点特别需要注意，因为通过编辑器或模拟器在你的PC上运行项目并不总是能准确地代表游戏在不同设备上的运行情况。因此，你可能会发现，在移动设备上运行良好的游戏在你的电脑上可能会出现卡顿。问题是，除非你总是检查设备上的游戏，否则你不会知道，所以我强烈建议你这样做。
- en: Our game is working on mobile devices now, but it will not react to anything
    we do on the devices due to how we wrote our input code. In the next chapter,
    we will explore how we can add input to our project as well as the design considerations
    we need to make regarding how the different forms of input will change our game.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的游戏现在在移动设备上运行，但由于我们编写的输入代码，它不会对我们在设备上所做的任何事情做出反应。在下一章中，我们将探讨我们如何向我们的项目添加输入，以及我们需要考虑的不同形式的输入如何改变我们的游戏的设计。
- en: 'Part 2: Mobile-Specific Features'
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二部分：移动特定功能
- en: This part of the book will focus on developing mobile-specific features in your
    Unity project. By the end of this part, you will have all the knowledge necessary
    to create a feature-rich mobile game with a polished UI and integrated monetization
    and social media features.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 本书本部分将专注于在Unity项目中开发特定于移动的功能。到本部分结束时，你将拥有创建一个功能丰富、用户界面精美、集成了货币化和社交媒体功能的移动游戏的全部知识。
- en: 'This part has the following chapters:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 3*](B18868_03.xhtml#_idTextAnchor125), *Mobile Input/Touch Controls*'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第3章*](B18868_03.xhtml#_idTextAnchor125), *移动输入/触摸控制*'
- en: '[*Chapter 4*](B18868_04.xhtml#_idTextAnchor165), *Resolution-Independent UI*'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第4章*](B18868_04.xhtml#_idTextAnchor165), *分辨率无关的用户界面*'
- en: '[*Chapter 5*](B18868_05.xhtml#_idTextAnchor195), *Advanced Mobile UI*'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第5章*](B18868_05.xhtml#_idTextAnchor195), *高级移动用户界面*'
- en: '[*Chapter 6*](B18868_06.xhtml#_idTextAnchor206), *Implementing In-App Purchases*'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第6章*](B18868_06.xhtml#_idTextAnchor206), *实现应用内购买*'
- en: '[*Chapter 7*](B18868_07.xhtml#_idTextAnchor232), *Advertising Using Unity Ads*'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第7章*](B18868_07.xhtml#_idTextAnchor232), *使用Unity Ads进行广告投放*'
- en: '[*Chapter 8*](B18868_08.xhtml#_idTextAnchor251), *Integrating Social Media
    into Our Project*'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第8章*](B18868_08.xhtml#_idTextAnchor251), *将社交媒体整合到我们的项目中*'
