- en: Chapter 11. Integrating Third-party Services
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章。集成第三方服务
- en: '*In the previous chapter, we polished our game by adding additional scenes
    and ironing out some of the quirks. After a game is over, it can now be restarted.
    Now that our game is pretty much finished, we need to apply some finishing touches,
    which will not influence the game directly, but its distribution and the experience
    the player has. If the user wants to play with their friends, we wouldn''t need
    to implement a server and the networking mechanics by ourselves. There are services
    that take care of these problems; one of them is Apple Game Center.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在前一章中，我们通过添加额外的场景和消除一些小瑕疵来打磨了我们的游戏。现在游戏结束后，它可以重新启动。既然我们的游戏已经基本完成，我们就需要做一些收尾工作，这些工作不会直接影响游戏，但会影响游戏的分发和玩家的体验。如果用户想要和朋友一起玩，我们就不需要自己实现服务器和网络机制。有一些服务可以处理这些问题；其中之一就是苹果游戏中心。*'
- en: 'In this chapter, we will integrate third-party services into our game. The
    following are the topics we will cover in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将集成第三方服务到我们的游戏中。以下是本章我们将涵盖的主题：
- en: Getting the word out to potential testers
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向潜在测试者传达信息
- en: The basic Game Center integration
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本游戏中心集成
- en: Showing different platforms for analytics
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 展示用于分析的不同平台
- en: Getting word out to potential testers
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向潜在测试者传达信息
- en: Distributing to potential testers can be a daunting task. First, we would need
    to get the **Unique Device Identifier** (**UDID**) of each and every test device.
    We would then need to compile a special build that is restricted to only run on
    the devices whose UDID we provide in the provisioning profile used in the build.
    We would then need to send this special build to these testers, which they need
    to install using iTunes. After the beta testers have installed the application,
    we don't have any insight on how long they actually used the application and if
    the application crashes, they need to sync their device with iTunes and search
    for the crash report on the hard drive and send it to the developer. It's much
    better for the application to crash in the hand of beta testers than in the hands
    of actual customers.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 向潜在测试者分发可能是一项艰巨的任务。首先，我们需要获取每个测试设备的**唯一设备标识符**（**UDID**）。然后，我们需要编译一个特殊的构建版本，该版本仅限于在我们在构建中使用的配置文件中提供的
    UDID 所对应的设备上运行。然后，我们需要将这些特殊构建版本发送给这些测试者，他们需要使用 iTunes 进行安装。在测试者安装了应用程序后，我们无法了解他们实际使用了多长时间，如果应用程序崩溃，他们需要将设备与
    iTunes 同步，并在硬盘上搜索崩溃报告并发送给开发者。应用程序在测试者手中崩溃比在实际客户手中崩溃要好得多。
- en: For a long time, **TestFlight** has provided an easy solution for both collecting
    UDIDs and installing apps on your tester's devices. TestFlight provides an application
    for mobile devices that directly installs the application on the device instead
    of the user manually having to do so. TestFlight also has a web application that
    manages all of the devices, collects crash reports, and tracks the session.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 很长一段时间以来，**TestFlight** 为收集 UDID 和在测试者的设备上安装应用程序提供了一个简单的解决方案。TestFlight 为移动设备提供了一个应用程序，可以直接在设备上安装应用程序，而不是用户手动安装。TestFlight
    还有一个网络应用程序，用于管理所有设备，收集崩溃报告，并跟踪会话。
- en: The company behind TestFlight was acquired by Apple in February 2014, the result
    of which is that their SDK isn't allowed to be integrated into applications any
    more. The distribution component of TestFlight is still available for the time
    being.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: TestFlight 背后的公司于2014年2月被苹果公司收购，结果是他们的 SDK 不再允许集成到应用程序中。TestFlight 的分发组件目前仍然可用。
- en: '**Ubertesters** is a very similar service that helps us to collect UDIDs of
    devices and helps testers to use our application. At the time of writing this
    book, Ubertesters is still in beta. While Ubertesters is a paid service, they
    do provide a free plan which only requires registering an account with them. The
    following is a screenshot of the Ubertesters website:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ubertesters** 是一个非常类似的服务，它帮助我们收集设备的 UDID，并帮助测试者使用我们的应用程序。在撰写本书时，Ubertesters
    仍然处于测试阶段。虽然 Ubertesters 是一项付费服务，但他们确实提供免费计划，只需在他们的网站上注册一个账户即可。以下是从 Ubertesters
    网站截取的屏幕截图：'
- en: '![Getting word out to potential testers](img/1509OS_11_01.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![向潜在测试者传达信息](img/1509OS_11_01.jpg)'
- en: Registering at Ubertesters
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Ubertesters 上注册
- en: In order to distribute our game with Ubertesters, we first need to register
    an account at [http://beta.ubertesters.com/sign_up](http://beta.ubertesters.com/sign_up).
    Enter all the necessary data in the input fields.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用 Ubertesters 分发我们的游戏，我们首先需要在 [http://beta.ubertesters.com/sign_up](http://beta.ubertesters.com/sign_up)
    注册一个账户。在输入字段中输入所有必要的数据。
- en: We then need to create our own organization, where we can add our first application.
    Ubertesters guides us through this process when we register for the first time.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要创建我们自己的组织，在那里我们可以添加我们的第一个应用程序。当我们第一次注册时，Ubertesters 会引导我们完成此过程。
- en: Let's call our application "Pirate Game" and choose iOS as its platform. Now,
    we are going to add our own devices; this is as simple as opening the URL [http://beta.ubertesters.com](http://beta.ubertesters.com)
    in our mobile Safari browser following the instructions on the screen. This installs
    the Ubertesters app on our device and collects the UDID of the device.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们的应用程序称为 "Pirate Game"，并选择 iOS 作为其平台。现在，我们将添加我们自己的设备；这就像在我们的移动 Safari 浏览器中打开
    URL [http://beta.ubertesters.com](http://beta.ubertesters.com) 并遵循屏幕上的说明一样简单。这将在我们的设备上安装
    Ubertesters 应用程序并收集设备的 UDID。
- en: After this, we see the device we just registered on the Ubertesters web interface
    where we get relevant data of the device such as the device name, its model, operating
    system, screen resolution, its locale, and the UDID.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们在 Ubertesters 网页界面上看到我们刚刚注册的设备，在那里我们可以获取设备的相关数据，如设备名称、型号、操作系统、屏幕分辨率、地区和
    UDID。
- en: 'It is also possible to set up over-the-air distribution, which means allowing
    testers to download the build from your site. Instructions for this setup can
    be found at this link: [http://aaronparecki.com/articles/2011/01/21/1/how-to-distribute-your-ios-apps-over-the-air](http://aaronparecki.com/articles/2011/01/21/1/how-to-distribute-your-ios-apps-over-the-air).'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以设置空中分发，这意味着允许测试者从您的网站下载构建版本。有关此设置的说明，请参阅以下链接：[http://aaronparecki.com/articles/2011/01/21/1/how-to-distribute-your-ios-apps-over-the-air](http://aaronparecki.com/articles/2011/01/21/1/how-to-distribute-your-ios-apps-over-the-air)。
- en: Integrating Ubertesters
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 集成 Ubertesters
- en: Before we can get some beta testers, we need to integrate the Ubertesters SDK
    into our game. Only packages with the SDK integrated can be made available for
    testers.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们能够获取一些测试者之前，我们需要将 Ubertesters SDK 集成到我们的游戏中。只有集成了 SDK 的包才能提供给测试者。
- en: Time for action – integrating Ubertesters
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 集成 Ubertesters
- en: 'Use the following steps to integrate Ubertesters:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下步骤来集成 Ubertesters：
- en: Open our Xcode project if it's not already open.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 Xcode 项目尚未打开，请先打开它。
- en: Download the Ubertesters SDK from [http://ubertesters.com/sdk/ubertesters.sdk.ios.zip](http://ubertesters.com/sdk/ubertesters.sdk.ios.zip).
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://ubertesters.com/sdk/ubertesters.sdk.ios.zip](http://ubertesters.com/sdk/ubertesters.sdk.ios.zip)
    下载 Ubertesters SDK。
- en: Extract the contents from the downloaded file somewhere on the hard drive.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将下载的文件内容提取到硬盘上的某个位置。
- en: Drag the extracted contents into the project file. They should be at the root
    level right at the same level as **Products**, **Frameworks**, and **Resources**.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将提取的内容拖放到项目文件中。它们应该在根级别，与 **产品**、**框架** 和 **资源** 处在同一级别。
- en: Switch to the project configuration by clicking on the project's name in the
    project navigator. Inside the **General** tab, scroll down to **Linked Frameworks
    and Libraries**.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击项目导航器中的项目名称切换到项目配置。在 **通用** 选项卡中，向下滚动到 **链接框架和库**。
- en: 'Add the following libraries by clicking on the plus button, selecting the correct
    library, and clicking on **Add**:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击加号按钮，选择正确的库，然后点击 **添加** 来添加以下库：
- en: '`AdSupport.framework`'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AdSupport.framework`'
- en: '`CoreImage.framework`'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CoreImage.framework`'
- en: '`SystemConfiguration.framework`'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SystemConfiguration.framework`'
- en: '`CoreTelephony.framework`'
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CoreTelephony.framework`'
- en: '`CoreLocation.framework`'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CoreLocation.framework`'
- en: '`CoreMotion.framework`'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CoreMotion.framework`'
- en: Switch to the **Info** tab inside the project configuration.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目配置中切换到 **信息** 选项卡。
- en: Add a new key inside **Custom iOS Target Properties** by selecting any item
    and clicking on the plus button.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **自定义 iOS 目标属性** 中添加一个新键，通过选择任何项并点击加号按钮。
- en: Call this key `ubertesters_project_id`.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此键称为 `ubertesters_project_id`。
- en: As its value, use the ID from the Ubertesters website from the application from
    the **SDK Integration** tab.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为其值，使用 Ubertesters 网站上的 ID，该 ID 位于 **SDK 集成** 选项卡中的应用程序中。
- en: Switch to `AppDelegate.m`.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到 `AppDelegate.m`。
- en: 'Import the `Ubertesters` header file, using the following line of code:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码行导入 `Ubertesters` 头文件：
- en: '[PRE0]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Initialize the Ubertesters SDK by updating the `didFinishLaunchingWithOptions`
    method, as shown in the following code:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过更新以下代码中的 `didFinishLaunchingWithOptions` 方法来初始化 Ubertesters SDK：
- en: '[PRE1]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Run the example.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行示例。
- en: 'When we start the example, we don''t see any visible changes (refer to the
    following screenshot), which is an indicator that everything worked as we expected
    it to:'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当我们启动示例时，我们没有看到任何可见的变化（参见图表），这是表明一切按预期工作的指标：
- en: '![Time for action – integrating Ubertesters](img/1509OS_11_02.jpg)'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 集成 Ubertesters](img/1509OS_11_02.jpg)'
- en: '*What just happened?*'
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: To get started, we opened our Xcode project, which is what we did in step 1.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，我们打开了我们的 Xcode 项目，这是我们步骤 1 中所做的事情。
- en: Then, we downloaded the Ubertesters SDK and extracted the contents of the downloaded
    file. In step 4, we dragged the contents of the extracted file into the project
    itself. It should be on the root level directly below the project file itself
    on the same level as **Sparrow**, **Classes**, **Other Sources**, **Resources**,
    **Frameworks**, and **Products**.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们下载了 Ubertesters SDK 并解压了下载文件的 contents。在步骤 4 中，我们将解压文件的内容拖动到项目本身中。它应该位于项目文件正下方的根级别，与
    **Sparrow**、**Classes**、**Other Sources**、**Resources**、**Frameworks** 和 **Products**
    在同一级别。
- en: In order to make the Ubertesters SDK work, we need to link against a variety
    of frameworks. In step 5, we switched to the general configuration by clicking
    on the **General** tab, where we can find the linked frameworks and libraries
    right at the bottom of the page. We added all the frameworks described in step
    6.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使 Ubertesters SDK 正常工作，我们需要链接到各种框架。在步骤 5 中，我们通过点击 **General** 选项卡切换到一般配置，在那里我们可以找到页面底部的链接框架和库。我们添加了步骤
    6 中描述的所有框架。
- en: Then, we added an entry to the PLIST file of the application itself. This can
    be done in the **Info** tab. We selected any entry under **Custom iOS Target Properties**
    and clicked on the plus button next to it. We then set the key name for this property,
    which we named `ubertesters_project_id`. We already have the project ID; we got
    it when we registered our application on Ubertesters. In the web interface of
    Ubertesters, this ID can be retrieved by clicking on **Projects**, then on our
    project (Pirate Game), and after this, on the **SDK Integration** tab on the left-hand
    side. These steps are necessary so that Ubertesters knows the application we registered
    in the web interface belongs to our game.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们在应用程序本身的 PLIST 文件中添加了一个条目。这可以在 **Info** 选项卡中完成。我们选择了 **Custom iOS Target
    Properties** 下的任何条目，并点击了它旁边的加号按钮。然后，我们为这个属性设置了一个键名，我们将其命名为 `ubertesters_project_id`。我们已经有项目
    ID 了；我们在注册应用程序到 Ubertesters 时获得了它。在 Ubertesters 的网页界面中，可以通过点击 **Projects**，然后点击我们的项目（Pirate
    Game），之后点击左侧的 **SDK Integration** 选项卡来检索此 ID。这些步骤是必要的，以便 Ubertesters 知道我们在网页界面中注册的应用程序属于我们的游戏。
- en: To use the SDK, we imported the Ubertesters SDK header file and initialized
    the SDK itself. This all happened inside the `AppDelegate` file in steps 11 to
    13\. We added the initialization of the SDK to where the application launches
    inside `didFinishLaunchingWithOptions`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 SDK，我们导入了 Ubertesters SDK 头文件并初始化了 SDK 本身。所有这些都在步骤 11 到 13 中的 `AppDelegate`
    文件内完成。我们将 SDK 的初始化添加到 `didFinishLaunchingWithOptions` 中应用程序启动的地方。
- en: When we ran the example, there wasn't any visible change and the game ran as
    expected. When running the game on the actual device, it may take a bit longer
    to load, as the Ubertesters SDK checks against an Internet connection at startup.
    For production builds (for example, an App Store release), it is not recommended
    for the SDK to be included; the SDK should be included for the builds that are
    specifically going to beta testers.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行示例时，没有看到任何可见的变化，游戏按预期运行。在实际设备上运行游戏时，可能需要更长的时间来加载，因为 Ubertesters SDK 在启动时检查互联网连接。对于生产构建（例如，App
    Store 发布），不建议包含 SDK；SDK 应该包含为特定测试人员构建的版本。
- en: Creating a build for beta testers
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为测试人员创建构建版本
- en: Now that we have integrated the Ubertesters SDK in our game, we can create a
    special build for our beta testers, which at the moment is just us, or more specifically,
    our own device.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将 Ubertesters SDK 集成到我们的游戏中，我们可以为我们的测试人员创建一个特殊的构建版本，目前这仅仅是我们自己，或者更具体地说，是我们的设备。
- en: Time for action – creating a build for beta testers
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 为测试人员创建构建版本
- en: 'Us the following steps to create a special build for beta testers:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下步骤为测试人员创建一个特殊的构建版本：
- en: Log in to the provisioning portal at [https://developer.apple.com/account/ios/certificate/certificateList.action](https://developer.apple.com/account/ios/certificate/certificateList.action).
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到配置门户[https://developer.apple.com/account/ios/certificate/certificateList.action](https://developer.apple.com/account/ios/certificate/certificateList.action)。
- en: In **Identifiers**, click on **App IDs**. Add a new one by clicking the plus
    button.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**标识符**中，点击**App IDs**。通过点击加号按钮添加一个新的。
- en: From **App ID Description**, choose **PirateGame**.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**App ID描述**中选择**PirateGame**。
- en: Set an **App ID Prefix** of your choice. All of the available prefixes will
    be shown as a drop-down list, where the default is **Team ID**. If you are unsure
    which one to use, use the default one.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置一个你选择的**App ID前缀**。所有可用的前缀将以下拉列表的形式显示，其中默认为**Team ID**。如果你不确定使用哪个，请使用默认值。
- en: In the **Bundle ID** input box, put in the bundle ID of our game. If you haven't
    chosen one, it's time to do so now. Make sure that the bundle ID is the same as
    **Bundle identifier** in the `App-Info.plist` file of our application. It is recommended
    that you use a reverse-domain name. Click on **Continue** and then **Done** to
    finish the process.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Bundle ID**输入框中，输入我们游戏的bundle ID。如果你还没有选择，现在是时候做了。确保bundle ID与我们的应用程序的`App-Info.plist`文件中的**Bundle
    identifier**相同。建议使用反向域名。点击**继续**然后点击**完成**以完成过程。
- en: Show all devices by clicking on **All** in the **Devices** tab.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击**设备**选项卡中的**所有**显示所有设备。
- en: Add a new device by clicking on the plus button.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击加号按钮添加一个新设备。
- en: In **UDID**, enter the UDID of our device. This can be retrieved from the Ubertesters
    web application.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**UDID**中，输入我们设备的UDID。这可以从Ubertesters网络应用程序中获取。
- en: In **Provisioning Profiles**, select **Distribution** and add a new one by clicking
    the button with the plus icon.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**配置文件**中，选择**分发**并点击带有加号图标的按钮添加一个新的配置文件。
- en: Select **Ad Hoc** as the distribution type and click on **Continue**.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Ad Hoc**作为分发类型并点击**继续**。
- en: Select **App ID** we had created in step 5 and click on **Continue**.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择步骤5中创建的**App ID**并点击**继续**。
- en: If there isn't a certificate available, you will be asked to create a new certificate
    in the next step and select **App Store and Ad hoc**. Follow the instructions
    to generate the certificate. If there are already certificates available, you
    will be asked to choose one of them.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果没有可用的证书，你将在下一步被要求创建一个新的证书并选择**App Store和Ad Hoc**。按照说明生成证书。如果已经有可用的证书，你将被要求选择其中一个。
- en: Open the newly created certificate and select the device we just added.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开新创建的证书并选择我们刚刚添加的设备。
- en: Generate the updated certificate.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成更新的证书。
- en: In the Xcode project, select **iOS Device** as the target. This can be done
    through the build menu, where the product and the target are being displayed.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Xcode项目中，选择**iOS设备**作为目标。这可以通过构建菜单完成，其中显示产品和目标。
- en: In the menu, select **Product** and click on **Archive**.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在菜单中，选择**产品**并点击**归档**。
- en: Open the Xcode organizer by clicking on **Window** and selecting **Organizer**.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击**窗口**并选择**组织者**打开Xcode组织者。
- en: Select the latest build and click on **Distribute**.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择最新的构建并点击**分发**。
- en: On the window that pops up, select **Save for Enterprise or Ad Hoc Deployment**.
    Confirm by clicking on **Next**.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出的窗口中，选择**保存为企业或Ad Hoc部署**。通过点击**下一步**进行确认。
- en: Select the provisioning profile we created earlier.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择我们之前创建的配置文件。
- en: Click on **Export** and save the package somewhere on the hard drive.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**导出**并将包保存到硬盘上的某个位置。
- en: 'After we created the build, we return to the Xcode organizer, where we can
    either distribute the build again or validate it, as shown in the following screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们创建了构建后，我们返回到Xcode组织者，我们可以再次分发构建或验证它，如下面的截图所示：
- en: '![Time for action – creating a build for beta testers](img/1509OS_11_03.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![为beta测试者创建构建的行动时间](img/1509OS_11_03.jpg)'
- en: '*What just happened?*'
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: To create a special build for testers, we created an ad-hoc distribution profile
    just for our game. This is something we have to do just once per application,
    but not per build.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 为了为测试者创建一个特殊的构建，我们为我们的游戏创建了一个仅针对我们的游戏的ad-hoc分发配置文件。这是我们每个应用程序只需做一次的事情，而不是每个构建。
- en: 'To create certificates, we needed the provisioning portal from the Apple developer
    member center. It consists of the following three tasks:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建证书，我们需要从苹果开发者会员中心的配置门户。它包括以下三个任务：
- en: '**Creating an App ID**: This identifies our game (steps 2 to 5)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建App ID**：这标识了我们的游戏（步骤2到5）'
- en: '**Adding a new device**: A distribution certificate can hold a number of target
    devices, which need to be added before the distribution certificate is created
    (steps 6 to 9)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**添加新设备**：分发证书可以包含多个目标设备，在创建分发证书之前需要添加（步骤 6 到 9）'
- en: '**Creating a distribution certificate**: This is used to sign the special build
    (steps 10 to 14)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建分发证书**：用于签名特殊构建（步骤 10 到 14）'
- en: Now that the certificate is generated, we created the build with the help of
    this certificate. We needed to select the **iOS Device** (or the name of the connected
    iOS device—if there is one). We selected a product to create an archive which
    we did in step 16\. After the archive is created, we can select it from the Xcode
    organizer. We wanted to distribute this build, so that's why we clicked on the
    button with the **Distribute** label in step 18.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在证书已生成，我们使用这个证书创建了构建。我们需要选择**iOS 设备**（或连接的 iOS 设备名称，如果有的话）。我们选择了一个产品来创建存档，这是在第
    16 步完成的。存档创建后，我们可以从 Xcode 组织者中选择它。我们想要分发这个构建，所以我们在第 18 步点击了带有**分发**标签的按钮。
- en: As we wanted an ad hoc deployment, we selected this option. **Ad hoc deployment**
    means that we are distributing our applications to a known number of devices,
    while a **distribution build**—such as for the Apple App Store—means the application
    can be installed on any number of devices that got the application from the Apple
    App Store. When we had the option to select a provisioning profile, we chose the
    one we created earlier. By clicking on **Export**, we got an IPA file that we
    had put in a safe place for the moment.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们想要进行临时部署，我们选择了这个选项。**临时部署**意味着我们将应用程序分发给已知数量的设备，而**分发构建**（如苹果应用商店）意味着应用程序可以被安装在任何从苹果应用商店获取应用程序的设备上。当我们有选择配置文件选项时，我们选择了我们之前创建的那个。点击**导出**，我们得到了一个
    IPA 文件，我们暂时将其放在了安全的地方。
- en: Deploying an application
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署应用程序
- en: Our special build is now finished, so we can go ahead and deploy our game using
    the Ubertesters web interface.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的特殊构建现在已完成，因此我们可以继续使用 Ubertesters 网页界面部署我们的游戏。
- en: Time for action – deploying an application
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 部署应用程序
- en: 'To deploy the application, perform the following steps:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要部署应用程序，请执行以下步骤：
- en: Log in to Ubertesters at [http://beta.ubertesters.com/sign_in](http://beta.ubertesters.com/sign_in).
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 Ubertesters，网址为 [http://beta.ubertesters.com/sign_in](http://beta.ubertesters.com/sign_in)。
- en: Click on **Projects** from the top menu.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部菜单中的**项目**。
- en: Click on **Upload revision** and choose the special build we created earlier.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**上传修订**并选择我们之前创建的特殊构建。
- en: We can now enter a revision title and a description.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以输入修订标题和描述。
- en: Select the revision we just uploaded.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择我们刚刚上传的修订。
- en: Click on **Start** to allow this revision to be installed on the target devices.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**开始**以允许此修订安装到目标设备上。
- en: On our registered device, we can now install our game.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们注册的设备上，我们现在可以安装我们的游戏。
- en: 'On the web interface, we can track the installations of our application, as
    shown in the following screenshot:'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在网页界面上，我们可以跟踪我们应用程序的安装情况，如下面的截图所示：
- en: '![Time for action – deploying an application](img/1509OS_11_04.jpg)'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 部署应用程序](img/1509OS_11_04.jpg)'
- en: '*What just happened?*'
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**发生了什么？**'
- en: To deploy the application using Ubertesters, we logged in to Ubertesters first.
    When we see all the available projects, we can upload a new revision for each
    of the projects. At the moment, we only have one project.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Ubertesters 部署应用程序，我们首先登录到 Ubertesters。当我们看到所有可用的项目时，我们可以为每个项目上传一个新的修订。目前，我们只有一个项目。
- en: 'After the revision is uploaded, we can optionally set a title and a description
    for the build. The following two things need to be considered when uploading a
    build:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 修订上传后，我们可以选择性地为构建设置标题和描述。上传构建时需要考虑以下两点：
- en: The Ubertesters SDK needs to be integrated in the application.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubertesters SDK 需要集成到应用程序中。
- en: The bundle version must be different for each uploaded revision. This setting
    can be found in the `Info.plist` file.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个上传的修订的包版本必须不同。此设置可以在`Info.plist`文件中找到。
- en: Before the application can be installed on the target devices, we need to start
    the process, which we did using the **Start** button. The testing phase can be
    stopped and restarted for every revision.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序可以安装到目标设备之前，我们需要启动这个过程，我们使用**开始**按钮来启动。测试阶段可以停止和重新开始每个修订。
- en: When we open the Ubertesters app in our registered device, we can now download
    our game. When our game is installed, we can run the game just as we expect it
    to.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在注册的设备上打开Ubertesters应用时，我们现在可以下载我们的游戏。当我们的游戏安装后，我们可以像预期的那样运行游戏。
- en: Explaining Game Center
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解释游戏中心
- en: Game Center is a social media feature by Apple that allows leaderboards, achievements,
    and matchmaking. In a way, it's very similar to Steam for desktop platforms. Naturally,
    Game Center only works on iOS devices.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏中心是苹果公司的一个社交媒体功能，它允许排行榜、成就和匹配。从某种意义上说，它与桌面平台的Steam非常相似。自然，游戏中心仅在iOS设备上工作。
- en: Integrating Game Center authentication
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成游戏中心认证
- en: The first thing we need to do is authenticate Game Center to be able to use
    its features.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是认证游戏中心，以便能够使用其功能。
- en: Time for action – integrating Game Center authentication
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 集成游戏中心认证
- en: 'Use the following steps to integrate Game Center authentication:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下步骤来集成游戏中心认证：
- en: Open our Xcode project if it's not already open.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果Xcode项目尚未打开，请打开我们的Xcode项目。
- en: Add `GameKit.framework` to the list of frameworks to be linked.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`GameKit.framework`添加到要链接的框架列表中。
- en: Switch to `AppDelegate.m`.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到`AppDelegate.m`。
- en: 'Import the `GameKit` header file using the following line of code:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码行导入`GameKit`头文件：
- en: '[PRE2]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Update the `didFinishLaunchingWithOptions` method to look like the following
    piece of code:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`didFinishLaunchingWithOptions`方法更新为以下代码片段：
- en: '[PRE3]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Run the example. If we are not authenticated yet, we should get a dialog to
    log in to **Game Center**:![Time for action – integrating Game Center authentication](img/1509OS_11_05.jpg)
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行示例。如果我们尚未认证，我们应该会得到一个登录**游戏中心**的对话框：![行动时间 - 集成游戏中心认证](img/1509OS_11_05.jpg)
- en: '*What just happened?*'
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: To integrate Game Center, we linked the GameKit framework.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 要集成游戏中心，我们链接了GameKit框架。
- en: The next thing we did is update the `AppDelegate` class, and once more, it's
    the method that handles everything once the application has finished launching.
    In step 4, we needed to import the `GameKit` header.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来做的事情是更新`AppDelegate`类，并且再次是处理应用程序启动后所有事情的方法。在第4步中，我们需要导入`GameKit`头文件。
- en: In the next step, we authenticated Game Center right after we started the view
    controller with the `Game` class. The `localPlayer` returns the active player
    who interacts with the device.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们在使用`Game`类启动视图控制器后立即认证了游戏中心。`localPlayer`返回与设备交互的当前玩家。
- en: We added an authentication handler that is called once Game Center is authenticated.
    If the player is already authenticated, we are just going to log in. The same
    happens if there is an error when the authentication fails.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加了一个认证处理程序，该处理程序在游戏中心认证后会被调用。如果玩家已经认证，我们只需登录即可。如果认证失败时发生错误，也会发生相同的情况。
- en: If the player is not authenticated, we show the Game Center view controller
    through the current view controller from Sparrow.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果玩家未认证，我们通过Sparrow当前视图控制器显示游戏中心视图控制器。
- en: Game Center is handled through iTunes Connect. The workflow is described at
    [https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnectGameCenter_Guide/Introduction/Introduction.html](https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnectGameCenter_Guide/Introduction/Introduction.html).
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏中心通过iTunes Connect处理。工作流程在[https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnectGameCenter_Guide/Introduction/Introduction.html](https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnectGameCenter_Guide/Introduction/Introduction.html)中描述。
- en: 'If we want to use achievements in our game, we need to add all of our achievements
    in the iTunes Connect window shown in the following screenshot:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想在游戏中使用成就，我们需要在以下截图所示的iTunes Connect窗口中添加我们所有的成就：
- en: '![What just happened?](img/1509OS_11_06.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/1509OS_11_06.jpg)'
- en: 'We would need a piece of code similar to the following code to set an achievement:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个类似于以下代码的代码片段来设置成就：
- en: '[PRE4]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Let's assume we have an achievement called `sankALotOfShips`, which—as the name
    suggests—should be shown if our ship sank a whole lot of ships.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个名为`sankALotOfShips`的成就，正如其名所示，如果我们的船只沉没了很多船只，则应该显示。
- en: We retrieved the achievements and if the achievement exists, we set the achievement
    to be complete by simply adjusting the `percentComplete` property to `100`. We
    then reported the updated achievement. If there was an error, we logged it to
    the console.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们检索了成就，如果成就存在，我们只需简单地将`percentComplete`属性调整为`100`，就可以将成就设置为完成状态。然后我们报告了更新的成就。如果出现错误，我们将错误记录到控制台。
- en: To learn more about achievements in Game Center, take a look at [https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/GameKit_Guide/Achievements/Achievements.html](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/GameKit_Guide/Achievements/Achievements.html).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多关于Game Center中成就的信息，请查看[https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/GameKit_Guide/Achievements/Achievements.html](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/GameKit_Guide/Achievements/Achievements.html)。
- en: Have a go hero
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 来吧，英雄
- en: 'Game Center has quite a big arsenal of things to do. The following are some
    suggestions of what could be done:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Game Center有很多事情可以做。以下是一些可以做的建议：
- en: Currently, we only log if the player is already authenticated or the authentication
    failed because the player canceled the authentication. This can be improved with
    some basic error handling.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目前，我们只记录玩家已经认证或认证失败（因为玩家取消了认证）的情况。这可以通过一些基本的错误处理来改进。
- en: Game Center also provides leaderboards. As our game is very much highscore-based
    or gold-based to be more accurate, you could try to utilize this functionality
    to add leaderboards to our game. If you are not too afraid about performing some
    refactoring, you might even want to introduce a highscore-based system that doesn't
    rely on gold. This is definitely a harder, but a more balanced way to go, as the
    player shouldn't be punished for using in-game currency to upgrade their gear.
    Take a look at the official Apple documentation at [https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/GameKit_Guide/LeaderBoards/LeaderBoards.html](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/GameKit_Guide/LeaderBoards/LeaderBoards.html)
    to learn more about leaderboards.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Game Center还提供排行榜。鉴于我们的游戏非常依赖高分或金币（更准确地说），你可以尝试利用这个功能为我们的游戏添加排行榜。如果你不太害怕进行一些重构，你可能甚至想引入一个不依赖金币的高分系统。这绝对是一个更难但更平衡的方法，因为玩家不应该因为使用游戏内货币升级装备而受到惩罚。查看官方苹果文档[https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/GameKit_Guide/LeaderBoards/LeaderBoards.html](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/GameKit_Guide/LeaderBoards/LeaderBoards.html)以了解更多关于排行榜的信息。
- en: Since the preceding task is definitely much more difficult and a bit far fetched,
    you can try to use matchmaking abilities to let two players battle against each
    other. This will lead to a major refactoring of the existing code though. A good
    starting point will be to take a look at the matchmaking documentation at [https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/GameKit_Guide/MatchmakingwithGameCenter/MatchmakingwithGameCenter.html](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/GameKit_Guide/MatchmakingwithGameCenter/MatchmakingwithGameCenter.html).
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于前面的任务肯定更加困难，而且有些不切实际，你可以尝试使用匹配功能让两个玩家相互对战。这将导致现有代码的重大重构。一个良好的起点将是查看匹配文档[https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/GameKit_Guide/MatchmakingwithGameCenter/MatchmakingwithGameCenter.html](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/GameKit_Guide/MatchmakingwithGameCenter/MatchmakingwithGameCenter.html)。
- en: An overview of analytics services
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析服务的概述
- en: Some basic analytics are most likely provided by a beta distribution service
    (as Ubertesters in our case). When you have a paid app in the Apple App Store,
    it is often necessary to have detailed information, such as how many in-app purchases
    there were and accurate details about play sessions.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 一些基本的分析可能由一个beta分发服务（如我们案例中的Ubertesters）提供。当你在苹果App Store中有付费应用时，通常需要详细的信息，例如有多少内购以及关于游戏会话的准确细节。
- en: Analytics are usually a paid service; in most cases, there is either a free
    or a trial version. Let's take a look at two analytics services.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 分析通常是一项付费服务；在大多数情况下，要么是免费版，要么是试用版。让我们看看两个分析服务。
- en: Flurry analytics
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Flurry分析
- en: 'Flurry is a service that has been around for a few years and provides support
    for multiple platforms. It provides the following features:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: Flurry是一个存在了几年的服务，为多个平台提供支持。它提供以下功能：
- en: Geographical data of users
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户地理位置数据
- en: Crash analytics
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 崩溃分析
- en: Play session statistics
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 游戏会话统计
- en: Flox
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Flox
- en: Flox is a service made by Gamua, the guys behind the Sparrow framework. Flox
    is a relatively new service which is available at [http://gamua.com/flox/](http://gamua.com/flox/).
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: Flox是由Sparrow框架背后的团队Gamua开发的一项服务。Flox是一个相对较新的服务，可在[http://gamua.com/flox/](http://gamua.com/flox/)找到。
- en: '![Flox](img/1509OS_11_07.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![Flox](img/1509OS_11_07.jpg)'
- en: 'Flox provides the following features:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Flox提供了以下功能：
- en: Remote logging
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 远程日志
- en: Leaderboards
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 排行榜
- en: Save games
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存游戏
- en: Session and user statistics
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 会话和用户统计
- en: The Objective-C headers are available at [https://github.com/Gamua/Flox-ObjC](https://github.com/Gamua/Flox-ObjC).
    It even offers Game Center integration.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Objective-C头文件可在[https://github.com/Gamua/Flox-ObjC](https://github.com/Gamua/Flox-ObjC)找到。它甚至提供了Game
    Center集成。
- en: Let's take a look at what Flox integration would look like. The next step after
    registering on the Flox service is to create a game. We get its game ID and its
    game key.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看Flox集成看起来会是什么样子。在注册Flox服务之后的下一步是创建一个游戏。我们获得其游戏ID和游戏密钥。
- en: 'After integrating the Flox SDK into our game, we will need to initialize Flox
    inside our application delegate (`AppDelegate.m`), using the following code:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在将Flox SDK集成到我们的游戏后，我们需要在应用程序代理（`AppDelegate.m`）中使用以下代码初始化Flox：
- en: '[PRE5]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'After this, we can dispatch events that will show up in the Flox web interface:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，我们可以调度将在Flox Web界面中显示的事件：
- en: '[PRE6]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If we wanted to use leaderboards through Flox, we will need to create the leaderboard
    itself using the web interface. If we want to load all scores from the leaderboards,
    the following piece of code will set us up:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想通过Flox使用排行榜，我们需要使用Web界面创建排行榜本身。如果我们想从排行榜中加载所有分数，以下代码片段将为我们设置：
- en: '[PRE7]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To save to the leaderboards, we can use the following piece of code:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 要保存到排行榜，我们可以使用以下代码片段：
- en: '[PRE8]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Pop quiz
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验
- en: Q1\. What is Ubertesters?
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: Q1. Ubertesters是什么？
- en: It allows private applications for beta testers to be distributed
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它允许为测试者分发私有应用程序
- en: It is a platform to search for beta testers
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它是一个寻找测试者的平台
- en: It is an online magazine that tests mobile applications
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它是一个在线杂志，测试移动应用程序
- en: Q2\. What is Game Center?
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: Q2. 什么是Game Center？
- en: Apple's solution for a game's social features such as achievements and high
    score lists
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 苹果为游戏提供的社交功能解决方案，如成就和高分排行榜
- en: A publisher for mobile games
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 移动游戏出版商
- en: Games that work on multiple platforms
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在多个平台上运行的游戏
- en: Q3\. What does an analytics platform usually provide?
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Q3. 分析平台通常提供什么？
- en: Private data of users
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户隐私数据
- en: Anonymous play sessions
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 匿名游戏会话
- en: Statistical data
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 统计数据
- en: Summary
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about integrating third-party services into our
    game, especially to distribute our game and integrate it with Apple's Game Center.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何将第三方服务集成到我们的游戏中，特别是为了分发我们的游戏并将其与苹果的Game Center集成。
- en: Our game is now finished. Of course, there are a lot of things that we could
    still add or update, but all in all, we mastered the process of creating a playable
    game during the course of this book while learning about the Sparrow framework
    as well as distributing our application and creating game assets.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的游戏现在完成了。当然，我们还可以添加或更新很多东西，但总的来说，我们在本书的学习过程中掌握了创建可玩游戏的整个过程，同时了解了Sparrow框架以及分发我们的应用程序和创建游戏资源。
