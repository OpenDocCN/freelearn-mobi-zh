- en: Chapter 8. Introduction to Game Math and Physics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章. 游戏数学和物理简介
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: The Pythagorean theorem
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 勾股定理
- en: Using vectors
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用向量
- en: Physics
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物理
- en: Introduction
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In this chapter, we will learn all the basic mathematical concepts that we will
    be using in the next few chapters of this book. While learning game physics, it's
    always good to have some basic command over mathematics and physics, as they are
    the main key components in making realistic games. For example, when we drop a
    ball on the ground, it keeps bouncing back and forth before coming to rest. To
    implement such conditions, we have to apply certain conditions to physical bodies
    by updating their physical parameters, such as restitution, force, bounce, friction,
    and so on. In the next chapter, we will use all the physics and mathematical concepts
    that we will learn in this chapter.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习所有将在本书接下来的几章中使用的基本数学概念。在学习游戏物理时，掌握一些基本的数学和物理知识总是好的，因为它们是制作逼真游戏的主要关键组件。例如，当我们把球扔到地上时，它会来回弹跳，直到停止。为了实现这种条件，我们必须通过更新物理参数（如恢复力、力、弹跳、摩擦等）来对物理体应用某些条件。在下一章中，我们将使用本章学到的所有物理和数学概念。
- en: The Pythagorean theorem
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 勾股定理
- en: The most widely used triangles are right-angled triangles. There are many interesting
    properties of right-angled triangles that can be used in games to make life easier.
    One of the famous properties is that the square of the hypotenuse of a right-angled
    triangle is equal to the sum of the squares of the other two sides.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 最常用的三角形是直角三角形。直角三角形有许多有趣的性质，可以在游戏中使用，使生活更简单。其中一个著名的性质是，直角三角形的斜边平方等于另外两边的平方和。
- en: Getting ready
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备中
- en: 'The hypotenuse of a triangle is the longest side of a right-angled triangle,
    as shown in the following diagram:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的斜边是直角三角形的最长边，如下所示：
- en: '![Getting ready](img/00125.jpeg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![准备中](img/00125.jpeg)'
- en: 'If the hypotenuse is denoted as h, the Pythagorean theorem can be written as
    follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果斜边表示为 h，勾股定理可以写成以下形式：
- en: h² = a² +b²
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: h² = a² + b²
- en: 'If you take the square root of both the sides, you will get the following:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你取两边的平方根，你将得到以下：
- en: h = sqrt(a²+b²)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: h = sqrt(a²+b²)
- en: This means that if we know the length of any two sides of a right-angled triangle,
    we can easily find the length of the third side.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着如果我们知道直角三角形的任意两边的长度，我们就可以很容易地找到第三边的长度。
- en: When working with the game's Artificial Intelligence (AI), we will be using
    the Pythagorean theorem frequently to calculate which agent is closer to the object.
    If side A is bigger than side B, then it will always be bigger, irrespective of
    whether the lengths are squared or not. Now, we can avoid taking the square roots
    to compare the distance. Instead, we can just compare the squared values.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当与游戏的人工智能（AI）一起工作时，我们将经常使用勾股定理来计算哪个代理更接近对象。如果边 A 比边 B 长，那么它总是更长，无论长度是否平方。现在，我们可以避免取平方根来比较距离，而只需比较平方值。
- en: How to do it
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作
- en: 'Here''s a practical usage of the Pythagorean theorem:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是勾股定理的一个实际应用：
- en: 'Let''s say we have a gunman at position X (8, 4) and his target at position
    Y (2, 1). The gunman can only fire a bullet a maximum distance of 10 units. Consequently,
    to determine whether he can hit the target, the distance between them must be
    calculated. This is easy to determine using the Pythagorean theorem. First, the
    lengths of the sides YZ and XZ shown in the following figure are calculated:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个位于 X（8，4）位置的枪手和他的目标位于 Y（2，1）位置。枪手只能射出最大距离为 10 个单位的子弹。因此，为了确定他是否能击中目标，必须计算他们之间的距离。这可以通过勾股定理很容易地确定。首先，计算以下图中所示的
    YZ 和 XZ 边的长度：
- en: '![How to do it](img/00126.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作](img/00126.jpeg)'
- en: 'To find the distance XZ, the y component of the gunman''s position is subtracted
    from the y component of the target''s position as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到 XZ 的距离，按照以下方式从枪手位置的 y 分量减去目标的 y 分量：
- en: XZ = 4 - 1 = 3
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: XZ = 4 - 1 = 3
- en: 'To find the distance YZ, we do the same, but with the x components:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到 YZ 的距离，我们做同样的操作，但使用 x 分量：
- en: YZ =8 - 2 =6
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: YZ = 8 - 2 = 6
- en: 'Now that YZ and XZ are known, the distance from the gunman to the target can
    be calculated using the Pythagorean theorem as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在已知 YZ 和 XZ，可以使用勾股定理计算出枪手到目标的距离，如下所示：
- en: '![How to do it](img/00127.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作](img/00127.jpeg)'
- en: Well within target range. Let the target be hit!
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 完全在目标范围内。让目标被击中！
- en: If you know the length of one of the sides of a right-angled triangle and one
    of the remaining two angles, you can determine everything else about the triangle
    using trigonometry. First, take a look at the following figure. It shows the names
    of each side of a right-angled triangle.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你知道直角三角形的一边的长度和剩下的两个角中的一个，你可以使用三角学确定三角形的其余信息。首先，看看以下图示。它显示了直角三角形每边的名称。
- en: '![How to do it](img/00128.jpeg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![如何做](img/00128.jpeg)'
- en: 'The following is what the figure represents:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示了其含义：
- en: '*Sin(θ) = opposite/hypotenuse*'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*sin(θ) = 对边/斜边*'
- en: '*Cos(θ) = adjacent/hypotenuse*'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*cos(θ) = 邻边/斜边*'
- en: '*Tan(θ) = opposite/adjacent*'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*tan(θ) = 对边/邻边*'
- en: 'The best way to see how the sine, cosine, and tangent functions can be utilized
    is by taking a look at the following example:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 通过以下示例，我们可以看到正弦、余弦和正切函数如何被利用：
- en: '![How to do it](img/00129.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![如何做](img/00129.jpeg)'
- en: 'We want to calculate the length of the opposite side, given the length of the
    adjacent side and the angle. From here, we know that the tangent of an angle is
    equal to the opposite side divided by the adjacent side. Rearranging the equation
    a little gives us the following:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要计算对边的长度，已知邻边的长度和角度。从这里我们知道，一个角度的正切等于对边除以邻边。稍微调整一下方程，我们得到以下结果：
- en: '*o = aTan(θ)*'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '*o = aTan(θ)*'
- en: 'So, all we have to do in order to get **o** is to pick up a calculator (to
    determine the tangent) and plug in the numbers, as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，为了得到 **o**，我们只需要拿起计算器（确定正切值）并输入以下数字：
- en: '*o = 6Tan(0.9)*'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*o = 6Tan(0.9)*'
- en: '*= 7.56*'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '*= 7.56*'
- en: Using vectors
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用向量
- en: We will be using vector math frequently when designing the AI for our games.
    Vectors are used everywhere, from calculating which direction a game agent should
    shoot its gun in, to expressing the inputs and outputs of an artificial neural
    network. You should know them well.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计我们游戏的 AI 时，我们将频繁使用向量数学。向量无处不在，从计算游戏代理应该向哪个方向射击到表达人工神经网络的输入和输出。你应该很好地了解它们。
- en: 'Let''s take a point P as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以点 P 为例：
- en: P = (x, y)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: P = (x, y)
- en: 'A two-dimensional vector looks almost the same when written, as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当写成如下形式时，二维向量看起来几乎相同：
- en: V = (x, y)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: V = (x, y)
- en: 'However, although similar, a vector represents two components: direction and
    magnitude. The right-hand side of the following diagram shows the vector (9, 6)
    situated at the origin:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，尽管相似，向量表示两个分量：方向和幅度。以下图的右侧显示了位于原点的向量 (9, 6)：
- en: '![Using vectors](img/00130.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![使用向量](img/00130.jpeg)'
- en: The bearing of the arrow shows the direction of the vector, and the length of
    the line represents the magnitude of the vector. A vector can represent the velocity
    of a vehicle. The magnitude of the vector represents the speed of the vehicle,
    and the direction represents the heading of the vehicle.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 箭头的方向表示向量的方向，线的长度代表向量的幅度。一个向量可以表示车辆的速率。向量的幅度代表车辆的速率，方向代表车辆的航向。
- en: That's quite a lot of information from just two numbers (x, y). Vectors aren't
    restricted to two dimensions either. They can be any size at all. You would use
    a three-dimensional vector, (x, y, z), for example, to represent the velocity
    of a vehicle that moves in three dimensions, like a helicopter. Let's take a look
    at some of the things you can do with vectors.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 仅从两个数字（x, y）中就能获得如此多的信息。向量也不限于二维。它们可以是任何大小。例如，你可以使用三维向量 (x, y, z) 来表示在三维空间中移动的车辆，如直升机。让我们看看你可以用向量做什么。
- en: How to do it
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做
- en: 'Vectors can be used in multiple ways, few of them are listed as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 向量可以用多种方式使用，以下列出了一些：
- en: Multiplying vectors is a cinch. You just multiply each component by the value.
    For example, the vector V (4, 5) multiplied by 2 is (8, 10).
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向量相乘非常简单。你只需将每个分量乘以相应的值。例如，向量 V (4, 5) 乘以 2 得到 (8, 10)。
- en: The magnitude of a vector is its length. In the previous example, the magnitude
    of the vector V (4, 5) is the distance from the start point to the point P(4,
    5) which is illustrated in the following figure:![How to do it](img/00131.jpeg)
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向量的幅度就是它的长度。在先前的例子中，向量 V (4, 5) 的幅度是从起点到点 P(4, 5) 的距离，如下图所示：![如何做](img/00131.jpeg)
- en: 'This is easy to calculate using the Pythagorean theorem as follows:'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这可以通过勾股定理轻松计算，如下所示：
- en: magnitude = ![How to do it](img/00132.jpeg)
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 幅度 = ![如何做](img/00132.jpeg)
- en: 'If you had a three-dimensional vector, then you would use the similar equation:'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你有一个三维向量，那么你会使用类似的方程：
- en: magnitude = ![How to do it](img/00133.jpeg)
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 大小 = ![如何操作](img/00133.jpeg)
- en: 'Mathematicians place two vertical bars around a vector to denote its length,
    as shown in the following:'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数学家用两个垂直线围绕一个向量来表示其长度，如下所示：
- en: magnitude = |V|
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 大小 = |V|
- en: '**Normalizing Vectors**: When a vector is normalized, it retains its direction
    but its magnitude is recalculated so that it is of unit length (a length of 1).
    To do this you divide each component of the vector by the magnitude of the vector.
    Mathematicians write the formula as follows:'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**归一化向量**：当一个向量被归一化时，它保留了其方向，但其大小被重新计算，使其长度为1（长度为1）。为此，你需要将向量的每个分量除以向量的模。数学家将公式写成以下形式：'
- en: N = V/|V|
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: N = V/|V|
- en: 'Therefore, to normalize the vector (4, 5), you would do the following:'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因此，为了将向量（4, 5）归一化，你需要做以下操作：
- en: new X = 4 /6.403 = 0.62
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 新X = 4 /6.403 = 0.62
- en: new Y = 5 /6.403 = 0.78
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 新Y = 5 /6.403 = 0.78
- en: '**Resolving Vectors**: It''s possible to use trigonometry to resolve a vector
    into two separate vectors, one parallel to the *x* axis and one to the *y* axis.
    Take a look at the vector, V, representing the thrust of a jet fighter at point
    V, as shown in the following figure:![How to do it](img/00134.jpeg)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分解向量**：可以使用三角学将一个向量分解为两个独立的向量，一个平行于*x*轴，另一个平行于*y*轴。看看表示喷气式战斗机在点V处的推力的向量V，如下所示：![如何操作](img/00134.jpeg)'
- en: To resolve V into its x/y components, we need to find **Oa** and **Ob**. This
    will give us the component of the aircraft's thrust that is acting along the *y*
    axis, and the component along the *x* axis. Another way of putting it is that
    **Oa** is the amount of thrust acting along the *x* axis, and **Ob** is the amount
    along the *y* axis.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将V分解为x/y分量，我们需要找到**Oa**和**Ob**。这将给出飞机推力沿*y*轴的分量和沿*x*轴的分量。另一种说法是，**Oa**是沿*x*轴作用的推力量，**Ob**是沿*y*轴的分量。
- en: 'First, let''s calculate the amount of thrust along the *y* axis: **Oa**. From
    trigonometry, we know that:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们计算沿*y*轴的推力量：**Oa**。从三角学中，我们知道：
- en: cos(θ) = adjacent / hypotenuse = Oa / |V|
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: cos(θ) = 邻边 / 斜边 = Oa / |V|
- en: 'Rearranged, this gives:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 重新排列后，我们得到：
- en: Oa = |V| Cos(θ) = y component
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Oa = |V| Cos(θ) = y分量
- en: 'To calculate Ob, the following equation is used:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为了计算Ob，使用以下方程：
- en: sin(θ) = opposite / hypotenuse = Ob / |V|
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: sin(θ) = 对边 / 斜边 = Ob / |V|
- en: 'Giving:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 给出：
- en: Ob = |V| sin(θ) = x component
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Ob = |V| sin(θ) = x分量
- en: '**The Dot Product**: The dot product gives the angle between two vectors—something
    you will need to calculate often when programming AI. Given the two two-dimensional
    vectors, u and v, the equation looks like the following:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**点积**：点积给出了两个向量之间的角度——在编程AI时你将经常需要计算的角度。给定两个二维向量u和v，方程看起来如下：'
- en: u.v = ux vx + uy uy //Equation (1)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: u.v = ux vx + uy uy //方程（1）
- en: 'The `.` (dot) symbol denotes the dot product. Equation (1) doesn''t give us
    an angle though. I promised an angle, so you''ll get one! Here''s another way
    of calculating the dot product:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: “.”（点）符号表示点积。方程（1）并没有给出一个角度。我承诺会给你一个角度，所以你将得到一个！这是计算点积的另一种方法：
- en: u.v = |u| |v| cos(θ)
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: u.v = |u| |v| cos(θ)
- en: 'Rearranging, we get:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 重新排列后，我们得到：
- en: '*cos(θ) = u.v / |u| |v|*'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '*cos(θ) = u.v / |u| |v|*'
- en: 'Remember, the vertical lines surrounding a vector indicate its magnitude. Now
    is the time when you discover one of the useful uses for normalizing vectors.
    If v and u are both normalized, then the equation simplifies enormously to:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，围绕向量的垂直线表示其大小。现在是你发现归一化向量的一个有用用途的时候了。如果v和u都是归一化的，那么方程可以极大地简化为：
- en: "*cos(θ) = u.v / 1*1\P = u.v*"
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: "*cos(θ) = u.v / 1*1\P = u.v*"
- en: 'Substituting in the equation from Equation (1) for the right-hand side gives:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 将方程（1）中的右侧代入方程中，我们得到：
- en: '*cos(θ) = u.v = ux vx + uy uy*'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '*cos(θ) = u.v = ux vx + uy uy*'
- en: This gives us an equation for the angle between the vectors.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们一个关于向量之间角度的方程。
- en: How it works
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的
- en: 'Here''s an example of some of the vector methods you''ve just learned about
    working together. Let''s say you have a game agent, Eric the Troll, who stands
    at position T (the origin) and facing in the direction given by the normalized
    vector H (for heading). He can smell a helpless princess at position P and would
    very much like to throw his club at her, to tenderize her a little, before he
    rips her to pieces. To do this, he needs to know how many radians he must rotate
    to face her. The following figure shows the situation:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些你刚刚学到的向量方法一起工作的例子。比如说，你有一个游戏代理，埃里克·巨魔，他站在位置 T（原点）并朝向由归一化向量 H（方向）给出的方向。他可以闻到位置
    P 的无助公主，并且非常想在她被撕成碎片之前用他的棍子打她，使她变得柔软一些。为了做到这一点，他需要知道他必须旋转多少弧度才能面对她。以下图显示了这种情况：
- en: '![How it works](img/00135.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作](img/00135.jpeg)'
- en: You've discovered that you can calculate the angle between two vectors using
    the dot product. However, in this problem you only have one vector to start with,
    **H**. Therefore, we need to determine a vector—the vector **TP** that points
    directly at the princess. This is calculated by subtracting point **T** from point
    **P**. Because **T** is at the origin (0, 0), in this example, P–T= P. However,
    the answer P–T is a vector, so let's show this by typing it in bold and calling
    it **P**.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 你发现你可以使用点积来计算两个向量之间的角度。然而，在这个问题中，你只有一个向量开始，**H**。因此，我们需要确定一个向量——指向公主的向量 **TP**。这是通过从点
    **T** 中减去点 **P** 来计算的。因为 **T** 在原点 (0, 0)，在这个例子中，P–T= P。然而，P–T 的答案是向量，所以我们用粗体表示它，并称之为
    **P**。
- en: We know that the cosine of the angle the troll needs to turn to face the princess
    is equivalent to the dot product of **H** and **P**, provided both vectors are
    normalized. **H** is already normalized, so we only need to normalize **P**. Remember,
    to normalize a vector, its components are divided by its magnitude.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道巨魔需要转动的角度的余弦值等于 **H** 和 **P** 的点积，前提是两个向量都进行了归一化。**H** 已经归一化，所以我们只需要归一化
    **P**。记住，为了归一化一个向量，其分量被除以其大小。
- en: 'Consequently, the normal of P (NP) is:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，P 的法线（NP）是：
- en: Np = P / |P| // Equation (2)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Np = P / |P| // 方程式 (2)
- en: 'The dot product can now be used to determine the angle:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以使用点积来确定角度：
- en: cos(θ) = Np.H // Equation (3)
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: cos(θ) = Np.H // 方程式 (3)
- en: 'So:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 所以：
- en: θ = cos^(-1)(Np.H) // Equation (4)
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: θ = cos^(-1)(Np.H) // 方程式 (4)
- en: 'To clarify the process, let''s do the whole thing again, but with some numbers.
    Let''s say, the troll is situated at the origin T (0, 0) and has a heading of
    H (1, 0). The princess is standing at the point P (4, 5). How many radians does
    the troll have to turn to face the princess? We know that we can use Equation
    (4) to calculate the angle, but first we need to determine the vector, TP, between
    the troll and the princess and normalize it. To obtain TP, we subtract T from
    P, resulting in the vector (4,5). To normalize TP, we divide it by its magnitude,
    resulting in NTP (0.62,0.78). Finally, we plug the numbers into Equation (4),
    which is illustrated as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 为了阐明这个过程，让我们再次做一遍，但这次有一些数字。比如说，巨魔位于原点 T (0, 0) 并朝向 H (1, 0)。公主站在点 P (4, 5)。巨魔需要转动多少弧度才能面对公主？我们知道我们可以使用方程式
    (4) 来计算角度，但首先我们需要确定巨魔和公主之间的向量 TP 并对其进行归一化。为了获得 TP，我们从 P 中减去 T，得到向量 (4,5)。为了归一化
    TP，我们将其除以其大小，得到 NTP (0.62,0.78)。最后，我们将数字代入方程式 (4)，如下所示：
- en: '*θ = cos*^(-1)*(Ntp.H)*'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '*θ = cos*^(-1)*(Ntp.H)*'
- en: '*θ = cos*^(-1) *((0.62 *1) + (0.78 * 0))*'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '*θ = cos*^(-1) *((0.62 *1) + (0.78 * 0))*'
- en: '*θ = cos*^(-1) *(0.62)*'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '*θ = cos*^(-1) *(0.62)*'
- en: '*θ = 0.902 radians*'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*θ = 0.902 弧度*'
- en: Physics
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 物理学
- en: Physics is the branch of science concerned with the nature and properties of
    matter and energy. The subject matter of physics includes mechanics, heat, light
    and other radiation, sound, electricity, magnetism, and the structure of atoms.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 物理学是研究物质和能量性质的科学分支。物理学的主题包括力学、热学、光和其他辐射、声音、电、磁和原子的结构。
- en: How to do it
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做
- en: '**Time**: Time is a scalar quantity (completely specified by its magnitude
    and with no direction) measured in seconds:'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间**: 时间是一个标量量（完全由其大小指定，没有方向）以秒为单位：'
- en: Time = Distance / Speed
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 时间 = 距离 / 速度
- en: '**Distance**: The standard unit of distance—a scalar quantity—is the meter,
    abbreviated to m:'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**距离**: 距离的标准单位——一个标量量——是米，缩写为 m:'
- en: Distance=Speed * Time
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 距离=速度 * 时间
- en: '**Mass**: Mass is a scalar quantity measured in kilograms, abbreviated to kg.
    Mass is the measure of an amount of something.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**质量**: 质量是一个以千克为单位的标量量，缩写为 kg。质量是某种数量的度量。'
- en: '**Velocity**: Velocity is a vector quantity (a quantity that has magnitude
    and direction) that expresses the rate of change of distance over time. The standard
    unit of measurement of velocity is meters per second, abbreviated to m/s. This
    can be expressed mathematically as:'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**速度**: 速度是一个矢量量（一个具有大小和方向的量），表示距离随时间的变化率。速度的标准测量单位是米每秒，缩写为 m/s。这可以用以下数学公式表示：'
- en: v = ∆x / ∆t
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: v = ∆x / ∆t
- en: The Greek capital letter ∆, read as delta, is used in mathematics to denote
    a change in quantity.
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 希腊字母的大写字母 ∆，读作 delta，在数学中用来表示数量的变化。
- en: '**Acceleration**: Acceleration is a vector quantity that expresses the rate
    of change of velocity over time and is measured in meters per second square, written
    as m/s². Acceleration can be expressed mathematically as:'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加速度**: 加速度是一个矢量量，表示速度随时间的变化率，其单位是每秒平方米，写作 m/s²。加速度可以用以下数学公式表示：'
- en: a = ∆v / ∆t
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a = ∆v / ∆t
- en: How it works
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的
- en: 'The above physics properties are used in the following ways:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 上述物理属性以下列方式使用：
- en: '**Time**: In games often we have to evaluate the time required for the player
    to reach a object with a given speed. In such cases, we use the Pythagorean theorem
    to evaluate the distance between the object and the player, then we will use the
    *Time = Distance/Speed* formula to evaluate the time that the player will need
    to cover a certain distance with a given speed.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间**: 在游戏中，我们经常需要评估玩家以给定速度到达某个物体所需的时间。在这种情况下，我们使用勾股定理来评估物体与玩家之间的距离，然后我们将使用
    *时间 = 距离/速度* 公式来评估玩家以给定速度覆盖一定距离所需的时间。'
- en: '**Distance**: Similarly, to evaluate the distance between the player and the
    object, we can use the *Distance = Speed * Time* formula to evaluate the distance
    between the object and the player, considering the speed and time as known factors.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**距离**: 同样，为了评估玩家与物体之间的距离，我们可以使用 *距离 = 速度 * 时间* 公式来评估物体与玩家之间的距离，考虑到速度和时间是已知因素。'
- en: '**Mass**: This is a property that is frequently used while dealing with the
    physics engine. Whenever we want to demonstrate both the objects with different
    behavior in terms of movement, we can change their mass property. Consider a situation
    in which we want to have two physics objects such as bullet and a ball. In this
    case, the mass of the bullet will be very low as compared to the ball, so as to
    make the bullet travel with a high speed, even with a very little applied force
    or impulse.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**质量**: 这是一个在处理物理引擎时经常使用的属性。当我们想要展示具有不同运动行为的两个物体时，我们可以改变它们的质量属性。考虑这样一种情况，我们想要有两个物理对象，如子弹和球。在这种情况下，子弹的质量将比球低得多，以便即使施加很小的力或冲量，子弹也能以很高的速度移动。'
- en: '**Velocity**: Whenever we apply any force to any physics body by using a vector,
    we are changing the velocity of the object by providing the magnitude and the
    direction to the physics object.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**速度**: 每当我们通过矢量对任何物理体施加力时，我们通过提供大小和方向给物理对象，从而改变该对象的速度。'
