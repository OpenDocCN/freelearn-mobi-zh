- en: Chapter 9. Geolocation and Accelerometer APIs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。地理位置和加速度计API
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍：
- en: Determining your current location
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定当前位置
- en: Determining your speed and heading
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定速度和航向
- en: Checking for geolocation access
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查地理位置访问权限
- en: Responding to accelerometer changes
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 响应加速度计变化
- en: Detecting a shake
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测震动
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: The iOS family makes use of many onboard sensors including the three-axis accelerometer,
    digital compass, camera, microphone, and global positioning system (GPS). Their
    inclusion has created a world of opportunity for developers, and has resulted
    in a slew of innovative, creative, and fun apps that have contributed to the overwhelming
    success of the App Store.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: iOS系列设备使用许多内置传感器，包括三轴加速度计、数字指南针、摄像头、麦克风和全球定位系统（GPS）。它们的加入为开发者创造了一个世界，并导致了一系列创新、创意和有趣的应用程序，这些应用程序为App
    Store的压倒性成功做出了贡献。
- en: This chapter will focus on two of the most popular sensors—the accelerometer
    and GPS; both of which are supported by AIR for iOS.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将重点介绍两种最流行的传感器——加速度计和GPS；两者都由AIR为iOS提供支持。
- en: The accelerometer measures g-force, enabling the detection of physical orientation,
    motion, and vibration. While originally seen by many as a gimmick, its uses have
    become increasingly more sophisticated as the platform has evolved. From games
    to remote controls, paint packages to sound generation, the accelerometer has
    become the input method of choice for many apps.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 加速度计测量重力加速度，能够检测物理方向、运动和振动。虽然最初被许多人视为一种花招，但随着平台的演变，其用途变得越来越复杂。从游戏到遥控器，从绘图软件到声音生成，加速度计已成为许多应用程序的首选输入方法。
- en: Devices such as the iPhone are also location-aware; its GPS receiver is able
    to determine its position anywhere in the world. Movement can be tracked, the
    current speed can be obtained, and even the direction the device is facing can
    be determined. In addition to mapping, location services are finding their way
    into all kinds of areas ranging from photography to messaging clients.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 像iPhone这样的设备也具有位置感知功能；其GPS接收器能够确定其在世界上的位置。可以跟踪运动，获取当前速度，甚至可以确定设备面向的方向。除了地图服务外，位置服务还在各种领域找到其应用，从摄影到消息客户端。
- en: AIR provides APIs that allow access to both the accelerometer and location data
    collected by the device's sensors. Support for the accelerometer is provided by
    the `flash.sensors.Accelerometer` class, while `flash.sensors.Geolocation` is
    used when writing location-aware apps.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: AIR提供了API，允许访问设备传感器收集的加速度计和位置数据。加速度计的支持由`flash.sensors.Accelerometer`类提供，而`flash.sensors.Geolocation`用于编写位置感知应用程序。
- en: Determining your current location
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确定当前位置
- en: The iOS family of devices are location-aware, allowing your approximate geographic
    position to be determined. How this is achieved depends on the hardware present
    in the device. For example, the original iPhone, all models of the iPod touch,
    and Wi-Fi-only iPads use Wi-Fi network triangulation to provide location information.
    The remaining devices can more accurately calculate their position using an on-board
    GPS chip or cell-phone tower triangulation.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: iOS系列设备具有位置感知功能，允许确定你的大致地理位置。这是如何实现的取决于设备中存在的硬件。例如，原始iPhone、所有型号的iPod touch和仅Wi-Fi的iPad使用Wi-Fi网络三角测量法来提供位置信息。其余设备可以使用内置的GPS芯片或手机塔三角测量法更精确地计算其位置。
- en: The AIR SDK provides a layer of abstraction that allows you to extract location
    information in a hardware-independent manner, meaning you can access the information
    on any iOS device using the same code.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: AIR SDK提供了一层抽象，允许你以硬件无关的方式提取位置信息，这意味着你可以使用相同的代码在任何iOS设备上访问信息。
- en: This recipe will take you through the steps required to determine your current
    location.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方将指导你完成确定当前位置所需的步骤。
- en: Getting ready
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: An FLA has been provided as a starting point for this recipe.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 已提供FLA作为此配方的起点。
- en: From Flash Professional, open `chapter9\recipe1\recipe.fla` from the book's
    accompanying code bundle.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 从Flash Professional中，打开书附带代码包中的`chapter9\recipe1\recipe.fla`。
- en: You will find six dynamic text fields positioned on the stage. We will populate
    each of them with location data obtained from the device.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你将找到六个动态文本字段，它们位于舞台上。我们将用从设备获取的位置数据填充每个字段。
- en: How to do it...
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Perform the following steps to listen for and display geolocation data:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以监听和显示地理位置数据：
- en: Create a document class and name it `Main`.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个文档类并将其命名为`Main`。
- en: Import the following classes and add a member variable of type `Geolocation:`
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入以下类并添加一个类型为`Geolocation`的成员变量：
- en: '[PRE0]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Within the class'' constructor, instantiate a `Geolocation` object and listen
    for updates from it:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在类的构造函数中，实例化一个`Geolocation`对象并监听它的更新：
- en: '[PRE1]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, write an event handler that will obtain the updated geolocation data and
    populate the dynamic text fields with it:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，编写一个事件处理程序，它将获取更新的地理位置数据并将其填充到动态文本字段中：
- en: '[PRE2]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Save the class file as `Main.as` within the same folder as the FLA. Move back
    to the FLA and save it too.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将类文件保存为`Main.as`，位于与FLA相同的文件夹中。返回到FLA并保存它。
- en: Publish and test the app on your device.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的设备上发布和测试应用。
- en: 'When launched for the first time, a native iOS dialog will appear with the
    following prompt:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首次启动时，将出现一个带有以下提示的原生iOS对话框：
- en: '**"c9 r1" Would Like to Use Your Current Location**'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**"c9 r1" 希望使用您的当前位置**'
- en: Tap the **OK** button to grant your app access to the device's location data.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击**确定**按钮以授予您的应用访问设备位置数据的权限。
- en: Tip
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Devices running iOS 4 or above will remember your choice, while devices running
    older versions of iOS will prompt you each time the app is launched.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 运行iOS 4或更高版本的设备将记住您的选择，而运行较旧版本iOS的设备将在每次应用启动时提示您。
- en: The location data will be shown on screen and periodically updated. Take your
    device on the move and you will see changes in the data as your geographical location
    changes.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 位置数据将在屏幕上显示并定期更新。带着您的设备移动，您将看到数据随地理位置变化而变化。
- en: How it works...
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: AIR provides the `Geolocation` class in the `flash.sensors` package, allowing
    the location data to be retrieved from your device. To access the data, create
    a `Geolocation` instance and listen for it dispatching `GeolocationEvent.UPDATE`
    events.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: AIR在`flash.sensors`包中提供了`Geolocation`类，允许从您的设备检索位置数据。要访问数据，创建一个`Geolocation`实例并监听它派发的`GeolocationEvent.UPDATE`事件。
- en: 'We did this within our document class'' constructor, using the `geo` member
    variable to hold a reference to the object:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在文档类的构造函数中这样做，使用`geo`成员变量来保存对对象的引用：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The frequency with which location data is retrieved can be set by calling the
    `Geolocation.setRequestedUpdateInterval()` method. You can see this in the earlier
    code where we requested an update interval of 1000 milliseconds. This only acts
    as a hint to the device, meaning the actual time between updates may be greater
    or smaller than your request. Omitting this call will result in the device using
    a default update interval. The default interval can be anything ranging from milliseconds
    to seconds depending on the device's hardware capabilities.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过调用`Geolocation.setRequestedUpdateInterval()`方法来设置获取位置数据的频率。您可以在之前的代码中看到这一点，我们请求了1000毫秒的更新间隔。这仅作为对设备的提示，意味着实际更新之间的时间可能大于或小于您的请求。省略此调用将导致设备使用默认的更新间隔。默认间隔可以是毫秒到秒之间的任何值，具体取决于设备的硬件能力。
- en: 'Each `UPDATE` event dispatches a `GeolocationEvent` object, which contains
    properties describing your current location. Our `geoUpdated()` method handles
    this event by outputting several of the properties to the dynamic text fields
    sitting on the stage:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 每个`UPDATE`事件都会派发一个`GeolocationEvent`对象，该对象包含描述您当前位置的属性。我们的`geoUpdated()`方法通过将几个属性输出到舞台上的动态文本字段来处理此事件：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The following information was output:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 输出了以下信息：
- en: Latitude and longitude
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经纬度
- en: Altitude
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 海拔
- en: Horizontal and vertical accuracy
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 水平和垂直精度
- en: Timestamp
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间戳
- en: The latitude and longitude positions are used to identify your geographical
    location. Your altitude is also obtained and is measured in meters. As you move
    with the device, these values will update to reflect your new location.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 经纬度位置用于识别您的地理位置。您的海拔也会被获取，并以米为单位进行测量。随着您使用设备移动，这些值将更新以反映您的新位置。
- en: The accuracy of the location data is also shown and depends on the hardware
    capabilities of the device. Both the horizontal and vertical accuracy are measured
    in meters.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 位置数据的精度也会显示，并取决于设备的硬件能力。水平和垂直精度都以米为单位进行测量。
- en: Finally, a timestamp is associated with every `GeolocationEvent` object that
    is dispatched, allowing you to determine the actual time interval between each.
    The timestamp specifies the milliseconds that have passed since the app was launched.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，每个派发的`GeolocationEvent`对象都会关联一个时间戳，这允许您确定每个事件之间的实际时间间隔。时间戳指定了自应用启动以来经过的毫秒数。
- en: Some older devices that do not include a GPS unit only dispatch `UPDATE` events
    occasionally. Initially, one or two `UPDATE` events are dispatched, with additional
    events only being dispatched when location information changes noticeably.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一些不包含GPS单元的较旧设备只会偶尔分发 `UPDATE` 事件。最初，会分发一个或两个 `UPDATE` 事件，只有在位置信息明显变化时才会分发额外的事件。
- en: Also note the use of the static `Geolocation.isSupported` property within the
    constructor. Although this will currently return `true` for all iOS devices, it
    cannot be guaranteed for future devices. Checking for geolocation support is also
    advisable when writing cross-platform code.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 还请注意在构造函数中使用的静态 `Geolocation.isSupported` 属性。尽管目前所有iOS设备都将返回 `true`，但未来设备不能保证。在编写跨平台代码时，检查地理位置支持也是建议的。
- en: For more information, perform a search for `flash.sensors.Geolocation` and `flash.events.GeolocationEvent`
    within Adobe Community Help.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如需更多信息，请在Adobe社区帮助中搜索 `flash.sensors.Geolocation` 和 `flash.events.GeolocationEvent`。
- en: There's more...
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: The amount of information made available and the accuracy of that information
    depends on the capabilities of the device.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 可用信息和信息的准确性取决于设备的性能。
- en: Accuracy
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 准确度
- en: The accuracy of the location data depends on the method employed by the device
    to calculate your position. Typically, iOS devices with an on-board GPS chip will
    have a benefit over those that rely on Wi-Fi triangulation.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 位置数据的准确性取决于设备计算您位置所采用的方法。通常，带有内置GPS芯片的iOS设备将比依赖Wi-Fi三角测量的设备有优势。
- en: For example, running this recipe's app on an iPhone 4, which contains a GPS
    unit, results in a horizontal accuracy of around 10 meters. The same app running
    on a third-generation iPod touch and relying on a Wi-Fi network, reports a horizontal
    accuracy of around 100 meters. Quite a difference!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在包含GPS单元的iPhone 4上运行此配方应用程序，其水平精度约为10米。在依赖Wi-Fi网络的第三代iPod touch上运行相同的应用程序，报告的水平精度约为100米。差别相当大！
- en: Altitude support
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 高度支持
- en: The current altitude can only be obtained from GPS-enabled devices. On devices
    without a GPS unit, the `GeolocationEvent.verticalAccuracy` property will return
    `-1` and `GeolocationEvent.altitude` will return `0`. A vertical accuracy of `-1`
    indicates that altitude cannot be detected.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当前高度只能从带有GPS功能的设备中获取。在没有GPS单元的设备上，`GeolocationEvent.verticalAccuracy` 属性将返回
    `-1`，而 `GeolocationEvent.altitude` 将返回 `0`。垂直精度为 `-1` 表示无法检测到高度。
- en: You should be aware of, and code for these restrictions when developing apps
    that provide location-based services. Do not make assumptions about a device's
    capabilities.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发提供基于位置服务的应用程序时，您应该注意并针对这些限制进行编码。不要对设备的性能做出假设。
- en: If your application relies on the presence of GPS hardware, then it is possible
    to state this within your application descriptor file. Doing so will prevent users
    without the necessary hardware from downloading your app from the App Store.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的应用程序依赖于GPS硬件的存在，那么您可以在应用程序描述文件中声明这一点。这样做将防止没有必要硬件的用户从App Store下载您的应用程序。
- en: For more information, take a look at the *Declaring device capabilities* recipe
    from [Chapter 13](ch13.html "Chapter 13. Connectivity, Persistence, and URI Schemes").
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如需更多信息，请查看第13章中的 *声明设备性能* 章节配方。
- en: Mapping your location
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 映射您的位置
- en: The most obvious use for the retrieval of geolocation data is mapping. Typically,
    an app will obtain a geographic location and display a map of its surrounding
    area. There are several ways to achieve this, but launching and passing location
    data to the device's native maps application is possibly the easiest solution.
    Take a look at *Launching the Maps application* from [Chapter 13](ch13.html "Chapter 13. Connectivity,
    Persistence, and URI Schemes") to see how this is done.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 获取地理位置数据的最明显用途是映射。通常，应用程序将获取地理位置并显示其周边地区的地图。有几种实现方式，但启动并将位置数据传递给设备的原生地图应用程序可能是最简单的方法。查看第13章中的
    *启动地图应用程序*（[Chapter 13](ch13.html "Chapter 13. 连接、持久性和URI方案")）以了解如何实现。
- en: If you would prefer an ActionScript solution, then there is the UMap ActionScript
    3.0 API, which integrates with map data from a wide range of providers including
    Bing, Google, and Yahoo!. You can sign up and download the API from [www.umapper.com](http://www.umapper.com).
    Also tutorials are available at [www.afcomponents.com/tutorials/umap_as3](http://www.afcomponents.com/tutorials/umap_as3).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您更喜欢ActionScript解决方案，那么有UMap ActionScript 3.0 API，它可以与包括必应、谷歌和雅虎在内的广泛地图数据提供商的地图数据集成。您可以在[www.umapper.com](http://www.umapper.com)上注册并下载API。同时，在[www.afcomponents.com/tutorials/umap_as3](http://www.afcomponents.com/tutorials/umap_as3)上也有教程可用。
- en: Calculating distance between geolocations
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 计算地理位置之间的距离
- en: 'When the geographic coordinates of two separate locations are known, it is
    possible to determine the distance between them. AIR does not provide an API for
    this but an AS3 solution can be found on the Adobe Developer Connection website
    at: [http://cookbooks.adobe.com/index.cfm?event=showdetails&postId=5701](http://cookbooks.adobe.com/index.cfm?event=showdetails&postId=5701).'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 当两个不同位置的地理坐标已知时，可以确定它们之间的距离。AIR不提供相应的API，但在Adobe开发者连接网站上可以找到一个AS3解决方案：[http://cookbooks.adobe.com/index.cfm?event=showdetails&postId=5701](http://cookbooks.adobe.com/index.cfm?event=showdetails&postId=5701)。
- en: The UMap ActionScript 3.0 API can also be used to calculate distances. Refer
    to [www.umapper.com](http://www.umapper.com).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: UMap ActionScript 3.0 API也可以用来计算距离。请参阅[www.umapper.com](http://www.umapper.com)。
- en: Geocoding
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 地理编码
- en: Mapping providers, such as Google and Yahoo!, provide geocoding and reverse-geocoding
    web services. Geocoding is the process of finding the latitude and longitude of
    an address, whereas reverse-geocoding converts a latitude-longitude pair into
    a readable address.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 地图服务提供商，如谷歌和雅虎，提供地理编码和反向地理编码的Web服务。地理编码是将地址转换为经纬度的过程，而反向地理编码则是将经纬度对转换为可读的地址。
- en: You can make HTTP requests from your AIR for iOS application to any of these
    services. As an example, take a look at the Yahoo! PlaceFinder web service at
    [http://developer.yahoo.com/geo/placefinder](http://developer.yahoo.com/geo/placefinder).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您的AIR for iOS应用程序向这些服务中的任何一个发送HTTP请求。例如，查看雅虎PlaceFinder Web服务[http://developer.yahoo.com/geo/placefinder](http://developer.yahoo.com/geo/placefinder)。
- en: Alternatively, the UMap ActionScript 3.0 API integrates with many of these services
    to provide geocoding functionality directly within your Flash projects. Refer
    to the uMapper website.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，UMap ActionScript 3.0 API可以与许多这些服务集成，直接在您的Flash项目中提供地理编码功能。请参阅uMapper网站。
- en: Gyroscope support
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 陀螺仪支持
- en: Another popular sensor is the gyroscope, which is found in more recent iOS devices.
    While the AIR SDK does not directly support gyroscope access, Adobe has made available
    a native extension for AIR 3.0, which provides a `Gyroscope` ActionScript class.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个流行的传感器是陀螺仪，它出现在较新的iOS设备中。虽然AIR SDK不直接支持陀螺仪访问，但Adobe为AIR 3.0提供了一种原生扩展，它提供了一个`Gyroscope`
    ActionScript类。
- en: A download link and usage examples can be found on the Adobe Developer Connection
    site at [www.adobe.com/devnet/air/native-extensions-for-air/extensions/gyroscope.html](http://www.adobe.com/devnet/air/native-extensions-for-air/extensions/gyroscope.html).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在Adobe开发者连接网站上找到下载链接和使用示例，网址为[www.adobe.com/devnet/air/native-extensions-for-air/extensions/gyroscope.html](http://www.adobe.com/devnet/air/native-extensions-for-air/extensions/gyroscope.html)。
- en: See also
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: '*Determining your speed and heading*'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*确定您的速度和航向*'
- en: '*Launching the Maps application, [Chapter 13](ch13.html "Chapter 13. Connectivity,
    Persistence, and URI Schemes")*'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*启动地图应用程序，[第13章](ch13.html "第13章。连接性、持久性和URI方案")*'
- en: Determining your speed and heading
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确定您的速度和航向
- en: The availability of an on-board GPS unit makes it possible to determine your
    speed and heading. In this recipe, we will write a simple app that uses the `Geolocation`
    class to obtain and use this information. In addition, we will add compass functionality
    by utilizing the user's current heading.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 由于内置了GPS单元，因此可以确定您的速度和航向。在本食谱中，我们将编写一个简单的应用程序，使用`Geolocation`类获取和使用这些信息。此外，我们将通过利用用户的当前航向来添加指南针功能。
- en: Getting ready
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need a GPS-enabled iOS device. The iPhone has featured an on-board
    GPS unit since the release of the 3G. GPS hardware can also be found in all cellular
    network-enabled iPads.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一个带有GPS功能的iOS设备。自3G发布以来，iPhone就内置了GPS单元。所有支持蜂窝网络功能的iPad也配备了GPS硬件。
- en: From Flash Professional, open `chapter9\recipe2\recipe.fla` from the book's
    accompanying code bundle.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 从Flash Professional中，打开书籍附带代码包中的`chapter9\recipe2\recipe.fla`。
- en: Sitting on the stage are three dynamic text fields. The first two `(speed1Field`
    and `speed2Field)` will be used to display the current speed in meters per second
    and miles per hour respectively. We will write the device's current heading into
    the third`—headingField.`
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 舞台上坐着三个动态文本字段。前两个（`speed1Field`和`speed2Field`）将分别用于显示以米/秒和英里/小时为单位的当前速度。我们将把设备的当前航向写入第三个`—headingField`。
- en: Also, a movie clip named `compass` has been positioned near the bottom of the
    stage and represents a compass with north, south, east, and west clearly marked
    on it. We will update the rotation of this clip in response to heading changes
    to ensure that it always points towards true north.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，一个名为`compass`的电影剪辑被放置在舞台底部附近，它代表了一个带有北、南、东和西清晰标记的指南针。我们将根据航向变化更新这个剪辑的旋转，以确保它始终指向真正的北方。
- en: How to do it...
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'To obtain the device''s speed and heading, carry out the following steps:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取设备的速度和航向，执行以下步骤：
- en: Create a document class and name it `Main`.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个文档类并命名为`Main`。
- en: Add the necessary import statements, a constant, and a member variable of type
    `Geolocation:`
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加必要的导入语句、一个常量和类型为`Geolocation`的成员变量：
- en: '[PRE5]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Within the constructor, instantiate a `Geolocation` object and listen for updates:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在构造函数中，实例化一个`Geolocation`对象并监听更新：
- en: '[PRE6]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We will need an event listener for the `Geolocation` object''s `UPDATE` event.
    This is where we will obtain and display the current speed and heading, and also
    update the `compass` movie clip to ensure it points towards true north. Add the
    following method:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要一个事件监听器来监听`Geolocation`对象的`UPDATE`事件。这是我们获取和显示当前速度和航向的地方，并更新`compass`电影剪辑以确保它指向真正的北方。添加以下方法：
- en: '[PRE7]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Finally, add this support method to convert meters per second to miles per
    hour:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，添加这个支持方法将米/秒转换为英里/小时：
- en: '[PRE8]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Save the class file as `Main.as`. Move back to the FLA and save it too.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将类文件保存为`Main.as`。回到FLA并保存它。
- en: Compile the FLA and deploy the IPA to your device.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编译FLA并将IPA部署到您的设备上。
- en: Launch the app. When prompted, grant your app access to the GPS unit.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动应用程序。当提示时，授予您的应用程序访问GPS单元的权限。
- en: Hold the device in front of you and start turning on the spot. The **heading
    (degrees)** field will update to show the direction you are facing. The `compass`
    movie clip will also update, showing you where true north is in relation to your
    current heading.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 将设备放在您面前并开始原地转动。**航向（度**）字段将更新以显示您面对的方向。`compass`电影剪辑也将更新，显示相对于您当前航向的真正北方在哪里。
- en: Take your device outside and start walking, or better still, start running.
    On average every 50 milliseconds you will see the top two text fields update and
    show your current speed, measured in both meters per second and miles per hour.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 将您的设备拿到户外，开始行走，或者更好的是，开始跑步。平均每50毫秒，您将看到顶部两个文本字段更新并显示您的当前速度，以每秒米和每小时英里为单位进行测量。
- en: How it works...
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we created a `Geolocation` object and listened for it dispatching
    `UPDATE` events. An update interval of 50 milliseconds was specified in an attempt
    to receive the speed and heading information frequently.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们创建了一个`Geolocation`对象并监听它派发`UPDATE`事件。我们指定了50毫秒的更新间隔，试图频繁地接收速度和航向信息。
- en: Both the speed and heading information are obtained from the `GeolocationEvent`
    object, which is dispatched on each `UPDATE` event. The event is captured and
    handled by our `geoUpdated()` handler, which displays the speed and heading information
    from the accelerometer.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 速度和航向信息都是从`GeolocationEvent`对象中获得的，该对象在每个`UPDATE`事件上派发。事件被捕获并由我们的`geoUpdated()`处理程序处理，该处理程序显示来自加速度计的速度和航向信息。
- en: 'The current speed is measured in meters per second and is obtained by querying
    the `GeolocationEvent.speed` property. Our handler also converts the speed to
    miles per hour before displaying each value within the appropriate text field.
    The following code does this:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 当前速度以米/秒为单位进行测量，通过查询`GeolocationEvent.speed`属性获得。我们的处理程序还在显示每个值之前将速度转换为英里/小时。以下代码执行此操作：
- en: '[PRE9]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The heading, which represents the direction of movement (with respect to true
    north) in degrees, is retrieved from the `GeolocationEvent.heading` property.
    The value is used to set the `rotation` property of the `compass` movie clip and
    is also written to the `headingField` text field:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 航向，表示相对于真正北方的运动方向（以度为单位），从`GeolocationEvent.heading`属性中检索。该值用于设置`compass`电影剪辑的`rotation`属性，并也写入`headingField`文本字段：
- en: '[PRE10]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The remaining method is `getMilesPerHour()` and is used within `geoUpdated()`
    to convert the current speed from meters per second into miles per hour. Notice
    the use of the `CONVERSION_FACTOR` constant that was declared within your document
    class:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 剩余的方法是`getMilesPerHour()`，它用于`geoUpdated()`中，将当前速度从米每秒转换为每小时英里。注意使用了在您的文档类中声明的`CONVERSION_FACTOR`常量：
- en: '[PRE11]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Although the speed and heading obtained from the GPS unit will suffice for most
    applications, the accuracy can vary across devices. Your surroundings can also
    have an affect; moving through streets with tall buildings or under tree coverage
    can impair the readings.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管从GPS单元获取的速度和航向对于大多数应用来说已经足够，但不同设备之间的精度可能会有所不同。你的周围环境也可能产生影响；在高层建筑街道或树下移动可能会影响读数。
- en: You can find more information regarding `flash.sensors.Geolocation` and `flash.events.GeolocationEvent`
    within Adobe Community Help.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在Adobe Community Help中找到有关`flash.sensors.Geolocation`和`flash.events.GeolocationEvent`的更多信息。
- en: There's more...
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The following information provides some additional detail.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 以下信息提供了一些额外的细节。
- en: Determining support
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 确定支持
- en: Your current speed and heading can only be determined by devices that possess
    a GPS receiver.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 你的当前速度和航向只能由拥有GPS接收器的设备确定。
- en: Although you can install this recipe's app on any iOS device, you won't receive
    valid readings from any model of iPod touch, the original iPhone, or W-Fi-only
    iPads. Instead the `GeolocationEvent.speed` property will return `-1` and `GeolocationEvent.heading`
    will return `NaN`.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管你可以将此配方的应用安装在任何iOS设备上，但你不会从任何型号的iPod touch、原始iPhone或仅Wi-Fi的iPad上收到有效的读数。相反，`GeolocationEvent.speed`属性将返回`-1`，而`GeolocationEvent.heading`将返回`NaN`。
- en: If your application relies on the presence of GPS hardware, then it is possible
    to state this within the application descriptor file. Doing so will prevent users
    without the necessary hardware from downloading your app from the App Store.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的应用依赖于GPS硬件的存在，那么你可以在应用描述符文件中声明这一点。这样做将防止没有必要硬件的用户从App Store下载你的应用。
- en: For more information, take a look at the *Declaring device capabilities* recipe
    from [Chapter 13](ch13.html "Chapter 13. Connectivity, Persistence, and URI Schemes").
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参阅第13章中的*声明设备能力*配方[Chapter 13](ch13.html "Chapter 13. Connectivity, Persistence,
    and URI Schemes")。
- en: Simulating the GPS receiver
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模拟GPS接收器
- en: During the development lifecycle it is not feasible to continually test your
    app in a live environment. Instead you will probably want to record live data
    from your device and re-use it during testing. There are various apps available
    that will log data from the sensors on your device.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发周期中，在实时环境中不断测试你的应用是不切实际的。相反，你可能希望从你的设备中记录实时数据，并在测试期间重新使用它。有各种应用程序可以记录设备上的传感器数据。
- en: One such app is xSensor, which can be downloaded from iTunes or the App Store
    and is free. Its data sensor log is limited to 5KB but this restriction can be
    lifted by purchasing xSensor Pro.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个这样的应用是xSensor，可以从iTunes或App Store下载，并且是免费的。其数据传感器日志限制为5KB，但可以通过购买xSensor
    Pro来解除此限制。
- en: Preventing screen idle
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 防止屏幕空闲
- en: Many of this chapter's apps don't require you to touch the screen that often.
    Therefore you will be likely to experience the backlight dimming or the screen
    locking while testing them. This can be inconvenient and can be prevented by disabling
    screen locking. For more details, see the *Preventing screen idle* recipe in [Chapter
    3](ch03.html "Chapter 3. Writing your First App").
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的许多应用不需要你经常触摸屏幕。因此，在测试它们时，你可能会遇到背光变暗或屏幕锁定的情况。这可能会很麻烦，可以通过禁用屏幕锁定来防止这种情况。更多详情，请参阅第3章中的*防止屏幕空闲*配方[Chapter
    3](ch03.html "Chapter 3. Writing your First App")。
- en: See also
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: '*Determining your current location*'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*确定你的当前位置*'
- en: '*Checking for geolocation access*'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*检查地理位置访问*'
- en: Checking for geolocation access
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查地理位置访问
- en: Applications that make use of a device's location data must be granted permission
    by the user. The user is prompted when an app attempts to access location data
    for the first time. Devices running iOS 4 or above will remember this choice,
    whereas older versions of iOS will request access each time the app is launched.
    In addition, access privileges can be changed at any time from the device's settings.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 使用设备位置数据的应用程序必须获得用户的许可。当应用首次尝试访问位置数据时，会提示用户。运行iOS 4或更高版本的设备将记住这个选择，而较旧版本的iOS每次启动应用时都会请求访问权限。此外，访问权限可以在任何时候从设备的设置中更改。
- en: It is important that your app can detect the availability of geolocation data,
    and also respond to permission changes at runtime. Let us see how this is done.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是您的应用程序能够检测地理位置数据的可用性，并且能够在运行时响应权限更改。让我们看看这是如何完成的。
- en: Getting ready
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备中
- en: An FLA has been provided as a starting point.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 已提供一个FLA文件作为起点。
- en: From the book's accompanying code bundle, open `chapter9\recipe3\recipe.fla`
    into Flash Professional.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 从本书的配套代码包中，将`chapter9\recipe3\recipe.fla`文件打开到Flash Professional中。
- en: A dynamic text field with an instance name of `output` has been added to the
    stage.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 已在舞台上添加一个名为`output`的动态文本字段。
- en: We will write an app that listens for the availability of the geolocation data
    and reports any changes to the `output` text field.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将编写一个应用程序，监听地理位置数据的可用性，并将任何更改报告到`output`文本字段。
- en: How to do it...
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Carry out the following steps:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: Create a document class and name it `Main`.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`Main`的文档类。
- en: Add the following import statements and a member variable of type `Geolocation:`
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下导入语句和一个类型为`Geolocation`的成员变量：
- en: '[PRE12]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Within the constructor, create a `Geolocation` object and listen for it dispatching
    `GeolocationEvent.UPDATE` and `StatusEvent.STATUS:`
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在构造函数中，创建一个`Geolocation`对象并监听它发出`GeolocationEvent.UPDATE`和`StatusEvent.STATUS`：
- en: '[PRE13]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Finally, add a handler for each event:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，为每个事件添加处理程序：
- en: '[PRE14]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Save the class file as `Main.as`.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将类文件保存为`Main.as`。
- en: Save the FLA and publish it. Install the IPA and launch it on your device.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存FLA文件并发布它。安装IPA文件并在您的设备上启动它。
- en: 'A native iOS dialog will appear with the following prompt:'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将出现一个带有以下提示的原生iOS对话框：
- en: '**"c9 r3" Would Like to Use Your Current Location**'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**"c9 r3" 希望使用您的当前位置**'
- en: Tap the **Don't Allow** button to deny the app access to the device's location
    data.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**不允许**按钮以拒绝应用程序访问设备的地理位置数据。
- en: 'The following text will appear on-screen:'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 屏幕上会出现以下文本：
- en: '**Obtaining location...**'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**获取位置...**'
- en: 'And will quickly be replaced with:'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 它将很快被替换为：
- en: '**Geolocation access denied.**'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**地理位置访问被拒绝。**'
- en: Now re-launch the app. If you are using iOS 4 or above, your previous setting
    will be remembered and access to the geolocation data will once again be denied.
    If you are using an earlier version of iOS, then you will be prompted to grant
    access each time.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在重新启动应用程序。如果您使用iOS 4或更高版本，您的先前设置将被记住，并且对地理位置数据的访问将再次被拒绝。如果您使用的是iOS的早期版本，那么每次都会提示您授权访问。
- en: Tip
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: To re-launch an app in iOS 4 or above, you will first need to kill it using
    the fast app switcher. Refer to the *Exiting gracefully from an app* recipe in
    [Chapter 3](ch03.html "Chapter 3. Writing your First App"), for details on how
    to do this.
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要在iOS 4或更高版本中重新启动应用程序，您首先需要使用快速应用程序切换器将其终止。有关如何操作的详细信息，请参阅[第3章](ch03.html "第3章。编写您的第一个应用程序")中的*优雅地退出应用程序*菜谱。
- en: On devices running iOS 4 or above, an app's access privileges can be changed
    from the device's settings. Let us do this for our app.
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在运行iOS 4或更高版本的设备上，可以从设备的设置中更改应用程序的访问权限。让我们为我们的应用程序做这件事。
- en: Exit from the app by pressing the Home button. From the device's settings, move
    to **Location Services**. You will be presented with a list of apps that have
    attempted to access location data. Scroll down until you find **c9 r3**. Tap the
    button next to it to allow access to it.![How to do it...](img/1383_09_01.jpg)
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按主按钮退出应用程序。从设备的设置中，转到**位置服务**。您将看到一个列表，其中包含尝试访问位置数据的应用程序。向下滚动，直到找到**c9 r3**。点击旁边的按钮以允许访问它。![如何操作...](img/1383_09_01.jpg)
- en: Now move back to the home screen and launch this recipe's app again.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在返回主屏幕并再次启动此菜谱的应用程序。
- en: 'This time you will see the following text:'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这次您将看到以下文本：
- en: '**Obtaining location...**'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**获取位置...**'
- en: 'And it will quickly be replaced with:'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 它将很快被替换为：
- en: '**Location received.**'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**位置已接收。**'
- en: How it works...
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'When the user prevents an AIR for iOS app from accessing location data, `GeolocationEvent.UPDATE`
    events cease and `StatusEvent.STATUS` is dispatched from the `Geolocation` object.
    It is therefore possible to determine when access to location data has been revoked
    by simply listening for the `STATUS` event:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户阻止AIR for iOS应用程序访问位置数据时，`GeolocationEvent.UPDATE`事件将停止，并且从`Geolocation`对象发出`StatusEvent.STATUS`。因此，只需监听`STATUS`事件即可确定何时撤销对位置数据的访问：
- en: '[PRE15]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'A final check is performed within the `statusUpdated()` handler:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在`statusUpdated()`处理程序中执行最终检查：
- en: '[PRE16]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In this method, we query the `StatusEvent` object's `code` property. If it has
    a string value of `Geolocation.Muted`, then we know that access to the geolocation
    data is no longer available.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方法中，我们查询`StatusEvent`对象的`code`属性。如果它的字符串值为`Geolocation.Muted`，那么我们知道不再可以访问地理位置数据。
- en: Finally, although it wasn't used in this recipe's example, you can also access
    the `Geolocation.muted` property to determine if geolocation data is available.
    When a newly installed app is launched for the first time, `muted` will be set
    to `true` until the user grants permission from the native iOS dialog.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，尽管这个示例中没有使用，但你也可以访问`Geolocation.muted`属性以确定地理位置数据是否可用。当一个新安装的应用程序首次启动时，`muted`将被设置为`true`，直到用户从原生iOS对话框中授予权限。
- en: More information regarding `flash.events.StatusEvent` can be found in Adobe
    Community Help.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 关于`flash.events.StatusEvent`的更多信息可以在Adobe社区帮助中找到。
- en: See also
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: '*Determining your current location*'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*确定你的当前位置*'
- en: Responding to accelerometer changes
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 响应加速度计变化
- en: The accelerometer provides access to data that represents the device's location
    or movement along a three-dimensional axis. When motion is detected, it is returned
    as data, which can be accessed by ActionScript.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 加速度计提供了访问表示设备在三维轴上位置或移动的数据。当检测到运动时，它作为数据返回，可以通过ActionScript访问。
- en: This recipe will show you how to take advantage of the accelerometer found in
    iOS devices.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱将向你展示如何利用iOS设备中发现的加速度计。
- en: Getting ready
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: An FLA has been provided as a starting point.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 已提供一个FLA文件作为起点。
- en: Open `chapter9\recipe4\recipe.fla` from the book's accompanying code bundle
    into Flash Professional.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 将书附带代码包中的`chapter9\recipe4\recipe.fla`文件打开到Flash Professional中。
- en: You will find five dynamic text fields positioned on the stage. Below them is
    a movie clip with an instance name of `arrow`. We will populate each text field
    with data retrieved from the device's accelerometer and rotate the movie clip
    to reflect physical changes in the device's orientation.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在舞台上找到五个动态文本字段，它们下方是一个实例名为`arrow`的电影剪辑。我们将用从设备加速度计检索到的数据填充每个文本字段，并将电影剪辑旋转以反映设备方向的物理变化。
- en: Also notice the stage's dimensions are set to 480x320\. For this recipe, landscape
    orientation will be used.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，请注意舞台的尺寸设置为480x320。对于这个食谱，将使用横屏方向。
- en: How to do it...
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Perform these steps to listen for and respond to accelerometer changes:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以监听和响应加速度计变化：
- en: Create a document class and name it `Main`.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个文档类并将其命名为`Main`。
- en: Add the following two import statements and a member variable of type `Accelerometer:`
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下两个导入语句和一个类型为`Accelerometer`的成员变量：
- en: '[PRE17]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Within the constructor, instantiate an `Accelerometer` object and listen for
    updates from it:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在构造函数中，实例化一个`Accelerometer`对象并监听它的更新：
- en: '[PRE18]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Finish by writing an event handler that will obtain and use the updated accelerometer
    data:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，编写一个事件处理程序以获取和使用更新的加速度计数据：
- en: '[PRE19]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Save the class file as `Main.as`.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将类文件保存为`Main.as`。
- en: Also, save your FLA and then publish it. Install the app to your device and
    launch it.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，保存你的FLA文件，然后发布它。将应用安装到你的设备上并启动它。
- en: As the device's motion sensor detects activity, the text fields will update.
    Holding the device in front of yourself and tilting it clockwise and counter-clockwise
    will update the rotation of the `arrow` movie clip, ensuring that it always points
    upwards.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 当设备的运动传感器检测到活动时，文本字段将更新。将设备放在自己面前并顺时针和逆时针倾斜将更新`arrow`电影剪辑的旋转，确保它始终向上指。
- en: How it works...
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'We accessed the accelerometer''s data by creating an instance of the `Accelerometer`
    class and listening for it dispatching the `AccelerometerEvent.UPDATE` event:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过创建`Accelerometer`类的实例并监听它分发`AccelerometerEvent.UPDATE`事件来访问加速度计的数据：
- en: '[PRE20]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The frequency with which `UPDATE` events are received can be set by calling
    the `Accelerometer.setRequestedUpdateInterval()` method. You can see this in the
    earlier code where we requested an update every 50 milliseconds. This only acts
    as a hint to the device, meaning the actual time between updates may be greater
    or smaller than your request. Omitting this call will result in the device using
    a default update interval. The default interval can be anything ranging from milliseconds
    to seconds depending on the device's hardware capabilities.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 接收`UPDATE`事件的频率可以通过调用`Accelerometer.setRequestedUpdateInterval()`方法来设置。您可以在之前的代码中看到这一点，我们请求每50毫秒更新一次。这仅作为对设备的提示，意味着实际更新之间的时间可能大于或小于您的请求。省略此调用将导致设备使用默认的更新间隔。默认间隔可以是毫秒到秒之间的任何值，具体取决于设备的硬件能力。
- en: 'The `UPDATE` event is an `AccelerometerEvent` object and provides access to
    the following properties:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`UPDATE`事件是一个`AccelerometerEvent`对象，并提供访问以下属性：'
- en: '`accelerationX` —Acceleration along the x-axis. When the device is upright,
    the x-axis runs from left to right. Acceleration is positive if the device is
    moved to the right.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`accelerationX` —沿x轴的加速度。当设备直立时，x轴从左到右运行。如果设备向右移动，加速度为正。'
- en: '`accelerationY`—Acceleration along the y-axis. When the device is upright,
    the y-axis runs from bottom to top. Acceleration is positive if the device is
    moved upwards.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`accelerationY`—沿y轴的加速度。当设备直立时，y轴从底部到顶部运行。如果设备向上移动，加速度为正。'
- en: '`accelerationZ`—Acceleration along the z-axis. The acceleration is positive
    if the device is moved so that its face points upwards. Acceleration is negative
    if it faces towards the ground.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`accelerationZ`—沿z轴的加速度。如果设备移动到使其面向上方的位置，加速度为正。如果设备面向地面，加速度为负。'
- en: '`timestamp` —The number of milliseconds that have elapsed since the app was
    launched.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestamp` —自应用程序启动以来经过的毫秒数。'
- en: Tip
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Acceleration is measured in "g" with 1g being the standard acceleration due
    to gravity, which is approximately 9.8 meters per second squared.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 加速度以“g”为单位进行测量，其中1g是标准重力加速度，大约为每秒9.8米。
- en: 'We obtain these properties within the `accUpdated()` handler and write them
    to our dynamic text fields:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在`accUpdated()`处理程序中获取这些属性，并将它们写入我们的动态文本字段：
- en: '[PRE21]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Additionally, the `accelerometerX` and `accelerometerY` properties are used
    to calculate the angle at which the device is being held (with the screen facing
    you). This is used to update the rotation of the `arrow` movie clip. The following
    is the code that does this:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`accelerometerX`和`accelerometerY`属性用于计算设备被持有的角度（屏幕朝向您）。这用于更新`arrow`电影剪辑的旋转。以下是执行此操作的代码：
- en: '[PRE22]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Knowing the angle, at which the device is being tilted, is useful for many applications.
    In particular games, where tilting the device may be used to move a character
    along a platform or simulate the movement of a steering wheel.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 知道设备倾斜的角度对于许多应用很有用。特别是游戏，其中倾斜设备可能用于在平台上移动角色或模拟方向盘的运动。
- en: Finally, within the constructor, note the use of the static read-only property
    `Accelerometer.isSupported` to check for the availability of an accelerometer.
    The accelerometer is supported on all existing iOS devices but isn't guaranteed
    for future devices. It is therefore a good practice to check for support and is
    also beneficial when writing cross-platform code.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在构造函数中，注意使用静态只读属性`Accelerometer.isSupported`来检查加速度计的可用性。加速度计在所有现有的iOS设备上都受支持，但未来设备不一定保证。因此，检查支持是一个好习惯，并且在编写跨平台代码时也有益。
- en: There's more...
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The following is some more information regarding the accelerometer and how to
    work with its data.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些有关加速度计及其数据处理的更多信息。
- en: Orientation and the accelerometer axes
  id: totrans-216
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方向和加速度计轴
- en: The accelerometer axes are re-oriented with the device's display rather than
    the physical orientation of the device itself. In other words, when auto-orientation
    is active, the y-axis will be vertical when the display's content is being viewed
    in a normal up-right position. This is true for both apps that default to a portrait
    aspect-ratio and apps that default to a landscape aspect-ratio. If however, auto-orientation
    is not active, then the accelerometer axes will not be re-oriented when the device
    is rotated.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 加速度计轴的重新定向与设备的显示方向而不是设备的物理方向一致。换句话说，当自动方向检测处于活动状态时，y轴将垂直，当在正常直立位置查看显示内容时。这对默认为纵向宽高比的应用程序和默认为横向宽高比的应用程序都适用。然而，如果自动方向检测未激活，则当设备旋转时，加速度计轴不会重新定向。
- en: Determining device orientation
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 确定设备方向
- en: 'Data from the accelerometer is affected by gravity and can be useful to determine
    the device''s current orientation. The following are the values to check for:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 加速度计的数据受重力影响，可用于确定设备的当前方向。以下是需要检查的值：
- en: '`accelerationX`> 0.5—Rotated 90 degrees counter clockwise'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`accelerationX` > 0.5—逆时针旋转90度'
- en: '`accelerationX`< -0.5—Rotated 90 degrees clockwise'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`accelerationX` < -0.5—顺时针旋转90度'
- en: '`accelerationY`> 0.5—Normal upright position'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`accelerationY` > 0.5—正常直立位置'
- en: '`accelerationY`< -0.5—Upside down'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`accelerationY` < -0.5—颠倒'
- en: '`accelerationZ`> 0.5—Face up'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`accelerationZ` > 0.5—向上面对'
- en: '`accelerationZ`< -0.5—Face down'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`accelerationZ` < -0.5—向下面对'
- en: This provides an alternative to determining orientation by listening for `StageOrientationEvent`
    objects being dispatched from the stage. In addition, using the acceleration data
    makes it possible to determine whether the device's screen display is facing upwards
    or towards the ground.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 这为通过监听从舞台派发的 `StageOrientationEvent` 对象来确定方向提供了另一种方法。此外，使用加速度数据使得确定设备屏幕显示是向上还是朝向地面成为可能。
- en: Applying a low-pass filter
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用低通滤波器
- en: Data from the accelerometer is affected by both the effect of gravity and sudden
    changes in motion. If you are using this data to detect the device's orientation,
    then you should isolate the gravity component from the data by applying a low-pass
    filter.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 加速度计的数据受重力和运动突然变化的影响。如果您使用这些数据来检测设备的方向，那么您应该通过应用低通滤波器从数据中隔离重力分量。
- en: 'This can be achieved by smoothing out the data over time. To do this, start
    by creating a filtering factor and three member variables to store the previous
    value for each axis:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过随时间平滑数据来实现。为此，首先创建一个滤波因子和三个成员变量来存储每个轴的先前值：
- en: '[PRE23]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now in response to each `AccelerometerEvent.UPDATE`, apply a low-pass filter
    to keep only the gravity component from each axis:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 现在针对每个 `AccelerometerEvent.UPDATE` 事件，应用低通滤波器以保留每个轴的仅重力分量：
- en: '[PRE24]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Essentially this code generates a value for each axis that uses 10 percent of
    its current data and 90 percent of the previously filtered data. This will ensure
    that data responds slowly to sudden and short-lived changes in motion.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，此代码为每个轴生成一个值，该值使用其当前数据的10%和先前过滤数据的90%。这将确保数据对突然和短暂的运动变化响应缓慢。
- en: Applying a high-pass filter
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用高通滤波器
- en: Many types of applications use accelerometer data to detect sudden changes in
    motion. A high-pass filter can be used to isolate the portion of the data that
    is caused by sudden changes in motion.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 许多类型的应用程序使用加速度计数据来检测运动的突然变化。高通滤波器可以用来隔离由运动突然变化引起的数据部分。
- en: 'Similar to the implementation of a low-pass filter, use a filtering factor
    plus three member variables to store the previous value for each axis. Then in
    response to each `AccelerometerEvent.UPDATE`, apply the filter:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 与低通滤波器的实现类似，使用一个滤波因子和三个成员变量来存储每个轴的先前值。然后在每个 `AccelerometerEvent.UPDATE` 事件响应中应用过滤器：
- en: '[PRE25]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: In this example, a low-pass filter value is calculated for each axis and subtracted
    from the current value. Doing so keeps the sudden changes in motion while removing
    the gravity component.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，为每个轴计算一个低通滤波器值，并将其从当前值中减去。这样做可以保留运动的突然变化，同时移除重力分量。
- en: The "muted" property
  id: totrans-239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: “muted”属性
- en: The `Accelerometer` class has a static read-only property named `muted.` It
    is used to determine if a user has granted the app permission to access accelerometer
    data. This property isn't required for iOS as there is no way, at present, to
    deny an app access to the accelerometer.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '`Accelerometer` 类有一个名为 `muted` 的静态只读属性。它用于确定用户是否已授予应用程序访问加速度计数据的权限。在 iOS 中，此属性不是必需的，因为目前没有方法拒绝应用程序访问加速度计。'
- en: See also
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: '*Setting the default aspect ratio, [Chapter 8](ch08.html "Chapter 8. Screen
    Resolution and Orientation Changes")*'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*设置默认纵横比，[第8章](ch08.html "第8章. 屏幕分辨率和方向变化")*'
- en: '*Enabling auto-orientation, [Chapter 8](ch08.html "Chapter 8. Screen Resolution
    and Orientation Changes")*'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*启用自动方向，[第8章](ch08.html "第8章. 屏幕分辨率和方向变化")*'
- en: '*Responding to orientation changes, [Chapter 8](ch08.html "Chapter 8. Screen
    Resolution and Orientation Changes")*'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*响应方向变化，[第8章](ch08.html "第8章. 屏幕分辨率和方向变化")*'
- en: Detecting a shake
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测摇晃
- en: A common use of the accelerometer is to detect a shake and this has become a
    popular method of interaction in games and applications. For example, many of
    the apps that come with iOS allow the user to perform an undo by shaking the device.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 加速度计的常见用途是检测摇晃，这已成为游戏和应用程序中的一种流行交互方法。例如，许多随iOS提供的应用程序允许用户通过摇晃设备来执行撤销操作。
- en: This recipe will show you how to determine if the user is shaking their device
    by examining the data coming from the accelerometer.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方将向您展示如何通过检查来自加速度计的数据来确定用户是否在摇晃设备。
- en: Getting ready
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: From the book's accompanying code bundle, open `chapter9\recipe5\recipe.fla`
    into Flash Professional.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 从本书的配套代码包中，将 `chapter9\recipe5\recipe.fla` 打开到 Flash Professional 中。
- en: You will find a movie clip named `shake` sitting in the center of the stage.
    Its timeline consists of two key-frames.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在舞台中心找到一个名为 `shake` 的电影剪辑。其时间轴由两个关键帧组成。
- en: We will write some ActionScript that will move the clip in response to changes
    along the device's three axes. When the motion is pronounced, we will indicate
    to the user that a shake has been detected by jumping to the movie clip's second
    frame.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将编写一些 ActionScript 代码，以响应设备三个轴上的变化来移动剪辑。当运动明显时，我们将通过跳转到电影剪辑的第二帧来向用户指示已检测到摇晃。
- en: The stage uses a landscape aspect ratio for this recipe.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 本配方中舞台使用的是横向纵横比。
- en: How to do it...
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现...
- en: 'Perform the following steps to detect a shake:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤来检测摇晃：
- en: Create a document class and name it `Main.`
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个文档类并命名为 `Main.`
- en: 'Import the classes required to work with the accelerometer and add the following
    member variables:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入与加速度计一起工作的类，并添加以下成员变量：
- en: '[PRE26]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Initialize the member variables and the `shake` movie clip. Also, instantiate
    an `Accelerometer` object and listen for it dispatching `UPDATE` events:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化成员变量和 `shake` 电影剪辑。同时，实例化一个 `Accelerometer` 对象并监听它派发的 `UPDATE` 事件：
- en: '[PRE27]'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Add a handler for the `UPDATE` event:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加 `UPDATE` 事件的处理器：
- en: '[PRE28]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Save the class file and when prompted name it `Main.as`.
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存类文件，并在提示时将其命名为 `Main.as`。
- en: Now save the FLA and publish it. Test the app on your device.
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在保存 FLA 文件并发布它。在您的设备上测试应用程序。
- en: Gently shaking the device will displace the movie clip from the center of the
    screen. A more violent motion will also change its appearance indicating that
    a sufficiently large shake has been detected.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 轻轻摇晃设备会将电影剪辑从屏幕中心移开。更剧烈的动作也会改变其外观，表明检测到了足够大的摇晃。
- en: How it works...
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This example compares the current acceleration data with the previous to see
    if a sufficiently large change has occurred.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例将当前加速度数据与之前的数据进行比较，以查看是否发生了足够大的变化。
- en: 'The previous acceleration data is stored within the `prevX, prevY`, and `prevZ`
    member variables and is compared against the current data to determine the change
    for each axis:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个加速度数据存储在 `prevX, prevY` 和 `prevZ` 成员变量中，并与当前数据比较以确定每个轴的变化：
- en: '[PRE29]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'If the change in any one of the three axes is large enough, then it is safe
    to assume that the device is being shaken. This information is fed back to the
    user by moving to the second frame of the `shake` movie clip. The following is
    the code that does this:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 如果三个轴中的任何一个轴的变化足够大，那么可以安全地假设设备正在被摇晃。通过将 `shake` 电影剪辑移动到第二帧，将此信息反馈给用户。以下是实现此功能的代码：
- en: '[PRE30]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The `THRESHOLD` constant simply dictates the amount of change that needs to
    take place in any of the axes for the motion to be deemed a shake. Lowering this
    value will reduce the effort required by the user to trigger a shake, while increasing
    it will make it more difficult.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '`THRESHOLD` 常量简单地规定了任何轴上需要发生的变化量，以便将运动视为摇晃。降低此值将减少用户触发摇晃所需的努力，而增加它将使其更难。'
- en: 'To provide greater visual feedback, we also update the `x, y`, and `z` positions
    of the `shake` movie clip in response to changes from the accelerometer. The more
    violent the shaking motion, the more the clip is displaced from its original starting
    position:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提供更大的视觉反馈，我们还根据加速度计的变化更新了`shake`电影剪辑的`x, y`和`z`位置。摇晃动作越剧烈，剪辑与其原始起始位置的距离就越大：
- en: '[PRE31]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The `startX` and `startY` member variables used are initialized within the constructor
    and are set to the `shake` movie clip's original position.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 在构造函数中初始化并设置为`shake`电影剪辑原始位置的`startX`和`startY`成员变量。
- en: The majority of the work in this example is performed within the `accUpdated()`
    event handler, which is called each time `AccelerometerEvent.UPDATE` is dispatched
    from the `Accelerometer` object. To ensure the app is responsive, a call is made
    to the `setRequestedUpdateInterval()` method requesting frequent updates.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，大部分工作是在`accUpdated()`事件处理程序中完成的，该处理程序在每次从`Accelerometer`对象发出`AccelerometerEvent.UPDATE`时被调用。为了确保应用响应，会调用`setRequestedUpdateInterval()`方法请求频繁更新。
- en: There's more...
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: Let us look at some options to further improve this recipe's example.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一些选项，以进一步改进这个示例的配方。
- en: Checking multiple axes
  id: totrans-278
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查多个轴
- en: 'We checked for a large enough change in only one of the axes before deciding
    that the user was shaking the device. Another approach is to wait for a significant
    change in two of the three axes. The code for this would look as follows:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 在决定用户正在摇晃设备之前，我们只检查了一个轴的足够大的变化。另一种方法是等待三个轴中的两个轴有显著变化。这个代码看起来如下：
- en: '[PRE32]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: For multiple axes you may want to reduce the `THRESHOLD` value slightly to compensate
    for the fact that the user must make a more exaggerated motion to initiate a shake.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 对于多个轴，你可能需要稍微降低`THRESHOLD`值，以补偿用户必须做出更夸张的动作才能启动摇晃的事实。
- en: Smoothing accelerometer data
  id: totrans-282
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 平滑加速度计数据
- en: You may have noticed that even when holding the device still, the `shake` movie
    clip shudders slightly. Accelerometers aren't perfectly accurate and the data
    returned will contain some noise.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，即使手持设备不动，`shake`电影剪辑也会轻微颤抖。加速度计并不完全准确，返回的数据将包含一些噪声。
- en: This noise can be reduced by applying a high-pass filter to your data over time
    and is detailed in the *Responding to accelerometer changes* recipe. Try experimenting
    with the filtering factor and the threshold constant until you find values that
    give you a result you are happy with.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 这种噪声可以通过在数据上应用高通滤波器随时间减少，这在*响应加速度计变化*配方中有详细说明。尝试调整滤波因子和阈值常数，直到找到让你满意的结果。
- en: See also
  id: totrans-285
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: '*Responding to accelerometer changes*'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*响应加速度计变化*'
