- en: Chapter 12. iOS Deployment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第12章 iOS部署
- en: Now that we've covered a lot of what is needed to make a game, we can start
    talking about deploying your game to specific devices. In this chapter we'll modify
    the default host project for iOS in order to get our game working on it. For this,
    we'll make a copy of the sample host project that comes with Moai SDK and go through
    all the things you need to get your own game running.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经涵盖了制作游戏所需的大部分内容，我们可以开始讨论将你的游戏部署到特定设备上了。在本章中，我们将修改默认的iOS主机项目，以便让我们的游戏在其上运行。为此，我们将复制随Moai
    SDK提供的示例主机项目，并逐一介绍你需要做的一切，以便让你的游戏运行起来。
- en: Xcode project
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Xcode项目
- en: First of all, if you dream about your game making it to the iTunes Store, you're
    going to have to get the latest Xcode and iOS SDK from Apple. You get access to
    them by registering to Apple's developer website ([https://developer.apple.com/](https://developer.apple.com/)).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，如果你梦想你的游戏能进入iTunes Store，你将不得不从Apple获取最新的Xcode和iOS SDK。你可以通过注册Apple的开发者网站([https://developer.apple.com/](https://developer.apple.com/))来获取访问权限。
- en: If you don't have any experience using Xcode, it's suggested that you read a
    quick tutorial, since that's out of the scope of this book. A few basic things
    you should know about Xcode are how to handle source files, how to manage targets,
    and some basic Objective-C in order to modify the host to fit your game.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有使用Xcode的经验，建议你阅读一个快速教程，因为那超出了本书的范围。关于Xcode，你应该知道的一些基本事情是如何处理源文件，如何管理目标，以及一些基本的Objective-C，以便修改主机以适应你的游戏。
- en: Go ahead and open the Xcode project that is provided with the Moai SDK download.
    It's located at `hosts/ios/moai.xcodeproject`. If you use the project from that
    location, it's already configured to use the Moai SDK static libraries in `lib/ios`,
    but if you move it, you'll need to fix the corresponding paths inside the project
    configuration. We'll see how to do this soon.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 打开随Moai SDK下载提供的Xcode项目。它位于`hosts/ios/moai.xcodeproject`。如果你使用该位置的项目，它已经配置为使用`lib/ios`中的Moai
    SDK静态库，但如果你移动它，你需要修复项目配置中的相应路径。我们很快就会看到如何做这件事。
- en: The host
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主机
- en: All the code for the iOS-specific host can be found inside the `Classes` folder.
    If you take a close look at them, you'll easily understand what they do. Basically
    they set up an OpenGL view, register all input methods to AKU, and configure other
    services that you may find handy (or that you can remove if you don't want them).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 所有iOS特定主机的代码都可以在`Classes`文件夹内找到。如果你仔细查看它们，你会很容易理解它们的作用。基本上，它们设置了一个OpenGL视图，将所有输入方法注册到AKU，并配置其他你可能觉得有用的服务（或者如果你不想使用它们，可以移除）。
- en: There is another folder named `Resources` (that contains icons), which is where
    the compiled source will go (inside another folder called `build`).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 另有一个名为`Resources`的文件夹（其中包含图标），编译后的源文件将放在那里（在另一个名为`build`的文件夹内）。
- en: You'll see that, by default, the `moai-target` file and the `lua` folder are
    displayed in red. The reason for that is that during the build, a script runs
    and reads the content of `moai-target` in `Resources/build` to identify all the
    Lua source code for our game. After finding it, the script copies every directory
    referenced by `moai-target` into the `lua` folder (the files also get marked as
    read-only to remind you that they should not be edited, since they'll be deleted
    during the next build). The files inside the `lua` folder are included in the
    application bundle, so that they can be accessed when packing it for deployment.
    Take a look at `MoaiAppDelegate.mm`, where the code for calling `main.lua` to
    start your game is located. If you want to use a different entry point for `main.lua`,
    you can do it there.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到，默认情况下，`moai-target`文件和`lua`文件夹都显示为红色。原因是，在构建过程中，一个脚本会运行并读取`Resources/build`中`moai-target`的内容，以识别我们游戏的全部Lua源代码。找到后，脚本会将`moai-target`中引用的每个目录复制到`lua`文件夹中（文件也被标记为只读，以提醒你它们不应该被编辑，因为它们将在下一次构建时被删除）。`lua`文件夹内的文件包含在应用程序包中，以便在打包部署时可以访问它们。看看`MoaiAppDelegate.mm`，那里存放着调用`main.lua`以启动游戏的代码。如果你想为`main.lua`使用不同的入口点，你可以在那里做到。
- en: 'In the `moai-target` file, you should include all the code and asset sources
    for your game, one per line. For example:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在`moai-target`文件中，你应该按行包含你游戏的全部代码和资源源文件。例如：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If there are special dependencies on a module that you're installing (check
    `samples/iphone/app-apsalar` for an example), you can use a file called `moai-target-ext`
    to define them. The script will check for this file inside each folder that you
    define in `moai-target` and recursively copy all the contents in it as well.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在安装的模块有特殊的依赖项（以 `samples/iphone/app-apsalar` 为例），你可以使用一个名为 `moai-target-ext`
    的文件来定义它们。脚本将检查你在 `moai-target` 中定义的每个文件夹内是否存在此文件，并将递归地复制其中的所有内容。
- en: This is crucial for getting things working with the host that is provided.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于与提供的宿主一起工作至关重要。
- en: You should also take a look at the `Frameworks` folder, which has all the static
    libraries and iOS frameworks needed to build our host.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你还应该看看 `Frameworks` 文件夹，其中包含构建我们的宿主所需的全部静态库和 iOS 框架。
- en: Running an example
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行示例
- en: Before starting to modify your game code, you should try to run the sample project.
    It already points to one of Moai SDK's samples, so it should be as easy as checking
    that the device in the Simulator and hitting **Build and Debug**.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始修改你的游戏代码之前，你应该尝试运行示例项目。它已经指向了 Moai SDK 的一个示例，所以它应该像检查模拟器中的设备并点击 **构建和调试**
    一样简单。
- en: If you see Moai SDK's logo rotating, you're good to go. If not, check if your
    Xcode configuration is OK, or join Moai SDK's forum and ask for help, detailing
    the errors you get.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看到 Moai SDK 的标志在旋转，那么你可以继续了。如果没有，请检查你的 Xcode 配置是否正确，或者加入 Moai SDK 的论坛寻求帮助，详细说明你遇到的错误。
- en: Running on an actual device requires you to understand (or at least hack into—who
    can understand it?) how to handle and set up Apple's provisioning profiles for
    development. This is carefully explained in the documentation that you can find
    at Apple's developer portal ([https://developer.apple.com/devcenter/ios/index.action](https://developer.apple.com/devcenter/ios/index.action)).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际设备上运行需要你理解（或者至少能够破解——谁能理解它呢？）如何处理和设置苹果的开发者配置文件。这在苹果开发者门户的文档中有详细说明，你可以在这里找到（[https://developer.apple.com/devcenter/ios/index.action](https://developer.apple.com/devcenter/ios/index.action)）。
- en: Setting up our own project
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置我们自己的项目
- en: Since the Xcode project sample that comes with Moai SDK includes a bunch of
    things that we may not need, it's recommended to do a clean up. We'll start by
    copying the whole project somewhere in our hard drive. If you have been following
    all the chapters and have extracted all the code, a good place to put our project
    is in the same folder as the code samples, so that we can point at them and have
    our *Concentration* game available on iOS. You can use the source code of [Chapter
    7](ch07.html "Chapter 7. Concentration Gameplay"), *Concentration Gameplay*.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Moai SDK 附带的自定义 Xcode 项目示例包含了一些我们可能不需要的东西，建议进行清理。我们将首先将整个项目复制到我们的硬盘上的某个位置。如果你一直跟随所有章节并提取了所有代码，将我们的项目放在代码示例相同的文件夹中是个不错的选择，这样我们就可以指向它们，并在
    iOS 上拥有我们的 *Concentration* 游戏。你可以使用 [第 7 章](ch07.html "第 7 章。集中注意力游戏") 的 *集中注意力游戏*
    的源代码。
- en: Either way, if you downloaded the book's source code, you'll find the iOS project
    and the *Concentration* gameplay implementation in the code for this chapter.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 无论哪种方式，如果你下载了本书的源代码，你将在本章的代码中找到 iOS 项目和 *Concentration* 游戏实现。
- en: Now that we have both the Xcode project and the *Concentration* game in place,
    double-click on `moai.xcodeproj` in order to open Xcode and start configuring
    it.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有了 Xcode 项目和 *Concentration* 游戏，双击 `moai.xcodeproj` 以打开 Xcode 并开始配置它。
- en: It may take a while to load. Xcode performs file indexing the first time you
    open a project. Don't worry, that won't happen on subsequent loads (well, except
    when it decides to index randomly).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能需要一些时间来加载。Xcode 在第一次打开项目时执行文件索引。不用担心，后续加载时不会发生这种情况（嗯，除非它决定随机索引）。
- en: If you run it now, it will probably fail. Learn to take your time to read and
    understand the errors; that's the only way to solve them.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在运行它，可能会失败。学会花时间阅读和理解错误；这是解决问题的唯一方法。
- en: Now, let's fix the project step by step.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们一步一步地修复项目。
- en: Pointing to the correct source code
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指向正确的源代码
- en: The default project points to one of Moai SDK's examples using a relative path.
    Since we moved the project, that path is now broken. We need to make everything
    point to our own code.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 默认项目使用相对路径指向 Moai SDK 的一个示例。由于我们移动了项目，这个路径现在已损坏。我们需要让所有内容都指向我们自己的代码。
- en: '![Pointing to the correct source code](img/5064_12_01.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![指向正确的源代码](img/5064_12_01.jpg)'
- en: In order to do this, expand the **Resources** folder, then the **build** folder,
    and finally click on **moai-target**.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，展开**资源**文件夹，然后是**构建**文件夹，最后点击**moai-target**。
- en: 'The content of `moai-target` should be as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`moai-target`的内容应该是这样的：'
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`moai-target` is pointing to the `anim-basic` sample using relative paths.
    So, in order to run our own game, we need it to point to the correct location.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`moai-target`正使用相对路径指向`anim-basic`示例。因此，为了运行我们自己的游戏，我们需要让它指向正确的位置。'
- en: 'In this example, we''ve moved the game''s code to a folder called `concentration-code`,
    so that''s where we will point to. The final `moai-target` should look as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将游戏代码移动到了一个名为`concentration-code`的文件夹中，所以我们将指向那里。最终的`moai-target`应该如下所示：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Pointing to the correct source code](img/5064_12_02.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![指向正确的源代码](img/5064_12_02.jpg)'
- en: Fixing source paths
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修复源路径
- en: Since we moved the Xcode project from its original location, now we need to
    fix relative paths around the it.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将 Xcode 项目从原始位置移动了，现在我们需要修复围绕它的相对路径。
- en: Collapse the **Resources** folder and expand **classes**. You'll see that **ParticlePresets.cpp**
    and **ParticlePresets.h** are in red. They can be found in `moai-sdk/hosts/src/`
    (`moai-sdk` being the folder where you installed Moai SDK in the initial chapters).![Fixing
    source paths](img/5064_12_03.jpg)
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 收起**资源**文件夹并展开**类**。您会看到**ParticlePresets.cpp**和**ParticlePresets.h**以红色显示。它们可以在`moai-sdk/hosts/src/`中找到（`moai-sdk`是您在初始章节中安装
    Moai SDK 的文件夹）。![修复源路径](img/5064_12_03.jpg)
- en: Select **ParticlePresets.cpp** and **ParticlePresets.h** and remove them.![Fixing
    source paths](img/5064_12_04.jpg)
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**ParticlePresets.cpp**和**ParticlePresets.h**并删除它们。![修复源路径](img/5064_12_04.jpg)
- en: Now right-click on the **Classes** folder and choose **Add Files to "moai"**.
    Go to `moai-sdk/hosts/src/` and pick both **ParticlePresets.cpp** and **ParticlePresets.h**.
    After you accept, they should be in the folder and should not be displayed in
    red.![Fixing source paths](img/5064_12_05.jpg)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在右键单击**类**文件夹，选择**将文件添加到"moai"**。转到`moai-sdk/hosts/src/`并选择**ParticlePresets.cpp**和**ParticlePresets.h**。接受后，它们应该在该文件夹中，并且不应以红色显示。![修复源路径](img/5064_12_05.jpg)
- en: Fixing include paths
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修复包含路径
- en: The next thing we need to do is fix the relative include paths.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步我们需要做的是修复相对包含路径。
- en: To do this, click on the top of the folder tree, where it says **moai** and
    the icon for the Xcode application is displayed. Then, under the **PROJECT** section
    (not **TARGETS**), select **moai**.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要这样做，单击文件夹树顶部的**moai**，其中显示了 Xcode 应用程序的图标。然后，在**项目**部分（不是**目标**部分）下选择**moai**。
- en: 'There are a couple of things to fix here:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几个问题需要修复：
- en: Search for the setting named **Header search paths**; it should read **../../include/**.
    If you double-click on it, a popup will be displayed and you can then double-click
    the include path and change it to your own include path, which is located at `moai-sdk/include/`.![Fixing
    include paths](img/5064_12_06.jpg)
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索名为**头文件搜索路径**的设置；它应该读取**../../include/**。如果您双击它，将显示一个弹出窗口，然后您可以双击包含路径并将其更改为您自己的包含路径，该路径位于`moai-sdk/include/`。![修复包含路径](img/5064_12_06.jpg)
- en: Search for **Other Linker Flags**, and change **../../../lib/ios/universal/libmoai-ios-tapjoy.a**
    to the correct location (`moai-sdk/lib/ios/universal/libmoai-ios-tapjoy.a`). If
    Xcode still can't find this file, try using an absolute path (in my case it is
    `/Users/nictuku/moai-sdk/lib/ios/universal/libmoai-ios-tapjoy.a`).![Fixing include
    paths](img/5064_12_07.jpg)
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索**其他链接器标志**，将**../../../lib/ios/universal/libmoai-ios-tapjoy.a**更改为正确的位置（`moai-sdk/lib/ios/universal/libmoai-ios-tapjoy.a`）。如果
    Xcode 仍然找不到此文件，请尝试使用绝对路径（在我的情况下是`/Users/nictuku/moai-sdk/lib/ios/universal/libmoai-ios-tapjoy.a`）。![修复包含路径](img/5064_12_07.jpg)
- en: Search for **Library Search Paths** and change **../../../lib/ios/universal**
    to `moai-sdk/lib/ios/universal`.![Fixing include paths](img/5064_12_08.jpg)
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索**库搜索路径**，将**../../../lib/ios/universal**更改为`moai-sdk/lib/ios/universal`![修复包含路径](img/5064_12_08.jpg)
- en: Now, click on **MoaiSample** under the **TARGETS** section. Double-click on
    **Library Search Paths** and replace the remaining relative paths in the same
    way we changed the previous ones.![Fixing include paths](img/5064_12_09.jpg)
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在**目标**部分下单击**MoaiSample**。双击**库搜索路径**，并以相同的方式替换剩余的相对路径。![修复包含路径](img/5064_12_09.jpg)
- en: Fixing linked libraries
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修复链接库
- en: The next thing we need to fix is the location for all the linked libraries.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步我们需要修复的是所有链接库的位置。
- en: '![Fixing linked libraries](img/5064_12_10.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![修复链接库](img/5064_12_10.jpg)'
- en: Expand the **Frameworks** folder and identify all the libraries that show up
    in red.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 展开框架文件夹，并识别所有显示为红色的库。
- en: You can find them in `moai-sdk/bin/ios/universal`. Remove the ones in red, and
    add all the files in that path, as we did with the `ParticlePresets` files.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在`moai-sdk/bin/ios/universal`中找到它们。删除红色中的那些，并添加该路径下的所有文件，就像我们处理`ParticlePresets`文件一样。
- en: You should end up with the same files in the directory but they should not be
    displayed in red anymore.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该最终在目录中拥有相同的文件，但它们不应再以红色显示。
- en: Now, if you hit **Run**, the build should succeed and you should see our *Concentration*
    game on the iOS Simulator.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你点击**运行**，构建应该成功，你应该在iOS模拟器上看到我们的**专注力**游戏。
- en: '![Fixing linked libraries](img/5064_12_11.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![修复链接库](img/5064_12_11.jpg)'
- en: But wait! It's not being displayed correctly, and touches are not detected!
    That's because of the way we configured our project locally. So let's try to fix
    that.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 但等等！它没有被正确显示，触摸也没有被检测到！这是因为我们本地配置项目的方式。所以让我们尝试修复它。
- en: Going multi-platform
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跨平台开发
- en: The first thing we need to think about is how we are going to deal with different
    resolutions in our project. You could do a lot of fancy stuff in this regard,
    such as changing the UI given different sizes, or loading HD images if the resolution
    is higher than or equal to 1024 x 768 (or whatever you choose!), and so on. In
    this example we're going to keep it simple; we will just stretch everything so
    that it fits on the screen.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先需要考虑的是如何在项目中处理不同的分辨率。你可以在这方面做很多复杂的事情，比如根据不同的大小更改UI，或者在分辨率高于或等于1024 x 768（或你选择的任何值）时加载高清图像，等等。在这个例子中，我们将保持简单；我们只需将一切拉伸，使其适合屏幕。
- en: 'Open the `Concentration` project and change the following lines:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`Concentration`项目，并更改以下行：
- en: '[PRE3]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To the following:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 到以下：
- en: '[PRE4]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If you run the project now, it should show the stretched version of the game,
    but it still does not react to touches.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在运行项目，它应该显示游戏的拉伸版本，但它仍然不会对触摸做出反应。
- en: '![Going multi-platform](img/5064_12_12.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![跨平台开发](img/5064_12_12.jpg)'
- en: In order to fix this, edit `game.lua` and modify `processInput` to use `InputManager:getTouch`
    instead of `InputManager:position`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为了修复这个问题，编辑`game.lua`并修改`processInput`以使用`InputManager:getTouch`而不是`InputManager:position`。
- en: Where it says `x, y = InputManager:position ()`, you should replace that with
    `x, y = InputManager:getTouch ()`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在显示`x, y = InputManager:position ()`的地方，你应该将其替换为`x, y = InputManager:getTouch
    ()`。
- en: Now if you run your project, you'll be able to play our game.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果你运行你的项目，你将能够玩我们的游戏。
- en: '![Going multi-platform](img/5064_12_13.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![跨平台开发](img/5064_12_13.jpg)'
- en: But it looks stretched. You can learn how to make it work in landscape mode
    at Moai's wiki page ([http://getmoai.com/wiki/index.php?title=Setup_landscape_in_Moai_Games_For_iOS_Devices](http://getmoai.com/wiki/index.php?title=Setup_landscape_in_Moai_Games_For_iOS_Devices)).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 但看起来被拉伸了。你可以在Moai的维基页面上学习如何在横幅模式下使其工作（[http://getmoai.com/wiki/index.php?title=Setup_landscape_in_Moai_Games_For_iOS_Devices](http://getmoai.com/wiki/index.php?title=Setup_landscape_in_Moai_Games_For_iOS_Devices)）。
- en: Running on the device
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在设备上运行
- en: After all the steps we followed, the game should be able to run on a device.
    It should just be a matter of setting the correct **code sign** identities and
    changing the target device.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 经过我们采取的所有步骤后，游戏应该能够在设备上运行。这仅仅是一个设置正确的**代码签名**标识符和更改目标设备的问题。
- en: It would be great for you to try this now and ask for help from the Apple community
    or the Moai forum if you're lost, since setting up an Apple Developer account
    and certificates exceed the scope of this book.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在尝试这个操作会很好，如果你迷路了，可以向苹果社区或Moai论坛寻求帮助，因为设置苹果开发者账户和证书超出了本书的范围。
- en: Summary
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to modify the Xcode project for the iOS host
    in order to get it working with our own game. We fixed the relative paths that
    broke when we moved the project and set the resolution correctly.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何修改iOS宿主的Xcode项目，以便使其与我们的游戏一起工作。我们修复了在移动项目时中断的相对路径，并正确设置了分辨率。
- en: We know iOS is not the only platform around there. We'll talk about other platforms
    in the next chapter!
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道iOS不是唯一的平台。我们将在下一章讨论其他平台！
