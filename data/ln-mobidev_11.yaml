- en: Onboarding and Registration
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入职和注册
- en: In this chapter, we will focus on the onboarding and registration part of your
    app. It starts with the people that have downloaded the app from the Play Store
    or App Store. That is an important conversion already. Now they need to be converted
    into regular users of the app. That is not as easy as it sounds. Studies show
    that on average 20% of apps are used only once. There are many competing apps
    in Google Play Store or the App Store. A perfect onboarding strategy for your
    app is therefore a must have and it could heavily contribute to a good conversion.
    The first impression your users get of your app should be a good one. To make
    the conversion as smooth as possible, it is important to show what is in it for
    them. You should ask yourself why they should have to continue to use the app.
    From the very start, you have to help them to understand the added value of your
    app.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将专注于您应用的应用入职和注册部分。它始于从Play Store或App Store下载应用的人。这已经是一个重要的转化。现在他们需要成为应用的常规用户。这并不像听起来那么简单。研究表明，平均有20%的应用只使用一次。Google
    Play Store或App Store中有许多竞争应用。因此，为您的应用制定一个完美的入职策略是必不可少的，并且它可以极大地促进良好的转化。用户对您的应用的第一印象应该是好的。为了使转化尽可能顺利，重要的是要展示对他们有什么好处。你应该问问自己，为什么他们应该继续使用这个应用。从一开始，你必须帮助他们理解应用带来的附加价值。
- en: There are many reasons why we want a user to sign-up. One of them is that a
    known user is more valuable than an anonymous one, but registration may be a barrier.
    This is the case, in particular, when users need to sign-up right away on one
    of the first screens of the app they see. Since they have no clue yet what the
    app is all about, you could already lose a part of your audience there. The more
    you ask, the more difficult the process will be. This is something you can avoid
    by using various techniques. In this chapter, we will see how to lower the barrier
    for the onboarding process and how a social sign-in process can contribute to
    it. Another thing we will look at is sign-up and verification through SMS.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要用户注册的原因有很多。其中之一是已知用户比匿名用户更有价值，但注册可能成为障碍。特别是在用户需要立即在他们看到的第一个应用屏幕上注册的情况下。由于他们还没有弄清楚应用是关于什么的，你可能会在那里失去一部分观众。你要求得越多，过程就越困难。通过使用各种技术，你可以避免这种情况。在本章中，我们将看到如何降低入职过程的门槛，以及社交登录过程如何对此做出贡献。我们还将探讨通过短信进行注册和验证。
- en: To demonstrate this and other functionalities, we will create an app that uses
    the SDKs of Fabric and Firebase. We also will learn what we could do to improve
    app awareness and how a continuous onboarding flow could help you to get the best
    of both worlds. Such a flow will lower the barrier and it also will result in
    a rich user profile, as we will see later in this chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示这一点和其他功能，我们将创建一个使用Fabric和Firebase SDK的应用。我们还将了解我们可以做些什么来提高应用知名度，以及一个持续的入职流程如何帮助您获得两全其美的效果。这种流程将降低门槛，并且还会导致丰富的用户资料，正如我们将在本章后面看到的。
- en: 'In short, in this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，在本章中，我们将涵盖以下主题：
- en: See what user onboarding is all about and how we can improve conversions by
    lowering the barrier
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解用户入职是什么，以及我们如何通过降低门槛来提高转化率
- en: Learn about social sign-in using Facebook or Twitter
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解如何使用Facebook或Twitter进行社交登录
- en: See what the alternatives are, such as phone number sign-up, similar to what
    WhatsApp is doing
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 看看其他替代方案，例如类似WhatsApp的通过电话号码注册
- en: Find out how we can get the best of both worlds (a low barrier and rich data)
    using continuous onboarding
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解如何使用持续入职来获得两全其美的效果（低门槛和丰富数据）
- en: Investigate an app that demonstrates onboarding, including late onboarding
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调查一个展示入职（包括后期入职）的应用
- en: Learn how sharing and friend finding can help to improve app awareness and help
    in the onboarding process
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解分享和寻找朋友如何有助于提高应用知名度和帮助入职过程
- en: What is user onboarding all about?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户入职是什么？
- en: Onboarding begins where a potential user, who has just downloaded your app,
    starts your app for the first time. You will have to convince that user and make
    sure that he instantly will notice the app's benefits. You want to convert your
    potential user into an engaged and active user, and this process starts with the
    first view that your app displays. To accomplish this, the first impression of
    your app should be interesting from a visual perspective and it should explain
    why the user should use this app. One of the ways of doing this is to create an
    introduction view with one or multiple slides. Remember that on a mobile device
    there is limited space, so you need to keep it short and simple. It should clearly
    explain the why and the what of the app. How things exactly work is something
    for later.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 引导流程始于潜在用户首次下载并打开你的应用程序。你必须说服那个用户，并确保他立即会注意到应用程序的好处。你希望将潜在用户转化为积极参与的用户，而这个过程从应用程序显示的第一个视图开始。为了实现这一点，应用程序的第一印象在视觉上应该有趣，并且应该解释为什么用户应该使用这个应用程序。实现这一目标的一种方法是通过一个或多个幻灯片创建一个介绍视图。记住，在移动设备上空间有限，所以你需要保持简短和简单。它应该清楚地解释应用程序的“为什么”和“是什么”。具体如何操作留待以后再说。
- en: Show your users the benefits (the why) of your app before talking about its
    features (the what).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在谈论应用程序的功能（“是什么”）之前，先向用户展示应用程序的好处（“为什么”）。
- en: Show a maximum of three or four benefits. For example, they could explain how
    the user can integrate the app into his life and what values are provided by the
    app. Present one benefit at a time using a page slider or other technique. Be
    clear in your communication and try not to confuse the user. Use a consistent
    style, vocabulary, and approach to explain concepts. At a first view, the onboarding
    flow may look pretty obvious, but it apparently is not. Many apps, even the well-known
    ones, require you to sign-up on the first page with little to no explanation what
    the app is about. That may work well for the Facebook app with which almost everybody
    is familiar. It probably is not going to work for your app.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 展示最多三到四个好处。例如，它们可以解释用户如何将应用程序整合到他的生活中，以及应用程序提供了哪些价值。使用页面滑块或其他技术一次展示一个好处。在沟通中保持清晰，并尽量不使用户感到困惑。使用一致的风格、词汇和方式来解释概念。乍一看，引导流程可能看起来相当明显，但实际上并非如此。许多应用程序，即使是知名的应用程序，也要求用户在第一页注册，几乎没有解释应用程序是关于什么的。这可能对几乎每个人都熟悉的Facebook应用程序有效。这可能不适合你的应用程序。
- en: 'A typical flow goes like this: After the user has downloaded an app, he sees
    what it is about in a short introduction and then he is required to sign-up. At
    that time, it is often not clear why one should enter his username, type in a
    password, confirm it, and enter a couple of required fields. In this phase, a
    number of potential users will be lost:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的流程是这样的：用户下载应用程序后，通过简短的介绍了解其内容，然后被要求注册。那时，通常不清楚为什么用户需要输入用户名、输入密码、确认密码以及输入几个必填字段。在这个阶段，许多潜在用户会流失：
- en: '![](img/61897122-b1d9-4fe2-9739-cce9b440edfd.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/61897122-b1d9-4fe2-9739-cce9b440edfd.png)'
- en: Why does it matter?
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么这很重要？
- en: A great introduction story should point out what the core values of your app
    are and what is in it for the user. Onboarding matters because it has everything
    to do with successful conversion. With every step you will lose customers, which
    is something that cannot completely be avoided, but the number of losses can be
    limited if you have a great onboarding flow for your app. As an example, let's
    consider a scenario in which each day a 100 users download your app, of which
    60 sign-up and the other 40 decide to do this later or maybe never. Of these 60
    users, only 30 are still using the app the next month. Of these 30 users, only
    15 invite a friend, share the content of the app, or make an in-app purchase.
    That is still a very optimistic story.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一个出色的介绍故事应该指出应用程序的核心价值以及用户从中能得到什么。引导流程很重要，因为它与成功的转化密切相关。每一步你都会失去客户，这是无法完全避免的，但如果你为你的应用程序有一个出色的引导流程，那么损失的数量可以限制。作为一个例子，让我们考虑这样一个场景：每天有100个用户下载你的应用程序，其中60个注册，其余的40个决定稍后或可能永远不会这样做。在这60个用户中，只有30个在下一个月仍在使用应用程序。在这30个用户中，只有15个邀请朋友、分享应用程序的内容或进行应用内购买。这仍然是一个非常乐观的故事。
- en: At this last point, we could consider to see the user as a customer, as he brings
    us revenue in some way (money or awareness). However, in the conversion from potential
    user to customer, we have lost 85 people. There must be some way to increase the
    conversion. To do so, we have to make some smart moves and we need to gather feedback
    on the process.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个最后一点上，我们可以考虑将用户视为客户，因为他以某种方式（金钱或认知）为我们带来收入。然而，在从潜在用户到客户的转化过程中，我们失去了85人。必须有一种方法可以提高转化率。为了做到这一点，我们必须采取一些明智的措施，并且我们需要收集关于该过程的反馈。
- en: 'Onboarding is about the conversion, which is summarized as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 入门流程关乎转化，总结如下：
- en: From someone that becomes aware of the app in the App Store or Google Play Store
    to a potential user by downloading the app
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从在App Store或Google Play Store意识到应用的人到通过下载应用成为潜在用户
- en: From a potential user that has downloaded the app to an actual user by signing
    up
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从下载应用的可能用户到通过注册成为实际用户
- en: From a user that has signed up to a user that is regularly using the app
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从注册用户到经常使用应用的用户
- en: From a regular user to an ambassador that is promoting the app by sharing it
    or by inviting a friend to it
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从普通用户到通过分享或邀请朋友推广应用成为大使
- en: Pirate metrics (AARRR)
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 海盗指标（AARRR）
- en: We can make improvements only if we have insight into the optimization process.
    If we want to learn from the process, we need to measure it. The conversion is
    something that we are going to measure in another chapter. There we will take
    a closer look at actionable metrics that we can apply to mobile app development.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 只有如果我们对优化过程有洞察力，我们才能进行改进。如果我们想从过程中学习，我们需要对其进行测量。转化是我们将在另一章中测量的内容。在那里，我们将更详细地研究我们可以应用于移动应用开发的可操作指标。
- en: 'These so-called pirate metrics (AARRR, apparently that is what pirates say)
    perfectly describe why the onboarding flow is so important and what each phase
    represents in the conversion funnel. In short it goes like this:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这些所谓的海盗指标（AARRR，显然这是海盗们说的）完美地描述了为什么入门流程如此重要以及每个阶段在转化漏斗中代表什么。简而言之，流程如下：
- en: A for **Acquisition** or **Awareness****,** so they find your app in the store
    and download it.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A 代表 **获取** 或 **认知******，因此他们能在商店中找到您的应用并下载它。
- en: A for **Activation**, when users sign-up.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A 代表 **激活**，当用户注册时。
- en: R for **Retention**, meaning that a user is using the app on a regular basis.
    How many of the users that have downloaded the app are still doing so 1 week,
    1 month, or 1 year later?
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R 代表 **留存**，意味着用户定期使用该应用。下载了应用的用户中，有多少人在一周、一个月或一年后仍在使用？
- en: R for **Revenue**, as people make in-app purchases or other ways of monetization
    that we will review in another chapter.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R 代表 **收入**，因为人们通过应用内购买或其他我们在另一章中将要审查的货币化方式赚钱。
- en: R for **Referral**, where users inform other users about your app by sharing
    content or by inviting friends. Can your app go viral via word of mouth or sharing?
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R 代表 **推荐**，其中用户通过分享内容或邀请朋友来告知其他用户关于您的应用。你的应用能否通过口碑或分享而病毒式传播？
- en: '![](img/1c07d6b7-f9d4-4dc7-959e-0bc73c6a67a9.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1c07d6b7-f9d4-4dc7-959e-0bc73c6a67a9.png)'
- en: Actionable metrics could help you to identify the friction points in the onboarding
    process. You will read more about this in [Chapter 13](a62b3753-12c5-4170-808a-e0e1446e6b97.xhtml),
    *Play Store and App Store Hacks* (Split testing) and [Chapter 15](d9145149-0f4e-47b6-bc9d-ff46e5e63304.xhtml),
    *Growing Traction and Improving Retention*.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 可操作指标可以帮助你识别入门过程中的摩擦点。你将在第13章中了解更多关于这一点，*Play Store和App Store技巧*（拆分测试）和第15章中，*增加用户粘性和提高留存率*。
- en: Higher conversion
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更高的转化率
- en: In general mobile apps do not focus very much on the onboarding flow. At least,
    that is the impression you could get if you review many of the apps in the App
    Store. You can make a difference for your app. If your onboarding story is more
    appealing and if the barrier for signing up is lower, your conversion from acquisition
    to activation will be better. If, in addition, you show your user how the app
    works and he becomes confident in the way things work, then you will increase
    your users retention rate. He will keep using your app on a frequent basis.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，移动应用不太关注入门流程。至少，如果你审查App Store中的许多应用，你会有这样的印象。你可以为你的应用做出改变。如果你的入门故事更有吸引力，如果注册的门槛更低，那么从获取到激活的转化率会更好。如果你还能向用户展示应用的使用方式，并且他对事物的工作方式感到自信，那么你将提高用户的留存率。他将会频繁地使用你的应用。
- en: 'To get a head start, we need to think of a way to lower the barrier for the
    user. There are multiple known onboarding patterns that you can choose from and
    there is no reason why you cannot combine them. Some of these patterns are as
    follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 为了取得领先，我们需要考虑一种降低用户门槛的方法。有多个已知的引导模式可供选择，而且没有理由你不能将它们结合起来。以下是一些这些模式：
- en: Introduction
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简介
- en: Tutorial (or tour)
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指南（或游览）
- en: Joy ride
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 乐趣之旅
- en: Social sign-up
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社交注册
- en: Continuous onboarding
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续引导
- en: The **introduction** approach shows a couple of slides and often requires the
    user to sign-up, but some apps choose to show the content of the app right away.
    A tutorial or tour shows the real app, pointing out some example cases.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介**方法显示几页幻灯片，通常需要用户注册，但一些应用程序选择立即显示应用程序的内容。指南或游览展示了真正的应用程序，并指出一些示例案例。'
- en: A **joy ride** approach is a little bit different as it lets the user use the
    app right away and highlights features, from time to time, that are new to the
    user. It is a great way of showing what the app is all about. But be careful.
    If your app is complex, this option may prove to be a little bit overwhelming
    for the user.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**乐趣之旅**方法略有不同，因为它允许用户立即使用应用程序，并时不时地突出显示对用户来说新的功能。这是展示应用程序内容的一种很好的方式。但请注意。如果你的应用程序比较复杂，这个选项可能会让用户感到有些不知所措。'
- en: A **social sign-up** allows the user to perform a quick sign-up using his Twitter
    or Facebook account, for example. This may be required in order for the user to
    be able to continue using the app, but it will lower the barrier if you first
    show what the app is about and only ask to sign-up when needed to proceed.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**社交注册**允许用户使用他的Twitter或Facebook账户等快速注册。这可能是有必要让用户能够继续使用应用程序的原因，但如果首先展示应用程序的内容，并且只在需要继续时要求注册，这将降低门槛。'
- en: Finally there is a **continuous onboarding** concept, which can be very powerful
    because it comes with benefits such as lowering the barrier and obtaining rich
    user profiles, by encouraging the user at a later stage to complete his profile.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，有一个**持续引导**的概念，它可能非常强大，因为它带来了降低门槛和获取丰富用户档案等好处，通过鼓励用户在后期完成其档案。
- en: How to lower the barrier?
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何降低门槛？
- en: 'Probably the best onboarding flow does not require a sign-up or login at all.
    Is it really needed to do so before your app can be used? On the other hand, it
    is also true that a known user is more valuable than an anonymous one. Known users
    can be converted into customers, which will result in a profitable app. An unknown
    user is nothing but a visitor. We have not much data available about such visitor
    and conversion probably will be tough:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 可能最好的引导流程根本不需要注册或登录。在应用程序可以使用之前真的需要这样做吗？另一方面，这也同样是真实的，已知用户比匿名用户更有价值。已知用户可以被转化为客户，这将导致一个盈利的应用程序。一个未知用户不过是一个访客。我们关于此类访客的数据很少，转换可能也会很困难：
- en: '![](img/a128af4b-3889-4f53-bebb-6f309352ac32.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a128af4b-3889-4f53-bebb-6f309352ac32.png)'
- en: 'To lower the barrier, you better make the sign-up process as smooth as possible.
    I have seen apps that require the user to fill in multiple fields on multiple
    pages at the registration process. That is not a fun thing to do on a mobile device
    and we can be sure the conversion loss will be huge. A typical old school onboarding
    and registration flow goes like this:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 为了降低门槛，你最好让注册过程尽可能顺畅。我见过一些应用程序在注册过程中要求用户在多个页面上填写多个字段。在移动设备上做这件事并不有趣，我们可以肯定转换损失将会很大。典型的传统引导和注册流程如下：
- en: '![](img/d59714af-1085-4804-b030-c242299a0850.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d59714af-1085-4804-b030-c242299a0850.png)'
- en: We can do better than that. So create a great and exciting introduction story
    and make sure the user can immediately see the app core values. A very clear call
    to action (think of a highlighted button with an explanation text) and a simplified
    sign-up form can help you with this. Describe the benefits that the user will
    have once signed up, or use gamification elements such as digital incentives to
    persuade the user.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以做得更好。所以创建一个精彩而激动人心的介绍故事，并确保用户可以立即看到应用程序的核心价值。一个非常清晰的行动号召（想想一个带有解释文本的高亮按钮）和简化的注册表单可以帮助你做到这一点。描述用户注册后将会拥有的好处，或者使用游戏化元素，如数字激励来说服用户。
- en: A social sign-in option is a great solution to increase conversion and still
    get to know the user. It requires fewer steps, so the user is more likely to sign-up
    if the only thing he needs to do is to click on a Twitter or Facebook sign-up
    button.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 社交登录选项是提高转化率并了解用户的好方法。它需要更少的步骤，因此如果用户只需点击Twitter或Facebook的注册按钮，他们更有可能注册。
- en: To see some onboarding case studies, you should check [http://www.useronboard.com](http://www.useronboard.com).
    It has many onboarding flows of various well-known apps, including comments and
    suggestions for improvement. You can find onboarding flows for WhatsApp, Yo, Twitter,
    Foursquare, Snapchat, and many other apps here.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看一些入门案例研究，您应该检查[http://www.useronboard.com](http://www.useronboard.com)。它包含许多知名应用的入门流程，包括改进的评论和建议。您可以在那里找到WhatsApp、Yo、Twitter、Foursquare、Snapchat以及许多其他应用的入门流程。
- en: You probably also want to visit [http://uxarchive.com](http://uxarchive.com)
    to see more examples.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能还想访问[http://uxarchive.com](http://uxarchive.com)以查看更多示例。
- en: Single sign on using a social network like Twitter or Facebook
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Twitter或Facebook等社交网络进行单一登录
- en: A social sign-up has multiple benefits, not just for the user but also for developers.
    Avoid a lengthy registration process with many fields. The likeliness that the
    user will sign-up increases and, with the appropriate permissions, you instantly
    access a range of information on that user, for example, an avatar and a name
    of the user, which is great for personalization options.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 社交注册具有多重好处，不仅对用户有利，也对开发者有利。避免漫长的注册过程和许多字段。用户注册的可能性增加，并且，在适当的权限下，您可以立即获取有关该用户的一系列信息，例如，用户的头像和姓名，这对于个性化选项来说非常棒。
- en: 'Offering a social login could be responsible for 50% more sign-ups compared
    to a form-based sign-up. Other information could be available as well, such as
    a contact list that you can use to invite friends to the app later. Depending
    on the nature of your app, you can allow your user to sign in with Twitter, Facebook,
    Pinterest, LinkedIn, or any other trusted social network. It may also depend on
    the nature of your user if your app is offering access to a platform (multi-sided
    market). For example, for an e-learning solution, there is a LinkedIn sign-up
    feature for teachers and professionals, but a Facebook sign-up flow for students:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 提供社交登录可能比基于表单的注册多50%的注册率。还可以提供其他信息，例如，您可以用来邀请朋友加入应用的联系人列表。根据您应用的性质，您可以让用户使用Twitter、Facebook、Pinterest、LinkedIn或其他任何受信任的社交网络登录。如果您的应用提供对平台的访问（双边市场），这也可能取决于您的用户性质。例如，对于在线学习解决方案，有面向教师和专业人士的LinkedIn注册功能，但学生使用的是Facebook注册流程：
- en: '![](img/547b72fc-a70e-47fd-82c2-abc73e263c5f.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/547b72fc-a70e-47fd-82c2-abc73e263c5f.png)'
- en: 'The benefits of using a social login are as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 使用社交登录的好处如下：
- en: Faster registration, thus higher conversion rates
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册更快，因此转化率更高
- en: Instantly validated email addresses
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 邮箱地址立即验证
- en: Increased chances that the obtained data is real
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获得的数据是真实的可能性增加
- en: Personalization, resulting in more loyal followers
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 个性化，从而产生更多忠诚的粉丝
- en: High engagement
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高度参与度
- en: Less support (such as a reset password service) needed
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要的支持（如重置密码服务）减少
- en: Increased number of repeated users
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复用户数量增加
- en: Increased chance for referrals because of invites and sharing
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于邀请和分享，增加了推荐的机会
- en: There is no one solution that fits all. You need to decide which social networks
    you will support, and perhaps you choose to support multiple ones. This is of
    particular interest if you have international ambitions for your app. Facebook
    or LinkedIn sign-up features make perfect sense in the US and in large parts of
    Europe, but in other parts of the world (China or Russia for example) these networks
    may be less popular (or not accessible at all) and you may want to offer an alternative
    onboarding option for these particular regions. This could be another social network
    or you can provide a fall-back mechanism. You can still offer an onboarding flow
    in your app, based on forms. You can use that for the cases in which the user
    cannot or does not want to use a social sign-up. It is up to you if you decide
    to support it. You gain a little extra audience with it, but at a cost (development
    and conversion). For this reason, there are apps that choose only to support one
    or multiple social sign-up options.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 没有一种解决方案适合所有人。您需要决定您将支持哪些社交网络，也许您会选择支持多个。如果您对您的应用有国际化的目标，这一点尤为重要。在美國和欧洲的大部分地区，Facebook或LinkedIn的注册功能非常合理，但在世界其他地区（例如中国或俄罗斯）这些网络可能不太受欢迎（或者根本无法访问），您可能希望为这些特定地区提供另一种注册选项。这可能是一个社交网络，或者您可以提供一个回退机制。您仍然可以在您的应用中提供基于表单的注册流程。您可以使用它来处理用户无法或不想使用社交注册的情况。如果您决定支持它，这取决于您。您可以通过它获得一些额外的受众，但代价是（开发和转化）。因此，有些应用只选择支持一个或多个社交注册选项。
- en: Show us what you have got
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 展示您拥有的东西
- en: An alternative approach is instantly showing the content of the app (if the
    nature of the app allows you to do so) and only asking for a social sign-up when
    needed.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是立即显示应用的内容（如果应用的性质允许您这样做），只有在需要时才要求社交注册。
- en: 'This way no or little introduction is needed. Just as is the case with many
    e-commerce solutions (think of web shops), signing up is requested only when it
    matters. In the case of a web shop, this is required for check out. For a mobile
    app, it may be applicable, for example, when the user no longer just consumes
    but also wants to contribute to a stream. You can think of a news app that allows
    users to comment about the messages that appear:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这样就不需要或只需要很少的介绍。就像许多电子商务解决方案（想想网店）一样，只有在必要时才要求注册。在网店的情况下，这是结账所必需的。对于移动应用来说，这可能适用于例如用户不再只是消费，还希望为流贡献力量的情况。您可以想到一个允许用户对出现的消息进行评论的新闻应用：
- en: '![](img/994dd144-3b58-4cd3-b811-3c59db03b870.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/994dd144-3b58-4cd3-b811-3c59db03b870.png)'
- en: This lowers the barrier even more; however, the downside can be that a large
    number of users will never sign-up and for that reason will be less valuable to
    you. For example, anonymous users are not likely to share a lot on social media
    from your app and inviting their friends is impossible since we do not know who
    they are.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这样可以进一步降低门槛；然而，缺点可能是大量用户永远不会注册，因此对您来说价值较低。例如，匿名用户不太可能从您的应用中分享很多内容，而且由于我们不知道他们是谁，邀请他们的朋友也是不可能的。
- en: Phone number sign-up - a great alternative
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电话号码注册 - 一个很好的替代方案
- en: 'WhatsApp and a couple of other apps are using the phone number of the device
    to identify a user for the registration. This is done through an SMS verification
    code. The user enters his phone number and receives an SMS with a verification
    code, which he needs to type into the app. This will ensure that the phone number
    is correct. There are even some implementations that intercept the receiving of
    the SMS verification code and then fill in the code automatically. This will take
    away another step from the onboarding flow:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: WhatsApp和其他一些应用正在使用设备的电话号码来识别用户进行注册。这是通过短信验证码完成的。用户输入他们的电话号码，并收到包含验证码的短信，他们需要将其输入到应用中。这将确保电话号码是正确的。甚至还有一些实现拦截接收短信验证码，然后自动填写代码。这将从注册流程中去除另一个步骤：
- en: '![](img/2d22748b-72ad-42ae-9988-e82245c6e67a.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2d22748b-72ad-42ae-9988-e82245c6e67a.png)'
- en: You have to make it clear to the user that his phone number is used for verification
    purposes only and that it will not be publicly available in the app. Using a phone
    number will also lead to more valuable contributions of the user. The reason for
    this is simple. He is aware that his phone number is attached to all the actions
    he performs in the app. There are services that will take away most of the hassle
    that comes with the implementation. In our sample app, which we will discuss later
    in this chapter, Fabric and Firebase will be used because it is the easiest solution
    to implement and because it is free to use.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须向用户明确说明，他的手机号码仅用于验证目的，并且它不会在应用中公开可用。使用手机号码还将导致用户做出更有价值的贡献。原因很简单。他知道他的手机号码与他应用中进行的所有操作相关联。有一些服务将消除与实施相关的绝大多数麻烦。在我们将在本章后面讨论的示例应用中，我们将使用Fabric和Firebase，因为这是最容易实现的解决方案，并且它是免费使用的。
- en: Continuous onboarding - complete the user profile later
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 持续引导 - 以后完成用户资料
- en: Obtaining the most minimal information from your user to get him on board is
    a smart way to keep the barrier low. Later you can encourage your user to add
    more details to his profile or by the user make particular choices from which
    your app can learn. The concept of continuous onboarding is exactly about that.
    The profile of the user will be enriched by the actions that the user will take.
    This will allow the app to offer a better and customized app experience that will
    become more dedicated over time.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 从你的用户那里获取最基本的信息以让他加入是一个降低门槛的聪明方法。以后你可以鼓励用户添加更多细节到他的资料，或者通过用户做出特定的选择，让应用从中学习。持续引导的概念正是如此。用户的资料将通过用户采取的行动而丰富。这将允许应用提供更好、更定制的应用体验，随着时间的推移将变得更加专注。
- en: LinkedIn is the perfect example, as everybody will recognize the reminders that
    LinkedIn displays. It asks you to complete your profile, to endorse connections
    (enriching the profiles of others), or to connect to people. You will often be
    reminded about that but it never will be mandatory to do these things.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 领英是一个完美的例子，因为每个人都会认出领英显示的提醒。它要求你完成你的资料，支持你的联系人（丰富他人的资料），或者与人建立联系。你经常会收到这样的提醒，但做这些事情永远不会是强制性的。
- en: 'The incentive here is not even that strong, but it works well. Who does not
    want have an All-Star profile? You can use this idea for your mobile app, as we
    will soon see in the sample app:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的激励甚至不是很强，但它效果很好。谁不想拥有一个全明星资料呢？你可以用这个想法为你的移动应用，正如我们很快将在示例应用中看到的那样：
- en: '![](img/3634f81e-2710-427a-b6fa-cae171a05d70.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3634f81e-2710-427a-b6fa-cae171a05d70.png)'
- en: Tell a story - an example onboarding app
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 讲述一个故事 - 一个示例引导应用
- en: To demonstrate the various ideas related to onboarding, we will create an Android
    app that is using Fabric for Twitter authentication and Firebase SDK for phone
    authentication. You can use Firebase as well for Twitter authentication, but the
    one that Fabric is offering is more convenient to use.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示与引导相关的各种想法，我们将创建一个使用Fabric进行Twitter身份验证和Firebase SDK进行手机身份验证的Android应用。你也可以使用Firebase进行Twitter身份验证，但Fabric提供的那个使用起来更方便。
- en: 'We will name this app, Tell a Story. Using this app, users can write a story
    together. Anyone can read the stories that people create, but, if the user wants
    to contribute to the story, he needs to sign-up using Twitter or his phone number.
    Let''s start simple with a couple of wire frames that will explain the exact flow
    of the app:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把这个应用命名为“讲述故事”。使用这个应用，用户可以一起编写故事。任何人都可以阅读人们创作的故事，但如果用户想要为故事做出贡献，他需要使用Twitter或他的手机号码进行注册。让我们从一个简单的线框开始，它将解释应用的精确流程：
- en: '![](img/dcc665ae-1604-4913-9215-a0a62ffb771d.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dcc665ae-1604-4913-9215-a0a62ffb771d.png)'
- en: The user lands on the introduction view when he opens the app for the first
    time. This view contains a clear explanation of why he should want to use the
    app and what it is about. There are two very clear call to actions shown. One
    of them is the Sign up with phone number button, the other one is the Sign up
    with Twitter button.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 用户首次打开应用时将进入介绍视图。这个视图包含了对为什么他应该想要使用该应用以及它是什么的清晰解释。这里展示了两个非常清晰的行动号召。其中一个是使用手机号码注册的按钮，另一个是使用Twitter注册的按钮。
- en: After the sign-up, a list of existing team stories is shown. The user can browse
    through the list, and, if he clicks on any of the stories, the full story will
    be revealed in a detailed view. The user can also decide to start a story by himself.
    Here is another clear call to action, visualized as the Start a story button.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 注册后，将显示现有团队故事的列表。用户可以浏览列表，如果他点击任何故事，详细视图中将显示完整的故事。用户也可以决定自己开始一个故事。这里还有一个清晰的行动号召，以“开始一个故事”按钮的形式可视化。
- en: 'The detail view shows all lines for the story, including the names of the authors.
    The user can now read the full story or he can contribute to it by clicking on
    the Contribute to story button. Doing so will lead him to the Contribute to...
    view, where he can enter a new line of code. If the user chooses to start a new
    story by clicking on the Start a story button he will see the same view. In this
    case, the user will also be asked for a story title. Clicking on the Add new line
    to story button will add the new line to the story or will create a new story:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 详细视图显示了故事的全部行，包括作者的姓名。现在用户可以阅读完整的故事，或者他可以通过点击“为故事做出贡献”按钮来为故事做出贡献。这样做将带他到“为...做出贡献”视图，在那里他可以输入新的一行代码。如果用户通过点击“开始一个故事”按钮开始一个新故事，他将看到相同的视图。在这种情况下，用户还将被要求提供故事标题。点击“将新行添加到故事”按钮将把新行添加到故事中或创建一个新故事：
- en: '![](img/94525d8b-eb39-44a6-bdc1-b769b241881c.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/94525d8b-eb39-44a6-bdc1-b769b241881c.png)'
- en: Onboarding sign-up when needed
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 需要时进行入职注册
- en: We will also need to add a late onboarding option to the app. For this purpose,
    we will add a Skip for now button to the Introduction view. In [Chapter 13](a62b3753-12c5-4170-808a-e0e1446e6b97.xhtml),
    *Play Store and App Store Hacks*, about split testing, we will see how we can
    learn what approach will work best. We need to know which implementation will
    lead to the highest conversion. Based on this feedback, we can remove the Skip
    for now button, the sign-up buttons on the introduction view, or make the decision
    to keep all the three options in the introduction view.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要在应用中添加一个延迟入职选项。为此，我们将在简介视图中添加一个“暂时跳过”按钮。在[第13章](a62b3753-12c5-4170-808a-e0e1446e6b97.xhtml)，“应用商店和商店应用技巧”，关于拆分测试的部分，我们将看到如何了解哪种方法最有效。我们需要知道哪种实现将导致最高的转化率。基于这个反馈，我们可以移除“暂时跳过”按钮、简介视图中的注册按钮，或者决定保留简介视图中的所有三个选项。
- en: 'Note that, although this button is highlighted next to demonstrate the late
    onboarding flow, this button should not be the primary call to action and therefore
    should not be marked as such. We want to lower the barrier, but we still want
    to encourage the user to sign-up early:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，尽管此按钮被突出显示以演示延迟入职流程，但此按钮不应是主要的行动号召，因此不应将其标记为这样的按钮。我们希望降低门槛，但仍然希望鼓励用户尽早注册：
- en: '![](img/20765388-0169-4dd3-a74f-e84fc0ffbde3.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/20765388-0169-4dd3-a74f-e84fc0ffbde3.png)'
- en: If the user chooses to click on the Skip for now button as he apparently is
    not quite convinced about the benefits of the app yet, he will see the story list
    right away. Only if he wants to start a new story, or if he wants to contribute
    to an existing one, he will be asked to sign-up via either Twitter or phone/SMS.
    For our app, we want to support both types of flow. Let's start with the implementation
    of what we just saw.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户选择点击“暂时跳过”按钮，因为他显然还没有完全确信应用的好处，他将会立即看到故事列表。只有当他想要开始一个新故事，或者他想要为现有故事做出贡献时，他才会被要求通过
    Twitter 或电话/短信进行注册。对于我们的应用，我们希望支持这两种类型的流程。让我们从实现我们刚才看到的内容开始。
- en: Implementation
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现
- en: 'You can find the sample project for this chapter here: [https://github.com/mikerworks/packt-lean-onboarding](https://github.com/mikerworks/packt-lean-onboarding).'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此处找到本章的示例项目：[https://github.com/mikerworks/packt-lean-onboarding](https://github.com/mikerworks/packt-lean-onboarding)。
- en: The code sample has been updated, so it will use the latest and greatest (at
    the time of writing). Digits, the Fabric phone authentication service, has been
    replaced by the Firebase phone authentication service. The code sample is now
    using this service and, while I was busy anyway, I have converted the Android
    Java example to Kotlin.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 代码示例已更新，因此它将使用最新的最佳版本（在撰写本文时）。Digits，Fabric 手机身份验证服务，已被 Firebase 手机身份验证服务取代。代码示例现在使用此服务，而且我在忙碌之余，还将
    Android Java 示例转换为 Kotlin。
- en: You can have a look at the app first, or if you want to configure it for your
    own use you need to configure Fabric and Firebase first.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以先查看该应用，或者如果您想为自己配置它，您需要先配置 Fabric 和 Firebase。
- en: Visit [https://fabric.io](https://fabric.io) and create an account. Once you
    have done that and have confirmed it, you can proceed. Enter a team name (for
    example `packt-demo`) and choose a platform (Android). After that, a new page
    in the wizard will show a number of options. Pick the Twitter option first. The
    first piece of information tells you how to configure your Android project. Use
    the wizard (or do it manually) to create the first app in the Fabric environment
    and name it `onboarding`. You need to do this to obtain keys and IDs that allow
    you to use the Fabric SDK in your own app.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[https://fabric.io](https://fabric.io)并创建一个账户。一旦您完成并确认，您就可以继续了。输入一个团队名称（例如`packt-demo`）并选择一个平台（Android）。之后，向导中的新页面将显示多个选项。首先选择Twitter选项。第一条信息告诉您如何配置您的Android项目。使用向导（或手动操作）在Fabric环境中创建第一个应用程序并将其命名为`onboarding`。您需要这样做以获取允许您在自己的应用程序中使用Fabric
    SDK的密钥和ID。
- en: Next, we need to do a few things for the phone number authentication. The Digit
    service of the Fabric is doing exactly that but it has been replaced by FireBase
    phone authentication. So you need to set up a few things at Firebase as well.
    Go to [https://console.firebase.google.com](https://console.firebase.google.com)
    and create a new project, or if you have not signed up for Firebase yet, you need
    to do so first.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要为电话号码认证做一些事情。Fabric的Digit服务正是这样做的，但它已被Firebase电话认证所取代。因此，您需要在Firebase上设置一些事情。访问[https://console.firebase.google.com](https://console.firebase.google.com)并创建一个新的项目，或者如果您还没有注册Firebase，您需要先注册。
- en: Follow the setup instructions at Firebase. In the authentication section, you
    can select which sign-up methods you wish to use for your application. If you
    click on the phone sign-up option and enable it, you can continue with the sample
    app.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 按照Firebase的设置说明操作。在认证部分，您可以选择为您的应用程序使用哪些注册方法。如果您点击手机注册选项并启用它，您就可以继续使用示例应用程序。
- en: Let's have a walk through the app. On the fly, you can modify the API key and
    the secret to match your own setup. Once opened in Android Studio, you should
    expand the app folder. Locate the build.gradle file in this folder and open it.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们浏览一下应用程序。在飞行中，您可以修改API密钥和密钥以匹配您自己的设置。一旦在Android Studio中打开，您应该展开应用程序文件夹。找到此文件夹中的build.gradle文件并打开它。
- en: 'You will see that the file contains a couple of dependencies on Fabric and
    Firebase. We will use that later so we can login with Twitter or Firebase phone
    authentication. In addition, we can share stories on Twitter using the `TweetComposer`
    class. Note that you may need to update the version numbers to the latest versions.
    They appear as suffixes of the definitions of the various package names:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 您会看到该文件包含对Fabric和Firebase的一些依赖项。我们稍后会使用它们，这样我们就可以使用Twitter或Firebase电话认证进行登录。此外，我们可以使用`TweetComposer`类在Twitter上分享故事。请注意，您可能需要将版本号更新到最新版本。它们出现在各种包名称定义的末尾：
- en: '[PRE0]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, open the `AndroidManifest.xml` file in the `app/src/main/` folder. The
    metadata section contains the value for `ApiKey`. Modify it so it will have the
    value that corresponds with your own configuration at `Fabric.io`:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开`app/src/main/`文件夹中的`AndroidManifest.xml`文件。元数据部分包含`ApiKey`的值。修改它，使其具有与您在`Fabric.io`上的配置相对应的值：
- en: '[PRE1]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The layout associated with the onboarding activity displays a short introduction
    that explains to the user why they should want to use the app and how easy it
    is to get started. Both the phone number and the Twitter sign up button are clear
    calls to actions here:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 与引导活动关联的布局显示了一段简短的介绍，解释了用户为什么想要使用该应用程序以及开始使用它有多简单。电话号码和Twitter注册按钮在这里都是清晰的行动号召：
- en: '![](img/db4e1ca4-6ab0-48b0-9bf2-0d49e7ccc18c.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/db4e1ca4-6ab0-48b0-9bf2-0d49e7ccc18c.png)'
- en: There is one additional button, which has been intentionally made smaller and
    less colorful. It is here to allow the user to skip the sign-up process for the
    time being, in case he wants to only see what the app is about.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个额外的按钮，它被有意做得更小、颜色更少。它的目的是允许用户暂时跳过注册过程，以防他只想看看应用程序的内容。
- en: 'Open the `strings.xml` value and update `twitter_key` and `twitter_secret`.
    Replace them with your own values. You will find them on the Fabric website:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`strings.xml`值并更新`twitter_key`和`twitter_secret`。用您自己的值替换它们。您可以在Fabric网站上找到它们：
- en: '[PRE2]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Open the `OnboardingActivity` class. In the `onCreate` method, the `initFabric`
    method is called. This is where Fabric is initialized for Twitter authentication
    and sharing:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`OnboardingActivity`类。在`onCreate`方法中，调用了`initFabric`方法。这就是Fabric初始化Twitter认证和分享的地方：
- en: '[PRE3]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The click listener for the Skip button makes the app jump to the list immediately.
    If clicked on, the Twitter login button will display a Twitter dialog asking for
    permission. If this permission is given, the success method of the callback will
    be triggered. We will then store the `TwitterSession` object and show the list
    of stories to the user by calling the `onShowList` method:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 跳过按钮的点击监听器使应用程序立即跳转到列表。如果点击，Twitter登录按钮将显示一个请求权限的Twitter对话框。如果授予此权限，回调的成功方法将被触发。然后我们将存储`TwitterSession`对象，并通过调用`onShowList`方法向用户显示故事列表：
- en: For the sake of simplicity, `AuthenticationHelper` is not persisting the sessions
    other than during the lifetime of the application. In a production app, it would
    be more convenient to persist them as long as they are valid.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化，`AuthenticationHelper`除了在应用程序的生命周期内之外，不会持久化会话。在生产应用程序中，只要它们有效，持久化它们会更为方便。
- en: 'You can find the implementation of what we just saw in the `setupTwitterLoginButton`
    and the `signinWithTwitterAuthCredential` methods as follows:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在`setupTwitterLoginButton`和`signinWithTwitterAuthCredential`方法中找到我们刚才看到的实现，如下所示：
- en: '[PRE4]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `signInWithPhoneAuthCredential` method registers the user with his Twitter
    name as a Firebase user. We will use this phone number later to identify the contributions
    of the user.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`signInWithPhoneAuthCredential`方法使用用户的Twitter名字作为Firebase用户注册用户。我们稍后会使用这个手机号码来识别用户的贡献。'
- en: '[PRE5]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To sign-up with a phone number, we need to tell Firebase to send a code by
    SMS to the user. We will do that in the `sendPhone` method:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用手机号码注册，我们需要告诉Firebase通过短信向用户发送验证码。我们将在`sendPhone`方法中完成此操作：
- en: '[PRE6]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The callback implemention is in the `getCallback` method. The `onCodeSent`
    is the most interesting event. If the code has been sent, we will store the returned
    verification ID. We will need it later to authenticate the user with the code:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 回调实现位于`getCallback`方法中。`onCodeSent`是最有趣的事件。如果验证码已发送，我们将存储返回的验证ID。我们稍后会需要它来使用代码验证用户：
- en: '[PRE7]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'After sending the code to the user, he has to enter the code to ensure the
    provided phone number is indeed his phone number. This is done in the `sendCode`
    method:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在向用户发送验证码后，他必须输入验证码以确保提供的手机号码确实是他的手机号码。这是在`sendCode`方法中完成的：
- en: '[PRE8]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The `signInWithPhoneAuthCredential` method registers the user with his phone
    number as a Firebase user. We will use this phone number later to identify the
    contributions of the user:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`signInWithPhoneAuthCredential`方法使用用户的手机号码作为Firebase用户注册用户。我们稍后会使用这个手机号码来识别用户的贡献：'
- en: '[PRE9]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here is an example of both the users. The first one is registered using Twitter,
    while the other one has used his phone number to sign-up:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是两个用户的示例。第一个是使用Twitter注册的，而另一个则使用了他的手机号码进行注册：
- en: '![](img/76bc825c-bef7-4da8-9a58-66173d448f66.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/76bc825c-bef7-4da8-9a58-66173d448f66.png)'
- en: 'Now, open MainActivity. In the `onCreate` method, you will see that one of
    the first things that we do is call the `onList` method. The `onList` method creates
    a new `StoriesFragment`, and by calling the `showFragment` method a list of stories
    will be shown by default:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开MainActivity。在`onCreate`方法中，您会看到我们首先做的事情之一是调用`onList`方法。`onList`方法创建一个新的`StoriesFragment`，通过调用`showFragment`方法，默认会显示故事列表：
- en: '[PRE10]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The MainActivity is also responsible for showing other fragments, such as the
    `StoryDetailFragment`, which shows you the full story and the `StoryContributeFragment`.
    It also contains a call to the `OnboardingActivity` for late onboarding purposes.
    This will allow the user to sign-up if they have skipped the onboarding previously,
    but want to contribute to the app later. By adding content to a story or by creating
    a new story, they will be asked to sign-up once again:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: MainActivity还负责显示其他片段，例如显示完整故事的`StoryDetailFragment`和`StoryContributeFragment`。它还包含对`OnboardingActivity`的调用，用于后续的注册。这将允许用户在之前跳过注册但后来想要为应用程序做出贡献的情况下注册。通过向故事添加内容或创建新的故事，他们将被要求再次注册：
- en: '[PRE11]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The `getRepository` method just returns a new instance of the `Repository` class
    that we are going to investigate next.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`getRepository`方法仅返回我们接下来将要研究的`Repository`类的新实例。'
- en: You will find the `Repository` class with the data package. As you can see,
    the `getDummyContent` method creates a list of dummy stories.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 您将找到包含数据包的`Repository`类。如您所见，`getDummyContent`方法创建了一个示例故事列表。
- en: The `repository` class has already been prepared to be used with Firebase, but,
    since we do want to demonstrate the onboarding concept, the data is only persisting
    during the lifetime of the app. If you have read [Chapter 9](c61bb6d7-f392-40e8-8330-7cc2f681b0e6.xhtml),
    *Native, Hybrid, or Cross Platform*, it will be pretty easy to set up Firebase
    and modify this class in order to be able to store stories in the cloud as well.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '`repository`类已经准备好与Firebase一起使用，但由于我们想要演示引导概念，数据仅在应用的生命周期内持久化。如果你已经阅读了[第9章](c61bb6d7-f392-40e8-8330-7cc2f681b0e6.xhtml)，*原生、混合或跨平台*，设置Firebase并修改这个类以能够将故事存储在云中将会非常容易。'
- en: 'The class looks like this:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 类看起来是这样的：
- en: '[PRE12]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The `getStories` method returns all stories and the data asynchronously. The
    `updateContributions` method adds a new contribution to an existing story, or
    creates a new story with a first contribution if the story does not yet exist
    by calling the `addStory` method. The `addStory` method eventually creates a unique
    ID for the story and adds the story to the list.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`getStories`方法异步返回所有故事和数据。`updateContributions`方法向现有故事添加新的贡献，或者如果故事尚不存在，通过调用`addStory`方法创建一个新的故事，并添加到列表中。'
- en: 'In the `models` package, you will find the `Story` and `Contribution` class.
    A `Story` has a title and multiple contributions, and each contribution has an
    author and some content. The `Parcelable` implementation makes it more convenient
    to pass data from one fragment (or activity) to another, as we will see later:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在`models`包中，你可以找到`Story`和`Contribution`类。一个`Story`有一个标题和多个贡献，每个贡献都有一个作者和一些内容。`Parcelable`实现使得从一个片段（或活动）向另一个片段传递数据变得更加方便，正如我们稍后将会看到的：
- en: '[PRE13]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The `getSummary` and the `getFullStory` methods make a `Story` object just a
    little bit smarter and it returns the last three lines or the full story, as text,
    respectively.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '`getSummary`和`getFullStory`方法使`Story`对象稍微智能一些，并分别返回最后三行或完整的故事文本。'
- en: The `Contribution` class implements the `Parcelable` interface as well for the
    same reasons as for the `Story` class. Each `Contribution` instance has an author
    and a paragraph member.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '`Contribution`类同样实现了`Parcelable`接口，原因与`Story`类相同。每个`Contribution`实例都有一个作者和一个段落成员。'
- en: 'The first thing a user will see, right after the onboarding view on see what
    the app is all about. For a more complex app it could be helpful to highlight
    specific features the first time the app is used. By showing them during the onboarding
    flow we can encourage the user to sign up for the app. For this app, things are
    pretty obvious:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 用户首先看到的是登录视图之后的内容，了解应用的基本功能。对于功能较为复杂的应用，在首次使用时突出显示特定功能可能很有帮助。通过在引导流程中展示这些功能，我们可以鼓励用户注册应用。对于这个应用来说，事情相当明显：
- en: '![](img/b8c304b9-8a0d-4a5c-94df-286490307261.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b8c304b9-8a0d-4a5c-94df-286490307261.png)'
- en: 'Everybody likes stories, so the first action probably will be that the user
    clicks on a story of which the summary looks appealing. (Again this is a hypothesis
    that needs to be proven.) If the user clicks on the floating action button (the
    one with the plus sign on it), he will create a new story:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都喜欢故事，所以用户可能的第一步就是点击一个看起来吸引人的故事摘要。（这同样是一个需要证明的假设。）如果用户点击带有加号符号的浮动操作按钮，他将创建一个新的故事：
- en: '[PRE14]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'If you take a look inside `StoriesFragment`, you will see that a `RecyclerView`
    widget and a `StoryAdapter` will be used to display the data shown here. In the
    `onCreateView` method, the `loadData` method will be called, which in turn calls
    the `getStories` method of the `Repository` class, passing the fragment itself
    as the handler of the results:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看`StoriesFragment`内部，你会看到将使用`RecyclerView`小部件和`StoryAdapter`来显示这里显示的数据。在`onCreateView`方法中，将调用`loadData`方法，该方法反过来调用`Repository`类的`getStories`方法，并将片段本身作为结果的处理者：
- en: '[PRE15]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'When the results come in, an instance of the `StoryAdapter` class will be created
    and attached to the `RecyclerView` instance. The `StoryAdapter` binds the data
    for each story to a row in the list:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 当结果返回时，将创建一个`StoryAdapter`类的实例并将其附加到`RecyclerView`实例上。`StoryAdapter`将每个故事的数据绑定到列表中的行：
- en: '[PRE16]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: If the user clicks on any of the rows the `OnCardViewClick` event will be triggered,
    which will call the `onReadStory` method from `MainActivity`, passing the selected
    story as the parameter. This will bring us to the `StoryDetailFragment` implementation.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户点击任何一行，将触发`OnCardViewClick`事件，这将调用`MainActivity`中的`onReadStory`方法，并将选定的故事作为参数传递。这将带我们到`StoryDetailFragment`的实现。
- en: 'This fragment displays the full story to the user, including the name of the
    contributors. Here, the user can contribute to the story by clicking on the CONTRIBUTE
    (as shown in the example image):'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 此片段向用户显示完整的故事，包括贡献者的名字。在这里，用户可以通过点击CONTRIBUTE（如示例图像所示）来为故事做出贡献：
- en: '[PRE17]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'In the `onCreate` method, the selected story will receive through the bundle.
    It is here where the `Parcelable` implementation comes in handy. In the `onCreateView`
    method, the content of the story will be set as text for `textView` using the
    `getFullStory` method of the `story` object:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在`onCreate`方法中，选定的故事将通过bundle接收。在这里，`Parcelable`实现非常有用。在`onCreateView`方法中，将使用`story`对象的`getFullStory`方法将故事的全部内容设置为`textView`的文本：
- en: '![](img/2fa3c4ae-5dbb-4eba-a760-55ef9ba94a46.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2fa3c4ae-5dbb-4eba-a760-55ef9ba94a46.png)'
- en: In the `onClick` method, you will find the handling for the various button clicks,
    such as the CONTRIBUTE button. This will call the `onContribute` method, which
    in turn calls the `onContribute` method of the MainActivity, including the currently
    selected story. It will result in displaying the layout associated with the `StoryContributeFragment`
    class.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在`onClick`方法中，你可以找到处理各种按钮点击的处理，例如“贡献”按钮。这将调用`onContribute`方法，然后反过来调用MainActivity的`onContribute`方法，包括当前选定的故事。这将导致显示与`StoryContributeFragment`类相关的布局：
- en: 'In the `onShare` method of the `StoryDetailFragment`, you will find the lines
    that are needed to compose and share a tweet:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在`StoryDetailFragment`的`onShare`方法中，你可以找到用于编写和分享推文的代码行：
- en: '[PRE18]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The `StoryContributeFragment` allows the users to contribute to a story or to
    start a new story. At that moment, the user changes from a passive to an active
    user. Also, the user will be converted to a known user as he is required to sign-up,
    which he may not have done yet. The fragment obtains the selected story as a bundle
    parameter. It may be an empty one, in case the user hit the plus button, as he
    wants to create a new story. If it is an existing story, a summary of the story
    (the last three contributions) will be shown.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`StoryContributeFragment`允许用户为故事做出贡献或开始一个新的故事。在此时刻，用户从被动用户变为主动用户。此外，由于用户需要注册（尽管他可能还没有这样做），用户将被转换为已知用户。片段通过bundle参数获取选定的故事。它可能是一个空的，因为用户点击加号按钮，他想要创建一个新的故事。如果它是一个现有的故事，将显示故事的摘要（最后三个贡献）。'
- en: 'If the user clicks on the Contribute button, the `onContribute` method will
    be called. Here a new `Contribution` object will be made and, optionally, a new
    story object will be made. The contribution will be added to the story and we
    will ask the `AuthenticationHelper` class whether the current user is already
    authenticated or not. If the user is authenticated, either by a Twitter sign-up
    or by a Firebase phone sign-up, we can proceed by filling in the contributor''s
    name (Twitter name or phone number). Also, we call the `updateContributions` method
    of the `Repository` class, which will take care of storing stories:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户点击“贡献”按钮，将调用`onContribute`方法。在这里，将创建一个新的`Contribution`对象，并且可选地创建一个新的故事对象。贡献将被添加到故事中，我们将询问`AuthenticationHelper`类当前用户是否已经认证。如果用户已经认证，无论是通过Twitter注册还是通过Firebase手机注册，我们可以通过填写贡献者的名字（Twitter名字或电话号码）来继续操作。此外，我们调用`Repository`类的`updateContributions`方法，该方法将负责存储故事：
- en: '![](img/cd0746c7-a767-487a-adaa-0d6d5674e2f8.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cd0746c7-a767-487a-adaa-0d6d5674e2f8.png)'
- en: 'If the user is not yet authenticated, we will call the `onLateOnboarding` method
    of the MainActivity instead. Here we will also pass the story (and with that the
    contributions) as a parameter:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户尚未认证，我们将调用MainActivity的`onLateOnboarding`方法。在这里，我们也将故事（以及与之相关的贡献）作为参数传递：
- en: '[PRE19]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The `OnboardingActivity` will also handle the onboarding on the fly. Better
    late than never is the idea here. If you want to contribute to a story, or want
    to create a story yourself, you have to sign-up first. Now, the activity will
    display a message that indicates this, and again it gives the user the choice
    to sign-up using his Twitter account or using his phone number:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`OnboardingActivity`还将动态处理认证过程。虽然来得晚，但总比不来好。如果你想为故事做出贡献，或者想自己创建故事，你必须先注册。现在，活动将显示一条消息，指出这一点，并再次为用户提供使用Twitter账户或使用电话号码注册的选择：'
- en: '[PRE20]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'If the late onboarding succeeds, the result will be returned to MainActivity,
    which will take care of adding the contribution to the story:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如果延迟认证成功，结果将返回MainActivity，MainActivity将负责将贡献添加到故事中：
- en: '[PRE21]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: After that the list of stories is shown again by calling the `onList` method
    of the `MainActivity` class. This time the list will include the contribution,
    or the story of the user that is no longer an unknown one. Signed up at last!
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，通过调用`MainActivity`类的`onList`方法再次显示故事列表。这次列表将包括贡献，或者不再是不知名的用户的故事。最后注册成功！
- en: 'So far, for the app, we have seen some cool implementations for signing up
    and late onboarding. If you like the concept, then feel free to do some further
    experimentation with the app. Think, for example, of two other great features
    for the app that we could add: An invite a friend option (to write the story with
    you) and a share option (to share the cool story on Twitter or another social
    media network). This will increase the awareness of your app. That will help you
    to grow the user base of your app. We will see more about this in [Chapter 14](2ee66b42-cffe-42de-bbce-4fa54fa7fb61.xhtml),
    *A/B Testing Your App*, which is about traction and retention:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，对于这个应用，我们已经看到了一些关于注册和后期上线的酷炫实现。如果你喜欢这个概念，那么请随意对应用进行一些进一步的实验。例如，考虑为应用添加另外两个很棒的功能：一个邀请朋友选项（与你一起写故事）和一个分享选项（在Twitter或其他社交媒体网络上分享这个故事）。这将提高你应用的知名度。这将帮助你扩大你应用的用户基础。我们将在第14章中了解更多关于这一点，*A/B测试你的应用*，这是关于吸引力和留存率的：
- en: '![](img/88b799c6-7332-4e4a-ae0e-d3b5ee4abb06.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/88b799c6-7332-4e4a-ae0e-d3b5ee4abb06.png)'
- en: Growth hacking is, among other things, a continuous process that results in
    existing users inviting friends to join them and use the app as well. The reason
    that people start downloading your app is because they have become aware of it.
    You will see higher conversion numbers when implementing a friend referral flow.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 成长黑客（除了其他事情之外，还是一个持续的过程，结果是现有用户邀请朋友加入并使用应用）。人们开始下载你的应用的原因是他们已经意识到了它。当你实施朋友推荐流程时，你会看到更高的转化率。
- en: 'Growth hacking:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 成长黑客：
- en: Growth hacking (basically a modern word for marketing) is a topic that deserves
    some books on its own. You should consider building a growth engine before starting
    to build your app. Build an audience for the problem that you are going to solve
    with your app. It is a great way to test your app idea and to create awareness.
    The simplest way to do so is to create a regular blog about the topic.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 成长黑客（基本上是营销的现代说法）是一个值得单独写书的主题。在开始构建你的应用之前，你应该考虑构建一个增长引擎。为你的应用将要解决的问题建立一个受众。这是一种测试你的应用想法和创造意识的好方法。最简单的方法是创建一个关于这个主题的常规博客。
- en: '![](img/995d89fa-0980-434c-9936-6c07a3dd44d6.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/995d89fa-0980-434c-9936-6c07a3dd44d6.png)'
- en: 'The perfect conversion goes like this: Once the user has signed up and started
    a story or contributed to one (activation), and then decides to continue doing
    so (retention), he will become an ambassador of your app and he will start sharing
    stories or he will invite friends so they can write stories together (referrals).'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 完美的转化是这样的：一旦用户注册并开始了一个故事或对其做出了贡献（激活），然后决定继续这样做（留存），他将成为你应用的代言人，并开始分享故事或邀请朋友一起写故事（推荐）。
- en: Referrals are important, as word of mouth is one of the most effective types
    of marketing. More than 70% of potential app users download apps based on recommendations
    of friends, colleagues, or family. With that in mind, the goal should be to enable
    the app users to drive more awareness, which is exactly what the Team Stories
    app tries to do. Referrals are often the only way to promote an app. This is because
    of the fact that the cost of user acquisition (advertisements) for most mobile
    apps otherwise would be higher than the revenues.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐很重要，因为口碑是营销中最有效的类型之一。超过70%的潜在应用用户是基于朋友、同事或家人的推荐下载应用的。考虑到这一点，目标应该是让应用用户能够推动更多的知名度，这正是团队故事应用试图做到的。推荐往往是推广应用的唯一方式。这是因为，对于大多数移动应用来说，用户获取成本（广告）通常会比收入高。
- en: Due to their nature, particular apps, such as social, or messaging ones, and
    of course game apps as well, are very suitable for inviting friends. Often they
    would not make much sense if collaboration in some way would not be possible.
    For a lot of other apps the reason for sharing or inviting might be less obvious.
    However, if you provide incentives, as, for example, Dropbox is doing by providing
    additional space for each new reference, you can still benefit from referrals.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其性质，某些特定应用，如社交或消息应用，以及当然还有游戏应用，非常适合邀请朋友。如果以某种方式无法进行协作，它们通常就没有太多意义。对于许多其他应用，分享或邀请的原因可能不那么明显。然而，如果你提供激励，例如，Dropbox
    通过为每个新推荐提供额外空间来做到这一点，你仍然可以从推荐中受益。
- en: Summary
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have seen that there are various ways for onboarding a user
    and to encourage a user to sign-up. We have seen that is important to keep the
    barrier as low as possible, and that you need to make it very clear from the beginning
    what the benefits of your app are and why the user wants to use it. Alternatively,
    just to quote Simon Sinek, "Start with why".
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了引导用户和鼓励用户注册的多种方法。我们看到了保持门槛尽可能低的重要性，并且你需要从一开始就非常清楚地说明你应用的好处以及用户为什么要使用它。或者，就像西蒙·辛克所说的那样，“从为什么开始”。
- en: We have seen that the implementation for social sign-up using the Firebase or
    the Fabric SDK is fairly easy to implement and we have learned how we can offer
    multiple options to our users, including the option to initially skip registration.
    Although it lowers the barrier, the latter is not necessarily a good thing. An
    anonymous user has less value than a known one. Also, a known user is easier to
    convert into a paying one (customer). You need to find out what works best for
    your app. Maybe you just want to grow a large user base to begin with. In the
    next chapter, we will see how important it is to have a scalable solution.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到，使用 Firebase 或 Fabric SDK 实现社交注册相对容易，我们也学习了如何为用户提供多种选择，包括最初跳过注册的选项。尽管这降低了门槛，但后者并不一定是好事。匿名用户的价值不如已知的用户。此外，已知的用户更容易转化为付费用户（客户）。你需要找出对你应用来说什么最有效。也许你最初只是想扩大用户基础。在下一章中，我们将看到拥有可扩展解决方案的重要性。
