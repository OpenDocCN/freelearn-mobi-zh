- en: Chapter 5. Android Testing Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章 Android测试环境
- en: We built our application and a decent set of tests that we run to verify the
    basic aspect and behavior of the Temperature Converter application. Now it is
    time to provide different conditions to run these tests, other tests, or even
    run the application manually to understand what the user experience would be while
    using it.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们构建了我们的应用程序和一套合理的测试，我们运行这些测试以验证温度转换应用程序的基本方面和行为。现在，是时候提供不同的条件来运行这些测试，其他测试，甚至手动运行应用程序以了解使用时的用户体验了。
- en: 'In this chapter, we will cover:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Creating **Android Virtual Devices** (**AVD**) to provide different conditions
    and configurations for the application
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建**Android虚拟设备**（**AVD**）以提供不同的条件和配置
- en: Understanding the different configurations we can specify while creating AVDs
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解在创建AVD时可以指定的不同配置
- en: How to run AVDs
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何运行AVD
- en: How to detach an AVD from its window to create headless emulators
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将AVD从其窗口中分离出来以创建无头模拟器
- en: Unlocking the screen to be able to run all the tests
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解锁屏幕以便运行所有测试
- en: Simulating real-life network conditions
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模拟现实生活中的网络条件
- en: Running `monkey` to generate events to send to the application
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行`monkey`生成事件以发送到应用程序
- en: Creating Android Virtual Devices
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Android虚拟设备
- en: To get the best opportunity of detecting problems related with the device where
    the application is running, you need the widest possible coverage of features
    and configurations.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得最佳机会来检测与应用程序运行设备相关的问题，你需要尽可能广泛的功能和配置覆盖。
- en: While final and conclusive tests should always be run on real devices with the
    everyday increasing number of devices, it is virtually impossible that you will
    have one device of each to test your application. There are also device farms
    in the cloud to test on a variety of devices but its cost sometimes is above the
    average developer budget. Hopefully, Android provides a way of simulating, more
    or less verbatim, a great variety of features and configuration just from the
    convenience of the emulator and AVD configurations.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然最终和结论性的测试应该始终在具有日益增长的设备数量的真实设备上运行，但你几乎不可能拥有每种设备来测试你的应用程序。云中也有设备农场来测试各种设备，但它的成本有时超过了普通开发者的预算。希望Android提供了一种从模拟器AVD配置的便利性中，或多或少地模拟出各种功能和配置的方法。
- en: Note
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: All the examples in this chapter are run from a Ubuntu 10.04 (Lucid Lynx) 64bit
    using **Android SDK and AVD Manager** Revision 10 and **Android SDK** with platform
    2.3 (API 9) installed.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的所有示例都是在Ubuntu 10.04（Lucid Lynx）64位操作系统上运行的，使用**Android SDK和AVD管理器**修订版10和**Android
    SDK**，安装了平台2.3（API 9）。
- en: To create AVD you use `android` from the command line or even from inside Eclipse
    using **Window | Android SDK and AVD Manager** or its shortcut icon.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建AVD，你可以使用命令行中的`android`，甚至可以从Eclipse内部使用**窗口 | Android SDK和AVD管理器**或其快捷图标来完成。
- en: 'Running the command you access the **Android SDK and AVD Manager** where you
    press the **New..**. button to create a new AVD, and this dialog box is presented:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 运行命令后，你可以访问**Android SDK和AVD管理器**，在那里你按下**新建..**.按钮来创建一个新的AVD，并显示此对话框：
- en: '![Creating Android Virtual Devices](img/3500_05_01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![创建Android虚拟设备](img/3500_05_01.jpg)'
- en: If you press **Create AVD** you finish the creation of the AVD using the default
    values. However if you need to support different configurations, you can specify
    different hardware properties by using the **New..**. button.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你按下**创建AVD**，你将使用默认值完成AVD的创建。然而，如果你需要支持不同的配置，你可以通过使用**新建..**.按钮来指定不同的硬件属性。
- en: 'The properties that can be set are:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 可以设置的属性包括：
- en: '| Property | Type | Description |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 属性 | 类型 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Camera support | boolean | Whether the device has a camera or not. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| 摄像头支持 | 布尔值 | 设备是否有摄像头。 |'
- en: '| Cache partition size | integer | The size of the cache partition. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 缓存分区大小 | 整数 | 缓存分区的大小。 |'
- en: '| SD Card support | boolean | Whether the device supports insertion and removal
    of virtual SD Cards. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| SD卡支持 | 布尔值 | 设备是否支持插入和移除虚拟SD卡。 |'
- en: '| Cache partition support | boolean | Whether the cache partition is supported.
    Usually this partition is mounted in `/cache`. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 缓存分区支持 | 布尔值 | 是否支持缓存分区。通常这个分区挂载在`/cache`。 |'
- en: '| Keyboard support | boolean | Whether the device has a physical QWERTY keyboard.
    |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 键盘支持 | 布尔值 | 设备是否具有物理QWERTY键盘。 |'
- en: '| Audio playback support | boolean | Whether the device can play audio |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 音频播放支持 | 布尔值 | 设备是否可以播放音频 |'
- en: '| Audio recording support | boolean | Whether the device can record audio.
    |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 音频录制支持 | 布尔值 | 设备是否可以录制音频。|'
- en: '| DPAD support | boolean | Whether the device has DPAD keys. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| 方向键支持 | 布尔值 | 设备是否有方向键。|'
- en: '| Maximum vertical camera pixels | integer | The maximum vertical dimension
    in pixels of the virtual camera. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 最大垂直摄像头像素 | 整数 | 虚拟摄像头的最大垂直尺寸（以像素为单位）。|'
- en: '| Accelerometer | boolean | Whether the device has an accelerometer. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 加速计 | 布尔值 | 设备是否有加速度计。|'
- en: '| GPS support | boolean | Whether the device has a GPS. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| GPS支持 | 布尔值 | 设备是否有GPS。|'
- en: '| Device RAM size | integer | The amount of physical RAM on the device. This
    is expressed in megabytes. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| 设备RAM大小 | 整数 | 设备上的物理RAM量。这以兆字节表示。|'
- en: '| Touch-screen support | boolean | Whether there is a touch screen on the device.
    |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 触摸屏支持 | 布尔值 | 设备上是否有触摸屏。|'
- en: '| Battery support | boolean | Whether the device can run on battery. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 电池支持 | 布尔值 | 设备是否可以由电池供电。|'
- en: '| GSM modem support | boolean | Whether there is a GSM modem in the device.
    |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| GSM调制解调器支持 | 布尔值 | 设备中是否有GSM调制解调器。|'
- en: '| Track-ball support | boolean | Whether there is a trackball on the device.
    |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| 轨迹球支持 | 布尔值 | 设备上是否有轨迹球。|'
- en: '| Maximum horizontal camera pixels | integer | The maximum horizontal dimension
    in pixels of the virtual camera. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 最大水平摄像头像素 | 整数 | 虚拟摄像头的最大水平尺寸（以像素为单位）。|'
- en: 'After pressing **Start..**. to start the AVD you can select other properties:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在按下**开始**...以启动AVD后，你可以选择其他属性：
- en: '![Creating Android Virtual Devices](img/3500_05_02.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![创建Android虚拟设备](img/3500_05_02.jpg)'
- en: Setting the scale is also very useful to test your application in a window that
    resembles the size of a real device. It is a very common mistake to test your
    application in an AVD with a window size that is at least twice the size of a
    real device, and using a mouse pointer believing that everything is fine, to later
    realize on a physical device with a screen of 5 or 6 inches that some items on
    the UI are impossible to touch with your finger.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 设置缩放也非常有用，可以在类似于真实设备大小的窗口中测试你的应用程序。在AVD中测试应用程序，窗口大小至少是真实设备大小的两倍，并使用鼠标指针相信一切正常，然后在5或6英寸的物理设备屏幕上意识到UI上的某些项目用手指是无法触摸的，这是一个非常常见的错误。
- en: To scale the AVD screen you should also set the **Monitor dpi** to a value that
    corresponds to the monitor you are using.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了缩放AVD屏幕，你还应该将**监视器dpi**设置为与您使用的监视器相对应的值。
- en: Finally, it is also helpful to test your application under the same conditions
    repeatedly. To be able to test under the same conditions again and again, it is
    sometimes helpful to delete all the information that was entered in previous sessions.
    If this is the case, check **Wipe user data** to start afresh every time.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，反复在相同条件下测试你的应用程序也是有帮助的。为了能够反复在相同条件下进行测试，有时删除之前会话中输入的所有信息是有帮助的。如果是这种情况，请检查**清除用户数据**以每次从头开始。
- en: Running AVDs from the command line
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从命令行运行AVDs
- en: Wouldn't it be nice if we could run different AVDs from the command line and
    perhaps automate the way we run our tests or script them?
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们能够从命令行运行不同的AVD，并且可能自动化我们的测试或为其编写脚本，那岂不是很好？
- en: By freeing the AVD from its windows, open a whole new world of automation and
    scripting possibilities.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将AVD从其窗口中解放出来，打开了一个全新的自动化和脚本编写可能性世界。
- en: Well, let's explore these alternatives.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，让我们探索这些替代方案。
- en: Headless emulator
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无头模拟器
- en: A headless emulator (its window is not displayed) comes in very handy when we
    run automated tests and nobody is looking at the window, or the interaction between
    the test runner and the application is so fast that we hardly see anything.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行自动化测试且没有人查看窗口，或者测试运行器与应用程序之间的交互非常快以至于我们几乎看不到任何东西时，无头模拟器（其窗口不显示）非常有用。
- en: Anyway, it is also worth mentioning that sometimes you can't understand why
    some tests fail until you see the interaction on the screen, so use both alternatives
    with a bit of judgment.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，也值得提到的是，有时你只有在看到屏幕上的交互后才能理解为什么某些测试失败，所以请根据一些判断使用这两种替代方案。
- en: One thing that we may have noticed running AVDs is that their communication
    ports are assigned at runtime, incrementing the last used port by 2 and starting
    with 5554\. This is used to name the emulator and set its serial number, for example,
    the emulator using port 5554 becomes `emulator-5554`. This is very useful when
    we run AVDs during the development process because we don't have to pay attention
    to port assignment. But it can be very confusing and difficult to track which
    test runs on which emulator if we are running more than one simultaneously.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在运行AVD时可能注意到的一件事是，它们的通信端口是在运行时分配的，通过将最后使用的端口增加2并从5554开始。这是用来命名模拟器和设置其序列号的，例如，使用端口5554的模拟器变为`emulator-5554`。这在我们在开发过程中运行AVD时非常有用，因为我们不需要注意端口分配。但如果同时运行多个模拟器，这可能会非常混乱且难以追踪哪个测试运行在哪个模拟器上。
- en: In those cases, we will be assigning known ports to the communication ports
    to keep the specific AVD under our control.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在那些情况下，我们将为通信端口分配已知的端口，以保持特定AVD在我们控制之下。
- en: 'Usually, when we are running tests on more than one emulator at the same time,
    not only do we want to detach the window, but also avoid sound output. We will
    add options for this as well:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，当我们同时运行多个模拟器上的测试时，我们不仅想要断开窗口，还想要避免声音输出。我们也将为此添加选项：
- en: 'The command line to launch the test AVD we just created would be:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动我们刚刚创建的测试AVD的命令行将是：
- en: '[PRE0]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The port must be an integer between 5554 and 5584:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 端口必须是一个介于5554和5584之间的整数：
- en: '[PRE1]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This shows the device in the device list.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这显示了设备在设备列表中的显示。
- en: 'The next step is to install the application and the tests:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是安装应用程序和测试：
- en: '[PRE2]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then we can use the specified serial number to run the tests on it:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们可以使用指定的序列号来运行测试：
- en: '[PRE3]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Disabling the keyguard
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 禁用键guard
- en: We can see the tests being run with no intervention and not requiring access
    to the emulator GUI.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到测试在没有干预的情况下运行，并且不需要访问模拟器GUI。
- en: But sometimes you may receive some errors for tests that are not failing if
    you run in a more standard approach, like in a standard emulator launched from
    Eclipse. In such cases one of the reasons is that the emulator may be locked at
    the first screen and we need to unlock it to be able to run tests involving the
    UI.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 但有时，如果你以更标准的方式运行，比如从Eclipse启动的标准模拟器，你可能会收到一些测试未失败的错误。在这种情况下，其中一个原因是模拟器可能在第一屏被锁定，我们需要解锁它才能运行涉及UI的测试。
- en: 'To unlock the screen you can use:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要解锁屏幕，你可以使用：
- en: '[PRE4]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The lock screen can also be disabled programmatically; however this has the
    disadvantage of including testing-related code in your application. This code
    should be removed or disabled once the application is ready to ship.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 锁屏也可以通过程序来禁用；然而，这有一个缺点，就是会将测试相关的代码包含在你的应用程序中。一旦应用程序准备发布，这些代码应该被移除或禁用。
- en: To do this, the following permission should be added to the manifest file (`AndroidManifest.xml`),
    and then disable the screen lock in your application under test.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，应该在清单文件（`AndroidManifest.xml`）中添加以下权限，然后在测试中的应用程序中禁用屏幕锁。
- en: 'To add the permission, add this element to the manifest:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加权限，将此元素添加到清单中：
- en: '[PRE5]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Then in the `Activity` under test you should add the following code, preferably
    in `onResume():`
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在测试的`Activity`中添加以下代码，最好在`onResume()`中添加：
- en: '[PRE6]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: That is, get the `KeyguardManager`, then obtain the `KeyguardLock` specifying
    a tag, customize the package name to be able to debug who is disabling the keyguard.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 即，获取`KeyguardManager`，然后指定一个标签来获取`KeyguardLock`，自定义包名以便能够调试谁正在禁用键guard。
- en: Then disable the keyguard from showing using `disableKeyguard()`. If the keyguard
    is currently showing, it is hidden. The keyguard will be prevented from showing
    again until `reenableKeyguard()` is called.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用`disableKeyguard()`禁用显示键guard。如果键guard当前正在显示，它将被隐藏。只有在调用`reenableKeyguard()`之前，键guard才会被阻止再次显示。
- en: Cleaning up
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 清理
- en: On certain occasions you also need to clean up services and processes started
    after running some tests to prevent the results of the latter from being influenced
    by the ending conditions of the previous tests. In these cases, it is always better
    to start from a known condition freeing all the used memory, stopping services,
    reloading resources, and restarting processes, which is achievable by warm-booting
    the emulator.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，你还需要清理在运行一些测试后启动的服务和进程，以防止后续测试的结果受到先前测试结束条件的影响。在这些情况下，始终从已知条件开始，释放所有使用的内存，停止服务，重新加载资源，并重新启动进程，这是通过热启动模拟器实现的。
- en: '[PRE7]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This command line opens the emulator shell for our emulator and runs the stop
    and start commands.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令行为我们打开模拟器shell并运行停止和启动命令。
- en: 'The evolution of these commands can be monitored using the `logcat` command:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `logcat` 命令来监控这些命令的演变：
- en: '[PRE8]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You will see messages like these:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到类似的消息：
- en: '**D/AndroidRuntime( 241):**'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**D/AndroidRuntime( 241):**'
- en: '**D/AndroidRuntime( 241): >>>>>>>>>>>>>> AndroidRuntime START <<<<<<<<<<<<<<**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**D/AndroidRuntime( 241): >>>>>>>>>>>>>> AndroidRuntime START <<<<<<<<<<<<<<**'
- en: '**D/AndroidRuntime( 241): CheckJNI is ON**'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**D/AndroidRuntime( 241): CheckJNI是开启的**'
- en: '**D/AndroidRuntime( 241): --- registering native functions ---**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**D/AndroidRuntime( 241): --- 注册本地函数 ---**'
- en: '**I/SamplingProfilerIntegration( 241): Profiler is disabled**.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**I/SamplingProfilerIntegration( 241): 分析器已禁用**。'
- en: '**I/Zygote ( 241): Preloading classes..**.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**I/Zygote ( 241): 预加载类..**.'
- en: '**D/dalvikvm( 241): GC_EXPLICIT freed 816 objects / 47208 bytes in 7ms**'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**D/dalvikvm( 241): GC_EXPLICIT freed 816 objects / 47208 bytes in 7ms**'
- en: '**I/ServiceManager( 28): service ''connectivity'' died**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**I/ServiceManager( 28): service ''connectivity'' died**'
- en: '**I/ServiceManager( 28): service ''throttle'' died**'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**I/ServiceManager( 28): service ''throttle'' died**'
- en: '**I/ServiceManager( 28): service ''accessibility'' died**'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**I/ServiceManager( 28): service ''accessibility'' died**'
- en: '**…**'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**…**'
- en: Note
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This warm boot doesn't work well on Android 2.2 Froyo emulator but works perfectly
    on Android devices. A bug has been reported and you can follow its evolution at
    [http://code.google.com/p/android/issues/detail?id=9814](http://code.google.com/p/android/issues/detail?id=9814).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这个热启动在Android 2.2 Froyo模拟器上工作得不太好，但在Android设备上运行得非常完美。已经报告了一个错误，您可以在[http://code.google.com/p/android/issues/detail?id=9814](http://code.google.com/p/android/issues/detail?id=9814)上跟踪其进展。
- en: Terminating the emulator
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 终止模拟器
- en: 'Once we have finished working with one of the headless emulator instances,
    we started using the command mentioned before. We use the following command line
    to kill it:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们完成了一个无头模拟器实例的工作，我们就开始使用之前提到的命令。我们使用以下命令行来终止它：
- en: '[PRE9]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This will stop the emulator and free the used resources and terminate the emulator
    process on the host computer.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这将停止模拟器，释放使用的资源，并在主机计算机上终止模拟器进程。
- en: Additional emulator configurations
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 额外的模拟器配置
- en: Sometimes what we need to test is outside the reach of the options that can
    be set when the AVD is created or configured.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，我们需要测试的内容超出了在创建或配置AVD时可以设置的选项范围。
- en: One of the cases could be the need to test our application under different locales.
    Let's say we want to test our application on a Japanese phone—an emulator with
    the language and country set to Japanese and Japan respectively.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一种情况可能是需要在不同的区域设置下测试我们的应用程序。比如说，我们想在日本的手机上测试我们的应用程序——一个将语言和地区分别设置为日语和日本的模拟器。
- en: We have the ability to pass these properties in the emulator command line.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有能力在模拟器命令行中传递这些属性。
- en: 'The `-prop` command line option allows us to set any of the properties we could
    set:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`-prop` 命令行选项允许我们设置我们能够设置的任何属性：'
- en: '[PRE10]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To verify that our settings were successful, we can use the `getprop` command
    to verify them, for example:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证我们的设置是否成功，我们可以使用 `getprop` 命令来验证它们，例如：
- en: '[PRE11]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**ja**'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**ja**'
- en: '[PRE12]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**JP**'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**JP**'
- en: 'If you want to clear all the user data after playing with the persistent settings,
    you can use the following command:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想在调整了持久设置后清除所有用户数据，可以使用以下命令：
- en: '[PRE13]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: And the emulator will start afresh.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，模拟器将重新启动。
- en: Simulating network conditions
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟网络条件
- en: It is extremely important to test under different network conditions but it
    is neglected more often than not. This would lead to misconceptions and to believe
    that the application behaves differently because we use the host network which
    presents a different speed and latency.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在不同的网络条件下进行测试非常重要，但这种情况往往被忽视。这会导致误解，并认为应用程序的行为不同，因为我们使用了主机网络，它具有不同的速度和延迟。
- en: The Android emulator supports network throttling, for example to support slower
    network speeds and higher connection latencies. This can be done in the emulator
    command line using the options `-netspeed <speed>` and `-netdelay <delay>`.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: Android模拟器支持网络限制，例如支持较慢的网络速度和较高的连接延迟。这可以在模拟器命令行中使用选项 `-netspeed <speed>` 和 `-netdelay
    <delay>` 来实现。
- en: 'The complete list of supporting options is as follows:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 支持的完整选项列表如下：
- en: 'For network speed:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 对于网络速度：
- en: '| **Option** | **Description** | **Speeds [kbits/s]** |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| **选项** | **描述** | **速度 [kbits/s]** |'
- en: '| `-netspeed gsm` | GSM/CSD | up: 14.4, down: 14.4 |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| `-netspeed gsm` | GSM/CSD | 上行：14.4，下行：14.4 |'
- en: '| `-netspeed hscsd` | HSCSD | up: 14.4, down: 43.2 |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| `-netspeed hscsd` | HSCSD | 上行：14.4，下行：43.2 |'
- en: '| `-netspeed gprs` | GPRS | up: 40.0, down: 80.0 |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| `-netspeed gprs` | GPRS | 上行：40.0，下行：80.0 |'
- en: '| `-netspeed edge` | EDGE/EGPRS | up: 118.4, down: 236.8 |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| `-netspeed edge` | EDGE/EGPRS | 上行：118.4，下行：236.8 |'
- en: '| `-netspeed umts` | UMTS/3G | up: 128.0, down: 1920.0 |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| `-netspeed umts` | UMTS/3G | 上行：128.0，下行：1920.0 |'
- en: '| `-netspeed hsdpa` | HSDPA | up: 348.0, down: 14400.0 |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| `-netspeed hsdpa` | HSDPA | 上行：348.0，下行：14400.0 |'
- en: '| `-netspeed full` | no limit | up: 0.0, down: 0.0 |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| `-netspeed full` | 无限制 | 上行：0.0，下行：0.0 |'
- en: '| `-netspeed <num>` | select both upload and download speed | up: as specified,
    down: as specified |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| `-netspeed <num>` | 选择上传和下载速度 | 上行：指定，下行：指定 |'
- en: '| `-netspeed <up>:<down>` | select individual up and down speed | up: as specified,
    down: as specified |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| `-netspeed <up>:<down>` | 选择单独的上行和下行速度 | 上行：指定，下行：指定 |'
- en: 'For latency:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 对于延迟：
- en: '| Option | Description | Delay [msec] |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 描述 | 延迟 [毫秒] |'
- en: '| --- | --- | --- |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `-netdelay gprs` | GPRS | min 150, max 550 |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| `-netdelay gprs` | GPRS | 最小 150，最大 550 |'
- en: '| `-netdelay edge` | EDGE/EGPRS | min 80, max 400 |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| `-netdelay edge` | EDGE/EGPRS | 最小 80，最大 400 |'
- en: '| `-netdelay umts` | UMTS/3G | min 35, max 200 |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| `-netdelay umts` | UMTS/3G | 最小 35，最大 200 |'
- en: '| `-netdelay none` | no latency | min 0, max 0 |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| `-netdelay none` | 无延迟 | 最小 0，最大 0 |'
- en: '| `-netdelay <num>` | select exact latency | latency as specified |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| `-netdelay <num>` | 选择精确延迟 | 指定的延迟 |'
- en: '| `-netdelay <min>:<max>` | select min and max latencies | minimum and maximum
    latencies as specified |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| `-netdelay <最小>:<最大>` | 选择最小和最大延迟 | 指定的最小和最大延迟 |'
- en: 'The emulator, if values are not specified, uses the following default values:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未指定值，模拟器将使用以下默认值：
- en: Default network speed is 'full'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认网络速度为 '全速'
- en: Default network latency is 'none'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认网络延迟为 '无'
- en: This is an example of an emulator using these options to select the GSM network
    speed of 14.4 kbits/sec and a GPRS latency of 150 to 500 msec.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个模拟器使用这些选项来选择 14.4 kbits/sec 的 GSM 网络速度和 150 到 500 毫秒的 GPRS 延迟的示例。
- en: '[PRE14]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Once the emulator is running, you can verify these network settings or change
    them interactively using the Android console using a TELNET client:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模拟器运行，你可以使用 Android 控制台通过 TELNET 客户端交互式地验证这些网络设置或更改它们：
- en: '[PRE15]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '**Trying ::1..**.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**尝试 ::1..**.'
- en: '**Trying 127.0.0.1..**.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**尝试 127.0.0.1..**.'
- en: '**Connected to localhost**.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**连接到本地主机**.'
- en: '**Escape character is ''^]''**.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '**转义字符是 ''^]''**.'
- en: '**Android Console: type ''help'' for a list of commands**'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '**Android 控制台：输入 ''help'' 查看命令列表**'
- en: '**OK**'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**OK**'
- en: 'After we are connected we can type the following command:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 连接后，我们可以输入以下命令：
- en: '[PRE16]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '**Current network status:**'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**当前网络状态：**'
- en: '**download speed: 14400 bits/s (1.8 KB/s)**'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载速度：14400 比特/秒（1.8 KB/s）**'
- en: '**upload speed: 14400 bits/s (1.8 KB/s)**'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '**上传速度：14400 比特/秒（1.8 KB/s）**'
- en: '**minimum latency: 150 ms**'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**最小延迟：150 毫秒**'
- en: '**maximum latency: 550 ms**'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '**最大延迟：550 毫秒**'
- en: '**OK**'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '**OK**'
- en: You can use the emulator to test applications using network services either
    manually or in an automated way.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用模拟器手动或自动地测试使用网络服务应用程序。
- en: In some cases this not only involves throttling the network speed but also changing
    the state of the GPRS connection to investigate how the application behaves and
    copes with these situations. To change this status we can also use the Android
    console in a running emulator.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，这不仅涉及限制网络速度，还涉及更改 GPRS 连接的状态，以调查应用程序如何表现和应对这些情况。要更改此状态，我们还可以在运行的模拟器中使用
    Android 控制台。
- en: 'For example to unregister the emulator from the network we can use:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要注销模拟器从网络，我们可以使用：
- en: '[PRE17]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '**Trying ::1..**.'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '**尝试 ::1..**.'
- en: '**Trying 127.0.0.1..**.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '**尝试 127.0.0.1..**.'
- en: '**Connected to localhost**.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '**连接到本地主机**.'
- en: '**Escape character is ''^]''**.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '**转义字符是 ''^]''**.'
- en: '**Android Console: type ''help'' for a list of commands**'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '**Android 控制台：输入 ''help'' 查看命令列表**'
- en: '**OK**'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '**OK**'
- en: 'Next to receiving the **OK** subprompt, we can set the data network mode as
    unregistered by issuing the following command:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在接收到 **OK** 子提示符后，我们可以通过以下命令将数据网络模式设置为未注册：
- en: '[PRE18]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '**OK**'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '**OK**'
- en: '**quit**'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**退出**'
- en: 'After testing the application under this condition you can return to a connected
    state by using:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试应用程序在此条件下后，你可以通过使用以下命令返回到连接状态：
- en: '[PRE19]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '**OK**'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '**OK**'
- en: 'To verify the status you can use:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证状态，可以使用：
- en: '[PRE20]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '**OK**'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '**OK**'
- en: Additional qemu options
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外的 qemu 选项
- en: You may know that the Android emulator is based on an Open Source project named
    Qemu ([http://qemu.org](http://qemu.org)).
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能知道，Android 模拟器基于一个名为 Qemu 的开源项目（[http://qemu.org](http://qemu.org)）。
- en: Qemu is a generic emulator and virtualizer. Android uses its emulator capabilities
    to run an OS that is made for a different architecture on a different machine
    as your PC or Mac. It uses dynamic translation achieving very good performance,
    so good that to resemble real Android devices the emulation is throttled in some
    cases.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Qemu是一个通用的模拟器和虚拟化器。Android使用其模拟器功能在PC或Mac等不同机器上运行为不同架构制作的操作系统。它使用动态转换，实现了非常好的性能，好到足以在某些情况下限制模拟速度以类似于真实的Android设备。
- en: Because of this you can add some qemu-specific options when you run the emulator.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，当你运行模拟器时，你可以添加一些qemu特定的选项。
- en: For example, we may want to open the qemu console which is accessible via VNC
    [Virtual Network Computing], another Open Source project providing remote frame-buffer
    capabilities ([http://en.wikipedia.org/wiki/Virtual_Network_Computing](http://en.wikipedia.org/wiki/Virtual_Network_Computing)).
    In this console, we can issue some qemu-specific commands.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可能想打开通过VNC（虚拟网络计算）可访问的qemu控制台，这是另一个开源项目，提供远程帧缓冲功能（[http://en.wikipedia.org/wiki/Virtual_Network_Computing](http://en.wikipedia.org/wiki/Virtual_Network_Computing)）。在这个控制台中，我们可以发出一些qemu特定的命令。
- en: 'To do this, let''s add the following options:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，让我们添加以下选项：
- en: '[PRE21]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: All the options following `-qemu` are passed verbatim to qemu. In this case
    we pass `-vnc :2`, to open the virtual display 2, which is at the port 5902 as
    VNC starts counting from 5900.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 所有跟随`-qemu`的选项都将原样传递给qemu。在这种情况下，我们传递`-vnc :2`，以打开虚拟显示2，该显示在VNC启动时从5900端口开始计数，端口号为5902。
- en: Using some VNC client, like Vinagre—Remote Desktop Viewer, which is provided
    under the GNOME desktop in most of the distributions we can open the connection
    to the console. Vinagre can be launched from the GNOME desktop by **Applications
    | Internet | Remote Desktop Viewer**.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 使用一些VNC客户端，如Vinagre—远程桌面查看器，这是在大多数发行版中GNOME桌面提供的，我们可以打开到控制台的连接。Vinagre可以从GNOME桌面通过**应用程序
    | 互联网 | 远程桌面查看器**启动。
- en: In Microsoft Windows RealVNC can be used as the client.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在Microsoft Windows中，可以使用RealVNC作为客户端。
- en: 'Then we should open the connection to the VNC server in qemu:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们应该在qemu中打开到VNC服务器的连接：
- en: '![Additional qemu options](img/3500_05_03.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![额外的qemu选项](img/3500_05_03.jpg)'
- en: 'We will then be presented with the qemu console:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到qemu控制台：
- en: '![Additional qemu options](img/3500_05_04.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![额外的qemu选项](img/3500_05_04.jpg)'
- en: 'The list of internal commands can be obtained by entering the following command
    on the prompt:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在提示符中输入以下命令来获取内部命令列表：
- en: '[PRE22]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The analysis of these commands is outside the scope of this book but you can
    find some information online on the Qemu website.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令的分析超出了本书的范围，但您可以在Qemu网站上找到一些相关信息。
- en: Note
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Latest versions of the emulator, starting with Android 2.2 (Froyo), have a
    bug that prevents qemu options from being specified in the command line (even
    the help option (`-qemu -h`) is not working), even though they are listed in the
    emulator help (`emulator -help`) as the following:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 从Android 2.2（Froyo）开始的最新版本的模拟器有一个bug，阻止在命令行中指定qemu选项（甚至帮助选项（`-qemu -h`）也不起作用），尽管它们在模拟器帮助（`emulator
    -help`）中列出，如下所示：
- en: '`-qemu args... pass arguments to qemu`'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '`-qemu args... 将参数传递给qemu`'
- en: '`-qemu -h display qemu help`'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '`-qemu -h display qemu help`'
- en: Running monkey
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行monkey
- en: You may know about the infinite monkey theorem. This theorem states that a monkey
    hitting keys at random on a typewriter keyboard for an infinite amount of time
    will almost surely type a given text, such as the complete works of William Shakespeare.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能听说过无限猴子定理。这个定理指出，一只猴子在打字机上随机按键无限时间后，几乎肯定会打出给定的文本，比如威廉·莎士比亚的完整作品。
- en: The Android version of this theorem states that a monkey producing random touches
    on a device could crash your application in, well... much less than an infinite
    amount of time.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 这个定理的安卓版本指出，一只猴子在设备上随机触摸可能会导致你的应用程序崩溃，嗯...时间远远少于无限时间。
- en: In this line, Android features a monkey application ([http://developer.android.com/guide/developing/tools/monkey.html](http://developer.android.com/guide/developing/tools/monkey.html))
    that would generate the random events instead of a real monkey.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一行中，Android提供了一个monkey应用程序（[http://developer.android.com/guide/developing/tools/monkey.html](http://developer.android.com/guide/developing/tools/monkey.html)），它会生成随机事件而不是真正的猴子。
- en: 'The simplest way to run monkey against our application to generate random events
    is:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 对我们的应用程序运行monkey以生成随机事件的最简单方法是：
- en: '[PRE23]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'And you will be receiving this output:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 你将收到以下输出：
- en: '**Events injected: 1000**'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '**注入事件：1000**'
- en: '**:Dropped: keys=0 pointers=0 trackballs=0 flips=0**'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '**:丢失：keys=0 pointers=0 trackballs=0 flips=0**'
- en: '**## Network stats: elapsed time=100914ms (0ms mobile, 0ms wifi, 100914ms not
    connected)**'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '**## 网络统计：经过时间=100914ms（0ms移动，0mswifi，100914ms未连接）**'
- en: '**// Monkey finished**'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '**// 猴子完成**'
- en: '**This displays the details of the events injected through monkey**.'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '**这显示了通过猴子注入的事件的详细信息**。'
- en: The monkey will send events only to the specified package (`-p`), in this case
    `com.example.aatg.tc`, in a very verbose manner (`-v -v`). The count of events
    sent will be 1000.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 猴子只会将事件发送到指定的包（`-p`），在这个例子中是`com.example.aatg.tc`，并以非常冗长的方式（`-v -v`）发送。发送的事件数量将是1000。
- en: Client-server monkey
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 客户端-服务器猴子
- en: There is another way of running monkey. It also presents a client-server model
    that ultimately allows for the creation of scripts controlling what events are
    sent and not relying only on random generation.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 运行猴子的另一种方式。它也提供了一个客户端-服务器模型，最终允许创建控制发送哪些事件以及不依赖于随机生成的脚本。
- en: Usually the port used by monkey is 1080 but you can use another one if it better
    suits your preferences.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 通常猴子使用的端口是1080，但如果你有更好的偏好，可以使用另一个端口。
- en: '[PRE24]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Then we need to redirect the emulator port:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们需要重定向模拟器端口：
- en: '[PRE25]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now we are ready to send events. To do it manually we can use a TELNET client:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好发送事件。要手动发送，我们可以使用TELNET客户端：
- en: '[PRE26]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '**Trying ::1..**.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '**尝试 ::1..**.'
- en: '**Trying 127.0.0.1..**.'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '**尝试 127.0.0.1..**.'
- en: '**Connected to localhost**.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '**连接到localhost**.'
- en: '**Escape character is ''^]''**.'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '**退出字符是''^]''**.'
- en: 'After the connection is established we can type the specific monkey command:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 连接建立后，我们可以输入特定的猴子命令：
- en: '[PRE27]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '**OK**'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '**OK**'
- en: To finish this exit the telnet command.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 要结束此操作，请退出TELNET命令。
- en: 'If we need to exercise the application repeatedly, it is much more convenient
    to create a script with the commands we want to send. A monkey script could look
    like this:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要重复练习应用程序，创建一个包含我们想要发送的命令的脚本会更为方便。一个猴子脚本可能看起来像这样：
- en: '[PRE28]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The events and its parameters are defined here.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 事件及其参数在这里定义。
- en: 'After having started the Temperature Converter application we can run this
    script to exercise the user interface. To start the application you can use the
    emulator window and click on its launcher icon or use the command line, which
    is the only alternative if the emulator is headless, as follows:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动温度转换器应用程序后，我们可以运行此脚本以练习用户界面。要启动应用程序，你可以使用模拟器窗口并点击其启动器图标，或者使用命令行，这是如果模拟器是无头的情况下唯一的替代方案，如下所示：
- en: '[PRE29]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'This is informed in the log by this line:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 日志中通过这一行来告知：
- en: '**Starting: Intent { cmp=com.example.aatg.tc/.TemperatureConverterActivity
    }**'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '**开始：意图 { cmp=com.example.aatg.tc/.TemperatureConverterActivity }**'
- en: 'Once the application has started you can send the events using the script and
    the `netcat` utility:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦应用程序启动，你可以使用脚本和`netcat`实用程序发送事件：
- en: '[PRE30]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'This will send the events contained in the script file to the emulator. These
    are the following events:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 这将发送脚本文件中包含的事件到模拟器。以下事件如下：
- en: touch and select the Celsius field
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 触摸并选择摄氏度字段
- en: type 123
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入123
- en: touch and select the Fahrenheit field
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 触摸并选择华氏度字段
- en: delete its content
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除其内容
- en: type -460.3
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入-460.3
- en: In this manner simple scripts consisting of touch events and key presses can
    be created.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式，可以创建由触摸事件和按键组成的简单脚本。
- en: Test scripting with monkeyrunner
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用monkeyrunner进行测试脚本
- en: The possibilities of monkey are fairly limited and the lack of flow control
    restricts its use to very simple cases.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 猴子的可能性相当有限，缺乏流程控制限制了其使用范围，仅适用于非常简单的情况。
- en: To circumvent these limitations a new project was created, named monkeyrunner
    ([http://developer.android.com/guide/developing/tools/monkeyrunner_concepts.html](http://developer.android.com/guide/developing/tools/monkeyrunner_concepts.html)).
    Notwithstanding that the name is almost the same and leads to not a small amount
    of confusion, they are not related in any way.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 为了规避这些限制，创建了一个新的项目，命名为monkeyrunner ([http://developer.android.com/guide/developing/tools/monkeyrunner_concepts.html](http://developer.android.com/guide/developing/tools/monkeyrunner_concepts.html))。尽管名称几乎相同，并且导致了不少混淆，但它们在本质上没有任何关联。
- en: Monkeyrunner, which is already included in the latest versions of the Android
    SDK, is in its initial stages and nowadays its use is quite limited but its future
    could be bright. It is a tool providing an API for writing scripts that externally
    control an Android device or emulator.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: Monkeyrunner，它已经包含在Android SDK的最新版本中，目前处于初始阶段，如今其使用相当有限，但其未来可能光明。它是一个提供API以编写外部控制Android设备或模拟器的脚本的工具。
- en: Monkeyrunner is built on top of Jython ([http://www.jython.org/](http://www.jython.org/)),
    a version of Python ([http://www.python.org/](http://www.python.org/)) programming
    language which is designed to run on the Java(tm) Platform.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: Monkeyrunner 是建立在 Jython ([http://www.jython.org/](http://www.jython.org/))
    之上的，它是 Python ([http://www.python.org/](http://www.python.org/)) 编程语言的一个版本，专为在
    Java(tm) 平台上运行而设计。
- en: 'According to its documentation, monkeyrunner tool provides these unique features
    for Android testing. These are just the highlights of the complete list of features,
    examples and reference documentation that can be obtained from the monkeyrunner
    home page ([http://developer.android.com/guide/developing/tools/monkeyrunner_concepts.html](http://developer.android.com/guide/developing/tools/monkeyrunner_concepts.html)):'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 根据其文档，monkeyrunner 工具为 Android 测试提供了以下独特功能。这只是完整功能列表、示例和参考文档的亮点，这些可以从 monkeyrunner
    主页([http://developer.android.com/guide/developing/tools/monkeyrunner_concepts.html](http://developer.android.com/guide/developing/tools/monkeyrunner_concepts.html))获取：
- en: '**Multiple device control:** The `monkeyrunner` API can apply one or more test
    suites across multiple devices or emulators. You can physically attach all the
    devices or start up all the emulators (or both) at once, connect to each one in
    turn programmatically, and then run one or more tests. You can also start up an
    emulator configuration programmatically, run one or more tests, and then shut
    down the emulator.'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多设备控制：** `monkeyrunner` API 可以将一个或多个测试套件应用于多个设备或模拟器。您可以一次性物理连接所有设备或启动所有模拟器（或两者），然后依次程序化连接到每个设备，并运行一个或多个测试。您还可以程序化启动模拟器配置，运行一个或多个测试，然后关闭模拟器。'
- en: '**Functional testing:** `monkeyrunner` can run an automated start-to-finish
    test of an Android application. You provide input values with keystrokes or touch
    events, and view the results as screenshots.'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**功能测试：** `monkeyrunner` 可以运行 Android 应用程序的自动化从头到尾测试。您提供输入值，使用按键或触摸事件，并以截图的形式查看结果。'
- en: '**Regression testing:** `monkeyrunner` can test application stability by running
    an application and comparing its output screenshots to a set of screenshots that
    are known to be correct.'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**回归测试：** `monkeyrunner` 可以通过运行应用程序并将其输出截图与一组已知正确的截图进行比较来测试应用程序的稳定性。'
- en: '**Extensible automation:** Since `monkeyrunner` is an API toolkit, you can
    develop an entire system of Python-based modules and programs for controlling
    Android devices. Besides using the `monkeyrunner` API itself, you can use the
    standard Python OS and subprocess modules to call Android tools such as Android
    Debug Bridge.'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展的自动化：** 由于 `monkeyrunner` 是一个 API 工具包，因此您可以开发一个基于 Python 的模块和程序的系统，用于控制
    Android 设备。除了使用 `monkeyrunner` API 本身之外，您还可以使用标准的 Python OS 和 subprocess 模块调用
    Android 工具，如 Android 调试桥。'
- en: You can also add your own classes to the `monkeyrunner` API. This is described
    in more detail in the online documentation under Extending monkeyrunner with plugins.
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您还可以将您自己的类添加到 `monkeyrunner` API 中。这在线文档的“通过插件扩展 monkeyrunner”部分有更详细的描述。
- en: Getting test screenshots
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取测试截图
- en: Currently, one of the most evident uses of monkeyrunner is getting screenshots
    of the application under test to be further analyzed or compared.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，monkeyrunner 最明显的用途之一是获取正在测试的应用程序的截图，以便进一步分析或比较。
- en: 'These screenshots can be obtained with the help of the following steps:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 这些截图可以通过以下步骤获得：
- en: Importing the needed modules.
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所需的模块。
- en: Creating the connection with the device.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与设备建立连接。
- en: Checking for errors.
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查错误。
- en: Starting the `TemperatureConverter` activity.
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 `TemperatureConverter` 活动。
- en: Adding some delay.
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一些延迟。
- en: Typing '123'
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 '123'
- en: Adding some delay to allow for the events to be processed.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一些延迟以允许事件被处理。
- en: Obtaining the screenshots and saving it to a file.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取截图并将其保存到文件中。
- en: Pressing **BACK** to exit the Activity.
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 **BACK** 键退出 Activity。
- en: 'The following is the code for the script needed to perform the above mentioned
    steps:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是需要执行上述步骤的脚本的代码：
- en: '[PRE31]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Once this script runs, you will find the screenshot of `TemperatureConverter`
    in `/tmp/device.png`.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦此脚本运行，您将在 `/tmp/device.png` 中找到 `TemperatureConverter` 的截图。
- en: Record and playback
  id: totrans-271
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 录制和回放
- en: If you need something simpler probably there is no need to manually create these
    scripts. To simplify the process, the script `monkey_recorder.py`, which is included
    in the Android source repository in the sdk project ([http://android.git.kernel.org/?p=platform/sdk.git;a=summary](http://android.git.kernel.org/?p=platform/sdk.git;a=summary)),
    can be used to record event descriptions that are later interpreted by another
    script called `monkey_playback.py`.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要更简单的东西，可能没有必要手动创建这些脚本。为了简化流程，可以使用包含在Android源代码库中sdk项目的脚本`monkey_recorder.py`（[http://android.git.kernel.org/?p=platform/sdk.git;a=summary](http://android.git.kernel.org/?p=platform/sdk.git;a=summary)），用于记录随后由另一个名为`monkey_playback.py`的脚本解释的事件描述。
- en: 'Run `monkey_recorder.py` from the command line and you will be presented with
    this UI:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 从命令行运行`monkey_recorder.py`，你将看到这个用户界面：
- en: '![Record and playback](img/3500_05_05.jpg)'
  id: totrans-274
  prefs: []
  type: TYPE_IMG
  zh: '![录制和回放](img/3500_05_05.jpg)'
- en: 'This interface has a toolbar with buttons to insert different commands in the
    recorded script:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 此界面有一个工具栏，包含用于在记录的脚本中插入不同命令的按钮：
- en: '| Button | Description |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| 按钮 | 描述 |'
- en: '| --- | --- |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| **Wait** | How many seconds to wait. This number is requested by a dialog
    box. |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| **等待** | 等待多少秒。此数字由对话框请求。|'
- en: '| **Press a Button** | Sends a MENU, HOME, or SEARCH button. Press, Down, or
    Up event. |'
  id: totrans-279
  prefs: []
  type: TYPE_TB
  zh: '| **按按钮** | 发送MENU、HOME或SEARCH按钮。按、向下或向上事件。|'
- en: '| **Type Something** | Sends a string. |'
  id: totrans-280
  prefs: []
  type: TYPE_TB
  zh: '| **输入文本** | 发送一个字符串。|'
- en: '| **Fling** | Sends a fling event in the specified direction, distance, and
    number of steps. |'
  id: totrans-281
  prefs: []
  type: TYPE_TB
  zh: '| **滑动** | 在指定方向、距离和步数中发送滑动事件。|'
- en: '| **Export Actions** | Saves the script. |'
  id: totrans-282
  prefs: []
  type: TYPE_TB
  zh: '| **导出动作** | 保存脚本。|'
- en: '| **Refresh Display** | Refreshes the copy of the screenshot that is displayed.
    |'
  id: totrans-283
  prefs: []
  type: TYPE_TB
  zh: '| **刷新显示** | 刷新显示的截图副本。|'
- en: 'Once the script is completed, save it, let''s say as `script.mr` and then you
    can re-run it by using this command line:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦脚本完成，保存它，比如说保存为`script.mr`，然后你可以通过使用以下命令行重新运行它：
- en: '[PRE32]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Now all the events will be replayed.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 现在所有的事件都将被回放。
- en: Summary
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter we covered all the alternatives we have to expose our application
    and its tests to a wide range of conditions and configurations, ranging from different
    screen sizes, the availability of devices such as cameras or keyboards, to simulating
    real life network conditions to detect problems in our application.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖了所有将我们的应用程序及其测试暴露于各种条件和配置的替代方案，包括不同的屏幕尺寸、设备（如摄像头或键盘）的可用性，以及模拟真实网络条件以检测应用程序中的问题。
- en: We also analyzed all of the options we have to be able to control emulators
    remotely when they are detached from its windows. This prepares the foundation
    for Continuous Integration that we will be visiting in [Chapter 8](ch08.html "Chapter 8. Continuous
    Integration"), *Continuous Integration*, and relies on the ability to automatically
    run all the test suites and having the ability to configure, start, and stop the
    emulator will be necessary.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还分析了所有可以远程控制断开其窗口的模拟器的选项。这为我们在第8章（[Chapter 8](ch08.html "Chapter 8. Continuous
    Integration")，*持续集成*）中将要讨论的持续集成奠定了基础，并且依赖于自动运行所有测试套件的能力，以及配置、启动和停止模拟器的功能将是必要的。
- en: At the end, some scripting alternatives were introduced and examples to get
    you started were provided.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，介绍了一些脚本编写替代方案，并提供了入门示例。
- en: The next chapter will introduce Behavior Driven Development—a technique that
    makes use of a common vocabulary to express the tests permitting the inclusion
    of business people in the software development project.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将介绍行为驱动开发（Behavior Driven Development，简称BDD）——一种利用通用词汇来表达测试的技术，允许业务人员在软件开发项目中参与。
