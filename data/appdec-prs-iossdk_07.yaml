- en: Chapter 7. Social Media Integration
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 7 章。社交媒体集成
- en: These days, social media integration is a common feature that all mobile applications
    incorporate. Some applications allow users to share data and updates to their
    social profiles such as Facebook and Twitter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 这些天，社交媒体集成是所有移动应用程序都包含的常见功能。一些应用程序允许用户将数据更新分享到他们的社交媒体资料，如 Facebook 和 Twitter。
- en: Nowadays, the traditional login process for the application using an e-mail
    ID and password is turning out to be cumbersome for the users. So to target such
    issues, many applications use Facebook and Twitter as their base login. Users
    can sign up using their Facebook or Twitter account. This even simplifies the
    steps of the login process and provides one-click sign up and login to the user.
    Keeping such things in mind, Parse provides you with the Plug and Play approach
    to integrate with social media, both for sharing and for the login process. In
    this chapter, you will learn in detail about social media integration using Parse.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用电子邮件 ID 和密码的传统登录过程正变得越来越繁琐。因此，为了解决这些问题，许多应用程序使用 Facebook 和 Twitter 作为其基础登录。用户可以使用他们的
    Facebook 或 Twitter 账户进行注册。这甚至简化了登录过程的步骤，并为用户提供了一键注册和登录。考虑到这些因素，Parse 提供了即插即用的方法来集成社交媒体，无论是用于分享还是用于登录过程。在本章中，你将详细了解使用
    Parse 进行社交媒体集成。
- en: Integrating Facebook
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成 Facebook
- en: It's easy to integrate Facebook with your Parse application. The Facebook SDK
    can be used with the Parse SDK. You can link your `PFUser` with the Facebook user
    identities. You can use Facebook for sign up processes as well. Parse allows you
    to authenticate the user from Facebook and associate the user in your `PFUser`
    class.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Facebook 集成到你的 Parse 应用程序中很容易。Facebook SDK 可以与 Parse SDK 一起使用。你可以将你的 `PFUser`
    与 Facebook 用户身份链接。你也可以使用 Facebook 进行注册过程。Parse 允许你从 Facebook 验证用户并将用户关联到你的 `PFUser`
    类。
- en: In this section you will learn the integration of Facebook from your Parse application.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将学习如何从你的 Parse 应用程序中集成 Facebook。
- en: Prerequisites
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前提条件
- en: 'To get started with the integration of Facebook with Parse, you need to set
    up the following things:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始将 Facebook 与 Parse 集成，你需要设置以下事项：
- en: Register on the Facebook developer portal ([https://developers.facebook.com/](https://developers.facebook.com/))
    and create a Facebook application ([https://developers.facebook.com/docs/ios/getting-started/](https://developers.facebook.com/docs/ios/getting-started/)),
    if you have not created it already.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Facebook 开发者门户（[https://developers.facebook.com/](https://developers.facebook.com/））上注册并创建一个
    Facebook 应用程序（[https://developers.facebook.com/docs/ios/getting-started/](https://developers.facebook.com/docs/ios/getting-started/）），如果你还没有创建的话。
- en: Facebook provides step-by-step procedure to create an app ([https://developers.facebook.com/apps](https://developers.facebook.com/apps))
    and link it with the Facebook SDK.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Facebook 提供了创建应用程序的逐步指南（[https://developers.facebook.com/apps](https://developers.facebook.com/apps)）并将其与
    Facebook SDK 集成。
- en: Setting up the application
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置应用程序
- en: 'To get started with Facebook, you need to configure the following in your application:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 Facebook，你需要在应用程序中配置以下内容：
- en: Select your project file from the left-hand side panel, click on **Targets**
    and navigate to the **Info** tab.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧面板中选择你的项目文件，点击 **目标** 并导航到 **信息** 选项卡。
- en: Under the **Custom iOS Target Properties** section, add a new key with **Facebook
    App Id** as a string value and provide your Facebook app ID as the value.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **自定义 iOS 目标属性** 部分中，添加一个新键，将 **Facebook App Id** 作为字符串值，并提供你的 Facebook 应用
    ID 作为值。
- en: Now add another key name with **URL** **Type**. Expand the key and at last you
    will see the **URL identifier**. Replace the **URL identifier** with **URL Schemes**
    and fill it with `fbYour_App_Id` (for example, Fb1234567890).
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在添加另一个带有 **URL** **类型** 的键名。展开键名，最后你会看到 **URL 标识符**。将 **URL 标识符** 替换为 **URL
    方案** 并填写 `fbYour_App_Id`（例如，Fb1234567890）。
- en: 'After updating your application with the Facebook keys, perform the following
    steps for setting up the code in your application:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的应用程序中更新 Facebook 键后，执行以下步骤以设置代码：
- en: 'In your `application:didFinishLaunchingWithOptions:` method, add the following
    line of code to initialize Facebook, just below the code where you have initialized
    the Parse SDK:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 `application:didFinishLaunchingWithOptions:` 方法中，添加以下代码行以初始化 Facebook，就在你初始化
    Parse SDK 的代码下方：
- en: '[PRE0]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Add the following methods in your `AppDelegate` file to handle the single sign-on
    feature of the Facebook SDK:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 `AppDelegate` 文件中添加以下方法以处理 Facebook SDK 的单点登录功能：
- en: '[PRE1]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Signing up on Facebook
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Facebook 上注册
- en: 'Using the Parse SDK you can allow users to sign up using Facebook. The user
    object will also be created and saved for you by Parse. The following method will
    allow you to log in with Facebook:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Parse SDK，您可以允许用户使用Facebook注册。Parse还将为您创建和保存用户对象。以下方法将允许您使用Facebook登录：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the previous code, `permissions` is an array of strings that specify what
    data your application wants to access from Facebook.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的代码中，`permissions`是一个字符串数组，指定了您的应用程序想要从Facebook访问哪些数据。
- en: 'The following code will demonstrate the way you log in or sign up using Facebook:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将展示您如何使用Facebook登录或注册：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: On the button action you can add the previous code to log in or sign up using
    Facebook. In the previous code, we have used `permissionsArray`. This array will
    hold the strings to indicate the user data needed from Facebook.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在按钮动作中，您可以添加之前的代码以使用Facebook登录或注册。在之前的代码中，我们使用了`permissionsArray`。此数组将包含表示从Facebook需要获取的用户数据的字符串。
- en: 'After executing the preceding function, the following steps will take place:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 执行前面的函数后，将发生以下步骤：
- en: The app will be redirected to Facebook or will prompt for permissions to access
    the data from Facebook.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用程序将被重定向到Facebook或提示获取访问Facebook数据的权限。
- en: When the user authenticates via Facebook, your application will receive a callback
    using the `handleOpenUrl` method that we had configured in the previous section.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当用户通过Facebook进行身份验证时，您的应用程序将使用我们在上一节中配置的`handleOpenUrl`方法接收回调。
- en: The Parse SDK will fetch the data and save it to the `PFUser` class and will
    save the data on Parse if the user is new.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果用户是新的，Parse SDK将获取数据并将其保存到`PFUser`类中，并将数据保存在Parse上。
- en: Your code block will be called with the user.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的代码块将使用用户调用。
- en: Parse provides you with a very deep integration with Facebook, as Parse has
    been acquired by Facebook, Inc. This also spells for even greater and deeper integration
    with Parse in future.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Parse已被Facebook，Inc.收购，Parse提供了与Facebook的非常深入的集成，这也预示着未来Parse将实现更加深入和广泛的集成。
- en: Publishing on Facebook
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Facebook上发布
- en: 'To post some updates on the user wall, you need to acquire publishing permissions
    from the user. The following code will acquire the publishing permission from
    the users:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要在用户墙上发布一些更新，您需要从用户那里获取发布权限。以下代码将获取用户的发布权限：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Requesting user data
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 请求用户数据
- en: 'After user login, you can start fetching the user data from Facebook using
    the Graph API. The following code will demonstrate the way to fetch the user data
    from Facebook:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 用户登录后，您可以使用Graph API开始从Facebook获取用户数据。以下代码将展示如何从Facebook获取用户数据：
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The `result` dictionary will hold all the requested data. You can fetch the
    data by querying with the key.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`result`字典将包含所有请求的数据。您可以通过键查询来获取数据。'
- en: Linking users
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 链接用户
- en: 'In case of anonymous login or sign up using an e-mail ID and password, you
    can associate the existing `PFUser` to a Facebook account. The following code
    will illustrate a way to link an existing user to Facebook:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是匿名登录或使用电子邮件ID和密码注册，可以将现有的`PFUser`与Facebook账户关联。以下代码将展示如何将现有用户链接到Facebook：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: After successful log in the `PFUser` class will be updated with the Facebook
    information.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 登录成功后，`PFUser`类将更新为包含Facebook信息。
- en: 'The following code will unlink a Facebook account from a current user:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将取消将Facebook账户从当前用户中链接：
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Logging out
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 登出
- en: 'To log out the current user from the application, you simply need to call the
    `logOut` method on the `PFUser` class. The following code will log out the user
    from the application:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要从应用程序中登出当前用户，您只需在`PFUser`类上调用`logOut`方法。以下代码将从应用程序中登出用户：
- en: '[PRE8]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Keeping users logged in
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保持用户登录
- en: It's cumbersome for the user to log in every time while launching the application.
    This is because Facebook session information is not stored in between launches.
    Parse makes this easy for us by internally saving the session in the `currentUser`
    object of the `PFUser` class.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 每次启动应用程序时用户都需要登录，这显得有些繁琐。这是因为Facebook会话信息在启动之间不会被保存。Parse通过在`PFUser`类的`currentUser`对象中内部保存会话信息，使我们能够轻松地实现这一点。
- en: 'In the launch view controller, you can check for the current session. If it
    exists, you can bypass the log in. The following code will illustrate how to bypass
    the log in:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动视图控制器中，您可以检查当前会话。如果存在，您可以绕过登录。以下代码将展示如何绕过登录：
- en: '[PRE9]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Integrating Twitter
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成Twitter
- en: Just like Facebook integration, Parse provides an easy way to integrate Twitter
    authentication as well. Just after a few lines of code, you will be able to log
    in with Twitter and save the data over the Parse Cloud.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 就像Facebook集成一样，Parse提供了一个简单的方法来集成Twitter认证。只需几行代码，您就能使用Twitter登录并保存数据到Parse
    Cloud。
- en: Setting up Twitter
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置Twitter
- en: 'You need to perform the following steps to set up Twitter authentication using
    Parse:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要执行以下步骤来使用Parse设置Twitter认证：
- en: If you have not created your application on Twitter already, you need to create
    your application on the Twitter developer portal ([https://d](https://d)[ev.twitter.com/apps](http://ev.twitter.com/apps)).
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您还没有在Twitter上创建应用程序，您需要在Twitter开发者门户上创建您的应用程序（[https://dev.twitter.com/apps](https://dev.twitter.com/apps)）。
- en: Add your Twitter application's **Consumer Key** on the Parse application's settings
    page.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Parse应用程序的设置页面上添加您的Twitter应用程序的**消费者密钥**。
- en: Enter a valid **Callback URL** for the Twitter application. This value is important
    for you to have control over this callback URL, so that the information isn't
    hijacked along the way. So, in this way, this value is used for authentication
    purposes by Twitter.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Twitter应用程序输入一个有效的**回调URL**。这个值对于您控制这个回调URL非常重要，这样信息就不会在传输过程中被劫持。因此，以这种方式，这个值被Twitter用于认证目的。
- en: 'Add the following code in your `application:didFinishLaunchingWithOptions:`
    method, just below the code where you initialized Parse:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的`application:didFinishLaunchingWithOptions:`方法中添加以下代码，就在初始化Parse的代码下方：
- en: '[PRE10]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This is all you need to do to set up Twitter in your application. Now, we can
    allow the user to log in using Twitter.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的应用程序中设置Twitter的所有步骤如下。现在，我们可以允许用户使用Twitter进行登录。
- en: Signing up and logging in
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 注册和登录
- en: 'Parse provides you with the `PFTwitterUtils` class to allow your users to log
    in using Twitter. The following code will allow the user to sign up using Twitter:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Parse提供了`PFTwitterUtils`类，允许您的用户使用Twitter进行登录。以下代码将允许用户使用Twitter进行注册：
- en: '[PRE11]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'On executing the previous code, the following should happen:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行前面的代码后，应该发生以下情况：
- en: The user will be prompted for the permission to access Twitter authentication
    through an alert box or login dialog box
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户将通过弹窗或登录对话框被提示允许访问Twitter认证。
- en: After authorizing the application, the application will receive a callback
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在授权应用程序后，应用程序将收到一个回调。
- en: Parse will receive the data on successful log in and will save it to the `PFUser`
    class on the cloud
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Parse将在登录成功后接收数据，并将其保存到云上的`PFUser`类。
- en: Linking users
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 链接用户
- en: 'In case of anonymous login or sign up using an e-mail ID and password, you
    can associate the existing PFUser to a Twitter account. The following code will
    illustrate a way to link an existing user to Twitter:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是匿名登录或使用电子邮件ID和密码注册，您可以将现有的PFUser与Twitter账户关联起来。以下代码将展示如何将现有用户链接到Twitter：
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: After successful log in the `PFUser` class will be updated with the Twitter
    information.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 登录成功后，`PFUser`类将更新为包含Twitter信息。
- en: 'The following code will unlink the Twitter account from a current user:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将解除Twitter账户与当前用户的链接：
- en: '[PRE13]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Summary
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, we explored the integration of the Facebook and Twitter SDK
    with the Parse SDK.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们探索了Facebook和Twitter SDK与Parse SDK的集成。
- en: We started by exploring Facebook integration with setting up an application
    on the Facebook developer portal and then saw the login setup.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先通过在Facebook开发者门户上设置应用程序来探索Facebook集成，然后看到了登录设置。
- en: Then, we learned about publishing posts on Facebook, and linking users from
    Facebook.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们学习了如何在Facebook上发布帖子，以及如何链接Facebook用户。
- en: Next, we learned about integrating in the application.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们学习了如何在应用程序中集成。
- en: Finally, we explored Twitter integration and log in in our application.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们在应用程序中探索了Twitter集成和登录。
- en: In the next chapter, we will learn about the cloud functions and its usage in
    our application.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习云函数及其在我们应用程序中的使用。
