["```java\nvar win = Titanium.UI.createWindow();\nvar userid = '123456';\nvar apikey = 'B_1a0350b39b19a05************';\nvar loginName = 'b****@gmail.com';\nvar loginPasswd = '******';\nvar apiUrl = 'http://api.blurtit.com/users/signin.json';\n\n```", "```java\nvar xhr = Titanium.Network.createHTTPClient();\nxhr.open('POST', apiUrl);\nauthstr = 'Basic ' + Titanium.Utils.base64encode(userid+':'+apikey);\nxhr.setRequestHeader('Authorization', authstr);\n\n```", "```java\nvar params = {\n'login_name': loginName,\n'password': loginPasswd\n};\nxhr.send(params);\n\n```", "```java\n//create and add the label to the window\nvar lblsession = Titanium.UI.createLabel({\nwidth: 280,\nheight: 'auto',\ntextAlign: 'center'\n});\nwin.add(lblsession);\n//execute our onload function and assign the result to\n//our lblsession control\nxhr.onload = function() {\nTitanium.API.info(' Text: ' + this.responseText);\nvar jsonObject = JSON.parse(this.responseText);\nlblsession.text = \"Session ID: \\n\" +\njsonObject.user.session_id;\n};\n//finally open the window\nwin.open();\n\n```", "```java\nfunction callAPI(apiFunction, params)\n{\nvar xhr = Titanium.Network.createHTTPClient();\nTi.API.info('Session ID = ' + sessionid);\nxhr.onload = function() {\n//this is the response data to our question\nTitanium.API.info(' Text: ' + this.responseText);\nvar jsonObject = JSON.parse(this.responseText);\n};\nxhr.open('POST', apiUrl + apiFunction);\nauthstr = 'Basic '+\nTitanium.Utils.base64encode(userid+':'+apikey);\nxhr.setRequestHeader('Authorization', authstr);\nxhr.send(params);\n}\nvar params = {\n'session_id': sessionid,\n'query': \"Who is Britney Spears?\"\n};\n//call the api with your session_id and question_id\ncallAPI('questions/search.json?query=' +\ntxtQuestion.value, params);\n\n```", "```java\nvar api = {\nxhr: null\n};\nvar places = (function() {\n//create an object which will be our public API\n//data format must be json or xml\napi.getData = function(lat, lon, radius, types, name, sensor, success, error) {\nif(api.xhr == null){\napi.xhr = Titanium.Network.createHTTPClient();\n}\nvar url =\n\"https://maps.googleapis.com/maps/api/place/search/json?\";\nurl = url + \"location=\" + lat + ',' + lon;\nurl = url + \"&radius=\" + radius;\nurl = url + \"&types=\" + types;\nurl = url + \"&name=\" + name;\nurl = url + \"&sensor=\" + sensor;\nurl = url + \"&key=\"\n+ Titanium.App.Properties.getString(\"googlePlacesAPIKey\");\nTi.API.info(url);\napi.xhr.open('GET', url);\napi.xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');\napi.xhr.onerror = function(e){\nTi.API.error(\"API ERROR \" + e.error);\nif (error) {\nerror(e);\n}\n};\napi.xhr.onload = function(){\nTi.API.debug(\"API response: \" + this.responseText);\nif (success) {\nvar jsonResponse = JSON.parse(this.responseText);\nsuccess(jsonResponse);\n}\n};\napi.xhr.send();\n};\n//data format must be json or xml\napi.getPlaceDetails = function(reference, sensor, success,\nerror) {\nif(api.xhr == null){\napi.xhr = Titanium.Network.createHTTPClient();\n}\nvar url =\n\"https://maps.googleapis.com/maps/api/place/details/json?\";\nurl = url + \"reference=\" + reference;\nurl = url + \"&sensor=\" + sensor;\nurl = url + \"&key=\" +\nTitanium.App.Properties.getString(\"googlePlacesAPIKey\");\n//for debugging should you wish to check the URL\n//Ti.API.info(url);\napi.xhr.open('GET', url);\napi.xhr.setRequestHeader('Content-Type', 'application/json;\ncharset=utf-8');\napi.xhr.onerror = function(e){\nTi.API.error(\"API ERROR \" + e.error);\nif (error) {\nerror(e);\n}\n};\napi.xhr.onload = function(){\nTi.API.debug(\"API response: \" + this.responseText);\nif (success) {\nvar jsonResponse = JSON.parse(this.responseText);\nsuccess(jsonResponse);\n}\n};\napi.xhr.send();\n};\n//return our public API\nreturn api;\n} ());\n\n```", "```java\n//include our placesapi.js module we created earlier\nTi.include('placesapi.js');\n//Types array\nvar types = ['airport', 'atm', 'bank', 'bar', 'parking', 'pet_store', 'pharmacy', 'police', 'post_office', 'shopping_mall'];\nTitanium.App.Properties.setString(\"googlePlacesAPIKey\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\n//fetch banks and atm's\n//note the types list is a very short sample of all the types of\n//places available to you in the Places API\nplaces.getData(-33.8670522, 151.1957362, 500, types[1] + \"|\" + types[2], '', 'false',\nfunction(response) {\n//getting an item out of the json response\nTi.API.info(response.results[1].name);\nTi.API.info(response.results[1].vicinity);\nTi.API.info(response.results[1].icon);\nTi.API.info(response.results[1].types[0]);\n},\nfunction(e) {\nTitanium.UI.createAlertDialog({\ntitle: \"API call failed\",\nmessage: e,\nbuttonNames: ['OK']\n}).show();\n});\n\n```", "```java\nplaces.getPlaceDetails(response.results[1].reference, 'false', function(response){\n//log the json response to the console\nTi.API.info(response);\n},\nfunction(e){\n//something went wrong\n//log any errors etc...\n});\n\n```", "```java\nvar FOURSQModule = {};\n(function() {\nFOURSQModule.init = function(clientId, redirectUri) {\nFOURSQModule.clientId = clientId;\nFOURSQModule.redirectUri = redirectUri;\nFOURSQModule.ACCESS_TOKEN = null;\nFOURSQModule.xhr = null;\nFOURSQModule.API_URL = \"https://api.foursquare.com/v2/\";\n};\nFOURSQModule.logout = function() {\nshowAuthorizeUI(\nString.format('https://foursquare.com/oauth2/authorize?response_type=token&client_id=%s&redirect_uri=%s',\nFOURSQModule.clientId,\nFOURSQModule.redirectUri)\n);\nreturn;\n};\n/**\n* displays the familiar web login dialog\n*\n*/\nFOURSQModule.login = function(authSuccess_callback) {\nif (authSuccess_callback != undefined) {\nFOURSQModule.success_callback = authSuccess_callback;\n}\nshowAuthorizeUI(\nString.format('https://foursquare.com/oauth2/authenticate?response_type=token&client_id=%s&redirect_uri=%s',\nFOURSQModule.clientId,\nFOURSQModule.redirectUri)\n);\nreturn;\n};\nFOURSQModule.closeFSQWindow = function() {\ndestroyAuthorizeUI();\n};\n/*\n* display the familiar web login dialog\n*/\nfunction showAuthorizeUI(pUrl)\n{\nwindow = Ti.UI.createWindow({\nmodal: true,\nfullscreen: true,\nwidth: '100%'\n});\nvar transform = Ti.UI.create2DMatrix().scale(0);\nview = Ti.UI.createView({\ntop: 5,\nwidth: '100%',\nheight: 450,\nborder: 10,\nbackgroundColor: 'white',\nborderColor: '#aaa',\nborderRadius: 20,\nborderWidth: 5,\nzIndex: -1,\ntransform: transform\n});\ncloseLabel = Ti.UI.createLabel({\ntextAlign: 'right',\nfont: {\nfontWeight: 'bold',\nfontSize: '12pt'\n},\ntext: '(X)',\ntop: 5,\nright: 12,\nheight: 14\n});\nwindow.open();\nwebView = Ti.UI.createWebView({\ntop: 25,\nwidth: '100%',\nurl: pUrl,\nautoDetect: [Ti.UI.AUTODETECT_NONE]\n});\nTi.API.debug('Setting:[' + Ti.UI.AUTODETECT_NONE + ']');\nwebView.addEventListener('beforeload',\nfunction(e) {\nif (e.url.indexOf('http://www.foursquare.com/') != -1) {\nTitanium.API.debug(e);\nauthorizeUICallback(e);\nwebView.stopLoading = true;\n}\n});\nwebView.addEventListener('load', authorizeUICallback);\nview.add(webView);\ncloseLabel.addEventListener('click', destroyAuthorizeUI);\nview.add(closeLabel);\nwindow.add(view);\nvar animation = Ti.UI.createAnimation();\nanimation.transform = Ti.UI.create2DMatrix();\nanimation.duration = 500;\nview.animate(animation);\n};\n/*\n* unloads the UI used to have the user authorize the application\n*/\nfunction destroyAuthorizeUI()\n{\nTi.API.debug('destroyAuthorizeUI');\n// if the window doesn't exist, exit\nif (window == null) {\nreturn;\n}\n// remove the UI\ntry\n{\nTi.API.debug('destroyAuthorizeUI:webView.removeEventListener');\nwebView.removeEventListener('load', authorizeUICallback);\nTi.API.debug('destroyAuthorizeUI:window.close()');\nwindow.hide();\n}\ncatch(ex)\n{\nTi.API.debug('Cannot destroy the authorize UI. Ignoring.');\n}\n};\n/*\n* fires and event when login fails\n*/\nfunction authorizeUICallback(e)\n{\nTi.API.debug('authorizeUILoaded ' + e.url);\nTitanium.API.debug(e);\nif (e.url.indexOf('#access_token') != -1)\n{\nvar token = e.url.split(\"=\")[1];\nFOURSQModule.ACCESS_TOKEN = token;\nTi.App.fireEvent('app:4square_token', {\ndata: token\n});\nif (FOURSQModule.success_callback != undefined) {\nFOURSQModule.success_callback({\naccess_token: token,\n});\n}\ndestroyAuthorizeUI();\n} else if ('http://foursquare.com/' == e.url) {\nTi.App.fireEvent('app:4square_logout', {});\ndestroyAuthorizeUI();\n} else if (e.url.indexOf('#error=access_denied') != -1) {\nTi.App.fireEvent('app:4square_access_denied', {});\ndestroyAuthorizeUI();\n}\n};\n})();\n\n```", "```java\nfunction loginSuccess(e) {\nalert('You have successfully logged into 4SQ!\");\n};\nFOURSQModule.init('yourclientid', 'http://www.yourfoursquareurl.com');\nFOURSQModule.login(loginSuccess, function(e) {\nTitanium.UI.createAlertDialog({\ntitle: \"LOGIN FAILED\",\nmessage: e,\nbuttonNames: ['OK']\n}).show();\n});\n\n```", "```java\nFOURSQModule.callMethod = function(method, GETorPOST, params, success, error) {\n//get the login information\ntry {\nif (FOURSQModule.xhr == null) {\nFOURSQModule.xhr = Titanium.Network.createHTTPClient();\n}\nFOURSQModule.xhr.open(GETorPOST, FOURSQModule.API_URL + method + \"?oauth_token=\" + FOURSQModule.ACCESS_TOKEN);\nFOURSQModule.xhr.onerror = function(e) {\nTi.API.error(\"FOURSQModule ERROR \" + e.error);\nTi.API.error(\"FOURSQModule ERROR \" + FOURSQModule.xhr.location);\nif ( error ) {\nerror(e);\n}\n};\nFOURSQModule.xhr.onload = function(_xhr) {\nTi.API.debug(\"FOURSQModule response: \" + FOURSQModule.xhr.responseText);\nif ( success ) {\nsuccess(FOURSQModule.xhr);\n}\n};\nFOURSQModule.xhr.send(params);\n} catch(err) {\nTitanium.UI.createAlertDialog({\ntitle: \"Error\",\nmessage: String(err),\nbuttonNames: ['OK']\n}).show();\n}\n};\n\n```", "```java\nFOURSQModule.init('yourclientid', 'http://www.yourcallbackurl.com');\nFOURSQModule.login(function(e){\n//checkin to a lat/lon location... you can get\n//this from a google map or your GPS co-ordinates\nvar params = {\nshout: 'This is my check-in message!',\nbroadcast: 'public',\nll: '33.7,44.2'\n};\nFOURSQModule.callMethod(\"checkins/add\", 'POST', params,\nonSuccess_self, function(e) {\nTitanium.UI.createAlertDialog({\ntitle: \"checkins/add: METHOD FAILED\",\nmessage: e,\nbuttonNames: ['OK']\n}).show();\n});\n//now close the foursquare modal window\nFOURSQModule.closeFSQWindow();\n},\nfunction(event) {\nTitanium.UI.createAlertDialog({\ntitle: \"LOGIN FAILED\",\nmessage: event,\nbuttonNames: ['OK']\n}).show();\n});\n\n```", "```java\n[DEBUG] destroyAuthorizeUI\n[DEBUG] destroyAuthorizeUI:webView.removeEventListener\n[DEBUG] destroyAuthorizeUI:window.close()\n[DEBUG] FOURSQModule response: {\"notifications\":[{\"type\":\"notificationTray\",\"item\":{\"unreadCount\":0}},{\"type\":\"message\"\n,\"item\":{\"message\":\"OK, got your shout (This is my check-in message!)!\"}}],\"response\":{\"checkin\":{\"i\nd\":\"4ebf9a5d7ee54e4cd299b72e\",\"createdAt\":1321179741,\"type\":\"shout\",\"shout\":\"This is my check-in mes\nsage!\",\"timeZone\":\"Asia/Baghdad\",\"location\":{\"lat\":33.7,\"lng\":44.2}}}}\n\n```", "```java\n//\n// create base UI tab and root window\n//\nvar win1 = Titanium.UI.createWindow({\nbackgroundColor:'#fff'\n});\n// This is the input textfield for our stock code\nvar txtStockCode = Titanium.UI.createTextField({\nhintText: 'Stock code, e.g. APPL',\nborderWidth: 0,\nwidth: 200,\nleft: 10,\nheight: 30,\nfont: {fontSize: 14, fontColor: '#262626'},\nautoCorrect: false,\nautocapitalization: Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL,\nborderStyle: 1,\ntop: 5\n});\n//add the text field to the window\nwin1.add(txtStockCode);\n// Create the search button from our search.png image\nvar btnSearch = Titanium.UI.createButton({\ntitle: 'Search YQL',\nwidth: 80,\nheight: 30,\nright: 10,\nborderRadius: 3,\ntop: 5\n});\n//add the button to the window\nwin1.add(btnSearch);\n//This function is called on search button tap\n//it will query YQL for our stock data\nfunction searchYQL() {\n// Do some basic validation to ensure the user\n//has entered a stock code value\nif(txtStockCode.value != '')\n{\ntxtStockCode.blur(); //hides the keyboard\n// Create the query string using a combination of\n//YQL syntax and the value of the txtStockCode field\nvar query = 'select * from yahoo.finance.quotes where symbol\n= \"' + txtStockCode.value + '\"';\n// Execute the query and get the results\nTitanium.Yahoo.yql(query, function(e) {\nvar data = e.data;\n//Iff ErrorIndicationreturnedforsymbolchangedinvalid\n//is null then we found a valid stock\nif(data.quote.ErrorIndicationreturnedforsymbolchangedinvalid\n== null)\n{\n//show our results in the console\nTi.API.info(data);\nvar lblStockInfo = Titanium.UI.createLabel({\ntop: 60,\nleft: 20,\nwidth: 280,\nheight: 'auto',\ntext: ''\n});\n//create a label to show some of our info\nlblStockInfo.text = lblStockInfo.text\n+ 'Company name: ' + data.quote.Name;\nlblStockInfo.text = lblStockInfo.text +'\\nDays Low: '\n+ data.quote.DaysLow;\nlblStockInfo.text = lblStockInfo.text +'\\nDays High: '\n+ data.quote.DaysHigh;\nlblStockInfo.text = lblStockInfo.text +'\\nLast Open: '\n+ data.quote.Open;\nlblStockInfo.text = lblStockInfo.text +'\\nLast Close: '\n+ data.quote.PreviousClose;\nlblStockInfo.text = lblStockInfo.text +'\\nVolume: '\n+ data.quote.Volume;\nwin1.add(lblStockInfo);\n}\nelse\n{\n//show an alert dialog saying nothing could be found\nalert('No stock information could be found for ' + txtStockCode.value);\n}\n});\n} //end if\n}\n// Add the event listener for this button\nbtnSearch.addEventListener('click', searchYQL);\n//open the window\nwin1.open();\n\n```", "```java\n//create root window\nvar win = Titanium.UI.createWindow({\ntitle:'sample',\nbackgroundColor:'#fff'\n});\nvar key = 'your app key';\nvar secret = 'your app secret';\nTitanium.Network.registerForPushNotifications({\ntypes:[\nTitanium.Network.NOTIFICATION_TYPE_BADGE,\nTitanium.Network.NOTIFICATION_TYPE_ALERT,\nTitanium.Network.NOTIFICATION_TYPE_SOUND\n],\nsuccess: successCallback,\nerror: errorCallback,\ncallback: messageCallback\n});\nfunction successCallback(e) {\nvar request = Titanium.Network.createHTTPClient({\nonload:function(e) {\nif (request.status != 200 && request.status != 201) {\nrequest.onerror(e);\nreturn;\n}\n},\nonerror:function(e) {\nalert(\"Register with Urban Airship Push Service failed. Error: \"\n+ e.error);\n}\n});\n// Register device token with UA\nrequest.open('PUT', 'https://go.urbanairship.com/api/device_tokens/'\n+ e.deviceToken, true);\nrequest.setRequestHeader('Authorization','Basic ' +\nTitanium.Utils.base64encode(key + ':' + secret));\nrequest.send();\n}\nfunction errorCallback(e) {\nalert(\"Error during registration: \" + e.error);\n}\nfunction messageCallback(e) {\nvar message;\nif(e['aps'] != undefined) {\nif(e['aps']['alert'] != undefined){\nif(e['aps']['alert']['body'] != undefined){\nmessage = e['aps']['alert']['body'];\n} else {\nmessage = e['aps']['alert'];\n}\n} else {\nmessage = 'No Alert content';\n}\n} else {\nmessage = 'No APS content';\n}\nalert(message);\n}\n//finally, open root window\nwin.open();\n\n```", "```java\n<?php\ndefine('APPKEY','xxxx');\ndefine('PUSHSECRET', 'xxx'); // Master Secret\ndefine('PUSHURL',\n'https://go.urbanairship.com/api/push/broadcast/');\n$contents = array();\n$contents['badge'] = \"+1\";\n$contents['alert'] = \"Hello there Titanium Developer!\";\n$push = array(\"aps\" => $contents);\n$json = json_encode($push);\n$session = curl_init(PUSHURL);\ncurl_setopt($session, CURLOPT_USERPWD, APPKEY . ':' . PUSHSECRET);\ncurl_setopt($session, CURLOPT_POST, True);\ncurl_setopt($session, CURLOPT_POSTFIELDS, $json);\ncurl_setopt($session, CURLOPT_HEADER, False);\ncurl_setopt($session, CURLOPT_RETURNTRANSFER, True);\ncurl_setopt($session, CURLOPT_HTTPHEADER, array('Content-Type:application/json'));\n$content = curl_exec($session);\necho $content; // just for testing what was sent\n// Check if any error occured\n$response = curl_getinfo($session);\nif($response['http_code'] != 200) {\necho \"Got negative response from server, http code: \".\n$response['http_code'] . \"\\n\";\n} else {\necho \"Wow, it worked!\\n\";\n}\ncurl_close($session);\n?>\n\n```"]