- en: Chapter 1. Why Moai SDK?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章。为什么选择Moai SDK？
- en: Over the last two decades we've witnessed explosive development in software
    platforms, mostly represented by the mass adoption of Linux and Mac OS, and in
    the last few years, Android and iOS. In this chapter we'll see what this entails
    and why Moai SDK is here to help us all, and that for free.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的二十年里，我们见证了软件平台的爆炸式发展，这主要表现为Linux和Mac OS的大规模采用，以及在过去几年中Android和iOS的兴起。在本章中，我们将探讨这其中的含义以及为什么Moai
    SDK会在这里帮助我们所有人，而且还是免费的。
- en: Multi-platform development
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多平台开发
- en: So you want to make games. You probably have this great game idea and you're
    planning to release it for the Web, iOS, and Android platforms, and probably if
    you get traction, publish it on Steam. I bet you already have some concept art,
    or your **Game Design Document** (**GDD**) in place. But, have you planned on
    how are you going to make your game in order to be able to support all those platforms?
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，你想要制作游戏。你可能有一个很棒的的游戏想法，并计划将其发布在Web、iOS和Android平台上，如果能够获得足够的关注，也许还会在Steam上发布。我打赌你已经有了一些概念艺术，或者你的**游戏设计文档**（**GDD**）已经准备好了。但是，你有没有计划如何制作你的游戏，以便能够支持所有这些平台？
- en: 'Nowadays you have three options to handle this problem:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你有三种选择来处理这个问题：
- en: Build the game *n* times, where *n* is equal to the number of platforms
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建游戏*n*次，其中*n*等于平台的数量
- en: Forget about multi-platforms and focus on one or two
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 忘记多平台，专注于一个或两个
- en: Use a library/framework designed to support multiple platforms
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用设计用于支持多平台的库/框架
- en: The first option has an advantage in that you can optimize your game for each
    platform, ensuring it runs smoothly. Also, you can take care of platform limitations
    and change how your game looks according to them. But have you thought about the
    implications of having, say, four different code bases? Each one with their own
    bugs and ways of implementing logic. Additionally, you may need to hire multiple
    programmers if you can't find one with in-depth knowledge of all platforms. It's
    a nightmare.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个选择有一个优点，就是你可以为每个平台优化你的游戏，确保它运行流畅。此外，你可以处理平台限制，并根据它们改变游戏的外观。但是，你有没有想过拥有四个不同代码库的后果？每个都有自己的错误和实现逻辑的方式。此外，如果你找不到对所有平台都有深入了解的程序员，你可能需要雇佣多个程序员。这真是一场噩梦。
- en: Forgetting about multi-platforms could be a good choice for you, but in the
    end, if you make a really successful game (and a probable way of making a game
    successful is to have it available on as many platforms as possible, since this
    increases awareness), you'll want to port it to different platforms at low cost,
    and porting is expensive if the code is extremely tied to a specific platform.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 忘记多平台可能对你来说是个不错的选择，但最终，如果你制作了一个真正成功的游戏（制作游戏成功的一个可能方式是尽可能多地将其发布在各个平台上，因为这样可以增加知名度），你将希望以低成本将其移植到不同的平台上，而如果代码与特定平台紧密相连，移植成本会很高。
- en: This leads us to the last option, embrace a library or framework that supports
    multi-platform development. The basic idea is that you detach your code from specific
    platforms, using a widely-spread language (such as C, C++, JavaScript, or Lua)
    and build your game for different platforms using a single code base.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这引出了最后一个选择，采用支持多平台开发的库或框架。基本思想是，你将你的代码从特定平台中分离出来，使用广泛使用的语言（如C、C++、JavaScript或Lua），并使用单个代码库为不同的平台构建游戏。
- en: Note
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A real-life example on the benefits of multi-platform development is Zipline
    Games' *Wolf Toss*. It had a 3-month development cycle and was released simultaneously
    on iOS and Android. If it were to be built for each platform, it'd have taken
    about three months for each platform, or a team twice as big. So, by developing
    *Wolf Toss* with Moai SDK, the studio spent half of the money that it would take
    with a platform-specific approach.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 多平台开发的实际例子是Zipline Games的*狼掷*。它有一个3个月的开发周期，并在iOS和Android上同时发布。如果为每个平台构建，每个平台大约需要三个月的时间，或者需要一个两倍大的团队。因此，通过使用Moai
    SDK开发*狼掷*，工作室节省了与平台特定方法相比一半的费用。
- en: This approach has been gaining popularity lately because of its simplicity and
    powerful consequences. Many game development environments and frameworks that
    take this approach have seen the light of day in the last few years. One of them
    is Moai SDK.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法最近越来越受欢迎，因为它简单且效果强大。在过去的几年中，许多采用这种方法的游戏开发环境和框架都出现了。其中之一就是Moai SDK。
- en: Why Moai SDK?
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么选择Moai SDK？
- en: It's safe enough to say that almost every single platform nowadays supports
    C++ and some flavor of OpenGL. That's the starting point for Moai SDK.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 可以安全地说，现在几乎每个平台都支持C++和某种形式的OpenGL。这是Moai SDK的起点。
- en: '**Moai SDK** is a multi-platform game development framework. It''s been developed
    in C++ and all of its features are accessible through Lua. What does this mean?
    That you can build your game completely in Lua (taking advantage of the flexibility
    of this amazing language) and, in case you need low-level access, you can always
    switch to C++ and do whatever you want. You can even bind your C++ libraries to
    use them in your game, in Lua. It has built-in access to Moai Cloud as well, which
    is a cloud service that allows you to deploy server-side code written in Lua,
    with databases, support for push notifications, leaderboards, and other fancy
    stuff. Note that the language is the same for your game and for your server-side
    code, nice.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**Moai SDK**是一个多平台游戏开发框架。它使用C++开发，并且所有功能都可以通过Lua访问。这意味着什么？这意味着你可以完全使用Lua（利用这种令人惊叹的语言的灵活性）来构建你的游戏，如果你需要低级访问，你总是可以切换到C++并做你想做的任何事情。你甚至可以将你的C++库绑定到Lua中，在你的游戏中使用。它还内置了对Moai
    Cloud的访问，这是一个云服务，允许你部署用Lua编写的服务器端代码，包括数据库、推送通知支持、排行榜和其他花哨的功能。请注意，游戏和服务器端代码使用的语言是相同的，这很棒。'
- en: In short, *if XYZ platform supports OpenGL and C++, Moai SDK is likely to be
    supported by it*.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，**如果XYZ平台支持OpenGL和C++，Moai SDK很可能也支持它**。
- en: Currently Moai SDK works on Windows, Mac, Linux, iOS, Android, and Native Client.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，Moai SDK在Windows、Mac、Linux、iOS、Android和Native Client上运行。
- en: Anyway, there are many game engines that support multi-platform development.
    Many of them come with flashy interfaces, others with half of your problems solved,
    such as one-click deployment. So, what does Moai SDK bring to this world that
    has not been done yet? *Freedom*.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，有许多支持多平台开发的游戏引擎。其中许多都带有闪亮的界面，其他一些则解决了你一半的问题，比如一键部署。那么，Moai SDK为这个世界带来了什么尚未实现的东西？**自由**。
- en: It's open source, you can download the code and do whatever you want with it.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是开源的，你可以下载代码并随意使用它。
- en: It's free, no hundreds of dollars in licenses.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是免费的，没有数百美元的许可证费用。
- en: It doesn't tell you how to do things. It's aimed at pro developers who want
    to do things their way.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不会告诉你如何做事。它是针对想要按自己的方式做事的专业开发者。
- en: It has been used by several large-scale commercial games.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它已经被用于几个大规模的商业游戏。
- en: So these are the main principles behind Moai SDK's philosophy. A great mix for
    a great game.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，Moai SDK背后的主要原则就是这些。为打造一款伟大的游戏提供了绝佳的混合。
- en: Summary
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Nowadays, to be able to develop games it's important to take into account multi-platform
    development. Moai SDK is a game development framework that helps us deal with
    this problem in an easy way using standard technologies that are available in
    almost every platform. Not only that, it's *free* and *open source*.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了能够开发游戏，考虑多平台开发非常重要。Moai SDK是一个游戏开发框架，它帮助我们以标准技术轻松地解决这个问题，这些技术几乎在所有平台上都可用。不仅如此，它是**免费**和**开源**的。
