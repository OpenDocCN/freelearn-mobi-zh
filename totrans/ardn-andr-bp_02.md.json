["```java\n#define LIGHTWEIGHT 1\n\n#include <SPI.h>\n#include \"Adafruit_BLE_UART.h\"\n#include <aREST.h>\n\n// Pins\n#define ADAFRUITBLE_REQ 10\n#define ADAFRUITBLE_RDY 2     // This should be an interrupt pin, //  on Uno thats #2 or #3\n#define ADAFRUITBLE_RST 9\n\n// Create aREST instance\naREST rest = aREST();\n\n// BLE instance\nAdafruit_BLE_UART BTLEserial = Adafruit_BLE_UART(ADAFRUITBLE_REQ, ADAFRUITBLE_RDY, ADAFRUITBLE_RST);\n\nvoid setup(void)\n{  \n  // Start Serial\n  Serial.begin(9600);\n  Serial.println(F(\"Adafruit Bluefruit Low Energy nRF8001 Print echo demo\"));\n\n  // Start BLE\n  BTLEserial.begin();\n\n  // Give name and ID to device\n  rest.set_id(\"001\");\n  rest.set_name(\"my_arduino\"); \n}\n\naci_evt_opcode_t laststatus = ACI_EVT_DISCONNECTED;\n\nvoid loop() {  \n\n  // Tell the nRF8001 to do whatever it should be working on.\n  BTLEserial.pollACI();\n\n  // Ask what is our current status\n  aci_evt_opcode_t status = BTLEserial.getState();\n  // If the status changed....\n  if (status != laststatus) {\n    // print it out!\n    if (status == ACI_EVT_DEVICE_STARTED) {\n        Serial.println(F(\"* Advertising started\"));\n    }\n    if (status == ACI_EVT_CONNECTED) {\n        Serial.println(F(\"* Connected!\"));\n    }\n    if (status == ACI_EVT_DISCONNECTED) {\n        Serial.println(F(\"* Disconnected or advertising timed out\"));\n    }\n    // OK set the last status change to this one\n    laststatus = status;\n  }\n\n  // Handle REST calls\n  if (status == ACI_EVT_CONNECTED) {\n    rest.handle(BTLEserial);\n  }\n}\n```", "```java\n#include <SPI.h>\n#include \"Adafruit_BLE_UART.h\"\n#include <aREST.h>\n```", "```java\n#define LIGHTWEIGHT 1\n```", "```java\n#define ADAFRUITBLE_REQ 10\n#define ADAFRUITBLE_RDY 2     // This should be an interrupt pin, on Uno thats #2 or #3\n#define ADAFRUITBLE_RST 9\n```", "```java\naREST rest = aREST();\n```", "```java\nAdafruit_BLE_UART BTLEserial = Adafruit_BLE_UART(ADAFRUITBLE_REQ, ADAFRUITBLE_RDY, ADAFRUITBLE_RST);\n```", "```java\nSerial.begin(9600);\nSerial.println(F(\"Adafruit Bluefruit Low Energy nRF8001 Print echo demo\"));\n```", "```java\n BTLEserial.begin();\n```", "```java\nrest.set_id(\"001\");\nrest.set_name(\"my_arduino\"); \n```", "```java\nBTLEserial.pollACI();\n```", "```java\naci_evt_opcode_t status = BTLEserial.getState();\n```", "```java\nif (status == ACI_EVT_CONNECTED) {\n    rest.handle(BTLEserial);\n  }\n```", "```java\nprivate Button setoutput;\nprivate Button switchon;\nprivate Button switchoff;\n```", "```java\nsetoutput = (Button) findViewById(R.id.setToOutputBtn);\nswitchon = (Button) findViewById(R.id.switchOnBtn);\nswitchoff = (Button) findViewById(R.id.switchOffBtn);\n```", "```java\nsetoutput.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                String setOutputMessage = \"/mode/7/o /\";\n                tx.setValue(setOutputMessage.getBytes(Charset.forName(\"UTF-8\")));\n                if (gatt.writeCharacteristic(tx)) {\n                    writeLine(\"Sent: \" + setOutputMessage);\n                }\n                else {\n                    writeLine(\"Couldn't write TX characteristic!\");\n                }\n\n            }\n        });\n\n        switchon.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                String switchOnMessage = \"/digital/7/1 /\";\n                tx.setValue(switchOnMessage.getBytes(Charset.forName(\"UTF-8\")));\n                if (gatt.writeCharacteristic(tx)) {\n                    writeLine(\"Sent: \" + switchOnMessage);\n                }\n                else {\n                    writeLine(\"Couldn't write TX characteristic!\");\n                }\n            }\n        });\n\n        switchoff.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                String switchOffMessage = \"/digital/7/0 /\";\n                tx.setValue(switchOffMessage.getBytes(Charset.forName(\"UTF-8\")));\n                if (gatt.writeCharacteristic(tx)) {\n                    writeLine(\"Sent: \" + switchOffMessage);\n                }\n                else {\n                    writeLine(\"Couldn't write TX characteristic!\");\n                }\n            }\n        });\n```"]