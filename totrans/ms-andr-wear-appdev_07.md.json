["```java\n<activity \n  android:name=\".TodayActivity\" \n  android:label=\"@string/app_name\"> \n  <intent-filter> \n    <action android:name=\"android.intent.action.MAIN\" /> \n    <category android:name=\"android.intent.category.LAUNCHER\" /> \n  </intent-filter> \n</activity> \n\n```", "```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<resources> \n  <string-array name=\"actions\"> \n    <item>Day of Year</item> \n    <item>On this day...</item> \n    <item>Add Todo Item</item> \n  </string-array> \n</resources> \n\n```", "```java\n@Override \npublic void onClick(WearableListView.ViewHolder viewHolder)  \n{ \n  Log.i(TAG, \"Clicked list item\" +  viewHolder.getAdapterPosition()); \n  if (viewHolder.getAdapterPosition() == 0)  \n  { \n    Intent intent = new Intent(this, DayOfYearActivity.class); \n    startActivity(intent); \n  }  \n  else if (viewHolder.getAdapterPosition() == 1)  \n  { \n    Intent intent = new Intent(this, OnThisDayActivity.class); \n    startActivity(intent); \n  }  \n  else if (viewHolder.getAdapterPosition() == 2) \n  { \n    displaySpeechRecognizer(); \n  } \n\n//Create an intent that can start the Speech Recognizer activity \nprivate void displaySpeechRecognizer()  \n{ \n  Intent intent = new  Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH); \n  intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, \n  RecognizerIntent.LANGUAGE_MODEL_FREE_FORM); \n  // Start the activity, the intent will be populated with the speech text \n  startActivityForResult(intent, Constants.SPEECH_REQUEST_CODE); \n} \n\n```", "```java\n// This callback is invoked when the Speech Recognizer returns. \n// This is where you process the intent and extract the speech text from the intent. \n@Override \nprotected void onActivityResult(int requestCode, int resultCode,  Intent data)  \n{ \n  if (requestCode == Constants.SPEECH_REQUEST_CODE && resultCode  == RESULT_OK) \n  { \n    List<String> results = data.getStringArrayListExtra( RecognizerIntent.EXTRA_RESULTS); \n    spokenText = results.get(0); \n    // Do something with spokenText \n    Log.i(TAG, \"Spoken Text = \" + spokenText); \n    if (spokenText.startsWith(\"home\") ||  spokenText.startsWith(\"work\"))  \n    { \n      Log.i(TAG, \"Creating Google Api Client\"); \n      mGoogleApiClient = new GoogleApiClient.Builder(this) \n      addApi(Wearable.API) \n      .addConnectionCallbacks(this) \n      .addOnConnectionFailedListener(this) \n      .build(); \n       mGoogleApiClient.connect(); \n    } \n  }  \n  else  \n  { \n    super.onActivityResult(requestCode, resultCode, data); \n  } \n} \n\n```", "```java\n@Override \npublic void onConnected(Bundle bundle) \n{ \n  Log.i(TAG, \"Connected to Data Api\"); \n  if(spokenText != null) \n  { \n    if (spokenText.startsWith(\"home\")) \n    { \n      String todoItem = spokenText.substring(\"home\".length()); \n      sendMessage(Constants.HOME_TODO_ITEM, todoItem.getBytes()); \n    } \n    else if(spokenText.startsWith(\"work\"))  \n    { \n      String todoItem = spokenText.substring(\"work\".length()); \n      sendMessage(Constants.WORK_TODO_ITEM, todoItem.getBytes()); \n    } \n  } \n} \n\nprivate void sendMessage(final String path, final byte[] data)  \n{ \n  Log.i(TAG, \"Sending message to path \" + path); \n  Wearable.NodeApi.getConnectedNodes(mGoogleApiClient).setResultCallback( \n  new ResultCallback<NodeApi.GetConnectedNodesResult>()  \n  { \n    @Override \n    public void onResult(NodeApi.GetConnectedNodesResult nodes)  \n    { \n      for (Node node : nodes.getNodes())  \n      { \n        Wearable.MessageApi \n        sendMessage(mGoogleApiClient, node.getId(), path, data); \n        spokenText = null; \n      } \n    } \n  }); \n} \n\n```", "```java\n@Override \npublic void onMessageReceived(MessageEvent messageEvent) \n{ \n  super.onMessageReceived(messageEvent); \n  Log.i(TAG, \"Message received\" + messageEvent); \n  if(Constants.ON_THIS_DAY_REQUEST.equals(messageEvent.getPath())) \n  { \n    //read Today's content from Wikipedia \n    getOnThisDayContentFromWikipedia(); \n  }  \n  else  \n  { \n    String todo = new String(messageEvent.getData()); \n    if (Constants.HOME_TODO_ITEM.equals(messageEvent.getPath()))  \n    { \n      Log.i(TAG, \"Adding home todo item '\" + todo + \"'\"); \n      TodoItems.addItem(this, \"Home\", todo); \n    }  \n    else if (Constants.WORK_TODO_ITEM.equals(messageEvent.getPath()))  \n    { \n      Log.i(TAG, \"Adding work todo item '\" + todo + \"'\"); \n      TodoItems.addItem(this, \"Work\", todo);     } \n  } \n} \n\n```", "```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<resources> \n    <string-array name=\"actions\"> \n        <item>Day of Year</item> \n        <item>On this day...</item> \n        <item>Add Todo Item</item> \n        <item>Step Count</item> \n    </string-array> \n</resources> \n\n```", "```java\npublic class StepCounterActivity extends Activity implements SensorEventListener  \n{ \n  private SensorManager mSensorManager; \n  private Sensor mSensor; \n\n  // Steps counted since the last reboot \n  private int mSteps = 0; \n\n  private static final String TAG =  StepCounterActivity.class.getName(); \n\n  @Override \n  protected void onCreate(Bundle savedInstanceState)  \n  { \n    super.onCreate(savedInstanceState); \n    setContentView(R.layout.activity_daily_step_counter); \n\n    mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE); \n    mSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_STEP_COUNTER);   } \n\n  @Override \n  protected void onResume()  \n  { \n    super.onResume(); \n    mSensorManager.registerListener(this, mSensor,  SensorManager.SENSOR_DELAY_NORMAL); \n    refreshStepCount(); \n  } \n\n  @Override \n  protected void onPause()  \n  { \n    super.onPause(); \n    mSensorManager.unregisterListener(this); \n  } \n\n  @Override \n  public void onSensorChanged(SensorEvent event)  \n  { \n    Log.i(TAG,\"onSensorChanged - \" + event.values[0]); \n    if(event.sensor.getType() == Sensor.TYPE_STEP_COUNTER)  \n    { \n      Log.i(TAG,\"Total step count: \" + mSteps); \n      mSteps = (int) event.values[0]; \n      refreshStepCount(); \n    } \n  } \n  private void refreshStepCount()  \n  { \n    TextView desc = (TextView)  findViewById(R.id.daily_step_count_desc); \n    desc.setText(getString(R.string.daily_step_count_desc,  mSteps)); \n  } \n\n  @Override \n  public void onAccuracyChanged(Sensor sensor, int accuracy)  \n  { \n    Log.i(TAG,\"onAccuracyChanged - \" + sensor); \n  } \n} \n\n```"]