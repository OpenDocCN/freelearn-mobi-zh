["```swift\nimport XCTestclass MyClassTests: XCTestCase {\n    func testExample() {\n        let myClass = MyClass()\n        let result = myClass.doSomething()\n        XCTAssertEqual(result, 42)\n    }\n}\n```", "```swift\nimport XCTestclass MyAppTests: XCTestCase {\n    func testExample() {\n        let apiClient = APIClient()\n        let user = User(username: \"testuser\", password: \"secret\")\n        apiClient.login(user) { (error) in XCTAssertNil(error)\n            let data = apiClient.fetchData() XCTAssertNotNil(data)\n        }\n    }\n}\n```", "```swift\nimport XCTestclass MyClassPerformanceTests: XCTestCase {\n    func testPerformanceExample() {\n        let myClass = MyClass()\n        measure {\n            for _ in 0..<1000 {\n                let _ = myClass.doSomethingExpensive()\n            }\n        }\n    }\n}\n```", "```swift\nclass Calculator {  func add(a: Int, b: Int) -> Int {\n    return a + b\n  }\n}\n```", "```swift\nclass Calculator {  func calculateResult() -> Int {\n    let a = UserDefaults.standard.integer(forKey: \"a\")\n    let b = UserDefaults.standard.integer(forKey: \"b\")\n    return a + b\n  }\n}\n```", "```swift\n    let password = \"secret_password_1234\"// Use the hashValue property to get a unique   identifier for the password stringlet passwordHash = password.hashValue\n    ```", "```swift\n    // MARK: - Propertiesvar name: Stringvar age: Int// MARK: - Initializationinit(name: String, age: Int) {    self.name = name    self.age = age}// MARK: - Methodsfunc sayHello() {    print(\"Hello, my name is \\(name) and I am \\(age) years old.\")}\n    ```", "```swift\n    /** * Generates a random password of a specified length. * * @param {number} length - The length of the password    to generate. * @return {string} The generated password. */function generatePassword(length) {  // Implementation details}\n    ```"]