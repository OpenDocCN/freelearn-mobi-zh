["```swift\nprivate List<string> premTeams;\n\npublic override void ViewDidLoad() {\n  base.ViewDidLoad();\n  premTeams = new List<string>(){\"Liverpool\",\"Everton\",\"Arsenal\",\"Swansea\",\"Cardiff\",\"Newcastle\"};\n  tvTableView.Source = new myViewSource(premTeams);\n}\n\nprivate class myViewSource : UITableViewSource {\n  private List<string>dupPremTeams;\n  public myViewSource(List<string>prems) {\n    dupPremTeams = prems;\n  }\n\n  public override int RowsInSection(UITableView table,int section) {\n    return dupPremTeams.Count;\n  }\n\n  public override UITableViewCell GetCell(UITableView tableView,NSIndexPath index) {\n    UITableViewCell theCell = new UITableViewCell();\n        theCell.TextLabel.Text = dupPremTeams[index.Row];\n        return theCell;\n    }\n}\n```", "```swift\npublic override void RowSelected(UITableView tv,NSIndexPath index)\n{}\n```", "```swift\ntheCell.Accessory = UITableViewAccessory.DetailDisclosureButton;\n```", "```swift\nUITableViewCell theCell = new UITableViewCell(UITableViewStyle.Default, \"reuseID\");\n```", "```swift\npremTeams=newList<string>() {\"Arsenal\", \"Aston Villa\",\"Cardiff City\", \"Chelsea\",\"Crystal Palace\", \"Everton\",\"Fulham\", \"Hull City\", \"Liverpool\", \"Man City\", \"Man United\",\"Newcastle\", \"Norwich\", \"Southampton\", \"Stoke City\",\"Sunderland\", \"Swansea\", \"Tottenham\", \"WBA\", \"West Ham\"\n};\n\nprivate class myViewSource : UITableViewSource {\n  public override UITableViewCell GetCell(UITableView tableView,NSIndexPath index) {\n      UITableViewCell theCell = tableView.DequeueReusableCell(\"reuseID\");\n      if (theCell == null) {\n        theCell = new UITableViewCell(UITableViewCellStyle.Default, \"reuseID\");\n        // nothing to reuse, so create a cell}\n      theCell.TextLabel.Text = dupPremTeams[index.Row];\n      return theCell;\n  }\n}\n```", "```swift\npublic override string[] SectionIndexTitles(UITableView tableView)\n{\n  // add the index labels you want [letters are good]\n  return sectionTitles.ToArray();\n}\n```", "```swift\nUIWindow window = new UIWindow(UIScreen.MainScreen.Bounds);\nvar viewController = new mainController();\nUINavigationController rootNavigationController =new UINavigationController();\nrootNavigationController.PushViewController(viewController,false);\nwindow.RootViewController = rootNavigationController;\nwindow.MakeKeyAndVisible();\n```", "```swift\nNavigationItem.HidesBackButton = true;\n```", "```swift\nNavigationController.NavigationBarHidden = true;\n```", "```swift\nvar myViewController = new MyViewController();\nmyViewController = \"My View\";\n// sets the title and gives a back button\n\nNavigationController.PushViewController(myViewController, true);\n```", "```swift\nNavigationItem.BackBarButtonItem.Clicked += delegate {\n     NavigationController.PopViewControllerAnimated(true);\n     // sends back to the previous view on the stack\n};\n```", "```swift\nRowSelected(UITableView tableView, NSIndexPath indexPath)\n```", "```swift\nvar newController = new myNextTableViewController(ref_to_data,rows[indexPath.Row]);\nnewController.Title = rows[indexPath.Row];\nparent_controller.NavigationController.PushViewController(myController, true);\ntableView.DeselectRow(indexPath, true);\n```", "```swift\nNavigationController.PopToRootViewController(true);\n```", "```swift\ntabBar.ItemSelected += TabBarSelected;\n```", "```swift\nprivate void TabBarSelected(object s, EventArgs e)\n{\n  UITabBar item = (UITabBar)s;\n  UITabBarItem item = tb.SelectedItem;\n  switch(item.Tag)\n    {\n      // do something;\n    }\n}\n```"]