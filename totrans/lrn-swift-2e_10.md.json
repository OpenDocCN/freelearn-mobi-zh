["```swift\nvar number: Int\nint number;\n```", "```swift\nlet number = 10\nconst int number = 10;\n```", "```swift\nint *number;\n```", "```swift\nint *number = nil;\n```", "```swift\nnumber == nil;\n```", "```swift\nint actualNumber = *number;\n```", "```swift\ndouble *another = (double *)number;\n```", "```swift\nvar myString = \"Hello World!\"\nNSString *myString = @\"Hello World!\";\n```", "```swift\nvar array = [Int]()\nNSArray *array = [NSArray alloc];\narray = [array init];\n```", "```swift\nNSArray *array = [[NSArray alloc] init];\n```", "```swift\nNSArray *array = [NSArray new];\n```", "```swift\nNSMutableArray *array = [NSMutableArray new];\n[array addObject:@\"Hello World!\"];\n```", "```swift\nNSString *myString = [array objectAtIndex:0];\n```", "```swift\nNSString *myString = array[0];\n```", "```swift\nNSArray *myString = array[0];\n```", "```swift\n[array removeObjectAtIndex:0];\n```", "```swift\nNSArray *array = @[@\"one\", @\"two\", @\"three\"];\n```", "```swift\nNSMutableDictionary *dict = [[NSMutableDictionary alloc] init];\nNSDictionary *dict2 = [NSDictionary new];\n```", "```swift\n[dict setObject:@\"World\" forKey:@\"Hello\"];\n```", "```swift\nNSString *myString = [dict objectForKey:@\"Hello\"];\nNSString *myString2 = dict[@\"Hello\"];\n```", "```swift\n [dict removeObjectForKey:@\"Hello\"];\n```", "```swift\nNSDictionary *dict3 = @{@1: @\"one\", @2: @\"two\", @3: @\"three\"};\n```", "```swift\nvar name = \"Sarah\"\nprintln(\"Hello \\(name)\")\nNSString *name = @\"Sarah\";\nNSLog(@\"Hello %@\", name);\n```", "```swift\nvar invitees = [\"Sarah\", \"Jamison\", \"Roana\"]\nif invitees.count > 20 {\n    print(\"Too many people invited\")\n}\nNSArray *invitees = @[@\"Sarah\", @\"Jamison\", @\"Roana\"];\nif (invitees.count > 20) {\n    NSLog(@\"Too many people invited\");\n}\n```", "```swift\nswitch invitees.count {\n    case 1:\n        print(\"One person invited\")\n    case 2:\n        print(\"Two people invited\")\n    default:\n        print(\"More than two people invited\")\n}\nswitch (invitees.count) {\n    case 1:\n        NSLog(@\"One person invited\");\n        break;\n\n    case 2:\n        NSLog(@\"Two people invited\");\n        break;\n\n    default:\n        NSLog(@\"More than two people invited\");\n        break;\n}\n```", "```swift\nvar index = 0\nwhile index < invitees.count {\n    print(\"\\(invitees[index]) is invited\");\n    index++\n}\nint index = 0;\nwhile (index < invitees.count) {\n    NSLog(@\"%@ is invited\", invitees[index]);\n    index++;\n}\n```", "```swift\nvar showsByGenre = [\n    \"Comedy\": \"Modern Family\",\n    \"Drama\": \"Breaking Bad\"\n]\nfor (genre, show) in showsByGenre {\n    print(\"\\(show) is a great \\(genre)\")\n}\nNSDictionary *showsByGenre=@{\n    @\"Comedy\":@\"Modern Family\",\n    @\"Drama\":@\"Breaking Bad\"\n};\nfor (NSString *genre in showsByGenre) {\n    NSLog(@\"%@ is a great %@\", showsByGenre[genre], genre);\n}\n```", "```swift\nfor number in 1 ... 10 {\n    print(number)\n}\nfor (int number = 1; number <= 10; number++) {\n    NSLog(@\"%i\", number);\n}\n```", "```swift\nfunc sayHello() {\n    print(\"Hello World!\");\n}\nsayHello()\nvoid sayHello() {\n    NSLog(@\"Hello World!\");\n}\nsayHello();\n```", "```swift\nfunc addInviteeToListIfSpotAvailable\n    (\n    invitees: [String],\n    newInvitee: String\n    )\n    -> [String]\n{\n    if invitees.count >= 20 {\n        return invitees\n    }\n    return invitees + [newInvitee]\n}\naddInviteeToListIfSpotAvailable(invitees, newInvitee: \"Roana\")\nNSArray *addInviteeToListIfSpotAvailable\n    (\n    NSArray *invitees,\n    NSString *newInvitee\n    )\n{\n    if (invitees.count >= 20) {\n        return invitees;\n    }\n    NSMutableArray *copy = [invitees mutableCopy];\n    [copy addObject:newInvitee];\n    return copy;\n}\naddInviteeToListIfSpotAvailable(invitees, @\"Roana\");\n```", "```swift\nstruct Cylinder {\n    var radius: Int\n    var height: Int\n}\nvar c = Cylinder(radius: 10, height: 10)\ntypedef struct {\n    int radius;\n    int height;\n} Cylinder;\nCylinder c;\nc.radius = 10;\nc.height = 5;\n```", "```swift\nenum PrimaryColor {\n    case Red\n    case Green\n    case Blue\n} \nvar color = PrimaryColor.Blue\n\ntypedef enum {\n    PrimaryColorRed,\n    PrimaryColorGreen,\n    PrimaryColorBlue,\n} PrimaryColor;\nPrimaryColor color = PrimaryColorBlue;\n```", "```swift\ntypedef enum {\n    PrimaryColorRed,\n    PrimaryColorGreen = 10,\n    PrimaryColorBlue,\n} PrimaryColor;\n```", "```swift\nclass Contact {\n    var firstName: String = \"First\"\n    var lastName: String = \"Last\"\n}\n@interface Contact : NSObject {\n    NSString *firstName;\n    NSString *lastName;\n}\n@end\n\n@implementation Contact\n@end\n```", "```swift\n@implementation Contact\n- (id)init {\n    self = [super init];\n    if (self) {\n        firstName = @\"First\";\n        lastName = @\"Last\";\n    }\n    return self;\n}\n@end\n```", "```swift\n@interface Contact : NSObject {\n}\n@property NSString *firstName;\n@property NSString *lastName;\n@end\n```", "```swift\n@implementation Contact\n- (id)init {\n    self = [super init];\n    if (self) {\n        _firstName = @\"First\";\n        _lastName = @\"Last\";\n    }\n    return self;\n}\n@end\n```", "```swift\n@implementation Contact\n- (id)init {\n    self = [super init];\n    if (self) {\n        self.firstName = @\"First\";\n        self.lastName = @\"Last\";\n    }\n    return self;\n}\n@end\n```", "```swift\n@interface SteeringWheel : NSObject\n@property (weak) Car *car;\n@end\n```", "```swift\n@interface SteeringWheel : NSObject\n@property (weak, readonly) Car *car;\n@end\n```", "```swift\n@implementation Contact\n- (NSArray *)addToInviteeList:(NSArray *)invitees includeLastName:(BOOL)include {\n    NSMutableArray *copy = [invitees mutableCopy];\n    if (include) {\n        NSString *newString = [self.firstName\n           stringByAppendingFormat:@\" %@\", self.lastName\n        ];\n        [copy addObject:newString];\n    }\n    else {\n        [copy addObject:self.firstName];\n    }\n    return copy;\n}\n@end\n```", "```swift\n@implementation Contact\n+ (void)printAvailablePhonePrefixes {\n    NSLog(@\"+1\");\n}\n@end\n```", "```swift\n[Contact printAvailablePhonePrefixes];\n```", "```swift\nextension Contact {\n    func fullName() -> String {\n        return \"\\(self.firstName) \\(self.lastName)\"\n    }\n}\n@interface Contact (Helpers)\n- (NSString *)fullName;\n@end\n\n@implementation Contact (Helpers)\n- (NSString *)fullName {\n    return [self.firstName stringByAppendingFormat:@\" %@\", self.lastName];\n}\n@end\n```", "```swift\n@interface Contact (Helpers)\n@property NSString *fullName;\n@end\n\n@implementation Contact (Helpers)\n- (NSString *)fullName {\n    return [self.firstName stringByAppendingFormat: @\" %@\",\n        self.lastName\n    ];\n}\n- (void)setFullName:(NSString *)fullName {\n    NSArray *components = [fullName\n        componentsSeperatedByString:@\" \"];\n    ];\n    if (components.count > 0) {\n        self.firstName = components[0];\n    }\n    if (components.count > 1) {\n        self.lastName = components[1];\n    }\n}\n@end\n```", "```swift\nprotocol StringContainer {\n    var count: Int {get}\n    func addString(string: String)\n    func enumerateStrings(handler: () -> ())\n}\n@protocol StringContainer\n@property (readonly) NSInteger count;\n- (void)addString:(NSString *)string;\n- (void)enumerateStrings:(void(^)(NSString *))handler;\n@end\n```", "```swift\n@interface StringList : NSObject <StringContainer>\n@property NSMutableArray *contents;\n@end\n```", "```swift\n@implementation StringList\n\n- (NSInteger)count {\n    return [self.contents count];\n}\n\n- (void)addString:(NSString *)string {\n    if (self.contents == nil) {\n        self.contents = [NSMutableArray new];\n    }\n    [self.contents addObject:string];\n}\n\n- (void)enumerateStrings:(void (^)(NSString *))handler {\n    for (NSString *string in self.contents) {\n        handler(string);\n    }\n}\n\n@end\n```", "```swift\n    id<StringContainer> container = [StringList new];\n```", "```swift\nint (^doubleClosure)(int) = ^(int input){\n    return input * 2;\n};\ndoubleClosure(2);\n```", "```swift\nid firstInArrayPassingTest(NSArray *array, BOOL(^test)(id)) {\n    for (id element in array) {\n        if (test(element)) {\n            return element;\n        }\n    }\n    return nil;\n}\nfirstInArrayPassingTest(array, ^BOOL(id test) {\n   return false;\n});\n```", "```swift\n- (id)firstInArray:(NSArray *)array\n    passingTest:(BOOL(^)(id test))test\n{\n    for (id element in array) {\n        if (test(element)) {\n            return element;\n        }\n    }\n    return nil;\n}\n[self firstInArray:array passingTest:^BOOL(id test) {\n    return false;\n}];\n```", "```swift\n@interface Ball : NSObject\n@property int xLocation;\n@property (strong) void (^onBounce)();\n@end\n@implementation Ball\n@end\n\nBall *ball = [Ball new];\n__weak Ball *weakBall = ball;\nball.onBounce = ^{\n    NSLog(@\"%d\", weakBall.xLocation);\n};\n```", "```swift\n#import <Foundation/Foundation.h>\n#import \"Car.h\"\n\n@interface SteeringWheel : NSObject\n@property (weak) Car *car;\n@end\n```", "```swift\n@class Car;\n\n@interface SteeringWheel : NSObject\n@property (weak) Car *car;\n@end\n```", "```swift\n@interface SteeringWheel ()\n@property NSString *somePrivateProperty;\n- (void)somePrivateMethod;\n@end\n```", "```swift\nNSArray *addInviteeToListIfSpotAvailable\n     (\n     NSArray *invitees,\n     NSString *newInvitee\n     );\naddInviteeToListIfSpotAvailable(inviteeList, \"Sarah\")\n```", "```swift\n@interface Contact : NSObject\n@property NSString *firstName;\n@property NSString *lastName;\n- (NSArray *)addToInviteeList:(NSArray *)invitees includeLastName:(BOOL)include;\n@end\nvar contact = Contact()\ncontact.firstName = \"First\"\ncontact.lastName = \"Last\"\ncontact.addToInviteeList(inviteeList, includeLastName: false)\n```", "```swift\ntypedef enum {\n    PrimaryColorRed,\n    PrimaryColorGreen,\n    PrimaryColorBlue,\n} PrimaryColor;\nvar color: PrimaryColor = PrimaryColorRed\n```", "```swift\ninviteeList = contact.addToInviteeList(\n    inviteeList,\n    includeLastName: false\n    ) as! [String]\n```", "```swift\n- (NSArray * __nonnull)addToInviteeList:\n        (NSArray * __nullable)invitees;\n```", "```swift\n- (NSArray<NSString *> * __nonnull)addStringToInviteeList:\n        (NSArray<NSString *> * __nullable)invitees;\n```", "```swift\ninviteeList = contact.addStringToInviteeList(inviteeList)\n```"]