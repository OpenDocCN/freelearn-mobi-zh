["```swift\ncd <code_directory>/CH06_code/MTWebService/MTWebService\n\n```", "```swift\nxsp4\nListening on address: 0.0.0.0\nRoot directory: /Users/dtavlikos/projects/CH06_code/MTWebService/MTWebService\nListening on port: 8080 (non-secure)\nHit Return to stop the server.\n\n```", "```swift\n    this.btnFetch.TouchUpInside += (s, e) => {\n      using (MTTestWebService webService = new MTTestWebService())\n      {\n        this.lblOutput.Text = webService.GetMessage (\"Hello Web Service!\");\n      }\n    };\n    ```", "```swift\n    using WebServiceApp.mtWebService;\n    ```", "```swift\nthis.lblOutput.Text = webService.GetMessage (\"Hello Web Service!\");\n```", "```swift\nMTTestWebService webService = new MTTestWebService();\nwebService.GetMessageCompleted += (sender, args) => this.InvokeOnMainThread(() => this.lblOutput.Text = args.Result);\nwebService.GetMessageAsync(\"Hello Web Service!\");\n```", "```swift\n    this.btnForecast.TouchUpInside += async (sender, e) => {\n\n      HttpClient client = new HttpClient();\n      string jsonResponse = await client.GetStringAsync(\"http://api.ometfn.net/0.1/forecast/eu12/46.5,6.32/now.json\");\n      JsonValue jsonObj = JsonValue.Parse(jsonResponse);\n      JsonArray tempArray = (JsonArray)jsonObj[\"temp\"];\n      double temp = (double)tempArray[0];\n      JsonArray windSpeedArray = (JsonArray)jsonObj[\"wind_10m_ground_speed\"];\n      double windSpeed = (double)windSpeedArray[0];\n      this.lblOutput.Text = string.Format(\"Temperature: {0}\\nWind speed: {1}\", temp, windSpeed);\n    };\n    ```", "```swift\nthis.btnForecast.TouchUpInside += async (sender, e) => {\n//..\n```", "```swift\nHttpClient client = new HttpClient();\n  string jsonResponse = await client.GetStringAsync(\"http://api.ometfn.net/0.1/forecast/eu12/46.5,6.32/now.json\");\n```", "```swift\nJsonValue jsonObj = JsonValue.Parse(jsonResponse);\n```", "```swift\nJsonArray tempArray = (JsonArray)jsonObj[\"temp\"];\ndouble temp = (double)tempArray[0];\n```", "```swift\nthis.lblOutput.Text = string.Format(\"Temperature: {0}\\nWind speed: {1}\", temp, windSpeed);\n```", "```swift\n    this.btnForecast.TouchUpInside += (sender, e) => {\n      NSUrlRequest request = new NSUrlRequest(new NSUrl(\"http://api.ometfn.net/0.1/forecast/eu12/46.5,6.32/now.json\"));\n      NSUrlConnection connection = new NSUrlConnection(request, new ConnectionDelegate((response) => {\n        JsonValue jsonObj = JsonValue.Parse(response);\n        JsonArray tempArray = (JsonArray)jsonObj[\"temp\"];\n        double temp = (double)tempArray[0];\n        JsonArray windSpeedArray = (JsonArray)jsonObj[\"wind_10m_ground_speed\"];\n        double windSpeed = (double)windSpeedArray[0];\n        this.lblOutput.Text = string.Format(\"Temperature: { 0}\\ nWind speed: { 1}\", temp, windSpeed);\n        }));\n      connection.Start();\n    };\n    ```", "```swift\n    public class ConnectionDelegate : NSURLConnectionDelegate {\n      private Action<string> finishedCallback;\n      private StringBuilder responseData;\n      public ConnectionDelegate(Action<string> callback) {\n        this.finishedCallback = callback;\n        this.responseData = new StringBuilder();\n      }\n      public override void ReceivedData(NSUrlConnection connection, NSData data) {\n        if (null != data) {\n          this.responseData.Append(data.ToString());\n        }\n      }\n      public override FinishedLoading(NSUrlConnection connection) {\n        if (null != this.finishedCallback) {\n          this.finishedCallback(this.responseData.ToString());\n        }\n        this.responseData.Clear();\n      }\n    }\n    ```", "```swift\nNSUrlRequest request = new NSUrlRequest(new NSUrl(\"http://api.ometfn.net/0.1/forecast/eu12/46.5,6.32/now.json\"));\n  NSUrlConnection connection = new NSUrlConnection(request, new ConnectionDelegate((response) => {\n```", "```swift\npublic override void ReceivedData(NSUrlConnection connection, NSData data) { \n```", "```swift\npublic override void FinishedLoading(NSUrlConnection connection) {\n```", "```swift\nconnection.Start();\n```", "```swift\npublic override void FailedWithError(NSUrlConnection connection, NSError error) {\n  if (null != error) {\n    Console.WriteLine(\"Connection error: {0}\", error.LocalizedDescription);\n  }\n}\n```", "```swift\nNSUrlResponse response;\nNSError error;\nNSData data = NSUrlConnection.SendSyncrhonousRequest(request, out response, out error);\n// do something with data\n```", "```swift\ncd <code_directory>/CH06_code/WcfService/WcfService\n./start_wcfservice.sh\n\n```", "```swift\n    \"c:\\Program Files\\Microsoft SDKs\\Silverlight\\v3.0\\Tools\\slsvcutil /noconfig http://192.168.0.113:8080/WcfService.svc?wsdl\"\n\n    ```", "```swift\n    this.btnFetchData.TouchUpInside += (sender, e) => {\n     WcfTestServiceClient client = new WcfTestServiceClient (new BasicHttpBinding (), new EndpointAddress (\"http://192.168.0.113:8080/WcfTestService.svc\"));\n        client.GetBookInfoCompleted += WcfTestServiceClient_GetBookInfoCompleted;\n        client.GetBookInfoAsync ();\n        UIApplication.SharedApplication.NetworkActivityIndicatorVisible = true;\n    };\n    ```", "```swift\n    private void WcfTestServiceClient_GetBookInfoCompleted (object sender, GetBookInfoCompletedEventArgs e)\n    {\n      this.InvokeOnMainThread (delegate {\n        UIApplication.SharedApplication.NetworkActivityIndicatorVisible = false;\n        this.lblResponse.Text = String.Format (\"Book title: {0}\\nAuthor: {1}\", e.Result.Title, e.Result.Name);\n      } );\n    }\n    ```", "```swift\nclient.GetBookInfoCompleted += WcfTestServiceClient_GetBookInfoCompleted;\nclient.GetBookInfoAsync ();\n```", "```swift\nthis.labelResult.Text = String.Format (\"Book title: {0}\\nAuthor: {1}\", e.Result.Title, e.Result.Name);\n```"]