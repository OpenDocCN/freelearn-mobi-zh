["```swift\n    @property (readonly, strong, nonatomic) NSManagedObjectContext\n    *managedObjectContext;\n    @property (readonly, strong, nonatomic) NSManagedObjectModel\n    *managedObjectModel;\n    @property (readonly, strong, nonatomic) NSPersistentStoreCoordinator\n    *persistentStoreCoordinator;\n    ```", "```swift\n    - (NSManagedObjectContext *)managedObjectContext\n    {\n        if (_managedObjectContext != nil) {\n            return _managedObjectContext;\n        }\n        NSPersistentStoreCoordinator *coordinator = [self persistentStoreCoordinator];\n        if (coordinator != nil) {\n            _managedObjectContext = [[NSManagedObjectContext alloc] init];\n            [_managedObjectContext setPersistentStoreCoordinator:coordinator];\n        }\n\n        if (_managedObjectContext == nil)\n            NSLog(@\"_managedObjectContext is nil\");\n        return _managedObjectContext;\n    }\n    ```", "```swift\n    // Returns the managed object model for the application.\n    - (NSManagedObjectModel *)managedObjectModel\n    {\n        if (_managedObjectModel != nil) {\n            return _managedObjectModel;//return model since it already exists\n        }\n\n        //else create the model and return it\n        //CustomerModel is the filename of your *.xcdatamodeld file\n        NSURL *modelURL = [[NSBundle mainBundle] URLForResource:@\"CustomerModel\" withExtension:@\"momd\"];\n        _managedObjectModel = [[NSManagedObjectModel alloc] initWithContentsOfURL:modelURL];\n\n        if (_managedObjectModel == nil)\n            NSLog(@\"_managedObjectModel is nil\");\n        return _managedObjectModel;\n    }\n    ```", "```swift\n    // Returns the persistent store coordinator for the application.\n    - (NSPersistentStoreCoordinator *)persistentStoreCoordinator\n    { NSPersistentStoreCoordinator\n        if (_persistentStoreCoordinator != nil) {\n            return _persistentStoreCoordinator;//return persistent store\n        }//coordinator since it already exists\n\n        NSURL *storeURL = [[self applicationDocumentsDirectory] URLByAppendingPathComponent:@\"CustomerModel.sqlite\"];\n\n        NSError *error = nil;\n        _persistentStoreCoordinator = [[NSPersistentStoreCoordinator alloc] initWithManagedObjectModel:[self managedObjectModel]];\n\n        if (_persistentStoreCoordinator == nil)\n            NSLog(@\"_persistentStoreCoordinator is nil\");\n\n        if (![_persistentStoreCoordinator addPersistentStoreWithType:NSSQLiteStoreType configuration:nil URL:storeURL options:nil error:&error]) {\n            NSLog(@\"Error %@, %@\", error, [error userInfo]);\n            abort();\n        }\n\n        return _persistentStoreCoordinator;\n    }\n    ```", "```swift\n    #pragma mark - Application's Documents directory// Returns the URL to the application's Documents directory.\n    - (NSURL *)applicationDocumentsDirectory\n    {\n        return [[[NSFileManager defaultManager] URLsForDirectory:NSDocumentDirectory inDomains:NSUserDomainMask] lastObject];\n    }\n    ```", "```swift\n- (IBAction)save:(id)sender {\n    if ([nameTxtField text].length == 0)\n    {\n        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@\"Error\"\n                message:@\"Name must not be empty\" delegate:self\n                        cancelButtonTitle:@\"OK\" otherButtonTitles:nil];\n        [alert show];\n        return;\n    }\n    NSString *name = [nameTxtField text];\n    NSString *phone = [phoneTxtField text];\n    NSString *email = [emailTxtField text];\n    NSString *address = [addressTxtField text];\n    int age = [[ageTxtField text] intValue];\n\n    //save using core data\n    NSManagedObjectContext *context = nil;\n    id delegate = [[UIApplication sharedApplication] delegate];\n    if ([delegate performSelector:@selector(managedObjectContext)]) {\n        context = [delegate managedObjectContext];\n    }//prepare the context for saving\n\n    if (customer)//if we are showing existing customer data\n    {\n        NSNumber *age = [NSNumber numberWithInt:[[ageTxtField text] intValue]];\n        [customer setValue:[nameTxtField text] forKey:@\"name\"];\n        [customer setValue:age forKey:@\"age\"];\n        [customer setValue:[addressTxtField text] forKey:@\"address\"];\n        [customer setValue:[emailTxtField text] forKey:@\"email\"];\n        [customer setValue:[phoneTxtField text] forKey:@\"phone_number\"];\n    }\n    else\n    {\n        // Insert new object into the context\n        NSManagedObject *newCustomer = [NSEntityDescription insertNewObjectForEntityForName:@\"Customer\" inManagedObjectContext:context];\n        [newCustomer setValue:name forKey:@\"name\"];\n        [newCustomer setValue:phone forKey:@\"phone_number\"];\n        [newCustomer setValue:email forKey:@\"email\"];\n        [newCustomer setValue:address forKey:@\"address\"];\n        [newCustomer setValue:[NSNumber numberWithInteger:age] forKey:@\"age\"];\n    }\n\n    NSError *error = nil;\n    // Save the object to persistent store\n    NSString *str;\n    if (![context save:&error]) {\n        str = [NSString stringWithFormat:@\"Error saving %@ with localized description %@\", error, [error localizedDescription]];\n        NSLog(@\"%@\", str);\n    }\n    else\n    {\n        str = @\"Customer record saved to persistent store\";\n        if (customer)\n            str = @\"Customer record updated to persistent store\";\n        NSLog(@\"%@\", str);\n    }\n\n    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@\"Alert\"\n                                        message:str delegate:self\n                                cancelButtonTitle:@\"OK\" otherButtonTitles:nil];\n\n    [alert show];\n}\n```", "```swift\n- (void)viewDidAppear:(BOOL)animated\n{\n    [super viewDidAppear:animated];\n\n    //Get the context first\n    NSManagedObjectContext *managedObjectContext = [self managedObjectContext];\n\n    //load data from Customer entity\n    NSFetchRequest *fetchRequest = [[NSFetchRequest alloc] initWithEntityName:@\"Customer\"];\n    self.customers = [[managedObjectContext executeFetchRequest:fetchRequest error:nil] mutableCopy];\n\n    [tblView reloadData];\n}\n```", "```swift\n@property (strong) NSMutableArray *customers;\n```", "```swift\n- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath\n{\n    NSManagedObjectContext *context = [self managedObjectContext];\n\n    if (editingStyle == UITableViewCellEditingStyleDelete) {\n\n        NSManagedObject *obj = [self.customers objectAtIndex:indexPath.row];\n        [context deleteObject: obj];\n\n        NSError *error = nil;\n        NSString *str;\n        // Attempt to delete record from database\n        if (![context save:&error]) {\n            str = @\"Cannot delete record! %@\", [error localizedDescription];\n            NSLog(@\"%@\", str);\n        }\n        else\n        {\n            // Remove customer from table view\n            [self.customers removeObject:obj];\n\n            //update tableview\n            [tblView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath]\n                           withRowAnimation:UITableViewRowAnimationNone];\n            str = @\"Record removed\";\n            NSLog(@\"%@\", str);\n        }\n\n        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@\"Alert\"\n                                        message:str delegate:self\n                                cancelButtonTitle:@\"OK\" otherButtonTitles:nil];\n\n        [alert show];\n    }\n}\n```", "```swift\nif (customer)//if we showing existing customer data\n{\n        NSNumber *age = [NSNumber numberWithInt:[[ageTxtField text] intValue]];\n        [customer setValue:[nameTxtField text] forKey:@\"name\"];\n        [customer setValue:age forKey:@\"age\"];\n        [customer setValue:[addressTxtField text] forKey:@\"address\"];\n        [customer setValue:[emailTxtField text] forKey:@\"email\"];\n        [customer setValue:[phoneTxtField text] forKey:@\"phone_number\"];\n    }\n```", "```swift\nNSError *error = nil;\n    // Save the object to persistent store\n    NSString *str;\n    if (![context save:&error]) {\n        str = [NSString stringWithFormat:@\"Error saving %@ with localized description %@\", error, [error localizedDescription]];\n        NSLog(@\"%@\", str);\n    }\n```", "```swift\n@property (strong) NSManagedObject *customer;\n```", "```swift\nif ([delegate performSelector:@selector(managedObjectContext)]) {\n        context = [delegate managedObjectContext];\n    }//prepare the context for saving\n```"]