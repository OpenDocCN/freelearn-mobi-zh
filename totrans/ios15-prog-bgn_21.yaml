- en: '*Chapter 18*: Displaying Data in a Static Table View'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 18 章* 在静态表格视图中显示数据'
- en: You've come a long way, and your app has data in all its screens except for
    the **Restaurant Detail** screen.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经走得很远了，你的应用在所有屏幕上都有数据，除了餐厅详情屏幕。
- en: In this chapter, you'll configure the `RestaurantDetailViewController` class
    to manage the views in the `viewDidLoad()` to populate the table view when the
    `RestaurantItem` instance from the `RestaurantListViewController` and `MapViewController`
    instances to the `RestaurantDetailViewController` instance, which will display
    the data from that `RestaurantItem` instance on the **Restaurant Detail** screen.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将配置 `RestaurantDetailViewController` 类，以便在 `viewDidLoad()` 中管理视图，当从 `RestaurantListViewController`
    和 `MapViewController` 实例将 `RestaurantItem` 实例传递到 `RestaurantDetailViewController`
    实例时，将在餐厅详情屏幕上显示该 `RestaurantItem` 实例的数据。
- en: By the end of this chapter, you'll have learned how to make table views with
    static cells display data, and how to create a custom map image. By doing so,
    you'll be able to implement these features in your own apps.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将学会如何使静态单元格的表格视图显示数据，以及如何创建自定义地图图像。通过这样做，你将能够在自己的应用中实现这些功能。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Setting up outlets for the `RestaurantDetailViewController` class
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 `RestaurantDetailViewController` 类设置出口
- en: Displaying data in the static table view
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在静态表格视图中显示数据
- en: Passing data to the `RestaurantDetailViewController` instance
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据传递到 `RestaurantDetailViewController` 实例
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will continue working on the `LetsEat` project that you modified in the
    previous chapter.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你将继续在上一章中修改的 `LetsEat` 项目上工作。
- en: 'The completed Xcode project for this chapter is in the `Chapter18` folder of
    the code bundle for this book, which can be downloaded here:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章完成的 Xcode 项目位于本书代码包的 `Chapter18` 文件夹中，可以在此处下载：
- en: '[https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition](https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition](https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition)'
- en: 'Check out the following video to see the code in action:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频，了解代码的实际效果：
- en: '[https://bit.ly/3l2h6xq](https://bit.ly/3l2h6xq)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://bit.ly/3l2h6xq](https://bit.ly/3l2h6xq)'
- en: Let's start by creating outlets in the `RestaurantDetailViewController` class
    to enable it to manage the views in the **Restaurant Detail** screen.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从在 `RestaurantDetailViewController` 类中创建出口开始，以便它能够管理餐厅详情屏幕中的视图。
- en: Setting up outlets for the RestaurantDetailViewController class
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 RestaurantDetailViewController 类设置出口
- en: 'Your app has data in all its screens except for the **Restaurant Detail** screen.
    This screen is accessed either by tapping a restaurant in the **Restaurant List**
    screen or by tapping the restaurant annotation view''s callout bubble button in
    the **Map** screen. If you build and run your app, tapping a restaurant in the
    **Restaurant List** screen shows the placeholder **Restaurant Detail** screen:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你的应用在所有屏幕上都有数据，除了餐厅详情屏幕。这个屏幕可以通过在餐厅列表屏幕中点击餐厅或通过在地图屏幕中点击餐厅注释视图的呼出气泡按钮来访问。如果你构建并运行你的应用，点击餐厅列表屏幕中的餐厅会显示占位符餐厅详情屏幕：
- en: '![Figure 18.1: iOS Simulator showing placeholder Restaurant Detail screen'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 18.1: iOS 模拟器显示占位符餐厅详情屏幕'
- en: '](img/Figure_18.01_B17469.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_18.01_B17469.jpg](img/Figure_18.01_B17469.jpg)'
- en: 'Figure 18.1: iOS Simulator showing placeholder Restaurant Detail screen'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 'Figure 18.1: iOS 模拟器显示占位符餐厅详情屏幕'
- en: 'Tapping the button in the restaurant annotation view''s callout bubble in the
    **Map** screen shows the actual **Restaurant Detail** screen, but it does not
    contain any restaurant data:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在地图屏幕中餐厅注释视图的呼出气泡中的按钮上点击，会显示实际的餐厅详情屏幕，但它不包含任何餐厅数据：
- en: '![Figure 18.2: iOS Simulator showing Restaurant Detail screen'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 18.2: iOS 模拟器显示餐厅详情屏幕'
- en: '](img/Figure_18.02_B17469.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_18.02_B17469.jpg](img/Figure_18.02_B17469.jpg)'
- en: 'Figure 18.2: iOS Simulator showing Restaurant Detail screen'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 'Figure 18.2: iOS 模拟器显示餐厅详情屏幕'
- en: 'To fix this, let''s set up the outlets for the `RestaurantDetailViewController`
    class. Click the `RestaurantDetailViewController` file in the Project navigator.
    Add the following outlets after the class declaration and before the `selectedRestaurant`
    property declaration:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，让我们为 `RestaurantDetailViewController` 类设置出口。在项目导航器中点击 `RestaurantDetailViewController`
    文件。在类声明之后和 `selectedRestaurant` 属性声明之前添加以下出口：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The outlets that you just set up are as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚设置的出口如下：
- en: '`heartButton` is the outlet for the heart-shaped button in the navigation bar.
    You won''t be using it in this book, but it''s something that you can work on
    later on your own.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`heartButton` 是导航栏中心形按钮的输出。你在这本书中不会使用它，但这是你可以稍后自己工作的内容。'
- en: '`nameLabel` is the outlet for the label that displays the name of the restaurant
    in the first cell.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nameLabel` 是显示餐厅第一单元格中名称的标签的输出。'
- en: '`cuisineLabel` is the outlet for the label that displays the cuisines offered
    by the restaurant in the first cell.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cuisineLabel` 是显示餐厅第一单元格中提供的菜系的标签的输出。'
- en: '`headerAddressLabel` is the outlet for the label that displays the address
    of the restaurant in the first cell.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`headerAddressLabel` 是显示餐厅第一单元格中地址的标签的输出。'
- en: '`tableDetailsLabel` is the outlet for the label that displays the table details
    of the restaurant in the second cell.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tableDetailsLabel` 是显示餐厅第二单元格中餐桌详情的标签的输出。'
- en: '`overallRatingLabel` is the outlet for the label that displays the overall
    rating for the restaurant in the third cell. You will calculate and set this value
    in [*Chapter 21*](B17469_21_Final_VK_ePub.xhtml#_idTextAnchor362), *Understanding
    Core Data*.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`overallRatingLabel` 是显示餐厅第三单元格中整体评分的标签的输出。你将在 [*第 21 章*](B17469_21_Final_VK_ePub.xhtml#_idTextAnchor362)
    *理解核心数据* 中计算并设置此值。'
- en: '`addressLabel` is the outlet for the label that displays the address of the
    restaurant in the eighth cell.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`addressLabel` 是显示餐厅第八单元格中地址的标签的输出。'
- en: '`locationMapImageView` is the outlet for the image view that displays a location
    map for the restaurant in the ninth cell. You will write methods to generate this
    map later in this chapter.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`locationMapImageView` 是显示餐厅第九单元格中位置地图的视图的输出。你将在本章后面编写生成此地图的方法。'
- en: 'Now that you''ve created the outlets, you''ll connect them to the UI elements
    in the `RestaurantDetail` storyboard file. Follow these steps:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经创建了输出，你将它们连接到 `RestaurantDetail` 故事板文件中的 UI 元素。按照以下步骤操作：
- en: 'Expand the `RestaurantDetail` folder in the Project navigator. Click the `RestaurantDetail`
    storyboard file. Then, click the `RestaurantDetailViewController` class:![Figure
    18.3: Identity inspector settings for Restaurant Detail View Controller'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中展开 `RestaurantDetail` 文件夹。点击 `RestaurantDetail` 故事板文件。然后，点击 `RestaurantDetailViewController`
    类：![图 18.3：餐厅详情视图控制器身份检查器设置
- en: '](img/Figure_18.03_B17469.jpg)'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_18.03_B17469.jpg)'
- en: 'Figure 18.3: Identity inspector settings for Restaurant Detail View Controller'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 18.3：餐厅详情视图控制器身份检查器设置
- en: Note that the name of the view controller will change to **Restaurant Detail
    View Controller** once the class is set. Unlike the table view in the **Location
    View Controller Scene**, the table view in the **Restaurant Detail View Controller
    Scene** has static cells, meaning the number of cells is not dynamically generated
    based on data from a model object. As can be seen in the document outline, there
    are nine cells, and each cell has already been configured with the appropriate
    view objects. Clicking on each table view cell in the document outline will display
    that cell in the Editor area.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，一旦设置类，视图控制器的名称将更改为 **餐厅详情视图控制器**。与 **位置视图控制器场景** 中的表格视图不同，**餐厅详情视图控制器场景**
    中的表格视图具有静态单元格，这意味着单元格的数量不是根据模型对象的数据动态生成的。如文档大纲所示，有九个单元格，并且每个单元格都已经配置了适当的视图对象。在文档大纲中单击每个表格视图单元格将显示该单元格在编辑区域。
- en: 'Click the Connections inspector button. You''ll see all the outlets you added
    earlier in the `RestaurantDetailViewController` class:![Figure 18.4: Connections
    inspector showing outlets for RestaurantDetailViewController class'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击连接检查器按钮。你将看到在 `RestaurantDetailViewController` 类中之前添加的所有输出：![图 18.4：连接检查器显示
    RestaurantDetailViewController 类的输出
- en: '](img/Figure_18.04_B17469.jpg)'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_18.04_B17469.jpg)'
- en: 'Figure 18.4: Connections inspector showing outlets for RestaurantDetailViewController
    class'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 18.4：连接检查器显示 RestaurantDetailViewController 类的输出
- en: 'Click and drag from the `heartButton` outlet to the heart in the navigation
    bar:![Figure 18.5: Connections inspector showing heartButton outlet'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `heartButton` 输出拖动到导航栏中的心形图标：![图 18.5：连接检查器显示 heartButton 输出
- en: '](img/Figure_18.05_B17469.jpg)'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_18.05_B17469.jpg)'
- en: 'Figure 18.5: Connections inspector showing heartButton outlet'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 18.5：连接检查器显示 heartButton 输出
- en: 'The `heartButton` outlet is now connected. Note that the description of the
    view will change to **Heart Button** in the document outline:![Figure 18.6: Document
    outline showing Heart Button view'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`heartButton` 输出口现在已连接。注意，在文档大纲中，视图的描述将更改为 **Heart Button**：![图 18.6：文档大纲显示
    Heart Button 视图'
- en: '](img/Figure_18.06_B17469.jpg)'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_18.06_B17469.jpg]'
- en: 'Figure 18.6: Document outline showing Heart Button view'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 18.6：文档大纲显示 Heart Button 视图
- en: 'Click on the last `locationMapImageView` outlet to the **Image View** in the
    last cell to connect them. Note that the name will change from **Image View**
    to **Location Map Image View** in the document outline:![Figure 18.7: Connections
    inspector showing locationMapImageView outlet'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击最后一个 `locationMapImageView` 输出口，连接到最后单元格中的 **Image View**。注意，在文档大纲中，名称将从 **Image
    View** 更改为 **Location Map Image View**：![图 18.7：连接检查器显示 locationMapImageView 输出口
- en: '](img/Figure_18.07_B17469.jpg)'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_18.07_B17469.jpg]'
- en: 'Figure 18.7: Connections inspector showing locationMapImageView outlet'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 18.7：连接检查器显示 locationMapImageView 输出口
- en: 'Click on the eighth `addressLabel` outlet to the **Label** in the eighth cell
    to connect them. Note that the name will change from **Label** to **Address Label**
    in the document outline:![Figure 18.8: Connections inspector showing addressLabel
    outlet'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击并拖动 `addressLabel` 输出口到第八单元格中的 **Label** 以连接它们。注意，在文档大纲中，名称将从 **Label** 更改为
    **Address Label**：![图 18.8：连接检查器显示 addressLabel 输出口
- en: '](img/Figure_18.08_B17469.jpg)'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_18.08_B17469.jpg]'
- en: 'Figure 18.8: Connections inspector showing addressLabel outlet'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 18.8：连接检查器显示 addressLabel 输出口
- en: 'Click on the first `cuisineLabel` outlet to the second **Label** in the first
    cell to connect them. Note that the name will change from **Label** to **Cuisine
    Label** in the document outline:![Figure 18.9: Connections inspector showing cuisineLabel
    outlet'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击第一个 `cuisineLabel` 输出口，连接到第一个单元格中的第二个 **Label**。注意，在文档大纲中，名称将从 **Label** 更改为
    **Cuisine Label**：![图 18.9：连接检查器显示 cuisineLabel 输出口
- en: '](img/Figure_18.09_B17469.jpg)'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_18.09_B17469.jpg]'
- en: 'Figure 18.9: Connections inspector showing cuisineLabel outlet'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 18.9：连接检查器显示 cuisineLabel 输出口
- en: 'Click and drag from the `headerAddressLabel` outlet to the third **Label**
    in the first cell to connect them. Note that the name will change from **Label**
    to **Header Address Label** in the document outline:![Figure 18.10: Connections
    inspector showing headerAddressLabel outlet'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `headerAddressLabel` 输出口拖动到第一个单元格中的第三个 **Label** 以连接它们。注意，在文档大纲中，名称将从 **Label**
    更改为 **Header Address Label**：![图 18.10：连接检查器显示 headerAddressLabel 输出口
- en: '](img/Figure_18.10_B17469.jpg)'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_18.10_B17469.jpg]'
- en: 'Figure 18.10: Connections inspector showing headerAddressLabel outlet'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 18.10：连接检查器显示 headerAddressLabel 输出口
- en: 'Click and drag from the `nameLabel` outlet to the first **Label** in the first
    cell to connect them. Note that the name will change from **Label** to **Name
    Label** in the document outline:![Figure 18.11: Connections inspector showing
    nameLabel outlet'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `nameLabel` 输出口拖动到第一个单元格中的第一个 **Label** 以连接它们。注意，在文档大纲中，名称将从 **Label** 更改为
    **Name Label**：![图 18.11：连接检查器显示 nameLabel 输出口
- en: '](img/Figure_18.11_B17469.jpg)'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_18.11_B17469.jpg]'
- en: 'Figure 18.11: Connections inspector showing nameLabel outlet'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 18.11：连接检查器显示 nameLabel 输出口
- en: 'Click on the third `overallRatingLabel` outlet to the **Label** with the big
    black **0.0** inside it to connect them. Note that the name will change from **Label**
    to **Overall Rating Label** in the document outline:![Figure 18.12: Connections
    inspector showing overallRatingLabel outlet'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击第三个 `overallRatingLabel` 输出口，连接到内部带有大黑 **0.0** 的 **Label**。注意，在文档大纲中，名称将从
    **Label** 更改为 **Overall Rating Label**：![图 18.12：连接检查器显示 overallRatingLabel 输出口
- en: '](img/Figure_18.12_B17469.jpg)'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_18.12_B17469.jpg]'
- en: 'Figure 18.12: Connections inspector showing overallRatingLabel outlet'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 18.12：连接检查器显示 overallRatingLabel 输出口
- en: 'Click on the second `tableDetailsLabel` outlet to the **Label** just above
    the three red buttons in the second cell to connect them. Note that the name will
    change from **Label** to **Table Details Label** in the document outline:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击第二个 `tableDetailsLabel` 输出口，连接到第二个单元格中三个红色按钮上方的 **Label**。注意，在文档大纲中，名称将从 **Label**
    更改为 **Table Details Label**：
- en: '![Figure 18.13: Connections inspector showing tableDetailsLabel outlet'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 18.13：连接检查器显示 tableDetailsLabel 输出口'
- en: '](img/Figure_18.13_B17469.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_18.13_B17469.jpg]'
- en: 'Figure 18.13: Connections inspector showing tableDetailsLabel outlet'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18.13：连接检查器显示 tableDetailsLabel 输出口
- en: All the outlets for the `RestaurantDetailViewController` class have now been
    set up. In the next section, you'll modify the `RestaurantDetailViewController`
    class to receive restaurant data from the `RestaurantListViewController` and `MapViewController`
    instances and display it in the **Restaurant Detail** screen.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，`RestaurantDetailViewController`类的所有输出都已设置。在下一节中，你将修改`RestaurantDetailViewController`类以从`RestaurantListViewController`和`MapViewController`实例接收餐厅数据，并在**餐厅详情**屏幕中显示它。
- en: Displaying data in the static table view
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在静态表格视图中显示数据
- en: 'You have successfully connected all the outlets in the `RestaurantDetailViewController`
    class to the user interface elements in the `UITableViewDataSource` protocol to
    populate the outlets. Instead, you will write custom methods to do so. Follow
    these steps:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经成功将`RestaurantDetailViewController`类中的所有输出连接到用户界面元素，以填充输出。相反，你将编写自定义方法来完成此操作。按照以下步骤操作：
- en: Click the `RestaurantDetailViewController` file in the Project navigator.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击`RestaurantDetailViewController`文件。
- en: 'Add code to import the `MapKit` framework after the existing `import` statement:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在现有的`import`语句之后添加导入`MapKit`框架的代码：
- en: '[PRE1]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This is required since you will be using the `MapKit` framework's properties
    and methods to generate an image of a map for the image view in the last cell.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是因为你将使用`MapKit`框架的属性和方法来生成一个地图图像，用于最后一个单元格中的图像视图。
- en: Add a private extension containing code to set the labels in the `setupLabels()`
    method is quite straightforward; it gets values from a `RestaurantItem` instance
    and puts them into the outlets in the `RestaurantDetailViewController` instance
    except for `tableDetailsLabel`, which is just assigned a string.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个包含设置标签的`setupLabels()`方法的私有扩展，代码相当简单；它从`RestaurantItem`实例获取值并将它们放入`RestaurantDetailViewController`实例的输出中，除了`tableDetailsLabel`，它只是分配了一个字符串。
- en: 'In the last cell, you will display an image of a map. To do this, you''ll generate
    an image from a map region and set the `locationMapImageLabel` outlet to display
    that image. This image will also display the same custom annotation image you
    used in the `setupLabels()` and before the last curly brace:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在最后一个单元格中，你将显示一个地图图像。为此，你需要从地图区域生成图像，并将`locationMapImageLabel`输出设置为显示该图像。此图像还将显示你在`setupLabels()`和最后一个花括号之前使用的相同自定义注释图像：
- en: '[PRE2]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This method creates a `CLLocationCoordinate2D` instance using the `selectedRestaurant`
    property's `lat` and `long` properties and assigns it to `location`. Then, it
    calls the `takeSnapshot(with:)` method, passing `location` as a parameter.
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个方法使用`selectedRestaurant`属性的`lat`和`long`属性创建一个`CLLocationCoordinate2D`实例，并将其分配给`location`。然后，它调用`takeSnapshot(with:)`方法，将`location`作为参数传递。
- en: 'You''ll see an error since `takeSnapShot(with:)` hasn''t been implemented yet,
    so add the following code after the `createMap()` function to implement it:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将看到一个错误，因为`takeSnapShot(with:)`尚未实现，所以请在`createMap()`函数之后添加以下代码以实现它：
- en: '[PRE3]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: A full description of this method is beyond the scope of this book, but here's
    a simple explanation of what it does. Given a location, it takes a snapshot of
    the map at that location, adds the custom annotation you used earlier in the `locationMapImageView`
    outlet in the `RestaurantDetailViewController` instance.
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个方法的完整描述超出了本书的范围，但这里是对其功能的简单解释。给定一个位置，它在该位置拍摄地图的快照，并将你之前在`RestaurantDetailViewController`实例的`locationMapImageView`输出中使用的自定义注释添加到地图上。
- en: 'You have written all the methods that are required for the `RestaurantDetailViewController`
    class to display the desired `RestaurantItem` instance details in the `private`
    extension before the `setupLabels()` method definition, add an `initialize()`
    method that calls the `setupLabels()` and `createMap()` methods:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你已经在`setupLabels()`方法定义之前的`private`扩展中编写了所有必需的方法，以在`RestaurantDetailViewController`类中显示所需的`RestaurantItem`实例详细信息，添加一个调用`setupLabels()`和`createMap()`方法的`initialize()`方法：
- en: '[PRE4]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Modify the `viewDidLoad()` method to call the `initialize()` method when the
    `RestaurantDetailViewController` instance loads its view:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`viewDidLoad()`方法，在`RestaurantDetailViewController`实例加载其视图时调用`initialize()`方法：
- en: '[PRE5]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Recall that in [*Chapter 16*](B17469_16_Final_VK_ePub.xhtml#_idTextAnchor223),
    *Getting Started with MapKit*, you''ve already configured the `MapViewController`
    class to pass a `RestaurantItem` instance to the `RestaurantDetailViewController`
    instance. Build and run your app and go to the **Map** screen. Click on one of
    the restaurants to display a callout bubble. Click the button in the callout bubble,
    and you should see the restaurant details appear in the **Restaurant Detail**
    screen:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下，在 [*第16章*](B17469_16_Final_VK_ePub.xhtml#_idTextAnchor223)，*使用 MapKit 入门*，你已经配置了
    `MapViewController` 类，以便将 `RestaurantItem` 实例传递到 `RestaurantDetailViewController`
    实例。构建并运行你的应用，转到 **地图** 屏幕。点击其中一个餐厅以显示呼出气泡。点击呼出气泡中的按钮，你应该在 **餐厅详情** 屏幕中看到餐厅详情：
- en: '![Figure 18.14: iOS Simulator showing Restaurant Detail screen'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '![图18.14：iOS 模拟器显示餐厅详情屏幕'
- en: '](img/Figure_18.14_B17469.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_18.14_B17469.jpg)'
- en: 'Figure 18.14: iOS Simulator showing Restaurant Detail screen'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图18.14：iOS 模拟器显示餐厅详情屏幕
- en: 'If you scroll down, you will see the map image in the last cell:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你向下滚动，你将看到最后一个单元格中的地图图像：
- en: '![Figure 18.15: iOS Simulator showing map in Restaurant Detail screen'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '![图18.15：iOS 模拟器显示餐厅详情屏幕中的地图'
- en: '](img/Figure_18.15_B17469.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_18.15_B17469.jpg)'
- en: 'Figure 18.15: iOS Simulator showing map in Restaurant Detail screen'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图18.15：iOS 模拟器显示餐厅详情屏幕中的地图
- en: You have finished modifying the `RestaurantDetailViewController` class, but
    you still need to pass the selected `RestaurantItem` instance from the `RestaurantListViewController`
    instance to the `RestaurantDetailViewController` instance. You'll do this in the
    next section.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经完成了对 `RestaurantDetailViewController` 类的修改，但你仍然需要从 `RestaurantListViewController`
    实例将选中的 `RestaurantItem` 实例传递到 `RestaurantDetailViewController` 实例。你将在下一节中这样做。
- en: Passing data to the RestaurantDetailViewController instance
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据传递给 RestaurantDetailViewController 实例
- en: 'You have added and connected the outlets for the `RestaurantDetailViewController`
    class. You''ve also added code to this class to get restaurant data from a `RestaurantItem`
    instance and use it to populate its outlets. The last thing you need to do is
    pass the selected `RestaurantItem` instance from the `RestaurantListViewController`
    instance to the `RestaurantDetailViewController` instance. Follow these steps:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经添加并连接了 `RestaurantDetailViewController` 类的输出端口。你还在这个类中添加了代码，从 `RestaurantItem`
    实例获取餐厅数据，并使用它来填充其输出端口。你需要做的最后一件事是将选中的 `RestaurantItem` 实例从 `RestaurantListViewController`
    实例传递到 `RestaurantDetailViewController` 实例。按照以下步骤操作：
- en: Click the `RestaurantListViewController` file in the Project navigator.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击 `RestaurantListViewController` 文件。
- en: 'Add the following code after `viewDidLoad()`: to call a `showRestaurantDetail(segue:)`
    method if the segue identifier is `showDetail`:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `viewDidLoad()` 之后添加以下代码：如果过渡标识符是 `showDetail`，则调用 `showRestaurantDetail(segue:)`
    方法：
- en: '[PRE6]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Recall that you added a segue between the `RestaurantListViewController` instance
    transitions to another view controller, the segue identifier is checked. If the
    segue identifier is `showDetail`, then the `showRestaurantDetail` method is executed.
    Only the segue between the `showDetail` identifier, so the destination view controller
    must be the `RestaurantDetailViewController` instance.
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 回想一下，你在 `RestaurantListViewController` 实例过渡到另一个视图控制器时添加了一个过渡，过渡标识符被检查。如果过渡标识符是
    `showDetail`，则执行 `showRestaurantDetail` 方法。只有 `showDetail` 标识符之间的过渡，所以目标视图控制器必须是
    `RestaurantDetailViewController` 实例。
- en: 'You''ll see an error because the `showRestaurantDetail(segue:)` method hasn''t
    been implemented. This method will pass the `RestaurantItem` instance from the
    `RestaurantListViewController` instance to the `RestaurantDetailViewController`
    instance. Add it after the opening curly brace of the `private` extension in the
    `RestaurantListViewController` class:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会看到一个错误，因为 `showRestaurantDetail(segue:)` 方法尚未实现。此方法将从 `RestaurantListViewController`
    实例传递 `RestaurantItem` 实例到 `RestaurantDetailViewController` 实例。在 `RestaurantListViewController`
    类的 `private` 扩展的开头大括号之后添加它：
- en: '[PRE7]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This method first checks if the segue destination is an instance of `RestaurantDetailViewController`,
    and gets the index of the collection view cell that was tapped. Then, `manager`
    returns the `RestaurantItem` instance stored at that index, which is assigned
    to `selectedRestaurant`. The `RestaurantDetailViewController` instance's `selectedRestaurant`
    property is then set to this instance.
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这种方法首先检查过渡目标是否是 `RestaurantDetailViewController` 的实例，并获取被点击的集合视图单元格的索引。然后，`manager`
    返回存储在该索引处的 `RestaurantItem` 实例，并将其分配给 `selectedRestaurant`。然后，将 `RestaurantDetailViewController`
    实例的 `selectedRestaurant` 属性设置为这个实例。
- en: 'Now let''s take a look at the `Main` storyboard file. It is currently connected
    to a placeholder `Main` storyboard file to remove the placeholder and connect
    the `RestaurantDetail` storyboard file. Follow these steps:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看`Main`故事板文件。它目前连接到一个占位符`Main`故事板文件，以删除占位符并连接到`RestaurantDetail`故事板文件。按照以下步骤操作：
- en: 'Click the `Main` storyboard file and locate the `restaurantCell` in the document
    outline. Then, *Ctrl + Drag* from `restaurantCell` to the `RestaurantDetail` storyboard
    reference (you added this storyboard reference in [*Chapter 16*](B17469_16_Final_VK_ePub.xhtml#_idTextAnchor223)*,
    Getting Started with MapKit*) as shown:![Figure 18.16: Editor area showing RestaurantDetail
    storyboard reference'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`Main`故事板文件，在文档大纲中找到`restaurantCell`。然后，*Ctrl + Drag*从`restaurantCell`到`RestaurantDetail`故事板引用（你在[*第16章*](B17469_16_Final_VK_ePub.xhtml#_idTextAnchor223)*，使用MapKit入门）中，如图所示：![图18.16：编辑区域显示RestaurantDetail故事板引用
- en: '](img/Figure_18.16_B17469.jpg)'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_18.16_B17469.jpg]'
- en: 'Figure 18.16: Editor area showing RestaurantDetail storyboard reference'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图18.16：编辑区域显示RestaurantDetail故事板引用
- en: 'Choose **Show** from the popup menu that appears:![Figure 18.17: Segue pop-up
    menu with Show selected'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从出现的弹出菜单中选择**显示**：![图18.17：带有“显示选中”的切换弹出菜单
- en: '](img/Figure_18.17_B17469.jpg)'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_18.17_B17469.jpg]'
- en: 'Figure 18.17: Segue pop-up menu with Show selected'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图18.17：带有“显示选中”的切换弹出菜单
- en: 'Remove the placeholder scenes from the storyboard by selecting them and pressing
    *Delete* on your keyboard, as they are no longer needed:![Figure 18.18: Editor
    area showing placeholder scenes to be removed'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择它们并在键盘上按*Delete*键来从故事板中删除占位符场景，因为它们不再需要：![图18.18：编辑区域显示要删除的占位符场景
- en: '](img/Figure_18.18_B17469.jpg)'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_18.18_B17469.jpg]'
- en: 'Figure 18.18: Editor area showing placeholder scenes to be removed'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图18.18：编辑区域显示要删除的占位符场景
- en: 'You will set the segue identifier to `showDetail`. As discussed earlier, this
    will set the `RestaurantDetailViewController` instance''s `selectedRestaurant`
    property. Select the segue you just added:![Figure 18.19: Segue between Restaurant
    List View Controller Scene and RestaurantDetail storyboard reference'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将设置切换标识符为`showDetail`。如前所述，这将设置`RestaurantDetailViewController`实例的`selectedRestaurant`属性。选择你刚刚添加的切换：![图18.19：餐厅列表视图控制器场景和RestaurantDetail故事板引用之间的切换
- en: '](img/Figure_18.19_B17469.jpg)'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_18.19_B17469.jpg]'
- en: 'Figure 18.19: Segue between Restaurant List View Controller Scene and RestaurantDetail
    storyboard reference'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图18.19：餐厅列表视图控制器场景和RestaurantDetail故事板引用之间的切换
- en: 'Click the Attributes inspector button. Under `showDetail`:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击属性检查器按钮。在`showDetail`下：
- en: '![Figure 18.20: Attributes inspector setting for showDetail segue'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '![图18.20：为showDetail切换设置的属性检查器'
- en: '](img/Figure_18.20_B17469.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_18.20_B17469.jpg]'
- en: 'Figure 18.20: Attributes inspector setting for showDetail segue'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图18.20：为showDetail切换设置的属性检查器
- en: 'Build and run your project. Select a city and a type of cuisine. Click on one
    of the restaurants in the **Restaurant List** screen. The details of that restaurant
    will appear in the **Restaurant Detail** screen:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 构建并运行你的项目。选择一个城市和一种菜系。点击**餐厅列表**屏幕中的其中一家餐厅。该餐厅的详细信息将出现在**餐厅详情**屏幕中：
- en: '![Figure 18.21: iOS Simulator showing Restaurant Detail screen'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '![图18.21：iOS模拟器显示餐厅详情屏幕'
- en: '](img/Figure_18.21_B17469.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_18.21_B17469.jpg]'
- en: 'Figure 18.21: iOS Simulator showing Restaurant Detail screen'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图18.21：iOS模拟器显示餐厅详情屏幕
- en: The implementation for the **Restaurant Detail** screen is now complete. When
    you select a restaurant in the **Map** or **Restaurant List** screens, the details
    of that restaurant will be displayed in the **Restaurant Detail** screen. Awesome!
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**餐厅详情**屏幕的实现现在已经完成。当你从**地图**或**餐厅列表**屏幕中选择一家餐厅时，该餐厅的详细信息将在**餐厅详情**屏幕中显示。太棒了！'
- en: Summary
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you connected outlets in the `RestaurantDetailViewController`
    class to the `viewDidLoad()` to populate the table view when the `RestaurantItem`
    instance from the `RestaurantListViewController` and `MapViewController` instances
    to the `RestaurantDetailViewController` instance, enabling it to display data
    from that `RestaurantItem` instance on the **Restaurant Detail** screen.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将`RestaurantDetailViewController`类中的出口连接到`viewDidLoad()`，以便在从`RestaurantListViewController`和`MapViewController`实例到`RestaurantDetailViewController`实例的`RestaurantItem`实例时填充表格视图，使其能够在**餐厅详情**屏幕上显示该`RestaurantItem`实例的数据。
- en: By doing this, you have learned how to make table views with static cells display
    data, as well as how to create a custom map image, which you can now implement
    in your own apps.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，您已经学会了如何制作静态单元格的表格视图来显示数据，以及如何创建自定义地图图像，现在您可以在自己的应用中实现这些功能。
- en: Congratulations! All the screens in your app now display data. However, if you
    look at the **Restaurant Detail** screen, there are no ratings, reviews, or photos
    for the restaurant, and no way to add them. You will implement this starting with
    the next chapter, where you'll create a custom control that allows you to add
    star ratings for a restaurant for the **Restaurant Detail** and **Review Form**
    screens.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您应用中的所有屏幕现在都显示数据了。然而，如果您查看**餐厅详情**屏幕，会发现没有餐厅的评分、评论或照片，也没有添加它们的方法。您将从下一章开始实现这一功能，在那里您将创建一个自定义控件，允许您为**餐厅详情**和**评论表单**屏幕添加餐厅的星级评分。
