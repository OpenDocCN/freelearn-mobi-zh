["```java\nandroid {\n    buildTypes {\n        release {\n            minifyEnabled true\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n```", "```java\n-keep public class <MyClass>\n```", "```java\nandroid {\n    buildTypes {\n    release {\n            minifyEnabled = true\n            shrinkResources = true\n        }\n    }\n}\n```", "```java\n:app:shrinkReleaseResources\nRemoved unused resources: Binary resource data reduced from 433KB to 354KB: Removed 18%\n```", "```java\n$ gradlew clean assembleRelease --info\n\n```", "```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources \n    tools:keep=\"@layout/keep_me,@layout/also_used_*\"/>\n```", "```java\nandroid {\n    defaultConfig {\n        resConfigs \"en\", \"da\", \"nl\"\n    }\n}\n```", "```java\nandroid {\n    defaultConfig {\n        resConfigs \"hdpi\", \"xhdpi\", \"xxhdpi\", \"xxxhdpi\"\n    }\n}\n```", "```java\norg.gradle.parallel=true\n```", "```java\norg.gradle.daemon=true\n```", "```java\norg.gradle.jvmargs=-Xms256m -Xmx1024m\n```", "```java\nandroid {\n    buildToolsRevision '22.0.1'\n    defaultConfig {\n      useJack = true\n    }\n}\n```", "```java\nandroid {\n    productFlavors {\n        regular {\n            useJack = false\n        }\n\n        experimental {\n            useJack = true\n        }\n    }\n}\n```", "```java\nandroid {\n    lintOptions {\n        abortOnError false\n    }\n}\n```", "```java\ntask archive << {\n    ant.echo 'Ant is archiving...'\n    ant.zip(destfile: 'archive.zip') {\n        fileset(dir: 'zipme')\n    }\n}\n```", "```java\ntask gradleArchive(type:Zip) << {\n    from 'zipme/'\n    archiveName 'grarchive.zip'\n}\n```", "```java\n<project>\n    <target name=\"hello\">\n        <echo>Hello, Ant</echo>\n    </target>\n</project>\n```", "```java\nant.importBuild 'build.xml'\n```", "```java\n$ gradlew hello\n:hello\n[ant:echo] Hello, Ant\n\n```", "```java\nhello << {\n    println 'Hello, Ant. It\\'s me, Gradle'\n}\n```", "```java\n$ gradlew hello\n:hello\n[ant:echo] Hello, Ant\nHello, Ant. It's me, Gradle\n\n```", "```java\ntask hi(dependsOn: hello) << {\n    println 'Hi!'\n}\n```", "```java\n$ gradlew intro\n:hello\n[ant:echo] Hello, Ant\nHello, Ant. It's me, Gradle\n:hi\nHi!\n\n```", "```java\n<target name=\"hi\" depends=\"intro\">\n    <echo>Hi</echo>\n</target>\n```", "```java\nant.importBuild('build.xml') { antTargetName ->\n    'ant-' + antTargetName\n}\n```", "```java\n<target name=\"appVersion\">\n    <echo>${version}</echo>\n</target>\n```", "```java\nant.version = '1.0'\n```", "```java\nant.properties['version'] = '1.0'\n```", "```java\n$ gradlew appVersion\n:appVersion\n[ant:echo] 1.0\n\n```", "```java\nandroid {\n    splits {\n        density {\n            enable true\n            exclude 'ldpi', 'mdpi'\n            compatibleScreens 'normal', 'large', 'xlarge'\n        }\n    }\n}\n```", "```java\napp-hdpi-release.apk\napp-universal-release.apk\napp-xhdpi-release.apk\napp-xxhdpi-release.apk\napp-xxxhdpi-release.apk\n```", "```java\next.versionCodes = ['armeabi-v7a':1, mips:2, x86:3]\n\nimport com.android.build.OutputFile\n\nandroid.applicationVariants.all { variant ->\n    // assign different version code for each output\n    variant.outputs.each { output ->\n        output.versionCodeOverride =  project.ext.versionCodes.get(output.getFilter(OutputFile.ABI)) * 1000000 + android.defaultConfig.versionCode\n    }\n}\n```"]