- en: 'Section 2: Reactive and Concurrent Patterns'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section focuses on modern approaches to design patterns, such as Reactive
    and concurrent design patterns, and functional programming in general.
  prefs: []
  type: TYPE_NORMAL
- en: We'll start this section with an introduction to the basic principles of functional
    programming and how its concepts are embedded in Kotlin. Then, we'll examine concurrency
    primitives in Kotlin, the most important being coroutines. Once we have a good
    grasp of both functional programming and coroutines, we'll then see how, by combining
    them, we can create concurrent data structures that allow us to finely control
    the flow of our data and the design patterns that allow us to better structure
    concurrent code.
  prefs: []
  type: TYPE_NORMAL
- en: 'This section comprises the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B17816_05_ePub.xhtml#_idTextAnchor144), *Introducing Functional
    Programming*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B17816_06_ePub.xhtml#_idTextAnchor164), *Threads and Coroutines*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B17816_07_ePub.xhtml#_idTextAnchor178), *Controlling the Data
    Flow*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B17816_08_ePub.xhtml#_idTextAnchor198), *Designing for Concurrency*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
