- en: '2'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Going through the Interview Process
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many candidates (or even employers) summarize iOS development as primarily “Swift”.
    But narrowing the iOS developer role to just a programming language is a very
    simplistic way of looking at it. An iOS developer (in fact, any developer) has
    a bundle of capabilities, even if we don’t feel that way. We must show knowledge
    not only in Swift but also in computer science. Some iOS development fundamentals
    are also essential, such as UIKit or Foundation.
  prefs: []
  type: TYPE_NORMAL
- en: Being an iOS developer doesn’t sum up to just coding skills. A senior iOS developer
    must design a robust app with a clean architecture, write unit tests, manage CI/CD
    processes, deploy beta/alpha versions, manage certificates, and provision profiles.
  prefs: []
  type: TYPE_NORMAL
- en: And what about some soft skills? Communication and time management are essentials
    in today’s dynamic market.
  prefs: []
  type: TYPE_NORMAL
- en: As we can tell from the pointers we just discussed, being an iOS developer means
    a bundle of capabilities, much, much more than Swift itself. The hiring process
    goal is to cover all of our abilities, from hard to soft skills.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will learn about the different stages of a standard iOS
    developer hiring process. By the end of the chapter, we will be in a position
    where the process will be familiar for us as if we were actually there!
  prefs: []
  type: TYPE_NORMAL
- en: 'To that end, we will cover the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the hiring process
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting ready for the screening interview
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All about the iOS technical interview
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cracking the coding interview
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing the architecture interview
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As I said, let’s begin with understanding how the hiring process works.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the hiring process
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the goals of the hiring process is to get a complete picture (as much
    as possible) of the candidate’s skills, both hard and soft.
  prefs: []
  type: TYPE_NORMAL
- en: Soft and hard skills
  prefs: []
  type: TYPE_NORMAL
- en: If you don’t remember what soft and hard skills are, **hard skills** are role-specific,
    such as iOS coding, GitHub knowledge, and more. **Soft skills** are skills that
    are relevant for many jobs. Communication and leadership are examples of soft
    skills. Refer to [*Chapter 1*](B18653_01.xhtml#_idTextAnchor014) for more information.
  prefs: []
  type: TYPE_NORMAL
- en: Think of our candidate picture as a giant puzzle.
  prefs: []
  type: TYPE_NORMAL
- en: When we start the hiring process, each stage puts together another piece of
    the puzzle, and the process helps our hiring manager see our skill set before
    they offer.
  prefs: []
  type: TYPE_NORMAL
- en: Each stage examines a different part of our picture as an iOS candidate and,
    like a knockout tournament, determines whether the newly revealed part of the
    picture is good enough to proceed to the next stage.
  prefs: []
  type: TYPE_NORMAL
- en: Learning the hiring funnel
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I mentioned a knockout tournament just to catch your eye. The reality is that
    the hiring process looks more like a funnel. Each stage of the funnel goes deeper
    and reveals more advanced skills.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an example of such a funnel:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.1 – A standard funnel](img/Figure_2.1_B18653.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.1 – A standard funnel
  prefs: []
  type: TYPE_NORMAL
- en: It is called a “funnel” because it gets narrowed as we move down and more candidates
    drop out.
  prefs: []
  type: TYPE_NORMAL
- en: But how does that funnel look in the specific workplace that we interview for?
  prefs: []
  type: TYPE_NORMAL
- en: Distinguishing between different companies
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The funnel we see in *Figure 2**.1* is just an example. Every company has a
    different hiring process, and there are no rules in this domain.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a couple of reasons for that difference:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Different roles** require different stages and different topics to check.
    The different role is not just a developer versus a designer, but also a developer
    versus a team lead.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Each company has its **own view** of how such a funnel should look. Some focus
    on personality, and others focus on coding. Each company has its own DNA (remember
    that in [*Chapter 1*](B18653_01.xhtml#_idTextAnchor014), we compared companies
    to humans), and therefore looks for a specific type of candidate. This candidate
    type can be quickly learned from looking at the hiring process. Look at the following
    two examples (*Figure 2**.2*):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 2.2 – Different funnels for different roles](img/Figure_2.2_B18653.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.2 – Different funnels for different roles
  prefs: []
  type: TYPE_NORMAL
- en: We can see that role **A** focuses heavily on coding skills while role **B**
    is more about design and architecture. It might be different roles (developer
    versus tech lead), but it can also show how the company or the team sees the developer
    position. In small companies or teams, the developer is much more central and
    has more responsibility. In this case, role **B** sounds more suitable for a startup
    company than a corporate one.
  prefs: []
  type: TYPE_NORMAL
- en: The last thing that can affect the funnel is the **product**. A front-facing
    product may require high UI skills. Focusing on screen design and UIKit/SwiftUI
    as part of the process sounds like a good idea.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, here’s another (free) tip: we saw in [*Chapter 1*](B18653_01.xhtml#_idTextAnchor014)
    that we can learn a lot about the team and the role just by looking at the job
    posting. Now, we can see that the hiring process can also teach us a lot about
    the job and the working place expectations.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let’s start our funnel journey with a short but essential interview: the
    screening interview.'
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready for the screening interview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In most cases, the first step in the hiring process won’t be an in-depth and
    advanced technical interview.
  prefs: []
  type: TYPE_NORMAL
- en: We succeeded in passing the resume scanning step and getting an interview, but
    at this stage, we are among many other candidates that also had that luck. Yet,
    with so many candidates, the workplace must filter as much as possible with minimal
    effort before it moves to the next stage. That’s what the screening interview
    is all about.
  prefs: []
  type: TYPE_NORMAL
- en: Think of the screening interview as an oversized, coarse filter in the hiring
    funnel that needs to handle a large number of candidates in a short time. It also
    means we have about 30 minutes to impress our interviewer to move down the funnel
    while answering several important questions.
  prefs: []
  type: TYPE_NORMAL
- en: What does the screening interview include?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most screening interviews revolve around three topics – the company, the candidate’s
    profile, and soft/hard skills.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s talk about the company
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Usually, the interviewer starts the interview with an **elevator pitch** about
    the company and its product. I want to clarify what an elevator pitch means because
    we will need it soon.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s imagine ourselves going up in an elevator with another person. We want
    to present an idea or even ourselves to that person, but we have around 30 seconds
    before the elevator’s destination. That short presentation is called an elevator
    pitch.
  prefs: []
  type: TYPE_NORMAL
- en: In a screening interview, there are two elevator pitches. The first is the interviewer
    talking about the company and its product. The second is ours, and we will discuss
    that soon.
  prefs: []
  type: TYPE_NORMAL
- en: 'The interviewer’s elevator pitch may last more than 30 seconds. What we need
    to do on our side is to listen carefully to the company and product description.
    Here are a few reasons:'
  prefs: []
  type: TYPE_NORMAL
- en: Remember we talked about making sure the workplace is suited for us in [*Chapter
    1*](B18653_01.xhtml#_idTextAnchor014)? Now is the time to **verify our assumptions**.
    In [*Chapter 1*](B18653_01.xhtml#_idTextAnchor014), we invested precious time
    in research. Now is the time to find out the truth. Is this the company we want
    to work at? Is the development team really at the size we were expecting? Do we
    hear something that bothers us? We should take advantage of that chance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “Is this going to be on the test?” Well, kind of. At the end of the screening
    interview, the interviewer will ask us if we have questions and will expect us
    to ask some. We will talk about this point, but we need to ensure we understand
    the interviewer’s pitch so that we can ask **relevant questions**. Asking questions
    that were answered in the pitch is not a good idea.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The interviewer’s pitch can help us **adjust our answers** to what the workplace
    is looking for. We need to use the additional and precious information we just
    got and leverage our offering as iOS developers.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: But the interviewer is not the only one that speaks in this conversation or
    has an elevator pitch – we are also a part of the interview!
  prefs: []
  type: TYPE_NORMAL
- en: Building our elevator pitch
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: At some point, the interviewer will say, “Please tell me about yourself.” That
    will be our turn to present our elevator pitch.
  prefs: []
  type: TYPE_NORMAL
- en: They say each of us needs to be a little bit of a salesperson, and it’s true.
    Even though our specialization is iOS development, we’ve got a significant lead,
    and we need to sell something – our skills and expertise as iOS developers.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, it is extremely important to **plan our elevator pitch ahead** and
    come to this moment fully prepared. It is recommended to write down our pitch,
    read it out loud, practice in front of a mirror, and even read it to a close friend.
    The interviewer needs to remember us. That’s how important it is!
  prefs: []
  type: TYPE_NORMAL
- en: What do we want the interviewer to remember about us?
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: So how do we build our pitch? First, we need to remember there’s no need to
    unfold our entire resume. The interviewer probably read it already. Even if they
    didn’t, listing our expertise in 40-50 seconds is ineffective.
  prefs: []
  type: TYPE_NORMAL
- en: 'We need to explain **why we fit the job**, and there are two simple pitch formulas:
    present, past, and future, and past, present, and future:'
  prefs: []
  type: TYPE_NORMAL
- en: With “present, past, and future,” we start by explaining our current role, move
    to our expertise, and then discuss why we think we are qualified for the job.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In “past, present, and future”, we start with our expertise, move to our current
    role, and finish by explaining why we are qualified for the job.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Both formulas are great – both have smart logic built in, and both will do the
    job. But we can tune our pitch better.
  prefs: []
  type: TYPE_NORMAL
- en: It may be a good idea to start our pitch with our current role if it’s somehow
    related to the job posting. However, if our past expertise is more related to
    the job requirements, we should start with our expertise and only then move to
    what we are doing now.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have a formula, we need to remember there’s a short time to present
    our profile. The right approach distills our expertise and current role to achievements
    and influence. We must market ourselves and not fill our interviewer with dry
    work history details.
  prefs: []
  type: TYPE_NORMAL
- en: In the “future” part, we need to include our expectations from the hiring process
    and job searching. Mixing our ambitions and workplace requirements will result
    in a significant “future” part.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try to spice things up with clickbait now that we have a formula.
  prefs: []
  type: TYPE_NORMAL
- en: Including clickbait
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: We are all likely familiar with the term “clickbait.” If you don’t know what
    it means, clickbait is text or a picture designed to **attract the listener**
    or the reader to consume more content. It’s a common practice in tweets, posts,
    and articles.
  prefs: []
  type: TYPE_NORMAL
- en: Yes, I know an elevator pitch is not a tweet or a post, but the human brain
    works the same. A clickbait/teaser creates a “curiosity gap” and exploits it.
    In our pitch, we need to do the same!
  prefs: []
  type: TYPE_NORMAL
- en: We aim to plant a piece of information that makes us unique and will drive the
    reviewer to drill down and listen for more. This piece of information will also
    help us be memorable.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are examples of some teasers:'
  prefs: []
  type: TYPE_NORMAL
- en: “I constantly speak at conferences”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “I have a side project on the app store with many active users”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “I’m a participant in two big open source projects”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Of course, it goes without saying that the teaser you plant needs to be accurate
    and reliable. Twisting the truth won’t look good when your reviewer starts to
    dig in.
  prefs: []
  type: TYPE_NORMAL
- en: What not to include in your pitch
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The answer to what *not* to include in your pitch may differ between countries
    and cultures. But I think it is best practice not to include personal beliefs,
    religion, and anything unrelated to being a great iOS developer. It can even hurt
    our chances of moving forward with the process.
  prefs: []
  type: TYPE_NORMAL
- en: Saying bad words about our previous workplaces is also not a good idea. It is
    better to say that even though we might have had issues and conflicts with a specific
    place in the past, we appreciate the time working there.
  prefs: []
  type: TYPE_NORMAL
- en: Remember that we should never act emotionally in these situations. Being smart
    is extremely important in job interviews.
  prefs: []
  type: TYPE_NORMAL
- en: Now let’s talk about some seriously thoughtful questions such as why we want
    to change jobs.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing for the “Why do you want to change jobs?” question
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If our elevator pitch follows one of the formulas I previously mentioned, it
    should also cover this question in the “future” section.
  prefs: []
  type: TYPE_NORMAL
- en: However, the interviewer can still question us about our motivation to change
    our current workplace. Maybe because they weren’t listening carefully, or because
    we had only 30-40 seconds, and it’s just not enough.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many reasons why a candidate would like to change their job. Here
    are some of them:'
  prefs: []
  type: TYPE_NORMAL
- en: I don’t like my company
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I want higher pay
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I’m looking for opportunities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I’m doing it personal reasons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I want flexibility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I got fired
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I don’t like the culture in my company
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I don’t get timely training and development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each one of these reasons is perfectly legit. But there are different ways we
    can present our reason to the interviewer.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take, for example, the reason *“I want* *higher pay.”*
  prefs: []
  type: TYPE_NORMAL
- en: 'We can just answer the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '*My current salary is too low, and my workplace won’t give me* *a raise.*'
  prefs: []
  type: TYPE_NORMAL
- en: Well, that doesn’t sound too good, does it? Not only does it sounds whiny, but
    it also may raise some eyebrows – perhaps there’s a reason why we didn’t get that
    raise.
  prefs: []
  type: TYPE_NORMAL
- en: 'On the other hand, we can send a different message:'
  prefs: []
  type: TYPE_NORMAL
- en: '*I like taking challenges, and getting rewards motivates me to work harder.
    For me, financial support works as a reward for my* *hard work.*'
  prefs: []
  type: TYPE_NORMAL
- en: It is better to tie up salary and motivation than salary and ego. It also gives
    depth to the statement, “I want higher pay.”
  prefs: []
  type: TYPE_NORMAL
- en: When we pick the right reason, we should consider how to formulate it with a
    positive attitude and tie it to a value the workplace requires.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing for the skills test
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'As I said, a screening interview is like a giant coarse filter. Besides expertise
    and personal expectations, there’s another criterion the interviewer may check
    us on: a skills test.'
  prefs: []
  type: TYPE_NORMAL
- en: The skills test is much narrower than the advanced process stages. Remember,
    the interviewer may not be our hiring manager or an iOS developer. In addition,
    we’ve got minimal time – after all, it’s just a screening interview.
  prefs: []
  type: TYPE_NORMAL
- en: Nevertheless, the skills test is an important part that we should be ready for,
    and we’ll start with discussing our soft skills.
  prefs: []
  type: TYPE_NORMAL
- en: Discovering the soft skills questions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The soft-skills test is tricky! No one will tell us, *“Ok, now we are going
    to check your soft skills."* Our soft skills are examined throughout the interview
    in various places. Our elevator pitch is one of those places where our soft skills
    might be shown, but not the only place.
  prefs: []
  type: TYPE_NORMAL
- en: If we were late for the interview, it might point to **bad time management**
    or personal maturity, and that’s one example. **Communication skills** may arise
    when talking about what it was like working as part of a team or remotely.
  prefs: []
  type: TYPE_NORMAL
- en: We should see every part or every side of the interview as part of the soft-skills
    test that we are tested on.
  prefs: []
  type: TYPE_NORMAL
- en: Soft skills are there even in the way we answer hard-skills questions. Remember
    those? Let’s talk about them for a second.
  prefs: []
  type: TYPE_NORMAL
- en: Answering hard skills questions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Unlike soft skills, the hard-skills test is much clearer. Not every screening
    interview contains hard skills, and it depends on the workplace we are interviewing
    for.
  prefs: []
  type: TYPE_NORMAL
- en: A hard-skills test may contain basic questions about Swift and UIKit. Their
    primary purpose is not to check our Swift programming skills level but to ensure
    we pass the minimum bar to continue the process.
  prefs: []
  type: TYPE_NORMAL
- en: We need to remember that the interviewer may not even be an iOS developer at
    this stage, and they may have a list of questions and answers.
  prefs: []
  type: TYPE_NORMAL
- en: 'A typical fundamental question might be:'
  prefs: []
  type: TYPE_NORMAL
- en: '*What is the difference between let* *and var?*'
  prefs: []
  type: TYPE_NORMAL
- en: The preceding question may look extremely basic to a standard iOS developer.
    Still, we must remember that the interviewer doesn’t know our **actual** experience
    and knowledge at this stage. An iOS developer or a recruiter can ask that question
    because an answer such as *“I don’t remember”* is a strong signal the candidate
    may have worrying gaps in their knowledge of the Swift language.
  prefs: []
  type: TYPE_NORMAL
- en: In screening interviews, there will probably be several multiple-choice questions
    so that non-developer interviewers can ask and analyze the answer.
  prefs: []
  type: TYPE_NORMAL
- en: '*Part 2, Swift Language and Coding* of this book discusses the Swift language,
    and meticulously reviewing its chapters will greatly prepare us for most screening
    interview questions.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For now, let’s move to another hidden soft skill in the interview: the ability
    to ask questions.'
  prefs: []
  type: TYPE_NORMAL
- en: Asking, “Do you have any questions for me?”
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The interviewer isn’t the only one who asks questions. We do too.
  prefs: []
  type: TYPE_NORMAL
- en: That won’t be the last time we ask our interviewer questions during the hiring
    process. In reality, asking the interviewer questions is another task in the screening
    interview and probably in all the other discussions.
  prefs: []
  type: TYPE_NORMAL
- en: In other words, the answer to “Do you have any questions for me?” is always,
    always “yes.” Answering “no” to that question will significantly reduce our chances
    of getting an offer at the end of the process, and I must say – rightfully. A
    candidate with no questions is considered uninterested in the workplace he is
    interviewing for.
  prefs: []
  type: TYPE_NORMAL
- en: Like any other stage, we should prepare. And in this case – with a pool of questions.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a pool of questions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Sure, we can just prepare a question before the interview. But what if the answer
    to that question is already covered during the talk? The trick is to prepare a
    list of questions, and that list will be great not only for the screening interview
    but for other interviews as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'Each different question shows another side of our personality. Sounds weird,
    right? Let’s look at some examples and how they work:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Can you tell me more about the day-to-day responsibilities of the role?* We
    show our desire to meet the employer’s expectations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*How could I impress you in the first three months?* This shows that we think
    of how to make a positive contribution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Are there opportunities for training and progression within the role/company?*
    We are serious about our career and are committed to the company’s future.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Where do you think the company is headed in the next five years?* We show
    interest in the company and a commitment to a long-term relationship.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Can you describe the working culture of the organization?* We show maturity
    and motivation to fit it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Can you tell me more about the team I would be working in?* We show interest
    in teamwork and communication.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do you want to pick the side you want to emphasize? Just select the right question
    – it’s like a restaurant menu! We can see that even a question (not an answer)
    can send a signal to the interviewer and leverage our chances.
  prefs: []
  type: TYPE_NORMAL
- en: Send a thank-you email
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: And here’s an excellent tip relevant to interviews and meetings and any meaningful
    communication we may have – sending a thank-you email right after the interview
    can have significant advantages if it’s done right.
  prefs: []
  type: TYPE_NORMAL
- en: Now, why send an email? Doesn’t the interviewer already have our email address
    and other communication methods? Aren’t we on his list?
  prefs: []
  type: TYPE_NORMAL
- en: So, we need to remember that the interviewer doesn’t look at us only as iOS
    developers but also as humans. Sending a thank-you email shows that we are a person
    that appreciates the interviewer’s time and has excellent manners.
  prefs: []
  type: TYPE_NORMAL
- en: 'But a thank-you email also provides two additional advantages: the ability
    to add more information we didn''t have the chance to show during the interview
    and our signature with important links we want them to see.'
  prefs: []
  type: TYPE_NORMAL
- en: Remember that a thank-you email is not just two words but more. But exactly
    how much more?
  prefs: []
  type: TYPE_NORMAL
- en: Learning what to write
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A thank-you email should be short and focused. Writing more than a couple of
    paragraphs is too much for an interviewer to digest – after all, we are talking
    about a screening interview.
  prefs: []
  type: TYPE_NORMAL
- en: The email should begin with expressing gratitude to the interviewer for their
    time and reiterating interest in the position. We then need to remind the interviewer
    of our qualifications for the role by **highlighting our expertise** **and skills**.
  prefs: []
  type: TYPE_NORMAL
- en: And now, for our signature, which should contain **links to our LinkedIn profile**
    and personal blogs we may have.
  prefs: []
  type: TYPE_NORMAL
- en: We need to consider our thank-you email as a personal stamp that should go along
    with you after you finish your screening interview. As long as it has been done
    with good taste, it impacts our chances to move with the process.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let’s prepare for the main dish: the iOS technical interview.'
  prefs: []
  type: TYPE_NORMAL
- en: All about the iOS technical interview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The term “technical interview” is too broad, in my opinion. Does it mean coding
    with Swift? Questions about UIKit? Design?
  prefs: []
  type: TYPE_NORMAL
- en: When we get an invitation for a technical interview, it mostly means that we
    are expected to show our general knowledge of iOS development.
  prefs: []
  type: TYPE_NORMAL
- en: No, it doesn’t mean that there won’t be any questions about design patterns
    or computer science, but we should come loaded with all our expertise about issues
    related to iOS in general.
  prefs: []
  type: TYPE_NORMAL
- en: In other words, expect everything in that interview!
  prefs: []
  type: TYPE_NORMAL
- en: What happens in that interview?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Even though anything can happen in an iOS technical interview, still, I think
    we can narrow it down to several options of how it can look.
  prefs: []
  type: TYPE_NORMAL
- en: Notice that interviewers mix some of those options and include them, so we should
    be prepared for any scenario.
  prefs: []
  type: TYPE_NORMAL
- en: One of these options is where the interviewer fires questions at us as if we’re
    on a firing range!
  prefs: []
  type: TYPE_NORMAL
- en: The questions range
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A “questions range” is probably the most common type of interview because it’s
    the simplest one. This type is simple for the interviewer and the candidate because
    there’s nothing easier than just asking short questions with clear answers.
  prefs: []
  type: TYPE_NORMAL
- en: We should think of this type as a driving theory exam – there is a vast pool
    of questions, and we need to verify that we know almost all their answers.
  prefs: []
  type: TYPE_NORMAL
- en: But we really need to ensure that we know what is **behind the answer** and
    not just memorize it. Because this type of test is very general, we are expected
    to answer questions we may not know very well and have never encountered.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few examples of such questions:'
  prefs: []
  type: TYPE_NORMAL
- en: '*“What is the UIKit View* *Controller lifecycle?”*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*“What’s the difference between GCD* *and NSOperationQueue?”*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*“Can you explain the difference between atomic and* *non-atomic properties?”*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will discuss interview questions starting from [*Chapter 4*](B18653_04.xhtml#_idTextAnchor097),
    which is another excellent resource for getting us ready for this part of the
    process.
  prefs: []
  type: TYPE_NORMAL
- en: Worked-on projects
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our expertise is part of our identity when we start the technical interview.
    What we know and what we did in our short (or long) working history is something
    that wraps up our job application. One of our interviewer’s goals is to understand
    **how the reality stands up to** **our story**.
  prefs: []
  type: TYPE_NORMAL
- en: Showing worked-on projects is a way for the interviewer to bridge that gap between
    our story and who we are. But bridging that gap is not only the interview’s goal
    – it is ours as well. We want them to see who we really are!
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, coming ready with projects we worked on in the past is an excellent
    idea for that kind of interview. Bringing our iPhone loaded with apps we worked
    on in the past can be significant. But even better, we can come with our MacBook
    filled with Xcode projects already launched.
  prefs: []
  type: TYPE_NORMAL
- en: And that leads me to my next point. One of the preparations we need to make
    before the interview is to go over what we did in the past so that our explanations
    will be fluent and convincing.
  prefs: []
  type: TYPE_NORMAL
- en: Picking one or two features that we were part of during their development and
    trying to explain their design while speaking out loud is excellent preparation
    that will put us in a great position for the interview.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, we don’t need to fake anything. We are great developers, and if we
    are proud of something we did, we just need to show it. Believe me, excitement
    is contagious.
  prefs: []
  type: TYPE_NORMAL
- en: Answering Swift and algorithm questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Swift is probably the primary tool that we have as iOS developers. But when
    developers say “Swift,” many think of something much broader than just a language.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this case, Swift is much more than “optional unwrapping”. Data structures,
    closures, and memory management are also part of Swift. And sometimes, Swift is
    just the infrastructure for something even more significant: design patterns and
    algorithms.'
  prefs: []
  type: TYPE_NORMAL
- en: In the iOS technical interview, questions can go from simple unwrapping up to
    recursive functions and delegation versus reactive programming debate. This huge
    spectrum makes this type of interview the most challenging part of the hiring
    process, professionally.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, we will cover many aspects of Swift relevant to interviews and
    explain why each one is important for our daily work and is part of an interview.
    Remember, Swift and algorithms are just the first floors. We’ve got more floors
    to the buildings, such as UIKit or SwiftUI.
  prefs: []
  type: TYPE_NORMAL
- en: Solving basic questions about UIKit and SwiftUI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Besides Foundation, UIKit and SwiftUI are the only frameworks that will certainly
    be part of a standard interview. The reason is apparent – UI is a major part of
    almost any iOS project we will be working on.
  prefs: []
  type: TYPE_NORMAL
- en: I didn’t just mention “standard interview” and “almost” for no reason. There
    are cases where UI doesn’t play a major role or even a minor role. For instance,
    an SDK where we don’t have UI features at all, or games where we have UI but we
    use SceneKit or Unity instead of UIKit or SwiftUI to build them.
  prefs: []
  type: TYPE_NORMAL
- en: But for most apps, learning UIKit or SwiftUI at a high level is mandatory. One
    drawback with many iOS developers today is that they know one framework very well
    (for example, SwiftUI) and don’t have any experience with the other (UIKit).
  prefs: []
  type: TYPE_NORMAL
- en: If that’s the status in our case, we need to gain experience in the other framework
    and explain that gap during the interview. Even a tiny amount of knowledge shows
    that we are not disconnected from reality and have a solid capability to fill
    any gaps in the information we may have.
  prefs: []
  type: TYPE_NORMAL
- en: Remember that many apps make use of both frameworks, so the ability to learn
    a new framework is crucial.
  prefs: []
  type: TYPE_NORMAL
- en: Mastering development tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If frameworks are the car our code rides in, Xcode is the tool we use to build
    and fix that car. And how can we be great iOS engineers without mastering our
    tools?
  prefs: []
  type: TYPE_NORMAL
- en: Mastering Xcode helps iOS developers debug, write more code efficiently, configure
    the environment and the project, profile the app, and move faster in their job.
  prefs: []
  type: TYPE_NORMAL
- en: I must admit, asking questions about Xcode is not as common as the other parts
    I mentioned. Perhaps Xcode is not seen as a core topic or essential. The thing
    about Xcode questions is that as rare as they are, failing in them is considered
    a red flag in the interviewer’s eyes. We just can’t afford to fail on a small
    topic that can devastate our progress.
  prefs: []
  type: TYPE_NORMAL
- en: Xcode is not just the IDE itself but also all the other tools such as the Instruments
    app, which is mandatory for every iOS developer, UI debugs, and more.
  prefs: []
  type: TYPE_NORMAL
- en: 'The technical interview tests the theory behind iOS development. Let’s now
    move to the practical part: the coding interview.'
  prefs: []
  type: TYPE_NORMAL
- en: Cracking the coding interview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We know how the world spins around – some people are great in interviews. They
    are great at preparing for tests, and they are strong interviewees. We know them
    from school or college, and they always get good grades. But theory doesn’t necessarily
    indicate success when it comes to practical tasks.
  prefs: []
  type: TYPE_NORMAL
- en: 'That’s why sometimes we have another stage in the process: the coding interview.'
  prefs: []
  type: TYPE_NORMAL
- en: The coding interview goal is to see how we handle **real-life situations** as
    closely as possible. In these tests, the results are not always what’s critical
    – the interviewer wants to see how we think, plan, write, and respond to changes
    and dilemmas.
  prefs: []
  type: TYPE_NORMAL
- en: Even though a coding interview can last 15-20 minutes, it can also be a home
    assessment that takes one or two days to complete. It sounds like a considerable
    effort not only from our side but also from the interviewer’s side!
  prefs: []
  type: TYPE_NORMAL
- en: That’s why most of the time, the coding interview stage will be after the technical
    interview. The hiring manager wants to make sure they put that extra effort for
    candidates who are deserving!
  prefs: []
  type: TYPE_NORMAL
- en: There are several ways a workplace can see our coding, which depends on the
    workplace itself and its culture. The industry is not aligned on what’s considered
    the best way to test a candidate because there’s a long debate about that. For
    example, a home assessment allows candidates to complete a coding test at their
    own pace in a comfortable environment, while a live coding test provides an opportunity
    for the company to observe the candidate’s problem-solving and communication skills
    in real time.
  prefs: []
  type: TYPE_NORMAL
- en: First, let’s go over the different methods. We’ll start with the live coding
    interview.
  prefs: []
  type: TYPE_NORMAL
- en: Live coding interview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The interviewer will give us a coding challenge in the live coding interview.
    It can be a class, an algorithm question, or even developing a small project.
  prefs: []
  type: TYPE_NORMAL
- en: The primary goal of live coding is to see our coding in action. The interviewer
    wants to see us write, plan, and think.
  prefs: []
  type: TYPE_NORMAL
- en: 'While it may be a stressful experience for some candidates, there are some
    things we can take advantage of in this situation, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: One advantage is the ability to show **how we think and deal with ongoing dilemmas**
    we may have in our tasks. The interviewer expects us to think out loud. Even if
    we are stuck, good thinking direction can provide us with winning points in the
    interview. That’s something we just can’t get in a non-live coding task.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The second advantage we may have is the ability to **ask questions during the
    exam** that can give us a hint of the solution.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As we can see, the best approach to a live coding test is to use it as an opportunity
    to fully showcase one’s knowledge and skills. Another option that takes a different
    direction is a home assessment.
  prefs: []
  type: TYPE_NORMAL
- en: Working on a home assessment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Live coding has its drawbacks – it’s stressful and time-consuming, which makes
    it also time-sensitive. As a result, it covers fewer topics and areas.
  prefs: []
  type: TYPE_NORMAL
- en: To cover more in the coding test, a standard option is to perform it asynchronously
    (yeah, just like opening a new background thread in Swift for heavy tasks).
  prefs: []
  type: TYPE_NORMAL
- en: A home assessment usefully covers basic subjects in iOS programming – design
    patterns, architecture, API calls, and some UI with a data source. We shouldn’t
    expect a complex task – the main goal of home assessment is to see how we handle
    and approach an entire project, how we separate code and responsibilities to classes
    and layers, conduct networking and UI, and in general, to see real task results
    as iOS developers.
  prefs: []
  type: TYPE_NORMAL
- en: Home assessments have clear advantages. They are cheap, as there is no need
    to spend the interviewer’s time. In fact, time is (almost) a non-factor. On the
    other hand, some workplaces don’t like home assessments as they don’t test our
    abilities to solve complex problems in a limited time. Also, home assessments
    don’t show how we think and face dilemmas during our work. To retrieve that information,
    the interviewer needs to question and go over the code with us, which makes the
    advantages I mentioned earlier much less significant.
  prefs: []
  type: TYPE_NORMAL
- en: But don’t worry! We’ll cover both live coding and home assessments in [*Chapter
    13*](B18653_13.xhtml#_idTextAnchor379)*.*
  prefs: []
  type: TYPE_NORMAL
- en: Up next, we’ve got the architecture interview for complex architecture problems.
  prefs: []
  type: TYPE_NORMAL
- en: Passing the architecture interview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The architecture interview aims to test complex architectural problems. One
    of its aspects is to see how we plan, approach a problem, and ask relevant questions.
    Unlike the coding interview, which handles simple or minor problems, the architecture
    interview requires us to have a broader point of view of how iOS apps are built.
    That’s one of the reasons why the interviewer will probably be a senior developer,
    a tech, or a team lead.
  prefs: []
  type: TYPE_NORMAL
- en: The interview covers design patterns, computer science principles, and architecture
    decisions. This is the interview where we get the chance to shine and show our
    best as iOS developers. We must lead the discussion, communicate our concerns,
    and present our thoughts.
  prefs: []
  type: TYPE_NORMAL
- en: We’ve got [*Chapter 11*](B18653_11.xhtml#_idTextAnchor329) and [*Chapter 12*](B18653_12.xhtml#_idTextAnchor360)
    covering **app architecture** and **design patterns** (we will also discuss the
    differences between them, don’t worry!).
  prefs: []
  type: TYPE_NORMAL
- en: In most hiring processes, the architecture interview is the last stage before
    we move forward to the HR interview and the offer.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Throughout this chapter, we’ve learned about the hiring process and its stages.
    We have dived deep into the screening interview, as it is the first interview
    in the process. We also discussed the other interviews – the technical, the coding,
    and the architectural interview.
  prefs: []
  type: TYPE_NORMAL
- en: 'The hiring process is much clearer now, isn’t it? But before we get into the
    interviews themselves, in the next chapter, let’s talk about the missing piece
    in our career-building process, which is something we all should have: a fantastic
    brand!'
  prefs: []
  type: TYPE_NORMAL
