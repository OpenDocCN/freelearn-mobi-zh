- en: Chapter 7. Deploying to Your Device
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章 部署到您的设备
- en: '*Don''t keep it all to yourself!*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*不要把所有东西都留给自己！*'
- en: '*Tools such as LiveCode can be used entirely for personal productivity applications,
    and it would more than pay for itself through the time that it would save every
    day. However, why not let the rest of the world benefit from your creations!*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*LiveCode等工具可以完全用于个人生产力应用，并且它每天可以节省大量时间，从而完全值得。然而，为什么不让大家都能从您的创作中受益呢！*'
- en: So far, we have created several little test rig apps and a few apps that are
    fleshed out. In all cases though, we've just tested the apps that are inside simulators
    or on your personal device. The time has come to get this app out to more people
    for beta testing at first, so that we can then upload it to different app stores.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经创建了几个小型的测试平台应用和一些内容较为丰富的应用。然而，在所有情况下，我们只是测试了位于模拟器或个人设备中的应用程序。现在是时候将这个应用推广给更多人进行初步的beta测试，以便我们随后可以将其上传到不同的应用商店。
- en: 'In this chapter, we will:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: Examine all the standalone application setting options related to the process
    of creating mobile apps
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查所有与创建移动应用程序过程相关的独立应用程序设置选项
- en: Create builds of an app so that it can be sent to beta testers
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建应用的构建版本以便发送给beta测试者
- en: Test service alternatives
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试服务替代方案
- en: Build the final distribution version of an app
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建应用的最终分发版本
- en: Review how to upload apps to iOS App Store, Google Play, Amazon Appstore, and
    Samsung Apps
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回顾如何将应用上传到iOS应用商店、Google Play、Amazon应用商店和三星应用商店
- en: Note
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: There are some stages that should be performed on Mac while creating iOS apps
    for App Store; all the iOS steps described here should be followed using Mac.
    The Android steps can be applied to Mac or Windows. Note that this chapter is
    more of a reference and not a hands-on walkthrough. When you have an app that
    is almost complete and ready for submission to app stores and if you get stuck
    at any point, hopefully, you will recall reading about the issue somewhere in
    this chapter!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在为App Store创建iOS应用时，有一些阶段应该在Mac上执行；这里描述的所有iOS步骤都应该使用Mac来遵循。Android步骤可以应用于Mac或Windows。请注意，本章更像是参考而不是实际操作指南。当您有一个几乎完成并准备提交给应用商店的应用程序，如果在任何点上遇到困难，希望您能回忆起在本章中某处阅读过关于该问题的内容！
- en: Standalone application settings
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 独立应用程序设置
- en: We have already tweaked the settings a few times by now, but we've only made
    the minimum amount of changes needed to test the app. There are a lot of options
    here that you need to fill before your app is ready for sale in an app store.
    We'll briefly go over the other standalone application sections and then go into
    more depth in the Android and iOS sections.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经调整了设置几次，但我们只做了测试应用所需的最小改动。这里有很多选项需要在您的应用准备在应用商店销售之前填写。我们将简要介绍其他独立应用程序部分，然后深入探讨Android和iOS部分。
- en: The General section
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**常规**部分'
- en: 'The **General** section of the standalone settings is primarily used to control
    the features of LiveCode that are to be included in a desktop standalone application.
    These options cannot be applied to mobile applications, but it is in the **General**
    section that you can set the name of the application file and the build folder:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 独立设置中的**常规**部分主要用于控制要包含在桌面独立应用程序中的LiveCode功能。这些选项不能应用于移动应用程序，但在**常规**部分中，您可以设置应用程序文件的名称和构建文件夹：
- en: '![The General section](img/image00292.jpeg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![常规部分](img/image00292.jpeg)'
- en: The Stacks section
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**堆栈**部分'
- en: The **Stacks** section will show you a list of the stacks that are already included
    in your project. This will of course include the current Mainstack and the stacks
    that have been added by plugins that you may have used earlier. As you can see,
    all the options are grayed out.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**堆栈**部分将显示您项目中已包含的堆栈列表。这当然包括当前的Mainstack以及您可能之前使用过的插件添加的堆栈。如您所见，所有选项都是灰色的。'
- en: The Copy Files section
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**复制文件**部分'
- en: 'The **Copy Files** section is used to add additional files and folders to be
    used by your app. These are read-only files; if you need changeable files, you
    could still include these files and then write copies of the files to the special
    `Documents` folder. Here is how the dialog box looks with folders of images and
    sounds. These folders are in the same folder as the LC app:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**复制文件**部分用于添加应用需要使用的额外文件和文件夹。这些是只读文件；如果您需要可更改的文件，您仍然可以包含这些文件，然后将文件的副本写入特殊的`Documents`文件夹。以下是包含图像和声音文件夹的对话框外观。这些文件夹与LC应用所在的文件夹相同：'
- en: '![The Copy Files section](img/image00293.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![复制文件部分](img/image00293.jpeg)'
- en: The iOS section
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iOS 部分
- en: The **Mac**, **Windows**, **Linux**, **Web**, and **Bug Reports** sections are
    not used while making iOS and Android apps, so now, we'll take a good look at
    the **iOS** section bit by bit…
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在制作 iOS 和 Android 应用时，**Mac**、**Windows**、**Linux**、**Web** 和 **错误报告** 部分不使用，所以现在，我们将逐步仔细查看
    **iOS** 部分…
- en: The Build for section
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建部分
- en: The **Build for** settings determine which iOS devices the app will work on
    and which minimum iOS version should be used. In deciding what to choose, some
    things are obvious and others, not so obvious. If you are making an app that really
    needs a large area of workspace, then it might not be too successful on an iPod
    or iPhone screen. If it's a small utility that is geared for use on a hand-held
    device, perhaps you don't need to have an iPad version. You are able to choose
    **iPod**, **iPhone**, and **iPad**, or just **iPod and iPhone**, and even just
    **iPad** from this section.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**构建部分** 设置确定应用将在哪些 iOS 设备上运行以及应使用哪个最低 iOS 版本。在决定选择什么时，有些事情很明显，而有些则不那么明显。如果你制作的应用确实需要一个大的工作区域，那么在
    iPod 或 iPhone 屏幕上可能不太成功。如果它是一个针对手持设备使用的轻量级工具，可能你不需要有一个 iPad 版本。你可以从本部分选择 **iPod**、**iPhone**
    和 **iPad**，或者只选择 **iPod 和 iPhone**，甚至只选择 **iPad**。'
- en: The minimum iOS version you choose may depend on the particular features that
    you have used previously. You don't want users to buy your app only to find that
    a certain feature doesn't work correctly under the older iOS version. You may
    need to set and keep some devices for testing to use old versions of the OS on,
    so that you can be sure that your setting is correct. Also, Xcode allows you to
    download various versions of Simulator, and in LiveCode, you can choose a specific
    version to test
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你选择的最低iOS版本可能取决于你之前使用的特定功能。你不想用户购买你的应用后，发现某些功能在较旧的iOS版本下无法正常工作。你可能需要设置并保留一些设备用于测试，以便在这些设备上使用旧版本的操作系统，从而确保你的设置是正确的。此外，Xcode
    允许你下载各种版本的模拟器，在 LiveCode 中，你可以选择特定的版本进行测试。
- en: You can always leave these options at lower values for now and make up your
    mind after you have heard how your beta testers get on with the app.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以始终将这些选项保留在较低值，在你听到你的测试者如何与该应用互动后，再做出决定。
- en: 'Here is the **Build for** area of the settings along with the menus you can
    choose from:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是设置中的 **构建部分** 以及你可以选择的菜单：
- en: '![The Build for section](img/image00294.jpeg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![构建部分](img/image00294.jpeg)'
- en: Basic application settings
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基本应用设置
- en: 'We have used some of these settings a few times already. Here is the full set
    of options:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经使用了一些这些设置几次。以下是完整的选项集：
- en: '**Display Name**: This is the name that will appear under the icon on the actual
    device'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示名称**：这是将在实际设备上的图标下显示的名称。'
- en: '**Version**: This is the version number that will appear in the iTunes description
    of the app'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版本**：这是将在应用的 iTunes 描述中出现的版本号。'
- en: '**Internal App ID**: This is the app ID that you can use in the iOS Developer
    portal while developing or distributing the provisioning profile'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内部应用 ID**：这是在开发或分发配置文件时可以在 iOS 开发者门户中使用的应用 ID。'
- en: '**Profile**: This is the provisioning profile that matches this app'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置文件**：这是与该应用匹配的配置文件。'
- en: '**Externals**: This is a set of optional external command files that you may
    have used in your app'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**外部命令文件**：这是一组你可能已在应用中使用过的可选外部命令文件。'
- en: You should try out different display names to see how it looks on different
    devices. There is a limit to how long the name can be before iOS truncates the
    name, placing ellipses in the middle of the text. For iPhone, the limit is roughly
    up to 11 or 12 characters.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该尝试不同的显示名称，看看它在不同设备上的外观如何。iOS 会截断名称长度，在文本中间放置省略号，名称长度有一个限制。对于 iPhone，这个限制大约是
    11 或 12 个字符。
- en: It's important to make sure that an update to an app that you submit has a version
    number that is later than the version number of the existing app. Starting with
    1.0.0 makes sense; just remember to increase the number when you do updates. Don't
    worry if you forget, you'll find that the upload process to the App Store fails!
    App stores in general require that the update be of a later version than the one
    that is being replaced.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你提交的应用更新版本号晚于现有应用的版本号很重要。从 1.0.0 开始是有意义的；只是记得在更新时增加数字。如果你忘记了，你会在上传到 App Store
    的过程中发现失败！一般来说，应用商店要求更新版本晚于被替换的版本。
- en: For development purposes, you can use a provisioning profile that uses an internal
    app ID that contains a wildcard. When you do submit an app to iOS App Store, make
    sure that the provisioning profile is a Distribution one and that the App ID it
    uses exactly matches the **Internal App ID**. Also, make sure that the ID is different
    than any other app that you have in the store. Note that the ID, as shown in your
    developer account page, will show extra digits at its start, for example, `31415926.com.yourname.yourappname`.
    The matching **Internal App ID** would be `com.yourname.yourappname`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发目的上，您可以使用包含通配符的内部应用程序ID的配置文件。当您提交应用程序到iOS应用商店时，请确保配置文件是分发配置文件，并且它使用的App ID与**内部App
    ID**完全匹配。同时，请确保ID与商店中的任何其他应用程序都不同。请注意，ID，如您的开发者账户页面所示，在其开头将显示额外的数字，例如，`31415926.com.yourname.yourappname`。匹配的**内部App
    ID**将是`com.yourname.yourappname`。
- en: 'In this example screenshot, a development provisioning file was chosen and
    no external commands were used:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例截图中，选择了开发配置文件，并且没有使用外部命令：
- en: '![Basic application settings](img/image00295.jpeg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![基本应用程序设置](img/image00295.jpeg)'
- en: Icons
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图标
- en: You are able to select a different icon for each device type that iOS and iTunes
    requires. The Icons section is straightforward; you click on the **…** button
    and choose the file from your filesystem. It would be possible for LiveCode to
    take one large image and create the various sizes for you, but there isn't an
    option for that! For what it's worth, you may have reasons to show a different
    icon for each case. For example, you could make an icon for Retina displays that
    had more detail in them than a non-Retina display. As you don't have a choice,
    just enjoy the flexibility this gives you!
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以为iOS和iTunes要求的每种设备类型选择不同的图标。图标部分很简单；您点击**…**按钮，然后从您的文件系统中选择文件。LiveCode可以为您创建各种尺寸的图标，但这并不是一个选项！就其价值而言，您可能有自己的理由为每种情况显示不同的图标。例如，您可以为Retina显示屏创建一个图标，其中包含比非Retina显示屏更多的细节。既然您没有选择，那就享受这种灵活性带来的便利吧！
- en: 'Note the **Prerendered Icon** checkbox in the following screenshot. Here, you
    have a choice of creating an icon exactly as it should appear on devices. Also,
    you could produce a square icon with no shading and leave the system to make it
    look like a button with a highlight effect. Take a look at the various apps on
    your own devices; you will find that some people were happy to use Apple''s beveled
    highlighted appearance and others preferred to do their own thing. The **Prerendered
    Icon** feature allows you to do your own thing. In this screenshot, you can see
    that icons for all the types of devices that have been selected, even iPad Retina,
    and they are prerendered:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 注意以下截图中的**预渲染图标**复选框。在这里，您可以选择创建一个与设备上显示的图标完全相同的图标。您还可以创建一个没有阴影的方形图标，让系统通过高亮效果使其看起来像按钮。看看您自己的设备上的各种应用；您会发现有些人乐于使用苹果的斜面高亮外观，而有些人则更喜欢自己动手。**预渲染图标**功能允许您自己动手。在这个截图中，您可以看到所有已选择的设备类型的图标，包括iPad
    Retina，并且它们是预渲染的：
- en: '![Icons](img/image00296.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图标](img/image00296.jpeg)'
- en: In this case, the `icons/` folder is in the same folder as the app, so you don't
    need to include the full path. An entry of `icons/` is also included in the **Copy
    File** section.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`icons/`文件夹与应用程序在同一文件夹中，因此您不需要包含完整路径。`icons/`条目也包含在**复制文件**部分中。
- en: 'A good reference for Apple icon and image sizes for iOS 7+ is available at:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果iOS 7+图标和图像尺寸的良好参考资料可在以下网址找到：
- en: '[https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html](https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html](https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html)'
- en: This chart does not include the old sizes 57 and 72 for the older iPhones and
    iPads.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 此图表不包括旧尺寸57和72，这些尺寸适用于较旧的iPhone和iPad。
- en: Icon tools
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图标工具
- en: There are plenty of tools that will help you create all the icon sizes available
    in the Mac App Store. When I last checked, there were about 40 icons resulting
    from a search for `icon ios`. One free tool that I have used is **Icon Set Creator**,
    which is available at
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多工具可以帮助您创建Mac应用商店中所有可用的图标尺寸。在我最后一次检查时，搜索`icon ios`的结果大约有40个图标。我使用的一个免费工具是**Icon
    Set Creator**，它可在以下网址找到
- en: '[https://itunes.apple.com/us/app/icon-set-creator/id939343785?mt=12](https://itunes.apple.com/us/app/icon-set-creator/id939343785?mt=12)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://itunes.apple.com/us/app/icon-set-creator/id939343785?mt=12](https://itunes.apple.com/us/app/icon-set-creator/id939343785?mt=12)'
- en: Splash screens
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动画面
- en: Since the very first iPhone, iOS has had the ability to load and show a splash
    screen immediately when a user touches an app icon. This gives them something
    to look at while the app loads. All that was needed in those days was a default
    image and a name `Default.png`. When iPad came along, there became a need for
    more splash screens. At the very least, you needed a higher resolution default
    image, but you also needed custom images for landscape, as far as having different
    landscape images depending on whether the home button is to the left or right.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 从第一代iPhone开始，iOS就有在用户触摸应用图标时立即加载并显示启动画面的能力。这让他们在应用加载时有所观看。那些日子里只需要一个默认图像和一个名为`Default.png`的名称。当iPad出现时，就需要更多的启动画面。至少，您需要一个更高分辨率的默认图像，但您还需要为横向设置自定义图像，根据主页按钮是在左侧还是右侧，可能需要不同的横向图像。
- en: LiveCode doesn't give us access to that level of flexibility, but it is extremely
    rare that an app would need a different landscape for two variations; you can
    generally get by with just a single one. The same for the upside-down portrait
    variation, the regular default portrait image can be used for that too.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: LiveCode不提供访问该级别的灵活性，但一个应用需要两种变体有不同的横向是非常罕见的；通常只需要一个即可。对于颠倒的纵向变体，常规的默认纵向图像也可以使用。
- en: The Retina displays have their own entries for setting the splash screen, and
    by convention, these files would have names that include `@2x`.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Retina显示屏有自己设置启动画面的条目，并且按照惯例，这些文件名将包含`@2x`。
- en: 'Which of the splash screen options that are enabled is dependent on the orientation
    options described in the following section. In this screenshot, the **Lscape**
    options are grayed out because the app is set as **Portrait**. Here, the correct
    size **Lscape** image files were selected as well, for your reference:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 启动画面的哪些选项被启用取决于下一节中描述的朝向选项。在此屏幕截图中，**横向**选项被灰色显示，因为应用被设置为**纵向**。在此处，还选定了正确的尺寸**横向**图像文件，供您参考：
- en: '![Splash screens](img/image00297.jpeg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![启动画面](img/image00297.jpeg)'
- en: You may notice that there isn't an iPhone portrait or landscape option here.
    That's because the `Default.png` is used for both. If your app is landscape only,
    then design the splash screen as landscape, but rotate the image 90 degrees clockwise
    to create a 320 x 480 or 640 x 960 `Default.png` or `Default@2x.png` image. One
    important entry in the list is the **4 inch iPhone** entry that is used for iPhone
    5\. The `Default.png` file name is not used here since image file names can be
    anything as long as no spaces are included.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会注意到这里没有iPhone的纵向或横向选项。这是因为`Default.png`同时用于这两种情况。如果您的应用仅支持横向，那么请设计为横向的启动画面，但将图像顺时针旋转90度以创建320
    x 480或640 x 960的`Default.png`或`Default@2x.png`图像。列表中的一个重要条目是用于iPhone 5的**4英寸iPhone**条目。这里不使用`Default.png`文件名，因为只要不包含空格，图像文件名可以是任何名称。
- en: Orientation options
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 朝向选项
- en: 'As discussed previously, you are able to specify the orientations supported
    by your app. If the app is used just for iPod and iPhone, then you can set only
    the initial orientation. The choices are **Portrait**, **Portrait Upside-Down**,
    **Landscape Left**, and **Landscape Right**. If the app is used on iPad, then
    you can also set the orientations that support the app while it is in use. The
    selections you make will affect which icons can be imported. The orientations
    are all set with just one drop-down menu and four checkboxes:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，您可以为您的应用指定支持的朝向。如果应用仅用于iPod和iPhone，那么您只能设置初始朝向。选项包括**纵向**、**颠倒纵向**、**横向左**和**横向右**。如果应用在iPad上使用，那么您还可以设置应用使用时支持的朝向。您所做的选择将影响哪些图标可以被导入。所有朝向都通过一个下拉菜单和四个复选框来设置：
- en: '![Orientation options](img/image00298.jpeg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![朝向选项](img/image00298.jpeg)'
- en: The Custom URL scheme
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自定义URL方案
- en: Sometimes while using an iOS device, you will touch a URL in a web page and
    suddenly, you will find yourself in Mail or looking at a page in the App Store.
    This is achieved using a custom URL scheme. In the case of the App Store, links
    begin with `itms-apps://` and from that iOS knows that the link should be opened
    in the App Store app. You can do the same thing with your app. By setting a similar
    custom string, you can get iOS to open your app when the user touches a link that
    starts with the same string in the URL. Further information can be found in the
    lesson given at [http://lessons.runrev.com/m/4069/l/58672-using-custom-url-schemes](http://lessons.runrev.com/m/4069/l/58672-using-custom-url-schemes).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候在使用iOS设备时，你会在网页中触摸一个URL，突然你会发现自己在邮件中或查看App Store中的页面。这是通过自定义URL方案实现的。在App
    Store的情况下，链接以`itms-apps://`开头，iOS知道该链接应该在App Store应用中打开。你可以用你的应用做同样的事情。通过设置类似的自定义字符串，你可以让iOS在用户触摸URL中以相同字符串开头的链接时打开你的应用。更多信息可以在[http://lessons.runrev.com/m/4069/l/58672-using-custom-url-schemes](http://lessons.runrev.com/m/4069/l/58672-using-custom-url-schemes)的教程中找到。
- en: 'The value of the string is entered with a simple text input field, shown as
    follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串的值通过一个简单的文本输入字段输入，如下所示：
- en: '![The Custom URL scheme](img/image00299.jpeg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![自定义URL方案](img/image00299.jpeg)'
- en: Requirements and restrictions
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 要求和限制
- en: 'Earlier, we talked about how setting the device, processor instruction set,
    and iOS version is one way to make sure that your users are able to use the features
    in your app. The **Requirements and Restrictions** options let you specify in
    great detail the abilities your device should have. At the very least, if you
    have an app that involves taking photographs, then having a camera in the device
    is necessary! If it''s a video chat app, then having a front camera in your device
    would make sense. The reminders app that we made in the previous chapter should
    have its **Location Services** option selected to make sure that the sort by distance
    feature works. The following is the full list of requirements and restrictions:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，我们讨论了如何设置设备、处理器指令集和iOS版本，这是确保用户能够使用你应用中的功能的一种方法。**要求和限制**选项让你可以非常详细地指定你的设备应该具备的能力。至少，如果你有一个涉及拍照的应用，那么设备中有一个摄像头是必要的！如果是一个视频聊天应用，那么设备中有一个前置摄像头是有意义的。我们在上一章中制作的通知应用应该选择**位置服务**选项，以确保按距离排序的功能正常工作。以下是需要设置的要求和限制的完整列表：
- en: '![Requirements and restrictions](img/image00300.jpeg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![要求和限制](img/image00300.jpeg)'
- en: A status bar
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 状态栏
- en: 'The last option in the iOS settings controls whether the status bar should
    be visible or not and whether it should have the default status bar appearance
    or a black appearance. For a black appearance, you can set whether it should be
    opaque or translucent:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: iOS设置中的最后一个选项控制状态栏是否可见以及它应该具有默认状态栏外观还是黑色外观。对于黑色外观，你可以设置它应该是完全不透明的还是半透明的：
- en: '![A status bar](img/image00301.jpeg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![状态栏](img/image00301.jpeg)'
- en: Android
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android
- en: As you'll see, the number of options to be set for Android are less than that
    for iOS. This isn't so much because Android is simpler, but because LiveCode exposes
    virtually all of the possible settings for iOS, including a lot that you will
    most likely not need. iOS also has the splash screen variations that are not available
    in Android.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，需要为Android设置的选择项比iOS少。这并不是因为Android更简单，而是因为LiveCode几乎暴露了iOS的所有可能设置，包括你很可能不需要的大量设置。iOS还有Android中没有的启动画面变化。
- en: 'In the Android world, there are some settings that you are required to set,
    in particular, the **Permissions** settings. iOS does ask the user for permission
    to use some features, but not until the time your app invokes that feature. You
    must have seen dialog boxes that ask: **Fancy App wants to know your location**.
    Android on the other hand asks for permission to use these features at the time
    the app is installed.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android世界中，有一些设置是你必须设置的，特别是**权限**设置。iOS确实会要求用户在使用某些功能时给予权限，但不是在你应用调用该功能时。你可能见过要求“**Fancy
    App想要知道你的位置**”的对话框。另一方面，Android会在应用安装时请求使用这些功能的权限。
- en: Let's look at the options for Android…
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看Android的选项...
- en: Basic application settings
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基本应用设置
- en: Several of the iOS options are given a different name in the Android OS. Instead
    of **Display Name**, **Label** is used, **Internal App ID** is called **Identifier**,
    and there isn't a provisioning file, but there is a **Signing Key** used in Android.
    Essentially though, they are the same options as in iOS.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android OS中，一些iOS选项被赋予了不同的名称。而不是**显示名称**，使用**标签**，**内部应用ID**被称为**标识符**，并且没有配置文件，但在Android中有一个**签名密钥**。本质上，它们与iOS中的选项相同。
- en: The **Icon** is set as part of the basic settings because only one icon is needed,
    so we don't need a set of options. For this one icon, you would have to select
    a 512 x 512 sized version of the image and LiveCode will make the other sizes
    for you.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**图标**被设置为基本设置的一部分，因为只需要一个图标，所以我们不需要一组选项。对于这个图标，您需要选择一个512 x 512像素大小的图像版本，LiveCode会为您生成其他尺寸。'
- en: Android apps don't have a splash screen like iOS, but LiveCode can be given
    a splash screen that it will show as the first screen that the user sees after
    the app loads.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Android应用没有像iOS那样的启动画面，但LiveCode可以提供一个启动画面，它将在应用加载后用户看到的第一个屏幕上显示。
- en: You are able to set the location where the app will be installed with choices
    of **Internal Storage Only**, **Allow External Storage**, and **Prefer External
    Storage**. The external storage being referred to is the SD memory that most Android
    devices have. Android users either don't care where the app is installed or they
    are fanatical about it being stored in the SD memory! You could select **Allow
    External** **Storage** and expect a lot of people to do the same or you could
    choose **Prefer External Storage** knowing that only a minority would change the
    option to force the installation to be in the internal memory. Overall, you upset
    less people by using the prefer external storage setting.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择应用安装的位置，有**仅内部存储**、**允许外部存储**和**优先外部存储**的选项。这里所指的外部存储是指大多数Android设备都有的SD内存。Android用户要么不在乎应用安装在哪里，要么非常执着于将其存储在SD内存中！您可以选择**允许外部存储**并预期很多人会这样做，或者您可以选择**优先外部存储**，知道只有少数人会更改选项以强制安装到内部存储。总的来说，使用优先外部存储设置可以减少对人们的困扰。
- en: In-app purchasing and push notifications are handled in a different way in Android
    than they are in iOS. If you wish to use in-app purchasing, take a look at the
    RunRev online lessons and also the `developer.android.com` information. Lessons
    for Apple, Google, Amazon and Samsung are located at [http://lessons.runrev.com/m/4069](http://lessons.runrev.com/m/4069).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android中，应用内购买和推送通知的处理方式与iOS不同。如果您想使用应用内购买，请查看RunRev在线课程以及`developer.android.com`上的信息。苹果、谷歌、亚马逊和三星的课程位于[http://lessons.runrev.com/m/4069](http://lessons.runrev.com/m/4069)。
- en: 'The Android developer information on in-app billing can be found at:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 关于应用内计费的开发者信息可以在以下链接找到：
- en: '[http://developer.android.com/guide/market/billing/billing_overview.html](http://developer.android.com/guide/market/billing/billing_overview.html)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://developer.android.com/guide/market/billing/billing_overview.html](http://developer.android.com/guide/market/billing/billing_overview.html)'
- en: As with iOS, an Android OS can be given external commands and it also has the
    custom URL scheme. One feature that is not found in iOS is the ability to set
    an icon to be used in the task bar.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 与iOS一样，Android OS可以接收外部命令，并且也有自定义URL方案。iOS中没有的一个功能是能够设置用于任务栏的图标。
- en: 'Here is how the basic **Application Settings** options are presented:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是如何展示基本**应用设置**选项的：
- en: '![Basic application settings](img/image00302.jpeg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![基本应用设置](img/image00302.jpeg)'
- en: Requirements and restrictions
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 需求和限制
- en: Within this set of options, you can set the **Minimum Android OS** version and
    set the hardware features that are required. The columns of radio buttons are
    named differently in iOS. Instead of stating that a feature is required or prohibited,
    the buttons state whether the feature is required or used. This becomes information
    that the Android user is able to read and may play a part in whether they choose
    to buy your app or not. So, try to select any that can be applied to your app.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个选项集中，您可以设置**最低Android操作系统**版本，并设置所需的硬件功能。在iOS中，单选按钮的列有不同的名称。而不是声明一个功能是必需的或禁止的，按钮会说明该功能是必需的还是使用的。这成为Android用户能够阅读的信息，并且可能在他们是否选择购买您的应用中发挥作用。因此，尽量选择适用于您应用的任何选项。
- en: '![Requirements and restrictions](img/image00303.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![需求和限制](img/image00303.jpeg)'
- en: Application permissions
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用权限
- en: When an iOS app makes use of certain features, such as your location, there
    is an alert dialog box that appears when the feature is first used. With Android,
    any such features are listed during the installation of the app and the user gives
    permission for all the features in one go.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 当 iOS 应用使用某些功能，例如你的位置时，首次使用该功能时会弹出一个警告对话框。在 Android 上，任何此类功能都会在应用安装过程中列出，并且用户一次性授予所有功能的权限。
- en: 'Here is the list of permissions you can choose from:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是你可以选择的权限列表：
- en: '![Application permissions](img/image00304.jpeg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![应用权限](img/image00304.jpeg)'
- en: User interface options
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用户界面选项
- en: '**User** **Interface Options** perform the same function as the orientation
    and status bar options in iOS. If you are submitting an iPad app that is landscape,
    you have to support both variations of landscape. The Android app stores don''t
    have the same requirement, so the options are much simpler. You only have to choose
    whether the initial orientation should be **Portrait** or **Landscape** and whether
    the status bar should be **Visible** or **Hidden**:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**用户** **界面** **选项** 执行与 iOS 中的方向和状态栏选项相同的功能。如果你正在提交一个横屏的 iPad 应用，你必须支持两种横屏变体。Android
    应用商店没有这样的要求，因此选项要简单得多。你只需选择初始方向应该是 **纵向** 还是 **横向**，以及状态栏应该是 **可见** 还是 **隐藏**：'
- en: '![User interface options](img/image00305.jpeg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![用户界面选项](img/image00305.jpeg)'
- en: Building Apps for Beta Testers
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 Beta 测试者构建应用
- en: You may have given test builds to friends and colleagues all the way through
    the process of developing your app, but even if you haven't, it becomes more important
    to do so as you get closer to the time when you have to upload the app to the
    app stores. Beta testers can tell you about technical and nontechnical issues.
    Are there any typos in the Credits? Does the icon look good? Were there any strange
    aspects to the installation experience? And of course, does the app do what it's
    supposed to do on the numerous devices and OSes?
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能在整个开发过程中已经将测试版本发送给了朋友和同事，但即使你没有，随着你接近必须上传应用到应用商店的时间，这样做变得更加重要。Beta 测试者可以告诉你关于技术和非技术问题。信用部分有错别字吗？图标看起来好吗？安装体验中有任何奇怪的地方吗？当然，应用在众多设备和操作系统上是否按预期工作？
- en: The process of making an app to send it to a tester is different on Android
    than on iOS. In fact, it's incredibly easy on Android! Let's look at that first.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 将应用制作并发送给测试者的过程在 Android 和 iOS 上有所不同。实际上，在 Android 上做这件事非常简单！让我们首先看看 Android
    的做法。
- en: Sending an Android app to testers
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 Android 应用发送给测试者
- en: When click on the **Save as Standalone Application…** option for Android, you
    create an *APK* file. You could e-mail this file to your testers and they could
    do what is called a "side load" of the file on their device. In [Chapter 2](part0026.xhtml#aid-OPEK1
    "Chapter 2. Getting Started with LiveCode Mobile"), *Getting Started with LiveCode
    Mobile*, we saw how tricky it can be to connect an Android device for testing
    and it could well be beyond the technical abilities of some of your testers.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击 Android 的 **另存为独立应用程序…** 选项时，你会创建一个 *APK* 文件。你可以通过电子邮件将此文件发送给你的测试者，他们可以在他们的设备上执行所谓的“侧载”操作。在
    [第 2 章](part0026.xhtml#aid-OPEK1 "第 2 章。LiveCode 移动入门") 中，我们看到了如何连接 Android 设备进行测试可能会多么棘手，这可能会超出一些测试者的技术能力。
- en: Fortunately, there is a much simpler approach to do this. Take the APK file
    and put it online somewhere. It can be on a Dropbox shared location, Google Drive,
    or perhaps just a server at your office. Whatever it takes for you to get to the
    point where you have a URL that has a link to the file. Now e-mail that URL to
    your testers to an e-mail address that they can read on their devices. Then, it
    only takes a single touch of the link in the e-mail for you to start the download
    and installation of your app.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，有一个更简单的方法来做这件事。将 APK 文件上传到某个地方。它可以是 Dropbox 共享位置、Google Drive，或者可能是你办公室的服务器。无论你需要做什么，只要你能得到一个包含文件链接的
    URL。现在，将这个 URL 通过电子邮件发送给你的测试者，确保他们可以在他们的设备上阅读。然后，只需点击电子邮件中的链接一次，你就可以开始下载和安装你的应用。
- en: There is a Development section in the Android device settings that the testers
    may need to visit to enable the feature that allows apps to be installed in this
    way, but it's very easy to make this change.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Android 设备设置中有一个开发部分，测试者可能需要访问以启用允许以这种方式安装应用的特性，但进行此更改非常简单。
- en: Preparing an iOS app so that it can work on someone else's device
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备 iOS 应用以便在他人设备上运行
- en: Things are not quite as straightforward for iOS! First thing you need to do
    is add the unique device ID (UDID) for each of your beta testers' devices to your
    iOS developer account. Your testers can get that number by connecting the device
    to their computer and viewing its Info in iTunes. When you're looking at the **Summary**
    section, you will see the serial number for the respective device. Clicking on
    that number will make it change to a longer number, the UDID that will be needed.
    Once that number is displayed, you can use a keyboard shortcut to copy the number
    to the clipboard (*command* + *C* on Mac and *Ctrl* + *C* on Windows). Have your
    testers perform these actions and then paste the number in an e-mail to you. You
    must make sure that you get the number right because it will use up one of your
    100 allocated devices of your iOS developer account.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 对于iOS来说，事情并不那么简单！首先，您需要为每位测试者的设备添加唯一的设备ID（UDID）到您的iOS开发者账户中。您的测试者可以通过将设备连接到他们的电脑并在iTunes中查看其信息来获取该数字。当您查看**摘要**部分时，您将看到相应设备的序列号。点击该数字将使其变为一个更长的数字，即所需的UDID。一旦该数字显示出来，您可以使用键盘快捷键将其复制到剪贴板（Mac上的*command*
    + *C*，Windows上的*Ctrl* + *C*）。让您的测试者执行这些操作，然后将数字粘贴到发给您的电子邮件中。您必须确保获取正确的数字，因为它将消耗您iOS开发者账户中分配的100个设备中的一个。
- en: 'Go to [https://developer.apple.com/account/ios/device/deviceList.action](https://developer.apple.com/account/ios/device/deviceList.action)
    in order to add the devices to your account. Click on the **+** button just below
    the place where your name appears and you will be able to add the devices to your
    account:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 前往[https://developer.apple.com/account/ios/device/deviceList.action](https://developer.apple.com/account/ios/device/deviceList.action)以将设备添加到您的账户中。点击您姓名下方位置的正下方的**+**按钮，您就可以将设备添加到您的账户中：
- en: '![Preparing an iOS app so that it can work on someone else''s device](img/image00306.jpeg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![准备iOS应用以便在他人设备上运行](img/image00306.jpeg)'
- en: 'Next, go to the **Provisioning Profiles** section and either create a new **Development**
    profile or select an existing one and click on the **Edit** button. After selecting
    an App ID and a signing certificate, you will then see a list of the devices associated
    with your account. You can enable any combination of devices you want to work
    with this provisioning profile. In this screenshot, you''ll see that the pool
    of test devices is very short:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，转到**配置文件**部分，创建一个新的**开发**配置文件或选择一个现有的配置文件并点击**编辑**按钮。在选择了App ID和签名证书后，您将看到与您的账户关联的设备列表。您可以选择任何组合的设备与该配置文件一起使用。在这个屏幕截图中，您会看到测试设备池非常短：
- en: '![Preparing an iOS app so that it can work on someone else''s device](img/image00307.jpeg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![准备iOS应用以便在他人设备上运行](img/image00307.jpeg)'
- en: Click on the **Generate** button and after a few moments, you will be able to
    click on the **Download** button to download the file.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**生成**按钮，几分钟后，您将能够点击**下载**按钮来下载文件。
- en: Download the new profile and add it to Xcode (just double click on the downloaded
    file). Open your app's Mainstack in LiveCode, go to **Standalone Application Settings…**/**iOS**,
    and make sure that the provisioning profile is selected from the **Profile** menu.
    Click on the **Save as Standalone Application…** option again to make sure that
    the new devices are known by the app.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 下载新的配置文件并将其添加到Xcode中（双击下载的文件）。在LiveCode中打开您的应用的主栈，转到**独立应用程序设置…**/**iOS**，并确保从**配置文件**菜单中选择配置文件。再次点击**另存为独立应用程序…**选项，以确保新设备被应用所识别。
- en: By now, you will have an "APP" file, which is the iOS equivalent of the "APK"
    file for Android. As with Android, you could e-mail this file to your testers
    along with the provisioning file and have the testers "side load" it onto their
    devices. In this instance, that's not such a difficult task because the tester
    can use iTunes to do the same. If you do go down that route, have your testers
    drag the "APP" and provisioning files onto the **Library** in iTunes, connect
    the device, view the **Apps** tab, make sure that the new app is selected, and
    perform a **Sync**. However, it is possible to make things a lot easier for your
    users, as easy as they were for Android users.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止，您将有一个“APP”文件，这是iOS对Android的“APK”文件的等价物。与Android一样，您可以随附此文件和配置文件通过电子邮件发送给您的测试者，并让测试者将它们“侧载”到他们的设备上。在这种情况下，这并不是一个很难的任务，因为测试者可以使用iTunes来完成同样的操作。如果您选择这条路，让您的测试者将“APP”和配置文件拖放到iTunes的**库**中，连接设备，查看**应用**标签页，确保新应用被选中，然后执行**同步**。然而，您可以大大简化用户的使用，就像Android用户一样简单。
- en: Using "over the air" installers for iOS
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用iOS的"over the air"安装程序
- en: Since iOS 4.0, it has been possible for us to install an app from a link in
    a web page. Creating the file structure for this to work is a bit tricky though,
    but fortunately, there are at least a couple of tools you can buy to make things
    easy for you.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 自从iOS 4.0以来，我们就可以从网页中的链接安装应用程序了。不过，创建使其工作的文件结构有点棘手，但幸运的是，至少有几种工具你可以购买来简化这个过程。
- en: AirLaunch
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AirLaunch
- en: 'HyperActive Software has made a LiveCode plugin that can take your "APP" file
    and make the file structure needed for the "over the air" installation to work.
    There is just a single dialog box that you need to fill the required information
    in:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: HyperActive Software开发了一个LiveCode插件，可以将你的"APP"文件转换为"over the air"安装所需的文件结构。你只需要在一个对话框中填写所需的信息：
- en: '![AirLaunch](img/image00308.jpeg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![AirLaunch](img/image00308.jpeg)'
- en: After selecting the "APP" file, you only need to enter the URL where the folder
    will be when it's online and then click on the **Create Files** button. The URL
    link to your online app will be confirmed at the bottom of the window. Click on
    the URL to copy it and then e-mail it to your testers. When they visit the web
    page on their device, there will be a single link to touch and iOS will prompt
    you for approval to install the app. If you look at the next available position
    on your home page, you will see that it is being installed or is already installed
    if you are not quick enough.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 选择"APP"文件后，你只需要输入文件夹在线时的URL，然后点击**创建文件**按钮。在线应用程序的URL链接将在窗口底部确认。点击URL以复制它，然后通过电子邮件发送给你的测试人员。当他们在自己的设备上访问网页时，将有一个单独的链接可以触摸，iOS将提示你批准安装应用程序。如果你查看主页上的下一个可用位置，你会看到它正在安装，或者如果你不够快，它已经安装了。
- en: Note
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'For more information about AirLaunch, refer to:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 有关AirLaunch的更多信息，请参阅：
- en: '[http://www.hyperactivesw.com/airlaunch/index.html](http://www.hyperactivesw.com/airlaunch/index.html)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.hyperactivesw.com/airlaunch/index.html](http://www.hyperactivesw.com/airlaunch/index.html)'
- en: 'Note that Apple requires a secure server for this to work and the URL must
    start with HTTPS. The easiest source is to use a Dropbox public folder, though
    you need to make it secure if you''ve signed up for Dropbox after October 4, 2012\.
    Refer to the AirLaunch FAQs for further information at:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，苹果要求使用一个安全的服务器才能实现这一功能，并且URL必须以HTTPS开头。最简单的来源是使用Dropbox公共文件夹，尽管如果你是在2012年10月4日之后注册的Dropbox，你需要将其设置为安全。有关更多信息，请参阅AirLaunch常见问题解答：
- en: '[http://hyperactivesw.com/airlaunch/airlaunchtips.html](http://hyperactivesw.com/airlaunch/airlaunchtips.html)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://hyperactivesw.com/airlaunch/airlaunchtips.html](http://hyperactivesw.com/airlaunch/airlaunchtips.html)'
- en: Tip
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**AirLaunch workflow in development**'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**AirLaunch开发中的工作流程**'
- en: AirLaunch can be installed as a LiveCode plugin and can be run right after you
    create a standalone version of your app. You can save the installation web page
    on your iOS device and click on it to launch the installer. This method is a lot
    easier to test your app during development than connecting a cable to your device
    and dragging the app into Xcode.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: AirLaunch可以作为LiveCode插件安装，并在创建应用程序的独立版本后立即运行。你可以在iOS设备上保存安装网页，并点击它以启动安装程序。这种方法在开发过程中测试应用程序比连接电缆并将应用程序拖入Xcode要容易得多。
- en: BetaBuilder
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: BetaBuilder
- en: 'BetaBuilder can be found in the Mac App Store at:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在Mac App Store中找到BetaBuilder：
- en: '[http://itunes.apple.com/us/app/betabuilder-for-ios-apps/id415348946?mt=12](http://itunes.apple.com/us/app/betabuilder-for-ios-apps/id415348946?mt=12)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://itunes.apple.com/us/app/betabuilder-for-ios-apps/id415348946?mt=12](http://itunes.apple.com/us/app/betabuilder-for-ios-apps/id415348946?mt=12)'
- en: It wasn't made with LiveCode in mind and works with "IPA" files and not "APP"
    files. An easy way to convert the LiveCode APP file into an IPA file is to drag
    the APP file into iTunes and to select Show in Finder by right-clicking on the
    app in the **Library**. This will reveal the IPA file that you can drag into the
    BetaBuilder window.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 它并不是专门为LiveCode设计的，它支持"IPA"文件而不是"APP"文件。将LiveCode APP文件转换为IPA文件的一个简单方法是将APP文件拖入iTunes，并右键单击库中的应用程序选择"显示在Finder中"。这将显示可以拖入BetaBuilder窗口的IPA文件。
- en: 'The process is much the same as AirLaunch''s process, where you select the
    file to use, enter the URL of the online folder, and the program generates the
    files for you. Again, this all happens in a single dialog window:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程与AirLaunch的过程非常相似，其中你选择要使用的文件，输入在线文件夹的URL，程序为你生成文件。同样，这一切都在一个对话框窗口中完成：
- en: '![BetaBuilder](img/image00309.jpeg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![BetaBuilder](img/image00309.jpeg)'
- en: 'Both products create similar files as illustrated in the following Dropbox
    public folder:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这两款产品创建的文件与以下Dropbox公共文件夹中所示类似：
- en: '![BetaBuilder](img/image00310.jpeg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![BetaBuilder](img/image00310.jpeg)'
- en: Both products make life easy for your testers. AirLaunch has the advantages
    of being a plugin that works within LiveCode, which you're likely to have open
    anyway, and working directly with the APP files that LiveCode creates. BetaBuilder
    is a Mac app that is run separately and requires you to transfer the files to
    your server using some other Mac application. AirTouch has FTP built-in to streamline
    your workflow.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这两款产品都让测试者的生活变得简单。AirLaunch作为一个插件，可以在LiveCode中运行，而LiveCode你很可能已经打开了，并且可以直接与LiveCode创建的APP文件进行工作。BetaBuilder是一个独立的Mac应用程序，需要你使用其他Mac应用程序将文件传输到你的服务器。AirTouch内置了FTP，以简化你的工作流程。
- en: BetaBuilder's main advantage is that it's incredibly cheap! It also generates
    a web page that is more informative than AirLaunch, which shows just a simple
    link with the name of the app. However, AirLaunch allows you to export the template
    and edit or integrate it into your website.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: BetaBuilder的主要优势是它极其便宜！它还生成一个比AirLaunch更详细的信息网页，AirLaunch只显示一个带有应用名称的简单链接。然而，AirLaunch允许你导出模板并编辑或将其集成到你的网站上。
- en: '![BetaBuilder](img/image00311.jpeg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![BetaBuilder](img/image00311.jpeg)'
- en: TestFlight
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TestFlight
- en: A service named TestFlight was in place during the time I was writing the first
    edition of this book that worked similar to AirLaunch and Beta Builder. In 2014,
    Apple purchased TestFlight and merged it with **iTunes Connect** (**iTC**) that
    is used to submit apps to the Apple App Store. TestFlight is a lot more than what
    you need to just send out personal apps to a few testers, but it is required while
    dealing with apps that go out to as many as 1000 testers. One big change is that
    you will also need a Distribution Profile and Certificate to start the submittal
    process as described further in this chapter.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在我撰写这本书的第一版时，有一个名为TestFlight的服务，其工作方式类似于AirLaunch和Beta Builder。2014年，苹果收购了TestFlight并将其与用于向苹果App
    Store提交应用的**iTunes Connect**（**iTC**）合并。TestFlight不仅仅是你向几个测试者发送个人应用所需的东西，但在处理可能发送给多达1000个测试者的应用时是必需的。一个重大变化是，你还需要一个分发配置文件和证书才能开始本章中进一步描述的提交过程。
- en: 'TestFlight has two levels of testing: **Internal** and **External**. Internal
    testing is for members of your development team. You can add up to 25 internal
    testers using the **Users and Roles** section of iTC and assign them a **Technical**
    role. They will get an e-mail invitation and need to activate an iTC account.
    When you start testing your app, they receive another e-mail announcement and
    need to download the TestFlight app to their device that must run iOS 8 or its
    later versions. The TestFlight app then installs your app for testing. The test
    only lasts for 30 days unless you update it and submit a new version. The TestFlight
    app can also be used for error reporting and feedback.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: TestFlight有两个测试级别：**内部**和**外部**。内部测试是针对你的开发团队成员的。你可以使用iTC的**用户和角色**部分添加最多25个内部测试者，并分配给他们**技术**角色。他们将收到一封电子邮件邀请，并需要激活一个iTC账户。当你开始测试你的应用时，他们会收到另一封电子邮件通知，并需要在运行iOS
    8或更高版本的设备上下载TestFlight应用。然后TestFlight应用会安装你的应用以进行测试。测试只持续30天，除非你更新它并提交新版本。TestFlight应用还可以用于错误报告和反馈。
- en: External testing is similar, but requires a Beta App Review and must comply
    with the full App Store Review Guidelines before the testing begins. A review
    is required for new versions of your app that contain significant changes. Up
    to 10 apps can be tested at a time, internally or externally. You can add up to
    1000 external testers just by supplying a list of their e-mail addresses and checking
    whether you have their approval. After releasing, the testing proceeds in the
    same manner as it did with internal testers. At the time of writing this book,
    a tester could not be on both the internal and external lists. Refer to [https://developer.apple.com/testflight/](https://developer.apple.com/testflight/)
    for further information.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 外部测试与此类似，但需要在测试开始前进行Beta App Review，并必须遵守完整的App Store Review Guidelines。对于包含重大更改的新版本的应用，需要进行审查。一次可以测试多达10个应用，无论是内部还是外部。你可以通过提供他们的电子邮件地址列表并检查你是否得到了他们的批准来添加最多1000个外部测试者。发布后，测试将以与内部测试者相同的方式进行。在撰写这本书的时候，一个测试者不能同时出现在内部和外部列表中。有关更多信息，请参阅[https://developer.apple.com/testflight/](https://developer.apple.com/testflight/)。
- en: Note
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Missing push notification entitlement**'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**缺少推送通知权限**'
- en: 'In early 2015, you would get this e-mail warning message while submitting an
    app to iTC: "Your app appears to include API used to register with the Apple **Push
    Notification** service, but the app signature''s **entitlements** do not include
    the "aps-environment" **entitlement**." This is an issue in LC and does not affect
    anything. Apple''s Push Notification Service is built in the LC engine and LC
    doesn''t bother to strip it out if you don''t use it. It is documented in bug
    10979 in the RunRev Quality system at [http://quality.runrev.com/process_bug.cgi](http://quality.runrev.com/process_bug.cgi).'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在 2015 年初，当您向 iTC 提交应用程序时，您会收到这封电子邮件警告信息：“您的应用程序似乎包含用于注册 Apple **推送通知**服务的 API，但应用程序签名的**权限**不包括
    "aps-environment" **权限**。”这是 LC 中的一个问题，不会影响任何东西。Apple 的推送通知服务是内置在 LC 引擎中的，如果不用它，LC
    不会费心将其删除。这在 RunRev 质量系统中的错误报告 10979 中有记录。[http://quality.runrev.com/process_bug.cgi](http://quality.runrev.com/process_bug.cgi)。
- en: Using "over the air" installers for Android
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用“空中”安装程序进行 Android 安装
- en: While testing with the Android Emulator or direct connection should be sufficient
    to learn LiveCode development, the real world is much more complex. In the last
    several years, testing alternatives have emerged to help test your apps on other
    Android devices. With numerous Android devices, this is really needed. There were
    8614 listed in the Google Play store at the last count and many more must've been
    listed even now, when you read this. There are also variations in the Android
    OS available at Amazon, Samsung, and others. Hopefully, testing through Google
    testing resources will be adequate for your needs.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Android 模拟器或直接连接进行测试时，应该足以学习 LiveCode 开发，但现实世界要复杂得多。在过去的几年里，出现了多种测试替代方案，以帮助您在其他
    Android 设备上测试您的应用程序。由于有众多 Android 设备，这确实是必需的。在最后一次统计中，Google Play 商店列出了 8614 个，而且现在当您阅读这篇文章时，肯定还有更多被列出。在亚马逊、三星和其他地方也有
    Android 操作系统的变体。希望通过 Google 测试资源进行测试能够满足您的需求。
- en: Google testing
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Google 测试
- en: 'Google also has a testing capability built in their Google Play store. As with
    Apple''s iTC and TestFlight; for Google, you have to prepare your store list and
    upload your APK just as you would when publishing it. To distribute to testers,
    you need to create and select a Google Group or Google+ Community that the testers
    join. Google has alpha and beta tests, which are similar to Apple''s internal
    and external testing. Notification e-mails are sent to testers with a link to
    the testing section of Google Play. Because your testers can''t leave public reviews
    for alpha/beta apps on Google Play, it''s a good idea to let them know where they
    can provide you feedback (an e-mail address, website, and so on). Further details
    can be found at:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Google 也在他们的 Google Play 商店内置了测试功能。与 Apple 的 iTC 和 TestFlight 类似；对于 Google 来说，您需要准备您的商店列表并上传您的
    APK，就像您发布它时一样。为了向测试者分发，您需要创建并选择一个测试者可以加入的 Google Group 或 Google+ Community。Google
    有 alpha 和 beta 测试，这与 Apple 的内部和外部测试类似。测试通知电子邮件会发送给测试者，其中包含 Google Play 测试部分的链接。因为您的测试者不能在
    Google Play 上为 alpha/beta 应用程序留下公开评论，所以让它们知道在哪里可以提供反馈（电子邮件地址、网站等）是个好主意。更多详细信息可以在以下找到：
- en: '[https://support.google.com/googleplay/android-developer/answer/3131213?hl=en](https://support.google.com/googleplay/android-developer/answer/3131213?hl=en)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://support.google.com/googleplay/android-developer/answer/3131213?hl=en](https://support.google.com/googleplay/android-developer/answer/3131213?hl=en)'
- en: Amazon testing
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 亚马逊测试
- en: Amazon has a tool called **Live App Testing** to allow developers to beta test
    apps through the Amazon appstore. Developers can invite up to 500 specific users
    to test the app through an e-mail invite. In addition to this, the **A/B Testing
    Service** allows to conduct in-app experiments to try different UI interactions
    with different groups of users. It supposedly also supports iOS, but requires
    specific APIs that would need development of LiveCode externals.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊有一个名为 **Live App Testing** 的工具，允许开发者通过亚马逊应用商店进行应用程序的公测。开发者可以通过电子邮件邀请最多 500
    名特定用户测试应用程序。除此之外，**A/B 测试服务**允许在应用程序内进行实验，尝试与不同用户群体的不同 UI 交互。据说它还支持 iOS，但需要开发
    LiveCode 外部特定的 API。
- en: 'For more information refer to:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息请参考：
- en: '[https://developer.amazon.com/public/community/post/TxCVSAM1IG7NX2/Launch-Better-Apps-Announcing-Live-App-Testing](https://developer.amazon.com/public/community/post/TxCVSAM1IG7NX2/Launch-Better-Apps-Announcing-Live-App-Testing)'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.amazon.com/public/community/post/TxCVSAM1IG7NX2/Launch-Better-Apps-Announcing-Live-App-Testing](https://developer.amazon.com/public/community/post/TxCVSAM1IG7NX2/Launch-Better-Apps-Announcing-Live-App-Testing)'
- en: Samsung testing
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 三星测试
- en: To facilitate testing of apps, Samsung has developed **Remote Testing Lab (RTL)**
    facilities. These labs contain real devices that allow developers to upload and
    test their apps. To use these devices, you need to download and run a Java applet
    that connects your APK to a live device in the Samsung lab and provides an interface
    to interact with this device. This may have some potential in the future, but
    is included here for possible investigation. For more information on Samsung testing,
    refer to [http://developer.samsung.com/remotetestlab/rtlAboutRTL.action](http://developer.samsung.com/remotetestlab/rtlAboutRTL.action).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便测试应用，三星开发了**远程测试实验室（RTL）**设施。这些实验室包含真实设备，允许开发者上传和测试他们的应用。要使用这些设备，你需要下载并运行一个Java小程序，该小程序将你的APK连接到三星实验室中的实时设备，并提供一个与该设备交互的界面。这可能在将来有一些潜在的应用，但这里包括它以供可能的调查。有关三星测试的更多信息，请参阅[http://developer.samsung.com/remotetestlab/rtlAboutRTL.action](http://developer.samsung.com/remotetestlab/rtlAboutRTL.action)。
- en: Tip
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The previous testing alternatives are the primary alternatives associated with
    the iOS and Android device manufacturers. Since Apple bought **TestFlight**, several
    other cross-platform testing solutions have picked up the slack. A quick search
    on the Internet shows **HockeyApp**, **Crashlytics**, **Ubertesters**, **TestFairy**,
    and others that may have potential as well.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的测试替代方案是与iOS和Android设备制造商相关的主要替代方案。由于苹果收购了**TestFlight**，其他几个跨平台测试解决方案已经填补了空缺。在互联网上快速搜索显示**HockeyApp**、**Crashlytics**、**Ubertesters**、**TestFairy**和其他一些可能有潜力的解决方案。
- en: Creating an app store submission file
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建应用商店提交文件
- en: The biggest hurdle 'that you need to overcome in order to make a version of
    your app that can be submitted to app stores is acquiring a distribution certificate.
    The process is quicker for Android, but does involve some typing to be done in
    the command line, and there is a slight difference if you are on Windows rather
    than Mac. The iOS process has many steps to it, but at least they don't involve
    typing cryptic commands. We'll look at Android first.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 为了制作一个可以提交到应用商店的应用版本，你需要克服的最大障碍是获取一个分发证书。对于Android来说，这个过程更快，但确实需要在命令行中输入一些文本，如果你使用的是Windows而不是Mac，那么会有一些细微的差别。iOS的过程有很多步骤，但至少它们不涉及输入难以理解的命令。我们首先来看Android。
- en: Finding and using the Android Keytool application
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查找和使用Android Keytool应用程序
- en: One of the thing that was installed when you added the Java Development Kit
    is a tool to make a "keystore" file, which is a self-assigned certificate. It's
    this tool that is used to create the certificate you'll need in order to distribute
    an Android app.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 当你添加Java开发工具包时，安装的一个工具是用来创建“密钥库”文件的，这是一个自签名的证书。这个工具就是用来创建你分发Android应用所需的证书。
- en: On Mac, you don't need to find this application, you can simply type the command
    in the Terminal and you'll find the tool. On Windows, you need to navigate to
    the folder where Keytool is located first. Before getting that far, you have to
    first open the command line as Administrator.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mac上，你不需要寻找这个应用程序，你只需在终端中输入命令，你就能找到这个工具。在Windows上，你首先需要导航到Keytool所在文件夹。在做到这一步之前，你必须首先以管理员身份打开命令行。
- en: 'On Windows, the CMD application is found at `C:\Windows\System32\`. Go to that
    directory in Windows Explorer, right-click on the file, and select **Run as Administrator**.
    The Keytool application will be in the bin folder of the Java JDK directory. Once
    you are at Command Prompt, change directories to get to that location, which will
    be something like `C:\Program Files\Java\jdkx.x.x_xx\bin\`, where the `jdkx.x.x_xx`
    part would actually be the version of the JDK that you have installed. You should
    be able to get all the way there with a line like the following, where cd is the
    command used to change directories:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上，CMD应用程序位于`C:\Windows\System32\`。在Windows资源管理器中转到该目录，右键单击文件，并选择**以管理员身份运行**。Keytool应用程序将在Java
    JDK目录的bin文件夹中。一旦你到达命令提示符，更改目录以到达该位置，这将是类似于`C:\Program Files\Java\jdkx.x.x_xx\bin\`的路径，其中`jdkx.x.x_xx`部分实际上是已安装的JDK版本。你应该能够通过以下类似命令到达那里，其中cd是用于更改目录的命令：
- en: '[PRE0]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: On Mac, you will use Terminal, which is located in `/Application/Utilites`.
    Just open Terminal and you'll immediately be able to use the Keytool application.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mac上，你会使用位于`/Application/Utilites`的终端。只需打开终端，你就能立即使用Keytool应用程序。
- en: 'In either case, you will now type a relatively short line and then answer the
    various questions that appear. For better understanding of what is going on, visit:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何情况下，您现在将输入一条相对简短的命令行，然后回答出现的各种问题。为了更好地理解正在发生的事情，请访问：
- en: '[http://developer.android.com/guide/publishing/app-signing.html](http://developer.android.com/guide/publishing/app-signing.html)'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://developer.android.com/guide/publishing/app-signing.html](http://developer.android.com/guide/publishing/app-signing.html)'
- en: For our purpose, we'll just type in the right command, and all should go well,
    even if we don't understand what we typed!
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的目的，我们只需输入正确的命令，一切应该都会顺利，即使我们不理解我们输入了什么！
- en: 'This is the line that you need to type, changing the keystore and alias names
    to match the names you wish to use for this certificate:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您需要输入的行，将密钥库和别名名称更改为与您希望用于此证书的名称匹配：
- en: '[PRE1]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: When you press the Enter or Return key, you will start to see a series of questions
    starting with the password you wish to use for the keystore. Further questions
    will ask for your full name, details about your company, city, and country. It's
    a set of data that can be encoded into a keystore that is unique and has enough
    accurate information through which a user can decide whether to trust the certificate.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 当您按下Enter或Return键时，您将开始看到一系列问题，这些问题从您希望用于密钥库的密码开始。后续问题将询问您的全名、公司、城市和国家详情。这是一组可以编码到具有独特性和足够准确信息以供用户决定是否信任证书的密钥库中的数据。
- en: When the tool is finished, you will have the keystore file that LiveCode requires.
    It will be easily available in your home folder on Mac and somewhat buried in
    the JDK bin folder on Windows.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 当工具完成时，您将拥有LiveCode所需的密钥库文件。在Mac上它将很容易在您的家目录中找到，而在Windows上则可能隐藏在JDK bin文件夹中。
- en: 'Go to the **Basic Application Settings** of the **Standalone Application Settings**
    of your Mainstack and navigate to the file from the Key entry. Once chosen, this
    section will look like this:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 前往Mainstack的**独立应用程序设置**的**基本应用程序设置**，然后从密钥条目导航到文件。一旦选择，此部分将看起来像这样：
- en: '![Finding and using the Android Keytool application](img/image00312.jpeg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![寻找和使用Android Keytool应用程序](img/image00312.jpeg)'
- en: If you have chosen your icons and splash screen and requirements and permissions,
    you should be able to build a version of the APK file that can be uploaded to
    app stores.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经选择了图标、启动画面以及要求和权限，您应该能够构建一个可以上传到应用商店的APK文件版本。
- en: Creating a distribution certificate for iOS
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为iOS创建分发证书
- en: As mentioned previously, there is no command line typing involved to get a distribution
    certificate for iOS, but there are a lot of steps involved. The First place to
    visit to get the certificate is the iOS Developer Portal to make sure that you
    have set up a dedicated App ID and Provisioning file for this particular app.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，获取iOS分发证书不需要涉及命令行输入，但涉及许多步骤。获取证书的第一站是iOS开发者门户，以确保您已经为这个特定的应用程序设置了一个专门的App
    ID和配置文件。
- en: The following screenshot represents the steps taken to get a certificate and
    profile for an app that is to be named `EasyReminder`, which is the reminder app
    that we made earlier.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了为即将命名的名为`EasyReminder`的应用程序获取证书和配置文件的步骤，这是我们之前制作的通知应用程序。
- en: 'In the **App IDs** part of the portal, there is a **+** button that adds a
    new app ID to your account and asks for a name for that ID. Here, you can see
    that the ID is given the name **EasyReminder** and a Bundle Identifier `com.gerdeen.easyreminder`.
    This needs to match the **Internal App ID** set in LiveCode. If you are *not*
    member of multiple development teams, you will not see the App ID Prefix shown
    in the following screenshot:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在门户的**App IDs**部分，有一个**+**按钮，它将新的App ID添加到您的账户中，并要求为该ID提供一个名称。在这里，您可以看到ID被命名为**EasyReminder**和一个包标识符`com.gerdeen.easyreminder`。这需要与LiveCode中设置的**内部App
    ID**相匹配。如果您**不是**多个开发团队的成员，您将不会看到以下截图中显示的App ID前缀：
- en: '![Creating a distribution certificate for iOS](img/image00313.jpeg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![为iOS创建分发证书](img/image00313.jpeg)'
- en: 'Now that there is an App ID, it can be used to set up a Distribution Provisioning
    Profile in the **Provisioning** section. If you haven''t yet made a Distribution
    Certificate, you will see a button telling you to make one. Clicking on that button
    will present you a question about what kind of certificate you want to make:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在有了App ID，它可以在**配置**部分设置一个分发配置文件。如果您还没有创建分发证书，您将看到一个按钮告诉您创建一个。点击该按钮将向您提出一个问题，询问您想要创建哪种类型的证书：
- en: '![Creating a distribution certificate for iOS](img/image00314.jpeg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![为iOS创建分发证书](img/image00314.jpeg)'
- en: 'Clicking on the **Continue** button takes you to a long description of how
    you have to make a request to the certificate authority and how to upload a file
    that Keychain Access generates. When you encounter this situation, carefully follow
    the steps shown in the following screenshot:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**继续**按钮会带你去一个长描述，说明你必须如何向证书颁发机构提出请求以及如何上传Keychain Access生成的文件。当你遇到这种情况时，请仔细遵循以下截图所示的步骤：
- en: '![Creating a distribution certificate for iOS](img/image00315.jpeg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![为iOS创建分发证书](img/image00315.jpeg)'
- en: 'After you have uploaded that certificate request file, you will be able to
    make a distribution profile that uses the dedicated App ID and the distribution
    certificate. The final entry will look like this, and you can use the **Download**
    button to get a local copy of the provisioning file:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在上传证书请求文件后，你将能够创建一个使用专用App ID和分发证书的分发配置文件。最后的条目将看起来像这样，你可以使用**下载**按钮来获取本地副本的配置文件：
- en: '![Creating a distribution certificate for iOS](img/image00316.jpeg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![为iOS创建分发证书](img/image00316.jpeg)'
- en: 'You now have the file that LiveCode requires, only you don''t select it in
    the LiveCode settings. Instead, you double-click on the file and it installs itself
    using Xcode. Once it is in Xcode, you can then select it from the **Profile**
    menu in the **Basic Application Settings** in LiveCode:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在有了LiveCode需要的文件，但你不需要在LiveCode设置中选择它。相反，你双击该文件，它将使用Xcode自动安装。一旦它在Xcode中，你就可以从LiveCode的**基本应用程序设置**中的**配置文件**菜单中选择它：
- en: '![Creating a distribution certificate for iOS](img/image00317.jpeg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![为iOS创建分发证书](img/image00317.jpeg)'
- en: As with Android, make sure to add icons, splash screens, set requirements, and
    so on and you will be able to save an APP file, ready to go, to the iOS App Store.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 与Android一样，确保添加图标、启动画面、设置要求等，你将能够保存一个准备好的APP文件，上传到iOS应用商店。
- en: Uploading to the app stores
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 上传到应用商店
- en: Each app store guides you through the steps of how to upload a new app and there
    are quite a lot of steps involved! It could take another book to show you all
    the screenshots you have to wade through. Showing these screenshots here would
    not be so valuable mainly because of their large quantity, but also because the
    process changes from time to time. For example, Google changed the name of their
    service from Android Market to Google Play.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 每个应用商店都会指导你如何上传新应用，并且涉及到的步骤相当多！可能需要另一本书来展示你必须浏览的所有截图。在这里展示这些截图不会非常有价值，主要是因为它们的数量庞大，而且流程会不时发生变化。例如，谷歌将他们的服务名称从Android
    Market更改为Google Play。
- en: 'There is some similarity between what each of the stores asks you, so we''ll
    look at what preparations you might need before heading off to the stores. When
    you are ready to proceed with the uploading, these are the pages you need to start
    with for the respective app stores:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 每个商店要求的内容之间有一些相似之处，所以我们将看看在前往商店之前你可能需要做哪些准备。当你准备好上传时，你需要从以下页面开始为相应的应用商店进行操作：
- en: 'iTunes Connect: [https://itunesconnect.apple.com](https://itunesconnect.apple.com)'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'iTunes Connect: [https://itunesconnect.apple.com](https://itunesconnect.apple.com)'
- en: 'Google Play: [https://play.google.com/apps/publish/](https://play.google.com/apps/publish/)'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Google Play: [https://play.google.com/apps/publish/](https://play.google.com/apps/publish/)'
- en: 'Amazon Appstore: [https://developer.amazon.com/home.html](https://developer.amazon.com/home.html)'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Amazon Appstore: [https://developer.amazon.com/home.html](https://developer.amazon.com/home.html)'
- en: 'Samsung Apps: [https://seller.samsungapps.com/](https://seller.samsungapps.com/)'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Samsung Apps: [https://seller.samsungapps.com/](https://seller.samsungapps.com/)'
- en: What's similar
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相似之处
- en: All three app stores will ask for a description of what the app does, rating
    information, price, a support website or e-mail address, and category information.
    In order to ask a price, other than Free, you will have to set up a merchant account.
    In the case of Apple, you'll have to give a web page address for support. Google
    just asks for contact information and Amazon shows support as being optional.
    All three ask for screenshots and allow you to upload a demo video.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 所有三个应用商店都会要求你描述应用的功能、评分信息、价格、支持网站或电子邮件地址以及分类信息。如果你要设置除了免费以外的价格，你必须设置一个商户账户。在苹果的情况下，你必须提供一个支持网页地址。谷歌只要求提供联系信息，而亚马逊将支持作为可选项。所有三个都要求截图，并允许你上传演示视频。
- en: What's different
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不同之处
- en: Apple asks for a lot of information, but spread over many screens. As you enter
    data, you will need screenshots and other information that you haven't gathered.
    You can **Save** what you have entered and come back later. Be sure to get it
    right before you click on **Submit for Review** because Apple does not allow you
    to change the information without uploading a newer version of the app.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: Apple 要求提供大量信息，但这些信息分布在多个屏幕上。当你输入数据时，你需要截图和其他你尚未收集的信息。你可以 **保存** 你已经输入的内容，稍后再回来。确保在点击
    **提交审核** 之前正确无误，因为 Apple 不允许在没有上传应用新版本的情况下更改信息。
- en: 'The upload of the actual app file for iOS is handled by the Application Loader
    utility that comes as part of Xcode. To access Application Loader from the Xcode
    developer tools package, choose menu **Xcode** | **Open Developer Tool** | **Application
    Loader**. You can also download it in your Application folder as described in
    the iTunes Connect support document at:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 实际应用文件的上传由 Xcode 集成开发工具包中的 Application Loader 工具处理。要从 Xcode 开发者工具包访问 Application
    Loader，请选择菜单 **Xcode** | **打开开发者工具** | **Application Loader**。你还可以按照 iTunes Connect
    支持文档中所述，在你的应用程序文件夹中下载它：
- en: '[https://itunesconnect.apple.com/docs/UsingApplicationLoader.pdf](https://itunesconnect.apple.com/docs/UsingApplicationLoader.pdf)'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://itunesconnect.apple.com/docs/UsingApplicationLoader.pdf](https://itunesconnect.apple.com/docs/UsingApplicationLoader.pdf)'
- en: Google asks for a lot of information, but it's all in their Developer Console.
    There are sections for uploading the **APK**, for completing the **Store Listing**
    and **Pricing & Distribution** as well as other operations. Be careful if you
    set the price as free as you cannot change it and it's instantly and permanently
    declared a free app. To change it later, you would need to create a new app with
    a new package name and set a price for the new app.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: Google 要求提供大量信息，但这些信息都在他们的开发者控制台中。有部分用于上传 **APK** 文件，用于完成 **商店列表**、**定价与分发**以及其他操作。如果你将价格设置为免费，请注意你不能更改它，并且它将立即永久性地被标记为免费应用。要更改它，你需要创建一个新的应用，使用新的包名并设置新应用的价格。
- en: Amazon asks for about the same information as Apple and Google. You can check
    whether your app works with Amazon by simply dragging it to their developer web
    page. They run a quick compatibility test and then run more tests on Android Nexus
    7 and their Fire phones and tablets. You can start the submittal process for your
    app directly from the test results page, but then you need to establish a developer
    account and provide the same information as before.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon 要求提供的信息与 Apple 和 Google 大致相同。你可以通过简单地将其拖到他们的开发者网页上来检查你的应用是否与 Amazon 兼容。他们进行快速兼容性测试，然后在
    Android Nexus 7 和他们的 Fire 手机和平板电脑上进行更多测试。你可以直接从测试结果页面开始提交你的应用，但那时你需要建立一个开发者账户并提供之前相同的信息。
- en: Samsung Apps is an app store designed to provide apps specially customized for
    Samsung mobile phones. It is a focal point for both developers and Samsung handset
    users. Without actually signing up, it is difficult to get details of how the
    store works for non-Samsung devices. For additional information, review the article
    at [http://www.pivoteast.com/guide-how-to-register-and-submit-apps-to-samsung-apps/](http://www.pivoteast.com/guide-how-to-register-and-submit-apps-to-samsung-apps/).
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Samsung Apps 是一个专为三星手机定制的应用商店。它是开发者和三星手机用户关注的焦点。不实际注册，很难了解该商店对非三星设备的工作细节。如需更多信息，请参阅[http://www.pivoteast.com/guide-how-to-register-and-submit-apps-to-samsung-apps/](http://www.pivoteast.com/guide-how-to-register-and-submit-apps-to-samsung-apps/)上的文章。
- en: Bottom line
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 核心内容
- en: The submission process is just about the most stressful part of developing a
    mobile app! It makes you feel better about the other stages you've been through;
    perhaps those weren't so bad after all…
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 提交过程几乎是开发移动应用中最有压力的部分！它让你对自己的其他阶段感到更加安心；也许那些阶段并没有那么糟糕…
- en: Hopefully, you have a partner who can be a second pair of eyes to help you understand
    all the questions to not miss something vital that will haunt you later.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你有一个合作伙伴，可以成为你的第二双眼睛，帮助你理解所有问题，以免错过将来会困扰你的重要信息。
- en: Summary
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: I don't know about you, but I'm beat! This mobile app developing business can
    be overwhelming. Even the administrative side of things can be quite involved.
    In this chapter, we covered some of the less programmatic tasks such as examining
    all the options in the Standalone Application Settings, fighting our way through
    command lines and red tape to get an app certified, and mentally preparing ourselves
    to submit our app to app stores.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道你们的情况如何，但我是筋疲力尽了！移动应用开发业务可能会让人感到压倒性。即使是行政方面的事情也可能相当复杂。在本章中，我们介绍了一些不太程序化的任务，例如检查独立应用程序设置中的所有选项，通过命令行和繁琐的程序来获得应用程序认证，以及心理上准备将我们的应用程序提交到应用商店。
- en: We're at the end of the road as far as making use of mobile features in a LiveCode
    stack and taking them through to the point of making a real mobile app out of
    them is concerned. Next up, we'll look at a few add-ons to LiveCode that would
    enable you to use even more mobile features.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 就利用LiveCode堆栈中的移动功能并将其转化为真正的移动应用而言，我们已经走到了尽头。接下来，我们将探讨一些LiveCode的附加组件，这些组件将使您能够使用更多的移动功能。
