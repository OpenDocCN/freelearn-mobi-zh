["```java\nlocal square = display.newRect( 0, 0, 50, 50 )\nsquare:setFillColor( 255,255,255 )\nsquare.x = 50; square.y = 100\nlocal square2 = display.newRect( 0, 0, 50, 50 )\nsquare2:setFillColor( 255,255,255 )\nsquare2.x = 50; square2.y = 300\ntransition.to( square, { time=1500, x=250, y=0 } )\ntransition.from( square2, { time=1500, x=250, y=0, transition = easing.outExpo } )\n\n```", "```java\n    local function myEvent()\n    print( \"myEvent called\" )\n    end\n    timer.performWithDelay( 1000, myEvent )\n\n    ```", "```java\n    local count = 0\n    local function myEvent()\n    count = count + 1\n    print( count )\n    if count >= 3 then\n    timer.cancel( myTimerID ) -- Cancels myTimerID\n    end\n    end\n    myTimerID = timer.performWithDelay( 1000, myEvent, 0 )\n\n    ```", "```java\n    local count = 0\n    local function myEvent()\n    count = count + 1\n    print( count )\n    if count >= 5 then\n    timer.pause( myTimerID ) -- Pauses myTimerID\n    end\n    end\n    myTimerID = timer.performWithDelay( 1000, myEvent, 0 )\n\n    ```", "```java\n    local function myEvent()\n    print( \"myEvent called\" )\n    end\n    myTimerID = timer.performWithDelay( 3000, myEvent ) -- wait 3 seconds\n    result = timer.pause( myTimerID ) -- Pauses myTimerID\n    print( \"Time paused at \" .. result )\n    result = timer.resume( myTimerID ) -- Resumes myTimerID\n    print( \"Time resumed at \" .. result )\n\n    ```", "```java\n    myAnimation = movieclip.newAnim{ \"1.png\", \"2.png\", \"3.png\", \"4.png\", \"5.png\"}\n\n    ```", "```java\n    myAnimation:play{ startFrame=1, endFrame=4, loop=5, remove=true }\n\n    ```", "```java\n    myAnimation:setLabels{ main=1, end=30 }\n\n    ```", "```java\n    myAnimation:stopAtFrame(2)\n    myAnimation:play()\n    myAnimation:stopAtFrame(\"label\")\n    myAnimation:reverse()\n\n    ```", "```java\n    myAnimation:setDrag{ drag=true, limitX=false, limitY=false, onPress=myPressFunction, onDrag=myDragFunction,\n    onRelease=myReleaseFunction, bounds={ 20, 20, 100, 25 }}\n\n    ```", "```java\n    myAnimation:setDrag{ drag=false }\n\n    ```", "```java\nrequire \"sprite\"\n\n```", "```java\n    spriteSheet = sprite.newSpriteSheet(\"myImage.png\", frameWidth, frameHeight) -- the width/height of each animation in the sprite sheet\n\n    ```", "```java\n    spriteSheet = sprite.newSpriteSheet(\"pandaSheet.png\", 128, 128)\n\n    ```", "```java\n    local sprite = require(\"sprite\")\n    local spriteSheet = sprite.newSpriteSheet(\"mySprite.png\")\n    spriteSheet:dispose()\n\n    ```", "```java\n    display.setStatusBar( display.HiddenStatusBar ) -- Hides the status bar\n    -- Display groups\n    local hudGroup = display.newGroup() -- Displays the HUD\n    local gameGroup = display.newGroup()\n    local levelGroup = display.newGroup()\n    local stars = display.newGroup() -- Displays the stars\n    -- Modules\n    local sprite = require(\"sprite\")\n    local physics = require (\"physics\")\n    local mCeil = math.ceil\n    local mAtan2 = math.atan2\n    local mPi = math.pi\n    local mSqrt = math.sqrt\n    -- Game Objects\n    local background\n    local ground\n    local powerShot\n    local arrow\n    local panda\n    local poof\n    local starGone\n    local scoreText\n    local gameOverDisplay\n    -- Variables\n    local gameIsActive = false\n    local waitingForNewRound\n    local restartTimer\n    local counter\n    local timerInfo\n    local numSeconds = 30 -- Time the round starts at\n    local counterSize = 50\n    local gameScore = 0 -- Round starts at a score of 0\n    local starWidth = 30\n    local starHeight = 30\n\n    ```", "```java\n    local startNewRound = function()\n    if panda then\n\n    ```", "```java\n    local activateRound = function()\n    waitingForNewRound = false\n    if restartTimer then\n    timer.cancel( restartTimer )\n    end\n    ground:toFront()\n    panda.x = 240;\n    panda.y = 300;\n    panda.rotation = 0\n    panda.isVisible = true\n    panda.isBodyActive = true\n\n    ```", "```java\n    local pandaLoaded = function()\n    gameIsActive = true\n    panda.inAir = false\n    panda.isHit = false\n    panda:toFront()\n    panda.bodyType = \"static\"\n    end\n\n    ```", "```java\n    transition.to( panda, { time=1000, y=225, onComplete=pandaLoaded } )\n    end\n    activateRound()\n    end\n    end\n\n    ```", "```java\n    local callNewRound = function()\n    local isGameOver = false\n\n    ```", "```java\n    local pandaGone = function()\n    panda:setLinearVelocity( 0, 0 )\n    panda.bodyType = \"static\"\n    panda.isVisible = false\n    panda.isBodyActive = false\n    panda.rotation = 0\n    poof.x = panda.x; poof.y = panda.y\n    poof.alpha = 0\n    poof.isVisible = true\n\n    ```", "```java\n    local fadePoof = function()\n    transition.to( poof, { time=100, alpha=0 } )\n    end\n    transition.to( poof, { time=50, alpha=1.0, onComplete=fadePoof } )\n    restartTimer = timer.performWithDelay( 300, function()\n    waitingForNewRound = true;\n    end, 1)\n    end\n    local poofTimer = timer.performWithDelay( 500, pandaGone, 1 )\n\n    ```", "```java\n    if isGameOver == false then\n    restartTimer = timer.performWithDelay( 1500, startNewRound, 1 )\n    end\n    end\n\n    ```", "```java\n    local setScore = function( scoreNum )\n\n    ```", "```java\n    local newScore = scoreNum\n    gameScore = newScore\n    if gameScore < 0 then gameScore = 0; end\n\n    ```", "```java\n    scoreText.text = gameScore\n    scoreText.xScale = 0.5; scoreText.yScale = 0.5\n    scoreText.x = (480 - (scoreText.contentWidth * 0.5)) - 15\n    scoreText.y = 20\n    end\n\n    ```", "```java\n    local callGameOver = function()\n\n    ```", "```java\n    gameIsActive = false\n    physics.pause()\n    panda:removeSelf()\n    panda = nil\n    stars:removeSelf()\n    stars = nil\n\n    ```", "```java\n    local shade = display.newRect( 0, 0, 480, 320 )\n    shade:setFillColor( 0, 0, 0, 255 )\n    shade.alpha = 0\n    gameOverDisplay = display.newImage( \"gameOverScreen.png\")\n    gameOverDisplay.x = 240; gameOverDisplay.y = 160\n    gameOverDisplay.alpha = 0\n    hudGroup:insert( shade )\n    hudGroup:insert( gameOverDisplay )\n    transition.to( shade, { time=200, alpha=0.65 } )\n    transition.to( gameOverDisplay, { time=500, alpha=1 } )\n\n    ```", "```java\n    local newScore = gameScore\n    setScore( newScore )\n    counter.isVisible = false\n    scoreText.isVisible = false\n    scoreText.text = \"Score: \" .. gameScore\n    scoreText.xScale = 0.5; scoreText.yScale = 0.5\n    scoreText.x = 280\n    scoreText.y = 160\n    scoreText:toFront()\n    timer.performWithDelay( 1000, function() scoreText.isVisible = true; end, 1 )\n    end\n\n    ```", "```java\n    local drawBackground = function()\n    background = display.newImage( \"background.png\" )\n    background.x = 240; background.y = 160\n    gameGroup:insert( background )\n    ground = display.newImage( \"ground.png\" )\n    ground.x = 240; ground.y = 300\n    local groundShape = { -240,-18, 240,-18, 240,18, -240,18 }\n    physics.addBody( ground, \"static\", { density=1.0, bounce=0, friction=0.5, shape=groundShape } )\n    gameGroup:insert( ground )\n    end\n\n    ```", "```java\n    local hud = function()\n\n    ```", "```java\n    local helpText = display.newImage(\"help.png\")\n    helpText.x = 240; helpText.y = 160\n    helpText.isVisible = true\n    hudGroup:insert( helpText )\n    timer.performWithDelay( 10000, function() helpText.isVisible = false; end, 1 )\n    transition.to( helpText, { delay=9000, time=1000, x=-320, transition=easing.inOutExpo })\n\n    ```", "```java\n    counter = display.newText( \"Time: \" .. tostring( numSeconds ), 0, 0, \"Helvetica-Bold\", counterSize )\n    counter:setTextColor( 255, 255, 255, 255 )\n    counter.xScale = 0.5; counter.yScale = 0.5\n    counter.x = 60; counter.y = 15\n    counter.alpha = 0\n    transition.to( counter, { delay=9000, time=1000, alpha=1, transition=easing.inOutExpo })\n    hudGroup:insert( counter )\n    scoreText = display.newText( \"0\", 470, 22, \"Helvetica-Bold\", 52 )\n    scoreText:setTextColor( 255, 255, 255, 255 ) --> white\n    scoreText.text = gameScore\n    scoreText.xScale = 0.5; scoreText.yScale = 0.5\n    scoreText.x = (480 - (scoreText.contentWidth * 0.5)) - 15\n    scoreText.y = 15\n    scoreText.alpha = 0\n    transition.to( scoreText, { delay=9000, time=1000, alpha=1, transition=easing.inOutExpo })\n    hudGroup:insert( scoreText )\n    end\n\n    ```", "```java\n    local myTimer = function()\n\n    ```", "```java\n    numSeconds = numSeconds - 1\n    counter.text = \"Time: \" .. tostring( numSeconds )\n    print(numSeconds)\n\n    ```", "```java\n    if numSeconds < 1 or stars.numChildren <= 0 then\n    timer.cancel(timerInfo)\n    panda:pause()\n    restartTimer = timer.performWithDelay( 300, function() callGameOver(); end, 1 )\n    end\n    end\n\n    ```", "```java\n    local startTimer = function()\n    print(\"Start Timer\")\n    timerInfo = timer.performWithDelay( 1000, myTimer, 0 )\n    end\n\n    ```", "```java\n    local createPowerShot = function()\n    powerShot = display.newImage( \"glow.png\" )\n    powerShot.xScale = 1.0; powerShot.yScale = 1.0\n    powerShot.isVisible = false\n    gameGroup:insert( powerShot )\n    end\n\n    ```", "```java\n    local createPanda = function()\n\n    ```", "```java\n    local onPandaCollision = function( self, event )\n    if event.phase == \"began\" then\n    if panda.isHit == false then\n    panda.isHit = true\n    if event.other.myName == \"star\" then\n    callNewRound( true, \"yes\" )\n    else\n    callNewRound( true, \"no\" )\n    end\n    if event.other.myName == \"wall\" then\n    callNewRound( true, \"yes\" )\n    else\n    callNewRound( true, \"no\" )\n    end\n    elseif panda.isHit then\n    return true\n    end\n    end\n    end\n\n    ```", "```java\n    arrow = display.newImage( \"arrow.png\" )\n    arrow.x = 240; arrow.y = 225\n    arrow.isVisible = false\n    gameGroup:insert( arrow )\n\n    ```", "```java\n    local pandaSheet = sprite.newSpriteSheet( \"pandaSprite.png\", 128, 128 )\n    local spriteSet = sprite.newSpriteSet(pandaSheet, 1, 5)\n    sprite.add( spriteSet, \"set\", 1, 2, 200, 0 )\n    sprite.add( spriteSet, \"crouch\", 3, 1, 1, 0 )\n    sprite.add( spriteSet, \"air\", 4, 2, 100, 0 )\n    panda = sprite.newSprite( spriteSet )\n    panda:prepare(\"set\")\n    panda:play()\n\n    ```", "```java\n    panda.x = 240; panda.y = 225\n    panda.isVisible = false\n    panda.isReady = false\n    panda.inAir = false\n    panda.isHit = false\n    panda.isBullet = true\n    panda.trailNum = 0\n    panda.radius = 12\n    physics.addBody( panda, \"static\", { density=1.0, bounce=0.4, friction=0.15, radius=panda.radius } )\n    panda.rotation = 0\n\n    ```", "```java\n    panda.collision = onPandaCollision\n    panda:addEventListener( \"collision\", panda )\n\n    ```", "```java\n    poof = display.newImage( \"poof.png\" )\n    poof.alpha = 1.0\n    poof.isVisible = false\n\n    ```", "```java\n    gameGroup:insert( panda )\n    gameGroup:insert( poof )\n    end\n\n    ```", "```java\n    panda:prepare(\"set\")\n    panda:play()\n\n    ```", "```java\n    local onStarCollision = function( self, event )\n\n    ```", "```java\n    if event.phase == \"began\" and self.isHit == false then\n    self.isHit = true\n    print( \"star destroyed!\")\n    self.isVisible = false\n    self.isBodyActive = false\n    stars.numChildren = stars.numChildren - 1\n    if stars.numChildren < 0 then\n    stars.numChildren = 0\n    end\n    self.parent:remove( self )\n    self = nil\n    local newScore = gameScore + 500\n    setScore( newScore )\n    end\n    end\n\n    ```", "```java\n    local onScreenTouch = function( event )\n\n    ```", "```java\n    if gameIsActive then\n    if event.phase == \"began\" and panda.inAir == false then\n    panda.y = 225\n    panda.isReady = true\n    powerShot.isVisible = true\n    powerShot.alpha = 0.75\n    powerShot.x = panda.x; powerShot.y = panda.y\n    powerShot.xScale = 0.1; powerShot.yScale = 0.1\n    arrow.isVisible = true\n    panda:prepare(\"crouch\")\n    panda:play()\n\n    ```", "```java\n    elseif event.phase == \"ended\" and panda.isReady then\n    local fling = function()\n    powerShot.isVisible = false\n    arrow.isVisible = false\n    local x = event.x\n    local y = event.y\n    local xForce = (panda.x-x) * 4\n    local yForce = (panda.y-y) * 4\n    panda:prepare(\"air\")\n    panda:play()\n    panda.bodyType = \"dynamic\"\n    panda:applyForce( xForce, yForce, panda.x, panda.y )\n    panda.isReady = false\n    panda.inAir = true\n    end\n    transition.to( powerShot, { time=175, xScale=0.1, yScale=0.1, onComplete=fling} )\n    end\n    if powerShot.isVisible == true then\n    local xOffset = panda.x\n    local yOffset = panda.y\n    local distanceBetween = mCeil(mSqrt( ((event.y - yOffset) ^ 2) + ((event.x - xOffset) ^ 2) ))\n    powerShot.xScale = -distanceBetween * 0.02\n    powerShot.yScale = -distanceBetween * 0.02\n    local angleBetween = mCeil(mAtan2( (event.y - yOffset), (event.x - xOffset) ) * 180 / mPi) + 90\n    panda.rotation = angleBetween + 180\n    arrow.rotation = panda.rotation\n    end\n    end\n    end\n\n    ```", "```java\n    local reorderLayers = function()\n    gameGroup:insert( levelGroup )\n    ground:toFront()\n    panda:toFront()\n    poof:toFront()\n    hudGroup:toFront()\n    end\n\n    ```", "```java\n    local createStars = function()\n    starsstarscreating, in levellocal numOfRows = 4\n    local numOfColumns = 12\n    local starPlacement = {x = (display.contentWidth * 0.5) - (starWidth * numOfColumns ) / 2 + 10, y = 50}\n    for row = 0, numOfRows - 1 do\n    for column = 0, numOfColumns - 1 do\n    -- Create a star\n    local star = display.newImage(\"star.png\")\n    star.name = \"star\"\n    star.isHit = false\n    star.x = starPlacement.x + (column * starWidth)\n    star.y = starPlacement.y + (row * starHeight)\n    physics.addBody(star, \"static\", {density = 1, friction = 0, bounce = 0})\n    stars.insert(stars, star)\n    star.collision = onStarCollision\n    star:addEventListener( \"collision\", star )\n    local function starAnimation()\n    local starRotation = function()\n    transition.to( star, { time=10000, rotation = 1080, onComplete=starAnimation })\n    end\n    transition.to( star, { time=10000, rotation = -1080, onComplete=starRotation })\n    end\n    starAnimation()\n    end\n    end\n    local leftWall = display.newRect (0, 0, 0, display.contentHeight)\n    leftWall.name = \"wall\"\n    local rightWall = display.newRect (display.contentWidth, 0, 0, display.contentHeight)\n    rightWall.name = \"wall\"\n    physics.addBody (leftWall, \"static\", {bounce = 0.0, friction = 10})\n    physics.addBody (rightWall, \"static\", {bounce = 0.0, friction = 10})\n    reorderLayers()\n    end\n\n    ```", "```java\n    local gameInit = function()\n    physics.start( true )\n    physics.setGravity( 0, 9.8 )\n    drawBackground()\n    createPowerShot()\n    createPanda()\n    createStars()\n    hud()\n\n    ```", "```java\n    Runtime:addEventListener( \"touch\", onScreenTouch )\n\n    ```", "```java\n    local gameTimer = timer.performWithDelay( 10000, function() startNewRound(); end, 1 )\n    local gameTimer = timer.performWithDelay( 10000, function() startTimer(); end, 1 )\n    end\n    gameInit()\n\n    ```"]