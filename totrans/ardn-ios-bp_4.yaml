- en: Chapter 4. iOS Guided Rover
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章 iOS 导航车
- en: In this chapter, we are going to build software that can be used to control
    a rover robot. What's new in this? Children have been playing with radio-controlled
    toys for years now, and sometimes, we still play with such toys!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将构建可以用来控制导航车机器人的软件。这有什么新意？孩子们已经玩遥控玩具多年了，有时我们仍然会玩这样的玩具！
- en: 'However, we are going to build a robot that can be controlled by iOS devices
    in the following three different ways:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们将构建一个可以通过以下三种不同方式由iOS设备控制的机器人：
- en: 'Through manual commands: The two sliders on the iOS control: the rover''s steering
    and the throttle'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过手动命令：iOS控制上的两个滑块：导航车的转向和油门
- en: 'By means of the iOS device movements in space: By moving an iOS device left
    and right, you can control the steering, and by moving the iOS device back and
    forth, you can control the throttle'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过iOS设备在空间中的移动：通过左右移动iOS设备，你可以控制转向，通过前后移动iOS设备，你可以控制油门
- en: 'By using voice commands: By saying a few voice commands, an iOS device can
    control the steering and throttle'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用语音命令：通过说出几个语音命令，iOS设备可以控制转向和油门
- en: Cool, isn't it? Let's quickly get started with this fascinating journey into
    robotics without forgetting that the techniques that you are going to learn here
    can be used in many other projects.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 很酷，不是吗？让我们迅速开始这段令人着迷的机器人之旅，同时不忘这里学到的技术可以用于许多其他项目。
- en: 'The chapter is organized into the following sections:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章分为以下部分：
- en: 'iOS guided rover requirements: We will briefly set the project requirements'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS 导航车需求：我们将简要设定项目需求
- en: 'Hardware: We will describe the hardware and the electronic circuit that is
    needed for the project'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 硬件：我们将描述项目所需的硬件和电子电路
- en: 'The Arduino code: We will write the code for Arduino to control the external
    appliance and communicate with iOS devices'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arduino代码：我们将编写Arduino代码来控制外部设备并与iOS设备通信
- en: 'The iOS code: We will write code for an iOS device'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS代码：我们将为iOS设备编写代码
- en: 'How to go further: More ideas will be provided to improve the project and learn
    more'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何更进一步：将提供更多想法来改进项目并学习更多
- en: iOS guided rover requirements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iOS 导航车需求
- en: 'We are going to develop the Arduino and iOS software to do the following:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将开发Arduino和iOS软件来完成以下工作：
- en: 'Control the direction and speed of a rover, powered by two motors from the
    iOS device by:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过以下方式从iOS设备控制由两个电机驱动的导航车的方向和速度：
- en: Using manual commands
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用手动命令
- en: Moving the iOS device in space
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在空间中移动iOS设备
- en: Using voice commands
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用语音命令
- en: Avoid obstacles
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免障碍
- en: Measure the slope and tilt angles so that the robot doesn't flip over
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测量斜率和倾斜角度，以便机器人不会翻倒
- en: Transfer commands and information back and forth between the rover and the iOS
    application by using the Bluetooth BLE.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用蓝牙BLE在导航车和iOS应用程序之间来回传输命令和信息。
- en: Hardware
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 硬件
- en: 'We will assume that you have already built a rover robot like the ones shown
    on the following sites:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将假设你已经构建了一个像以下网站展示的导航车机器人：
- en: '[http://bit.ly/1MzmIYs](http://bit.ly/1MzmIYs)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://bit.ly/1MzmIYs](http://bit.ly/1MzmIYs)'
- en: '[http://bit.ly/1Jo9qJS](http://bit.ly/1Jo9qJS)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://bit.ly/1Jo9qJS](http://bit.ly/1Jo9qJS)'
- en: '[http://bit.ly/1i7oTag](http://bit.ly/1i7oTag)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://bit.ly/1i7oTag](http://bit.ly/1i7oTag)'
- en: You can also buy two motors and two wheels (for more information, visit [http://bit.ly/1i7oWTG](http://bit.ly/1i7oWTG)
    and [http://bit.ly/1KeHtdf](http://bit.ly/1KeHtdf)) and make the chassis yourself
    with metal or wood.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以购买两个电机和两个轮子（更多信息，请访问 [http://bit.ly/1i7oWTG](http://bit.ly/1i7oWTG) 和 [http://bit.ly/1KeHtdf](http://bit.ly/1KeHtdf))，并用金属或木材自己制作底盘。
- en: You will find everything that you may need on eBay ([http://www.ebay.com](http://www.ebay.com))
    at an affordable price.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在eBay ([http://www.ebay.com](http://www.ebay.com)) 以可承受的价格找到你可能需要的所有东西。
- en: Additional electronic components
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外的电子组件
- en: 'In this project, we will need some additional components:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们需要一些额外的组件：
- en: Sparkfun DC Motor Driver TB6612FBG ([https://www.sparkfun.com/products/9457](https://www.sparkfun.com/products/9457)
    or [http://www.adafruit.com/product/2448](http://www.adafruit.com/product/2448))
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sparkfun DC Motor Driver TB6612FBG ([https://www.sparkfun.com/products/9457](https://www.sparkfun.com/products/9457)
    或 [http://www.adafruit.com/product/2448](http://www.adafruit.com/product/2448))
- en: Sharp GP2Y0A21YK Distance Measuring Sensor Unit ([https://www.sparkfun.com/products/242](https://www.sparkfun.com/products/242)),
    which can be replaced by similar units with minimum changes in the Arduino code
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sharp GP2Y0A21YK 距离测量传感器单元 ([https://www.sparkfun.com/products/242](https://www.sparkfun.com/products/242))，它可以由Arduino代码中更改最小的类似单元替换
- en: Adafruit ADXL345 Triple-Axis Accelerometer ([http://www.adafruit.com/products/1231](http://www.adafruit.com/products/1231))
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adafruit ADXL345 三轴加速度计 ([http://www.adafruit.com/products/1231](http://www.adafruit.com/products/1231))
- en: 330 Ω resistor 0.25w
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 330 Ω 电阻 0.25w
- en: A red LED
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个红色LED
- en: What's an accelerometer?
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是加速度计？
- en: In this section, we will briefly discuss what an accelerometer is and how to
    use it.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将简要讨论加速度计是什么以及如何使用它。
- en: An accelerometer is a device that measures acceleration along its 3 axes, and
    returns three voltage signals that are proportional to the acceleration.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 加速度计是一种测量其三个轴上加速度的设备，并返回三个与加速度成正比的电压信号。
- en: The acceleration measured by the accelerometer gives us information about the
    inclination of the accelerometer with respect to the terrestrial gravitational
    field.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 加速度计测量的加速度给我们提供了关于加速度计相对于地球重力场的倾斜信息。
- en: 'To understand how acceleration is related to the inclination of the accelerometer,
    let''s examine the situation depicted in the following figures, where we consider
    only two axes (*z* and *x*):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解加速度与加速度计倾斜的关系，让我们检查以下图示的情况，我们只考虑两个轴（*z* 和 *x*）：
- en: '![What''s an accelerometer?](img/image00196.jpeg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![什么是加速度计？](img/image00196.jpeg)'
- en: In figure **1**, the accelerometer has the *z* axis is parallel to the gravity
    (**g**), and the *x* axis is orthogonal to the gravity. Hence, the acceleration
    along the *x* axis is zero. In figure **2**, the accelerometer rotates at an angle
    **α**. The acceleration along the accelerometer *x* axis is gx, and gx is what
    the accelerometer returns as the acceleration along the x axis. In conclusion,
    by rotating the accelerometer, we have an acceleration along the accelerometer
    *x* axis that is proportional to the rotation itself. The same is true for the
    *y* axis that is pointing into the page.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在图 **1** 中，加速度计的 *z* 轴与重力（**g**）平行，而 *x* 轴与重力正交。因此，沿 *x* 轴的加速度为零。在图 **2** 中，加速度计以角度
    **α** 旋转。沿加速度计 *x* 轴的加速度是 gx，gx 是加速度计返回的沿 x 轴的加速度。总之，通过旋转加速度计，我们得到沿加速度计 *x* 轴的加速度，它与旋转本身成正比。同样，对于指向页面内部的
    *y* 轴也是如此。
- en: In this project, we use this behavior for mounting an accelerometer on the rover
    to measure its inclination along the transversal and the longitudinal axis. At
    the same time, we use the iOS device accelerometer to measure device inclination
    for controlling the direction and speed of the rover.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们利用这种特性将加速度计安装到探测车上来测量其在横向和纵向轴上的倾斜。同时，我们使用iOS设备的加速度计来测量设备倾斜，以控制探测车的方向和速度。
- en: Electronic circuit
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 电子电路
- en: A DC motor rotates in one direction when powered up and rotates in the opposite
    direction when the voltage polarity is inverted.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当直流电机通电时，它会朝一个方向旋转，而当电压极性反转时，它会朝相反的方向旋转。
- en: 'The following circuit diagrams depict ways to use switches to power the DC
    motor to invert the voltage polarity and rotation direction. In the following
    circuit diagram, the motor rotates in the clockwise direction:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 以下电路图展示了如何使用开关来给直流电机供电，以反转电压极性和旋转方向。在以下电路图中，电机按顺时针方向旋转：
- en: '![Electronic circuit](img/image00197.jpeg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![电子电路](img/image00197.jpeg)'
- en: 'While in the second case, it rotates in the anticlockwise direction:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 而在第二种情况下，它按逆时针方向旋转：
- en: '![Electronic circuit](img/image00198.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![电子电路](img/image00198.jpeg)'
- en: Transistors can replace switches in order to control the direction through electronic
    signals. A transistor-based circuit that replaces the four switches is called
    an H-bridge ([http://bit.ly/1JBmdrE](http://bit.ly/1JBmdrE)).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 晶体管可以替换开关，通过电子信号来控制方向。用晶体管替换四个开关的电路称为H桥 ([http://bit.ly/1JBmdrE](http://bit.ly/1JBmdrE))。
- en: Basically, an H-bridge is a circuit that allows you to control the DC motor
    direction through two input signals. When the first signal is high and the second
    one is low, the motor runs in one direction; when the first signal is low and
    the second one is high, the motor runs in the opposite direction. To control the
    speed of the motor, we also need a PWM signal ([https://www.arduino.cc/en/Tutorial/PWM](https://www.arduino.cc/en/Tutorial/PWM)).
    The TB6612FBG motor driver includes two H-bridge circuits to power the two motors
    up to 1A.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，H桥是一种电路，允许你通过两个输入信号来控制直流电机的方向。当第一个信号为高，第二个信号为低时，电机朝一个方向运行；当第一个信号为低，第二个信号为高时，电机朝相反方向运行。要控制电机的速度，我们还需要一个PWM信号（[https://www.arduino.cc/en/Tutorial/PWM](https://www.arduino.cc/en/Tutorial/PWM)）。TB6612FBG电机驱动器包含两个H桥电路，可以为两个电机提供高达1A的电源。
- en: 'The following table, derived from the TB6612FBG datasheet describes how to
    use the available input signals to control the motor:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格，源自TB6612FBG数据表，描述了如何使用可用的输入信号来控制电机：
- en: '| Input | Output |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 输入 | 输出 |'
- en: '| --- | --- |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| **IN1** | **IN2** | **PWM** | **STBY** | **OUT1** | **OUT2** | **Mode** |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| **IN1** | **IN2** | **PWM** | **STBY** | **OUT1** | **OUT2** | **模式** |'
- en: '| H | H | H/L | H | L | L | Short brake |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| H | H | H/L | H | L | L | 短时制动 |'
- en: '| L | H | H | H | L | H | Motor runs |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| L | H | H | H | L | H | 电机运行 |'
- en: '| L | H | L | L | Short brake |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| L | H | L | L | 短时制动 |'
- en: '| H | L | H | H | H | L | Motor runs in the opposite direction |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| H | L | H | H | H | L | 电机朝相反方向运行 |'
- en: '| L | H | L | L | Short brake |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| L | H | L | L | 短时制动 |'
- en: '| L | L | H | H | OFF (high impedance) | Stop |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| L | L | H | H | 关闭（高阻抗） | 停止 |'
- en: '| H/L | H/L | H/L | L | OFF (high impedance) | Standby |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| H/L | H/L | H/L | L | 关闭（高阻抗） | 等待 |'
- en: To make the motor run in a direction, we have to make IN1 low and IN2 high.
    The PWM signals control the motor speed. To make the motor run in the opposition
    direction, we have to make IN1 high and IN2 low, and the PWM signals still control
    the motor's speed.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 要使电机朝一个方向运行，我们必须将IN1置低，IN2置高。PWM信号控制电机速度。要使电机朝相反方向运行，我们必须将IN1置高，IN2置低，PWM信号仍然控制电机的速度。
- en: The PWM signals can be generated from Arduino by using the `analogWrite` function.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: PWM信号可以通过Arduino的`analogWrite`函数生成。
- en: 'The following electric diagram of the electronic circuit is what we need for
    the project:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 以下电子电路图是我们项目所需的：
- en: '![Electronic circuit](img/image00199.jpeg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![电子电路](img/image00199.jpeg)'
- en: As required, we need a distance sensor that has an analog output; the output
    voltage decreases as the distance to the front object decreases. The relation
    between the output voltage and distance is not linear (see the datasheet by visiting
    [https://www.sparkfun.com/datasheets/Components/GP2Y0A21YK.pdf](https://www.sparkfun.com/datasheets/Components/GP2Y0A21YK.pdf)),
    but it can be linearized in the range of the distance of interest. In our application,
    we just need to stop the rover when it is very close to an obstacle. So, we don't
    care much about the actual distance. The red LED shows when an obstacle is very
    close to the rover.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如要求，我们需要一个具有模拟输出的距离传感器；随着到前方物体的距离减小，输出电压降低。输出电压与距离之间的关系不是线性的（参见通过访问[https://www.sparkfun.com/datasheets/Components/GP2Y0A21YK.pdf](https://www.sparkfun.com/datasheets/Components/GP2Y0A21YK.pdf)获取的数据表），但在感兴趣的范围内可以线性化。在我们的应用中，我们只需要在漫游车非常接近障碍物时停止它。因此，我们不太关心实际距离。红色LED指示障碍物非常接近漫游车。
- en: ADXL345 is a 3-axis accelerometer. It measures the acceleration along its three
    axes (in [m/s²]). When the rover is completely at rest and leveled, the acceleration
    is 0 m/s² on the x axis, 0 m/s² on the y axis, and 9.8 m/s² on the z axis because
    of the gravitational force. When the rover is not leveled, the values read along
    the axis are different. When the measured values exceed a threshold, we know that
    the rover is going to flip over.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: ADXL345是一款3轴加速度计。它测量其三个轴上的加速度（单位为[m/s²]）。当漫游车完全静止且水平时，x轴上的加速度为0 m/s²，y轴上的加速度为0
    m/s²，z轴上的加速度为9.8 m/s²，这是由于重力作用。当漫游车未水平时，沿轴读取的值不同。当测量的值超过阈值时，我们知道漫游车将要翻倒。
- en: 'The following diagram shows how to mount the circuit on a breadboard:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了如何在面包板上安装电路：
- en: '![Electronic circuit](img/image00200.jpeg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![电子电路](img/image00200.jpeg)'
- en: 'You can see that we used two different power sources, one for Arduino and the
    electronic components, and the other for the motors. This was done for the following
    reasons:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到我们使用了两个不同的电源，一个用于Arduino和电子元件，另一个用于电机。这样做的原因如下：
- en: The motors can require a different voltage compared to the electronic components.
    The motor power source can have a different voltage up to 15V, as required by
    the TB6612FBG chip.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 电机可能需要与电子元件不同的电压。电机电源可以有不同的电压，高达 15V，这是 TB6612FBG 芯片所需的。
- en: Motors generate a lot of electric noise that can disturb the electronics. With
    this configuration, electronics and motors are electrically isolated.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 电机会产生大量的电噪声，可能会干扰电子设备。在这个配置中，电子设备和电机是电隔离的。
- en: The rover can operate for a longer time, especially by using rechargeable batteries.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 机器人可以运行更长的时间，特别是使用可充电电池。
- en: Tip
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Motor wiring**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**电机布线**'
- en: In case a motor spins in the wrong direction, you have to invert its wires.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个电机以错误的方向旋转，你必须反转其电线。
- en: How to make the rover turn
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何使机器人转向
- en: When both the motors spin at the same speed, the rover goes straight. To make
    it turn right, reduce the speed of the right motor. The more we reduce the speed,
    the more the rover turns. This is exactly the same as the method that is used
    to make the rover turn left.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当两个电机以相同的速度旋转时，机器人直线行驶。要使其向右转，降低右轮的速度。我们降低的速度越多，机器人转得越厉害。这与使机器人向左转的方法完全相同。
- en: That said, the Arduino code has to manage the rotation speed of the two motors
    in order to control the direction of the motor.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，Arduino 代码必须管理两个电机的旋转速度，以控制电机的方向。
- en: How to mount the accelerometer
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何安装加速度计
- en: It's very important that the accelerometer board be mounted in the right position
    in order to properly read acceleration and work with the Arduino code that is
    shown in the next chapter. The accelerometer board has to be tightly screwed to
    the rover chassis with a nut and a bolt (it is better to use two nuts and bolts,
    one for each side).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 确保加速度计板安装正确位置非常重要，以便正确读取加速度并与下一章中显示的 Arduino 代码一起工作。加速度计板必须用螺母和螺栓紧紧固定在机器人底盘上（最好使用两个螺母和螺栓，每个侧面一个）。
- en: 'The schema is shown in the following image:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 方案如下所示：
- en: '![How to mount the accelerometer](img/image00201.jpeg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![如何安装加速度计](img/image00201.jpeg)'
- en: Arduino code
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Arduino 代码
- en: The full code of this project can be downloaded from [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目的完整代码可以从[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)下载。
- en: To have a better understanding of the explanations in the next few paragraphs,
    open the downloaded code while reading.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解下几段中的解释，请在阅读时打开下载的代码。
- en: 'Before going any further, we need to install the following additional libraries
    from Adafruit:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，我们需要从 Adafruit 安装以下额外的库：
- en: '**Adafruit ADXL345**: This is used to get measurements from the ADXL345 accelerometer'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Adafruit ADXL345**：这是用来从 ADXL345 加速度计获取测量数据的'
- en: '**Adafruit Unified Sensor**: This is a general library that is required from
    the previous one'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Adafruit Unified Sensor**：这是一个通用的库，需要从上一个库中获取'
- en: To install the libraries into the Arduino IDE, open the menu **Sketch** | **Include
    Library** | **Manage Libraries …**. For more information, see [Chapter 2](part0019.xhtml#aid-I3QM1
    "Chapter 2. Bluetooth Pet Door Locker"), *Bluetooth Pet Door Locker*.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要将库安装到 Arduino IDE 中，请打开菜单 **草图** | **包含库** | **管理库 …**。有关更多信息，请参阅[第 2 章](part0019.xhtml#aid-I3QM1
    "第 2 章。蓝牙宠物门锁"), *蓝牙宠物门锁*。
- en: Setup code
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置代码
- en: Please refer to the downloaded code, since the setup code is quite simple and
    doesn't require a detailed explanation.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考下载的代码，因为设置代码相当简单，不需要详细解释。
- en: 'Just note that `currentSpeed`, `leftSpeed`, and `rightSpeed` are: the current
    speed of the rover, the speed reduction of the left wheel used to make the rover
    turn left, and the speed reduction of the right wheel used to make the rover turn
    right respectively. They are obviously all set to zero in the setup function.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`currentSpeed`、`leftSpeed` 和 `rightSpeed` 分别是：机器人的当前速度、用于使机器人向左转的左轮速度降低，以及用于使机器人向右转的右轮速度降低。它们显然都在设置函数中设置为零。
- en: The `goingForward` variable indicates whether the rover is going forward or
    backward, and it is initially set to yes (forward).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '`goingForward` 变量表示机器人是向前还是向后移动，它最初被设置为是（向前）。'
- en: The final lines initialize the accelerometer, as required by the library. The
    `xOffset` and `yOffset` variables are about tuning the accelerometer readings
    when the rover is at rest and in a plane. We will talk about them in the *Testing
    and tuning* section.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 最后几行初始化加速度计，这是库所要求的。`xOffset`和`yOffset`变量是关于在漫游车静止和平面时调整加速度计读数的。我们将在*测试和调整*部分讨论它们。
- en: Motor control functions
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 电机控制函数
- en: 'Before getting into the explanation of the main code, we will take a look at
    the motor control functions, which are as follows:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在解释主代码之前，我们将查看以下电机控制函数：
- en: '`forward`: This configures the motor control to make the rover move forward'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`forward`: 这配置电机控制，使漫游车向前移动'
- en: '`backward`: This configures the motor control to make the rover move backward'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`backward`: 这配置电机控制，使漫游车向后移动'
- en: '`brake`: This stops the rover'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`brake`: 这使漫游车停止'
- en: '`throttle`: This controls the speed of the rover and its direction'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`throttle`: 这控制着漫游车的速度和方向'
- en: 'From the previous table for TB6612FBG (row 2), to make the motors go forward,
    we need to set IN1 to low and IN2 to high. This is exactly what the `forward`
    function does for both the motors:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的TB6612FBG表格（第2行）来看，为了使电机前进，我们需要将IN1设置为低，IN2设置为高。这正是`forward`函数对两个电机所做的：
- en: '[PRE0]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `backward` function is similar. From row 3 of the previous table, we need
    to set IN1 to high and IN2 to low to change the direction, as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`backward`函数类似。从之前的表格第3行来看，我们需要将IN1设置为高，IN2设置为低以改变方向，如下所示：'
- en: '[PRE1]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In both the functions, we set `STBY` to `HIGH` in case we previously stopped
    the rover by setting `STBY` to `LOW`.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两个函数中，我们设置`STBY`为`HIGH`，以防我们之前通过将`STBY`设置为`LOW`来停止了漫游车。
- en: 'Again, by using the table (row 5), use the following function to stop the rover:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，通过使用表格（第5行），使用以下函数来停止漫游车：
- en: '[PRE2]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The `throttle` function is very important as it controls the speed and direction
    of the rover:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`throttle`函数非常重要，因为它控制着漫游车的速度和方向：'
- en: '[PRE3]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To set the speed of each motor, we have to set an appropriate PWM signal to
    the PWM pin.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置每个电机的速度，我们必须将适当的PWM信号设置到PWM引脚。
- en: If you need to move the rover in a straight line, set the speed in such a way
    that it is equal for both motors. Otherwise, reduce the speed of the wheel that
    is on the rover's side, which we want to turn to.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要使漫游车直线行驶，设置的速度应使两个电机相等。否则，降低位于漫游车侧轮的速度，这是我们想要转向的方向。
- en: Main program
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主程序
- en: 'The `loop` function of the rover control software is not very complex, and
    is as follows:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 漫游车控制软件的`loop`函数并不复杂，如下所示：
- en: '[PRE4]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: When an iOS device is connected, after every `ACCELEROMETER_CHECK_INTERVAL`
    milliseconds, the acceleration values along the *x* and *y* axes are sent to the
    iOS device. Then, the distance sensor is read. If the distance from an obstacle
    is greater than `DISTANCETHRESHOLD`, the rover stops and the LED on the rover
    is turned on.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 当iOS设备连接后，每经过`ACCELEROMETER_CHECK_INTERVAL`毫秒，沿*x*和*y*轴的加速度值都会发送到iOS设备。然后，读取距离传感器。如果障碍物的距离大于`DISTANCETHRESHOLD`，漫游车停止，并且漫游车上的LED灯亮起。
- en: 'Since the distance sensor readings are quite variable (like with most of the
    analog sensors), the mean value of 16 readings is used through the following lines:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 由于距离传感器的读数相当多变（就像大多数模拟传感器一样），以下几行使用了16次读数的平均值：
- en: '[PRE5]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To control the rover, the iOS function has to send the following commands:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 要控制漫游车，iOS功能必须发送以下命令：
- en: 'F: This is used to move the rover forward.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'F: 这用于使漫游车向前移动。'
- en: 'B: This is used to move the rover backward.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'B: 这用于使漫游车向后移动。'
- en: 'T=<speed>: This is used to move the rover at a speed of <speed>. The <speed>
    lies in the 0-100 range.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'T=<速度>: 这用于以<速度>的速度移动漫游车。速度范围在0-100之间。'
- en: 'R=<speed>: This is used to move the rover right by reducing the current speed
    of the right motor to <speed>. The <speed> lies in the 0-100 range.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'R=<速度>: 这用于通过将右电机当前速度降低到<速度>来使漫游车向右移动。速度范围在0-100之间。'
- en: 'L=<speed>: This is used to move the rover left by reducing the current speed
    of the left motor to <speed>. The <speed> lies in the 0-100 range.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'L=<速度>: 这用于通过将左电机当前速度降低到<速度>来使漫游车向左移动。速度范围在0-100之间。'
- en: 'As we already know from the *Bluetooth Pet Locker* project in [Chapter 2](part0019.xhtml#aid-I3QM1
    "Chapter 2. Bluetooth Pet Door Locker"), *Bluetooth Pet Door Locker*, commands
    from the iOS controller are received in the `rxCallback` function:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们从[第2章](part0019.xhtml#aid-I3QM1 "第2章。蓝牙宠物门锁")中的*蓝牙宠物门锁*项目所知，*蓝牙宠物门锁*，iOS控制器的命令在`rxCallback`函数中被接收：
- en: '[PRE6]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The F(orward) and B(ackward) commands are very easy to handle, since we have
    the respective function to call.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: F(Forward)和B(Backward)命令处理起来非常简单，因为我们有相应的函数可以调用。
- en: For the T(hrottle) command, we get the required reduction speed in the `value`
    variable, and we proportionally scale it from the range of 0-100 to the range
    0-255 (`currentSpeed = map(atoi(value), 0, 100, 0, 255)`). This is the expected
    range for the PWM signal.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 对于T(hrottle)命令，我们在`value`变量中获取所需的速度降低值，并将其从0-100的范围按比例缩放到0-255的范围（`currentSpeed
    = map(atoi(value), 0, 100, 0, 255)`）。这是PWM信号的预期范围。
- en: The function ends by calling the `throttle` function, which sets the speed for
    both the motors, thus setting the PWM signal.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 函数通过调用`throttle`函数结束，该函数为两个电机设置速度，从而设置PWM信号。
- en: For the R(ight) command, we get the required reduction speed in the `value`
    variable. Then, we proportionally scale the 0-100 to the range 0-`currentSpeed`.
    In fact, the speed reduction of the right motor cannot be larger than the actual
    motor speed. In other words, when the command value is 255 (the maximum rotation
    speed), the speed of the right motor is reduced to 0, and the rover turns right.
    The same thing happens for the L(eft) command.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 对于R(ight)命令，我们在`value`变量中获取所需的速度降低值。然后，我们将0-100的范围按比例缩放到0-`currentSpeed`的范围。实际上，右电机速度降低不能超过实际电机速度。换句话说，当命令值为255（最大旋转速度）时，右电机的速度降低到0，探测车向右转。对于L(eft)命令也是如此。
- en: iOS code
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iOS代码
- en: In this chapter, we are going to look at the iOS application that remotely controls
    the rover. This application allows us to manually control the rover by the means
    of two sliders, that emulate the steering wheel and the throttle.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将查看远程控制探测车的iOS应用程序。这个应用程序允许我们通过两个滑块手动控制探测车，这两个滑块模拟方向盘和油门。
- en: However, we are going to push the application a lot further by using the iOS
    device accelerometer and even voice commands. These techniques can be successfully
    applied to many other projects too.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们将通过使用iOS设备加速度计甚至语音命令将应用程序推进得更远。这些技术也可以成功地应用于许多其他项目。
- en: Let's take a step at a time so that you can understand every important detail.
    We will start from the manual control. As always, the full code of this project
    can be downloaded from [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一步一步来，这样你可以理解每一个重要的细节。我们将从手动控制开始。和往常一样，这个项目的完整代码可以从[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)下载。
- en: To have a better understanding of the explanations in the next paragraphs, open
    the downloaded code while reading.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解下一段落的解释，请在阅读时打开下载的代码。
- en: Creating the Xcode project
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建Xcode项目
- en: 'We will create a new project as we already did in the previous chapters. The
    following are the parameters for the new project:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个新的项目，就像之前章节中做的那样。以下是新项目的参数：
- en: '**Project Type**: Tabbed application'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目类型**：分页应用'
- en: '**Product Name**: Rover'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**产品名称**：探测车'
- en: '**Language**: Objective-C'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语言**：Objective-C'
- en: '**Devices**: Universal'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设备**：通用'
- en: 'In the project''s options, we need to deselect the following options:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目的选项中，我们需要取消选择以下选项：
- en: '**Landscape Right**'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**横屏向右**'
- en: '**Landscape Left**'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**横屏向左**'
- en: 'We do this because we are going to use the iOS accelerometer, and we don''t
    want the screen to rotate when we rotate the device (see the following screenshot).
    To access the project''s options, perform the following steps:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们这样做是因为我们打算使用iOS加速度计，我们不希望设备旋转时屏幕也旋转（见以下截图）。要访问项目的选项，请执行以下步骤：
- en: Select the project in the left pane of Xcode.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Xcode的左侧窗格中选择项目。
- en: Select the **General** tab in the right pane.![Creating the Xcode project](img/image00202.jpeg)
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧窗格中选择**通用**选项卡。![创建Xcode项目](img/image00202.jpeg)
- en: We need additional code with the graphics components to show the rover inclination
    by the means of two gauges. The library can be downloaded from [https://github.com/sabymike/MSSimpleGauge](https://github.com/sabymike/MSSimpleGauge).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要额外的代码和图形组件来通过两个仪表显示探测车的倾斜角度。该库可以从[https://github.com/sabymike/MSSimpleGauge](https://github.com/sabymike/MSSimpleGauge)下载。
- en: 'To install the additional code, perform the following steps:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装额外的代码，请执行以下步骤：
- en: Open the preceding link and click on the **Download ZIP** button on the right.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开前面的链接，点击右侧的**下载ZIP**按钮。
- en: Unzip the downloaded ZIP file.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压下载的ZIP文件。
- en: Open the `Gauges` folder and copy the files to the `Rover` folder of your project.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`Gauges`文件夹，并将文件复制到项目的`Rover`文件夹中。
- en: Select the **Rover** group in Xcode and right-click on it. Select **Add Files
    to "Rover"…**. Then, select the files that you just copied and click on **Add**.
    Make sure that **Copy items if needed** is selected (see the following screenshot):![Creating
    the Xcode project](img/image00203.jpeg)
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Xcode中选择**Rover**组，右键单击它。选择**将文件添加到"Rover"…**。然后，选择您刚刚复制的文件，并点击**添加**。确保已选中**如果需要则复制项**（见以下截图）：![创建Xcode项目](img/image00203.jpeg)
- en: In Xcode, select the files that you just added, right-click on them, select
    **New Group from Selection**, and then enter `Gauges`. This helps us keep the
    code organized.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Xcode中，选择您刚刚添加的文件，右键单击它们，选择**从选择新建组**，然后输入`Gauges`。这有助于我们保持代码的整洁。
- en: To avoid a compilation error, open the file `MSArcLayer.h` and add `#import
    <UIKit/UIKit.h>` just before `#import <QuartzCore/QuartzCore.h>`.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了避免编译错误，打开文件`MSArcLayer.h`，并在`#import <QuartzCore/QuartzCore.h>`之前添加`#import
    <UIKit/UIKit.h>`。
- en: We also need the library to accept voice commands (OpenEars), which can be downloaded
    from [http://www.politepix.com/openears/](http://www.politepix.com/openears/).
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要库接受语音命令（OpenEars），可以从[http://www.politepix.com/openears/](http://www.politepix.com/openears/)下载。
- en: 'Click on the **Download OpenEars** button. To install the library, you have
    to perform the following steps:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**下载OpenEars**按钮。要安装库，您必须执行以下步骤：
- en: Uncompress the downloaded file.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压缩下载的文件。
- en: Inside your downloaded distribution, there is a folder called `Framework`. Drag
    the `Framework` folder into your app project in Xcode.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您下载的发行版中，有一个名为`Framework`的文件夹。将`Framework`文件夹拖放到Xcode中的您的应用程序项目中。
- en: Now that we have configured the required additional libraries, we can start
    creating the application.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经配置了所需的附加库，我们可以开始创建应用程序。
- en: 'The structure of this project is very close to the Pet Door Locker. So, we
    can reuse at least a part of the user interface and the code, by performing the
    following steps:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 此项目的结构非常接近Pet Door Locker。因此，我们可以通过以下步骤重用至少一部分用户界面和代码：
- en: Select **FirstViewController.h** and **FirstViewController.m**, right-click
    on them, and click on **Delete** (see the following screenshot). Then, click on
    **Move to Trash**:![Creating the Xcode project](img/image00204.jpeg)
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**FirstViewController.h**和**FirstViewController.m**，右键单击它们，并点击**删除**（见以下截图）。然后，点击**移动到废纸篓**：![创建Xcode项目](img/image00204.jpeg)
- en: By using the same procedure, delete **SecondViewController** and **Main.storyboard**.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过使用相同的程序，删除**SecondViewController**和**Main.storyboard**。
- en: Open the **PetDoorLocker** project in Xcode.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Xcode中打开**PetDoorLocker**项目。
- en: 'Select the following files and drag and drop them to the **Rover** project:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择以下文件，并将它们拖放到**Rover**项目中：
- en: '**PetDoorLockerViewController.h**'
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PetDoorLockerViewController.h**'
- en: '**PetDoorLockerViewController.m**'
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PetDoorLockerViewController.m**'
- en: '**BLEConnectionViewController.h**'
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**BLEConnectionViewController.h**'
- en: '**BLEConnectionViewController.m**'
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**BLEConnectionViewController.m**'
- en: '**Main.storyboard**'
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Main.storyboard**'
- en: 'Be sure that **Copy items if needed** is selected, and then click on **Finish**:'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保已选中**如果需要则复制项**，然后点击**完成**：
- en: Note
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you have added icons to the Tab Bar, don't forget to drag and drop them too.
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您已经将图标添加到标签栏中，别忘了也将它们拖放过来。
- en: Rename `PetDoorLockerViewController` to `RoverViewController` by using the same
    procedure that we used in the previous chapters.
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用我们在前几章中使用的相同程序，将`PetDoorLockerViewController`重命名为`RoverViewController`。
- en: Open the **Main.storyboard** and locate the main **View** controller.
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**Main.storyboard**并定位主**视图**控制器。
- en: 'Delete the following GUI components:'
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除以下GUI组件：
- en: The **Door Status**, **Temperature**, **Label**, and **Lock** labels
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**门状态**、**温度**、**标签**和**锁**标签'
- en: The **switch** component
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开关**组件'
- en: Move the status view close to the **connect** button and update its Layout Constraints.
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将状态视图移至**连接**按钮附近，并更新其布局约束。
- en: Add the GUI components and the related Layout Constraints, as shown in the following
    screenshot:![Creating the Xcode project](img/image00205.jpeg)
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加如图所示的GUI组件和相关布局约束：![创建Xcode项目](img/image00205.jpeg)
- en: At the top, there are two UIViews for which, the size is 64 x 128 and the class
    is MSRangeGauge (change it in the Property Inspector)
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在顶部，有两个UIView，其大小为64 x 128，类为MSRangeGauge（在属性检查器中更改它）
- en: 'For the **Throttle** slider, go to the Property Inspector and set the following
    values:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**节流**滑块，转到属性检查器并设置以下值：
- en: '**Minimum Value**: 0'
  id: totrans-184
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最小值**：0'
- en: '**Maximum Value**: 100'
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最大值**：100'
- en: '**Current Value**: 0'
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**当前值**：0'
- en: '**Thumb Tin**: Red or whatever you like'
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**滑块拇指**：红色或您喜欢的任何颜色'
- en: 'For the **Steering** slider, go to the Property Inspector and set the following
    values:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 **Steering** 滑块，转到属性检查器并设置以下值：
- en: '**Minimum Value**: 0'
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最小值**：0'
- en: '**Maximum Value**: 200'
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最大值**：200'
- en: '**Current Value**: 100'
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**当前值**：100'
- en: For the Segment Control, go to the Property Inspector and set **Segments** to
    3.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于分段控制器，转到属性检查器并将 **Segments** 设置为 3。
- en: 'Change the titles by double-clicking on each segment and entering the following
    values:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过双击每个分段并输入以下值来更改标题：
- en: Manual
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动
- en: Accelerometer
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加速度计
- en: Voice
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语音
- en: Select the View Controller container and in the Identity Inspector, change **Class**
    to **RoverViewController**.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择视图控制器容器，并在身份检查器中，将 **Class** 更改为 **RoverViewController**。
- en: In the `RoverViewController.h` file, add `#import "MSRangeGauge.h"`.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `RoverViewController.h` 文件中，添加 `#import "MSRangeGauge.h"`。
- en: 'Link the GUI components to the RoverViewController code, as follows:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 GUI 组件连接到 RoverViewController 代码，如下所示：
- en: '[PRE7]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In your `RoverViewController.m`, there still are some references to the older
    project. Don't bother about these references. We will remove them in the following
    sections.
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在你的 `RoverViewController.m` 中，还有一些对旧项目的引用。不要担心这些引用。我们将在以下部分中删除它们。
- en: 'Link the Throttle slider to the method, as follows: `(IBAction)throttleChanged:(UISlider
    *)sender`.'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将油门滑块连接到方法，如下所示：`(IBAction)throttleChanged:(UISlider *)sender`。
- en: 'Link the Steering slider to the method, as follows: `(IBAction)steeringWheelChanged:(UISlider
    *)sender`.'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将转向滑块连接到方法，如下所示：`(IBAction)steeringWheelChanged:(UISlider *)sender`。
- en: 'Link the forward/backward switch to the method, as follows: `(IBAction)directionChanged:(UISwitch
    *)sender`.'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将前后开关连接到方法，如下所示：`(IBAction)directionChanged:(UISwitch *)sender`。
- en: 'Link the mode segment controller with the method, as follows: `(IBAction)modeChange:(UISegmentedControl
    *)sender`.'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模式分段控制器与方法连接，如下所示：`(IBAction)modeChange:(UISegmentedControl *)sender`。
- en: Writing code for BLEConnectionViewController
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写 BLEConnectionViewController 的代码
- en: Since we have copied this View Controller from the PetDoorLocker project, we
    don't need to change it.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经从 PetDoorLocker 项目中复制了这个视图控制器，我们不需要对其进行更改。
- en: We saved some work!
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我们节省了一些工作！
- en: Writing code for RoverViewController
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写 RoverViewController 的代码
- en: 'First, we have to remove the unnecessary code from the previous PetDoorLocker
    project that we don''t need anymore, by performing the following steps:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们必须通过以下步骤从之前的 PetDoorLocker 项目中删除不再需要的多余代码：
- en: Open `RoverViewController.m`.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `RoverViewController.m`。
- en: 'Remove the following lines:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除以下行：
- en: '[PRE8]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Remove the lines that refer to `_temperature` and `_doorStatus` in the code.
    Please refer to the downloaded code in case you have any doubt.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除代码中关于 `_temperature` 和 `_doorStatus` 的行。如有疑问，请参考下载的代码。
- en: 'Empty the `dataReceived` function; we will rewrite it later:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清空 `dataReceived` 函数；我们稍后会重写它：
- en: '[PRE9]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Completely remove the `switchChanged` function.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完全删除 `switchChanged` 函数。
- en: We can now start writing new code to control our rover.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以开始编写新的代码来控制我们的漫游车。
- en: Let's start from the easy part—receiving acceleration data from the rover. This
    data gives us information about the rover's inclination along its longitudinal
    and transverse axis.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从简单的部分开始——从漫游车接收加速度数据。这些数据提供了关于漫游车沿其纵向和横向轴倾斜的信息。
- en: 'This information will be shown by the two gauges (RMRangeGauges) that we added
    in the main screen. The gauges have to be initialized in the viewDidLoad method,
    as follows:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 此信息将通过我们在主屏幕中添加的两个仪表（RMRangeGauges）显示。仪表必须在 `viewDidLoad` 方法中初始化，如下所示：
- en: '[PRE10]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The code is very easy to understand, thanks to the self-documenting names of
    the methods.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 代码非常易于理解，多亏了方法的自文档命名。
- en: 'Since the gauges are horizontal and don''t have any features to show the needle
    vertically, we use the following instruction:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 由于仪表是水平的，并且没有显示指针垂直方向的功能，我们使用以下指令：
- en: '[PRE11]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: With the preceding code, we rotate the first gauge by 90 degrees in order to
    have a better indication of the vertical inclination.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 通过前面的代码，我们将第一个仪表旋转90度，以便更好地指示垂直倾斜。
- en: 'The inclination data is received by the dataReceived method as a string: <vertical
    inclination>:<horizontal inclination>, and the values are set to the two gauges,
    as follows:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 倾斜数据以字符串形式通过 `dataReceived` 方法接收：<垂直倾斜>:<水平倾斜>，并将值设置为两个仪表，如下所示：
- en: '[PRE12]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'In the `didDisconnectPeripheral` method, which is called when the Bluetooth
    device disconnects, we have to reset the position of the two gauges by adding
    the following lines:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `didDisconnectPeripheral` 方法中，当蓝牙设备断开连接时调用，我们必须通过添加以下行来重置两个仪表的位置：
- en: '[PRE13]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Since we have three modes to operate the Rover—manually, by using the iOS accelerometer,
    and through voice commands—we are going to divide the code writing into three
    different sections to have a better understanding of the code.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们有三种操作漫游车的方式——手动、使用iOS加速度计和通过语音命令——我们将把代码编写分成三个不同的部分，以便更好地理解代码。
- en: Code to control the rover manually
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 控制漫游车的手动代码
- en: For this scenario, we have to write the code that manages the Throttle slider
    to control the speed of the rover, the Steering slider to control its direction,
    and the switch to control its forward or backward movements.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个场景，我们需要编写管理油门滑块的代码来控制漫游车的速度，控制方向的转向滑块，以及控制其前进或后退运动的开关。
- en: 'The code for the Throttle slider is quite simple, since we only have to send
    a message to the rover in the form of T=<speed>, as follows:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 油门滑块的代码相当简单，因为我们只需要以T=<速度>的形式向漫游车发送一条消息，如下所示：
- en: '[PRE14]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The method that is used to control the direction is not that complex. It sends
    two messages depending on the position of the slider with respect to its middle—R=<speed>
    to turn the rover towards the right and L=<speed> to turn the rover towards the
    left:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 用于控制方向的方 法并不复杂。它根据滑块相对于中间位置的位置发送两条消息——R=<速度>使漫游车向右转，L=<速度>使漫游车向左转：
- en: '[PRE15]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To complete the management of the two sliders, we need to change the `didConnectPeripheral`
    method so that when the iOS device connects to the Rover, the two sliders are
    reset to their initial position, as follows:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成对两个滑块的管理，我们需要更改`didConnectPeripheral`方法，以便当iOS设备连接到漫游车时，两个滑块重置到初始位置，如下所示：
- en: '[PRE16]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The last method that we need to write is to control the forward/backward direction.
    We need to send two simple messages to the rover—`F` is for forward and `B` is
    for backward:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要编写的最后一个方法是控制前后方向。我们需要向漫游车发送两条简单的消息——`F`表示前进，`B`表示后退：
- en: '[PRE17]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: To avoid undesirable behavior, each time we switch the direction, the rover
    is stopped, by setting the speed to 0 via the `[self throttleChanged:_throttleSlider]`
    method call.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免不希望的行为，每次我们切换方向时，通过调用`[self throttleChanged:_throttleSlider]`方法将速度设置为0，使漫游车停止。
- en: We are now ready for the rover's first test.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在准备好进行漫游车的第一次测试。
- en: Testing the Rover with manual driving
  id: totrans-244
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用手动驾驶测试漫游车
- en: 'To perform the first rover test, you can use the following procedure:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行第一次漫游车测试，你可以使用以下步骤：
- en: Upload the Arduino code and check the console for any error message. If everything
    goes fine, Arduino is ready to take control over your rover.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传Arduino代码并检查控制台是否有任何错误信息。如果一切顺利，Arduino就准备好控制你的漫游车了。
- en: Power up both the motors and Arduino itself.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开两个电机和Arduino本身。
- en: Upload the iOS application to your device.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将iOS应用程序上传到你的设备。
- en: Go to the second tab to scan for the Bluetooth BLE breakout board.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往第二个标签页以扫描蓝牙BLE扩展板。
- en: Go to the first tab and progressively increase the Throttle slider. You should
    see the rover moving forward.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到第一个标签页，并逐步增加油门滑块。你应该能看到漫游车向前移动。
- en: You can make it move right and left by moving the Steering slider.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过移动转向滑块来使其左右移动。
- en: Turn the direction switch, the rover stops. On increasing the speed again, the
    rover moves in the opposite direction it was moving before.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转动方向开关，漫游车停止。再次增加速度时，漫游车将朝相反方向移动。
- en: When going on a slope, you will see the needle of the vertical and/or the horizontal
    gauge move up or down and/or left or right.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当上坡时，你会看到垂直和/或水平仪表的指针上下左右移动。
- en: When moving against an obstacle, the rover should stop before colliding against
    it.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当遇到障碍物时，漫游车应该在碰撞之前停止。
- en: Tip
  id: totrans-255
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Weird rover movements**'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '**奇怪的漫游车移动**'
- en: If the rover moves in a wrong direction, you probably have not wired either
    or both of the motors properly. Swap the wires of the motor that is spinning in
    the wrong direction.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 如果漫游车移动到错误的方向，你可能没有正确连接一个或两个电机。交换错误方向旋转的电机线。
- en: '**Weird gauge indications**'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '**奇怪的仪表指示**'
- en: If the gauges don't seem to be moving accordingly with the slope, don't worry
    too much about this for now. We are going to calibrate them later. For now, we
    only have to check whether the data is being properly transferred from the rover
    to the iOS device.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 如果仪表似乎没有根据斜坡移动，现在不必过于担心这个问题。我们稍后会校准它们。现在，我们只需要检查数据是否从漫游车正确传输到iOS设备。
- en: Tip
  id: totrans-260
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Missing gauge indications**'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '**缺失的仪表指示**'
- en: 'If you cannot see any indication from the gauges, there may be an error in
    cabling the ADXL345 device. First double-check whether the Arduino console has
    any error message. If this doesn''t help, remove the comments from the following
    two lines in the Arduino code (the `main loop`):'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有看到仪表的任何指示，可能是在ADXL345设备布线时出现了错误。首先，请再次检查Arduino控制台是否有任何错误消息。如果这没有帮助，请从Arduino代码（`main
    loop`）中的以下两行取消注释：
- en: '[PRE18]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Connect the iOS device again and check the Arduino console. If you can see the
    printed numbers, then the accelerometer is working and you have to double-check
    the iOS code.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 再次连接iOS设备并检查Arduino控制台。如果你能看到打印的数字，那么加速度计正在工作，你必须再次检查iOS代码。
- en: '**The rover hits obstacles**'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '**机器人撞到障碍物**'
- en: 'The distance sensor is sensitive to the shape, reflectance, and position of
    the obstacles and sometimes, it''s not able to avoid them. This is the reason
    why different types of sensors are used at the same time, and in different positions
    in real-world robots. To check whether the sensor is properly connected and it''s
    working as expected, you can remove the comment in the following line (in the
    `main loop`):'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 距离传感器对障碍物的形状、反射率和位置敏感，有时它无法避开它们。这就是为什么在现实世界的机器人中同时使用不同类型的传感器，并在不同的位置使用的原因。为了检查传感器是否正确连接并且按预期工作，你可以在以下行（在`main
    loop`中）取消注释：
- en: '[PRE19]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: You should now be able to see the distance in the Arduino console.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该能够在Arduino控制台中看到距离。
- en: Code for controlling the rover by the means of the iOS accelerometer
  id: totrans-269
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过iOS加速度计控制机器人的代码
- en: We are now going to improve our app by using the iOS accelerometer to control
    the steering and the throttle.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将通过使用iOS加速度计来控制转向和油门来改进我们的应用程序。
- en: As we learned earlier, any deviation in the iOS device position can be measured
    and used to send appropriate commands to the rover with the help of the accelerometer
    that we mounted on the rover.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前所学的，iOS设备位置的任何偏差都可以被测量并使用，通过我们安装在机器人上的加速度计发送适当的命令。
- en: 'To access the accelerometer information, we need to use the `CMMotionManager`
    class. First, we add `#import <CoreMotion/CoreMotion.h>` to `RoverViewController.h`.
    Then, we create a property, as follows:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问加速度计信息，我们需要使用`CMMotionManager`类。首先，我们在`RoverViewController.h`中添加`#import
    <CoreMotion/CoreMotion.h>`。然后，我们创建一个属性，如下所示：
- en: '[PRE20]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Finally, we initialize it in the `viewDidLoad` method, as follows:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们在`viewDidLoad`方法中初始化它，如下所示：
- en: '[PRE21]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The accelerometer is activated when the second button is selected on the segment
    controller, and the related method is called:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 当在分段控制器上选择第二个按钮时，加速度计被激活，并调用相关的方法：
- en: '[PRE22]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The `useAccelerometer` method actually activates the accelerometer:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '`useAccelerometer`方法实际上激活了加速度计：'
- en: '[PRE23]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The `[_motionManager setDeviceMotionUpdateInterval:0.2]` method instructs the
    motion manager to update our code with acceleration values every 0.2 seconds.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '`[_motionManager setDeviceMotionUpdateInterval:0.2]`方法指示运动管理器每0.2秒更新我们的代码，以加速度值。'
- en: The next method actually starts updating our code of accelerometer values, which
    are received in the handler block.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个方法实际上开始更新我们的加速度计值代码，这些值是在处理程序块中接收到的。
- en: Fortunately, iOS provide us with not only the actual value of acceleration along
    the three axes of the device, but also the quaternions. Don't be afraid of the
    name! They simply represent orientations and rotations of the iOS device in three
    dimensions (if you like mathematics, visit [https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation](https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation)).
    From them, you can easily calculate the two angles of the pitch and roll of the
    iOS device (see the following image).
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，iOS不仅提供了设备三个轴的实际加速度值，还提供了四元数。不要害怕这个名字！它们只是简单地表示iOS设备在三维空间中的方向和旋转（如果你喜欢数学，请访问[https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation](https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation)）。从它们中，你可以轻松计算出iOS设备的俯仰和滚转两个角度（见以下图像）。
- en: 'If you have a liking for mathematics, visit [https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles](https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles):'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢数学，请访问[https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles](https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles)：
- en: '![Code for controlling the rover by the means of the iOS accelerometer](img/image00206.jpeg)'
  id: totrans-284
  prefs: []
  type: TYPE_IMG
  zh: '![通过iOS加速度计控制机器人的代码](img/image00206.jpeg)'
- en: The roll is used to change the rover's direction of movement, and the pitch
    is used to control the throttle. The `-(void)sendAccelerometersCommands:(CMQuaternion)quad`
    method calculatesthe two angles and generates the messages that need to be sent
    to the rover, as we did in `throttleChanged` and `steeringWheelChanged`.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 滚转用于改变漫游车的运动方向，俯仰用于控制油门。`-(void)sendAccelerometersCommands:(CMQuaternion)quad`方法计算这两个角度并生成需要发送到漫游车的消息，就像我们在`throttleChanged`和`steeringWheelChanged`中做的那样。
- en: Driving the rover by the means of the iOS device movement
  id: totrans-286
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过iOS设备移动来驾驶漫游车
- en: To test the rover, tap on the accelerometer, switch to forward, and hold the
    iOS device vertically. By moving the device forward around the pitch axis (see
    the previous image), the rover should start moving forward. The more the device
    moves forward, the more the rover's speed increases. By moving the device backward,
    the rover's speed reduces, and you can stop the rover by using this movement.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试漫游车，点击加速度计，切换到前进，并垂直握持iOS设备。通过在俯仰轴周围移动设备（参见上一张图片），漫游车应该开始向前移动。设备移动得越远，漫游车的速度就越快。通过向后移动设备，漫游车的速度会降低，你可以通过这种移动来停止漫游车。
- en: To turn the rover left or right, the device has to be turned left or right around
    the roll axis.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使漫游车向左或向右转，设备必须围绕滚转轴向左或向右转动。
- en: 'To make the commands more or less responsive, you can try to change the frequency
    at which the code is updated with new acceleration values, as follows:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使命令更加或更少地响应，你可以尝试更改代码更新的频率，以新的加速度值，如下所示：
- en: '[PRE24]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Don't forget that increasing the update interval increases the battery consumption.
    The tradeoff is strictly related to your rover and your needs.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记，增加更新间隔会增加电池消耗。这种权衡严格与你的漫游车和你的需求相关。
- en: Code for controlling the rover by voice commands
  id: totrans-292
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过语音命令控制漫游车的代码
- en: Voice recognition has been a challenge for years, but nowadays, you can add
    this feature to your application in a matter of minutes.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 语音识别多年来一直是一个挑战，但现在，你可以在几分钟内将此功能添加到你的应用程序中。
- en: 'We have already added the required library. So, we can start adding the required
    code by performing the following steps:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经添加了所需的库。因此，我们可以通过以下步骤开始添加所需的代码：
- en: Open `RoverViewController.h` and add `#import <OpenEars/OEEventsObserver.h>`.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`RoverViewController.h`并添加`#import <OpenEars/OEEventsObserver.h>`。
- en: 'Change the interface from `@interface RoverViewController : UIViewController
    <CBCentralManagerDelegate, CBPeripheralDelegate>` to `@interface RoverViewController
    : UIViewController <CBCentralManagerDelegate, CBPeripheralDelegate, OEEventsObserverDelegate>`.'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '将接口从`@interface RoverViewController : UIViewController <CBCentralManagerDelegate,
    CBPeripheralDelegate>`更改为`@interface RoverViewController : UIViewController <CBCentralManagerDelegate,
    CBPeripheralDelegate, OEEventsObserverDelegate>`。'
- en: 'Open `RoverViewController.m` and add the following imports:'
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`RoverViewController.m`并添加以下导入：
- en: '[PRE25]'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Add the following properties:'
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下属性：
- en: '[PRE26]'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Initialize the properties by adding the following code to the `viewDidLoad`
    method. The `words` array contains the voice commands that will be recognized.
    The rest of the code is from the documentation of the libraries:'
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在`viewDidLoad`方法中添加以下代码来初始化属性。`words`数组包含将被识别的语音命令。其余的代码来自库的文档：
- en: '[PRE27]'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Change the `modeChange` method in the following way (turn off the voice commands
    recognition and/or accelerometer when they are not being used):'
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按以下方式更改`modeChange`方法（当它们未被使用时关闭语音命令识别和/或加速度计）：
- en: '[PRE28]'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Add the following `useVoice` method. It activates the listening of voice commands
    and configures the library in order to call the `pocketsphinxDidReceiveHypothesis`
    delegate method when a voice command is recognized:'
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下`useVoice`方法。它激活语音命令的监听并配置库，以便在识别到语音命令时调用`pocketsphinxDidReceiveHypothesis`代理方法：
- en: '[PRE29]'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Add the `pocketsphinxDidReceiveHypothesis` method, which can be copied from
    the downloaded code. It doesn''t do much other than formatting and sending commands
    to the rover much as we already did for the other modes. We just need to point
    out the following:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加`pocketsphinxDidReceiveHypothesis`方法，可以从下载的代码中复制。它除了格式化和向漫游车发送命令之外，没有做太多，就像我们已经为其他模式做了那样。我们只需要指出以下内容：
- en: The `hypothesis` parameter is a string with the recognized command
  id: totrans-308
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hypothesis`参数是一个包含已识别命令的字符串。'
- en: The `[_fliteController say:hypothesis withVoice:self.slt]` call allows you to
    hear the recognized command that is pronounced by your iOS device
  id: totrans-309
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[_fliteController say:hypothesis withVoice:self.slt]`调用允许你听到由你的iOS设备发音的已识别命令。'
- en: '[PRE30]'
  id: totrans-310
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'To complete the app, we have to add few lines in the `applicationDidEnterBackground`
    method in the `AppDelegate.m` file to disconnect from the rover when the app is
    sent to the background:'
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要完成应用，我们必须在`AppDelegate.m`文件中的`applicationDidEnterBackground`方法中添加几行代码，以便在应用被发送到后台时断开与漫游车的连接：
- en: '[PRE31]'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Driving the rover by voice commands
  id: totrans-313
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过语音命令控制漫游车
- en: To try this feature, you have to tap on Voice and then speak any of the available
    commands. When the application identifies a voice command, it pronounces the recognized
    command and the rover will start moving accordingly.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 要尝试此功能，你必须点击“语音”然后说出任何可用的命令。当应用程序识别出语音命令时，它会发音已识别的命令，漫游车将相应地开始移动。
- en: Please note that the voice recognition takes some time. Hence, the rover is
    not very responsive. The voice mode is more appropriate in wide space and for
    long navigation (whatever this could mean for a rover!)
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，语音识别需要一些时间。因此，漫游车不太灵敏。语音模式更适合在开阔空间和长时间导航时使用（无论这对漫游车意味着什么！）。
- en: 'If you experience low background noises that trigger speech recognition, you
    can raise the value in this call in the range of 1.5-3.5:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你遇到触发语音识别的低背景噪音，你可以将此调用中的值在1.5-3.5的范围内提高：
- en: '[PRE32]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'To make the rover a little bit more responsive, you can try to reduce the time
    that the app should wait for after the speech ends to attempt recognizing the
    speech (the default value is 0.7 seconds), as follows:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 要使漫游车稍微更灵敏，你可以尝试减少在语音结束后应用等待尝试识别语音的时间（默认值为0.7秒），如下所示：
- en: '[PRE33]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Testing and tuning
  id: totrans-320
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试和调整
- en: We have already tested each mode of driving the rover, but we may still have
    unreliable readings from the accelerometer that is mounted on the rover itself.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经测试了漫游车的所有驾驶模式，但我们可能仍然会从安装在漫游车本身的加速度计中获得不可靠的读数。
- en: 'To calibrate the accelerometer''s readings, use the following procedure:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 要校准加速度计的读数，请使用以下程序：
- en: Make sure that the ADXL345 is firmly mounted on the rover, and its axes are
    parallel to the longitudinal and transverse axes of the rover.
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保ADXL345牢固地安装在漫游车上，并且其轴与漫游车的纵向和横向轴平行。
- en: Place the rover on a firm, flat surface and ensure that the rover is in plane
    with the help of a spirit level.
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将漫游车放置在坚实、平坦的表面上，并使用水平仪确保漫游车处于水平状态。
- en: 'Comment out the following lines in the `loop` function of the Arduino code
    and upload it:'
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Arduino代码的`loop`函数中注释掉以下行并上传：
- en: '[PRE34]'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Power Arduino via the USB cable and open the console.
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过USB线为Arduino供电并打开控制台。
- en: Connect the iOS device. The acceleration reading appears on the console for
    both the axes. They should be 0 or very close to 0\. If this is not the case,
    take 10 to 20 readings, calculate the average, and put these values in the `setup`
    function for the `xOffset` and `yOffset` variables.
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接iOS设备。加速度读数在控制台上显示在两个轴上。它们应该是0或非常接近0。如果不是这样，读取10到20次，计算平均值，并将这些值放入`setup`函数中的`xOffset`和`yOffset`变量。
- en: Now, the readings from the accelerometer should be more consistent, and the
    two needles on the iOS devices should help you drive the rover on rough terrain,
    avoiding overturns.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，加速度计的读数应该更加一致，iOS设备上的两个指针可以帮助你在崎岖地形上驾驶漫游车，避免翻车。
- en: How to go further
  id: totrans-330
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何更进一步
- en: 'The following are some suggestions to improve the project:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些改进项目的建议：
- en: Show the distance to the front obstacles in the iOS application.
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在iOS应用程序中显示前方障碍物的距离。
- en: Stop the rover when its inclination goes beyond a certain threshold.
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当漫游车的倾斜超过一定阈值时停止漫游车。
- en: Add more distance sensors or mount the distance sensor on a servo motor so that
    the rover can detect obstacles all around it.
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加更多距离传感器或将距离传感器安装在伺服电机上，以便漫游车能够检测到其周围的障碍物。
- en: Mount different types of sensors for better obstacle avoidance (for instance,
    ultrasound distance sensors or laser distance sensors).
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装不同类型的传感器以更好地避免障碍物（例如，超声波距离传感器或激光距离传感器）。
- en: Allow iOS device landscape orientation. Here's a hint—you need to get the actual
    iOS device orientation by using one of the orientation delegate methods (`willTransitionToTraitCollection,viewWillTransitionToSize`),
    which is provided by the `ViewController` class.
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 允许iOS设备横屏方向。提示——你需要通过使用`ViewController`类提供的某个方向代理方法（`willTransitionToTraitCollection,
    viewWillTransitionToSize`）来获取实际的iOS设备方向。
- en: Voice recognition can be used on many projects because it's very simple to set
    up and works pretty well. You can start adding voice recognition to the Wi-Fi
    Power Plug project.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 语音识别可以在许多项目中使用，因为它设置非常简单，而且效果相当不错。你可以开始将语音识别添加到Wi-Fi电源插头项目中。
- en: If you need a challenge, try to improve your rover by making it move autonomously,
    which can be done by making the rover become aware of its position. (A hint—you
    can use particle filters to accomplish this, but this is a very tough subject.
    The Google car is based on this and a lot of other things as well).
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要一个挑战，尝试通过让无人驾驶车意识到自己的位置来使其自主移动。（提示——你可以使用粒子滤波器来完成这个任务，但这是一个非常困难的主题。谷歌汽车就是基于这个以及其他很多技术）。
- en: Summary
  id: totrans-339
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: You were introduced to the fascinating world of robotics and controlled vehicles.
    You learned how to write Arduino code to control both the speed and the direction
    of rotation of DC motors, measure the distance with an analog infrared sensor,
    and measure acceleration along the three axes by using an accelerometer.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 你被引入了令人着迷的机器人世界和遥控车辆的世界。你学习了如何编写Arduino代码来控制直流电机的速度和旋转方向，使用模拟红外传感器测量距离，以及通过加速度计测量沿三个轴的加速度。
- en: You learned how to use new graphical components such as the `UISlider` and the
    `UISegmentedControl` on an iOS device, and take advantage of the accelerometer
    that is sported by iOS devices. Moreover, you learned how to improve your projects
    with a very powerful and easy-to-use library for voice recognition and text to
    speech.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 你学习了如何在iOS设备上使用新的图形组件，如`UISlider`和`UISegmentedControl`，并利用iOS设备配备的加速度计。此外，你还学习了如何使用一个功能强大且易于使用的语音识别和文本到语音库来改进你的项目。
- en: Don't forget that you now have a rover that you can drive without other people
    thinking that you are odd; you are not playing like you were a child, you are
    learning robotics! Have fun with your rover!
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记，你现在有一辆可以驾驶的无人驾驶车，其他人不会认为你很奇怪；你并不是像孩子一样玩耍，你正在学习机器人！和你的无人驾驶车一起享受乐趣吧！
- en: This chapter is quite long and the project was complex, but we can now catch
    our breath. In the next chapter, we will build a very simple but extremely powerful
    project. It controls the volume of your TV set by keeping it at almost the same
    level even if commercials are on air. Even if the project is pretty easy, you
    will learn a lot about IR transmitters and receivers, and digital signal processing.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 这一章节相当长，项目也很复杂，但现在我们可以喘口气了。在下一章中，我们将构建一个非常简单但极其强大的项目。它通过保持几乎相同的音量来控制电视机的音量，即使广告正在播放也是如此。即使项目相当简单，你也会学到很多关于红外发射器和接收器以及数字信号处理的知识。
