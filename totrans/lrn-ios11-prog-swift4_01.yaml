- en: Getting Familiar with Xcode
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So, you want to get into iOS development? I was in your shoes on January 27th,
    2010, when Apple first announced the iPad. Literally as soon as the conference
    was over, I knew that I wanted to learn how to create apps for the iPad. I signed
    up to the Apple Developer website and paid my $99 annual fee. But then, I realized
    that I did not know where to begin. A large variety of instructional books or
    videos did not exist, especially since the iPad had not yet been released. I had
    previous programming experience; however, I had no idea how to write Objective-C
    (the original programming language for iOS). Therefore, I had to teach myself
    the basics. In this book, we will learn what it takes to become an iOS developer
    together.
  prefs: []
  type: TYPE_NORMAL
- en: If you are new to programming, take your time. You should understand the lessons
    in one chapter before moving on to the next chapter. These important skills will
    set you up with a solid foundation in iOS development. If you have previous programming
    experience, you should still review the earlier chapters, as they will be a refresher
    for you.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this book, we will work in Xcode, specifically Xcode 9 (and Swift
    4, which we will tackle later in the book). Xcode is known as an **Integrated
    Development Environment** (**IDE**). Using Xcode gives us everything we will need
    in order to build apps for iOS, tvOS, macOS (formerly, OS X), and watchOS. In
    this chapter, we will explore Xcode in order to help you get more comfortable
    using it. If you are not on Xcode 9, make sure to update Xcode, as the code in
    this book will not run properly otherwise.
  prefs: []
  type: TYPE_NORMAL
- en: Our focus in this book will be on creating a universal iOS app (an app for both
    the iPhone and iPad). The best way to do this is to create a project to familiarize
    yourself with where everything is and how to find what you need. So, let's first
    download and install Xcode.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to download Xcode, launch the App Store on your Mac and then type
    `Xcode` into the search bar in the upper-right corner:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/986c84bc-1b15-4540-8a74-e6096a36e791.png)'
  prefs: []
  type: TYPE_IMG
- en: For better quality of images, download the graphics bundle from [https://www.packtpub.com/sites/default/files/downloads/LearniOS11ProgrammingwithSwift4SecondEdition_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/LearniOS11ProgrammingwithSwift4SecondEdition_ColorImages.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, click on INSTALL:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1603f530-1deb-40b8-a49a-ef24b1373e3c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once installed, launch Xcode and you should see the following Welcome to Xcode
    screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6feef58c-4f71-4482-99a8-d23608b04fbf.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If this is the first time you have launched Xcode, then you will see No Recent
    Projects in the right panel. If you have previously created projects, then you
    will see those listed to the right. To get started, we are going to click on Create
    a new Xcode project in the left panel of the welcome screen. This will take us
    to the new project screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/714dfe2f-4274-4f58-aaa4-bc6464ae304f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Across the top of this screen, you can select one of the following items: iOS,
    watchOS, tvOS, macOS, and Cross-platform. Since we are creating apps for iOS,
    make sure that you have iOS selected. Then, select Single View App and click on
    Next. Now, you will see an options screen for a new project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7e285a43-b7fe-46b3-8d26-02da450c96c4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This option screen has the following seven items to complete or choose:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Product Name: The product name is your app. We are going to set ours as `ExploringXcode`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Team: The team is connected to your Apple account. We are going to ignore this
    for now, because it is not needed for this chapter. If you have a team set up,
    just leave it as is. We will cover this in greater detail later in the book.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Organization Name: You can set the organization name to your company name or
    just your name.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Organizer Identifier: You will set the organizer identifier to be your domain
    name in reverse. For example, my website URL is `cocoa.academy`, and therefore,
    my identifier is `academy.cocoa`. Since URLs are unique, it will ensure that no
    one else will have your identifier. If you do not have a domain, then just use
    your first and last name for now. You will eventually have to purchase a domain
    if you want to submit your app to the Apple Store.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Bundle Identifier: When you create a new project, Apple will combine your Product
    Name with your Organizer Identifier to create your unique bundle identifier. So,
    even if 10,000 people create this project, each person will have a different bundle
    identifier.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Language: Make sure your language is set to Swift.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Checkboxes: You can uncheck Use Core Data, Include Unit Tests, and Include
    UI Tests, as these are things we will not be using in this chapter.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, select Next, and Xcode will prompt us to save our project. I have a dedicated
    folder for all my projects, but you can save it on your desktop for easy access.
  prefs: []
  type: TYPE_NORMAL
- en: The Xcode interface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Your project is now open and it is time for us to get familiar with all of
    the panels. If this is your first time in Xcode, then it will probably be a bit
    overwhelming for you. Therefore, we will break it down into five parts:'
  prefs: []
  type: TYPE_NORMAL
- en: '**NAVIGATOR PANEL**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**STANDARD EDITOR**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**UTILITIES PANEL**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '****DEBUG PANEL****'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**TOOLBAR**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**WINDOW PANE CONTROLS**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/ea4abda8-1cdd-4608-b4f4-d09f7ca5d3c4.png)'
  prefs: []
  type: TYPE_IMG
- en: Navigator panel
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The primary use for the navigator panel is to add new files and/or select existing
    files. The other icons are used from time to time; we will cover them as we need
    them.
  prefs: []
  type: TYPE_NORMAL
- en: Standard editor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The standard editor is a single panel view used to edit files. The standard
    editor area is the primary area in which you will work. In this area, we can view
    storyboard files, see our Swift files, or view our project settings.
  prefs: []
  type: TYPE_NORMAL
- en: Utilities panel
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The utilities panel can be a bit confusing when you first use Xcode, because
    this menu changes based on what you have selected in the standard editor. When
    we start building an app, we will dig deeper into this. For now, just know that
    the utilities panel is made up of the inspector pane at the top and the library
    pane at the bottom. The inspector pane allows you to change the attributes or
    properties of things you put in your storyboard-the library pane allows you to
    insert objects, image assets, and code snippets into your app.
  prefs: []
  type: TYPE_NORMAL
- en: Debug panel
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The debug panel will allow us to see log messages from our app. You will become
    very familiar with this panel by the time you finish this book. The debug panel
    is one of the greatest tools for getting feedback on what your app is doing or
    not doing.
  prefs: []
  type: TYPE_NORMAL
- en: Toolbar
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, we look at the toolbar:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/98e56d48-1f29-437f-aa05-900f4efc5bae.png)'
  prefs: []
  type: TYPE_IMG
- en: 'First, we have a play button, which is how we launch our app (or use *cmd*
    + *R*). Next, you will see a stop button, which will not be active until you run
    your app. This stop button (or *c**md* + *.*) is used to stop your app from running.
    To the right of the stop button, you will see your target (your project name)
    along with the current Simulator selected. If you click on your project name,
    you will see a screen similar to this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/790f3711-840f-4d2e-ac9c-15f27342fb63.png)'
  prefs: []
  type: TYPE_IMG
- en: This drop-down menu, which we will call the Device and iOS Simulators drop-down
    menu, allows you to change your Simulator type. For the purposes of our project,
    select iPhone7 Plus as your Simulator and then click on the play icon (or use
    *cmd* + *R*) to run your app. Your app will be blank and will most likely not
    fit the entire screen (unless you are on a large screen).
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to see the entire screen, you can scroll right and left; however,
    doing this gets harder once you have elements in your app. So, an alternative
    to scrolling is to resize your app to fit the screen. We can do this by going
    to your Simulator menu and navigating to Window | Scale:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1fb70b7a-839f-4fd9-8b6e-2f86ced4f103.png)'
  prefs: []
  type: TYPE_IMG
- en: Here, you will be able to scale from 200% to 100%, or 50% (select whichever
    percentage allows the app to best fit your screen size).
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's return to Xcode and select the stop button (or use *cmd* + *.*).
  prefs: []
  type: TYPE_NORMAL
- en: If you use the keyboard shortcut, make sure Xcode is in focus; otherwise, this
    shortcut will not work. I work on a 15-inch MacBook Pro Retina - therefore, when
    I am working on an app, I will use the iPhone 6 or iPad Air 2 simulator in landscape.
    They both fit nicely on my screen without having to resize either.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the Simulator, there is a Build Only Device as well as a Device
    section, both at the top of the Device and Simulator drop-down menu that was shown
    earlier in this chapter. Note that, for our purposes, you will only need a Simulator
    while we are building the app; however, you can add an iOS device if you would
    like (see under iOS Device).
  prefs: []
  type: TYPE_NORMAL
- en: Generic iOS device
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Generic iOS Device, under the Build Only Device section of the Device and
    Simulator drop-down menu, is used for when you need to archive your app, which
    means that you are preparing your app for submission to Apple (either to the App
    Store or to Test Flight). If you try to select Generic iOS Device now and run
    the app, you will get the following message:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b7c5fdfc-6af0-4048-a9ba-3225c4dcf7e6.png)'
  prefs: []
  type: TYPE_IMG
- en: Therefore, change Generic iOS Device to an actual Simulator, and then you will
    be able to continue.
  prefs: []
  type: TYPE_NORMAL
- en: iOS device
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you do not have a device connected to the computer, you will see No devices
    connected... under the Device section of the Device and Simulator drop-down menu.
  prefs: []
  type: TYPE_NORMAL
- en: As noted earlier, when we start building the *Let's Eat* app, you will have
    the option of using the Simulator or connecting a device to Xcode. Using a device
    is slower; however, the simulator will not perform in the same way as a device
    will.
  prefs: []
  type: TYPE_NORMAL
- en: In the past, you needed to have a paid account to build your app on a device.
    Now, you do not need a developer account in order to run the app on your device.
    Note that, if you decide to connect your device instead of using a Simulator,
    you will need iOS 11 installed on it. Introduced in Xcode 9 is the ability to
    connect your phone wirelessly. We will look at the traditional way first and then
    we will go over how you connect your phone wirelessly.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following steps are only for those who do not want to pay for the Apple
    Developer Program at this time:'
  prefs: []
  type: TYPE_NORMAL
- en: Connect your iOS device via USB
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the drop-down menu, select your device (here, Xclusive iPhone 6 Plus):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/500e03c2-85f5-41c3-947f-c4eaa9508e60.png)'
  prefs: []
  type: TYPE_IMG
- en: Wait for Xcode 9 to finish indexing and processing. This may take a bit of time.
    Once complete, the status will say Ready.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the project by hitting the Play button (or use *cmd* + *R*).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You will get two errors that state the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Signing for `ExploringXcode` requires a development team.
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: Select a development team in the project editor.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Code signing is required for product type application in SDK iOS 10.0.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ignore the specifics of these errors as they basically indicate that we need
    to create an account and add our device to that account:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, in the standard editor, you will see under Signing that you need to add
    an account:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b71d555d-459d-4393-a7d4-db29ec89e872.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on Add Account. If a Sign in to Xcode with your Apple ID dialog box does
    not pop up, inside of the Accounts screen on the bottom left, click on the + and
    select Apple ID:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/32abcd5c-aff4-412a-aaf6-1f12f91c732e.png)'
  prefs: []
  type: TYPE_IMG
- en: Then, you will click on Create Apple ID. You will be asked to enter
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: your birth date, name, email, and password, along with security questions. Make
    sure that you verify your email before you answer the security questions; otherwise,
    you will have to come back to this screen and add Apple ID again.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Once you have finished all the steps, you will see your account:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/77d5cb45-ce79-4d9d-9068-20ba387f4651.png)'
  prefs: []
  type: TYPE_IMG
- en: If you already have an account, then, instead of seeing Add Account, you will
    see a drop-down menu with your account listed. If your device is not connected
    to this account, you might see a message asking if you would like to add your
    device to your account.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting wirelessly
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that you have your phone and account connected it is easy to get your phone
    set up to run it wirelessly. With your device already connected via USB, go to
    Window | Devices and Simulators. Click on the Checkbox marked Connect via network:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cc11f35f-1174-4678-8c5f-4a5b72d3e994.png)'
  prefs: []
  type: TYPE_IMG
- en: Make sure that your phone and your computer are connected to the same Wi-Fi
    network.
  prefs: []
  type: TYPE_NORMAL
- en: When I first connected to my device, I saw a globe icon in Xcode that lets you
    know that you are connected via the network.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8ac1ba16-9822-4508-9af2-0fc6b1c25d18.png)'
  prefs: []
  type: TYPE_IMG
- en: After a short time, the globe went away. Even if you do not see the icon you
    can disconnect the USB and your device should still be connected to Xcode (as
    long as you are connected to the same Wi-Fi network).
  prefs: []
  type: TYPE_NORMAL
- en: You will not need to use a device for the majority of this book; however, depending
    on the type of MacBook you have, you might need to use a device.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before we get to the right side of the Toolbar, select the `Main.storyboard`
    file in your navigator panel. This file is used to do all of your visual setup
    for your entire app. We will cover this in detail later in the book. After you
    select the file, you should see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c5e9a444-555f-4d14-aeba-bb68d2361ece.png)'
  prefs: []
  type: TYPE_IMG
- en: Window pane controls
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following screenshot shows the window pane controls:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/685d2209-69a4-4fbf-99b2-08959d65cd7e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Moving onto the window pane controls, you will see two groups of icons. The
    first group is called the Editor Mode, and the second group is called the View.
    Let''s look at the functions of the Editor Mode icons:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0ffbc663-142b-4699-b7e7-d3bb28fac30e.png)'
  prefs: []
  type: TYPE_IMG
- en: This icon controls the standard editor (which is the center panel in the earlier
    screenshot of the `Main.storyboard` file in the navigator panel).
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/54f2da6d-9d09-417a-8a49-0f19f5d66c47.png)'
  prefs: []
  type: TYPE_IMG
- en: This icon splits the Standard editor into two panels, where you will see the
    `ViewController.swift` file on the right. We will use this split screen throughout
    the book.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d0bebcfd-5be8-491d-b455-816a3469c8c5.png)'
  prefs: []
  type: TYPE_IMG
- en: This icon is the Version editor. We will not address the Version editor in this
    book, since it is a more advanced feature.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, you might be thinking that there are way too many panels open,
    and I would agree with you. This is where the last group of View icons in the
    toolbar comes in handy.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at these icons and their functions in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3cf0fcbb-6603-47af-adc6-ad4a049324b1.png)'
  prefs: []
  type: TYPE_IMG
- en: This icon will toggle (hide or show) the navigator panel (or use *cmd* + *0*).
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f5873376-6a93-4b68-a017-10b01cd1a123.png)'
  prefs: []
  type: TYPE_IMG
- en: This icon will toggle (hide or show) the debug panel (or use *cmd* + *shift*
    + *Y*).
  prefs: []
  type: TYPE_NORMAL
- en: '>![](img/c2d2b43b-00df-45bb-8394-d2bbb40db9aa.png)'
  prefs: []
  type: TYPE_NORMAL
- en: This icon will toggle (hide or show) the utilities panel (or use *cmd* + *alt*
    + *0*).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Congratulations! You have finished exploring the basics of Xcode. When we start
    building our app, we will cover the more important parts of Xcode in depth. It
    is now time to start learning Swift 4.
  prefs: []
  type: TYPE_NORMAL
