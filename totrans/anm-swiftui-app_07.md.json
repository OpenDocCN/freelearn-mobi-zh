["```swift\n@State private var rotateGear = false\n```", "```swift\nvar gearImage: String = \"\"\n```", "```swift\nvar gearWidth: CGFloat = 0.0\n```", "```swift\nvar gearDegrees: Double = 0.0\n```", "```swift\nvar offsetGearX: CGFloat = 0.0\nvar offsetGearY: CGFloat = 0.0\n```", "```swift\nvar rotateDegrees: Double = 0.0\n```", "```swift\nvar duration: Double = 0.0\n```", "```swift\nvar xAxis: CGFloat = 0.0\nvar yAxis: CGFloat = 0.0\nvar zAxis: CGFloat = 0.0\n```", "```swift\n ZStack {\n        }\n```", "```swift\nZStack {\n    Image(gearImage)\n       }\n```", "```swift\nZStack {\n            Image(gearImage)\n                .resizable()\n                .aspectRatio(contentMode: .fit)\n                .frame(width: gearWidth)\n                .rotationEffect(.degrees(rotateGear ?                   gearDegrees : 0))\n                .animation(Animation.linear(duration:                   duration).repeatForever(autoreverses: false),                   value: rotateGear)\n                .rotation3DEffect(\n                    .degrees(rotateDegrees),axis: (x: xAxis, y:                       yAxis, z: zAxis))\n                .offset(x: offsetGearX, y: offsetGearY)\n        }\n```", "```swift\n.onAppear() {\n            rotateGear.toggle()\n        }.shadow(color: .black, radius: 1, x: 0, y: 0)\n```", "```swift\n GearView(gearImage: \"doubleGear\", gearWidth: 100, gearDegrees:    360, offsetGearX: 0, offsetGearY: 0, duration: 5)\n            .previewLayout(.fixed(width: 200, height: 200))\n```", "```swift\n    @State private var rect1 = false\n    @State private var rect2 = false\n    @State private var rect3 = false\n    @State private var rect4 = false\n```", "```swift\n ZStack {\n    ZStack {\n                Image(\"wormGear\").resizable().frame(width: 100,                   height: 75)\n           }\n        }\n```", "```swift\nHStack {\n                    Rectangle()\n                        .frame(width: 4, height: 40)\n                        .foregroundColor(.black)\n                        .cornerRadius(5)\n                        .opacity(rect1 ? 0 : 0.3)\n                        .offset(x: 2, y: rect1 ? 14 : -8)\n                        .animation(Animation.easeInOut                           (duration: 0.5).repeatForever                           (autoreverses: true), value: rect1)\n                        .rotationEffect(.degrees(-4), anchor:                           .top)\n                        .onAppear(){\n                            rect1.toggle()\n                        }\n        }\n```", "```swift\n                    Rectangle()\n                        .frame(width: 4, height: 40)\n                        .foregroundColor(.black)\n                        .cornerRadius(5)\n                        .opacity(rect2 ? 0 : 0.3)\n                        .offset(x: 7, y: rect2 ? -15 : -8)\n                        .animation(Animation.easeInOut                           (duration: 0.5).repeatForever                           (autoreverses: true), value: rect2)\n                        .rotationEffect(.degrees(-8))\n                        .onAppear(){\n                            rect2.toggle()\n                        }\n```", "```swift\nstruct RectModifiers: ViewModifier {\n    func body(content: Content) -> some View {\n        content\n            .frame(width: 4, height: 40)\n            .foregroundColor(.black)\n            .cornerRadius(5)\n    }\n}\n```", "```swift\n.modifier(RectModifiers())\n```", "```swift\n                  Rectangle().modifier(RectModifiers())\n                        .opacity(rect3 ? 0 : 0.3)\n                        .offset(x: 5, y: rect3 ? -5 : -10)\n                        .animation(Animation.easeInOut                           (duration: 0.5).repeatForever                           (autoreverses: true), value: rect3)\n                        .rotationEffect(.degrees(-8), anchor:                           .top)\n                        .onAppear(){\n                            rect3.toggle()\n                        }\n                    Rectangle().modifier(RectModifiers())\n                        .opacity(rect4 ? 0 : 0.3)\n                        .offset(x: 4, y: rect4 ? -10 : -10)\n                        .animation(Animation.easeInOut                           (duration: 0.5).repeatForever                           (autoreverses: true), value: rect4)\n                        .rotationEffect(.degrees(-7), anchor:                           .top)\n                        .onAppear(){\n                            rect4.toggle()\n```", "```swift\n .shadow(color: .black, radius: 0.4, x: 0.0, y: 1)\n```", "```swift\n@State var animateBelt: Bool = false\n    var beltWidth: CGFloat = 0.0\n    var beltHeight: CGFloat = 0.0\n    var offsetBeltX: CGFloat = 0.0\n    var offsetBeltY: CGFloat = 0.0\n    var dashPhaseValue: CGFloat = 45\n    var rotateDegrees: Double = 0.0\n    var xAxis: CGFloat = 0.0\n    var yAxis: CGFloat = 0.0\n    var zAxis: CGFloat = 0.0\n```", "```swift\n ZStack {\n        }\n```", "```swift\n            Capsule()\n                .stroke(Color.black, style: StrokeStyle                   (lineWidth: 7, lineJoin: .round, dash:                   [5, 1.4], dashPhase: animateBelt ?                   dashPhaseValue : 0))\n                .frame(width: beltWidth, height: beltHeight)\n                .animation(Animation.linear(duration:                   3).repeatForever(autoreverses: false).                  speed(3), value: animateBelt)\n```", "```swift\n      .onAppear {\n                    animateBelt.toggle()\n                }\n```", "```swift\n        .shadow(color: .black, radius: 10, x: 1, y: 0)\n        .rotationEffect(.degrees(rotateDegrees), anchor:           .center)\n        .offset(x: offsetBeltX, y: offsetBeltY)\n```", "```swift\nstruct BeltView_Previews: PreviewProvider {\n    static var previews: some View {\n        BeltView(animateBelt: true, beltWidth: 380, beltHeight:           48, offsetBeltX: 0, offsetBeltY: 0, rotateDegrees:           90)\n            .previewLayout(.fixed(width: 100, height: 400))\n    }\n}\n```", "```swift\n @State var animateRect: Bool = false\n```", "```swift\nvar body: some View \n        ZStack {\n            ZStack {\n                Image(\"shaft\").resizable().frame(width: 160,                   height: 40)\n                Rectangle().frame(width: 140, height: 8)\n                    .foregroundColor(.black)\n                    .cornerRadius(5)\n                    .opacity(animateRect ? 0 : 0.5)\n                    .animation(Animation.easeInOut(duration:                       0.5).repeatForever(autoreverses: true),                       value: animateRect)\n                    .onAppear() {\n                        animateRect.toggle()\n                    }.offset(x: 0, y: -7)\n            }\n        }\n    }\n```", "```swift\n       @State private var rotateFan = false\n    var degrees: Double = 360 * 4\n```", "```swift\nvar body: some View {\n        ZStack {\n        Image(\"fan\").resizable().aspectRatio(contentMode:           .fit).frame(width: 200)\n            .rotationEffect(.degrees(rotateFan ? degrees : 0),               anchor: .center)\n            .animation(Animation.linear(duration: 4)              .repeatForever(autoreverses: false),               value: rotateFan)\n        }.onAppear() {\n            rotateFan.toggle()\n        }.shadow(color: .black, radius: 15)\n    }\n```", "```swift\nZStack {\n     ZStack {\n            }\n       }\n```", "```swift\n //MARK: - MOTOR\n```", "```swift\nGroup {\n       Image(\"motor\").resizable().aspectRatio(contentMode:          .fit).frame(width: 140, height: 120)\n           .offset(x: -120, y: 90)\n                }\n```", "```swift\n      //MARK: - GEARS ANIMATING ON THE Z AXIS\n                Group {\n                    ///Gear 1\n                    GearView(gearImage: \"doubleGear\",                       gearWidth: 40, gearDegrees: 360,                       offsetGearX: -124, offsetGearY: 102,                       duration: 5)\n                    ///Gear 2\n                    GearView(gearImage: \"doubleGear\",                       gearWidth: 100, gearDegrees: 360,                       offsetGearX: -124, offsetGearY: -280,                       duration: 7)\n                    ///Gear 3\n                    GearView(gearImage: \"doubleGear\",                       gearWidth: 100, gearDegrees: 360,                       offsetGearX: 124, offsetGearY: -280,                       duration: 7)\n                    ///Gear 4\n                    GearView(gearImage: \"doubleGear\",                       gearWidth: 100, gearDegrees: 360,                       offsetGearX: 124, offsetGearY: -70,                       duration: 7)\n                    ///Gear 5\n                    GearView(gearImage: \"doubleGear\",                       gearWidth: 80, gearDegrees: -360,                       offsetGearX: 49, offsetGearY: -113,                       duration: 5)\n                    ///Gear 6\n                    GearView(gearImage: \"doubleGear\",                       gearWidth: 100, gearDegrees: 360,                       offsetGearX: -6, offsetGearY: -80,                       duration: 7)\n                }\n```", "```swift\n                //MARK: - GEARS ANIMATING ON THE Y AXIS\n                Group {\n                    ///Gear 7\n                    GearView(gearImage: \"singleGear\",                       gearWidth: 100, gearDegrees: -360,                       offsetGearX: -62, offsetGearY: -85,                       rotateDegrees: 76, duration: 7, xAxis: 0,                       yAxis: 1, zAxis: 0)\n                    ///Gear 8\n                    GearView(gearImage: \"singleGear\",                       gearWidth: 25, gearDegrees: -360,                       offsetGearX: -59, offsetGearY: 19,                       rotateDegrees: 76, duration: 7, xAxis: 0,                       yAxis: 1, zAxis: 0)\n                    ///Gear 10\n                    GearView(gearImage: \"singleGear\",                       gearWidth: 100, gearDegrees: -360,                       offsetGearX: 160, offsetGearY: 94,                       rotateDegrees: 76, duration: 7, xAxis: 0,                       yAxis: 1, zAxis: 0)\n                    ///Gear 11\n                    GearView(gearImage: \"singleGear\",                       gearWidth: 25, gearDegrees: -360,                       offsetGearX: 163, offsetGearY: 252,                       rotateDegrees: 76, duration: 7, xAxis: 0,                       yAxis: 1, zAxis: 0)\n                }\n```", "```swift\n  //MARK: - GEAR ANIMATING ON THE X AXIS\n   Group {\n                    ///Gear 9\n                    GearView(gearImage: \"singleGear\",                       gearWidth: 175, gearDegrees: 360,                       offsetGearX: 60, offsetGearY: 39,                       rotateDegrees: 84, duration: 7,  xAxis:                       1, yAxis: 0, zAxis: 0)\n                }\n```", "```swift\n //MARK: - WORM GEAR\n                Group {\n                    WormGearView().offset(x: 60, y: 30).                      zIndex(-1)\n                }\n```", "```swift\n//MARK: - BELTS ON THE Z AXIS\n                Group {\n                    ///Belt 1\n                    BeltView(animateBelt: true, beltWidth:                       425, beltHeight: 48, offsetBeltX: -124,                       offsetBeltY: -90, rotateDegrees: 90)\n                    ///Belt 2\n                    BeltView(animateBelt: true, beltWidth:                       352, beltHeight: 100, offsetBeltX: 0,                       offsetBeltY: -280, rotateDegrees: 0)\n                    ///Belt 3\n                    BeltView(animateBelt: true, beltWidth:                       258, beltHeight: 48, offsetBeltX: 124,                       offsetBeltY: -175, rotateDegrees: 90)\n                }\n```", "```swift\n  //MARK: - BELTS ON THE Y AXIS\n                Group {\n                    ///Belt 4\n                    BeltView( beltWidth: 32, beltHeight: 125)\n                        .rotation3DEffect(.degrees(75), axis:                           (x: 0, y: 1, z: 0))\n                        .offset(x: -60, y: -33)\n                    ///Belt 5\n                    BeltView(beltWidth: 28, beltHeight: 180,                       offsetBeltY: -10)\n                        .rotation3DEffect(.degrees(75), axis:                           (x: 0, y: 1, z: 0))\n                        .offset(x: 162, y: 185)\n                }\n```", "```swift\n//MARK: - GEAR SHAFTS\n                Group{\n                    ///Shaft 1\n                    GearShaftView().offset(x: 5, y: 28).                      zIndex(-1)\n                    ///Shaft 2\n                    GearShaftView().offset(x: 95, y: 260).                      zIndex(-1)\n                }\n```", "```swift\n  //MARK: - FAN\n                Group {\n                    ///Fan\n                    FanView().offset(x: 0, y: 250).frame(width: 140, height: 140)\n                }\n```", "```swift\n //MARK: - BACKGROUND\n.background(Image(\"goldBackground\").resizable().aspectRatio(contentMode: .fill)\n            .frame(width: 400, height: 1000))\n```"]