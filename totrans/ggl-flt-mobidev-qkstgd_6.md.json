["```kt\nflutter packages get\n```", "```kt\nimport 'package:url_launcher/url_launcher.dart';\n```", "```kt\ndependencies: \nurl_launcher: '>=0.4.1 <5.0.1'\n```", "```kt\ndependencies:\nurl_launcher: '^5.0.1'\n```", "```kt\nimport 'package:flutter/material.dart';\nimport 'package:url_launcher/url_launcher.dart';\n\nvoid main() => runApp(MyApp());\n\nclass MyApp extends StatelessWidget {\n  @override\n\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Flutter Packages',\n      theme: ThemeData(\n        primarySwatch: Colors.deepOrange,\n      ),\n      home: MyStatelessWidget(),\n    );\n  }\n}\n\nclass MyStatelessWidget extends StatelessWidget {\n  MyStatelessWidget({Key key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('Packages in Flutter'),\n      ),\n      body: Center(\n        child: Column(\n          mainAxisSize: MainAxisSize.min,\n          children: <Widget>[\n\n            RaisedButton(\n              onPressed: _initiateURL,\n              textColor: Colors.black,\n              padding: const EdgeInsets.all(0.0),\n              child: Container(\n                decoration: const BoxDecoration(\n                  gradient: LinearGradient(\n                    colors: <Color>[\n                      Colors.green, Colors.yellow, Colors.yellowAccent],\n\n                  ),\n                ),\n\n                padding: const EdgeInsets.all(10.0),\n                child: Text('Open Flutter Website'),\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n\n  }\n\n  _initiateURL() async {\n    const url = 'https://flutter.dev';\n    if (await canLaunch(url)) {\n      await launch(url);\n    } else {\n      throw 'Sorry, We could not launch the URL $url';\n    }\n  }\n\n}\n```", "```kt\nimport 'dart:async';\nimport 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\n\n...\nclass _MyHomePageState extends State<MyHomePage> {\n  static const platform = const MethodChannel('call.flutter.io/battery');\n\n  // Get Android battery level.\n}\n```", "```kt\nString _batteryLevel = 'Battery Levels are Unknown';\n\nFuture<void> _getPhoneBatteryLevel() async {\n  String batteryLevel;\n  try {\n    final int result = await platform.invokeMethod('getBatteryLevel');\n    batteryLevel = 'Battery level at $result % .';\n  } on PlatformException catch (e) {\n    batteryLevel = \"Failed to get battery level: '${e.message}'.\";\n  }\n\n  setState(() {\n    _batteryLevel = _getBatteryLevel() asyncbatteryLevel;\n  });\n}\n```", "```kt\nimport 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\n\nimport 'dart:async';\n\nvoid main() => runApp(MyApp());\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Flutter Platform Channel API',\n      theme: ThemeData(\n\n        primarySwatch: Colors.yellow,\n      ),\n\n      home: MyHomePage(title: 'Flutter Platform Channel API'),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  MyHomePage({Key key, this.title}) : super(key: key);\n\n  final String title;\n\n  @override\n  _MyHomePageState createState() => _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage> {\n\n  static const platform = const MethodChannel('call.flutter.io/battery');\n  String _batteryLevel = 'Battery Levels are Unknown';\n\n  Future<void> _getPhoneBatteryLevel() async {\n    String batteryLevel;\n    try {\n     final int result = await platform.invokeMethod('getBatteryLevel');\n      batteryLevel = 'Battery level at $result % .';\n    } on PlatformException catch (e) {\n      batteryLevel = \"Failed to get battery level: '${e.message}'.\";\n    }\n\n    setState(() {\n      _batteryLevel = batteryLevel;\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      child: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: [   \n\n            Text (\"Click the button to know your phone battery levels\"),\n            RaisedButton(\n              child: Container(\n                decoration: const BoxDecoration(\n                  gradient: LinearGradient(\n                    colors: <Color>[Colors.red, Colors.green, Colors.brown],\n                  ),\n                ),\n                padding: const EdgeInsets.all(10.0),\n                child: Text('Get Phone Battery Level'),\n              ),\n              onPressed: _getPhoneBatteryLevel,\n              textColor: Colors.white,\n              padding: const EdgeInsets.all(0.0),\n\n            ),\n            Text(_batteryLevel),\n\n          ],\n        ),\n      ),\n    );\n  }\n}\n```", "```kt\npackage androcid.flutterapp1;\n\nimport android.os.Bundle;\nimport io.flutter.app.FlutterActivity;\nimport io.flutter.plugins.GeneratedPluginRegistrant;\nimport io.flutter.plugin.common.MethodCall;\nimport io.flutter.plugin.common.MethodChannel;\nimport io.flutter.plugin.common.MethodChannel.MethodCallHandler;\nimport io.flutter.plugin.common.MethodChannel.Result;\n\nimport android.content.ContextWrapper;\nimport android.content.Intent;\nimport android.content.IntentFilter;\nimport android.os.BatteryManager;\nimport android.os.Build.VERSION;\nimport android.os.Build.VERSION_CODES;\n```", "```kt\nprivate static final String CHANNEL = \"call.flutter.io/battery\";\n```", "```kt\nnew MethodChannel(getFlutterView(), CHANNEL).setMethodCallHandler(\n                new MethodCallHandler() {\n                    @Override\n               public void onMethodCall(MethodCall call, Result result) {\n                        // TODO\n                    }\n                }); \n```", "```kt\nprivate int getBatteryLevel() {\n    int phoneBatteryLevel = -1;\n    if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {\n      BatteryManager batteryManager = (BatteryManager) getSystemService(BATTERY_SERVICE);\n      phoneBatteryLevel = batteryManager.getIntProperty(BatteryManager.BATTERY_PROPERTY_CAPACITY);\n    } else {\n      Intent intent = new ContextWrapper(getApplicationContext()).\n              registerReceiver(null, new IntentFilter(Intent.ACTION_BATTERY_CHANGED));\n      phoneBatteryLevel = (intent.getIntExtra(BatteryManager.EXTRA_LEVEL, -1) * 100) /\n              intent.getIntExtra(BatteryManager.EXTRA_SCALE, -1);\n    }\n\n    return phoneBatteryLevel;\n  }\n}\n```", "```kt\nprotected void onCreate(Bundle savedInstanceState) {\n  super.onCreate(savedInstanceState);\n  GeneratedPluginRegistrant.registerWith(this);\n  new MethodChannel(getFlutterView(), CHANNEL).setMethodCallHandler(\n          new MethodCallHandler() {\n            @Override\n            public void onMethodCall(MethodCall call, Result result) {\n\n                if (call.method.equals(\"getBatteryLevel\")) {\n                  int batteryLevel = getBatteryLevel();\n\n                  if (batteryLevel != -1) {\n                    result.success(batteryLevel);\n                  } else {\n              result.error(\"Currently unavailable\", \"Battery level not \n              available currently.\", null);\n                  }\n                } else {\n                  result.notImplemented();\n                }\n\n            }\n          });\n}\n```", "```kt\npackage androcid.flutterapp1;\n\nimport android.os.Bundle;\nimport io.flutter.app.FlutterActivity;\nimport io.flutter.plugins.GeneratedPluginRegistrant;\nimport io.flutter.plugin.common.MethodCall;\nimport io.flutter.plugin.common.MethodChannel;\nimport io.flutter.plugin.common.MethodChannel.MethodCallHandler;\nimport io.flutter.plugin.common.MethodChannel.Result;\nimport android.content.ContextWrapper;\nimport android.content.Intent;\nimport android.content.IntentFilter;\nimport android.os.BatteryManager;\nimport android.os.Build.VERSION;\nimport android.os.Build.VERSION_CODES;\n\npublic class MainActivity extends FlutterActivity {\n  private static final String CHANNEL = \"call.flutter.io/battery\";\n  @Override\n\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    GeneratedPluginRegistrant.registerWith(this);\n    new MethodChannel(getFlutterView(), CHANNEL).setMethodCallHandler(\n            new MethodCallHandler() {\n              @Override\n              public void onMethodCall(MethodCall call, Result result) {\n\n                  if (call.method.equals(\"getBatteryLevel\")) {\n                    int batteryLevel = getBatteryLevel();\n\n                    if (batteryLevel != -1) {\n                      result.success(batteryLevel);\n                    } else {\n                result.error(\"Currently unavailable\", \"Battery level not available currently.\", null);\n                    }\n                  } else {\n                    result.notImplemented();\n                  }\n\n              }\n            });\n  }\n\n  private int getBatteryLevel() {\n    int phoneBatteryLevel = -1;\n    if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {\n      BatteryManager batteryManager = (BatteryManager) getSystemService(BATTERY_SERVICE);\n      phoneBatteryLevel = batteryManager.getIntProperty(BatteryManager.BATTERY_PROPERTY_CAPACITY);\n    } else {\n      Intent intent = new ContextWrapper(getApplicationContext()).\n              registerReceiver(null, new IntentFilter(Intent.ACTION_BATTERY_CHANGED));\n      phoneBatteryLevel = (intent.getIntExtra(BatteryManager.EXTRA_LEVEL, -1) * 100) /\n              intent.getIntExtra(BatteryManager.EXTRA_SCALE, -1);\n    }\n\n    return phoneBatteryLevel;\n  }\n}\n```", "```kt\nflutter packages pub publish --dry-run\n```", "```kt\nflutter packages pub publish\n\n```"]