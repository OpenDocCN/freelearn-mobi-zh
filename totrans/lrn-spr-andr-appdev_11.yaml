- en: Assessments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Chapter 1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Spring is built on Java **Standard Edition** (**SE**), but can run Java **Enterprise
    Edition** (**EE**)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Almost all Java-supported IDEs where you can use Spring, such as NetBeans, and
    Visual Studio
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tomcat is a web server
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can also use Jetty and Undertow for Spring development
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No. You can you use IntelliJ IDEA, Visual Studio—Xamarin, PhoneGap, Corona,
    and CppDroid, but Android Studio is highly recommended, and it is the official
    IDE for developing an Android app
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kotlin is a statically typed programming language that compiles to the same
    bytecode as Java.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Kotlin supports all the features of object-oriented programming.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Kotlin supports a lot of the features of functional programming.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To define a read-only variable, we have to use the `val` keyword and the `var`
    keyword for mutability.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To define a function, we have to use the `fun` keyword. Functions can be defined
    as first-class citizens, class members, or local.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Spring stands out as the most broadly utilized Java EE framework. Spring Framework's
    core ideas are *Dependency Injection* and *Aspect-Oriented Programming*. Spring
    Framework can also be utilized in normal Java applications to accomplish free
    coupling between various segments by actualizing dependency injection, and we
    can perform cross-cutting assignments.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Dependency injection configuration design enables us to expel the hardcoded
    dependencies and make our application approximately coupled, extendable, and viable.
    We can execute a dependency injection example to move the dependency goals from
    accumulate time to runtime. A portion of the advantages of utilizing Dependency
    Injection is Detachment of Concerns, Boilerplate Code decrease, Configurable segments,
    and simple unit testing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Aspect-oriented programming** (**AOP**) is a programming worldview that supplements
    **object-oriented programming** (**OOP**) by isolating the worries of a software
    application to enhance modularization.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Inversion of Control** (**IoC**) is the instrument to accomplish free coupling
    among object dependencies. To accomplish free coupling and dynamic official of
    the objects at runtime, objects characterize their dependencies that are being
    injected by other constructing agent objects. Spring IoC container is the program
    that injects dependencies into an object and prepares it for our utilization.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Any normal Java class that is introduced by Spring IoC container is called Spring
    Bean. We utilize a Spring `ApplicationContext` to get the Spring Bean occurrence.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Much the same as MVC configuration design, a controller is the class that deals
    with all the customer requests and sends them to the arranged assets to deal with.
    In Spring MVC, `org.springframework.web.servlet.DispatcherServlet` is the front
    controller class that introduces the context-dependent on the Spring beans configurations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`DispatcherServlet` is the front controller in a Spring MVC application, and
    it stacks the Spring Bean configuration file, stating every one of the beans that
    are arranged. In the event that annotations are empowered, it additionally filters
    the bundles and designs any beans annotated with the `@Component`, `@Controller`,
    `@Repository`, or `@Service` annotations.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`ContextLoaderListener` is the audience to fire up and close down Spring''s
    root `WebApplicationContext`. Its important roles are to tie the life cycle of
    `ApplicationContext` to the life cycle of the `ServletContext`, and to robotize
    the production of `ApplicationContext`. We can utilize it to characterize shared
    beans that can be utilized across various Spring contexts.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Boilerplate code is repetitive code that shows up again and again for similar
    purposes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: REST means REpresentational State Transfer; it is a generally new aspect of
    composing a web programming interface.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: RESTFUL is referred for web services composed by applying REST building idea
    are called RESTful services. It centers around system assets and how the condition
    of an asset ought to be transported over HTTP convention to various clients written
    in various dialects. In a RESTful web service, HTTP methods such as `GET`, `POST`,
    `PUT`, and `DELETE` can be utilized to perform CRUD activities.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The architectural style for creating a web API is as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: HTTP for client-server communication
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: XML/JSON as a formatting language
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Simple URI as the address for the services
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Stateless communication
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The `SOAPUI` tool for `SOAP WS` and Firefox *poster* plugin for `RESTFUL` services.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Web services dependent on REST architecture are known as RESTful web services.
    These web services utilize HTTP methods to execute the idea of REST architecture.
    A RESTful web service more often than not characterizes a URI (Uniform Asset Identifier),
    a service, gives asset portrayal, for example, JSON and set of HTTP methods.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: URI stands for Uniform Resource Identifier. Every asset in REST architecture
    is recognized by its URI. The motivation behind a URI is to find a resource on
    the server facilitating the web service.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'It is an HTTP success code: `OK`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It is an HTTP client error code: `Not Found`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are two areas that Spring Security mainly targets, and these are authentication
    and authorization.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The `SecurityContext` and `SecurityContextHolder` classes, which are Spring
    security.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The `DelegatingFilterProxy` class is required for Spring security, and this
    class is from `package org.springframework. web.filter`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes. Spring Security supports password hashing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Authorization Code, Implicit, Password, Client Credentials, Device Code, Refresh
    Token.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: H2 is an open source Java database that is very lightweight. It can be embedded
    in Java applications. It also runs on the client-server model.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A *resource* means how data will be represented in *REST* architecture. It allows
    a client to read, write, modify, and create resources using HTTP methods, for
    example `GET`, `POST`, `PUT`, `DELETE`, and so on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: CRUD stands for Create, Read, Update, and Delete.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: DAO is an abstraction of data persistence. *Repository* is an abstraction of
    a collection of objects.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: SQLite uses dynamic typing. Content can be stored as **`INTEGER`**, `REAL`,
    `TEXT`, `BLOB`, or `NULL`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Alternatives to the SQLite database are OrmLite, Couchbase Lite, and Snappy
    DB.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The standard SQLite commands are `SELECT`, `CREATE`, `INSERT`, `UPDATE`, `DROP`,
    and `DELETE`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'There are some disadvantages of SQLite. They are as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It is used to handle low-to-medium traffic HTTP requests.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The size of SQLite is restricted to 2 GB in most cases.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapter 7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The call stack is a part of memory that is allocated by a thread or a coroutine
    and contains a stack of functions that were invoked in the context of the thread
    and local variables.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Thread pool is a pattern that uses a set of threads that are waiting for a job
    from a queue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Callback is a pattern used for delivering the result of an asynchronous operation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Coroutines are lightweight threads, because the creation of a coroutine doesn't
    require as many resources as the creation of a thread.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Reactive programming is an approach to asynchronous events handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Mono is a publisher that can emit zero or one event.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Observable is a class from RxJava that emits a stream of values.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scheduler is an abstraction over thread pools.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: EER stands for **E**nhanced **E**ntity-**R**elationship. It is a high-level
    model to a modified and transitive version of an ER model. It helps to create
    database schemas with more accuracy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: CRUD stands for create, read, update and delete.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Postgresql, MySQL, MongoDB, and so on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Postman. Insomnia is easy to use and powerful.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The minimum API is 21; target and max will be the latest API (the current latest
    API is 28).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: MVC, MVP, and MVVM.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Android Studio, Genymotion (free/pain), Remix OS, and Nox Player.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ANR is short for **A**pplication **N**ot **R**esponding. When the application
    is stuck the UI because of some bugs in the background, then it occurs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sketch is the best, and Adobe XD is also a powerful app for designing prototypes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Text-based command lines, and also AWT-based and Swing-based graphical test
    mechanisms.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Google.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In Java-based applications.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Unit test, integration test, and UI test.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 70% small (unit tests), 20% medium (integration tests), and 10% large (UI tests).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The best way to handle it is to use emulators.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
