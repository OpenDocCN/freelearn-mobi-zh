["```swift\nclass MyClass { \n    var name = \"\"\n    init(name: String) { \n        self.name = name\n        print(\"Initializing class with name \\(self.name)\")\n    }\n    deinit {\n        print(\"Releasing class with name \\(self.name)\")\n    }\n} \n```", "```swift\nvar class1ref1: MyClass? = MyClass(name: \"One\")\nvar class2ref1: MyClass? = MyClass(name: \"Two\")\nvar class2ref2: MyClass? = class2ref1\nprint(\"Setting class1ref1 to nil\")\nclass1ref1 = nil\nprint(\"Setting class2ref1 to nil\")\nclass2ref1 = nil\nprint(\"Setting class2ref2 to nil\")\nclass2ref2 = nil \n```", "```swift\nInitializing class with name One\nInitializing class with name Two\nSetting class1ref1 to nil\nReleasing class with name One\nSetting class2ref1 to nil\nSetting class2ref2 to nil\nReleasing class with name Two \n```", "```swift\nclass MyClass1_Strong { \n    var name = \"\"\n    var class2: MyClass2_Strong? \n    init(name: String) {\n        self.name = name\n        print(\"Initializing class1_Strong with name \\(self.name)\")\n    }\n    deinit {\n        print(\"Releasing class1_Strong with name \\(self.name)\")\n    }\n}\nclass MyClass2_Strong { \n    var name = \"\"\n    var class1: MyClass1_Strong? \n    init(name: String) {\n        self.name = name\n        print(\"Initializing class1_Strong with name \\(self.name)\")\n    }\n    deinit {\n        print(\"Releasing class1_Strong with name \\(self.name)\")\n    }\n} \n```", "```swift\nvar class1: MyClass1_Strong? = MyClass1_Strong(name: \"Class1_Strong\")\nvar class2: MyClass2_Strong? = MyClass2_Strong(name: \"Class2_Strong\")\nclass1?.class2 = class2 \nclass2?.class1 = class1\nprint(\"Setting classes to nil\") \nclass2 = nil\nclass1 = nil \n```", "```swift\nInitializing class1_Strong with name Class1_Strong\nInitializing class1_Strong with name Class2_Strong\nSetting classes to nil \n```", "```swift\nclass MyClass1_Unowned { \n    var name = \"\"\n    unowned let class2: MyClass2_Unowned \n    init(name: String, class2: MyClass2_Unowned) {\n        self.name = name\n        self.class2 = class2\n        print(\"Initializing class1_Unowned with name \\(self.name)\")\n    }\n    deinit {\n        print(\"Releasing class1_Unowned with name \\(self.name)\")\n    }\n}\nclass MyClass2_Unowned { \n    var name = \"\"\n    var class1: MyClass1_Unowned? \n    init(name: String) {\n        self.name = name\n        print(\"Initializing class2_Unowned with name \\(self.name)\")\n    }\n    deinit {\n        print(\"Releasing class2_Unowned with name \\(self.name)\")\n    }\n} \n```", "```swift\nlet class2 = MyClass2_Unowned(name: \"Class2_Unowned\") \nlet class1: MyClass1_Unowned? = MyClass1_Unowned(name: \"class1_Unowned\",class2: class2)\nclass2.class1 = class1 \nprint(\"Classes going out of scope\") \n```", "```swift\nInitializing class2_Unowned with name Class2_Unowned \nInitializing class1_Unowned with name class1_Unowned \nClasses going out of scope\nReleasing class2_Unowned with name Class2_Unowned \nReleasing class1_Unowned with name class1_Unowned \n```", "```swift\nclass MyClass1_Weak { \n    var name = \"\"\n    var class2: MyClass2_Weak? \n    init(name: String) { \n        self.name = name\n        print(\"Initializing class1_Weak with name \\(self.name)\")\n    }\n    deinit {\n        print(\"Releasing class1_Weak with name \\(self.name)\")\n    }\n}\nclass MyClass2_Weak { \n    var name = \"\"\n    weak var class1: MyClass1_Weak? \n    init(name: String) {\n        self.name = name\n        print(\"Initializing class2_Weak with name \\(self.name)\")\n    }\n    deinit {\n        print(\"Releasing class2_Weak with name \\(self.name)\")\n    }\n} \n```", "```swift\nlet class1: MyClass1_Weak? = MyClass1_Weak(name: \"Class1_Weak\")\nlet class2: MyClass2_Weak? = MyClass2_Weak(name: \"Class2_Weak\")\nclass1?.class2 = class2 \nclass2?.class1 = class1 \nprint(\"Classes going out of scope\") \n```", "```swift\nInitializing class1_Weak with name Class1_Weak \nInitializing class2_Weak with name Class2_Weak \nClasses going out of scope\nReleasing class1_Weak with name Class1_Weak \nReleasing class2_Weak with name Class2_Weak \n```"]