["```swift\n    SPQuad *background = [SPQuad quadWithWidth:Sparrow.stage.width height:Sparrow.stage.height color:0xffffff];\n    [self addChild:background];\n    ```", "```swift\n#import \"Game.h\" \n\n@implementation Game\n\n- (id)init\n{\n    if ((self = [super init]))\n    {\n        SPQuad *background = [SPQuad quadWithWidth:Sparrow.stage.width height:Sparrow.stage.height color:0xffffff];\n        [self addChild:background];\n\n        SPQuad *quad = [SPQuad quadWithWidth:100 height:100];\n        quad.color = 0xff0000;\n        quad.x = 50;\n        quad.y = 50;\n        [self addChild:quad];\n    }\n    return self;\n}\n\n@end\n```", "```swift\n    SPSprite *body = [[SPSprite alloc] init];\n    body.x = 85;\n    body.y = 120;\n\n    [self addChild:body];\n    ```", "```swift\n    SPQuad *torso = [SPQuad quadWithWidth:150 height:150];\n    torso.color = 0xff0000;\n\n    [body addChild:torso];\n    ```", "```swift\n    SPQuad *head = [SPQuad quadWithWidth:80 height:80 color:SP_YELLOW];\n    head.x = 35;\n    head.y = -70;\n\n    [body addChild: head];\n    ```", "```swift\n    SPSprite *arms = [[SPSprite alloc] init];\n\n    [body addChild:arms];\n    ```", "```swift\n    SPSprite *legs = [[SPSprite alloc] init];\n    legs.y = 140;\n\n    [body addChild:legs];\n    ```", "```swift\n    SPQuad *leftArm = [SPQuad quadWithWidth:100 height:50 color:0x00ff00];\n    leftArm.x = -80;\n\n    [arms addChild:leftArm];\n    ```", "```swift\n    SPQuad *rightArm = [SPQuad quadWithWidth:100 height:50 color:0x00ff00];\n    rightArm.x = 130;\n\n    [arms addChild:rightArm];\n    ```", "```swift\n    SPQuad *leftHand = [SPQuad quadWithWidth:40 height:50 color:SP_YELLOW];\n    leftHand.x = -80;\n\n    [arms addChild:leftHand];\n    ```", "```swift\n    SPQuad *rightHand = [SPQuad quadWithWidth:40 height:50 color:SP_YELLOW];\n    rightHand.x = 190;\n\n    [arms addChild:rightHand];\n    ```", "```swift\n    SPQuad *leftLeg = [SPQuad quadWithWidth:50 height:150 color:0x0000ff];\n\n    [legs addChild:leftLeg];\n    ```", "```swift\n    SPQuad *rightLeg = [SPQuad quadWithWidth:50 height:150 color:0x0000ff];\n    rightLeg.x = 100;\n\n    [legs addChild:rightLeg];\n    ```", "```swift\n    - (void)onLegTouch:(SPTouchEvent *)event\n    {\n      SPTouch *touch = [[event touchesWithTarget:self andPhase:SPTouchPhaseBegan] anyObject];\n      if (touch) {\n        SPQuad* target = (SPQuad *) event.target;\n\n        float currentRotation = SP_R2D(target.rotation);\n        currentRoration = currentRotation + 10;\n\n        if (currentRotation >= 360.0)\n        {\n          currentRotation = currentRotation - 360.0;\n        }\n        target.rotation = SP_D2R(currentRotation);\n      }\n    }\n    ```", "```swift\n    leftLeg.pivotX = 25;\n    leftLeg.pivotY = 10;\n\n    rightLeg.pivotX = 25;\n    rightLeg.pivotY = 10;\n    ```", "```swift\n    SPQuad *leftLeg = [SPQuad quadWithWidth:50 height:150 color:0x0000ff];\n    [legs addChild:leftLeg];\n    leftLeg.x = 25;\n\n    SPQuad *rightLeg = [SPQuad quadWithWidth:50 height:150 color:0x0000ff];\n    rightLeg.x = 125;\n    [legs addChild:rightLeg];\n    ```", "```swift\n    [rightLeg addEventListener:@selector(onLegTouch:) atObject:self forType:SP_EVENT_TYPE_TOUCH];\n    [leftLeg addEventListener:@selector(onLegTouch:) atObject:self forType:SP_EVENT_TYPE_TOUCH];\n    ```", "```swift\n    - (void)onHeadTouch:(SPTouchEvent *)event\n    {\n        SPTouch *touch = [[event touchesWithTarget:self andPhase:SPTouchPhaseBegan] anyObject];\n        if (touch) {\n            SPQuad* target = (SPQuad *) event.target;\n            target.scaleX = (target.scaleX == 1.0) ? 1.5 : 1.0;\n            target.scaleY = (target.scaleY == 1.0) ? 1.5 : 1.0;\n        }\n    }\n    ```", "```swift\n    head.pivotX = head.width / 2;\n    head.pivotY = head.height / 2;\n    ```", "```swift\n    SPQuad *head = [SPQuad quadWithWidth:80 height:80 color:SP_YELLOW];\n    head.x = 75;\n    head.y = -30;\n    [body addChild: head];\n    ```", "```swift\n    [head addEventListener:@selector(onHeadTouch:) atObject:self forType:SP_EVENT_TYPE_TOUCH];\n    ```", "```swift\n    - (void)onArmsTouch:(SPTouchEvent *)event\n    {\n        SPTouch *touch = [[event touchesWithTarget:self andPhase:SPTouchPhaseBegan] anyObject];\n        if (touch) {\n            SPQuad* target = (SPQuad *) event.target;\n            target.skewX = (target.skewX == SP_D2R(20)) ? SP_D2R(0) : SP_D2R(20);\n            target.skewY = (target.skewY == SP_D2R(20)) ? SP_D2R(0) : SP_D2R(20);\n        }\n    }\n    ```", "```swift\n    [arms addEventListener:@selector(onArmsTouch:) atObject:self forType:SP_EVENT_TYPE_TOUCH];\n    ```", "```swift\nif (target.skewX == SP_D2R(20)) {\n  target.skewX = SP_D2R(0);\n} else {\n  target.skewX = SP_D2R(20);\n}\n\nif (target.skewY == SP_D2R(20)) {\n  target.skewY = SP_D2R(0);\n} else {\n  target.skewY = SP_D2R(20);\n}\n```"]