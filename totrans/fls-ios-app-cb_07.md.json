["```swift\nvar f:Font;\nvar fonts:Array = Font.enumerateFonts(true);\nfor(var i:int = 0; i < fonts.length; i++)\n{\nf = fonts[i];\ntrace(f.fontName + \",\" + f.fontStyle + \",\" + f.fontType);\n}\n\n```", "```swift\nFont Name Bytes Characters\n--------- ---------- ----------\nImpact 6606 ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijk lmnopqrstuvwxyz\n\n```", "```swift\nforename.needsSoftKeyboard = true;\nvar success:Boolean = forename.requestSoftKeyboard();\n\n```", "```swift\nstage.focus = forename;\n\n```", "```swift\n    package {\n    import flash.display.MovieClip;\n    import flash.events.FocusEvent;\n    public class Main extends MovieClip {\n    public function Main() {\n    submit.addEventListener(FocusEvent.FOCUS_OUT,\n    focusLost);\n    }\n    }\n    }\n\n    ```", "```swift\n    private function focusLost(e:FocusEvent):void {\n    echo.text = e.target.text;\n    }\n\n    ```", "```swift\nprivate function focusLost(e:FocusEvent):void {\necho.text = e.target.text;\n}\n\n```", "```swift\nprivate function focusLost(e:FocusEvent):void {\necho.text = submit.text;\n}\n\n```", "```swift\nsubmit.addEventListener(FocusEvent.FOCUS_IN, clearField);\n\n```", "```swift\nprivate function clearField(e:FocusEvent):void {\ne.target.text = \"\";\n}\n\n```", "```swift\n    <initialWindow>\n    <content>recipe.swf</content>\n    <systemChrome>standard</systemChrome>\n    <transparent>false</transparent>\n    <visible>true</visible>\n    <fullScreen>true</fullScreen>\n    <aspectRatio>portrait</aspectRatio>\n    <renderMode>gpu</renderMode>\n    <autoOrients>false</autoOrients>\n    <softKeyboardBehavior>none</softKeyboardBehavior>\n    </initialWindow>\n\n    ```", "```swift\n    import flash.display.MovieClip;\n    import flash.events.SoftKeyboardEvent;\n    import flash.geom.Rectangle;\n\n    ```", "```swift\n    public function Main() {\n    stage.addEventListener(\n    SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE, activate);\n    stage.addEventListener(\n    SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE, deactivate);\n    }\n\n    ```", "```swift\n    private function activate(e:SoftKeyboardEvent):void {\n    var keysRect:Rectangle = stage.softKeyboardRect;\n    if(field.y + field.height > keysRect.top)\n    {\n    offset = field.y + field.height - keysRect.top;\n    field.y -= offset;\n    }\n    else\n    {\n    offset = 0;\n    }\n    }\n\n    ```", "```swift\n    public class Main extends MovieClip {\n    private var offset:Number;\n    public function Main() {\n\n    ```", "```swift\n    private function deactivate(e:SoftKeyboardEvent):void {\n    field.y += offset;\n    }\n\n    ```", "```swift\n<softKeyboardBehavior>none</softKeyboardBehavior>\n\n```", "```swift\nprivate function activate(e:SoftKeyboardEvent):void {\nvar keysRect:Rectangle = stage.softKeyboardRect;\nif(field.y + field.height > keysRect.top)\n{\noffset = field.y + field.height - keysRect.top;\nfield.y -= offset;\n}\nelse\n{\noffset = 0;\n}\n}\n\n```", "```swift\nprivate function deactivate(e:SoftKeyboardEvent):void {\nfield.y += offset;\n}\n\n```", "```swift\n    package {\n    import flash.display.MovieClip;\n    public class Main extends MovieClip {\n     private var startTime:Date;\n    private var elapsed:uint; \n    public function Main() {\n     startTime = new Date();\n    elapsed = 0; \n    }\n    }\n    }\n\n    ```", "```swift\n    package {\n    import flash.display.MovieClip;\n    import flash.events.Event;\n    public class Main extends MovieClip {\n    private var startTime:Date;\n    private var elapsed:uint;\n    public function Main() {\n    startTime = new Date();\n    elapsed = 0;\n    addEventListener(Event.ENTER_FRAME, update);\n    }\n    }\n    }\n\n    ```", "```swift\n    private function update(e:Event):void {\n    var currTime:Date = new Date();\n    var prevElapsed:uint = elapsed;\n    elapsed = (currTime.getTime()-startTime.getTime()) / 1000;\n    if(elapsed != prevElapsed)\n    {\n    timerField.text = String(elapsed);\n    }\n    }\n\n    ```", "```swift\nif(elapsed != prevElapsed)\n{\ntimerField.text = String(elapsed);\n}\n\n```", "```swift\ntimerField.text = \"Elapsed Time: \" + elapsed;\n\n```", "```swift\ntextField.text = \"Hello \";\ntextField.text += \"Christopher\";\n\n```", "```swift\ntextField.text = \"Hello \";\ntextField.appendText(\"Christopher\");\n\n```", "```swift\n    import flash.display.MovieClip;\n     import flash.events.FocusEvent;\n    import flash.geom.Rectangle;\n    import flash.text.ReturnKeyLabel;\n    import flash.text.SoftKeyboardType;\n    import flash.text.StageText;\n    import flash.text.TextFormatAlign;\n    import flash.text.engine.FontWeight; \n\n    ```", "```swift\n    private var nativeText:StageText;\n\n    ```", "```swift\n    public function Main() {\n    nativeText = new StageText();\n    nativeText.stage = stage;\n    nativeText.viewPort = new Rectangle(30, 28, 420, 116);\n    nativeText.fontFamily = \"ChalkboardSE-Bold\";\n    nativeText.fontSize = 50;\n    nativeText.color = 0xB88858;\n    nativeText.fontWeight = FontWeight.BOLD;\n    nativeText.textAlign = TextFormatAlign.CENTER;\n    nativeText.text = \"enter name\";\n    nativeText.maxChars = 11;\n    nativeText.softKeyboardType = SoftKeyboardType.CONTACT;\n    nativeText.returnKeyLabel = ReturnKeyLabel.DONE;\n    }\n\n    ```", "```swift\n    nativeText.returnKeyLabel = ReturnKeyLabel.DONE;\n    nativeText.addEventListener(FocusEvent.FOCUS_IN, focusIn);\n    }\n\n    ```", "```swift\n    private function focusIn(e:FocusEvent):void {\n    if(nativeText.text == \"enter name\")\n    {\n    nativeText.text = \"\";\n    }\n    }\n\n    ```", "```swift\nnativeText = new StageText();\nnativeText.stage = stage;\nnativeText.viewPort = new Rectangle(30, 28, 420, 116);\n\n```", "```swift\nnativeText.softKeyboardType = SoftKeyboardType.CONTACT;\nnativeText.returnKeyLabel = ReturnKeyLabel.DONE;\n\n```"]