["```kt\nimport java.io.File\nimport java.io.InputStream\n\nfun main(args: Array<String>) {\n    val inputStream: InputStream = File(\"lorem.txt\").inputStream()\n    val inputString = inputStream.reader().use { it.readText() }\n    println(inputString)\n}\n```", "```kt\nFile(\"/path/to/file/lorem.txt\")\n```", "```kt\nimport java.io.File\n\nfun main(args: Array<String>) {\n  val inputString = File(\"lorem.txt\").reader().use { it.readText() }\n  println(inputString)\n}\n```", "```kt\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\nNunc consequat eleifend mauris, eget congue ipsum consectetur id.\nProin hendrerit felis metus, vitae suscipit mi tempus facilisis.\nProin ut leo tellus. Donec nec lacus vel ante venenatis porttitor et sit amet purus.\nSed tincidunt turpis ac metus pharetra dapibus.\nInteger sed auctor tellus. Morbi a metus luctus, viverra enim vel, imperdiet est.\nCurabitur purus massa, hendrerit id ligula et, finibus elementum purus.\nIn ut consectetur lacus.\nSuspendisse non mauris eget dolor faucibus pharetra quis sed turpis.\nVivamus eget lectus vel mi faucibus dignissim.\nClass aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.\nUt vitae velit non nunc consectetur imperdiet.\nNunc feugiat diam tellus, in pellentesque nisl dapibus quis.\nProin luctus sapien ac ante tempor, eget mollis odio aliquet.\n```", "```kt\nimport java.io.File\nimport java.io.InputStream\n\nfun main(args: Array<String>) {\n    val listOfLines = mutableListOf<String>()\n    val inputStream: InputStream = File(\"lorem.txt\").inputStream()\n    inputStream.reader().useLines { lines -> lines.forEach { listOfLines.add(it)} }\n    listOfLines.forEach{println(\"$ \" + it)}\n}\n```", "```kt\nimport java.io.File\n\nfun main(args: Array<String>) {\n    val listOfLines = mutableListOf<String>()\n\n    File(\"lorem.txt\").reader().useLines { lines -> lines.forEach { listOfLines.add(it)} }\n    listOfLines.forEach{println(\"$ \" + it)}\n}\n```", "```kt\n$ Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n$ Nunc consequat eleifend mauris, eget congue ipsum consectetur id.\n$ Proin hendrerit felis metus, vitae suscipit mi tempus facilisis.\n$ Proin ut leo tellus. Donec nec lacus vel ante venenatis porttitor et sit amet purus.\n$ Sed tincidunt turpis ac metus pharetra dapibus.\n$ Integer sed auctor tellus. Morbi a metus luctus, viverra enim vel, imperdiet est.\n$ Curabitur purus massa, hendrerit id ligula et, finibus elementum purus.\n$ In ut consectetur lacus.\n$ Suspendisse non mauris eget dolor faucibus pharetra quis sed turpis.\n$ Vivamus eget lectus vel mi faucibus dignissim.\n$ Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.\n$ Ut vitae velit non nunc consectetur imperdiet.\n$ Nunc feugiat diam tellus, in pellentesque nisl dapibus quis.\n$ Proin luctus sapien ac ante tempor, eget mollis odio aliquet.\n```", "```kt\nimport java.io.File\nimport java.io.InputStream\n\nfun main(args: Array<String>) {\n    val inputStream: InputStream = File(\"example2.txt\").inputStream()\n    val inputString = inputStream.reader().use { it.readText() }\n    println(inputString)\n}\n```", "```kt\nimport java.io.File\nfun main(args: Array<String>) {\n    val inputString = File(\"example2.txt\").reader().use { it.readText() }\n    println(inputString)\n}\n```", "```kt\nA panoramic view of Lower Manhattan as seen at dusk from Jersey City, New Jersey, in November 2014\\. Manhattan is the most densely populated borough of New York City. It is the city's economic and administrative center, and a major global cultural, financial, media, and entertainment center.\nThe second paragraph of this file is small.\n```", "```kt\nimport java.io.File\nimport java.io.InputStream\n\nfun main(args: Array<String>) {\n    val listOfLines = mutableListOf<String>()\n    val inputStream: InputStream =  File(\"example2.txt\").inputStream()\n    inputStream.reader().useLines { lines -> lines.forEach { listOfLines.add(it)} }\n    listOfLines.forEach{println(\"* \" + it)}\n}\n```", "```kt\n* A panoramic view of Lower Manhattan as seen at dusk from Jersey City, New Jersey, in November 2014\\. Manhattan is the most densely populated borough of New York City. It is the city's economic and administrative center, and a major global cultural, financial, media, and entertainment center.\n* The second paragraph of this file is small.\n```", "```kt\nimport java.io.File\n\nfun main(args: Array<String>) {\n    val listOfLines = mutableListOf<String>()\n\n    File(\"example2.txt\").reader().useLines { lines -> lines.forEach { listOfLines.add(it)} }\n    listOfLines.forEach{println(\"* \" + it)}\n}\n```", "```kt\nimport java.io.File\nimport java.io.InputStream\n\nfun main(args: Array<String>) {\n    val inputString = File(\"lorem.txt\").bufferedReader().use { it.readText() }\n    println(inputString)\n}\n```", "```kt\nimport java.io.File\nimport java.io.InputStream\n\nfun main(args: Array<String>) {\n    val listOfLines = mutableListOf<String>()\n    File(\"lorem.txt\").bufferedReader().useLines { \n        lines -> lines.forEach { \n            var x = \"> (\" + it.length + \") \" + it;\n            listOfLines.add(x)\n        } \n    }\n    listOfLines.forEach{println(it)}\n}\n```", "```kt\nimport java.io.File\nimport java.io.InputStream\n\nfun main(args: Array<String>) {\n    val listOfLines = mutableListOf<String>()\n    val inputStream: InputStream = File(\"lorem.txt\").inputStream()\n    inputStream.bufferedReader().useLines { \n        lines -> lines.forEach { \n            var x = \"> (\" + it.length + \") \" + it;\n            listOfLines.add(x)\n        } \n    }\n    listOfLines.forEach{println(it)}\n}\n```", "```kt\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\nNunc consequat eleifend mauris, eget congue ipsum consectetur id.\nProin hendrerit felis metus, vitae suscipit mi tempus facilisis.\nProin ut leo tellus. Donec nec lacus vel ante venenatis porttitor et sit amet purus.\nSed tincidunt turpis ac metus pharetra dapibus.\nInteger sed auctor tellus. Morbi a metus luctus, viverra enim vel, imperdiet est.\nCurabitur purus massa, hendrerit id ligula et, finibus elementum purus.\nIn ut consectetur lacus.\nSuspendisse non mauris eget dolor faucibus pharetra quis sed turpis.\nVivamus eget lectus vel mi faucibus dignissim.\nClass aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.\nUt vitae velit non nunc consectetur imperdiet.\nNunc feugiat diam tellus, in pellentesque nisl dapibus quis.\nProin luctus sapien ac ante tempor, eget mollis odio aliquet.\n```", "```kt\nbufferedReader(charset).use { it.readText() }\n```", "```kt\n> (56) Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n> (65) Nunc consequat eleifend mauris, eget congue ipsum consectetur id.\n> (64) Proin hendrerit felis metus, vitae suscipit mi tempus facilisis.\n> (84) Proin ut leo tellus. Donec nec lacus vel ante venenatis porttitor et sit amet purus.\n> (47) Sed tincidunt turpis ac metus pharetra dapibus.\n> (81) Integer sed auctor tellus. Morbi a metus luctus, viverra enim vel, imperdiet est.\n> (71) Curabitur purus massa, hendrerit id ligula et, finibus elementum purus.\n> (24) In ut consectetur lacus.\n> (68) Suspendisse non mauris eget dolor faucibus pharetra quis sed turpis.\n> (46) Vivamus eget lectus vel mi faucibus dignissim.\n> (91) Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.\n> (46) Ut vitae velit non nunc consectetur imperdiet.\n> (60) Nunc feugiat diam tellus, in pellentesque nisl dapibus quis.\n> (61) Proin luctus sapien ac ante tempor, eget mollis odio aliquet.\n```", "```kt\nimport java.io.File\nimport java.io.InputStream\nfun main(args: Array<String>) {\n    val inputStream: InputStream = File(\"lorem.txt\").inputStream()\n    val inputString = inputStream.bufferedReader().use {     it.readText() }\n    println(inputString)\n}\n```", "```kt\nimport java.io.File\nimport java.io.InputStream\nfun main(args: Array<String>) {\n    val inputStream: InputStream = File(\"lorem.txt\").inputStream()\n    val inputString =   inputStream.bufferedReader(Charsets.ISO_8859_1).use {  it.readText() }\n    println(inputString)\n}\n```", "```kt\nimport java.io.File\nimport java.io.InputStream\nfun main(args: Array<String>) {\n    val inputString = File(\"lorem.txt\").bufferedReader().use { it.readText() }\n    println(inputString)\n}\n```", "```kt\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\nNunc consequat eleifend mauris, eget congue ipsum consectetur id.\nProin hendrerit felis metus, vitae suscipit mi tempus facilisis.\nProin ut leo tellus. Donec nec lacus vel ante venenatis porttitor et sit amet purus.\nSed tincidunt turpis ac metus pharetra dapibus.\nInteger sed auctor tellus. Morbi a metus luctus, viverra enim vel, imperdiet est.\nCurabitur purus massa, hendrerit id ligula et, finibus elementum purus.\nIn ut consectetur lacus.\nSuspendisse non mauris eget dolor faucibus pharetra quis sed turpis.\nVivamus eget lectus vel mi faucibus dignissim.\nClass aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.\nUt vitae velit non nunc consectetur imperdiet.\nNunc feugiat diam tellus, in pellentesque nisl dapibus quis.\nProin luctus sapien ac ante tempor, eget mollis odio aliquet.\n```", "```kt\nimport java.io.File\nimport java.io.InputStream\nfun main(args: Array<String>) {\n    val listOfLines = mutableListOf<String>()\n    val inputStream: InputStream = File(\"lorem.txt\").inputStream()\n    inputStream.bufferedReader().useLines {\n        lines -> lines.forEach {\n            var x = \"# (\" + it.length + \") \" + it.substring(0,8);\n            listOfLines.add(x)\n        }\n    }\n    listOfLines.forEach{println(it)}\n}\n```", "```kt\n# (56) Lorem ip\n# (65) Nunc con\n# (64) Proin he\n# (84) Proin ut\n# (47) Sed tinc\n# (81) Integer\n# (71) Curabitu\n# (24) In ut co\n# (68) Suspendi\n# (46) Vivamus\n# (91) Class ap\n# (46) Ut vitae\n# (60) Nunc feu\n# (61) Proin lu\n```", "```kt\nimport java.io.File\nimport java.io.InputStream\nfun main(args: Array<String>) {\n    val listOfLines = mutableListOf<String>()\n    val inputStream: InputStream = File(\"lorem.txt\").inputStream()\n    inputStream.bufferedReader(Charsets.US_ASCII).useLines {\n        lines -> lines.forEach {\n            var x = \"# (\" + it.length + \") \" + it.substring(0,8);\n            listOfLines.add(x)\n        }\n    }\n    listOfLines.forEach{println(it)}\n}\n```", "```kt\nimport java.io.File\nimport java.io.InputStream\nfun main(args: Array<String>) {\n    val listOfLines = mutableListOf<String>()\n    File(\"lorem.txt\").bufferedReader().useLines {\n        lines -> lines.forEach {\n            var x = \"# (\" + it.length + \") \" + it.substring(0,8);\n            listOfLines.add(x)\n        }\n    }\n    listOfLines.forEach{println(it)}\n}\n```", "```kt\ninline fun <T> File.useLines(\n    charset: Charset = Charsets.UTF_8, \n    block: (Sequence<String>) -> T\n): T\n```", "```kt\nimport java.io.File\nimport java.io.InputStream\nfun main(args: Array<String>) {\n    val listOfLines = mutableListOf<String>()\n    val reader = File(\"lorem.txt\").bufferedReader()\n    while(true) {\n        var line = reader.readLine()\n        if(line == null) break\n        listOfLines.add(\"> \"+line)\n    }\n    listOfLines.forEach{println(it)}\n}\n```", "```kt\nval response = URL(\"<api_request>\").readText()\n```", "```kt\n// 1\\. Declare a URL Connection\nURL url = new URL(\"http://www.google.com\");\nHttpURLConnection conn = (HttpURLConnection) url.openConnection();\n// 2\\. Open InputStream to connection\nconn.connect();\nInputStream in = conn.getInputStream();\n// 3\\. Download and decode the string response using builder\nStringBuilder stringBuilder = new StringBuilder();\nBufferedReader reader = new BufferedReader(new InputStreamReader(in));\nString line;\nwhile ((line = reader.readLine()) != null) {\n    stringBuilder.append(line);\n}\n\n```", "```kt\ndoAsync{\n    val response=URL(\"<network_url>\").readText()\n    uiThread{\n       // Here you would do UI operation\n       toast(\" ... \")\n    }\n}\n```", "```kt\nval executor = Executors.newScheduledThreadPool(5)\n\ndoAsync(executorService = executor){\n    val result = URL(\"https://httpbin.org/get\").readText()\n    uiThread {\n        toast(result)\n    }\n}\n```"]