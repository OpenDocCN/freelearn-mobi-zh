["```swift\n    import flash.display.MovieClip;\n    import flash.ui.Multitouch;\n    import flash.ui.MultitouchInputMode; \n\n    ```", "```swift\n    public function Main() {\n     if(Multitouch.supportsTouchEvents)\n    {\n    Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;\n    output.text = (\"inputMode = \" + Multitouch.inputMode);\n    }\n    else\n    {\n    output.text = \"Multi-touch events not supported.\";\n    } \n    }\n\n    ```", "```swift\nMultitouch.inputMode = MultitouchInputMode.TOUCH_POINT;\n\n```", "```swift\noutput.text = (\"inputMode = \" + Multitouch.inputMode);\n\n```", "```swift\n    private var _held:Boolean = false;\n\n    ```", "```swift\n    public function set held(h:Boolean):void {\n    _held = h;\n    }\n    public function get held():Boolean {\n    return _held;\n    }\n\n    ```", "```swift\n    public function update():void {\n     if(_held)\n    {\n    return;\n    } \n\n    ```", "```swift\n    public function Bubble() {\n    mouseChildren = false; \n    }\n\n    ```", "```swift\n    import flash.ui.Multitouch;\n    import flash.ui.MultitouchInputMode;\n    import flash.events.TouchEvent;\n\n    ```", "```swift\n    public function Main() {\n     Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;\n    stage.addEventListener(TouchEvent.TOUCH_BEGIN, touchBegin);\n    stage.addEventListener(TouchEvent.TOUCH_END, touchEnd); \n    application = NativeApplication.nativeApplication;\n\n    ```", "```swift\n    private function touchBegin(e:TouchEvent):void {\n    var b:Bubble = e.target as Bubble;\n    if(b != null)\n    {\n    b.held = true;\n    }\n    }\n\n    ```", "```swift\n    private function touchEnd(e:TouchEvent):void {\n    var b:Bubble = e.target as Bubble;\n    if(b != null)\n    {\n    b.held = false;\n    }\n    }\n\n    ```", "```swift\nMultitouch.inputMode = MultitouchInputMode.TOUCH_POINT;\n\n```", "```swift\nfor(var i:uint = 0; i < bubbles.length; i++)\n{\nbubbles[i].speed = speeds[i];\nbubbles[i].addEventListener(TouchEvent.TOUCH_ROLL_OUT, touchEnd); \n}\n\n```", "```swift\n    private var touching:Array;\n\n    ```", "```swift\n    public function Main() {\n    touching = [];\n    Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;\n    stage.addEventListener(TouchEvent.TOUCH_BEGIN, touchBegin);\n    stage.addEventListener(TouchEvent.TOUCH_END, touchEnd);\n\n    ```", "```swift\n    private function touchBegin(e:TouchEvent):void {\n    var b:Bubble = e.target as Bubble;\n    if(b != null && !b.held)\n    {\n    b.held = true;\n    b.startTouchDrag(e.touchPointID);\n    touching[e.touchPointID] = b;\n    }\n    }\n\n    ```", "```swift\n    private function touchEnd(e:TouchEvent):void {\n    var b:Bubble = touching[e.touchPointID];\n    if(b != null)\n    {\n    b.held = false;\n    b.stopTouchDrag(e.touchPointID);\n    delete touching[e.touchPointID];\n    touching[e.touchPointID] = null;\n    }\n    }\n\n    ```", "```swift\nprivate function touchBegin(e:TouchEvent):void {\nvar b:Bubble = e.target as Bubble; \nif(b != null && !b.held)\n{\nb.held = true;\nb.startTouchDrag(e.touchPointID); \ntouching[e.touchPointID] = b;\n}\n}\n\n```", "```swift\nprivate function touchBegin(e:TouchEvent):void {\nvar b:Bubble = e.target as Bubble;\nif(b != null && !b.held)\n{\nb.held = true;\nb.startTouchDrag(e.touchPointID);\ntouching[e.touchPointID] = b; \n}\n}\n\n```", "```swift\nprivate function touchEnd(e:TouchEvent):void {\nvar b:Bubble = touching[e.touchPointID]; \nif(b != null)\n{\nb.held = false;\nb.stopTouchDrag(e.touchPointID); \ndelete touching[e.touchPointID];\ntouching[e.touchPointID] = null; \n}\n}\n\n```", "```swift\nprivate function touchEnd(e:TouchEvent):void {\nvar b:Bubble = touching[e.touchPointID];\nif(b != null)\n{\nb.held = false;\nb.stopTouchDrag(e.touchPointID);\ndelete touching[e.touchPointID];\ntouching[e.touchPointID] = null;\n}\n}\n\n```", "```swift\nb.startTouchDrag(e.touchPointID, true);\n\n```", "```swift\nb.startTouchDrag(\ne.touchPointID, true, new Rectangle(0, 0, 200, 200));\n\n```", "```swift\n    public function Main() {\n    touching = [];\n    Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;\n    stage.addEventListener(TouchEvent.TOUCH_BEGIN, touchBegin);\n    stage.addEventListener(TouchEvent.TOUCH_END, touchEnd);\n    stage.addEventListener(TouchEvent.TOUCH_MOVE, touchMove); \n\n    ```", "```swift\n    private function touchBegin(e:TouchEvent):void {\n    var b:Bubble = e.target as Bubble;\n    if(b != null && !b.held)\n    {\n    b.held = true;\n    b.startTouchDrag(e.touchPointID, true); \n    touching[e.touchPointID] = b;\n    }\n    }\n\n    ```", "```swift\n    private function touchEnd(e:TouchEvent):void {\n    var b:Bubble = touching[e.touchPointID];\n    if(b != null)\n    {\n    b.held = false;\n    b.stopTouchDrag(e.touchPointID); \n    delete touching[e.touchPointID];\n    touching[e.touchPointID] = null;\n    }\n    }\n\n    ```", "```swift\n    private function touchMove(e:TouchEvent):void {\n    var b:Bubble = touching[e.touchPointID] as Bubble;\n    if(b != null)\n    {\n    b.x = e.stageX;\n    b.y = e.stageY;\n    }\n    }\n\n    ```", "```swift\nprivate function touchMove(e:TouchEvent):void {\nvar b:Bubble = touching[e.touchPointID] as Bubble;\nif(b != null)\n{\nb.x = e.stageX;\nb.y = e.stageY;\n}\n}\n\n```", "```swift\n    import flash.display.MovieClip;\n     import flash.ui.Multitouch;\n    import flash.ui.MultitouchInputMode; \n\n    ```", "```swift\n    public function Main() {\n     if(Multitouch.supportsGestureEvents)\n    {\n    Multitouch.inputMode = MultitouchInputMode.GESTURE;\n    output.text = (\"inputMode = \" + Multitouch.inputMode);\n    }\n    else\n    {\n    output.text = \"Gesture events not supported.\";\n    } \n    }\n\n    ```", "```swift\nMultitouch.inputMode = MultitouchInputMode.GESTURE;\n\n```", "```swift\noutput.text = (\"inputMode = \" + Multitouch.inputMode);\n\n```", "```swift\n    import flash.display.MovieClip;\n     import flash.events.TransformGestureEvent;\n    import flash.ui.Multitouch;\n    import flash.ui.MultitouchInputMode;\n    import fl.transitions.Tween;\n    import fl.motion.easing.Sine; \n\n    ```", "```swift\n    public function Main() {\n     Multitouch.inputMode = MultitouchInputMode.GESTURE;\n    stage.addEventListener(TransformGestureEvent.GESTURE_SWIPE, swipe);\n    } \n\n    ```", "```swift\n    private function swipe(e:TransformGestureEvent):void {\n    var t:Tween;\n    if(e.offsetX == -1) \n    {\n    t = new Tween(content, \"x\", Sine.easeOut, content.x, -465, 0.25, true);\n    }\n    else if(e.offsetX == 1) \n    {\n    t = new Tween(content, \"x\", Sine.easeOut, content.x, -35, 0.25, true);\n    }\n    }\n\n    ```", "```swift\nMultitouch.inputMode = MultitouchInputMode.GESTURE;\n\n```", "```swift\nstage.addEventListener(TransformGestureEvent.GESTURE_SWIPE, swipe);\n\n```", "```swift\nprivate function swipe(e:TransformGestureEvent):void {\nvar t:Tween;\nif(e.offsetX == -1)\n{\nt = new Tween(content, \"x\",\nSine.easeOut, content.x, -465, 0.25, true);\n}\nelse if(e.offsetX == 1)\n{\nt = new Tween(content, \"x\",\nSine.easeOut, content.x, -35, 0.25, true);\n}\n}\n\n```", "```swift\n    import flash.display.MovieClip;\n     import flash.events.TransformGestureEvent;\n    import flash.ui.Multitouch;\n    import flash.ui.MultitouchInputMode; \n\n    ```", "```swift\n    public function Main() {\n     Multitouch.inputMode = MultitouchInputMode.GESTURE;\n    bubble.addEventListener(TransformGestureEvent.GESTURE_PAN, pan); \n    }\n\n    ```", "```swift\n    private function pan(e:TransformGestureEvent):void {\n    bubble.x += e.offsetX;\n    bubble.y += e.offsetY; \n    }\n\n    ```", "```swift\nbubble.addEventListener(TransformGestureEvent.GESTURE_PAN,\npan);\n\n```", "```swift\nprivate function pan(e:TransformGestureEvent):void {\nbubble.x += e.offsetX;\nbubble.y += e.offsetY;\n}\n\n```", "```swift\nprivate function pan(e:TransformGestureEvent):void {\nif(e.phase == GesturePhase.BEGIN)\n{\nbubble.scaleX += 0.2;\nbubble.scaleY += 0.2;\n}\nelse if(e.phase == GesturePhase.END)\n{\nbubble.scaleX -= 0.2;\nbubble.scaleY -= 0.2;\n}\nelse if(e.phase == GesturePhase.UPDATE)\n{\nbubble.x += e.offsetX;\nbubble.y += e.offsetY;\n}\n}\n\n```", "```swift\n    public function Main() {\n    Multitouch.inputMode = MultitouchInputMode.GESTURE;\n    bubble.addEventListener(TransformGestureEvent.GESTURE_PAN, pan);\n    bubble.addEventListener(TransformGestureEvent.GESTURE_ROTATE, rotate); \n    }\n\n    ```", "```swift\n    private function rotate(e:TransformGestureEvent):void {\n    bubble.rotation += e.rotation;\n    }\n\n    ```", "```swift\nbubble.addEventListener(TransformGestureEvent.GESTURE_ROTATE,\nrotate);\n\n```", "```swift\nprivate function rotate(e:TransformGestureEvent):void {\nbubble.rotation += e.rotation; \n}\n\n```", "```swift\n    public function Main() {\n    Multitouch.inputMode = MultitouchInputMode.GESTURE;\n    bubble.addEventListener(TransformGestureEvent.GESTURE_PAN, pan);\n    bubble.addEventListener(TransformGestureEvent.GESTURE_ROTATE, rotate);\n    bubble.addEventListener(TransformGestureEvent.GESTURE_ZOOM, zoom); \n    }\n\n    ```", "```swift\n    private function zoom(e:TransformGestureEvent):void {\n    bubble.scaleX *= e.scaleX;\n    bubble.scaleY *= e.scaleY;\n    }\n\n    ```", "```swift\nbubble.addEventListener(TransformGestureEvent.GESTURE_ZOOM, zoom);\n\n```", "```swift\nprivate function zoom(e:TransformGestureEvent):void {\nbubble.scaleX *= e.scaleX;\nbubble.scaleY *= e.scaleY;\n}\n\n```"]