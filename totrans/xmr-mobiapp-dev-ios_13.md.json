["```swift\n<dict>\n    <key>Type</key>\n    <string>UISlider</string>\n    <key>Key</key>\n    <string>My slider</string>\n    <key>DefaultValue</key>\n    <int>40</int>\n    <key>MinimumValue</key>\n    <int>0</int>\n    <key>MaximumValue</key>\n    <int>75</int>\n</dict>\n```", "```swift\nint read = NSUserDefaults.StandardDefaults.IntForKey(\"DefaultValue\");\nstring name = NSUserDefaults.StandardDefaults.StringForKey(\"Key\");\n```", "```swift\nNSUserDefaults.StandardDefaults[\"DefaultValue\"] = 34;\nNSUserDefaults.StandardDefaults[\"Key\"] = \"Hello mum!\";\n```", "```swift\npublic mySettingsClass()\n{\n    NSNotificationCenter.DefaultCenter.AddObserver\n    (\n        this, new Selector(\"updateSettings\"),\n        new NSString (\"NSUserDefaultDidChangeNotification\"),\n        null\n    );\n\n    [Export (\"updateSettings:\")]private void UpdateSettings()\n    {\n        doSomething();\n    }\n\n    private void doSomething()\n    {\n        // do something here\n    }\n}\n```", "```swift\npublic class Serializer\n{\n    public static void XmlSerializeObject<T>(T obj, string filePath)\n    {\n        using (StreamWriter sw = new StreamWriter(filePath))\n        {\n            XmlSerializer xmlSer = new XmlSerializer(typeof(T));\n            xmlSer.Serialize(sw, obj);\n        }\n    }\n\n    public static T XmlDeserializeObject<T>(string filePath)\n    {\n        using (StreamReader sr = new StreamReader(filePath))\n        {\n            XmlSerializer xmlSer = new XmlSerializer(typeof(T));\n            return (T)xmlSer.Deserialize(sr);\n        }\n    }\n}\n```", "```swift\npublic static class myAppData\n{\n    private static AppSettings appSetting;\n\n    public static AppSettings appSettings\n    {\n        get\n        {\n            if (appSetting == null)\n            {\n                if (File.Exists(AppSettingsFile))\n                    appSetting = Serializer.XmlDeserializeObject<AppSettings>(AppSettingsFile);\n                else\n                {\n                    appSetting = new myAppData.AppSettings();\n                    Serializer.XmlSerializeObject <AppSettings>(appSetting, AppSettingsFile);\n                }\n            }\n            return appSetting;\n        }\n        set\n        {\n            if (value == null)\n            {\n                throw new ArgumentNullException(\"value is null!\");\n            }\n            appSetting = value;\n            if (File.Exists(AppSettingsFile))\n                File.Delete(AppSettingsFile);\n            Serializer.XmlSerializeObject <AppSettings>(appSetting, AppSettingsFile);\n        }\n    }\n\n    private static string pathAppSettingsFile;\n    public static string AppSettingsFile\n    {\n        get\n        {\n            if (string.IsNullOrEmpty(pathAppSettingsFile))\n                pathAppSettingsFile =Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments\"),\"AppSettings.xml\");\n                return pathAppSettingsFile;\n          }\n    }\n}\n```", "```swift\npublic static List<string> theAlias\n{\n    get { return appSettings.TheAlias;}\n    set\n    {\n        AppSettings settings = appSettings;\n        settings.TheAlias = value;\n        appSettings = settings;\n    }\n}\n```", "```swift\npublic class AppSettings\n{\n    public AppSettings()\n    {\n    }\n\n    public List<string> TheAlias\n    {get;set;}\n}\n```"]