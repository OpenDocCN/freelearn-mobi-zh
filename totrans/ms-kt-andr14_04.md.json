["```kt\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.material3.*\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.unit.dp\nclass MainActivity : ComponentActivity() {\n  override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContent {\n        MyApp()\n    }\n  }\n}\n@Composable\nfun MyApp() {\n  var count by remember { mutableStateOf(0) }\n  Column(\n    modifier = Modifier.padding(16.dp)\n  ) {\n      Text(text = \"Counter: $count\", style = MaterialTheme.typography.bodyLarge)\n      Spacer(modifier = Modifier.height(16.dp))\n      Button(onClick = { count++ }) {\n        Text(\"Increment\")\n      }\n    }\n}\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout \n\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\"\n  android:padding=\"16dp\">\n  <TextView\n    android:id=\"@+id/counterTextView\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_centerHorizontal=\"true\"\n    android:text=\"Counter: 0\"\n    android:textSize=\"20sp\" />\n  <Button\n    android:id=\"@+id/incrementButton\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_below=\"@id/counterTextView\"\n    android:layout_centerHorizontal=\"true\"\n    android:layout_marginTop=\"16dp\"\n    android:text=\"Increment\" />\n</RelativeLayout>\n```", "```kt\nimport android.os.Bundle\nimport android.widget.Button\nimport android.widget.TextView\nimport androidx.appcompat.app.AppCompatActivity\nclass MainActivity : AppCompatActivity() {\n  private var count = 0\n  override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_main)\n    val counterTextView: TextView = findViewById(R.id.counterTextView)\n    val incrementButton: Button = findViewById(R.id.incrementButton)\n    incrementButton.setOnClickListener {\n      count++\n      counterTextView.text = \"Counter: $count\"\n    }\n  }\n}\n```", "```kt\n@Composable\nfun PacktPublishing(bookName: String) {\n    Text(text = \"Title of the book is: $bookName\")\n}\nPacktPublishing function is annotated with the @Composable annotation. The function takes a parameter, bookName, which is a String. Inside the function, we have another composable from the Material Design library. The composable renders some text to our UI.\n```", "```kt\n@Preview(showBackground = true)\n@Composable\nfun PacktPublishingPreview() {\n    PacktPublishing(\"Android Development with Kotlin\")\n}\n```", "```kt\nText(\n    modifier = Modifier.padding(16.dp),\n    text = \"Title of the book is: $bookName\"\n)\n```", "```kt\nText(\n    modifier = Modifier\n        .fillMaxWidth()\n        .padding(16.dp)\n        .background(Color.Green),\n    text = \"Title of the book is: $bookName\"\n)\n```", "```kt\nColumn {\n    Text(text = \"Android\")\n    Text(text = \"Kotlin\")\n    Text(text = \"Compose\")\n}\n```", "```kt\nColumn(\n    modifier = Modifier\n        .fillMaxSize()\n        .padding(16.dp),\n    verticalArrangement = Arrangement.Center,\n    horizontalAlignment = Alignment.CenterHorizontally\n) {\n    Text(text = \"Android\")\n    Text(text = \"Kotlin\")\n    Text(text = \"Compose\")\n}\n```", "```kt\nRow {\n    Text(text = \"Android\")\n    Text(text = \"Kotlin\")\n    Text(text = \"Compose\")\n}\n```", "```kt\nRow(\n    modifier = Modifier\n        .fillMaxSize()\n        .padding(16.dp),\n    verticalAlignment = Alignment.CenterVertically,\n    horizontalArrangement = Arrangement.SpaceEvenly\n) {\n    Text(text = \"Android\")\n    Text(text = \"Kotlin\")\n    Text(text = \"Compose\")\n}\n```", "```kt\nBox(\n    modifier = Modifier\n        .size(100.dp),\n    contentAlignment = Alignment.Center\n) {\n    Icon(\n        modifier = Modifier\n            .size(80.dp),\n        imageVector = Icons.Outlined.Notifications,\n        contentDescription = null,\n        tint = Color.Green\n    )\n    Text(text = \"9\")\n}\n```", "```kt\nLazyColumn(\n    modifier = Modifier\n        .fillMaxSize()\n        .background(Color.LightGray)\n) {\n    items(100) {\n        Text(\n            modifier = Modifier\n                .padding(8.dp),\n            text = \"Item number $it\"\n        )\n    }\n}\n```", "```kt\nLazyRow(\n    modifier = Modifier\n        .fillMaxWidth()\n        .background(Color.LightGray)\n        .padding(8.dp)\n) {\n    items(100) {\n        Text(\n            modifier = Modifier\n                .padding(8.dp),\n            text = \"Item number $it\"\n        )\n    }\n}\n```", "```kt\nLazyVerticalGrid(\n    modifier = Modifier\n        .fillMaxSize()\n        .background(Color.LightGray)\n        .padding(8.dp),\n    columns = GridCells.Fixed(3)\n) {\n    items(100) {\n        Text(\n            modifier = Modifier\n                .padding(8.dp),\n            text = \"Item number $it\"\n        )\n    }\n}\n```", "```kt\nLazyHorizontalGrid(\n    modifier = Modifier\n        .fillMaxSize()\n        .background(Color.LightGray)\n        .padding(8.dp),\n    rows = GridCells.Fixed(3)\n) {\n    items(100) {\n        Text(\n            modifier = Modifier\n                .padding(8.dp),\n            text = \"Item number $it\"\n        )\n    }\n}\n```", "```kt\n implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'\n```", "```kt\nConstraintLayout(\n  modifier = Modifier\n    .padding(16.dp)\n) {\n    val (icon, text) = createRefs()\n      Icon(\n          modifier = Modifier\n            .size(80.dp)\n            .constrainAs(icon) {\n                top.linkTo(parent.top)\n                bottom.linkTo(parent.bottom)\n                start.linkTo(parent.start)\n            },\n          imageVector = Icons.Outlined.Notifications,\n          contentDescription = null,\n          tint = Color.Green\n      )\n    Text(\n        modifier = Modifier\n          .constrainAs(text) {\n              top.linkTo(parent.top)\n              bottom.linkTo(parent.bottom)\n              start.linkTo(icon.end) },\n        text = \"9\",\n        style = MaterialTheme.typography.titleLarge\n    )\n}\n```"]