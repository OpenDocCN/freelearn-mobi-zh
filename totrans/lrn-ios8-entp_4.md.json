["```swift\nUIImage *Image1  = [UIImage imageNamed:@\"Image.png\"];\n\nUIActivityViewController *activityVC = [[UIActivityViewController alloc] initWithActivityItems:[NSArray arrayWithObjects:@\"Share Image\", Image1, nil] applicationActivities:nil];\n```", "```swift\n    - (IBAction)share:(id)sender;\n    @property (weak, nonatomic) IBOutlet UIImageView *image;\n    @property (nonatomic,strong) NSArray *activityItems;\n    ```", "```swift\n      NSString *shareString = @\"This is my Development Machine.\";\n      UIImage *shareImage = [UIImage imageNamed:@\"image.jpg\"];\n      self.activityItems = @[shareString,shareImage];\n    ```", "```swift\n    UIActivityViewController *avController = [[UIActivityViewController alloc]initWithActivityItems:self.activityItemsapplicationActivities:nil];\n\n    NSArray *excludedActivities =  @[ UIActivityTypePostToTwitter,\n                                     UIActivityTypePostToFacebook,\n                                     UIActivityTypePostToWeibo,\n                                     UIActivityTypeMessage,\n                                     UIActivityTypeMail,\n                                     UIActivityTypePrint,\n                                     UIActivityTypePrint,\n                                     UIActivityTypeCopyToPasteboard,\n                                     UIActivityTypeAssignToContact,\n                                     UIActivityTypeSaveToCameraRoll,\n                                     UIActivityTypeAddToReadingList,\n                                     UIActivityTypePostToFlickr,\n                                     UIActivityTypePostToVimeo, \n                                     UIActivityTypePostToTencentWeibo];\n\n    avController.excludedActivityTypes = excludedActivities;\n\n    [self presentViewController:avController animated:YES completion:nil];\n    }\n    ```", "```swift\n        @interface AKMyScene ()\n        @property (nonatomic) SKSpriteNode *ant;\n        @end\n        ```", "```swift\n        NSLog(@\"Size: %@\", NSStringFromCGSize(size));\n        ```", "```swift\n        self.backgroundColor = [SKColor colorWithRed:1.0 green:1.0 blue:1.0 alpha:1.0];\n        ```", "```swift\n        self.ant = [SKSpriteNode spriteNodeWithImageNamed:@\"ant.jpg\"];\n        self.ant.position = CGPointMake(100, 100);\n        [self addChild:self.ant];\n        ```", "```swift\n    2014-07-22 19:13:27.019 AntKilling[1437:60b] Size: {320, 568}\n\n    ```", "```swift\n    - (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event\n    {\n        UITouch *touch = [touches anyObject];\n        CGPoint positionInScene = [touch locationInNode:self];\n        SKSpriteNode *touchedNode = (SKSpriteNode *)[self nodeAtPoint:positionInScene];\n        if (touchedNode == self.ant) {\n            SKAction *sequence = [SKAction sequence:@[[SKAction rotateByAngle:degreeToRadian(-3.0f) duration:0.2],\n                                 [SKAction rotateByAngle:0.0 duration:0.1],\n                                 [SKAction rotateByAngle:degreeToRadian(3.0f) duration:0.2]]];\n\n            [touchedNode runAction:[SKAction repeatActionForever:sequence]];\n        }    \n    }\n    float degreeToRadian(float degree) {\n        return degree / 180.0f * M_PI;\n    }\n    ```", "```swift\n        SKSpriteNode *touchedNode = (SKSpriteNode *)[self nodeAtPoint:positionInScene];\n        ```", "```swift\n        SKAction *sequence = [SKAction sequence:@[[SKAction rotateByAngle:degreeToRadian(-3.0f) duration:0.2],\n                                                  [SKAction rotateByAngle:0.0 duration:0.1],\n                                                  [SKAction rotateByAngle:degreeToRadian(3.0f) duration:0.2]]];\n        [touchedNode runAction:[SKAction repeatActionForever:sequence]];\n        ```", "```swift\n- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event\n{\n    UITouch *touch = [touches anyObject];\n    CGPoint positionInScene = [touch locationInNode:self];\n    SKSpriteNode *touchedNode = (SKSpriteNode *)[self nodeAtPoint:positionInScene];\n    if (touchedNode == self.ant) {\n        SKAction *sequence = [SKAction sequence:@[[SKAction rotateByAngle:degreeToRadian(-3.0f) duration:0.2],\n                                                  [SKAction rotateByAngle:0.0 duration:0.1],\n                                                  [SKAction rotateByAngle:degreeToRadian(3.0f) duration:0.2]]];\n\n        [touchedNode runAction:[SKAction repeatActionForever:sequence]];\n    } else {\n        [self.ant removeAllActions];\n    }\n}\n```", "```swift\n    [_imageView setHidden:YES];\n        if ([_imageView isHidden]) {\n          CGRect convertedFrame = [_textView convertRect:_imageView.frame fromView:self.view];\n          [[_textView textContainer] setExclusionPaths:@[[UIBezierPath bezierPathWithRect:convertedFrame]]];\n        }\n        else{\n          [[_textView textContainer] setExclusionPaths:nil];\n        }\n        [_imageView setHidden:![_imageView isHidden]];\n    ```", "```swift\n    CGRect convertedFrame = [_textView convertRect:_imageView.frame fromView:self.view];\n    ```"]