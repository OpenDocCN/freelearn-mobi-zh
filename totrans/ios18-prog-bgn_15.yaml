- en: '13'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Modifying App Screens
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In *Chapter 11,* *Building Your User Interface*, you added some of the screens
    required for your app to match what was shown during the app tour. In *Chapter
    12,* *Finishing Your User Interface*, you added the remaining screens required
    for your app. You’re now able to navigate through all the screens of your app
    when you run it in Simulator, but the screens still lack the user interface elements
    required for data input and data display.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you’ll add and configure the missing user interface elements
    to the Journal List, Add New Journal Entry, and Journal Entry Detail screens,
    to match the design shown in the app tour.
  prefs: []
  type: TYPE_NORMAL
- en: For the Journal List screen, you’ll modify the `journalCell` table view cell
    by adding an image view and two labels to it, so that it can display the photo,
    date, and title of a journal entry. For the Add New Journal Entry screen, you’ll
    modify it by adding a custom view, a switch, a text field, a text view, and an
    image view, so that you can enter the details of a new journal entry. You’ll also
    configure the image view to show a default image. For the Journal Entry Detail
    screen, you’ll add a text view, labels, and image views to it and configure the
    image views to show default images, so that the screen can display the details
    of an existing journal entry. With all the user interface elements in place, your
    app will be ready for code, which you will implement in *Part 3* of this book.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this chapter, you will be more proficient in adding and positioning
    user interface elements and will have gained more experience in how to use constraints
    to determine their position relative to one another. This will be useful to ensure
    compatibility with different screen sizes and orientations, enabling you to easily
    prototype the appearance and flow of your apps.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Modifying the Journal List screen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Modifying the Add New Journal Entry screen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Modifying the Journal Entry Detail screen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You will continue working on the `JRNL` project that you modified in the previous
    chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'The completed Xcode project for this chapter is in the `Chapter13` folder of
    the code bundle for this book, which can be downloaded here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/PacktPublishing/iOS-17-Programming-for-Beginners-Eighth-Edition](https://github.com/PacktPublishing/iOS-17-Programming-for-Beginners-Eighth-Edition%0D)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Check out the following video to see the code in action:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://youtu.be/tgo2dT1LZeM](https://youtu.be/tgo2dT1LZeM%0D)'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start by modifying the `journalCell` table view cell on the Journal List
    screen. In the next section, you’ll add some user interface elements to make it
    match the table view cell shown in the app tour.
  prefs: []
  type: TYPE_NORMAL
- en: Modifying the Journal List screen
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let’s see what the Journal List screen looked like in the app tour:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31371_13_01.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.1: The Journal List screen for the completed JRNL app'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, the table view cells on the Journal List screen have a photo,
    a date, and a journal entry title. In *Chapter 11*, *Building Your User Interface*,
    you set the background color for the `journalCell` table view cell to cyan and
    configured the table view to display a column of 10 cells. You’ll now remove the
    background color and add user interface elements to the `journalCell` table view
    cell, matching the design shown in the app tour. You’ll start by adding an image
    view to it in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Adding an image view to journalCell
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'An image view is an instance of the `UIImageView` class. It can display a single
    image or a sequence of animated images in your app. To add an image view to the
    `journalCell` table view cell, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To make the user interface elements easier to see when you add them to the
    storyboard, choose **Canvas** | **Bounds Rectangles** from the **Editor** menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_02.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.2: Editor menu with Canvas | Bounds Rectangles selected'
  prefs: []
  type: TYPE_NORMAL
- en: This will apply a thin blue outline to the user interface elements in the storyboard.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the **Main** storyboard file in the Project navigator. Under the first
    **Journal Scene**, select **journalCell** in the document outline:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.3: Document outline showing journalCell'
  prefs: []
  type: TYPE_NORMAL
- en: 'You will need to remove the background color you set earlier prior to adding
    the image view. In the Attributes inspector, under **View**, set **Background**
    to **Default**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_04.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.4: Attributes inspector settings for journalCell'
  prefs: []
  type: TYPE_NORMAL
- en: 'To add an image view to the table view cell, click the **Library** button.
    Type `imag` into the filter field. An **Image View** object will appear in the
    results. Drag it into the prototype cell:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_05.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.5: Prototype cell with image view added'
  prefs: []
  type: TYPE_NORMAL
- en: 'To ensure the constraints for the newly added image view can be set properly,
    verify that it is a subview of the **journalCell** table view cell’s **Content
    View** and is selected:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_06.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.6: Document outline with Image View object selected'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the Add New Constraints button, and enter the following values to set
    the constraints for the newly added image view:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Top: `0`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Left: `0`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bottom: `0`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Width: `90`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Height: `90`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: When done, click the **Add 5 Constraints** button.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31371_13_07.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.7: Add New Constraints dialog box'
  prefs: []
  type: TYPE_NORMAL
- en: This binds the image view’s top, left, and bottom edges to the corresponding
    edges of the `journalCell` table view cell, and sets its width and height to `90`
    points. It also implicitly sets the height of the table view cell to `90` points.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Attributes inspector, under **Image View**, set **Image** to `face.smiling`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_08.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.8: Image view with Image set to face.smiling'
  prefs: []
  type: TYPE_NORMAL
- en: You have successfully added an image view to the table view cell, set its default
    image, and applied constraints to determine its position relative to its enclosing
    view. Cool!
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, you’ll add user interface elements that will be used to
    display the date and the title of the journal entry.
  prefs: []
  type: TYPE_NORMAL
- en: Adding labels to journalCell
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You will use labels to display the date and the journal entry title in the `journalCell`
    table view cell. A label is an instance of the `UILabel` class. It can display
    one or more lines of text in your app.
  prefs: []
  type: TYPE_NORMAL
- en: 'To add labels to the `journalCell` table view cell, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, you’ll add a label to display the date. Click the Library button and
    drag a **Label** object to the space between the image view you just added and
    the right side of the prototype cell:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_09.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.9: Library with the Label object selected'
  prefs: []
  type: TYPE_NORMAL
- en: Note that **Label** appears in the document outline and is a subview of the
    **journalCell** table view cell’s **Content View**.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Attributes inspector, under **Label**, set **Font** to **Title 1** using
    the **Font** menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_10.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.10: Attributes inspector for Label'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the **Add New Constraints** button, and enter the following values to
    set the constraints for the label:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Top: `0`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Left: `8`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Right: `0`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Constrain to Margins** should already be checked, which sets a standard margin
    of `8` points as the space between the top and right sides of the label, and the
    top and right sides of the table view cell. When done, click the **Add 3 Constraints**
    button.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Verify that the position of the label appears as shown in the screenshot below
    and that the newly added constraints are in the document outline:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_11.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.11: Label with constraints applied'
  prefs: []
  type: TYPE_NORMAL
- en: The space between the top edge of the label and the top edge of the `journalCell`
    content view is set to `0 + 8` points. The space between the left edge of the
    label and the right edge of the image view is `8` points. The space between the
    right edge of the label and the right edge of the `journalCell` content view is
    `0 + 8` points. The position of the bottom edge of the label is automatically
    set by the text style you set earlier.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, you’ll add a label to display the journal entry title. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the Library button and drag a **Label** object to the space between the
    label you just added and the bottom of the prototype cell:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_12.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.12: Library with the Label object selected'
  prefs: []
  type: TYPE_NORMAL
- en: Note that **Label** appears in the document outline and is a subview of the
    **journalCell** table view cell’s **Content View**.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Attributes inspector, under **Label**, set **Font** to **Body** using
    the **Font** menu, and set **Lines** to `2`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_13.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.13: Attributes inspector for Label'
  prefs: []
  type: TYPE_NORMAL
- en: Setting **Lines** to `2` will make the label display a maximum of two lines
    of text when the app is running.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the Add New Constraints button, and enter the following values to set
    the constraints for the label:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Top: `0`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Left: `8`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Right: `0`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Constrain to Margins** should already be checked, which sets a standard margin
    of `8` points as the space between the right side of the label and the right side
    of the table view cell. When done, click the **Add 3 Constraints** button.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Verify that the position of the label appears as shown in the screenshot below
    and that the newly added constraints are in the document outline:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_14.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.14: Label with constraints applied'
  prefs: []
  type: TYPE_NORMAL
- en: The space between the top edge of the label and the bottom edge of the label
    you added earlier is set to `0` points. The space between the left edge of the
    label and the right edge of the image view is `8` points. The space between the
    right edge of the label and the right edge of the `journalCell` content view is
    `0 + 8` points. The position of the bottom edge of the label is automatically
    set by the text style and number of lines you set earlier.
  prefs: []
  type: TYPE_NORMAL
- en: You can click a constraint in the document outline and modify it in the Size
    inspector.
  prefs: []
  type: TYPE_NORMAL
- en: 'Build and run your app:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_15.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.15: Simulator showing the completed journalCell table view cell'
  prefs: []
  type: TYPE_NORMAL
- en: You have successfully added and configured labels to display the date and the
    journal entry title of the `journalCell` table view cell, and all the necessary
    constraints have been added. As you can see, the Journal List screen now has all
    the user interface elements required to display data as shown in the app tour.
    Fantastic!
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, you’ll add a stack view containing user interface elements
    to the Add New Journal Entry screen.
  prefs: []
  type: TYPE_NORMAL
- en: Modifying the Add New Journal Entry screen
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let’s see what the Add New Journal Entry screen looks like in the app tour:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31371_13_16.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.16: The Add New Journal Entry screen for the completed Journal app'
  prefs: []
  type: TYPE_NORMAL
- en: 'Apple provides an extensive library of user interface elements that you can
    use in your own apps. This helps to give all iOS apps a consistent look and feel.
    As you can see, the Add New Journal Entry screen has the following elements:'
  prefs: []
  type: TYPE_NORMAL
- en: A custom view showing star ratings
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A switch that allows you to get your current location
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A text field for the journal entry title
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A text view for the journal entry body
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An image view for a photo that you will take with your phone’s camera
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will now modify the screen to match the design shown in the app tour, beginning
    in the next section by adding a custom view that allows a user to set star ratings.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a custom view to the New Entry scene
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As you have seen in the app tour, the Add New Journal Entry screen has a custom
    view showing star ratings. This custom view is a subclass of a horizontal stack
    view. You’ll add the horizontal stack view in this chapter and complete the implementation
    of the custom view in *Chapter 19*, *Getting Started with Custom Views*.
  prefs: []
  type: TYPE_NORMAL
- en: 'A stack view is an instance of the `UIStackView` class. It allows you to easily
    lay out a collection of views either in a column or a row. To add a stack view
    to the Add New Journal Entry screen, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Main** storyboard file, click **New Entry Scene** in the document
    outline:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_17.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.17: Editor area showing New Entry Scene'
  prefs: []
  type: TYPE_NORMAL
- en: 'To add a horizontal stack view to the scene, click the Library button. Type
    `hori` into the filter field. A **Horizontal Stack View** object will appear in
    the results. Drag it to the view of the **New Entry** scene:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_18.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.18: Library with the Horizontal Stack View object selected'
  prefs: []
  type: TYPE_NORMAL
- en: Note that the stack view you just added appears in the document outline and
    is a subview of the view for **New Entry Scene**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the Attributes inspector. Under **Stack View**, set **Spacing** to `8`
    if it was not already set, and under **View**, set **Background** to **System
    Cyan Color**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_19.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.19: Attributes inspector showing the Spacing and Background settings'
  prefs: []
  type: TYPE_NORMAL
- en: The **Spacing** value determines the spacing between elements in a stack view.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the Size inspector. Under **View**, set **Width** to `252` and **Height**
    to `44`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_20.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.20: Size inspector showing the size of the stack view'
  prefs: []
  type: TYPE_NORMAL
- en: The custom view showing star ratings will consist of five buttons. Each button
    has a height of `44` points and a width of `44` points, and the space between
    each button is `8` points. The total width of the custom view will be `5 x 44
    + 4 x 8`, giving a total width of `252` points.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the Add New Constraints button, and enter the following values to set
    the constraints for the stack view:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Width: `252`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Height: `44`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: When done, click the **Add 2 Constraints** button.
  prefs: []
  type: TYPE_NORMAL
- en: Setting the size of a UI element in the Size inspector makes it easier for you
    to add constraints later because the intended values will already be set in the
    **Add New Constraints** dialog box.
  prefs: []
  type: TYPE_NORMAL
- en: You’ll see that the stack view is outlined in red. Click the little reddish-pink
    arrow in the document outline.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_21.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.21: Arrow in the document outline'
  prefs: []
  type: TYPE_NORMAL
- en: 'You’ll see two **Missing Constraints** errors in the document outline:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_22.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.22: Missing constraints error displayed'
  prefs: []
  type: TYPE_NORMAL
- en: The stack view is outlined in red because of the missing constraints errors.
    This means that the position of the stack view relative to its enclosing view
    is currently ambiguous. You will fix this when you embed this stack view in another
    stack view later.
  prefs: []
  type: TYPE_NORMAL
- en: Click the **< Structure** button to go back.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You have successfully added a horizontal stack view to the **New Entry** scene.
    In the next section, you’ll add a UI element to it that allows you to get your
    current location.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a switch to the New Entry scene
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As shown in the app tour, you can toggle a switch to get your current location
    when creating a new journal entry. A switch is an instance of the `UISwitch` class.
    It displays a control that offers you a binary choice, such as on/off. You will
    also add a label to describe what the switch does and put both objects in a horizontal
    stack view.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To add a switch to the **New Entry** scene, click the Library button. Type
    `swi` into the filter field. A **Switch** object will appear in the results. Drag
    it to the view of the **New Entry** scene under the horizontal stack view:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_23.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.23: Library with the Switch object selected'
  prefs: []
  type: TYPE_NORMAL
- en: Note that the switch you just added appears in the document outline and is a
    subview of the view for **New Entry Scene**.
  prefs: []
  type: TYPE_NORMAL
- en: 'To add a label next to the switch, drag a **Label** object from the library
    and position it next to the switch:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_24.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.24: Library with Label object selected'
  prefs: []
  type: TYPE_NORMAL
- en: Note that the label you just added appears in the document outline and is also
    a subview of the view for the **New Entry** scene.
  prefs: []
  type: TYPE_NORMAL
- en: Blue lines will appear to help you position the label the correct distance away
    from the switch.
  prefs: []
  type: TYPE_NORMAL
- en: 'Double-click the label and change the label text to `Get Location`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_25.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.25: Label text changed to Get Location'
  prefs: []
  type: TYPE_NORMAL
- en: 'You’ll embed both the label and the switch in a horizontal stack view. In the
    document outline, hold down the *Shift* key, click **Switch**, and then click
    **Get Location** to select both the switch and the label:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_26.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.26: Document outline showing both label and switch selected'
  prefs: []
  type: TYPE_NORMAL
- en: Choose **Embed In** | **Stack View** from the **Editor** menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_27.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.27: Editor menu with Embed In | Stack View selected'
  prefs: []
  type: TYPE_NORMAL
- en: Both the switch and the label are now embedded in a stack view.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the Attributes inspector button, and under **Stack View**, set **Spacing**
    to `8`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_28.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.28: Attributes inspector with Spacing set to 8'
  prefs: []
  type: TYPE_NORMAL
- en: You have successfully added a horizontal stack view containing a switch and
    a label to the **New Entry** scene. In the next section, you’ll add UI elements
    to it so that a user can enter the journal title and body text.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a text field and a text view to the New Entry scene
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As shown in the app tour, users will enter the title and body text of a journal
    entry using this screen. To enter text, you can use either a text field or a text
    view. A text field is an instance of the `UITextField` class. It displays an editable
    text area and is typically limited to a single line. You’ll enter the title of
    the journal entry using a text field. A text view is an instance of the `UITextView`
    class. It also displays an editable text area, but it normally displays more than
    one line. You’ll enter the body text of the journal entry using a text view.
  prefs: []
  type: TYPE_NORMAL
- en: 'To add the text field and text view to the **New Entry** scene, follow these
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To add a text field to the scene, click the Library button. Type `text` into
    the filter field. A **Text Field** object will appear in the results. Drag it
    to the view of the **New Entry** scene, and position it under the horizontal stack
    view containing the switch and the label:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_29.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.29: Library with the Text Field object selected'
  prefs: []
  type: TYPE_NORMAL
- en: Note that the text field you just added appears in the document outline and
    is a subview of the view for the **New Entry** scene.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Attributes inspector, under **Text Field**, set **Placeholder** to `Journal
    Title`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_30.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.30: Attributes inspector with Placeholder set to Journal Title'
  prefs: []
  type: TYPE_NORMAL
- en: 'To add a text view to the scene, click the Library button. Type `text` into
    the filter field. A **Text View** object will appear in the results. Drag it to
    the view of the **New Entry** scene under the text field you just added:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_31.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.31: Library with Text Field object selected'
  prefs: []
  type: TYPE_NORMAL
- en: Verify the text view you just added appears in the document outline and is a
    subview of the view for **New Entry Scene**. You may also change the default text
    if you wish.
  prefs: []
  type: TYPE_NORMAL
- en: 'You’ll use a constraint to set the height of the text view to its default value
    of 128 points. With the text view selected, click the Add New Constraints button
    and tick the **Height** constraint. After that, click the **Add 1 Constraint**
    button. The text view will now look like the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_32.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.32: Text view with a constraint applied'
  prefs: []
  type: TYPE_NORMAL
- en: Note the red outlines around the text view, as its position relative to the
    enclosing view is ambiguous. Don’t worry about it now, as you will fix it later.
  prefs: []
  type: TYPE_NORMAL
- en: You have successfully added a text field and a text view to the New Entry scene.
    In the next section, you will add a UI element that lets a user take and display
    photos in it.
  prefs: []
  type: TYPE_NORMAL
- en: Adding an image view to the New Entry scene
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As shown in the app tour, the user can use the device camera to take a photo
    for a journal entry. The selected photo will be shown in the Add New Journal Entry
    screen using an image view. In *Chapter 11*, *Building Your User Interface*, you
    added an image view to the `journalCell` table view cell. Now, you will add an
    image view to the New Entry scene. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To add an image view to the scene, click the Library button. Type `imag` into
    the filter field. An **Image View** object will appear in the results. Drag it
    to the view of the **New Entry** scene under the text view:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_33.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.33: Library with the Image View object selected'
  prefs: []
  type: TYPE_NORMAL
- en: Note that the image view you just added appears in the document outline and
    is a subview of the view for **New Entry Scene**.
  prefs: []
  type: TYPE_NORMAL
- en: Click the Size inspector button. Under **View**, set both **Width** and **Height**
    to `200`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the Attributes inspector button. Under **Image View**, set **Image** to
    `face.smiling`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You’ll use constraints to set the width and height for the image view. Click
    the **Add New Constraints** button, and tick the **Width** and **Height** constraints
    (their values should already be set to `200`). After that, click the **Add 2 Constraints**
    button. The image view will now look like the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_34.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.34: Image View with constraints applied'
  prefs: []
  type: TYPE_NORMAL
- en: Note the red outlines around the image view, as its position relative to the
    enclosing view is ambiguous. Don’t worry about it now, as you will fix it later.
  prefs: []
  type: TYPE_NORMAL
- en: All the user interface elements for the New Entry scene have been added. In
    the next section, you’ll embed all of them in a vertical stack view to resolve
    the positioning issues.
  prefs: []
  type: TYPE_NORMAL
- en: Embedding user interface elements in a stack view
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The **New Entry** scene now has all the required user interface elements, but
    the position of the elements relative to the enclosing view is ambiguous. You’ll
    embed all the elements in a vertical stack view and use constraints to resolve
    the positioning issues. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the document outline, select all the user interface elements that you added
    earlier, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_35.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.35: Document outline showing selected elements'
  prefs: []
  type: TYPE_NORMAL
- en: Choose **Embed In** | **Stack View** from the **Editor** menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Stack View** in the document outline. In the Attributes inspector,
    under **Stack View**, set **Alignment** to **Center** and **Spacing** to `8`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'With the stack view selected, click the Add New Constraints button. Enter the
    following values to set the constraints for the stack view:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Top: `20`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Left: `20`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Right: `20`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Constrain to Margins** should already be ticked, which sets a standard margin
    of `8` points. When done, click the **Add 3 Constraints** button. The stack view
    will now look like the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31371_13_36.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.36: Stack view with constraints applied'
  prefs: []
  type: TYPE_NORMAL
- en: Note that all the red lines are gone. The space between the top, right, and
    left edges of the stack view and the corresponding edges of the enclosing view
    have been set to `20 + 8` points. The position of the bottom edge of the stack
    view is automatically derived by the heights of all the elements it contains.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will see that the text field does not extend to the full width of the stack
    view. To fix this, select **Journal Title** in the document outline, and click
    the Add New Constraints button. Set the right constraint to `8`, and click the
    **Add 1 Constraint** button. The text field will be extended to almost the full
    width of the stack view:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_37.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.37: Text field in the stack view with a constraint applied'
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that the text view also does not extend to the full width of the stack
    view. Select **Text View** in the document outline, and click the Add New Constraints
    button. Set the right constraint to `8`, and click the **Add 1 Constraint** button.
    The text view will be extended to almost the full width of the stack view:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_38.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.38: Text view in the stack view with a constraint applied'
  prefs: []
  type: TYPE_NORMAL
- en: All the positioning issues have now been resolved.
  prefs: []
  type: TYPE_NORMAL
- en: 'Build and run your app, and tap the **+** button to display the Add New Journal
    Entry screen:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_39.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.39: Simulator showing the Add New Journal Entry screen'
  prefs: []
  type: TYPE_NORMAL
- en: You have added all the required user interface elements and constraints to the
    Add New Journal Entry screen. Great job! In the next section, you’ll configure
    the static table view and add user interface elements to the Journal Entry Detail
    screen.
  prefs: []
  type: TYPE_NORMAL
- en: Modifying the Journal Entry Detail screen
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let’s see what the Journal Entry Detail screen looks like in the app tour:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31371_13_40.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.40: The Journal Entry Detail screen for the completed Journal app'
  prefs: []
  type: TYPE_NORMAL
- en: 'Scrolling up reveals the remaining part of the **Journal Entry Detail** screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B31371_13_41.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.41: The remainder of the Journal Entry Detail screen'
  prefs: []
  type: TYPE_NORMAL
- en: 'As you can see, the **Journal Entry Detail** screen has the following elements:'
  prefs: []
  type: TYPE_NORMAL
- en: A label showing the date
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A custom view showing star ratings
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A label for the journal entry title
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A label for the journal entry body
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An image view for a photo that you will take with your phone’s camera
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An image view showing a map location
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, you need to scroll to view the entire screen. You will now modify it to
    match the design shown in the app tour, beginning by setting the number and size
    of the table view cells in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the number and size of static table view cells
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In *Chapter 12*, *Finishing Up Your User Interface*, you added a table view
    controller scene to the `Main` storyboard file and configured it to use a fixed
    number of cells. This will represent the Journal Entry Detail screen. Now, you
    will set the number and size of the cells to match the layout shown in the app
    tour. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Main** storyboard file, click **Table View Controller Scene** in the
    document outline, and click **Navigation Item**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_42.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.42: Document outline with Table View Controller Scene selected'
  prefs: []
  type: TYPE_NORMAL
- en: Click the Attributes inspector button, and under **Navigation Item**, set **Title**
    to `Entry Detail`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select **Table View Section** in the document outline:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_43.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.43: Document outline with Table View Section selected'
  prefs: []
  type: TYPE_NORMAL
- en: In the Attributes inspector under **Table View Section**, set **Rows** to `7`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_44.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.44: Attributes inspector showing 7 rows'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the second **Table View Cell** under **Table View Section** in the document
    outline:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_45.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.45: Document outline showing second Table View Cell'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the Size inspector button. Under **Table View Cell**, set **Row Height**
    to `60`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_46.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.46: Size inspector showing Row Height set to 60'
  prefs: []
  type: TYPE_NORMAL
- en: Click the fourth **Table View Cell** under **Table View Section** in the document
    outline. In the Size inspector, under **Table View Cell**, set **Row Height**
    to `150`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the fifth **Table View Cell** under **Table View Section** in the document
    outline. In the Size inspector, under **Table View Cell**, set **Row Height**
    to `316`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Repeat the previous step with the sixth **Table View Cell**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You have set the number and size of the cells to match the layout shown in the
    app tour. In the next section, you’ll add the user interface elements to each
    cell.
  prefs: []
  type: TYPE_NORMAL
- en: Adding user interface elements to static table view cells
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the previous section, you used a stack view to help you manage multiple
    user interface elements in the Add New Journal Entry screen. Here, you’ll use
    a table view with static table view cells instead. The advantage of using a static
    table view is that view scrolling is built in, so it can accommodate views that
    are taller than the device screen. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: In the document outline, click the first **Table View Cell**, and drag a **Label**
    object into it from the library. In the Attributes inspector, under **Label**,
    use the **Font** menu to set **Style** to `Semibold` and set **Alignment** to
    right.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click the Add New Constraints button, and set the top, left, and right constraints
    of the label to `0`. Make sure that **Constrain to Margins** is ticked, and click
    the **Add 3 Constraints** button. The label will now look like the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_47.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.47: Label with the constraints applied'
  prefs: []
  type: TYPE_NORMAL
- en: In the document outline, click the second **Table View Cell**, and drag a **Horizontal
    Stack View** object into it from the library. In the Attributes inspector, under
    **Stack View**, set **Spacing** to `8`. Under **View**, set **Background** to
    `System Cyan color`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the Size inspector. Under **View**, set **Width** to `252` and **Height**
    to `44`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click theAdd New Constraints button, and set the **Width** and **Height** constraints
    (their values should already be present). Click the **Add 2 Constraints** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the **Align** button, and tick **Horizontally in Container** and **Vertically
    in Container**. Click the **Add 2 Constraints** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_48.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.48: Align button and dialog box'
  prefs: []
  type: TYPE_NORMAL
- en: 'The stack view will now look like the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_49.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.49: Stack view with the constraints applied'
  prefs: []
  type: TYPE_NORMAL
- en: Click the third **Table View Cell**, and drag a **Label** object into it from
    the library. In the Attributes inspector, under **Label**, set **Style** to `Semibold`
    and **Alignment** to left.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click theAdd New Constraints button, and set the top, left, and right constraints
    of **Label** to `0`. Make sure that **Constrain to Margins** is ticked, and click
    the **Add 3 Constraints** button. The label will now look like the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_50.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.50: Label with the constraints applied'
  prefs: []
  type: TYPE_NORMAL
- en: Click the fourth **Table View Cell**,and drag a **Text View** object into it
    from the library. In the Attributes inspector, under **Text View**, uncheck **Editable**
    and **Selectable**. You can also change the default text if you wish.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click theAdd New Constraints button, and set the top, left, right, and bottom
    constraints to `0`. Make sure that **Constrain to Margins** is ticked, and click
    the **Add 4 Constraints** button. The text view will now look like the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_51.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.51: Text View with the constraints applied'
  prefs: []
  type: TYPE_NORMAL
- en: Click the fifth **Table View Cell**, and drag an **Image View** object into
    it from the library. In the Attributes inspector, under **Image View**, set **Image**
    to `face.smiling`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Size inspector, under **View**, set **Width** and **Height** to `300`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the Add New Constraints button, and set the **Width** and **Height** constraints
    (their values should already be present). Click the **Add 2 Constraints** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click the Align button, and tick **Horizontally in Container** and **Vertically
    in Container**. Click the **Add 2 Constraints** button. The image view will now
    look like the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_52.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.52: Image View object with constraints applied'
  prefs: []
  type: TYPE_NORMAL
- en: Click the sixth **Table View Cell**, and drag an **Image View** object into
    it from the library. In the Attributes inspector, under **Image View**, set **Image**
    to `map`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Repeat *steps 13* to *15* for this image view. It will now look like the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_53.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.53: Image View object with constraints applied'
  prefs: []
  type: TYPE_NORMAL
- en: 'All the required user interface elements have been added to the **Entry Detail**
    scene. Build and run your app, and tap a row on the Journal List screen to navigate
    to the Journal Entry Detail screen:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_54.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.54: Simulator showing the Journal Entry Detail screen'
  prefs: []
  type: TYPE_NORMAL
- en: Scroll down to see the remaining part of the Journal Entry Detail screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B31371_13_55.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 13.55: Simulator showing the remainder of the Journal Entry Detail screen'
  prefs: []
  type: TYPE_NORMAL
- en: Excellent! You have modified all the screens for your app, and you’re ready
    to add functionality to them in the next part of this book.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you modified the Journal List, Add New Journal Entry, and Journal
    Entry Detail screens to match the design shown in the app tour. For the Journal
    List screen, you modified the `journalCell` table view cell by adding an image
    view and two labels to it. You modified the Add New Journal Entry screen by adding
    a custom view, a switch, a text field, a text view, and an image view to it. You
    also configured the image view to show a default image. For the Journal Entry
    Detail screen, you added a text view, labels, and image views to it, configuring
    the image views to show default images.
  prefs: []
  type: TYPE_NORMAL
- en: You now have more experience in how to use Interface Builder to add and configure
    multiple user interface elements, set their sizes and positions using the Size
    inspector, and apply the necessary constraints using the Add New Constraints and
    Align buttons. This will be useful to ensure compatibility with different screen
    sizes and orientations. You should also be able to easily prototype the appearance
    and flow of your apps.
  prefs: []
  type: TYPE_NORMAL
- en: You’re now finished with the storyboard and design setup. You can go through
    every screen that your app has and see what they look like, even though none of
    the screens have actual data in them. If this app was a house being built, it’s
    as though you’ve built all the walls and floors, and the house is now ready to
    have the interior done. Great job!
  prefs: []
  type: TYPE_NORMAL
- en: This concludes *Part 2* of this book. In the next part, you’ll begin to type
    in all the code required for your app to work. In the next chapter, you’ll start
    by learning more about the **Model-View-Controller** design pattern. You’ll also
    learn how table views work, which is crucial for understanding how the Journal
    List screen works.
  prefs: []
  type: TYPE_NORMAL
- en: Leave a review!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thank you for purchasing this book from Packt Publishing—we hope you enjoy it!
    Your feedback is invaluable and helps us improve and grow. Once you’ve completed
    reading it, please take a moment to leave an Amazon review; it will only take
    a minute, but it makes a big difference for readers like you. Scan the QR code
    below or visit the link to receive a free ebook of your choice.
  prefs: []
  type: TYPE_NORMAL
- en: '[https://packt.link/NzOWQ](https://packt.link/NzOWQ%0D)'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](img/QR_Code2370024260177460609.png)](https://packt.link/NzOWQ%0D)'
  prefs: []
  type: TYPE_NORMAL
