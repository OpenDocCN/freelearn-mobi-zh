["```swift\nclass Pet {\n    var name: String\n\n    init(name: String) {\n        self.name = name\n    }\n}\nfunc printName(for pet: Pet) {\n    print(pet.name)\n}\nlet cat = Pet(name: \"Jesse\")\nprintName(for: cat)\n```", "```swift\nfunc printName2(for pet: Pet) {\n    print(pet.name)\n    pet.name = \"Pugwash\"\n}\nlet dog = Pet(name: \"Astro\")\nprintName2(for: dog)\nprint(dog.name)\n```", "```swift\nlet point = CGPoint(x: 10, y: 10)\npoint.x = 10\n```", "```swift\nCannot assign to property: 'point' is a 'let' constant\n```", "```swift\nlet dog = Pet(name: \"Astro\")\n```", "```swift\ndog = Pet(name: \"Iro\")\n```", "```swift\nlet point = CGPoint(x: 10, y: 10)\npoint.x = 10\n```", "```swift\nstruct Pet {\n    var name: String\n}\nfunc printName(for pet: Pet) {\n    print(pet.name)\n    pet.name = \"Jesse\"\n}\nlet dog = Pet(name: \"Astro\")\nprintName(for: dog) \nprint(dog.name)\n```", "```swift\nfunc printName(for pet: Pet) {\n    var pet = pet\n    print(pet.name)\n    pet.name = \"Jesse\"\n}\n```", "```swift\nstruct Car {\n    var fuelRemaining: Double\n\n    func fillFuelTank() {\n        fuelRemaining = 1\n    }\n}\n```", "```swift\nmutating func fillFuelTank() {\n    fuelRemaining = 1\n}\n```", "```swift\nstruct TrafficLight {\n    var state: TrafficLightState\n}\nenum TrafficLightState {\n    case green\n    case yellow\n    case red\n}\n```", "```swift\nenum TrafficLightState: String {\n    case green\n    case yellow\n    case red\n}\n```", "```swift\nprotocol PetProtocol {\n    var name: String { get }\n    var ownerName: String { get set }\n\n}\nclass Animal {\n    let name: String\n    init(name: String) {\n        self.name = name\n    }\n}\nclass Pet: Animal, PetProtocol {\n    var ownerName: String\n\n    init(name: String, ownerName: String) {\n        self.ownerName = ownerName\n        super.init(name: name)\n    }\n}\n```", "```swift\nclass ImageInformation {\n    var name: String\n    var width: Int\n    var height: Int\n\n    init(name: String, width: Int, height: Int) {\n        self.name = name\n        self.width = width\n        self.height = height\n    }\n}\nstruct ImageLocation {\n    let location: String\n    let isRemote: Bool\n    var isLoaded: Bool\n}\nlet info = ImageInformation(name: \"ImageName\", width: 100, height: 100)\nlet location = ImageLocation(location: \"ImageLocation\", isRemote: false, isLoaded: false)\n```"]