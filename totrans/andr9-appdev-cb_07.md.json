["```kt\n<TextView\n    android:id=\"@+id/textView\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    app:layout_constraintLeft_toLeftOf=\"parent\"\n    app:layout_constraintTop_toTopOf=\"parent\" />\n\n<EditText\n    android:id=\"@+id/editTextName\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:ems=\"10\"\n    android:hint=\"Enter your name\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintLeft_toLeftOf=\"parent\"\n    app:layout_constraintRight_toRightOf=\"parent\"\n    app:layout_constraintTop_toTopOf=\"parent\"/>\n\n<Button\n    android:id=\"@+id/button\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Save\"\n    app:layout_constraintTop_toBottomOf=\"@+id/editTextName\"\n    app:layout_constraintLeft_toLeftOf=\"parent\"\n    app:layout_constraintRight_toRightOf=\"parent\"\n    android:onClick=\"saveName\"/>\n\n```", "```kt\nprivate final String NAME=\"NAME\"; \nprivate EditText mEditTextName; \n```", "```kt\nTextView textView = (TextView)findViewById(R.id.textView);\nSharedPreferences sharedPreferences = getPreferences(MODE_PRIVATE);\nString name = sharedPreferences.getString(NAME,null);\nif (name==null) {\n    textView.setText(\"Hello\");\n} else {\n    textView.setText(\"Welcome back \" + name + \"!\");\n}\nmEditTextName = findViewById(R.id.editTextName);\n```", "```kt\npublic void saveName(View view) {\n    SharedPreferences.Editor editor = getPreferences(MODE_PRIVATE).edit();\n    editor.putString(NAME, mEditTextName.getText().toString());\n    editor.commit();\n}\n```", "```kt\n<EditText\n    android:id=\"@+id/editText\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:inputType=\"textMultiLine\"\n    android:ems=\"10\"\n    app:layout_constraintTop_toTopOf=\"parent\"\n    app:layout_constraintBottom_toTopOf=\"@+id/buttonRead\"\n    app:layout_constraintLeft_toLeftOf=\"parent\"\n    app:layout_constraintRight_toRightOf=\"parent\" />\n<Button\n    android:id=\"@+id/buttonRead\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Read\"\n    app:layout_constraintLeft_toLeftOf=\"parent\"\n    app:layout_constraintRight_toRightOf=\"parent\"\n    app:layout_constraintBottom_toTopOf=\"@+id/buttonWrite\"\n    android:onClick=\"readFile\"/>\n<Button\n    android:id=\"@+id/buttonWrite\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Write\"\n    app:layout_constraintLeft_toLeftOf=\"parent\"\n    app:layout_constraintRight_toRightOf=\"parent\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    android:onClick=\"writeFile\"/>\n```", "```kt\nprivate final String FILENAME=\"testfile.txt\"; \nEditText mEditText; \n```", "```kt\nmEditText = (EditText)findViewById(R.id.editText); \n```", "```kt\npublic void writeFile(View view) {\n    try {\n        FileOutputStream fileOutputStream = openFileOutput(FILENAME, Context.MODE_PRIVATE);        \n        fileOutputStream.write(mEditText.getText().toString().getBytes());\n        fileOutputStream.close();\n    } catch (java.io.IOException e) {\n        e.printStackTrace();\n    }\n}\n```", "```kt\npublic void readFile(View view) {\n    StringBuilder stringBuilder = new StringBuilder();\n    try {\n        InputStream inputStream = openFileInput(FILENAME);\n        if ( inputStream != null ) {\n            InputStreamReader inputStreamReader = new InputStreamReader(inputStream);            \n            BufferedReader bufferedReader = new BufferedReader(inputStreamReader);\n            String newLine = null;\n            while ((newLine = bufferedReader.readLine()) != null ) {\n                stringBuilder.append(newLine+\"\\n\");\n            }\n            inputStream.close();\n        }\n    } catch (java.io.IOException e) {\n        e.printStackTrace();\n    }\n    mEditText.setText(stringBuilder);\n}\n```", "```kt\ngetCacheDir() \n```", "```kt\n<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n```", "```kt\nprivate final String FILENAME=\"testfile.txt\";\nprivate final String[] PERMISSIONS_STORAGE = {\n        Manifest.permission.READ_EXTERNAL_STORAGE,\n        Manifest.permission.WRITE_EXTERNAL_STORAGE\n};\nEditText mEditText;\n```", "```kt\nmEditText = (EditText)findViewById(R.id.editText); \n```", "```kt\npublic boolean isExternalStorageWritable() {\n    if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {\n        return true;\n    }\n    return false;\n}\n\npublic boolean isExternalStorageReadable() {\n    if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState()) ||\n            Environment.MEDIA_MOUNTED_READ_ONLY.equals(Environment.getExternalStorageState())) {\n        return true;\n    }\n    return false;\n}\n```", "```kt\npublic void checkStoragePermission() {\n    int permission = ActivityCompat.checkSelfPermission(this, \n            Manifest.permission.WRITE_EXTERNAL_STORAGE);\n\n    if (permission != PackageManager.PERMISSION_GRANTED) {\n        ActivityCompat.requestPermissions(this, PERMISSIONS_STORAGE,101);\n    }\n}\n```", "```kt\npublic void writeFile(View view) {\n    if (isExternalStorageWritable()) {\n        checkStoragePermission();\n        try {\n            File textFile = new File(Environment.getExternalStorageDirectory(), FILENAME);\n            FileOutputStream fileOutputStream = new FileOutputStream(textFile);\n            fileOutputStream.write(mEditText.getText().toString().getBytes());\n            fileOutputStream.close();\n        } catch (java.io.IOException e) {\n            e.printStackTrace();\n            Toast.makeText(this, \"Error writing file\", Toast.LENGTH_LONG).show();\n        }\n    } else {\n        Toast.makeText(this, \"Cannot write to External Storage\", Toast.LENGTH_LONG).show();\n    }\n}\n```", "```kt\npublic void readFile(View view) {\n    if (isExternalStorageReadable()) {\n        checkStoragePermission();\n        StringBuilder stringBuilder = new StringBuilder();\n        try {\n            File textFile = new File(Environment.getExternalStorageDirectory(), FILENAME);\n            FileInputStream fileInputStream = new FileInputStream(textFile);\n            if (fileInputStream != null ) {\n                InputStreamReader inputStreamReader = new InputStreamReader(fileInputStream);\n                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);\n                String newLine = null;\n                while ( (newLine = bufferedReader.readLine()) != null ) {\n                    stringBuilder.append(newLine+\"\\n\");\n                }\n                fileInputStream.close();\n            }\n            mEditText.setText(stringBuilder);\n        } catch (java.io.IOException e) {\n            e.printStackTrace();\n            Toast.makeText(this, \"Error reading file\", Toast.LENGTH_LONG).show();\n        }\n    } else {\n        Toast.makeText(this, \"Cannot read External Storage\",\n                Toast.LENGTH_LONG).show();\n    }\n```", "```kt\nFile textFile = new File(Environment.getExternalStorageDirectory(), FILENAME);\n```", "```kt\ngetExternalStoragePublicDirectory(Environment.DIRECTORY_MUSIC) \n```", "```kt\nif (Environment.getExternalStorageDirectory().getFreeSpace() < RQUIRED_FILE_SPACE) { \n    //Not enough space \n} else { \n    //We have enough space \n} \n```", "```kt\ntextFile.delete() \n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n    <TextView\n        android:id=\"@+id/textViewRaw\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:layout_weight=\"1\"\n        android:gravity=\"center_horizontal|center_vertical\"/>\n    <TextView\n        android:id=\"@+id/textViewAsset\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:layout_weight=\"1\"\n        android:gravity=\"center_horizontal|center_vertical\"/>\n</LinearLayout> \n```", "```kt\nprivate String getText(InputStream inputStream) {\n    StringBuilder stringBuilder = new StringBuilder();\n    try {;\n        if ( inputStream != null ) {\n            InputStreamReader inputStreamReader = new InputStreamReader(inputStream);            \n            BufferedReader bufferedReader = new BufferedReader(inputStreamReader);\n            String newLine = null;\n            while ((newLine = bufferedReader.readLine()) != null ) {\n                stringBuilder.append(newLine+\"\\n\");\n            }\n            inputStream.close();\n        }\n    } catch (java.io.IOException e) {\n        e.printStackTrace();\n    }\n    return stringBuilder.toString();\n}\n```", "```kt\nTextView textViewRaw = findViewById(R.id.textViewRaw);\ntextViewRaw.setText(getText(this.getResources().openRawResource(R.raw.raw_text)));\nTextView textViewAsset = findViewById(R.id.textViewAsset);\ntry {\n    textViewAsset.setText(getText(this.getAssets().open(\"asset_text.txt\")));\n} catch (IOException e) {\n    e.printStackTrace();\n}\n```", "```kt\nthis.getResources().openRawResource(R.raw.raw_text) \n```", "```kt\nthis.getAssets().open(\"asset_text.txt\") \n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n    <EditText\n        android:id=\"@+id/editTextWord\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentStart=\"true\"\n        android:hint=\"Word\"/>\n    <EditText\n        android:id=\"@+id/editTextDefinition\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_below=\"@+id/editTextWord\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentStart=\"true\"\n        android:hint=\"Definition\"/>\n    <Button\n        android:id=\"@+id/buttonAddUpdate\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Save\"\n        android:layout_alignParentRight=\"true\"\n        android:layout_alignParentTop=\"true\" />\n    <ListView\n        android:id=\"@+id/listView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_below=\"@+id/et_definition\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentBottom=\"true\" />\n</LinearLayout>\n```", "```kt\npublic class DictionaryDatabase extends SQLiteOpenHelper { \n```", "```kt\nprivate static final String DATABASE_NAME = \"dictionary.db\";\nprivate static final String TABLE_DICTIONARY = \"dictionary\";\n\nprivate static final String FIELD_WORD = \"word\";\nprivate static final String FIELD_DEFINITION = \"definition\";\nprivate static final int DATABASE_VERSION = 1;\n```", "```kt\nDictionaryDatabase(Context context) {\n    super(context, DATABASE_NAME, null, DATABASE_VERSION);\n}\n\n@Override\npublic void onCreate(SQLiteDatabase db) {\n    db.execSQL(\"CREATE TABLE \" + TABLE_DICTIONARY +\n            \"(_id integer PRIMARY KEY,\" +\n            FIELD_WORD + \" TEXT, \" +\n            FIELD_DEFINITION + \" TEXT);\");\n}\n\n@Override\npublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n    //Handle database upgrade as needed\n}\n```", "```kt\npublic void saveRecord(String word, String definition) {\n    long id = findWordID(word);\n    if (id>0) {\n        updateRecord(id, word,definition);\n    } else {\n        addRecord(word,definition);\n    }\n}\n\npublic long addRecord(String word, String definition) {\n    SQLiteDatabase db = getWritableDatabase();\n\n    ContentValues values = new ContentValues();\n    values.put(FIELD_WORD, word);\n    values.put(FIELD_DEFINITION, definition);\n    return db.insert(TABLE_DICTIONARY, null, values);\n}\n\npublic int updateRecord(long id, String word, String definition) {\n    SQLiteDatabase db = getWritableDatabase();\n    ContentValues values = new ContentValues();\n    values.put(\"_id\", id);\n    values.put(FIELD_WORD, word);\n    values.put(FIELD_DEFINITION, definition);\n    return db.update(TABLE_DICTIONARY, values, \"_id = ?\", new String[]{String.valueOf(id)});\n}\npublic int deleteRecord(long id) {\n    SQLiteDatabase db = getWritableDatabase();\n    return db.delete(TABLE_DICTIONARY, \"_id = ?\", new String[]{String.valueOf(id)});\n}\n```", "```kt\npublic long findWordID(String word) {\n    long returnVal = -1;\n    SQLiteDatabase db = getReadableDatabase();\n    Cursor cursor = db.rawQuery(\n            \"SELECT _id FROM \" + TABLE_DICTIONARY + \" WHERE \" + FIELD_WORD + \" = ?\", \n            new String[]{word});\n    if (cursor.getCount() == 1) {\n        cursor.moveToFirst();\n        returnVal = cursor.getInt(0);\n    }\n    return returnVal;\n}\n\npublic String getDefinition(long id) {\n    String returnVal = \"\";\n    SQLiteDatabase db = getReadableDatabase();\n    Cursor cursor = db.rawQuery(\n            \"SELECT definition FROM \" + TABLE_DICTIONARY + \" WHERE _id = ?\", \n            new String[]{String.valueOf(id)});\n    if (cursor.getCount() == 1) {\n        cursor.moveToFirst();\n        returnVal = cursor.getString(0);\n    }\n    return returnVal;\n}\n\npublic Cursor getWordList() {\n    SQLiteDatabase db = getReadableDatabase();\n    String query = \"SELECT _id, \" + FIELD_WORD +\n            \" FROM \" + TABLE_DICTIONARY + \" ORDER BY \" + FIELD_WORD +\n            \" ASC\";\n    return db.rawQuery(query, null);\n}\n```", "```kt\nEditText mEditTextWord; \nEditText mEditTextDefinition; \nDictionaryDatabase mDB; \nListView mListView; \n```", "```kt\nprivate void saveRecord() {\n    mDB.saveRecord(mEditTextWord.getText().toString(), mEditTextDefinition.getText().toString());\n    mEditTextWord.setText(\"\");\n    mEditTextDefinition.setText(\"\");\n    updateWordList();\n}\n```", "```kt\nprivate void updateWordList() {\n    SimpleCursorAdapter simpleCursorAdapter = new SimpleCursorAdapter(\n            this,\n            android.R.layout.simple_list_item_1,\n            mDB.getWordList(),\n            new String[]{\"word\"},\n            new int[]{android.R.id.text1},\n            0);\n    mListView.setAdapter(simpleCursorAdapter);\n}\n```", "```kt\nmDB = new DictionaryDatabase(this);\nmEditTextWord = findViewById(R.id.editTextWord);\nmEditTextDefinition = findViewById(R.id.editTextDefinition);\nButton buttonAddUpdate = findViewById(R.id.buttonAddUpdate);\nbuttonAddUpdate.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        saveRecord();\n    }\n});\n\nmListView = findViewById(R.id.listView);\nmListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n    @Override\n    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n        Toast.makeText(MainActivity.this, mDB.getDefinition(id), Toast.LENGTH_SHORT).show();\n    }\n});\nmListView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n    @Override\n    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n        Toast.makeText(MainActivity.this, \n                \"Records deleted = \" + mDB.deleteRecord(id), Toast.LENGTH_SHORT).show();\n        updateWordList();\n        return true;\n    }\n});\nupdateWordList();\n```", "```kt\nDictionaryDatabase(Context context) { \n    super(context, DATABASE_NAME, null, DATABASE_VERSION); \n} \n```", "```kt\nmDB = new DictionaryDatabase(this); \n```", "```kt\npublic class DictionaryAdapter extends CursorAdapter {\n    public DictionaryAdapter(Context context, Cursor c, int flags) {\n        super(context, c, flags);\n    }\n\n    @Override\n    public View newView(Context context, Cursor cursor, ViewGroup parent) {\n        return LayoutInflater.from(context)\n                .inflate(android.R.layout.simple_list_item_1,parent, false);\n    }\n\n    @Override\n    public void bindView(View view, Context context, Cursor cursor) {\n        TextView textView = view.findViewById(android.R.id.text1);\n        textView.setText(cursor.getString(getCursor().getColumnIndex(\"word\")));\n    }\n}\n```", "```kt\npublic class DictionaryLoader extends CursorLoader { \n    Context mContext;\n    public DictionaryLoader(Context context) {\n        super(context);\n        mContext = context;\n    }\n\n    @Override\n    public Cursor loadInBackground() {\n        DictionaryDatabase db = new DictionaryDatabase(mContext);\n        return db.getWordList();\n    }\n} \n```", "```kt\npublic class MainActivity extends AppCompatActivity \n    implements LoaderManager.LoaderCallbacks<Cursor> {\n```", "```kt\nEditText mEditTextWord; \nEditText mEditTextDefinition; \nDictionaryDatabase mDB; \nListView mListView; \nDictionaryAdapter mAdapter; \n```", "```kt\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    mDB = new DictionaryDatabase(this);\n\n    mEditTextWord = findViewById(R.id.editTextWord);\n    mEditTextDefinition = findViewById(R.id.editTextDefinition);    \n    Button buttonAddUpdate = findViewById(R.id.buttonAddUpdate);\n    buttonAddUpdate.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            saveRecord();\n        }\n    });\n\n    mListView = findViewById(R.id.listView);\n    mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n        @Override\n        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n            Toast.makeText(MainActivity.this,\n                    mDB.getDefinition(id),\n                    Toast.LENGTH_SHORT).show();\n        }\n    });\n    mListView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n        @Override\n        public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n            Toast.makeText(MainActivity.this, \"Records deleted = \" + mDB.deleteRecord(id),\n                    Toast.LENGTH_SHORT).show();\n            getSupportLoaderManager().restartLoader(0, null, MainActivity.this);\n            return true;\n        }\n    });\n    getSupportLoaderManager().initLoader(0, null, this);\n    mAdapter = new DictionaryAdapter(this,mDB.getWordList(),0);\n    mListView.setAdapter(mAdapter);\n}\n```", "```kt\nprivate void saveRecord() {\n    mDB.saveRecord(mEditTextWord.getText().toString(), mEditTextDefinition.getText().toString());\n    mEditTextWord.setText(\"\");\n    mEditTextDefinition.setText(\"\");\n    getSupportLoaderManager().restartLoader(0, null, MainActivity.this);\n}\n```", "```kt\n@Override\npublic Loader<Cursor> onCreateLoader(int id, Bundle args) {\n    return new DictionaryLoader(this);\n}\n\n@Override\npublic void onLoadFinished(Loader<Cursor> loader, Cursor data) {\n    mAdapter.swapCursor(data);\n}\n\n@Override\npublic void onLoaderReset(Loader<Cursor> loader) {\n    mAdapter.swapCursor(null);\n}\n```", "```kt\n<Button\n    android:id=\"@+id/button\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Request Access\"\n    android:onClick=\"onAccessClick\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintLeft_toLeftOf=\"parent\"\n    app:layout_constraintRight_toRightOf=\"parent\"\n    app:layout_constraintTop_toTopOf=\"parent\" />\n```", "```kt\nprivate final int REQUEST_FOLDER_MUSIC=101;\n```", "```kt\npublic void onAccessClick(View view) {\n    StorageManager storageManager = (StorageManager)getSystemService(Context.STORAGE_SERVICE);\n    StorageVolume storageVolume = storageManager.getPrimaryStorageVolume();\n    Intent intent = storageVolume.createAccessIntent(Environment.DIRECTORY_MUSIC);\n    startActivityForResult(intent, REQUEST_FOLDER_MUSIC);\n}\n```", "```kt\n@Override\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n    super.onActivityResult(requestCode, resultCode, data);\n    switch (requestCode) {\n        case REQUEST_FOLDER_MUSIC:\n            if (resultCode == Activity.RESULT_OK) {\n                getContentResolver().takePersistableUriPermission(data.getData(), 0);\n            }\n            break;\n    }\n}\n```", "```kt\nIntent intent = storageVolume.createAccessIntent(Environment.DIRECTORY_MUSIC);\n```"]