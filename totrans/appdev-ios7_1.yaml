- en: Chapter 1. Xcode 5 – A Developer's Ultimate Tool
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章. Xcode 5 – 开发者的终极工具
- en: With the release of iOS 7, Apple has also provided developers with a completely
    updated version of Xcode, that is, its **Integrated Development Environment**
    (**IDE**). Xcode 5 is a major step forward, complete with more tools and features
    available than ever before.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 随着 iOS 7 的发布，苹果也为开发者提供了一个完全更新的 Xcode 版本，即其 **集成开发环境**（**IDE**）。Xcode 5 是一个重大的进步，它提供了比以往任何时候都更多的工具和功能。
- en: Understanding the powerful features of your IDE is the key to high productivity
    and overall ease of development. In this chapter, we will explore all these new
    features and learn how they will assist you in writing your apps for iOS 7.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 理解您 IDE 的强大功能是提高生产力和整体开发便捷性的关键。在本章中，我们将探讨所有这些新功能，并学习它们如何帮助您为 iOS 7 编写应用程序。
- en: The new user experience
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 新的用户体验
- en: Xcode 5 features many welcomed changes to its overall user experience in the
    form of subtle design enhancements and under-the-hood optimization. Take a few
    minutes to play with the new IDE, and you will see that although not much has
    moved, the cleaner UI provides a much less distracting environment to work in.
    Shorter toolbars and easy-to-see highlighted buttons help keep your content front
    and center.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode 5 对其整体用户体验进行了许多受欢迎的改进，包括微妙的设计增强和底层优化。花几分钟时间尝试使用新的 IDE，您会发现尽管变化不大，但更干净的
    UI 提供了一个更少干扰的工作环境。更短的工具栏和易于看到的突出按钮有助于将您的内容置于最前面。
- en: 'The following screenshot shows how the window of the new IDE looks:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了新 IDE 的窗口外观：
- en: '![The new user experience](img/0319OT_01_11.jpg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![新的用户体验](img/0319OT_01_11.jpg)'
- en: 'Features such as Open Quickly have been trimmed down in size, yet improved
    in functionality. Navigating to **File** | **Open Quickly** or using the keyboard
    shortcut *command* + *shift* + *O* will open a simplified single-line search bar
    in the middle of your screen. As you type an option, search results are returned
    much more quickly and prioritized based on relevance. Each result also features
    detailed data on your query such as the file and line number. The following screenshot
    shows an example of search results:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Open Quickly 等功能在尺寸上进行了精简，但在功能上得到了改进。通过 **File** | **Open Quickly** 导航或使用键盘快捷键
    *command* + *shift* + *O* 将在屏幕中间打开一个简化的单行搜索栏。随着您输入选项，搜索结果会更快地返回，并基于相关性进行优先排序。每个结果还提供了关于您的查询的详细数据，例如文件和行号。以下截图显示了搜索结果的一个示例：
- en: '![The new user experience](img/0319OT_01_02.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![新的用户体验](img/0319OT_01_02.jpg)'
- en: 'For a more refined search, you may want to select the search navigator from
    the navigator panel or use the keyboard shortcut *command* + *3*. Typing a search
    query and pressing *enter* will prompt Xcode 5 to perform a project-wide search
    by default. The results will be displayed in the navigator below the search bar,
    and also includes new options for refinement. Selecting the **In Project** button
    (here, `Project` is the name of your project) will allow you to specify individual
    folders to perform the search in. For even more flexibility, the new search navigator
    will allow you to build custom search scopes that can be saved for future usage.
    The following screenshot shows the difference between when we do and when we do
    not select the **In FoodAndMe** button (in this case, `FoodAndMe` is the project
    name):'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进行更精确的搜索，您可能需要从导航面板中选择搜索导航器或使用键盘快捷键 *command* + *3*。输入搜索查询并按 *enter* 键将提示
    Xcode 5 默认执行项目范围内的搜索。结果将在搜索栏下方的导航器中显示，并包括新的细化选项。选择 **In Project** 按钮（在此处，`Project`
    是您项目的名称）将允许您指定要搜索的单独文件夹。为了获得更大的灵活性，新的搜索导航器将允许您构建可保存供将来使用的自定义搜索范围。以下截图显示了选择和不选择
    **In FoodAndMe** 按钮（在这种情况下，`FoodAndMe` 是项目名称）之间的差异：
- en: '![The new user experience](img/0319OT_01_01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![新的用户体验](img/0319OT_01_01.jpg)'
- en: Top-level documentation
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 顶级文档
- en: Apple provides some of the most in-depth SDK documentation of any development
    platform. Access to this documentation is possibly one of the most important aspects
    of iOS development. Previous versions of Xcode always had access to documentation;
    however, Xcode 5 takes a more accessible approach with its top-level documentation.
    It's important to note that an Internet connection is required unless you predownload
    the documentation from Apple. This can be done by navigating to **Xcode** | **Preferences**
    | **Downloads**.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果公司提供了任何开发平台中最深入的SDK文档之一。访问这些文档可能是iOS开发最重要的方面之一。Xcode的早期版本始终可以访问文档；然而，Xcode
    5通过其顶级文档采取了更易于访问的方法。需要注意的是，除非你从苹果公司预先下载文档，否则需要互联网连接。这可以通过导航到**Xcode** | **首选项**
    | **下载**来完成。
- en: Go to the menu bar and navigate to **Help** | **Documentation and API Reference**.
    Xcode 5 will show a separate window that has been designed to streamline the search
    and display of all of the documentation. Apple has built this documentation to
    work for you. As you type, Xcode will display suggestions in the form of API references,
    SDK guides, and even **Sample Code** related to your search.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 前往菜单栏，导航到**帮助** | **文档和API参考**。Xcode 5将显示一个专门设计的窗口，用于简化所有文档的搜索和显示。苹果公司构建了这个文档，以便为你服务。当你键入时，Xcode将显示API参考、SDK指南甚至与你的搜索相关的**示例代码**的建议。
- en: The new documentation view also provides support for tabs, allowing you to view
    multiple pieces of documentation simultaneously. As you browse through the results,
    you may see a dynamic table of contents by clicking on the table of contents button
    immediately to the left-hand side of the search bar. The table of contents will
    automatically update based on the document you are currently viewing.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 新的文档视图还提供了对标签的支持，允许你同时查看多个文档。当你浏览结果时，你可以通过点击搜索栏左侧的目录按钮立即看到动态目录。目录将根据你当前查看的文档自动更新。
- en: Additionally, the new documentation has built-in bookmarking, which allows you
    to save your most frequently viewed resources. To the right of the search bar,
    you will see a share button. Clicking on this button will show a menu with options
    to share or bookmark the current reference.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，新的文档内置了书签功能，允许你保存你最常查看的资源。在搜索栏的右侧，你会看到一个分享按钮。点击此按钮将显示一个菜单，其中包含分享或书签当前参考的选项。
- en: You may have also noticed a small bookmark icon on the left-hand side of each
    title or heading while scrolling through the documentation. You can even save
    specific sections of any API reference rather than saving the entire document.
    All of your bookmarks can be viewed in the navigator by clicking on the navigator
    button immediately on the left-hand side of the table of contents button. This
    view will also allow you to browse the entire documentation library at a glance.
    Combine this with the previous ability of pressing the *alt* key and clicking
    on any code to display an inline summary and linking from the code to full documentation,
    and then you'll have robust documentation integration!
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能也注意到了，在滚动文档时，每个标题或标题的左侧都有一个小的书签图标。你甚至可以保存任何API参考的特定部分，而不仅仅是保存整个文档。你所有的书签都可以通过点击位于目录按钮左侧的导航按钮在导航器中查看。这种视图还将允许你一目了然地浏览整个文档库。结合之前按*alt*键并点击任何代码以显示内联摘要和从代码到完整文档的链接的功能，你将拥有强大的文档集成！
- en: Debugger and debug gauges
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试器和调试仪表
- en: Debugging with Xcode 5 has been greatly improved thanks to many new features
    added to the debugger. Apple has completely switched from the previous GDB engine
    to the much more powerful LLDB engine. This allows breakpoint flexibility, inline
    variable previews, and the finding of variable values more easily.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 由于调试器添加了许多新功能，Xcode 5的调试功能得到了极大的改进。苹果公司已完全从之前的GDB引擎切换到更强大的LLDB引擎。这允许断点灵活性、内联变量预览以及更容易地找到变量值。
- en: If you have ever debugged a project using breakpoints, you will notice some
    changes in the way Xcode 5 manages its breakpoints. Breakpoints are still created
    by clicking directly on the required line number. These breakpoints can then be
    enabled or disabled by clicking on them directly or using the breakpoints button
    that has been moved to the debug toolbar found at the bottom of the Xcode window.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你曾经使用断点调试过项目，你会注意到Xcode 5管理断点的方式有所变化。断点仍然通过直接点击所需的行号来创建。然后可以通过直接点击它们或使用已移动到Xcode窗口底部的调试工具栏上的断点按钮来启用或禁用这些断点。
- en: Each breakpoint may also be configured to respond conditionally. By default,
    code will stop once it reaches a breakpoint. Once you set conditions, however,
    breakpoints will be ignored unless these conditions are met. You can edit these
    conditions by right-clicking on an individual breakpoint and selecting **Edit
    Breakpoint**. From here, set your conditions and resultant actions. These actions
    can include logging a message to the console, running an AppleScript or Shell
    Script, and even playing a sound.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 每个断点也可以配置为有条件地响应。默认情况下，代码会在达到断点时停止。然而，一旦设置了条件，除非满足这些条件，否则断点将被忽略。你可以通过右键单击单个断点并选择**编辑断点**来编辑这些条件。从这里，设置你的条件和结果操作。这些操作可以包括向控制台记录消息、运行AppleScript或Shell
    Script，甚至播放声音。
- en: Another great feature of Xcode 5's debugger is the ability to preview variables
    and objects during debugging using data tips. While debugging your application,
    hover your mouse over a variable and its value will automatically appear below
    your cursor. This works for standard data types, such as strings, numeric types,
    and Boolean types.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode 5的调试器的另一个出色功能是能够在调试期间使用数据提示预览变量和对象。在调试你的应用程序时，将鼠标悬停在变量上，其值会自动出现在光标下方。这适用于标准数据类型，如字符串、数值类型和布尔类型。
- en: 'Data tips are very powerful when it comes to objects as well. For instance,
    while in debug mode, hover your mouse over an image, and a summary of information
    will appear about this object. Selecting the eye-shaped icon will allow you to
    preview the actual image right in code, as shown in the following screenshot:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到对象时，数据提示也非常强大。例如，在调试模式下，将鼠标悬停在一张图片上，就会显示有关此对象的信息摘要。选择眼睛形状的图标将允许你在代码中预览实际图片，如下面的截图所示：
- en: '![Debugger and debug gauges](img/0319OT_01_08.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![调试器和调试仪表](img/0319OT_01_08.jpg)'
- en: Properly debugging any application also involves monitoring system resources
    to ensure your code is as optimized as possible. Xcode 5 introduces **debug gauges**,
    a lightweight and embedded version of some useful instruments' tools. Because
    debug gauges are integrated into Xcode 5, they are able to run alongside the application
    at all times while allowing you to observe CPU, Memory, iCloud, Energy, and OpenGL
    ES resources.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 正确调试任何应用程序还涉及到监控系统资源，以确保你的代码尽可能优化。Xcode 5引入了**调试仪表**，这是某些有用仪表工具的轻量级和嵌入式版本。因为调试仪表集成到Xcode
    5中，所以它们能够在所有时间与应用程序并行运行，同时允许你观察CPU、内存、iCloud、能源和OpenGL ES资源。
- en: 'Debug gauges can be found through the debug navigator and will begin running
    automatically once you run a project. The previously mentioned resources are displayed
    in an easy-to-read visual graph so that you can monitor your application''s performance
    at a glance and in real time. Additionally, access to the complete instruments
    software is just a single click away, which is achieved by clicking on the **Profile
    in Instruments** button shown in the following screenshot:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 通过调试导航器可以找到调试仪表，一旦你运行了一个项目，它们就会自动开始运行。之前提到的资源以易于阅读的视觉图表形式显示，这样你可以一目了然地实时监控应用程序的性能。此外，访问完整的仪表软件只需单击一下，这可以通过点击以下截图所示的**在仪表中配置配置文件**按钮实现：
- en: '![Debugger and debug gauges](img/0319OT_01_03.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![调试器和调试仪表](img/0319OT_01_03.jpg)'
- en: Automatic configuration with accounts and capabilities
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用账户和功能进行自动配置
- en: Apple provides a wide variety of useful services that can be included in any
    application. Enabling your application to support these services has always been
    a hassle due to the number of tasks a developer is required to manually set up.
    These include adding entitlements, such as the App ID, linking frameworks to the
    project, and adding required fields to the projects `.plist` file. Additionally,
    each of these services has its own requirements, which means that supporting multiple
    services would require different steps to complete.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Apple 提供了各种有用的服务，这些服务可以包含在任何应用程序中。由于开发者需要手动设置的任务数量，使应用程序支持这些服务一直是一个麻烦。这包括添加权限，如
    App ID、将框架链接到项目，以及将所需字段添加到项目的 `.plist` 文件中。此外，这些服务中的每一个都有自己的要求，这意味着支持多个服务需要不同的步骤来完成。
- en: With the introduction of Xcode 5, Apple has made these struggles a thing of
    the past using automatic configuration. With automatic configuration, all a developer
    needs is an Apple ID linked to a developer account.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 随着 Xcode 5 的推出，Apple 已经使用自动配置消除了这些烦恼。使用自动配置，开发者需要的只是一个与开发者账户关联的 Apple ID。
- en: Navigate to **Xcode** | **Preferences** and select the **Accounts** section
    (new in Xcode 5). From here, you can add all your Developer Program Apple IDs
    and view details related to each account. Clicking on the **+** button located
    on the left-hand side panel will give you the option to add a new Apple ID. Doing
    so will provide a direct connection between Xcode 5 and the Apple Developer Portal.
    Once logged in, click on the **View Details...** button at the bottom-right corner
    of the screen. A new window will appear with details of all code-signing identities
    and provisioning profiles attached to the selected account.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到 **Xcode** | **首选项** 并选择 **账户** 部分（Xcode 5 新增）。从这里，您可以添加所有您的开发者计划 Apple ID
    并查看每个账户的相关详细信息。点击左侧面板上的 **+** 按钮将为您提供添加新 Apple ID 的选项。这样做将在 Xcode 5 和 Apple 开发者门户之间建立直接连接。一旦登录，点击屏幕右下角的
    **查看详细信息...** 按钮。将弹出一个新窗口，显示所选账户附加的所有代码签名身份和配置文件详细信息。
- en: Under the **General** tab in the project editor, you will see a new option,
    **Team**, found in the **Identity** section. Selecting this option will show you
    a list of identities related to the account we previously added. By selecting
    your respective signing identity, Xcode 5 will be able to verify whether you have
    all proper provision profiles and even offer to create them for you if required.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目编辑器的 **常规** 选项卡下，您将在 **标识** 部分看到一个新的选项，**团队**。选择此选项将显示与我们之前添加的账户相关的身份列表。通过选择您的相应签名身份，Xcode
    5 将能够验证您是否拥有所有适当的配置文件，并在需要时甚至可以为您创建它们。
- en: 'Potentially, the biggest advancement provided by automatic configuration is
    the **Capabilities** tab (new in Xcode 5) found in the project editor. This streamlined
    approach will allow you to configure specific platform features, such as **iCloud**,
    **In-App Purchases**, and **Game Center**, without having to visit the developer
    portal as shown in the following screenshot. Xcode 5 will automatically configure
    the provisioning profile, add App ID entitlements, and link all required frameworks
    for you, automatically:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 自动配置提供的最大进步可能是项目编辑器中的 **功能** 选项卡（Xcode 5 新增）。这种简化的方法将允许您配置特定平台功能，例如 **iCloud**、**应用内购买**
    和 **游戏中心**，而无需像以下截图所示的那样访问开发者门户。Xcode 5 将自动配置配置文件，添加 App ID 权限，并为您链接所有必需的框架，自动：
- en: '![Automatic configuration with accounts and capabilities](img/0319OT_01_04.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![使用账户和功能进行自动配置](img/0319OT_01_04.jpg)'
- en: If you prefer to set up your features and capabilities the old way, you may
    still do so in the Apple Developer Portal.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您更喜欢使用旧方法设置功能和功能，您仍然可以在 Apple 开发者门户中这样做。
- en: Source control
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 源代码控制
- en: Source control is widely used by large teams and individual developers alike.
    It provides an extremely useful way to track changes to code and revert back to
    stable builds of a project with version control. Teams of developers may work
    separately on individual components by creating and managing a copy of the code
    (called a **branch**) without overwriting another team member's code. The change
    will later be merged while simultaneously tracking all the changes made to the
    code base.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 源代码控制被大型团队和独立开发者广泛使用。它提供了一种极其有用的方式来跟踪代码更改并使用版本控制回滚到项目的稳定构建。开发者团队可以通过创建和管理代码的副本（称为
    **分支**）来分别独立工作在各个组件上，而不会覆盖其他团队成员的代码。更改将在稍后合并，同时跟踪对代码库所做的所有更改。
- en: 'Source control is not a new feature of Xcode 5; however, Apple has decided
    to provide easier access to its functionality by creating a top-level menu item.
    Selecting it will display a drop-down menu with one-click access to most of the
    source control commands, such as commit, push, and pull. Hovering over **Working
    Copies** will open a new submenu that allows you to switch between branches, create
    a new branch, or merge branches. The following screenshot shows this submenu:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 源代码控制不是Xcode 5的新功能；然而，苹果公司决定通过创建顶级菜单项来提供对其功能的更便捷访问。选择它将显示一个下拉菜单，其中包含一键访问大多数源代码控制命令，如提交、推送和拉取。将鼠标悬停在**工作副本**上，将打开一个新的子菜单，允许您在分支之间切换、创建新分支或合并分支。以下截图显示了此子菜单：
- en: '![Source control](img/0319OT_01_05.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![源代码控制](img/0319OT_01_05.jpg)'
- en: In addition to local source control on your computer, Xcode 5 also supports
    the ability to connect directly to remote repositories hosted on popular sites,
    such as GitHub. Open preferences and navigate to the **Accounts** tab once again.
    This time, after clicking on the **+** button, select **Add Repository**. Once
    you have entered the proper repository address, Xcode 5 will connect the repository,
    thus allowing you to access it remotely.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在您的计算机上的本地源代码控制之外，Xcode 5还支持直接连接到托管在流行网站上的远程仓库，例如GitHub。打开首选项并导航到**账户**标签页。这次，在点击**+**按钮后，选择**添加仓库**。一旦您输入了正确的仓库地址，Xcode
    5将连接到仓库，从而允许您远程访问它。
- en: Asset catalogs
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 资源目录
- en: Every project you create will contain at least a few image files in the form
    of launch images and application icons as well as other UI elements. Asset catalogs
    serve two major purposes in Xcode 5\. These include automation of icon and launch
    image naming conventions and grouping image files together in a single location.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您创建的每个项目都至少包含一些图像文件，形式为启动图像和应用程序图标，以及其他UI元素。在Xcode 5中，资源目录有两个主要用途。这包括自动化图标和启动图像的命名约定，以及将图像文件分组在单个位置。
- en: Asset catalogs are represented as a separate group with a blue folder in the
    project navigator. By default, each new project created will include the default
    `Images.xcassets` item. You may also create your own asset catalogs for further
    organization based on personal preference.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 资源目录在项目导航器中以一个蓝色文件夹的形式表示为一个单独的组。默认情况下，每个新创建的项目都将包含默认的`Images.xcassets`项。您还可以根据个人偏好创建自己的资源目录以进行进一步的组织。
- en: 'Xcode 5 requires each of the launch image files and icon image files to be
    named appropriately based on the device and/or resolution the image will be used
    for. When selecting the `Images.xcassets` item, you will see a number of empty
    slots waiting for images to be added. Each slot has a description of what image
    it holds. Dragging from your computer into Xcode 5 on the respective slot will
    add the image to your project and automatically configure all the naming conventions.
    The following screenshot shows the **Asset Catalog** window:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode 5要求每个启动图像文件和图标图像文件根据图像将用于的设备和/或分辨率适当地命名。当选择`Images.xcassets`项时，您将看到许多空槽等待添加图像。每个槽都有一个描述它所包含的图像。将图像从您的计算机拖动到Xcode
    5的相应槽位，将添加图像到您的项目，并自动配置所有命名约定。以下截图显示了**资源目录**窗口：
- en: '![Asset catalogs](img/0319OT_01_06.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![资源目录](img/0319OT_01_06.jpg)'
- en: 'If you wish to add any additional images related to your project, you can simply
    drag-and-drop them into the **Asset Catalog** window, and Xcode 5 will take care
    of the rest. Both high-resolution (*2x*) and standard-resolution (*1x*) image
    files will be grouped together in their own image set with a common name. You
    still must provide both the low-resolution and high-resolution images yourself.
    Xcode 5 does not automatically scale them for you: it simply groups them. The
    value for this name can be changed to any value and will be used in code to access
    the associated images regardless of the actual filename.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想添加与您的项目相关的任何其他图像，您只需将它们拖放到**资源目录**窗口中，Xcode 5将处理其余部分。高分辨率（*2x*）和标准分辨率（*1x*）图像文件将按共同名称分组到它们自己的图像集中。您仍然必须自己提供低分辨率和高分辨率的图像。Xcode
    5不会为您自动缩放它们：它只是将它们分组。此名称的值可以更改为任何值，并且将在代码中使用此值来访问相关的图像，无论实际文件名如何。
- en: Quick build device selection
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快速构建设备选择
- en: Developing applications for multiple devices requires consistent device-specific
    testing. The iOS simulator included in the iOS SDK provides simulation for all
    Apple devices. With Xcode 5, selecting the proper device to build for has also
    been streamlined into a single drop-down option found on the toolbar.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 开发适用于多设备的应用程序需要一致的设备特定测试。iOS SDK 中包含的 iOS 模拟器为所有苹果设备提供模拟。在 Xcode 5 中，选择要构建的适当设备已被简化为工具栏上的单个下拉选项。
- en: Clicking on the name of the current device on the left of the toolbar will provide
    a drop-down menu. Any and all physical devices connected to your computer will
    appear on the top of the list (you may have to scroll up to see them), and all
    standard iOS simulator devices will appear below.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 点击工具栏左侧当前设备的名称将提供下拉菜单。连接到您的计算机的所有物理设备将出现在列表的顶部（您可能需要向上滚动才能看到它们），所有标准 iOS 模拟器设备将出现在下面。
- en: 'Simply select the device you wish to test for, and click on **Run**. The simulator
    will launch and switch to the selected device. The following screenshot lists
    the devices in the drop-down menu:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 简单选择您希望测试的设备，然后点击 **运行**。模拟器将启动并切换到所选设备。以下截图列出了下拉菜单中的设备：
- en: '![Quick build device selection](img/0319OT_01_07.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![快速构建设备选择](img/0319OT_01_07.jpg)'
- en: Storyboard previews
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Storyboard 预览
- en: Up until now, writing applications that supported previous versions of iOS mostly
    consisted of updating API calls and minor coding conventions. With iOS 7, Apple
    has drastically changed the design of all standard UI objects. Knowing the size,
    position, and layout of all objects for both iOS 7 and previous versions is very
    important to maintaining a consistent user experience. This is where storyboard
    previews come in.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 一直以来，编写支持先前 iOS 版本的应用程序主要涉及更新 API 调用和微小的编码约定。随着 iOS 7 的推出，苹果彻底改变了所有标准 UI 对象的设计。了解
    iOS 7 和先前版本中所有对象的大小、位置和布局对于保持一致的用户体验非常重要。这正是 storyboard 预览发挥作用的地方。
- en: 'In order to use storyboard previews, you must select the assistant editor and
    navigate to the view you wish to preview (usually a `.xib` or `.storyboard` file).
    Select the **Related Files** menu option, navigate to **Preview**, and select
    the `.xib` or `.storyboard` file you wish to preview, as shown in the following
    screenshot:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用 storyboard 预览，您必须选择辅助编辑器并导航到您希望预览的视图（通常是 `.xib` 或 `.storyboard` 文件）。选择
    **相关文件** 菜单选项，导航到 **预览**，并选择您希望预览的 `.xib` 或 `.storyboard` 文件，如图所示：
- en: '![Storyboard previews](img/0319OT_01_09.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![Storyboard 预览](img/0319OT_01_09.jpg)'
- en: 'You will see an identical preview of your view on the right-hand side of the
    assistant editor. In the bottom-right corner of the view, you will see a button
    that says **iOS 7.0 and Later**. Click on it, and then select **iOS 6.1 and Earlier**
    as shown in the following screenshot:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在辅助编辑器的右侧看到视图的相同预览。在视图的右下角，您将看到一个标有 **iOS 7.0 及以后版本** 的按钮。点击它，然后选择 **iOS 6.1
    及更早版本**，如图所示：
- en: '![Storyboard previews](img/0319OT_01_10.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![Storyboard 预览](img/0319OT_01_10.jpg)'
- en: Your view will now display all of its UI elements as they will appear in iOS
    6 or earlier. This is a very handy tool if you wish to make your app backwards
    compatible.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您的视图现在将显示所有 UI 元素，它们将显示在 iOS 6 或更早版本中。如果您希望使应用程序向后兼容，这是一个非常实用的工具。
- en: Summary
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'Xcode 5 has more features for developers than ever before, and each tool is
    designed to give you a more efficient experience while building the best quality
    apps possible. In this chapter, we learned how to use all of these features, from
    new debugging tools to automatic configuration. Although we covered a large portion
    of new Xcode 5 features, you should visit the following link to view Apple''s
    documentation on what''s new in Xcode 5: [https://developer.apple.com/library/mac/releasenotes/DeveloperTools/RN-Xcode/Introduction/Introduction.html](https://developer.apple.com/library/mac/releasenotes/DeveloperTools/RN-Xcode/Introduction/Introduction.html)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode 5 为开发者提供了比以往任何时候都多的功能，每个工具都旨在在构建最佳质量的应用程序时为您提供更高效的使用体验。在本章中，我们学习了如何使用所有这些功能，从新的调试工具到自动配置。尽管我们涵盖了
    Xcode 5 的大量新功能，但您应该访问以下链接，查看 Apple 关于 Xcode 5 新功能的文档：[https://developer.apple.com/library/mac/releasenotes/DeveloperTools/RN-Xcode/Introduction/Introduction.html](https://developer.apple.com/library/mac/releasenotes/DeveloperTools/RN-Xcode/Introduction/Introduction.html)
- en: With each new iOS SDK release, Apple includes some minor and some major updates
    to the Objective-C programming language. In the next chapter, we will cover the
    changes made to the Foundation Framework, possibly the most important framework
    in all of iOS development!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 每次新的iOS SDK发布，苹果都会为Objective-C编程语言添加一些小的和重大的更新。在下一章中，我们将介绍对Foundation框架所做的更改，这可能是iOS开发中最重要的框架！
