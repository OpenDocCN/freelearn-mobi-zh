["```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<resources> \n  <string-array name=\"actions\"> \n    <item>Day of Year</item> \n    <item>On this day...</item> \n    <item>Todos</item> \n    <item>Step Count</item> \n  </string-array> \n</resources> \n\n```", "```java\npublic class TodosActivity extends WearableActivity implements  WearableActionDrawer.OnMenuItemClickListener  \n{ \n  private static final String TAG = TodosActivity.class.getName(); \n  private WearableDrawerLayout mWearableDrawerLayout; \n  private WearableNavigationDrawer mWearableNavigationDrawer; \n  private WearableActionDrawer mWearableActionDrawer; \n  private List<TodoItemType> todoItemTypes =  Arrays.asList(TodoItemType.HOME, TodoItemType.WORK); \n  private TodoItemType mSelectedTodoItemType; \n  private TodoItemTypeFragment mTodoItemTypeFragment; \n\n  @Override \n  protected void onCreate(Bundle savedInstanceState)  \n  { \n    super.onCreate(savedInstanceState); \n    Log.d(TAG, \"onCreate()\"); \n    setContentView(R.layout.activity_todo_main); \n    setAmbientEnabled(); \n\n    //defaulted to Home todo item type \n    mSelectedTodoItemType = TodoItemType.HOME; \n\n    // Initialize content \n    mTodoItemTypeFragment = new TodoItemTypeFragment(); \n    Bundle args = new Bundle(); \n    args.putString(TodoItemTypeFragment.ARG_TODO_TYPE,  mSelectedTodoItemType.toString()); \n    mTodoItemTypeFragment.setArguments(args); \n    FragmentManager fragmentManager = getFragmentManager(); \n    fragmentManager.beginTransaction().replace(R.id.content_frame,  mTodoItemTypeFragment).commit(); \n\n    // Main Wearable Drawer Layout that wraps all content \n    mWearableDrawerLayout = (WearableDrawerLayout)  findViewById(R.id.drawer_layout); \n\n    //Top Navigation Drawer \n    mWearableNavigationDrawer = (WearableNavigationDrawer)  findViewById(R.id.top_navigation_drawer); \n\n    Log.i(TAG, \"mWearableNavigationDrawer  = \" +  mWearableNavigationDrawer); \n    mWearableNavigationDrawer.setAdapter(new  NavigationAdapter(this)); \n\n    // Peeks Navigation drawer on the top. \n    mWearableDrawerLayout.peekDrawer(Gravity.TOP); \n\n    // Bottom Action Drawer \n    mWearableActionDrawer = (WearableActionDrawer)  findViewById(R.id.bottom_action_drawer); \n    mWearableActionDrawer.setOnMenuItemClickListener(this); \n\n    // Peeks action drawer on the bottom. \n    mWearableDrawerLayout.peekDrawer(Gravity.BOTTOM); \n  } \n} \n\n```", "```java\npublic static class TodoItemTypeFragment extends Fragment  \n{ \n  public static final String ARG_TODO_TYPE = \"todo_type\"; \n  TextView titleView = null; \n  TextView descView = null; \n  public TodoItemTypeFragment()  \n  { \n    // Empty constructor required for fragment subclasses \n  } \n  @Override \n  public View onCreateView(LayoutInflater inflater, ViewGroup  container, Bundle savedInstanceState)  \n  { \n    View rootView = inflater.inflate(R.layout.fragment_todo_item,  container, false); \n    titleView = (TextView)  rootView.findViewById(R.id.todo_card_title); \n    descView = (TextView)  rootView.findViewById(R.id.todo_card_desc); \n    String todoType = getArguments().getString(ARG_TODO_TYPE); \n    TodoItemType todoItemType = TodoItemType.valueOf(todoType); \n    updateFragment(todoItemType); \n    return rootView; \n  } \n  public void updateFragment(TodoItemType todoItemType)  \n  { \n       titleView.setText(todoItemType.getTypeValue() + \" Todos\"); \n       //The following line is hardcoded on purpose for simplicity \n       descView.setText(\"List description\"); \n    } \n} \n\n```", "```java\nprivate final class NavigationAdapter extends WearableNavigationDrawer.WearableNavigationDrawerAdapter  \n{ \n  private final Context mContext; \n  public NavigationAdapter(Context context)  \n  { \n    mContext = context; \n  } \n\n  @Override \n  public int getCount()  \n  { \n    return todoItemTypes.size(); \n  } \n\n  @Override \n  public void onItemSelected(int position)  \n  { \n    Log.d(TAG, \"WearableNavigationDrawerAdapter.onItemSelected():  \" + position); \n    mSelectedTodoItemType = todoItemTypes.get(position); \n    String selectedTodoImage =  mSelectedTodoItemType.getBackgroundImage(); \n    int drawableId =  getResources().getIdentifier(selectedTodoImage, \"drawable\",  getPackageName()); \n    mTodoItemTypeFragment.updateFragment(mSelectedTodoItemType); \n  } \n\n  @Override \n  public String getItemText(int pos)  \n  { \n    return todoItemTypes.get(pos).getTypeValue(); \n  } \n\n  @Override \n  public Drawable getItemDrawable(int position)  \n  { \n    mSelectedTodoItemType = todoItemTypes.get(position); \n    String navigationIcon =  mSelectedTodoItemType.getBackgroundImage() \n    int drawableNavigationIconId =  getResources().getIdentifier(navigationIcon, \"drawable\",  getPackageName()) \n    return mContext.getDrawable(drawableNavigationIconId); \n  } \n} \n\n```", "```java\n<android.support.wearable.view.drawer.WearableDrawerLayout \n  android:id=\"@+id/drawer_layout\" \n\n  android:layout_width=\"match_parent\" \n  android:layout_height=\"match_parent\" \n  android:background=\"@color/black\" \n  tools:context=\".TodosActivity\" \n  tools:deviceIds=\"wear\"> \n\n  <FrameLayout \n    android:layout_width=\"match_parent\" \n    android:layout_height=\"match_parent\" \n    android:id=\"@+id/content_frame\"/> \n\n<android.support.wearable.view.drawer.WearableNavigationDrawer \n  android:id=\"@+id/top_navigation_drawer\" \n  android:layout_width=\"match_parent\" \n  android:layout_height=\"match_parent\" \n  android:background=\"@color/light_grey\" /> \n\n<android.support.wearable.view.drawer.WearableActionDrawer \n  android:id=\"@+id/bottom_action_drawer\" \n  android:layout_width=\"match_parent\" \n  android:layout_height=\"match_parent\" \n  app:action_menu=\"@menu/action_todo_drawer_menu\" \n  android:background=\"@color/dark_grey\"/> \n\n</android.support.wearable.view.drawer.WearableDrawerLayout> \n\n```", "```java\n<menu > \n  <item android:id=\"@+id/menu_add_todo\" \n  android:icon=\"@drawable/ic_add_to_list\" \n  android:/> \n\n  <item android:id=\"@+id/menu_update_todo\" \n  android:icon=\"@drawable/ic_todo_list\" \n  android: /> \n\n  <item android:id=\"@+id/menu_clear_todos\" \n\n  android:icon=\"@drawable/ic_clear_list\" \n  android: /> \n</menu> \n\n```", "```java\n@Override \npublic boolean onMenuItemClick(MenuItem menuItem)  \n{ \n  Log.d(TAG, \"onMenuItemClick(): \" + menuItem); \n  final int itemId = menuItem.getItemId(); \n  String toastMessage = \"\"; \n  switch (itemId)  \n  { \n    case R.id.menu_add_todo: \n    toastMessage = \"Adding \" +  mSelectedTodoItemType.getTypeValue() + \" Todo\"; \n    break; \n\n    case R.id.menu_update_todo: \n    toastMessage = \"Updating \" +  mSelectedTodoItemType.getTypeValue() + \" Todo\"; \n    break; \n\n    case R.id.menu_clear_todos: \n    toastMessage = \"Clearing \" +  mSelectedTodoItemType.getTypeValue() + \" Todos\"; \n    break; \n  } \n  mWearableDrawerLayout.closeDrawer(mWearableActionDrawer); \n  if (toastMessage.length() > 0)  \n  { \n    Toast toast = Toast.makeText(getApplicationContext(), toastMessage, Toast.LENGTH_SHORT); \n    toast.show(); \n    return true; \n  }  \n  else  \n  { \n    return false; \n  } \n} \n\n```", "```java\n@Override \npublic void onItemSelected(int position)  \n{ \n  Log.d(TAG, \"WearableNavigationDrawerAdapter.onItemSelected(): \"  + position); \n  mSelectedTodoItemType = todoItemTypes.get(position); \n  String selectedTodoImage =  mSelectedTodoItemType.getBackgroundImage(); \n  int drawableId = getResources().getIdentifier(selectedTodoImage,  \"drawable\", getPackageName()); \n  mTodoItemTypeFragment.updateFragment(mSelectedTodoItemType); \n} \n\n```"]