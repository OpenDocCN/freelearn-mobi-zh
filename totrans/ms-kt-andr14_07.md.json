["```kt\ndata class Pet(\n    val id: Int,\n    val name: String,\n    val species: String\n)\n```", "```kt\ninterface PetsRepository {\n    fun getPets(): List<Pet>\n}\n```", "```kt\nclass PetsRepositoryImpl: PetsRepository {\n    override fun getPets(): List<Pet> {\n        return listOf(\n            Pet(1, \"Bella\", \"Dog\"),\n            Pet(2, \"Luna\", \"Cat\"),\n            Pet(3, \"Charlie\", \"Dog\"),\n            Pet(4, \"Lucy\", \"Cat\"),\n            Pet(5, \"Cooper\", \"Dog\"),\n            Pet(6, \"Max\", \"Cat\"),\n            Pet(7, \"Bailey\", \"Dog\"),\n            Pet(8, \"Daisy\", \"Cat\"),\n            Pet(9, \"Sadie\", \"Dog\"),\n            Pet(10, \"Lily\", \"Cat\"),\n        )\n    }\n}\n```", "```kt\nclass PetsViewModel: ViewModel() {\n    private val petsRepository: PetsRepository = PetsRepositoryImpl()\n    fun getPets() = petsRepository.getPets()\n}\n```", "```kt\n    @Composable\n    fun PetList(modifier: Modifier) {\n        val petsViewModel: PetsViewModel = viewModel()\n        LazyColumn(\n            modifier = modifier\n        ) {\n            items(petsViewModel.getPets()) { pet ->\n                Row(\n                    modifier = Modifier\n                        .fillMaxWidth()\n                        .padding(10.dp),\n                    horizontalArrangement = Arrangement.SpaceBetween\n                ) {\n                    Text(text = \"Name: ${pet.name}\")\n                    Text(text = \"Species: ${pet.species}\")\n                }\n            }\n        }\n    }\n    ```", "```kt\n    ChapterFiveTheme {\n        Scaffold(\n            topBar = {\n                TopAppBar(\n                    title = {\n                       Text(text = \"Pets\")\n                    },\n                    colors =  TopAppBarDefaults.smallTopAppBarColors(\n                        containerColor = MaterialTheme.colorScheme.primary,\n                    )\n                )\n            },\n            content =  { paddingValues ->\n                PetList(\n                    modifier = Modifier\n                        .fillMaxSize()\n                        .padding(paddingValues)\n                )\n            }\n        )\n    }\n    ```", "```kt\nimplementation 'io.insert-koin:koin-core:3.4.3'\nimplementation 'io.insert-koin:koin-android:3.4.3'\nimplementation 'io.insert-koin:koin-androidx-compose:3.4.6'\n```", "```kt\nval appModules = module {\n    single<PetsRepository> { PetsRepositoryImpl() }\n}\n```", "```kt\nclass PetsViewModel(\n    private val petsRepository: PetsRepository\n): ViewModel() {\n    fun getPets() = petsRepository.getPets()\n}\n```", "```kt\nsingle { PetsViewModel(get()) }\n```", "```kt\nval petsViewModel: PetsViewModel = koinViewModel()\n```", "```kt\nclass ChapterFiveApplication: Application() {\n    override fun onCreate() {\n        super.onCreate()\n        startKoin {\n            modules(appModules)\n        }\n    }\n}\n```", "```kt\nandroid:name=\".ChapterFiveApplication\"\n```", "```kt\n    pluginManagement {\n        repositories {\n            google()\n            mavenCentral()\n            gradlePluginPortal()\n        }\n    }\n    dependencyResolutionManagement {\n        repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n        repositories {\n            google()\n            mavenCentral()\n        }\n    }\n    rootProject.name = \"chapterfive\"\n    include(\":app\")\n    ```", "```kt\n    plugins {\n        id(\"com.android.application\")\n        id(\"org.jetbrains.kotlin.android\")\n    }\n    android {\n        namespace = \"com.packt.chapterfive\"\n        compileSdk = 33\n        defaultConfig {\n            applicationId = \"com.packt.chapterfive\"\n            minSdk = 24\n            targetSdk = 33\n            versionCode = 1\n            versionName = \"1.0\"\n            testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\n            vectorDrawables {\n                useSupportLibrary = true\n            }\n        }\n        buildTypes {\n            release {\n                isMinifyEnabled = false\n                setProguardFiles(\n                    listOf(\n                        getDefaultProguardFile(\"proguard-android.txt\"),\n                        \"proguard-rules.pro\"\n                    )\n                )\n            }\n        }\n        compileOptions {\n            sourceCompatibility = JavaVersion.VERSION_1_8\n            targetCompatibility = JavaVersion.VERSION_1_8\n        }\n        kotlinOptions {\n            jvmTarget = \"1.8\"\n        }\n        buildFeatures {\n            compose = true\n        }\n        composeOptions {\n            kotlinCompilerExtensionVersion = \"1.4.6\"\n        }\n        packagingOptions {\n            resources {\n                pickFirsts.add(\"META-INF/AL2.0\")\n                pickFirsts.add(\"META-INF/LGPL2.1\")\n            }\n        }\n    }\n    dependencies {\n        implementation(\"androidx.core:core-ktx:1.10.1\")\n        implementation(platform(\"org.jetbrains.kotlin:kotlin-bom:1.8.0\"))\n        implementation(\"androidx.lifecycle:lifecycle-runtime-ktx:2.6.1\")\n        implementation(\"androidx.activity:activity-compose:1.7.2\")\n        implementation(platform(\"androidx.compose:compose-bom:2022.10.00\"))\n        implementation(\"androidx.compose.ui:ui\")\n        implementation(\"androidx.compose.ui:ui-graphics\")\n        implementation(\"androidx.compose.ui:ui-tooling-preview\")\n        implementation(\"androidx.compose.material3:material3\")\n        implementation(\"androidx.lifecycle:lifecycle-viewmodel-compose\")\n        implementation(\"io.insert-koin:koin-core:3.4.3\")\n        implementation(\"io.insert-koin:koin-android:3.4.3\")\n        implementation(\"io.insert-koin:koin-androidx-compose:3.4.6\")\n        testImplementation(\"junit:junit:4.13.2\")\n        androidTestImplementation(\"androidx.test.ext:junit:1.1.5\")\n        androidTestImplementation(\"androidx.test.espresso:espresso-core:3.5.1\")\n        androidTestImplementation(platform(\"androidx.compose:compose-bom:2022.10.00\"))\n        androidTestImplementation(\"androidx.compose.ui:ui-test-junit4\")\n        debugImplementation(\"androidx.compose.ui:ui-tooling\")\n        debugImplementation(\"androidx.compose.ui:ui-test-manifest\")\n    }\n    ```", "```kt\n    plugins {\n        id(\"com.android.application\") version \"8.1.0\" apply false\n        id(\"com.android.library\") version \"8.1.0\" apply false\n        id(\"org.jetbrains.kotlin.android\") version \"1.8.20\" apply false\n    }\n    ```", "```kt\n[versions]\ncoreKtx = \"1.10.1\"\nlifecycle = \"2.6.1\"\nactivity = \"1.7.2\"\ncomposeBom = \"2022.10.00\"\nkoin = \"3.4.3\"\nkoinCompose = \"3.4.6\"\njunit = \"4.13.2\"\njunitExt = \"1.1.5\"\nespresso = \"3.5.1\"\n```", "```kt\n[libraries]\ncore-ktx = { module = \"androidx.core:core-ktx\", version.ref = \"coreKtx\" }\nlifecycle = { module = \"androidx.lifecycle:lifecycle-runtime-ktx\", version.ref = \"lifecycle\" }\nactivity-compose = { module = \"androidx.activity:activity-compose\", version.ref = \"activity\" }\ncompose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\ncompose-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\ncompose-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\ncompose-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\ncompose-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\ncompose-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\ncompose-viewmodel = { module = \"androidx.lifecycle:lifecycle-viewmodel-compose\", version.ref = \"lifecycle\" }\nkoin-core = { module = \"io.insert-koin:koin-core\", version.ref = \"koin\" }\nkoin-android = { module = \"io.insert-koin:koin-android\", version.ref = \"koin\" }\nkoin-android-compose = { module = \"io.insert-koin:koin-androidx-compose\", version.ref = \"koinCompose\" }\ntest-junit = { module = \"junit:junit\", version.ref = \"junit\" }\ntest-junitExt = { module = \"androidx.test.ext:junit\", version.ref = \"junitExt\" }\ntest-espresso = { module = \"androidx.test.espresso:espresso-core\", version.ref = \"espresso\" }\ntest-compose-junit4 = { group = \"androidx.compose.ui:ui-test-junit4\", name = \"ui-test-junit4\" }\n```", "```kt\n[bundles]\ncompose = [\"compose.ui\", \"compose.ui.graphics\", \"compose.ui.tooling\", \"compose.material3\", \"compose.viewmodel\"]\nkoin = [\"koin-core\", \"koin-android\", \"koin-android-compose\"]\n```", "```kt\ndependencies {\n    implementation(libs.core.ktx)\n    implementation(libs.lifecycle)\n    implementation(libs.activity.compose)\n    implementation(platform(libs.compose.bom))\n    implementation(libs.bundles.compose)\n    implementation(libs.bundles.koin)\n    testImplementation(libs.test.junit)\n    androidTestImplementation(libs.test.junitExt)\n    androidTestImplementation(libs.test.espresso)\n    androidTestImplementation(platform(libs.compose.bom))\n    androidTestImplementation(libs.test.compose.junit4)\n    debugImplementation(libs.compose.ui.tooling)\n    debugImplementation(libs.compose.manifest)\n}\n```"]