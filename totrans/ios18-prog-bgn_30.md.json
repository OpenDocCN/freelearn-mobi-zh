["```swift\n    // This file contains the definition of the Employee structure, a method that will generate sample data, an EmployeeDatabase structure containing an array of Employee instances and methods to add, delete and find employees in an array.\n    struct Employee \n    ```", "```swift\nstruct Employee: Codable, Identifiable {\n  let id: Int\n  let name: String\n  let age: Int\n  let salary: Double\n}\n\nextension Employee {\n  static func generateSampleData() -> [Employee] {\n    [\n      Employee(id: 1, name: \"John Doe\", age: 25, \n      salary: 100000),\n      Employee(id: 2, name: \"Jane Smith\", age: 28, \n      salary: 120000),\n      Employee(id: 3, name: \"Jimmy Johnson\", age: 30, \n      salary: 150000),\n    ]\n  }\n} \n```", "```swift\n    struct EmployeeDatabase: Codable {\n      var employees: [Employee]\n    } \n    ```", "```swift\n    mutating func add(_ employee: Employee) {\n      employees.append(employee)\n    } \n    ```", "```swift\n    func find(by id: Int) -> Employee? {\n      employees.first(where: { $0.id == id })\n    } \n    ```", "```swift\n    mutating func delete(by id: Int) {\n      employees.removeAll(where: { $0.id == id })\n    } \n    ```", "```swift\n    // This file contains the definition of the Employee structure, a method that will generate sample data, an EmployeeDatabase structure containing an array of Employee instances and methods to add, delete and find employees in an array.\n\n    struct Employee: Codable, Identifiable {\n      let id: Int\n      let name: String\n      let age: Int\n      let salary: Double\n    }\n\n    extension Employee {\n      static func generateSampleData() -> [Employee] {\n         [\n           Employee(id: 1, name: \"John Doe\", age: 25, \n           salary: 100000),\n           Employee(id: 2, name: \"Jane Smith\", age: 28, \n           salary: 120000),\n           Employee(id: 3, name: \"Jimmy Johnson\", age: 30, \n           salary: 150000),\n        ]\n      }\n    }\n\n    struct EmployeeDatabase: Codable {\n      var employees: [Employee]\n\n      mutating func add(_ employee: Employee) {\n        employees.append(employee)\n      }\n\n      func find(by id: Int) -> Employee? {\n        employees.first(where: { $0.id == id })\n      }\n\n      mutating func delete(by id: Int) {\n        employees.removeAll(where: { $0.id == id })\n      }\n    } \n    ```", "```swift\n    extension AddJournalEntryViewController {\n      // MARK: - Writing Tools Delegate methods\n      func textViewWritingToolsWillBegin(_ textView: \n      UITextView) {\n        textView.isEditable = false\n      }\n      func textviewWritingToolsDidEnd(_ textView: \n      UITextView) {\n        textView.isEditable = true\n      }\n    } \n    ```", "```swift\n    bodyTextView.writingToolsBehavior = .none \n    ```"]