- en: Chapter 6. Bringing it All Together
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章.整合一切
- en: In the previous chapter we created a series of sequences and prefabs giving
    us a solid background for creating different types of assets in our level and
    giving us some more in depth knowledge of using Kismet as well as an introduction
    to Prefabs to help us.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在上一章中，我们创建了一系列序列和预制件，为我们创建不同类型的资产提供了坚实的基础，并让我们对使用Kismet有了更深入的了解，同时介绍了预制件以帮助我们。
- en: ''
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In this chapter we are going to expand on the items learned in the previous
    chapters and "bring it all together" to create our game, Urban Warrior.
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在本章中，我们将扩展前几章学到的内容，并将“一切整合”以创建我们的游戏，城市战士。
- en: 'In this chapter we will cover the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Setting up our room, learning about adjusting materials to fit your level's
    needs
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置我们的房间，了解如何调整材质以满足关卡需求
- en: Learn the best way to rapidly prototype levels using reference and placeholder
    brushes to stand in for art
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习使用参考和占位符刷子快速原型化关卡的最佳方法，以代替艺术作品
- en: Discuss a possible workflow for creating levels using **Geometry Mode**
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 讨论使用**几何模式**创建关卡的可能工作流程
- en: Build our level using pieces we've already built, duplicating work we've already
    done to make building quicker and more streamlined
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用我们已构建的部件构建我们的关卡，复制我们已完成的工作以使构建更快、更流畅。
- en: Construct different combat scenarios
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建不同的战斗场景
- en: So with that, let's get started!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们开始吧！
- en: Starting a workflow
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始工作流程
- en: When I first started using Unreal it took me a lot time to create any type of
    new level. I would keep placing static meshes to hide areas of geometry that I
    missed, or adding in blocking volumes in order to make it actually possible to
    go through some places. One of the key reasons I had problems was that I didn't
    realize how to create a good workflow, and the key to mapping things in CSG super
    easily is **Geometry Mode**. Before we take care of that, let's first get our
    current level ready.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当我开始使用Unreal时，创建任何类型的新关卡都花费了我很多时间。我会不断放置静态网格来隐藏我遗漏的几何区域，或者添加阻挡体积，以便实际上能够通过某些地方。我遇到问题的关键原因之一是我没有意识到如何创建一个好的工作流程，而在CSG中轻松映射事物的关键是**几何模式**。在我们处理那个之前，让我们首先准备好我们的当前关卡。
- en: Time for action—starting our level
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——开始我们的关卡
- en: 'We are now building our level from scratch using the pieces that we have built
    in previous chapters. As we already have a basis to draw from let''s start our
    game off. We can start our level as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在正在从头开始构建我们的关卡，使用我们在前几章中构建的部件。既然我们已经有一个基础可以借鉴，让我们开始我们的游戏。我们可以这样开始我们的关卡：
- en: In the Editor, select our **PlayerStart** actor. Move it to the left-hand side
    of the first door in our level by using Translation Mode.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在编辑器中，选择我们的**PlayerStart**演员。使用平移模式将其移动到我们关卡中第一扇门左侧。
- en: Move the spawn point for our first enemy to be in front of the door using **Translation
    Mode**. There is a small light blue colored arrow on the actor. The arrow represents
    the direction in which the actor is facing. With that in mind, rotate the enemy's
    position in Rotation mode so it is facing away from the hero.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**平移模式**将第一个敌人的出生点移动到门前面。演员上有一个小浅蓝色箭头。箭头表示演员面向的方向。考虑到这一点，在旋转模式下旋转敌人的位置，使其背对英雄。
- en: Move the **PathNode** such that the second enemy is spawned right in front of
    the door through which it comes (the second door to the right).
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**PathNode**移动，使第二个敌人正好在它进入的门前面出生（右侧的第二扇门）。
- en: Left-click on your current floor of the level and move it down by 32 units,
    using the grid snap by pressing the *[* and *]* keys will decrease and increase
    the grid snap points until you get there.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在关卡当前楼层上左键单击，将其向下移动32个单位，通过按[*]和[*]键使用网格吸附，直到到达那里。
- en: Change the **World Properties** by selecting **View** | **World Properties**
    and set the **Kill Z** to **-64** so we won't die when we hit the floor.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择**视图** | **世界属性**来更改**世界属性**，将**Kill Z**设置为**-64**，这样我们在碰到地板时就不会死亡。
- en: Create three walls to encase our hero at his starting point as well as a ceiling
    above him and floor below him all with a width of **32**. Create the first wall,
    then by holding *Alt* and dragging the wall in the top viewport, duplicate the
    original wall to the other side.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建三堵墙来包围我们的英雄起始点，以及在他上方和下方宽度为**32**的屋顶和地板。创建第一堵墙，然后通过按住*Alt*并拖动墙到顶部视图中，将原始墙复制到另一侧。
- en: In front of our door make a duplicate of our floor by moving it 64 units in
    front, along the axis. Go into **Geometry** mode and hold the *Ctrl* + *Alt* keys
    and drag until you select both the vertices on the left-hand side in the top viewport.
    Drag the floor until it faces the door. Select the two vertices at the top and
    drag it down until it is in front of the door, and do the same for the bottom.
    At this point you should have a box in front of your door.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在门前，将地板沿轴向前移动64个单位以创建我们的地板副本。进入**几何模式**，按住 *Ctrl* + *Alt* 键并拖动，直到你在顶部视图中选择左侧的两个顶点。将地板拖动，使其面对门。选择顶部的两个顶点，将其向下拖动，直到它在门前，并对底部做同样的操作。此时，你应该在门前有一个盒子。
- en: Right-click on the side viewport and select **Viewport Type** | **Front** to
    place the view into the front mode. Our screen should look like the following
    screenshot by now.![Time for action—starting our level](img/image_1901_06_01.jpg)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击侧面视口并选择**视口类型** | **正面**以将视图放置在正面模式。现在，我们的屏幕应该看起来像以下截图。![开始我们的关卡——动作时间](img/image_1901_06_01.jpg)
- en: At that point in **Geometry** mode select our box and only click on the top
    right vertex. From there use the translation tool to move it to the left by 64
    degrees coming to the same point as the other vertices at the top, as shown in
    the following image:![Time for action—starting our level](img/image_1901_06_02.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**几何模式**下，选择我们的盒子，并只点击右上角的顶点。从那里使用平移工具将其向左移动64度，使其到达顶部其他顶点的同一位置，如图所示：![开始我们的关卡——动作时间](img/image_1901_06_02.jpg)
- en: Build the map by selecting **Build** | **Build All**. You should see a ramp
    going into your room that we created.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择**构建** | **构建全部**来构建地图。你应该能看到我们创建的通往房间的斜坡。
- en: Return the viewport back to its previous position by right-clicking and selecting
    **Viewport Type** | **Side**.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过右键点击并选择**视口类型** | **侧面**来将视口返回到其之前的位置。
- en: Press *L* in the center of the room to create a light. Selecting the light,
    put it in the direct center of the room in the X, Y, and Z axes. Open the **PointLight
    actor** properties, change its radius to `512`, and its **Falloff Exponent** to
    `16`. Inside the **Light Component** set the light color to a light blue and change
    the brightness to `0.6`. Press *Alt* + *3* to go into Unlit mode until you are
    ready to see the game's lighting, but you will have to build every time you change
    something to see it correctly.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在房间中央按下 *L* 键以创建光源。选择光源后，将其放置在房间的X、Y和Z轴的直中心。打开**点光源actor**属性，将其半径更改为`512`，并将**衰减指数**设置为`16`。在**灯光组件**中，将灯光颜色设置为浅蓝色，并将亮度更改为`0.6`。按下
    *Alt* + *3* 进入无光照模式，直到你准备好查看游戏的光照，但每次更改内容时你都需要重新构建才能正确查看。
- en: Having a good reference can be key when creating new areas or gameplay. Characters
    in Unreal are defaulted to 96 units tall and while we can create a box of that
    size or right-click to get the measuring tape out to adjust, we can just place
    a mesh in our level to give us an idea of human proportions. Note that this is
    the character size of Epic Games' characters, but UDK does not limit the size
    of your characters. If you wish to create your own custom characters you may do
    so, but it is important that no matter what you remain consistent.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在创建新区域或游戏玩法时，一个好的参考非常重要。在虚幻引擎中，角色默认高度为96单位，虽然我们可以创建一个同样大小的盒子或右键点击以获取卷尺进行调整，但我们也可以在关卡中放置一个网格来给我们一个人体比例的概念。请注意，这是Epic
    Games角色的尺寸，但UDK并不限制你角色的尺寸。如果你希望创建自己的自定义角色，你可以这样做，但重要的是无论你做什么，都要保持一致性。
- en: Go into the **Content Browser** and scroll your **Packages** column until you
    can click on **UDK Game**. With that selected type `Iron` in the search bar while
    checking the **Skeletal Mesh** option in the **Object Type** field. Left-click
    on the **IronGuard Skeletal Mesh**. Right-click in our level and place the object
    on top of the ground in our level. Note that you may have to move the mesh and
    adjust your grid spacing to get it just right. The following screenshot shows
    this process.![Time for action—starting our level](img/image_1901_06_03.jpg)
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入**内容浏览器**，滚动你的**包**列，直到你可以点击**UDK游戏**。选择它后，在搜索栏中输入`Iron`，同时在**对象类型**字段中检查**骨骼网格**选项。左键点击**IronGuard骨骼网格**。在我们的关卡中右键点击，并将对象放置在关卡地面之上。请注意，你可能需要移动网格并调整网格间距以使其恰到好处。以下截图显示了此过程。![开始我们的关卡——动作时间](img/image_1901_06_03.jpg)
- en: Having a reference is a great thing, especially if you are trying to recreate
    a real life building, however note that often at times in games you will have
    to compensate for different aspects of the world due to the differences in both
    gameplay and camera work. For example, hallways in games are usually two to three
    times larger than they would really be especially in games that can be multiplayer,
    such as *Left 4 Dead*.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有一个参考是件好事，尤其是如果你试图重现现实生活中的建筑，然而请注意，在游戏中，你通常需要根据游戏玩法和摄像机工作的不同来补偿世界的不同方面。例如，游戏中的走廊通常比实际大两到三倍，尤其是在可以多人玩的游戏中，如
    *Left 4 Dead*。
- en: Left-click on our new actor and open up its properties by clicking *F4*. Type
    `Hidden` in the search bar and check the **Hidden Game** property.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 左键单击我们的新演员，并通过单击 *F4* 打开其属性。在搜索栏中输入 `Hidden` 并检查 **Hidden Game** 属性。
- en: Since we are in the games ourselves we don't need to see our reference, however
    if you'd like to keep our new actor in until you're ready then by all means go
    for it.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于我们自己在游戏中，我们不需要看到我们的参考，但是如果你想在准备好之前保留我们的新演员，那就请随意吧。
- en: Select the walls inside of our room by left-clicking on them in the perspective
    viewport.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在透视视图中左键单击它们来选择我们房间内的墙壁。
- en: Select the other walls in the room, taking care to remember that the door has
    two parts and a top. You can do this by holding *Ctrl* and clicking on each of
    the elements or right-clicking and selecting **Select Adjacent Walls**, but this
    option may also select the walls outside of the building as well. Also select
    the inside of the door, pressing *Alt* + *W* to hide static meshes to select them,
    remembering to press *Alt* + *W* again when finished.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择房间内的其他墙壁，注意记住门有两个部分和一个顶部。你可以通过按住 *Ctrl* 并单击每个元素或右键单击并选择 **Select Adjacent
    Walls** 来完成此操作，但此选项也可能选择建筑外的墙壁。还要选择门的内部，按 *Alt* + *W* 隐藏静态网格以选择它们，完成后记得再次按 *Alt*
    + *W*。
- en: 'Go to the **Content Browser** and pick out a wall material to use. I personally
    used `M_LT_Walls_BSP_Recycle06b` which is located in the **LT_Walls** package.
    Once you have left-clicked on the material you wanted to use, right-click on a
    selected wall in the perspective viewport and select **Add Material : M_LT_Walls_BSP_Recycle06b**.
    The following image shows the material that has been added to the walls:![Time
    for action—starting our level](img/image_1901_06_04.jpg)'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '前往 **Content Browser** 并选择要使用的墙壁材质。我个人使用了 `M_LT_Walls_BSP_Recycle06b`，它位于 **LT_Walls**
    包中。一旦你左键单击了你想要的材质，就在透视视图中右键单击选定的墙壁，并选择 **Add Material : M_LT_Walls_BSP_Recycle06b**。以下图像显示了已添加到墙壁上的材质：![行动时间——开始我们的关卡](img/image_1901_06_04.jpg)'
- en: Now you may notice that the material may look a bit off in terms of placement
    and how it doesn't match up; that's okay because that is what we're going to fix
    next.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，你可能注意到材料在放置上可能看起来有点不对劲，它并不匹配；这是正常的，因为这是我们接下来要解决的问题。
- en: Press *F5* to enter the **Surface** properties menu. The first and easiest step
    is to change our alignment so that the brushes will work together so we have a
    seamless transition between brushes. To do this, find the **Alignment** property,
    click on the **Box** selection and click on **Apply**. Since our object is in
    fact shaped similarly to a box, it makes sense that the material can be applied
    this way, as shown in the following screenshot:![Time for action—starting our
    level](img/image_1901_06_05.jpg)
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *F5* 进入 **Surface** 属性菜单。第一步也是最简单的一步是改变我们的对齐方式，以便刷子可以一起工作，这样我们就可以在刷子之间实现无缝过渡。要做到这一点，找到
    **Alignment** 属性，点击 **Box** 选择并点击 **Apply**。由于我们的物体实际上形状类似于一个盒子，所以以这种方式应用材质是有意义的，如下面的屏幕截图所示：![行动时间——开始我们的关卡](img/image_1901_06_05.jpg)
- en: 'However, I think that the texture is too small for the room I created; this
    is a simple fix as well. Above the **Alignment** box there is another area of
    the properties called **Scaling**. Under the **Simple** Option select `2.0` and
    click on the **Apply** button. Now our texture is twice as big as it was before.
    The **Scaling** box is shown in the following screenshot:'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，我认为纹理对于我创建的房间来说太小了；这也是一个简单的修复。在 **Alignment** 框上方，还有一个属性区域，称为 **Scaling**。在
    **Simple** 选项下选择 `2.0` 并单击 **Apply** 按钮。现在我们的纹理比之前大了一倍。**Scaling** 框在以下屏幕截图中显示：
- en: '![Time for action—starting our level](img/image_1901_06_06.jpg)'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——开始我们的关卡](img/image_1901_06_06.jpg)'
- en: Now, we're on the right track, but I want to move the image down and over until
    I get to just the right place I want the texture to be. Panning the material will
    do just that. Adjust the **U** and **V** position of the texture by clicking on
    the buttons until you get the position you want for the material. I personally
    took the silvery part and made it a baseboard of sorts for my room. This is shown
    in the following screenshot:![Time for action—starting our level](img/image_1901_06_07.jpg)
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们已经走上了正确的道路，但我想要将图像向下和向右移动，直到我到达想要纹理所在的确切位置。平移材质就能做到这一点。通过点击按钮调整纹理的**U**和**V**位置，直到你得到你想要的材质位置。我个人将银色部分做成了一种房间的踢脚线。这在上面的截图中有展示：![开始我们的关卡](img/image_1901_06_07.jpg)
- en: Choose a ceiling and floor material for your room. I personally used **Material'LT_Floors.BSP.Materials.M_LT_Floors_BSP_Grate_Pipes'**
    for the ceiling and **Material'LT_Floors.BSP.Materials.M_LT_Floors_BSP_Organic05b_TileBreak'**
    for the floor.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为你的房间选择一个天花板和地板材质。我个人使用**Material'LT_Floors.BSP.Materials.M_LT_Floors_BSP_Grate_Pipes'**作为天花板材质，**Material'LT_Floors.BSP.Materials.M_LT_Floors_BSP_Organic05b_TileBreak'**作为地板材质。
- en: Now that we have our new base room completed, click on the door that we created
    on the right and delete it, saying **Yes** to the warning generated.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经完成了新的基础房间，点击右侧创建的门并将其删除，对生成的警告回答**是**。
- en: Inside the top viewport hold the *Ctrl* + *Alt* keys and drag until you have
    the entire room we created selected. Go to **Geometry** mode and right-click on
    the top right vertices to change the position of our translate tool. Hold *Alt*
    and drag the item to the right-hand side so that it would be where the previous
    door would have been. Right-click and select **Transform** | **Mirror Y Axis**
    and move the room until it creates a room in front of the one that we previously
    created. Delete any extra **PathNodes** or **PlayerStart** actors you may have
    created.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部视图中，按住*Ctrl* + *Alt*键并拖动，直到你选择了我们创建的整个房间。转到**几何**模式，在右上角顶点处右击以改变平移工具的位置。按住*Alt*并拖动项目到右侧，使其位于之前门的位置。右击并选择**变换**
    | **镜像Y轴**，移动房间直到它在我们之前创建的房间前面创建一个房间。删除你可能创建的任何额外的**路径节点**或**玩家起始**演员。
- en: Build our game by selecting **Build** | **Build All** and click on **Close**
    when finished.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择**构建** | **构建全部**来构建我们的游戏，完成后点击**关闭**。
- en: Save your project and start your game by clicking on the **Start Mobile Previewer**
    button on the main toolbar, saying **yes** when it asks you to save the package.
    The following screenshot shows how our screen would look:![Time for action—starting
    our level](img/image_1901_06_08.jpg)
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击主工具栏上的**开始移动预览器**按钮来保存你的项目并开始游戏，当它询问你保存包时，请回答**是**。以下截图显示了我们的屏幕将如何显示：![开始我们的关卡](img/image_1901_06_08.jpg)
- en: What just happened?
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: Taking the advice of our former selves our very short scenario is a lot more
    guided and our world making the game little closer to building our real game.
    Taking this into consideration we will be able to create a larger environment
    and complete our sample level.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 采纳我们过去的建议，我们的非常简短的场景变得更加有指导性，我们的世界构建使游戏更接近于构建我们的真实游戏。考虑到这一点，我们将能够创建一个更大的环境并完成我们的示例关卡。
- en: Geometry mode
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 几何模式
- en: We talked about building a simple room earlier in the book, and when we created
    our doorway in [Chapter 4](ch04.html "Chapter 4. Using Kismet and Matinee"), *Using
    Kismet and Matinee*, we began to explore **Geometry Mode** and how we can use
    it. In much the same way we can use it to create gameplay areas quickly and effectively.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书前面我们讨论了构建一个简单的房间，当我们创建[第4章](ch04.html "第4章。使用Kismet和Matinee")中的门时，*使用Kismet和Matinee*，我们开始探索**几何模式**以及我们如何使用它。同样地，我们可以用它快速有效地创建游戏区域。
- en: Setting up the workflow
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置工作流程
- en: You may have noticed a grid of sorts in all the viewports other than the perspective
    one. We will be using the grid as a guideline in the creation of our levels in
    much the same way that you could use paper to draw things out, which is something
    some level designers I know do to get the general feel of an area. In order to
    build a general area you need to have this planned ahead of time—things such as
    having a general idea of how you want to place buildings, as well as an idea of
    how you want to guide the traversal of the player.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，除了透视视图之外的所有视图中都存在某种网格。我们将使用网格作为创建我们水平面的指南，就像你可以用纸画出东西一样，这是我知道的一些关卡设计师用来获得区域总体感觉的方法。为了构建一个大致的区域，你需要提前计划好——比如你想要如何放置建筑，以及你想要如何引导玩家的移动。
- en: As mentioned before, pressing the *[* and *]* keys in the editor will decrease
    and increase the grid snap points making the level more or less detailed in your
    brush placement. For the purposes of this book, unless I say differently, I have
    my grid spacing set to 32\. Some people will want to use a smaller area, but I
    argue that when blocking something out we really only care about the big picture
    and getting the overall feel of the area. In case your brush is not aligned to
    the grid you can right-click on the vertices, and it will automatically snap it
    to the grid. If you notice the brush changing to have an **X** on it, which is
    alright, but it is advisable to go to the **Brush Properties** and reapply collision
    to it. This can be extremely useful, especially when working on the things discussed
    in previous chapters to get it to fit in line with the grid you are now using.
    Working with the grid is a fundamental way of making sure that you are not getting
    any holes and/or overlays of your brushes when creating a level. This is another
    way to make sure that your subtractive brushes will work as you intend them to;
    however I never use subtractive brushes if I can at all help it.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，在编辑器中按 *[* 和 *]* 键会减少和增加网格吸附点，使你的画笔放置在水平上更详细或更少详细。就本书的目的而言，除非我特别说明，我的网格间距设置为
    32。有些人可能想要使用更小的区域，但我认为当我们进行布局时，我们真正关心的是大局和区域的总体感觉。如果你的画笔没有对齐到网格上，你可以右键点击顶点，它会自动将其吸附到网格上。如果你注意到画笔上出现了一个
    **X**，这是可以的，但建议你转到 **画笔属性** 并重新应用碰撞。这可以非常有用，尤其是在处理前几章讨论的内容时，以确保你的画笔与现在使用的网格对齐。与网格一起工作是确保你在创建水平时不会出现任何空隙和/或画笔重叠的基本方法。这是确保你的减法画笔按预期工作的另一种方法；然而，如果可能的话，我从不使用减法画笔。
- en: 'One thing to note when using **Geometry** mode: you will not see any changes
    that we make when editing in **Geometry** mode until we build our BSP brushes
    again.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **几何** 模式时需要注意的一点是：在我们再次构建 BSP 画笔之前，你将看不到我们在 **几何** 模式中的任何更改。
- en: Tip
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: In all of the Unreal Tournament games (and **UTDeathmatch** games like we're
    using), 1 Unreal Unit is equal to 2 centimeters. That means that the 96 Unit character
    is in fact 6 feet tall! That being said, building things to scale can often seem
    much smaller than they really are because of the players field of view(FOV)" but
    it's a nice thing to use as a basis when building from real life.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有的《虚幻竞技场》游戏（以及我们使用的类似 **UTDeathmatch** 游戏中），1 个虚幻单位等于 2 厘米。这意味着 96 个单位高的角色实际上有
    6 英尺高！话虽如此，由于玩家的视野（FOV）原因，按比例建造的东西往往看起来比实际要小得多，但这是从现实生活出发建造时的一个很好的基础。
- en: Some keyboard tips
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一些键盘技巧
- en: Holding *Ctrl* + *Alt* at the same time and dragging will allow you to select
    all objects that are contained within it. If you are in **Geometry** mode it will
    allow you to select individual/overlapping vertices, allowing you to increase
    or decrease the size of your brushes very easily, which we will be using to create
    our buildings in the next section.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 同时按住 *Ctrl* + *Alt* 并拖动可以让你选择包含在内的所有对象。如果你处于 **几何** 模式，这将允许你选择单个/重叠的顶点，让你可以非常容易地增加或减少画笔的大小，这是我们将在下一节中创建建筑时使用的。
- en: Another useful tip is if you hold *Ctrl* and drag the left mouse button anywhere
    in a viewport it will move the brush, actor, and/or vertices that you have selected
    from any position. This is a good way to move objects that may not be far away
    or when you don't have to move the screen and don't want to use the widget that
    is usually used by the object.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的技巧是，如果你在视图中按住 *Ctrl* 并拖动鼠标左键，它将移动你从任何位置选定的刷子、演员和/或顶点。这是一种移动可能不在远处或当你不需要移动屏幕且不想使用通常由对象使用的工具的方式。
- en: If you just left-click on a brush in the perspective viewport it will select
    the face of the object. While this is fine for putting a material on the brush,
    on the other viewports it will select the brush for editing. If you hold *Ctrl*
    + *Shift* and left-click on your map you will notice that you will now select
    the brush that you clicked on. However, it can sometimes not pick the brush that
    you think you're selecting, which is why I primarily use the top and/or side viewport.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只是在透视视图中左键点击一个刷子，它将选择物体的面。虽然这对于将材质应用到刷子上来说是可以的，但在其他视图中，它将选择刷子进行编辑。如果你按住 *Ctrl*
    + *Shift* 并在地图上左键点击，你会注意到你现在将选择你点击的刷子。然而，有时它可能无法选择你认为你选择的刷子，这就是为什么我主要使用顶部和/或侧面视口的原因。
- en: Seeing double
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 看到双重
- en: Duplicating things that we have already created such as walls or buildings is
    an effective way of blocking out an environment very quickly. We did this in our
    previous example by duplicating the room that we created. What we care about most
    here is creating the best gameplay possible, so we pay less attention to fine
    details and basically want to just block out an area so we can iterate as quickly
    as possible. After all, you'd be a lot more willing to get rid of a huge box than
    a ridiculously detailed office building.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 复制我们已创建的东西，如墙壁或建筑，是一种快速遮挡环境的有效方法。我们在之前的例子中通过复制我们创建的房间来做到这一点。我们最关心的是创建最佳的游戏玩法，所以我们不太关注细节，基本上只想遮挡一个区域，以便我们可以尽可能快地迭代。毕竟，你更愿意去掉一个巨大的盒子，而不是一个荒谬详细的公司大楼。
- en: With the brushes we create we can then give the level to your team's environmental
    artist (or you if you are gifted with 3D modeling knowledge), who will in turn
    change the BSP brushes into meshes to place in our level to give it the visual
    flair that we are looking for.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我们创建的刷子，我们可以将关卡交给你的团队的环境艺术家（或者如果你对3D建模知识有天赋，就是你），他将把BSP刷子转换为网格，放置在我们的关卡中，以赋予我们想要的视觉风格。
- en: After placing a single brush in our level, you don't really need the builder
    brush again. Unless you are creating something other than a box you can just duplicate
    brushes and mould them using the **Geometry** tool to quickly shape out areas,
    which usually makes it much quicker to build. If you too feel as if you can live
    without the builder brush, you can press the *B* key to toggle the building brush
    on and off.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的关卡中放置了一个刷子之后，你实际上不再需要建造刷子。除非你正在创建除了盒子之外的东西，你可以直接复制刷子并使用 **几何** 工具对其进行塑形，以快速塑造区域，这通常会使构建过程更快。如果你也觉得可以没有建造刷子，你可以按
    *B* 键来切换建造刷子的开关。
- en: Building our level
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建我们的关卡
- en: With knowledge of how to start a workflow, we can now apply that knowledge by
    building the rest of our level!
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解如何开始工作流程之后，我们现在可以通过构建我们关卡的其他部分来应用这些知识！
- en: Time for action—building our level
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动手实践——构建我们的关卡
- en: 'Now that the beginning of our level is completed, let''s add simple buildings
    and shapes that we can fill with the scripting we created earlier! This is done
    as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们关卡的开头已经完成，让我们添加简单的建筑和形状，我们可以用我们之前创建的脚本填充它们！这样做如下：
- en: From the top viewport duplicate one of the walls from the rooms that we made
    previously by left-clicking on it, holding *Alt* and dragging it down, placing
    the top end so that the wall covers up the gap between the two doors. In **Geometry**
    mode grab the two bottom vertices and drag them down to create a square like shape
    and then in the side viewport drag the vertices up in order to create a building.
    This is how our screen would look.![Time for action—building our level](img/image_1901_06_09.jpg)
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从顶部视口复制我们之前制作的房间中的一个墙壁，通过左键点击它，按住 *Alt* 并将其拖动下来，将顶部端点放置，使墙壁覆盖两个门之间的缝隙。在 **几何**
    模式下，抓住两个底部的顶点并将它们向下拖动以创建一个类似正方形的形状，然后在侧面视口中将顶点向上拖动以创建一个建筑。这就是我们的屏幕看起来会是什么样子。![动手实践——构建我们的关卡](img/image_1901_06_09.jpg)
- en: With that first building created we can build others quite easily. Duplicate
    it by dragging and create three buildings of different sizes to create a blocking
    path leading the player towards the left. The following screenshot shows this.![Time
    for action—building our level](img/image_1901_06_10.jpg)
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建了第一个建筑之后，我们可以轻松地构建其他建筑。通过拖动来复制它，创建三个不同大小的建筑，以形成一个引导玩家向左走的阻挡路径。以下截图显示了这一点。![行动时间——构建我们的关卡](img/image_1901_06_10.jpg)
- en: Not only can we extend and modify brushes, we can also modify volumes! Extend
    our current **Lightmass Importance Volume** and floor by selecting both of the
    objects and dragging them out.![Time for action—building our level](img/image_1901_06_11.jpg)
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们不仅可以扩展和修改刷子，还可以修改体积！通过选择这两个对象并将它们拖动出来，扩展我们的当前**Lightmass重要性体积**和地板。![行动时间——构建我们的关卡](img/image_1901_06_11.jpg)
- en: Left-click on one of the prefab doors that we have created and create another
    door, a little distance after the player turns left, making sure to lower the
    door down so it fits nicely with the ground. We do not want the door to go as
    far out as the previous version that we created, so select the top six points
    and drag the door over, adjusting the two at the top afterwards, to create an
    even door. However, the KActor of the door itself will not change, so right-click
    on the prefab and select **Convert PrefabInstance into Normal Actors**. From there,
    you can move the door into its proper spot using the top and side viewports as
    your guide, building when necessary to help you visualize what the level looks
    like.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 左击我们创建的一个预制门，然后在玩家左转后稍远的地方创建另一个门，确保将门降低，使其与地面很好地契合。我们不希望门像之前创建的版本那样伸出去，所以选择顶部六个点并将门拖动过来，之后调整顶部两个点，以创建一个均匀的门。然而，门的KActor本身不会改变，所以右击预制门并选择**将PrefabInstance转换为普通演员**。从那里，你可以使用顶部和侧面视口作为指南移动门到正确的位置，并在必要时构建以帮助你可视化关卡的外观。
- en: Duplicate buildings changing the heights, placing one to the north of the new
    door that we added and another north of it to open up a little area for the player
    to explore. This can be seen in the following top viewport screenshot.![Time for
    action—building our level](img/image_1901_06_12.jpg)![Time for action—building
    our level](img/image_1901_06_13.jpg)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制建筑，改变高度，将一个放置在新增门北边，另一个放置在它北边，以为玩家打开一个小区域进行探索。这可以在以下顶视图截图中看到。![行动时间——构建我们的关卡](img/image_1901_06_12.jpg)![行动时间——构建我们的关卡](img/image_1901_06_13.jpg)
- en: Note that I purposefully made the building in front of the door's holder to
    show the player that there is a path that can be taken giving the player a sense
    of choice in the level.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，我故意在门持有者前面的建筑上做了标记，以向玩家展示有一条可以走的路径，给玩家一种在关卡中做出选择的感觉。
- en: At this point, the player can choose one of two paths, which we will converge
    into a large area. Create buildings of different sizes and shapes to fill a center
    courtyard, taking care to make the buildings on the furthest north side the lowest
    of the bunch as that is where we are going to lead the player.
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这个阶段，玩家可以选择两条路径之一，我们将它们汇聚到一个大区域。创建不同大小和形状的建筑来填充中心庭院，注意使最北边的建筑群中最低，因为那里是我们将引导玩家前往的地方。
- en: '![Time for action—building our level](img/image_1901_06_14.jpg)'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——构建我们的关卡](img/image_1901_06_14.jpg)'
- en: In the center of our courtyard place an elevated pedestal by first creating
    a box around 32 units high. Build the map then left-click on the face of the brush
    in the perspective viewport. Change to Scaling mode and shrink the top face. If
    you build the game you will notice that now the brush has slants. Play the game
    to make sure that you can walk up and down on the pedestal before moving forward.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在庭院的中心，首先创建一个大约32单位高的盒子，然后构建地图，然后在透视视图中左击刷子的面。切换到缩放模式并缩小顶部面。如果你构建游戏，你会注意到现在刷子有倾斜。玩游戏以确保你可以在祭坛上上下走动，然后再继续前进。
- en: Elevated ground will draw the player to this position, plus we will place enemies
    there later so it's a good way to draw attention to the area.
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 高地会吸引玩家到这个位置，而且我们稍后会在那里放置敌人，所以这是一个吸引注意力的好方法。
- en: Create ramps leading to the top of the furthest building in much the same way
    we created ramps for our first room. I personally created a ramp forward, then
    a straight part and then another ramp for a left turn. This could be done as a
    fire escape, but we basically want to communicate to the player to go here, as
    shown in the following screenshot:![Time for action—building our level](img/image_1901_06_15.jpg)
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以与我们为第一个房间创建斜坡相同的方式，为最远建筑物的顶部创建斜坡。我个人创建了一个向前延伸的斜坡，然后是一段直线，然后是另一个斜坡以实现左转。这可以作为一个消防梯，但我们基本上是想让玩家知道去这里，如下面的截图所示：![行动时间——构建我们的关卡](img/image_1901_06_15.jpg)
- en: Expand both your floor and **lightmass Importance Volume** in both the north
    and east directions by selecting the two vertices at the top and dragging north,
    then selecting the two vertices on the right-hand side and dragging them east.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择顶部两个顶点并向北拖动，然后在右侧选择两个顶点并向东拖动，在北和东方向扩展你的地板和**光量重要性体积**。
- en: Create buildings in order to create an enclosed area leading towards a final
    location which you will leave open and will be four grid squares wide at a grid
    snap of 128.![Time for action—building our level](img/image_1901_06_16.jpg)
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建建筑以形成一个封闭区域，通向一个最终位置，你将保持该位置开放，并且在该位置的网格对齐点为128时，宽度为四个网格方格。![行动时间——构建我们的关卡](img/image_1901_06_16.jpg)
- en: At the center of the open space that you have created place the `StaticMesh'ASC_Floor2.SM.Mesh.S_ASC_Floor2_SM_Stairs_Simple_01'`.
    To each of its sides create a ramp shape to cover up its sides.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你创建的开放空间中心放置`StaticMesh'ASC_Floor2.SM.Mesh.S_ASC_Floor2_SM_Stairs_Simple_01'`。为其每一侧创建一个斜坡形状以覆盖其侧面。
- en: Above the two ramps that you have created create two vertically large pillars.
    On the top of the pillar place another brush that is slanted.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你创建的两个斜坡上方创建两个垂直的大柱子。在柱子的顶部放置另一个倾斜的刷子。
- en: Create a ceiling and a floor to the entrance we've created.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为我们创建的入口创建一个天花板和地板。
- en: Take the two long pillars that we created and duplicate them within the temple.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将我们创建的两个长柱子复制到庙宇内部。
- en: Past the second pillar create a secondary flight of stairs and a floor ahead
    for its elevated path.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第二个柱子后面创建一个辅助楼梯和一条通往其升高路径的地板。
- en: In front of the floor place a single wall behind it and walls on the sides of
    the temple.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在地板前方放置一堵墙，在庙宇的两侧放置墙壁。
- en: In front of the second flight of stairs place a `StaticMesh'NR_Deco.SM.Mesh.S_NR_Deco_SM_FountainTop03'`
    and above it `ParticleSystem'Castle_Assets.FX.P_FX_Fire_SubUV_01'` and above that
    a spot light (by pressing *L* and clicking inside the viewport where you want
    it to be placed) with a radius of `1024`, a `.3` brightness, and a dark red color.
    Inside the **lightmass** settings change the light source to `32` and duplicate
    the items to the other side of the stairs as well.![Time for action—building our
    level](img/image_1901_06_17.jpg)
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第二段楼梯前放置一个`StaticMesh'NR_Deco.SM.Mesh.S_NR_Deco_SM_FountainTop03'`，在其上方放置`ParticleSystem'Castle_Assets.FX.P_FX_Fire_SubUV_01'`，再上方放置一个聚光灯（通过按*L*键并在视图中点击你想放置的位置），半径为`1024`，亮度为`.3`，颜色为深红色。在**光量**设置中，将光源更改为`32`，并将项目复制到楼梯的另一侧。![行动时间——构建我们的关卡](img/image_1901_06_17.jpg)
- en: Now do a quick texture pass by using `Material'LT_Floors.BSP.Materials.M_LT_Floors_BSP_Dark_TileBreak_02'for`
    the walls and `Material'LT_Floors.BSP.Materials.M_LT_Floors_BSP_Organic05b_TileBreak'`
    for the floor and ceiling of our temple. Select all of the materials and give
    it a simple scaling of `4.0`.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在通过使用`Material'LT_Floors.BSP.Materials.M_LT_Floors_BSP_Dark_TileBreak_02'`为墙壁和`Material'LT_Floors.BSP.Materials.M_LT_Floors_BSP_Organic05b_TileBreak'`为我们的庙宇的地板和天花板进行快速纹理处理。选择所有材料，并对其进行简单的缩放`4.0`。
- en: Select the **Dominant Directional Light** actor and change its light color to
    dark blue.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**主要方向光**演员，并将其光颜色更改为深蓝色。
- en: Outside the player's path but in their view, place some `StaticMesh'LT_Mech.SM.Mesh.S_LT_Mech_SM_CityNoRing01'`
    actors to create scenery for our level. Note that this mesh was created for the
    PC multiplayer title Unreal Tournament 3 and has in no way been optimized for
    a mobile game. That being said, don't place more than four in the level or else
    the game will really start to slow down when we test it. The following screenshot
    is what the finished level will look like:![Time for action—building our level](img/image_1901_06_18.jpg)
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在玩家路径之外但仍在他们的视野内，放置一些`StaticMesh'LT_Mech.SM.Mesh.S_LT_Mech_SM_CityNoRing01'`演员来为我们的关卡创建场景。请注意，这个网格是为PC多人游戏《虚幻竞技场3》创建的，并且根本没有针对移动游戏进行优化。话虽如此，不要在关卡中放置超过四个，否则在测试时游戏会真的开始变慢。下面的截图显示了完成后的关卡的样子：![行动时间——构建我们的关卡](img/image_1901_06_18.jpg)
- en: What just happened?
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: Our level now has a clear beginning, middle, and end. The goals for the player
    to go to as well as some backdrop and lighting effects are visible. Now all we
    need to do is add our interactive elements and we will have our game completed!
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的水平现在有一个清晰的开始、中间和结束。玩家需要前往的目标以及一些背景和灯光效果都是可见的。现在我们只需要添加我们的交互元素，我们的游戏就完成了！
- en: Have a go hero—powerups and weapon pickups
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试一下英雄——增益和武器拾取
- en: One of the tools that level designers have is the ability to reward players
    for traveling certain ways. Promoting exploration and giving players reason to
    go out will make your level much more interesting. Inside the **Actor** classes
    tab there is a class called **UTPickupFactory** with both **Health** and **Weapon**
    pickups. Try to place some goodies in your newly created level. I personally put
    a rocket launcher in the area leading up to the temple.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 级别设计师拥有的一个工具是奖励玩家走特定的路线。促进探索并为玩家提供出去的理由会使你的关卡更加有趣。在**Actor**类别的标签页中有一个名为**UTPickupFactory**的类，它有**健康**和**武器**拾取。试着在你的新创建的关卡中放置一些好东西。我个人在通往寺庙的区域放置了一个火箭发射器。
- en: Combat scenarios
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 战斗场景
- en: As we are in fact making a third person shooter, it makes sense that we would
    want to have different combat scenarios in our game. After completing our level's
    layout we will now add the things that will make our level come alive! We went
    over the creation of enemies as well as advice on combat scenarios in the previous
    chapter, so now we will be acting upon these lessons to create our own game.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们实际上在制作一款第三人称射击游戏，因此我们希望在游戏中拥有不同的战斗场景是有意义的。完成我们关卡布局后，我们现在将添加使我们的关卡生动起来的东西！我们在上一章中讨论了敌人的创建以及关于战斗场景的建议，所以现在我们将根据这些课程来创建我们自己的游戏。
- en: Time for action—first combat scenario
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——第一个战斗场景
- en: 'We will be using trigger volumes to spawn enemies and have them interact in
    your environment. This can be done as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用触发体积来生成敌人，并让他们在你的环境中互动。这可以按照以下步骤进行：
- en: 'In the Editor, duplicate the top part of the door that goes into the second
    area and move it so that its front is joined with the building we created with
    the split. Right-click on the actor and select **Convert** | **Convert to Volume**
    | **Trigger Volume**. After this go to the side viewport and adjust the bottom
    vertices so they hit the floor. Hint: Pressing *Alt* + *W* will make the static
    meshes that we''ve placed previously disappear. The following screenshot shows
    this:![Time for action—first combat scenario](img/image_1901_06_19.jpg)'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在编辑器中，复制通向第二个区域的门的上半部分，并将其移动，使其前面与我们一起创建的分割建筑相连。右键单击演员，选择**转换** | **转换为体积**
    | **触发体积**。之后，转到侧面视口并调整底部顶点，使其接触到地板。提示：按下*Alt* + *W*将使之前放置的静态网格消失。下面的截图显示了这一点：![行动时间——第一个战斗场景](img/image_1901_06_19.jpg)
- en: Duplicate the trigger volume that we have just created and place it directly
    above where this one is. This way, no matter which way the player chooses to go
    something will happen.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制我们刚刚创建的触发体积，并将其直接放置在这个体积的上方。这样，无论玩家选择哪个方向前进，都会发生一些事情。
- en: We will place two path nodes behind each of the two routes we have created as
    well as two path nodes in the middle. What we are going to do is spawn two enemies
    when the player hits one of these triggers, and the two enemies will travel along
    the path the player first chose, as shown in the following screenshot:![Time for
    action—first combat scenario](img/image_1901_06_20.jpg)
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在我们创建的两个路线的每个后面放置两个路径节点，以及在中间放置两个路径节点。我们将要做的是，当玩家触碰到这些触发器中的一个时，生成两个敌人，这两个敌人将沿着玩家最初选择的路径移动，如下面的截图所示：![行动时间——第一个战斗场景](img/image_1901_06_20.jpg)
- en: Left-click on the trigger volume at the top that we created and open Kismet.
    Create a **TriggerVolume Touch** event by choosing **New Event using TriggerVolume_5**
    | **Touch** from the menu that pops up.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 左键单击我们创建在顶部的触发体积，打开 Kismet。通过从弹出菜单中选择 **使用 TriggerVolume_5 新建事件** | **触摸** 创建一个
    **触发体积触摸** 事件。
- en: Left-click on the trigger volume that we created at the bottom and open Kismet.
    Create a **TriggerVolume Touch** event beneath the one that we just created by
    choosing **New Event using TriggerVolume_6** | **Touch** from the menu that pops
    up.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 左键单击我们创建在底部的触发体积，打开 Kismet。通过从弹出菜单中选择 **使用 TriggerVolume_6 新建事件** | **触摸** 创建一个
    **触发体积触摸** 事件。
- en: Create a **Toggle** action by right-clicking and selecting **New Action** |
    **Toggle** | **Toggle**. Connect the **Event** link to the top of the **TriggerVolume_5
    Touch** action. Connect the **Out** output of the **TriggerVolume_6 Touch** action
    to the **Turn Off** input of this Toggle action.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过右键单击并选择 **新建动作** | **切换** | **切换** 来创建一个 **切换** 动作。将 **事件** 链接连接到 **TriggerVolume_5
    Touch** 动作的最顶部。将 **TriggerVolume_6 Touch** 动作的 **Out** 输出连接到这个切换动作的 **关闭** 输入。
- en: Create another toggle action to turn the other action off if this one is called.
    The following screenshot shows what we've done so far:![Time for action—first
    combat scenario](img/image_1901_06_21.jpg)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建另一个切换动作，如果调用此动作，则关闭另一个动作。以下截图显示了到目前为止我们所做的工作：![行动时间——第一个战斗场景](img/image_1901_06_21.jpg)
- en: For each of the two paths, create two set **Object** actions by selecting **New
    Action** | **Set Variable** | **Object**. Under the **Value** variable link place
    the two top path nodes we created to the top trigger and the bottom two to the
    other. Don't worry about the target yet, we will come to that in a later step.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每条路径，通过选择 **新建动作** | **设置变量** | **对象** 创建两个设置 **对象** 动作。在 **值** 变量链接下放置我们创建的两个顶部路径节点到顶部触发器，底部两个到另一个。不用担心目标，我们将在后续步骤中处理。
- en: Copy and paste two copies of the **EnemyAI** subsequence that we created earlier
    right next to each other. Connect the **Out** of both the second **Set Object**
    variable outputs to the **In** of the first **EnemyAI** object and the **Spawned**
    output of the first connects to the **In** of the second. Create an Object variable
    underneath the **Spawned** link for each node and make the two path nodes we placed
    out of player sight as the spawn points for both objects.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将我们之前创建的 **EnemyAI** 子序列复制粘贴两个副本，紧挨在一起。将第二个 **设置对象** 变量输出的 **Out** 连接到第一个 **EnemyAI**
    对象的 **In**，第一个的 **Spawned** 输出连接到第二个的 **In**。为每个节点在 **Spawned** 链接下方创建一个对象变量，并将我们放置在玩家视线之外的路径节点作为两个对象的出生点。
- en: Create a **Move To Actor** action by right-clicking and selecting **New Action**
    | **AI** | **Move To Actor**. Underneath the **Target** variable link connect
    the first spawned object that we created. Under **Destination** create an **Object**
    variable and connect it. Connect the **Spawned** output from the **EnemyAI** action
    to the **In** input on the **Move To Actor** action. Also, in the **Set variable**
    actions that we discussed in Step 5 connect the **Target** variable link for the
    first object in each row to this object.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过右键单击并选择 **新建动作** | **AI** | **移动到演员** 创建一个 **移动到演员** 动作。在 **目标** 变量链接下方连接我们创建的第一个已生成对象。在
    **目的地** 创建一个 **对象** 变量并将其连接。将 **EnemyAI** 动作的 **Spawned** 输出连接到 **移动到演员** 动作的
    **In** 输入。此外，在第五步中讨论的 **设置变量** 动作中，将每行第一个对象的 **目标** 变量链接连接到该对象。
- en: Now create a second **Move to Actor** action using the **Spawned** variable
    link of the second **EnemyAI** as the **Target** and create a new **Object** variable
    under the **Destination** link, which you will set as the **Target** of the second
    **Set Object** in each path.![Time for action—first combat scenario](img/image_1901_06_22.jpg)
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在创建第二个 **移动到演员** 动作，使用第二个 **EnemyAI** 的 **Spawned** 变量链接作为 **目标**，并在 **目的地**
    链接下创建一个新的 **对象** 变量，将其设置为每条路径中第二个 **设置对象** 的 **目标**。![行动时间——第一个战斗场景](img/image_1901_06_22.jpg)
- en: At some point during this tutorial you may see a problem and/or an error in
    your project saying something along the lines of **SeqAct_ActorFactory_0 has no
    spawn points!** In that case, go into Kismet where that problem node is, double
    click on it to select it in the editor and double-click on the **Enemy_AI Sequence**
    it contains. At the **Actor Factory** action click on the plus icon to add a new
    item to the spawn point list and if it isn't filled already click on the arrow
    pointing left in order to fill the value with the object we have selected. Exit
    the subsequence and hook up the items again that were attached to it. When you
    run your game next it should start working again.
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这个教程的某个时候，您可能会在项目中看到问题或错误，内容大致如下：**SeqAct_ActorFactory_0 没有出生点！**在这种情况下，进入
    Kismet，找到那个问题节点，双击以在编辑器中选择它，然后双击它包含的 **敌人 AI 序列**。在 **演员工厂** 动作中点击加号图标以向出生点列表添加新项目，如果尚未填写，请点击指向左边的箭头以使用我们选择的对象填写值。退出子序列，并将之前附加到它上的项目再次连接起来。下次运行您的游戏时，它应该会再次开始工作。
- en: Build our game by selecting **Build** | **Build All** and click **Close** when
    finished.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择 **构建** | **构建全部** 来构建我们的游戏，完成后点击 **关闭**。
- en: Save your project and start your game by clicking on the **Start Mobile Previewer**
    button on the main toolbar. The game's preview should look like the following
    screenshot:![Time for action—first combat scenario](img/image_1901_06_23.jpg)
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存您的项目，然后通过在主工具栏上点击 **开始移动预览器** 按钮来开始您的游戏。游戏的预览应该看起来像以下截图：![行动时间——第一个战斗场景](img/image_1901_06_23.jpg)
- en: What just happened?
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: With only a little bit of effort we have easily created a second combat encounter
    in the game that adjusts itself based on player actions.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 只需一点努力，我们就可以轻松地在游戏中创建第二个战斗遭遇，它会根据玩家的行为进行调整。
- en: Have a go hero—creating your own combat encounter
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试一下英雄——创建自己的战斗遭遇
- en: The next section I am going to leave as a blank area for you to create some
    kind of combat encounter of your own. You can place pieces of cover, or alternate
    weapons. Try to think of something that will really make someone say, "Wow!" when
    they see it.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个部分我将留作空白区域，供您创建一些自己的战斗遭遇。您可以放置一些掩体，或者交替使用武器。尽量想一些真正能让别人说“哇！”的东西。
- en: Time for action—end of level
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——关卡结束
- en: We will be using trigger volumes to spawn enemies and have them interact in
    your environment.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用触发体积来生成敌人，并让他们在您的环境中交互。
- en: Place a trigger volume in front of the temple that we created earlier. At the
    back of the temple as well as behind the second pillar place path nodes on both
    sides, away from the player's line of sight. This is shown by the top viewport
    screenshot:![Time for action—end of level](img/image_1901_06_24.jpg)
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们之前创建的寺庙前面放置一个触发体积。在寺庙后面以及第二个柱子后面，在玩家的视线两侧放置路径节点。这在上面的视口截图中有显示：![行动时间——关卡结束](img/image_1901_06_24.jpg)
- en: This is how it will look in the game.
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这就是游戏中的样子。
- en: '![Time for action—end of level](img/image_1901_06_25.jpg)'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——关卡结束](img/image_1901_06_25.jpg)'
- en: Note
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Press the *P* button to see the paths that have been created by your path nodes.
    If you do not see any lines in-between the two sets of nodes you may have to place
    one or two extra nodes to make sure the enemies' paths are laid out correctly.
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按下 *P* 键以查看由路径节点创建的路径。如果您在两组节点之间看不到任何线条，您可能需要放置一个或两个额外的节点，以确保敌人的路径布局正确。
- en: Left-click on our trigger volume and create a **Trigger Volume Touch** event
    in Kismet.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的触发体积上左键单击，并在 Kismet 中创建一个 **触发体积触摸** 事件。
- en: Copy and paste the two **EnemyAI** and **Move to Actor** actions from the previous
    example and hook it up to the **Trigger Volume Event.**
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将前一个示例中的两个 **EnemyAI** 和 **移动到演员** 动作复制并粘贴，并将其连接到 **触发体积事件**。
- en: Delete the spawn point links and replace them with the two nodes at the top
    of the temple. Delete the **Destination** links in the **Move to Actor** events
    and have them travel to the path nodes in the front.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除出生点链接，并用寺庙顶部的两个节点替换它们。删除 **移动到演员** 事件中的 **目的地** 链接，并让它们前往前方的路径节点。
- en: Duplicate your trigger volume and put it at the top of the temple's hill. Create
    a Touch event with a **Console Command** event with **quit** at the prompt.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制您的触发体积并将其放置在寺庙的山顶上。创建一个带有 **控制台命令** 事件的触摸事件，提示输入 **quit**。
- en: Build our game by selecting **Build** | **Build All** and click on **Close**
    when finished.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择 **构建** | **构建全部** 来构建我们的游戏，完成后点击 **关闭**。
- en: Save your project and start your game by clicking on the **Start Mobile Previewer**
    button on the main toolbar.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击主工具栏上的**开始移动预览器**按钮保存您的项目并开始游戏。
- en: What just happened?
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: 'We created a new combat scenario in which the enemies run into cover leaving
    themselves vulnerable while letting the player know that they''re there. We also
    created an end point to the level which allows us to complete the game. The following
    screenshot show this:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个新的战斗场景，其中敌人跑进掩护处，使自己变得脆弱，同时让玩家知道他们的位置。我们还创建了一个级别的终点，使我们能够完成游戏。以下截图显示了这一点：
- en: '![What just happened?](img/image_1901_06_26.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![刚才发生了什么？](img/image_1901_06_26.jpg)'
- en: Pop quiz
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验
- en: What are some of the problems with creating a level without using grid snaps?
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在不使用网格吸附的情况下创建级别有哪些问题？
- en: a. Holes in our geometry.
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 我们几何中的洞。
- en: b. Overlapping brushes.
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 重叠笔刷。
- en: c. Ensuring subtractive brushes work correctly.
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 确保减法笔刷能正确工作。
- en: d. All of the above.
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 以上所有。
- en: What keys do you use in order to increase or decrease grid snaps?
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你使用哪些键来增加或减少网格吸附？
- en: a. + and .
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. + 和 。
- en: b. Left and right arrow keys.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 左右箭头键。
- en: c. [ and ].
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. [和]。
- en: d. ( and ).
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. （和）。
- en: Is it possible to have an event with a Max Trigger Count of 0 (Can be triggered
    as many times as you'd like) to no longer be triggered? If possible, how would
    I do that?
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是否有可能将事件的最大触发次数设置为0（可以触发任意多次）而不再触发？如果可能，我该如何做？
- en: a. False, we can't toggle an Event on and off.
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 错误，我们不能切换事件的开关。
- en: b. False, the Max Trigger Count has to be positive.
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 错误，最大触发次数必须是正数。
- en: c. True, we can toggle an Event on and off.
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 正确，我们可以切换事件的开关。
- en: d. True, it's done automatically.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 正确，这是自动完成的。
- en: Summary
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We have now reached the end of our game development section of the book. There
    is plenty of room now for you to make your project your own, add new levels, and
    explore the different aspects of the Unreal Engine; we have built the foundation
    of a truly awesome game.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经到达了本书游戏开发部分的结尾。现在你有很大的空间来使你的项目变得独特，添加新级别，并探索虚幻引擎的不同方面；我们已经为真正令人惊叹的游戏奠定了基础。
- en: 'In this short period of time we''ve managed to cover quite a lot of things.
    We''ve specifically learned:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在这短暂的时间内，我们设法覆盖了很多内容。我们特别学习了：
- en: How to set up our room learning about adjusting materials to fit your level's
    needs
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何设置我们的房间，了解调整材质以适应级别需求
- en: The best way to rapidly prototype out levels using reference and placeholder
    brushes to stand in for art
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用参考和占位符笔刷快速原型化级别的最佳方法，以代替艺术作品
- en: A possible workflow for creating levels using **Geometry** mode
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**几何**模式创建级别的可能工作流程
- en: How to build our level using pieces we've already built duplicating work we've
    already done to make building quicker and more streamlined
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用我们已构建的部件来构建我们的级别，复制我们已完成的工作，以使构建更快、更流畅
- en: The implementation of different combat scenarios
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同战斗场景的实现
- en: Now that we've learned how to build the level and created all of the gameplay
    sections, in the next chapter I will be showing you how to add a main menu as
    well as play sounds, integrate custom content into your game, discuss optimizing,
    and debug your iOS game project to polish it as much as we can before we put it
    up on the App Store!
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经学会了如何构建级别并创建了所有的游戏部分，在下一章中，我将向您展示如何添加主菜单以及播放声音，将自定义内容集成到您的游戏中，讨论优化，并在我们将其上传到App
    Store之前尽可能多地调试您的iOS游戏项目！
