["```java\n    <uses-feature android:name=\"android.hardware.camera\"\n      android:required=\"true\" />\n\n    <uses-permission android:name=\"android.permission.CAMERA\" />\n\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n    ```", "```java\n    ImageView detailWebLink = (ImageView) findViewById(R.id.detail_web_link);\n    ```", "```java\n    private static final int PREVIEW_REQUEST_CODE = 1;\n    private static final int SAVE_REQUEST_CODE = 2;\n    private String photoPath;\n    private File photoFile;\n    ```", "```java\n    @Override\n    public void onClick(View v) {\n      Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\n      if (intent.resolveActivity(getPackageManager()) != null) {\n        startActivityForResult(intent, PREVIEW_REQUEST_CODE);\n      }\n    }\n    ```", "```java\n      @Override\n      protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (requestCode == PREVIEW_REQUEST_CODE && resultCode == RESULT_OK) {\n          Bundle extras = data.getExtras();\n          Bitmap imageBitmap = (Bitmap) extras.get(\"data\");\n          detailImage.setImageBitmap(imageBitmap);\n        } else if (requestCode == SAVE_REQUEST_CODE && resultCode == RESULT_OK) {\n          // To complete\n        }\n      }\n    ```", "```java\n    detailImage.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            takePhoto();\n        }\n    });\n    ```", "```java\n    private void takePhoto() {\n      Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\n      if (takePictureIntent.resolveActivity(getPackageManager()) != null) {\n        File photoFile = null;\n        try {\n          photoFile = filename();\n        } catch (IOException ex) {\n          Toast toast = Toast.makeText(getApplicationContext(),\n            \"No SD card\",\n            Toast.LENGTH_SHORT);\n          toast.show();\n        }\n        if (photoFile != null) {\n          takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(photoFile));\n          startActivityForResult(takePictureIntent, SAVE_REQUEST_CODE);\n        }\n      }\n    }\n    ```", "```java\n    private File filename() throws IOException {\n      String time = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\n      String file = MainData.nameArray[MainActivity.currentItem] + \"_\" + time + \"_\";\n      File dir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);\n      File image = File.createTempFile(file, \".jpg\", dir);\n      photoPath = \"file:\" + image.getAbsolutePath();\n      return image;\n    }\n    ```", "```java\n    else if (requestCode == SAVE_REQUEST_CODE && resultCode == RESULT_OK) {\n      Intent intent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);\n      Uri contentUri = Uri.fromFile(photoFile);\n      intent.setData(contentUri);\n      this.sendBroadcast(intent);\n    }\n    ```", "```java\n    <VideoView\n      android:id=\"@+id/video_view\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\" />\n    ```", "```java\n    private static final int VIDEO_REQUEST_CODE = 1;\n    private android.widget.VideoView videoView;\n    private int position = 0;\n    private MediaController mediaController;\n    ```", "```java\n    videoView = (VideoView) findViewById(R.id.video_view);\n\n    if (mediaController == null) {\n      mediaController = new MediaController(this);\n    }\n    videoView.setMediaController(mediaController);\n\n    takeVideo();.\n    Add the takeVideo() method, like so:\n    private void takeVideo() {\n      Intent takeVideoIntent = new Intent(MediaStore.ACTION_VIDEO_CAPTURE);\n      if (takeVideoIntent.resolveActivity(getPackageManager()) != null) {\n        startActivityForResult(takeVideoIntent, VIDEO_REQUEST_CODE);\n      }\n    }\n    ```", "```java\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n      if (requestCode == VIDEO_REQUEST_CODE && resultCode == RESULT_OK) {\n        Uri videoUri = data.getData();\n        videoView.setVideoURI(videoUri);\n      }\n    }\n    ```", "```java\n    @Override\n    public void onSaveInstanceState(Bundle savedInstanceState) {\n      super.onSaveInstanceState(savedInstanceState);\n      savedInstanceState.putInt(\"Position\", videoView.getCurrentPosition());\n      videoView.pause();\n    }\n\n    @Override\n    public void onRestoreInstanceState(Bundle savedInstanceState) {\n      super.onRestoreInstanceState(savedInstanceState);\n      position = savedInstanceState.getInt(\"Position\");\n      videoView.seekTo(position);\n    }\n    ```", "```java\n    videoView.setVideoURI(Uri.parse(\"android.resource://\" + getPackageName() + \"/\" + R.raw.movie));\n    videoView.start();\n    ```", "```java\n    videoView.setVideoPath(\"/sdcard/some_directory/some_movie.mp4\");\n    videoView.start();\n    ```", "```java\n    videoView.setVideoPath(\"http://www.your_site.com/movies/movie.mp4\");\n    videoView.start();\n    ```", "```java\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\n    ```", "```java\n    private MediaRecorder recorder;\n    private String filename;\n    ```", "```java\n    final TextView textView = (TextView) findViewById(R.id.text_view);\n    ```", "```java\n    filename = Environment.getExternalStorageDirectory().getAbsolutePath() + \"/recording.3gp\";\n    ```", "```java\n    recorder = new MediaRecorder();\n    recorder.setAudioSource(MediaRecorder.AudioSource.MIC);\n    recorder.setAudioEncoder(MediaRecorder.OutputFormat.AMR_NB);\n    recorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);\n    recorder.setOutputFile(filename);\n    ```", "```java\n        ImageView recordButton = (ImageView) findViewById(R.id.record_button);\n        recordButton.setOnClickListener(new View.OnClickListener() {\n\n          @Override\n          public void onClick(View view) {\n            try {\n              recorder.prepare();\n            } catch (IOException e) {\n            }\n            recorder.start();\n            textView.setText(\"Recording...\");\n          }\n        });\n        ```", "```java\n        ImageView stopButton = (ImageView) findViewById(R.id.stop_button);\n        stopButton.setOnClickListener(new View.OnClickListener() {\n\n          @Override\n          public void onClick(View view) {\n            recorder.stop();\n            recorder.release();\n            textView.setText(\"Recording complete\");\n          }\n        });\n        ```", "```java\n        ImageView playButton = (ImageView) findViewById(R.id.play_button);\n        playButton.setOnClickListener(new View.OnClickListener() {\n\n          @Override\n          public void onClick(View view) {\n            try {\n              play();\n            } catch (IOException e) {\n            }\n            textView.setText(\"Playing...\");\n          }\n        });\n        ```", "```java\n    public void play() throws IllegalArgumentException, SecurityException, IllegalStateException, IOException {\n      MediaPlayer player = new MediaPlayer();\n      player.setDataSource(filename);\n      player.prepare();\n      player.start();\n    }\n    ```"]