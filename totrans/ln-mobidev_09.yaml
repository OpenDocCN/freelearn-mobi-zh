- en: Native, Hybrid, or Cross-Platform
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Most developers are well aware of the fact that when it comes to market share,
    bigger isn't necessarily better. That is, Android's larger market size doesn't
    make it the better choice for app development. Likewise, iOS's greater developer
    payouts in and of themselves shouldn't turn you into a convert. So, what should
    you focus on when choosing your platform?
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''ll take a pragmatic approach to answering this question.
    In short, we will explore the following:'
  prefs: []
  type: TYPE_NORMAL
- en: The real-world factors that could have a large influence on your platform choice,
    such as your audience's needs, your technical needs, and your technical capabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The strengths and weaknesses of native apps and hybrid apps, and the pros and
    cons of each
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cross-platform development tools that could allow you to develop on both platforms
    simultaneously
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's start by looking at the most fundamental questions first.
  prefs: []
  type: TYPE_NORMAL
- en: Who is your audience?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/8de15c8e-67da-4cc3-ac5f-a47577eef625.png)'
  prefs: []
  type: TYPE_IMG
- en: Your target audience may prefer one platform over the other or they may be spread
    evenly across both. Knowing as much as possible about your audience will help
    you determine many things about your app, including whether to go native or hybrid.
    When performing research, look beyond pre-existing concepts and stereotypes.
  prefs: []
  type: TYPE_NORMAL
- en: For instance, most of us are probably already aware of the superficial differences
    between iOS users and Android users. That is, iOS users are more affluent, better
    educated, and younger, while Android users are the opposite.
  prefs: []
  type: TYPE_NORMAL
- en: A number of studies also suggest that, despite Android's market penetration,
    iOS users are more willing to dish out money for apps. Apple reported that [$20
    billion](https://www.apple.com/newsroom/2017/01/app-store-shatters-records-on-new-years-day.html)
    was paid out to developers in 2016 (refer to [https://www.apple.com/newsroom/2017/01/app-store-shatters-records-on-new-years-day.html](https://www.apple.com/newsroom/2017/01/app-store-shatters-records-on-new-years-day.html)),
    and App Annie reported that although the Google Play Store has twice as many downloads
    as the App Store, iOS apps turn out twice as much profit (refer to [https://www.google.com/url?q=http://bgr.com/2016/07/20/ios-vs-android-developers-profits-app-store-google-play/&sa=D&ust=1501582800060000&usg=AFQjCNFJYS1AAoGra88ceEN2y6y87UdA7g](https://www.google.com/url?q=http://bgr.com/2016/07/20/ios-vs-android-developers-profits-app-store-google-play/&sa=D&ust=1501582800060000&usg=AFQjCNFJYS1AAoGra88ceEN2y6y87UdA7g)).
  prefs: []
  type: TYPE_NORMAL
- en: Should these numbers make the decision for you? Maybe so, if your revenue model
    depends on earning money from your app. If not, then you need to focus on what
    matters to your audience. When exploring your potential audience, always look
    beneath the surface of such widespread reports. They are often too abstract to
    offer any real insight. Instead, do in-depth research using competitive intelligence
    tools, such as App Annie or Flurry, and work with market researchers to collect
    your own data.
  prefs: []
  type: TYPE_NORMAL
- en: Measure - don't guess or use intuition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The numbers for a given market segment may not reflect the industry average,
    so you should drill well below the "Apple users are more affluent" stereotype
    and find out specifically about your industry and your existing user base. You
    should use any and all analytics available to learn about your audience's platform
    preferences.
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, collect and analyze the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Analytics services, such as Google Analytics for Mobile ([https://www.google.com/analytics/analytics/#?modal_active=none](https://www.google.com/analytics/analytics/#?modal_active=none)),
    Yahoo's Flurry Pulse ([https://developer.yahoo.com/flurry-pulse/](https://developer.yahoo.com/flurry-pulse/)),
    Localytics ([https://www.localytics.com](https://www.localytics.com)), and Adobe
    ([https://www.adobe.com/marketing-cloud/web-analytics/mobile-web-apps-analytics.html](https://www.adobe.com/marketing-cloud/web-analytics/mobile-web-apps-analytics.html))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: App store analytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobile website consumption
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Desktop website consumption
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: After evaluating these numbers, as well as any other available data you have
    on your audience, you can determine whether or not they have a bias toward any
    one platform.
  prefs: []
  type: TYPE_NORMAL
- en: Most people tend to fall into either the iOS camp or the Android camp, which
    then determines the devices they purchase, which app stores they use, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: What are your technical requirements?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/11b50e69-2e6c-4c28-8dca-6ccba6128553.png)'
  prefs: []
  type: TYPE_IMG
- en: Not every app is an island. In some cases, apps are required to integrate with
    other platform-specific services or apps. In such cases, you are presented with
    firm restrictions that could limit your development options. At a minimum, it
    will help you get your development priorities straight.
  prefs: []
  type: TYPE_NORMAL
- en: As we'll see next, cross-platform toolkits exist that allow you to release across
    multiple platforms. Though these tools open up certain courses of action, they
    restrict others and may hinder compatibility with other native apps. Depending
    on your technical requirements and integration needs, this particular problem
    could trump all other issues completely.
  prefs: []
  type: TYPE_NORMAL
- en: What are your technical capabilities?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Sometimes, it''s not critical to choose one operating system over the other.
    When your team''s strengths lie in one platform, be practical and choose based
    on what you can do. After all, developing on an unfamiliar platform has risks,
    including:'
  prefs: []
  type: TYPE_NORMAL
- en: Increased time to market
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Higher technical costs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Higher risks of rework through bugs or other errors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The impact of these problems can delay valid data collection and learning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Developing on a platform that you already know has corresponding benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Lower technical costs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lower risks of mistakes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decreased time to market
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decreased learning cycle time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are always exceptions to the rule, however. For example, if you have an
    energetic team with a track record of success, and they want to learn a specific
    platform, it may be wise to let them run with it. This is a judgment call. Only
    consider this if you have a team of veterans who know how to build according to
    best practices.
  prefs: []
  type: TYPE_NORMAL
- en: Native versus hybrid - the strengths and weaknesses
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/c458bf32-a999-4c63-8795-289ec977a97b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now that we have covered the baseline requirements in terms of your audience,
    your technical requirements, and your technical capabilities, it''s time to see
    how native and hybrid compare. Though most developers will be familiar with the
    basic differences between the two, it''s important to examine the strengths and
    weaknesses of each. After that, we will be one step closer to determining the
    approach that best meets your needs. First, here is a brief overview:'
  prefs: []
  type: TYPE_NORMAL
- en: Native apps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Native** apps are developed specifically for one platform. In the mobile
    world, this usually means iOS or Android. The big selling point for native is
    that platform-specific apps make API calls directly to the OS, giving developers
    and designers much more flexibility and control over the user experience.'
  prefs: []
  type: TYPE_NORMAL
- en: Going native gives you a full range of device features, but you have to pay
    the price. Native apps are more costly to create and require in-depth expertise...
    especially if you have to do native development on two different platforms.
  prefs: []
  type: TYPE_NORMAL
- en: Hybrid apps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Hybrid** apps are part native and part web. HTML, CSS, and JavaScript are
    used to define the web portion of the app, which is executed via the device''s
    rendering engine, usually Webkit. Mostly, these parts of the app are restricted
    to UI elements.'
  prefs: []
  type: TYPE_NORMAL
- en: The advantage of hybrid apps over mobile web apps is that a hybrid app is still
    able to make native API calls. Hybrid apps fall on a spectrum between strictly
    web apps and native apps. They can be nothing more than web apps delivered in
    a native wrapper. Or they can also include native code in order to take advantage
    of OS-specific functions.
  prefs: []
  type: TYPE_NORMAL
- en: Pros and cons of going native
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Purists maintain the "all native all the time" philosophy, though this attitude
    has softened in recent years. All businesses have limited resources, however,
    so it''s impossible to ignore some of the downsides to going native:'
  prefs: []
  type: TYPE_NORMAL
- en: Native apps are more costly to build and maintain
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They take longer to create, which can be a problem if you need to launch soon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Their development requires more expertise, which, again, can be more costly
    and time-consuming
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you or your team doesn't have the requisite experience, you will have to
    get it
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another potential concern for going native is the possibility that an idea developed
    for one platform could be copied to the other. The threat of someone attempting
    to steal your ideas is always a risk, but bear in mind that novel ideas will always
    be copied. In [Chapter 19](0f723563-efd8-45cf-81e7-273b0d9b07ab.xhtml), *Building
    an Unfair Advantage* we will look at ways to protect your IP from such possibilities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Despite the downsides and potential risks, there are definite upsides to creating
    native apps:'
  prefs: []
  type: TYPE_NORMAL
- en: Native apps are platform and OS specific, so you will be able to directly take
    advantage of different levels of APIs, from the GUI toolkit to the filesystem
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finer control over the app and its interface to the device gives you a better
    handle over app details that can impact the user experience, such as loading time
    or other subtle UI elements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integration with certain platform-specific apps or services is only possible
    when you build a native app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These considerations in and of themselves should demonstrate that the choice
    between native and hybrid is not always so clear cut.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, you really have no choice and there is nothing to debate about. If
    integration requirements force you to develop a platform-specific solution, for
    instance, the question will never arise. When you can afford to debate, however,
    it's important to take a user-centric approach to the issue, which is where native
    apps really shine.
  prefs: []
  type: TYPE_NORMAL
- en: The biggest benefits of going native
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Native apps offer finer control over the user experience. When viewing apps
    through the lens of Lean, it''s vital to put the user experience front and center.
    Since smartphones have become ubiquitous, consumers have been demanding more and
    more of their mobile apps. Today, that experience often drives an app''s success
    or failure. Since the early 2010s, study after study has shown that customers
    will quickly drop apps or sites that underperform:'
  prefs: []
  type: TYPE_NORMAL
- en: In late 2012, Equation Research surveyed over 3,000 mobile device users. 84%
    said that mobile app performance was at least somewhat important, and more than
    50% felt that mobile apps should load in 2 seconds or less.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: According to a frequently cited pair of surveys performed by Gomez.com and Akamai
    in 2011, a 1-second delay in page loading time can cause a 7% decrease in sales.
    They also found that 40% abandon a web page that loads in 3 seconds or more.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In July 2016, building on the results of the preceding pair of surveys, Think
    with Google assessed metrics from a large number of real-world e-commerce sites
    to create machine learning models that can analyze sites and predict conversion
    rates and bounce rates. The results were unsurprising: page complexity decreased
    conversion rates, and slow load times increased bounce rates.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance is only one factor that contributes to the overall user experience.
    It's possible to develop apps with attractive user interfaces, but the biggest
    complaint about cross-platform apps is that they don't have a truly native look
    and feel. However, hybrid apps have their own set of advantages that make them
    worth exploring.
  prefs: []
  type: TYPE_NORMAL
- en: Pros and cons of going hybrid
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Hybrid apps fall on a spectrum between pure web app and pure native app, and
    bring advantages from each domain. As with native apps, there is no right or wrong--it''s
    just a matter of determining which is appropriate for your situation. Hybrid apps
    may not have the same performance or graphics potential as native, but they offer
    benefits of a different sort:'
  prefs: []
  type: TYPE_NORMAL
- en: Write once, run anywhere. Cross-platform tools (which we'll cover next), translate
    code, such as JavaScript or C#, into native language for multiple platforms. Even
    a simple native shell wrapped around some web code will allow you to list your
    app in both stores and gain access to both audiences.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Since you can develop a portion of the app as a single codebase, your overhead
    is much lower.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shorter development time not only results in lower development costs, it also
    means your app can be released more quickly.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hybrid apps, because they have a native component, can be listed in app stores,
    so you'll get the same exposure you would from developing a native app.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'With all these upsides, it''s easy to see why many developers are taking a
    softer approach to hybrid, but apps created with cross-platform development tools
    do have their own set of drawbacks:'
  prefs: []
  type: TYPE_NORMAL
- en: Since you won't have as much control over performance, hybrid apps can perform
    poorly, which can impact the user experience and user satisfaction.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Certain interface elements are difficult or impossible to reproduce with a cross-platform
    development tool.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apps have a particular look and feel on each platform, and unless you take great
    care to mimic that, users will sense the difference.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As mentioned, integration with other native apps or services can be difficult,
    or impossible.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And, finally, as app complexity increases, it is likely that even a hybrid developer
    will need to have some degree of native-specific capabilities to effectively troubleshoot
    certain native issues when they arise.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All things considered, there are a few practical realities that convince some
    developers to choose hybrid.
  prefs: []
  type: TYPE_NORMAL
- en: The ugly truth - a little hybrid doesn't hurt when you have clear goals
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Purists may not like this section, but the bottom line is that we're here to
    build great apps on whatever budget and timeframe we have. Though nativists may
    evangelize one platform or other, or both, that strategy doesn't cut it when you
    have deadlines and limited funds.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to creating an MVP, your most important constraint is the minimum,
    both in terms of viability and lovability. You need to meet a certain threshold
    in order to validate your hypothesis, win over your users, and learn from your
    experiences.
  prefs: []
  type: TYPE_NORMAL
- en: You can't do that if an impractical native or nothing mindset flushes your budget
    down the drain. This type of thinking actually opposes the Lean methodology. Perfectionism
    and purism can stall an app before launch, rack up costs, and even bomb it completely,
    all in the time it would take to put an MVP onto the market and start learning.
  prefs: []
  type: TYPE_NORMAL
- en: If you can get your app to market sooner by going hybrid, then you should. Downstream
    technical debt (which comes from converting your hybrid to pure native) is fine,
    as long as the debt is paid off before it burdens the app with problems.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to build the best app you possibly can in the shortest amount of
    time possible, then you need to consider all possibilities, including hybrid.
    It is worth noting that hybrid apps can and do become successful. Twitter, EverNote,
    and TripCase are all well-known examples, demonstrating that hybrid can be a completely
    viable approach even in the long run.
  prefs: []
  type: TYPE_NORMAL
- en: Making the final decision - factors to consider
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Earlier, you came up with answers to baseline questions about your audience,
    your technical needs, and your technical capabilities. Then, we examined the benefits,
    drawbacks, and capabilities of both native apps and hybrid apps. We also busted
    the *native or nothing* myth, demonstrating that hybrid can offer some very real
    advantages. Now, it''s time to answer specific, practical questions that will
    help you decide which choice is right for you:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Technical needs of app impact**: Are native features critical to your app?
    If not, take a close look at the benefits you would gain from a hybrid approach,
    such as decreased time-to-market, savings, and access to multiple platforms.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Speed-to-market requirements**: Do you need to make it to the market in under
    6 months? If so, then a native app may be out of the question.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Usability and functionality**: How much does customer experience of the app
    count? Usability enthusiasts and designers may disagree, but, again, practicality
    trumps ideology. Native certainly gives you an edge in what can be done, but if
    you can achieve 80% of the effort for 20% of the cost, keep your mind open.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resource capabilities and budget**: This budget should include development
    as well as long-term maintenance and technical debt. Do you have the resources
    to do the work, and can you afford both iOS and Android developers?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Long-term goals**: Weigh your current needs and resources against your long-term
    goals. Will you need to go native in the future and rebuild your codebase from
    scratch? Map out possible courses of action and consider how these long-term and
    short-term overheads will impact your business goals.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Practical decision-making should win out every time. Stick with the facts of
    what you need to do without forgetting what you actually can do. It's critical
    to not fixate on how an app is developed. Instead, focus on what matters--or what
    would matter--to shareholders, namely, marketplace advantages such as market share,
    market opportunity, disruption potential, and IP. Concentrate on building great
    apps and following best practices for usability, design, performance, and security.
  prefs: []
  type: TYPE_NORMAL
- en: Leveraging cross-platform development tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/6c09f953-93e2-4296-a685-dc6dac61e9fc.png)'
  prefs: []
  type: TYPE_IMG
- en: There are a variety of cross-platform development tools on the market. In this
    section, we will quickly scan a few of the most common, and discuss their strengths
    and weaknesses.
  prefs: []
  type: TYPE_NORMAL
- en: Adobe PhoneGap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Adobe PhoneGap is an open source distribution of Apache Cordova. It is not
    a framework for app development, but serves to package and release apps that have
    been built in web technologies such as HTML 5, CSS, and JavaScript. It is part
    of the Adobe Creative Cloud and offers similar benefits to other hybrid options:'
  prefs: []
  type: TYPE_NORMAL
- en: Write a core codebase in client-side web languages, and release it natively
    on some of the most popular platforms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developers with no native experience can turn a web app into a native app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is a wide selection of additional tools that make it easy to preview,
    build, and download test apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'PhoneGap''s weaknesses are also in line with other cross-platform tools:'
  prefs: []
  type: TYPE_NORMAL
- en: Its performance is not on par with native apps.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The graphics capabilities are wanting, and it doesn't deliver a native look
    or feel.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As mentioned, PhoneGap is not a framework. Bear in mind that PhoneGap does not
    translate code into a native language, it just wraps up your app in a native package.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xamarin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Xamarin is specifically designed for building C# apps on Android, iOS, Windows,
    and Mac. The company was acquired by Microsoft in early 2016 and leverages their
    existing services to make it one of the most competitive cross-development tools.
    Since a large portion of your app will be built from a common codebase, you will
    definitely save time and money. However, some code, such as UI and platform-specific
    features, will need to be written natively, so do not expect to quadruple your
    efficiency.
  prefs: []
  type: TYPE_NORMAL
- en: Apps can be developed in Visual Studio, Xamarin Studio (its own IDE), and Visual
    Studio for Mac. According to Microsoft, Xamarin completely supports Android and
    iOS SDKs--as well as third party controls or tools that are developed for native
    SDKs--and the platform will continue to stay current with new OS releases.
  prefs: []
  type: TYPE_NORMAL
- en: At the time of this writing, there is a free option for students, OSS, and independent
    developers, with pricier options available for professionals and enterprise clients.
  prefs: []
  type: TYPE_NORMAL
- en: Appcelerator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Appcelerator allows you to build an app in JavaScript and run it natively on
    any device. Its toolbox includes the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A visual app designer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A framework for building APIs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobile analytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As with the other tools mentioned here, it offers direct access to native APIs,
    but apps are still stuck with certain limitations in terms of performance and
    graphics. Though Appcelerator is reasonably priced, some developers don't feel
    that the bugs make it worth the effort.
  prefs: []
  type: TYPE_NORMAL
- en: How to choose the right tool
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you decide to try a tool similar to one of these, the first step is research.
    The best place to start is with the needs and priorities you have outlined in
    this chapter. Compare your needs and capabilities against the strengths and weaknesses
    of the tools available in the marketplace. Since the digital ecosystem changes
    so rapidly, don't be surprised if there are differences in price and quality.
  prefs: []
  type: TYPE_NORMAL
- en: 'These are just a few of the most popular cross-platform development tools on
    the market in early 2017\. Here are a few others to explore:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Ionic**: This is an open source HTML5 app framework'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sencha Ext JS**: This is designed to build data-intensive HTML5 apps'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mobile Angular**: This is a mobile UI framework that uses Angular JS and
    Bootstrap'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Progress Telerik platform**: This is a development platform for iOS, Android,
    and Windows phones'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Unity**: This is a cross-platform game engine that includes mobile, but extends
    well beyond'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Libgdx**: This is an open source platform for cross-platform game development'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For more information about any of these tools, start with the documentation
    on their websites. GitHub contains code repositories for many of the tools listed
    here. Extensive tutorials, courses, and walkthroughs for the more popular tools,
    such as PhoneGap and Xamarin, can be found on online education sites, such as
    Pluralsight, Udemy, and Lynda.com.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we've looked at the debate over hybrid and native from a pragmatic
    perspective. We've outlined the most vital questions you need to ask in order
    to determine the best approach for you and your customers. Finally, we've glanced
    at a few of the most popular cross-platform tools on the market, which should
    point you in the right direction if you decide to use hybrid app development to
    jumpstart your testing.
  prefs: []
  type: TYPE_NORMAL
- en: In the upcoming chapters, we'll explore a few ways to speed up your experiments,
    including mash-ups, onboarding tactics, and app store hacks.
  prefs: []
  type: TYPE_NORMAL
