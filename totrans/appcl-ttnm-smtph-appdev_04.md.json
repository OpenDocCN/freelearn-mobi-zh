["```java\n//this sets the background color of the master UIView (when there are no windows/tab groups on it)\nTitanium.UI.setBackgroundColor('#000');\n//create tab group\nvar tabGroup = Titanium.UI.createTabGroup();\n//\n//create base UI tab and root window\n//\nvar win1 = Titanium.UI.createWindow({\ntitle:'Photos',\nbackgroundImage: 'images/background.png',\nbarColor: '#000',\nurl: 'photos.js'\n});\nvar tab1 = Titanium.UI.createTab({\nicon:'images/photos.png',\ntitle:'Photos',\nwindow:win1\n});\n//\n//create tab and root window\n//\nvar win2 = Titanium.UI.createWindow({\ntitle:'Video',\nbackgroundImage: 'images/background.png',\nbarColor: '#000'\n});\nvar tab2 = Titanium.UI.createTab({\nicon:'images/movies.png',\ntitle:'Video',\nwindow:win2\n});\n//\n//create tab and root window\n//\nvar win3 = Titanium.UI.createWindow({\ntitle:'Audio',\nbackgroundImage: 'images/background.png',\nbarColor: '#000'\n});\nvar tab3 = Titanium.UI.createTab({\nicon:'images/audio.png',\ntitle:'Audio',\nwindow:win3\n});\n//\n//add tabs\n//\ntabGroup.addTab(tab1);\ntabGroup.addTab(tab2);\ntabGroup.addTab(tab3);\n//open tab group\ntabGroup.open();\n\n```", "```java\nvar win = Titanium.UI.currentWindow;\n//our dialog with the options of where to get an\n//image from\nvar dialog = Titanium.UI.createOptionDialog({\ntitle: 'Choose an image source...',\noptions: ['Camera','Photo Gallery', 'Cancel'],\ncancel:2\n});\n//add event listener\ndialog.addEventListener('click',function(e) {\nTi.API.info('You selected ' + e.index);\n});\n//choose a photo button\nvar btnGetPhoto = Titanium.UI.createButton({\ntitle: 'Choose'\n});\nbtnGetPhoto.addEventListener('click', function(e){\ndialog.show();\n});\n//set the right nav button to our btnGetPhoto object\n//note that we're checking the osname and changing the\n//button location depending on if it's iphone/android\n//this is explained further on in the \"Platform Differences\" chapter\nif(Ti.Platform.osname == 'iphone') {\nwin.rightNavButton = btnGetPhoto;\n}\nelse {\n//add it to the main window because android does\n//not have 'right nav button'\nbtnGetPhoto.right = 20;\nbtnGetPhoto.top = 20;\nwin.add(btnGetPhoto);\n}\n\n```", "```java\n//add event listener\ndialog.addEventListener('click',function(e)\n{\nTi.API.info('You selected ' + e.index);\nif(e.index == 0)\n{\n//from the camera\nTitanium.Media.showCamera({\nsuccess:function(event)\n{\nvar image = event.media;\nif(event.mediaType == Ti.Media.MEDIA_TYPE_PHOTO)\n{\n//set image view\nvar imgView =\nTitanium.UI.createImageView({\ntop: 20,\nleft: 20,\nwidth: 280,\nheight: 320\n});\nimgView.image = image;\nwin.add(imgView);\n}\n},\ncancel:function()\n{\n//getting image from camera was cancelled\n},\nerror:function(error)\n{\n//create alert\nvar a = Titanium.UI.createAlertDialog({title:'Camera'});\n// set message\nif (error.code == Titanium.Media.NO_CAMERA)\n{\na.setMessage('Device does not have image recording capabilities');\n}\nelse\n{\na.setMessage('Unexpected error: ' + error.code);\n}\n// show alert\na.show();\n},\nallowImageEditing:true,\nsaveToPhotoGallery:false\n});\n}\nelse\n{\n//cancel was tapped\n//user opted not to choose a photo\n}\n});\n\n```", "```java\n//add event listener\ndialog.addEventListener('click',function(e)\n{\nTi.API.info('You selected ' + e.index);\nif(e.index == 1)\n{\n//obtain an image from the gallery\nTitanium.Media.openPhotoGallery({\nsuccess:function(event)\n{\nvar image = event.media;\n// set image view\nTi.API.debug('Our type was: '+event.mediaType);\nif(event.mediaType == Ti.Media.MEDIA_TYPE_PHOTO)\n{\nvar imgView = Titanium.UI.createImageView({\ntop: 20,\nleft: 20,\nwidth: 280,\nheight: 320\n});\nimgView.image = image;\nwin.add(imgView);\n}\n},\ncancel:function()\n{\n//user cancelled the action from within\n//the photo gallery\n}\n});\n}\nelse\n{\n//cancel was tapped\n//user opted not to choose a photo\n}\n});\n\n```", "```java\n//this is the scroll view the user will use to swipe\n//through the selected photos\nscrollingView = Titanium.UI.createScrollableView({\nleft: 17,\ntop: 15,\nwidth: win.width - 14,\nheight: win.height - 25,\nviews: [],\ncurrentPage: 0,\nzIndex: 1\n});\nscrollingView.addEventListener('scroll',function(e){\nTi.API.info('Current scrollableView page = ' + e.source.currentPage);\n});\nwin.add(scrollingView);\n\n```", "```java\n...\n//output the mediaType to the console log for debugging\nTi.API.debug('Our type was: '+event.mediaType);\nif(event.mediaType == Ti.Media.MEDIA_TYPE_PHOTO)\n{\n// set image view\nvar imgView = Titanium.UI.createImageView({\ntop: 0,\nleft: 0,\nwidth: 286,\nheight: 337,\nimage: image\n});\n//add the imageView to our scrollableView object\nscrollingView.addView(imgView);\n}\n\n```", "```java\n//save a photo to file system button\nvar btnSaveCurrentPhoto = Titanium.UI.createButton({\ntitle: 'Save Photo',\nzIndex: 2 //this appears over top of other components\n});\nbtnSaveCurrentPhoto.addEventListener('click', function(e){\nvar media = scrollingView.toImage();\n//if it doesn't exist, create it create a directory called\n//\"photos\"\n//and it will hold our saved images\nvar newDir = Titanium.Filesystem.getFile (Titanium.Filesystem.applicationDataDirectory,'photos');\nif(!newDir.exists()){\nnewDir.createDirectory();\n}\nvar fileName = 'photo-' + scrollingView.currentPage.toString() + '.png';\nwriteFile = Titanium.Filesystem.getFile(newDir.nativePath, fileName);\nwriteFile.write(media);\nalert('You saved a file called ' + fileName + ' to the directory ' + newDir.nativePath);\nvar _imageFile = Titanium.Filesystem.getFile(newDir.nativePath, fileName);\nif (!_imageFile.exists()) {\nTi.API.info('ERROR: The file ' + fileName + ' in the directory ' + newDir.nativePath + ' does not exist!');\n}\nelse {\nTi.API.info('OKAY!: The file ' + fileName + ' in the directory ' + newDir.nativePath + ' does exist!');\n}\n});\n//set the right nav button to our photo get button\nif(Ti.Platform.osname == 'iphone') {\nwin.leftNavButton = btnSaveCurrentPhoto;\nwin.rightNavButton = btnGetPhoto;\n}\nelse\n{\n//add it to the main window because android does\n//not have 'right nav button'\nbtnGetPhoto.right = 20;\nbtnGetPhoto.top = 20;\nwin.add(btnGetPhoto);\n//add it to the main window because android does\n//not have 'left nav button'\nbtnSaveCurrentPhoto.left = 20;\nbtnSaveCurrentPhoto.top = 20;\nwin.add(btnSaveCurrentPhoto);\n}\n\n```", "```java\nvar win = Titanium.UI.currentWindow;\nvar file;\nvar timer;\nvar sound;\nvar duration = 0;\nvar label = Titanium.UI.createLabel({\ntext:'',\ntop:150,\ncolor:'#999',\ntextAlign:'center',\nwidth: 250,\nheight:'auto'\n});\nwin.add(label);\nvar linetype = Titanium.UI.createLabel({\ntext: \"audio line type: \"+lineTypeToStr(),\nbottom: 15,\ncolor:'#999',\ntextAlign:'center',\nwidth: 250,\nheight:'auto'\n});\nwin.add(linetype);\nvar volume = Titanium.UI.createLabel({\ntext: \"volume: \"+Ti.Media.volume,\nbottom:50,\ncolor:'#999',\ntextAlign:'center',\nwidth: 250,\nheight:'auto'\n});\nwin.add(volume);\nvar switchLabel = Titanium.UI.createLabel({\ntext:'Hi-fidelity:',\nwidth: 250,\nheight:'auto',\ntextAlign:'center',\ncolor:'#999',\nbottom:115\n});\nvar switcher = Titanium.UI.createSwitch({\nvalue:false,\nbottom:80\n});\nwin.add(switchLabel);\nwin.add(switcher);\nvar b2 = Titanium.UI.createButton({\ntitle:'Playback Recording',\nwidth:200,\nheight:40,\ntop:80\n});\nwin.add(b2);\nvar b1 = Titanium.UI.createButton({\ntitle:'Start Recording',\nwidth:200,\nheight:40,\ntop:20\n});\nwin.add(b1);\n\n```", "```java\nvar recording = Ti.Media.createAudioRecorder();\n// default compression is Ti.Media.AUDIO_FORMAT_LINEAR_PCM\n// default format is Ti.Media.AUDIO_FILEFORMAT_CAF\n// this will give us a wave file with ÂµLaw compression which\n// is a generally small size and suitable for telephony //recording for high end quality, you'll want LINEAR PCM\n//however, that will result in uncompressed audio and will be //very large in size\nrecording.compression = Ti.Media.AUDIO_FORMAT_LINEAR_PCM;\nrecording.format = Ti.Media.AUDIO_FILEFORMAT_CAF;\nTi.Media.addEventListener('recordinginput', function(e) {\nTi.API.info('Input availability changed: '+e.available);\nif (!e.available && recording.recording) {\nb1.fireEvent('click', {});\n}\n});\nTi.Media.addEventListener('linechange',function(e)\n{\nlinetype.text = \"audio line type: \"+lineTypeToStr();\n});\nTi.Media.addEventListener('volume',function(e)\n{\nvolume.text = \"volume: \"+e.volume;\n});\n\n```", "```java\nfunction lineTypeToStr()\n{\nvar type = Ti.Media.audioLineType;\nswitch(type)\n{\ncase Ti.Media.AUDIO_HEADSET_INOUT:\nreturn \"headset\";\ncase Ti.Media.AUDIO_RECEIVER_AND_MIC:\nreturn \"receiver/mic\";\ncase Ti.Media.AUDIO_HEADPHONES_AND_MIC:\nreturn \"headphones/mic\";\ncase Ti.Media.AUDIO_HEADPHONES:\nreturn \"headphones\";\ncase Ti.Media.AUDIO_LINEOUT:\nreturn \"lineout\";\ncase Ti.Media.AUDIO_SPEAKER:\nreturn \"speaker\";\ncase Ti.Media.AUDIO_MICROPHONE:\nreturn \"microphone\";\ncase Ti.Media.AUDIO_MUTED:\nreturn \"silence switch on\";\ncase Ti.Media.AUDIO_UNAVAILABLE:\nreturn \"unavailable\";\ncase Ti.Media.AUDIO_UNKNOWN:\nreturn \"unknown\";\n}\n}\nfunction showLevels()\n{\nvar peak = Ti.Media.peakMicrophonePower;\nvar avg = Ti.Media.averageMicrophonePower;\nduration++;\nlabel.text = 'duration: '+duration+' seconds\\npeak power:\n' + peak +'\\navg power: ' +avg;\n}\nb1.addEventListener('click', function()\n{\nif (b1.title == \"Stop Recording\")\n{\nfile = recording.stop();\nb1.title = \"Start Recording\";\nb2.show();\nclearInterval(timer);\nTi.Media.stopMicrophoneMonitor();\n}\nelse\n{\nif (!Ti.Media.canRecord) {\nTi.UI.createAlertDialog({\ntitle:'Error!',\nmessage:'No audio recording hardware is currently\nconnected.'\n}).show();\nreturn;\n}\nb1.title = \"Stop Recording\";\nrecording.start();\nb2.hide();\nTi.Media.startMicrophoneMonitor();\nduration = 0;\ntimer = setInterval(showLevels,1000);\n}\n});\nb2.addEventListener('click', function()\n{\nif (sound && sound.playing)\n{\nsound.stop();\nsound.release();\nsound = null;\nb2.title = 'Playback Recording';\n}\nelse\n{\nTi.API.info(\"recording file size: \"+file.size);\nsound = Titanium.Media.createSound({sound:file});\nsound.addEventListener('complete', function()\n{\nb2.title = 'Playback Recording';\n});\nsound.play();\nb2.title = 'Stop Playback';\n}\n});\nswitcher.addEventListener('change',function(e)\n{\nif (!switcher.value)\n{\nrecording.compression = Ti.Media.AUDIO_FORMAT_ULAW;\n}\nelse\n{\nrecording.compression = Ti.Media.AUDIO_FORMAT_LINEAR_PCM;\n}\n});\n\n```", "```java\nvar win = Titanium.UI.currentWindow;\nvar videoFile = 'video/video-test.mp4';\nvar btnGetVideo = Titanium.UI.createButton({\ntitle: 'Record Video'\n});\n//set the right nav butto to our get button\nif(Ti.Platform.osname == 'iphone') {\nwin.rightNavButton = btnGetVideo;\n}\nelse {\n//add it to the main window because android does\n//not have 'right nav button'\nbtnGetVideo.right = 20;\nbtnGetVideo.top = 20;\nwin.add(btnGetVideo);\n}\n\n```", "```java\n//get video from the device\nbtnGetVideo.addEventListener('click', function()\n{\nif(Titanium.Platform.osname == 'iphone') {\n//record for iphone\nTitanium.Media.showCamera({\nsuccess:function(event)\n{\nvar video = event.media;\nmovieFile = Titanium.Filesystem.getFile(\nTitanium.Filesystem.applicationDataDirectory,\nmymovie.mov');\nmovieFile.write(video);\nvideoFile = movieFile.nativePath;\nbtnGetVideo.title = 'Play Video';\n},\ncancel:function()\n{\n},\nerror:function(error)\n{\n// create alert\nvar a =\nTitanium.UI.createAlertDialog({title:'Video'});\n// set message\nif (error.code == Titanium.Media.NO_VIDEO)\n{\na.setMessage('Device does not have video recording\ncapabilities');\n}\nelse\n{\na.setMessage('Unexpected error: ' + error.code);\n}\n// show alert\na.show();\n},\nmediaTypes: Titanium.Media.MEDIA_TYPE_VIDEO,\nvideoMaximumDuration:10000,\nvideoQuality:Titanium.Media.QUALITY_HIGH\n});\n}\nelse\n{\n//record for android using intents\nvar intent = Titanium.Android.createIntent({\naction: 'android.media.action.VIDEO_CAPTURE'\n});\nTitanium.Android.currentActivity.startActivityForResult(\nintent, function(e) {\nif (e.error) {\nTi.UI.createNotification({\nduration: Ti.UI.NOTIFICATION_DURATION_LONG,\nmessage: 'Error: ' + e.error\n}).show();\n}\nelse {\nif (e.resultCode === Titanium.Android.RESULT_OK) {\nvideoFile = e.intent.data;\nvar source = Ti.Filesystem.getFile(videoFile);\nmovieFile =\nTitanium.Filesystem.getFile(\nTitanium.Filesystem.applicationDataDirectory,\n'mymovie.3gp');\nsource.copy(movieFile.nativePath);\nvideoFile = movieFile.nativePath;\nbtnGetVideo.title = 'Play Video';\n}\nelse {\nTi.UI.createNotification({\nduration: Ti.UI.NOTIFICATION_DURATION_LONG,\nmessage: 'Canceled/Error? Result code: ' +\ne.resultCode\n}).show();\n}\n}\n});\n}\n});\n\n```", "```java\nfunction playMovie(){\n//create the video player and add it to our window\n//note the url property can be a remote url or a local file\nvar my_movie = Titanium.Media.createVideoPlayer({\nurl: videoFile,\nwidth: 280,\nheight: 200,\ntop:20,\nleft:20,\nbackgroundColor:'#000'\n});\nwin.add(my_movie);\nmy_movie.play();\n}\n\n```", "```java\n//get video from the device\nbtnGetVideo.addEventListener('click', function()\n{\nif(btnGetVideo.title == 'Record Video') {\n//our record video code from the previous recipe\n//...\n}\nelse\n{\nplayMovie();\n}\n});\n\n```", "```java\n//create trash button\nvar buttonTrash = Titanium.UI.createButton({\nwidth: 25,\nheight: 25,\nright: 25,\nbottom: 25,\nimage: 'images/trash.jpg',\nzIndex: 2,\nvisible: false\n});\n//create event listener for trash button\nbuttonTrash.addEventListener('click', function(e){\n});\n\n```", "```java\nbtnSaveCurrentPhoto.addEventListener('click', function(e){\nbuttonTrash.visible = true;\n});\n\n```", "```java\nbuttonTrash.addEventListener('click', function(e){\nvar photosDir = Titanium.Filesystem.getFile (Titanium.Filesystem.applicationDataDirectory,'photos');\nvar fileName = 'photo-' + scrollingView.currentPage.toString() + '.png';\nvar imageFile = Titanium.Filesystem.getFile (photosDir.nativePath, fileName);\nif (imageFile.exists()) {\n//then we can delete it because it exists\nimageFile.deleteFile();\nalert('Your file ' + fileName + ' was deleted!');\n}\n});\nwin.add(buttonTrash);\n\n```"]