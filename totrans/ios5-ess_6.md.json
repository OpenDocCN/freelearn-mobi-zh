["```swift\nNSObject *obj = [[NSObject alloc] init];\n…\n…\n// do some program logic here.\n[obj release];\n\n```", "```swift\n- (NSObject *) someMethod {\nNSObject *obj = [[[NSObject alloc] init] autorelease];\nreturn obj; // This will be released by the autorelease pool.\n}\n\n```", "```swift\nNSObject *obj = [NSObject alloc] init];\n…\n…\n// do some program logic here.\n\n```", "```swift\nNSObject *obj = [NSObject alloc] init];\n// do some program logic here.\n[obj release]; // Added by ARC\n\n```", "```swift\n// Non-ARC Compliant Declaration\n@property(retain) NSObject *obj;\n\n```", "```swift\n// ARC Compliant Declaration\n@property(strong) NSObject *obj;\n\n```", "```swift\nMyClass *obj1 = [[MyClass alloc] init];\nMyClass *obj2 = obj1;\n\n```", "```swift\n// Non-ARC Compliant Declaration\n@property(assign) NSObject *parentObj;\n\n```", "```swift\n// ARC Compliant Declaration\n@property(weak) NSObject *parentObj;\n\n```", "```swift\n__weak NSString *weakName = self.textField.text;\n\n```", "```swift\n__weak NSString *weakName = @\"Captain Jack Sparrow\";\n\n```", "```swift\n__weak NSString *str = [[NSString alloc] initWithFormat:@\"Weakname: %@\", weakName];\nNSLog(@\"%@\", str); // This will output \"(null)\"\n\n```", "```swift\n    #import <UIKit/UIKit.h> #import <MapKit/MapKit.h>\n    @interface ViewController : UIViewController {\n    MKMapView *mapView;\n    }\n\n    ```", "```swift\n    - (void)viewDidLoad {\n    [super viewDidLoad]; mapView = [[MKMapView alloc] initWithFrame:[self.view bounds]];\n    [self.view addSubview:mapView];\n    }\n\n    ```", "```swift\n    - (void)viewDidLoad {\n    [super viewDidLoad];\n    mapView = [[MKMapView alloc] initWithFrame:[self.view bounds]];\n    mapView.mapType=MKMapTypeHybrid;\n    mapView.showsUserLocation=YES;\n    [self.view addSubview:mapView];\n    }\n\n    ```", "```swift\n    #import <UIKit/UIKit.h>\n    @interface ViewController : UIViewController @property (strong, nonatomic) IBOutlet UIButton *btnTapMe;\n    @property (strong, nonatomic) IBOutlet UIButton *btnPressMe;\n    @end\n\n    ```", "```swift\n    //\n    // ViewController.m\n    // UIAutomation\n    //\n    // Created by Steven F Daniel on 19/09/11.\n    // Copyright (c) 2011 GenieSoft Studios. All rights reserved.\n    //\n    #import \"ViewController.h\"\n    @implementation ViewController @synthesize btnTapMe, btnPressMe;\n\n    ```", "```swift\n    // Event to handle when the Tap Me button has been pressed.\n    - (IBAction)btnTapMe:(id)sender {\n    // Define our alert dialog popup\n    UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@\"UIAutomation Example\" message:@\"Tap Me button pressed\" delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles:nil];\n    // Display our alert\n    [alert show];\n    }\n\n    ```", "```swift\n    // Event to handle when the Press Me button has been pressed.\n    - (IBAction)btnPressMe:(id)sender {\n    // Define our alert dialog popup\n    // UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@\"UIAutomation Example\" message:@\"Press Me button pressed\" delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles:nil];\n    // Display our alert\n    //[alert show];\n    }\n\n    ```", "```swift\nvar target = UIATarget.localTarget(); \n```", "```swift\nvar app = target.frontMostApp(); \n```", "```swift\n    // Initialise our application objects.\n    var target = UIATarget.localTarget();\n    var app = target.frontMostApp();\n    var window = app.mainWindow();\n    var view = window.elements()[0];\n    var buttons = window.buttons();\n\n    ```", "```swift\n    // UI Automation Test Case - Initial Logging\n    var testName = \"UI Automation Test Case 1\";\n    UIALogger.logStart(testName);\n\n    ```", "```swift\n    // TC001: Check for the number of buttons on screen.\n    UIALogger.logMessage(\"Assert Text - Check number of button(s) on screen\");\n    if (buttons.length != 2) {\n    UIALogger.logFail(\"FAIL: Invalid number of button(s)\");\n    }\n    else {\n    UIALogger.logPass(\"PASS: Correct number of button(s)\");\n    }\n\n    ```", "```swift\n    // TC002: Check for the existence of the Press Me\n    // button within the view.\n    UIALogger.logMessage(\"Assert Text - Check for the existence of the Press Me button.\");\n    // Get a handle to the button that we are after.\n    var btnPressMe = buttons.firstWithName(\"Press Me\");\n    if (btnPressMe == null || btnPressMe.toString() == \"[object UIAElementNil]\") {\n    UIALogger.logFail(\"FAIL: Press Me button not found.\");\n    }\n    else {\n    UIALogger.logPass(\"PASS: Press Me button was found.\");\n    }\n\n    ```", "```swift\n    // TC003: Tap on the Press Me button and check for the alert.\n    UIALogger.logMessage(\"Assert Text - Checking for the Press Me Alert dialog.\");\n    var btnPressMe = buttons.firstWithName(\"Press Me\");\n    // Simulate a tap on the Press Me button\n    btnPressMe.tap();\n    var alert = app.alert();\n    if (alert == null || alert.toString() == \"[object UIAElementNil]\") {\n    UIALogger.logFail(\"FAIL: The alert dialog was not shown after pressing the button.\");\n    }\n    else {\n    UIALogger.logPass(\"PASS: The alert dialog was shown after pressing the button.\");\n    }\n\n    ```", "```swift\n    // UI Automation Test Case 1 Completed\n    UIALogger.logMessage(\"UI Automation Test Case 1 Completed. Please check results panel for any errors.\");\n\n    ```", "```swift\n    // Event to handle when the Press Me button has been pressed. - (IBAction)btnPressMe:(id)sender {\n    // Define our alert dialog popup\n    UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@\"UIAutomation Example\" message:@\"Press Me button pressed\" delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles:nil];\n    // Display our alert\n    [alert show];\n    }\n\n    ```"]