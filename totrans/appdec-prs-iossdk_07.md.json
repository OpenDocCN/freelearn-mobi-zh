["```swift\n    [PFFacebookUtils initializeFacebook];\n    ```", "```swift\n    - (BOOL)application:(UIApplication *)application openURL:(NSURL *)url\n      sourceApplication:(NSString *)sourceApplication annotation:(id)annotation {\n        return [PFFacebookUtils handleOpenURL:url];\n    }\n\n    - (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url {\n        return [PFFacebookUtils handleOpenURL:url];\n    }\n    ```", "```swift\n[PFFacebookUtils logInWithPermissions:permissions block:^(PFUser *user, NSError *error) {\n    if (!user) {\n        NSLog(@\"Uh oh. The user cancelled the Facebook login.\");\n    } else if (user.isNew) {\n        NSLog(@\"User signed up and logged in through Facebook!\");\n    } else {\n        NSLog(@\"User logged in through Facebook!\");\n    }\n}];\n```", "```swift\n- (IBAction)loginButtonTouchHandler:(id)sender  {\n    // The permissions requested from the user\n    NSArray *permissionsArray = @[ @\"user_about_me\", @\"user_relationships\", @\"user_birthday\", @\"user_location\"];\n\n    // Login PFUser using Facebook\n    [PFFacebookUtils logInWithPermissions:permissionsArray block:^(PFUser *user, NSError *error) {\n        [_activityIndicator stopAnimating]; // Hide loading indicator\n\n        if (!user) {\n            if (!error) {\n                NSLog(@\"Uh oh. The user cancelled the Facebook login.\");\n            } else {\n                NSLog(@\"Uh oh. An error occurred: %@\", error);\n            }\n        } else if (user.isNew) {\n            NSLog(@\"User with facebook signed up and logged in!\");\n            [self.navigationController pushViewController:[[UserDetailsViewController alloc] initWithStyle:UITableViewStyleGrouped] animated:YES];\n        } else {\n            NSLog(@\"User with facebook logged in!\");\n            [self.navigationController pushViewController:[[UserDetailsViewController alloc] initWithStyle:UITableViewStyleGrouped] animated:YES];\n        }\n    }];\n}\n```", "```swift\n[PFFacebookUtils reauthorizeUser:[PFUser currentUser]\n                 withPermissions:@[\"publish_stream\"]\n                        audience:PF_FBSessionDefaultAudienceFriends\n                           block:^(BOOL succeeded, NSError *error) {\n    if (succeeded) {\n        //Your app now has publishing permissions for the user\n    }\n}];\n```", "```swift\n- (void)fetchUserData {\n    // ...\n    // Create request for user's Facebook data\n    FBRequest *request = [FBRequest requestForMe];\n\n    // Send request to Facebook\n    [request startWithCompletionHandler:^(FBRequestConnection *connection, id result, NSError *error) {\n        if (!error) {\n            // result is a dictionary with the user's Facebook data\n            NSDictionary *userData = (NSDictionary *)result;\n\n            NSString *facebookID = userData[@\"id\"];\n            NSString *name = userData[@\"name\"];\n            NSString *location = userData[@\"location\"][@\"name\"];\n            NSString *gender = userData[@\"gender\"];\n            NSString *birthday = userData[@\"birthday\"];\n            NSString *relationship = userData[@\"relationship_status\"];\n\n            NSURL *pictureURL = [NSURL URLWithString:[NSString stringWithFormat:@\"https://graph.facebook.com/%@/picture?type=large&return_ssl_resources=1\", facebookID]];\n\n            // Now add the data to the UI elements\n            // ...\n        }\n    }];\n}\n```", "```swift\nif (![PFFacebookUtils isLinkedWithUser:user]) {\n    [PFFacebookUtils linkUser:user permissions:nil block:^(BOOL succeeded, NSError *error) {\n        if (succeeded) {\n            NSLog(@\"User logged in with Facebook!\");\n        }\n    }];\n}\n```", "```swift\n[PFFacebookUtils unlinkUserInBackground:user block:^(BOOL succeeded, NSError *error) {\n    if (succeeded) {\n        NSLog(@\"The user is no longer associated with their Facebook account.\");\n    }\n}];\n```", "```swift\n- (void)logoutButtonAction:(id)sender  {\n    [PFUser logOut]; // Log out\n    // Return to login page\n}\n```", "```swift\n- (void)viewDidLoad {\n    ...\n    if ([PFUser currentUser] && // Check if a user is cached\n        [PFFacebookUtils isLinkedWithUser:[PFUser currentUser]]) // Check if user is linked to Facebook\n    {\n        // Push the next view controller without animation\n        [self.navigationController pushViewController:\n                                       [[UserDetailsViewController alloc]\n                                       initWithStyle:UITableViewStyleGrouped]\n                                   animated:NO];\n    }\n}\n```", "```swift\n    [PFTwitterUtils initializeWithConsumerKey:@\"YOUR CONSUMER KEY\"\n                               consumerSecret:@\"YOUR CONSUMER SECRET\"];\n    ```", "```swift\n[PFTwitterUtils logInWithBlock:^(PFUser *user, NSError *error) {\n    if (!user) {\n        NSLog(@\"Uh oh. The user cancelled the Twitter login.\");\n        return;\n    } else if (user.isNew) {\n        NSLog(@\"User signed up and logged in with Twitter!\");\n    } else {\n        NSLog(@\"User logged in with Twitter!\");\n    }     \n}];\n```", "```swift\nif (![PFTwitterUtils isLinkedWithUser:user]) {\n    [PFTwitterUtils linkUser:user block:^(BOOL succeeded, NSError *error) {\n        if ([PFTwitterUtils isLinkedWithUser:user]) {\n            NSLog(@\"User logged in with Twitter!\");\n        }\n    }];\n}\n```", "```swift\n[PFTwitterUtils unlinkUserInBackground:user block:^(BOOL succeeded, NSError *error) {\n    if (!error && succeeded) {\n        NSLog(@\"The user is no longer associated with their Twitter account.\");\n    }\n}];\n```"]