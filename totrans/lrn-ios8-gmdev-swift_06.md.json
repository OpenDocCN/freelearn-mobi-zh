["```swift\nlet fireRocker = SKAction.playSoundFileNamed(\"fireRocket.mp3\", waitForCompletion: false)\n\nself.runAction(fireRocker)\n```", "```swift\nlet enemySound = SKAction.playSoundFileNamed(\"enemyKill.mp3\", waitForCompletion: false)\n\nself.runAction(enemySound)\n```", "```swift\n//removing actions\nself.removeAllActions()\n\nfor enemy in enemies{\n\n     enemy._sprite.removeAllActions()\n}\n\nhero.removeAllActions()\n\n//playing one last action\nlet gameOverSound = SKAction.playSoundFileNamed(\"gameOver.mp3\", waitForCompletion: false)\n\nself.runAction(gameOverSound)\n\n```", "```swift\nlet popSound = SKAction.playSoundFileNamed(\"pop.mp3\", waitForCompletion: false)\nself.runAction(popSound)\n```", "```swift\nfunc btnPressed(){\n\n   let scene = MainMenuScene(size: self.size);\n   self.view?.presentScene(scene)\n\n}\n```", "```swift\nlet scene = MainMenuScene(size: self.size)\nself.view?.presentScene(scene)\n```", "```swift\nlet  buttonPressAction = SKAction.sequence(\n[SKAction.runBlock(btnPressed),    SKAction.waitForDuration(1.0)])\n\nself.runAction(buttonPressAction)\n```", "```swift\n    override func touchesBegan(touches: NSSet, withEvent event: UIEvent) {\n        /* Called when a touch begins */\n\n        for touch: AnyObject in touches {\n            let location = touch.locationInNode(self)\n\n            let _node:SKNode = self.nodeAtPoint(location);\n\n            if(_node.name == \"playBtn\"){\n\n                //println(\"[GameScene] play btn clicked \");\n\n                let popSound = SKAction.playSoundFileNamed(\"pop.mp3\", waitForCompletion: true)\n                self.runAction(popSound)\n\n                let  buttonPressAction = SKAction.repeatActionForever(SKAction.sequence([SKAction.runBlock(btnPressed),SKAction.waitForDuration(1.0)]))\n                self.runAction(buttonPressAction)\n\n            }\n\n            else if (_node.name == \"resetBtn\"){\n\n                let popSound = SKAction.playSoundFileNamed(\"pop.mp3\", waitForCompletion: true)\n                self.runAction(popSound)\n\n                NSUserDefaults.standardUserDefaults().setInteger(0, forKey: \"tinyBazooka_highscore\")\n                NSUserDefaults.standardUserDefaults().synchronize()\n\n                var currentHighScore = NSUserDefaults.standardUserDefaults().integerForKey(\"tinyBazooka_highscore\")\n                currentHighScoreLabel.text = \"Current High Score: \\(currentHighScore)\";\n\n            }\n\n        }\n    }\n```", "```swift\nimport UIKit\nimport SpriteKit\nimport AVFoundation\n\n```", "```swift\nclass GameViewController: UIViewController {\n\nlet bgMusic = AVAudioPlayer(contentsOfURL: NSBundle.mainBundle().URLForResource(\"bgMusic\", withExtension: \"mp3\"), error: nil)\n\n```", "```swift\nbgMusic.numberOfLoops = -1\nbgMusic.play()\n```", "```swift\nimport Foundation\nimport SpriteKit\n\nclass ParallaxSprite{\n\n    let _sprite1: SKSpriteNode!\n    let _sprite2: SKSpriteNode!\n    let _speed : CGFloat = 0.0\n    let _viewSize:CGSize!\n\n} //class end\n```", "```swift\n    init(sprite1: SKSpriteNode, sprite2: SKSpriteNode, viewSize: CGSize, speed: CGFloat){\n\n        _speed = speed\n        _viewSize = viewSize\n\n        _sprite1 = sprite1\n        _sprite1.position = CGPoint(x: _viewSize.width/2, y: _viewSize.height/2)\n\n        _sprite2 = sprite2\n        _sprite2.position = CGPoint(x: _sprite1.position.x + _sprite2.size.width - 2, y: _viewSize.height/2)\n\n    }//init\n```", "```swift\nfunc update(){\n\n    _sprite1.position.x += _speed\n    _sprite2.position.x += _speed\n\n    if((_sprite1.position.x + _sprite1.size.width/2) < 0){\n\n        _sprite1.position = CGPoint(x: _sprite2.position.x + _sprite1.size.width - 2, y: _viewSize.height/2)\n\n    }\n\n    if((_sprite2.position.x + _sprite2.size.width/2) < 0){\n\n        _sprite2.position = CGPoint(x: _sprite1.position.x + _sprite2.size.width - 2 , y: _viewSize.height/2)\n\n    }\n\n}//update\n```", "```swift\nlet scrollingBg:ParallaxSprite!\n```", "```swift\n        let BG1 = SKSpriteNode(imageNamed: \"BG\");   self.addChild(BG1);\n        let BG2 = SKSpriteNode(imageNamed: \"BG\");   self.addChild(BG2);\n\n        scrollingBg = ParallaxSprite(sprite1: BG1, sprite2: BG2, viewSize: viewSize, speed: -5.0)\n```", "```swift\nif(!gameOver){\n\n       scrollingBg.update()\n\n       updateGameObjects()\n       updateHero()\n       checkCollision()\n}//gameOver check \n```"]