["```swift\nprotocol ProtocolName {\n  var readWriteProperty1 {get set}\n  var readOnlyProperty2 {get}\n  func methodName1()\n  func methodName2()\n} \n```", "```swift\nclass Burger {\n}\nstruct Fries {\n}\nenum Sauce {\n  case chili\n  case tomato\n} \n```", "```swift\nprotocol CalorieCountable {\n  var calories: Int { get }\n  func description() -> String\n} \n```", "```swift\nclass Burger**:** **CalorieCountable** {\n**let****calories****=****800**\n**func****description****() ->** **String** **{**\n**\"This burger has** **\\(****calories****)** **calories\"**\n **}**\n} \n```", "```swift\nstruct Fries**:** **CalorieCountable**{\n**let****calories****=****500**\n**func****description****() ->** **String** **{**\n**\"****These fries have** **\\(****calories****)** **calories\"**\n **}**\n} \n```", "```swift\nclass ExistingType {\n  property1\n  method1()\n}\nextension ExistingType : ProtocolName {\n  property2\n  method2()\n} \n```", "```swift\nenum Sauce {\n  case chili\n  case tomato\n}\n**extension****Sauce****:** **CalorieCountable** **{**\n**var****calories****:** **Int** **{**\n**switch****self** **{**\n**case** **.****chili****:**\n**20**\n**case** **.****tomato****:**\n**15**\n **}**\n **}**\n**func****description****() ->** **String** **{**\n**\"This sauce has** **\\(****calories****)** **calories\"**\n **}**\n**}** \n```", "```swift\n    let burger = Burger()\n    let fries = Fries()\n    let sauce = Sauce.tomato\n    let foodArray: [CalorieCountable] = [burger, fries, sauce] \n    ```", "```swift\n    let totalCalories = foodArray.reduce(0, {$0 + $1.calories})\n    print(totalCalories) \n    ```", "```swift\ndo {\n  try expression1\n  statement1\n} catch {\n  statement2\n} \n```", "```swift\n    enum WebsiteError: Error {\n      case noInternetConnection\n      case siteDown\n      case wrongURL\n    } \n    ```", "```swift\n    func checkWebsite(siteUp: Bool) throws -> String {\n      if !siteUp {\n        throw WebsiteError.siteDown\n      }\n      return \"Site is up\"\n    } \n    ```", "```swift\n    let siteStatus = true\n    try checkWebsite(siteUp: siteStatus) \n    ```", "```swift\n    Playground execution terminated: An error was thrown and was not caught:\n    error: error: \n    ```", "```swift\n    let siteStatus = false\n    **do** **{**\n     **print(**try checkWebsite(siteUp: siteStatus)**)**\n    **}** **catch** **{**\n    **print(****error****)**\n    **}** \n    ```"]