["```swift\nTo see how it works, take a look at the following code:\n@class MyBar;\n@interface MyFoo\n{\n@private\n    NSString *myOwnString;\n}\n@property(readonly) NSString *myOwnString; \n\n- (MyBar *)getMyBarWithString:(NSString *)myString;\n- (MyBar *)getMyBar;\n\n@end\n\n@implementation MyFoo;\n@dynamic myOwnString;\n\n– (MyBar *)getMyBarWithString:(NSString *)myString\n{\n    MyBar *yBar;\n\n    if (![self.myString isEqualToString:myString]) \n    {\n        myOwnString = myString;\n    } \n    return [self getMyBar];\n}\n\n- (MyBar *)getMyBar\n{\n    MyBar *yBar\n\n    return yBar;\n}\n@end\n```", "```swift\n@class MyBar;\n@interface MyFoo\n{\n@private\n    NSString *myOwnString;\n}\n@property (readonly) NSString *myOwnString; \n\n- (MyBar *)getMyBarWithString:(NSString *)myString;\n- (MyBar *)getMyBar;\n\n@end\n\n@implementation MyFoo;\n@dynamic myOwnString;\n\n– (MyBar *)getMyBarWithString:(NSString *)myString\n{\n    MyBar *yBar;\n\n    if (![self.myString isEqualToString:myString]) \n    {\n        [myString retain];\n        [myOwnString release];\n        myOwnString = myString;\n    }\n    return [self getMyBar];\n}\n\n- (MyBar *)getMyBar\n{\n    MyBar *yBar\n\n    [yBar autorelease];\n    return yBar;\n}\n\n- (void)dealloc\n{\n    [myOwnString release];\n    [super dealloc];\n}\n@end\n```", "```swift\n[myString retain];\n[myOwnString release];\n```", "```swift\n    id strong = [NSObject new];\n    __weak id weak = strong;\n    strong = nil;\n    NSLog(@\"%@\", weak);\n```"]