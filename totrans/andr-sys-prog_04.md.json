["```kt\n$ mkdir android-x86emu\n$ cd android-x86emu\n$ repo init -u https://android.googlesource.com/platform/manifest -b android-7.1.1_r4\n$ repo sync\n$ git clone https://github.com/shugaoye/goldfish.git -b android-7.1.1_r4_x86emu_ch04_r1 kernel\n$ cd device/generic\n$ git clone https://github.com/shugaoye/x86emu.git -b android-7.1.1_r4_x86emu_ch04_r1  \n\n```", "```kt\n<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n<manifest> \n\n <remote  name=\"github\" fetch=\".\" /> \n  <remote  name=\"aosp\" \n         fetch=\"../android\" /> \n  <default revision=\"refs/tags/android-7.1.1_r4\" \n           remote=\"aosp\" \n           sync-j=\"4\" /> \n\n <!-- github/shugaoye --> <project path=\"kernel\" name=\"goldfish\"   \n  remote=\"github\" revision=\"refs/tags/\n  android-7.1.1_r4_x86emu_ch04_r1\" /> <project path=\"device/generic/x86emu\" name=\"x86emu\" remote=\"github\"   \n  revision=\"refs/tags/android-7.1.1_r4_x86emu_ch04_r1\" /> <!-- AOSP --> \n  <project path=\"build\" name=\"platform/build\" groups=\"pdk\" > \n    <copyfile src=\"img/root.mk\" dest=\"Makefile\" /> \n  </project> \n  <project path=\"abi/cpp\" name=\"platform/abi/cpp\" groups=\"pdk\" /> \n... \n</manifest> \n\n```", "```kt\n$ ls -F\nandroid/  android-x86/  github/  \n\n```", "```kt\n$ mkdir android-x86emu\n$ cd android-x86emu\n$ repo init -u {your mirror URL}/github/manifests.git -b **android-7.1.1_r4_****ch04**\n$ repo sync  \n\n```", "```kt\n<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n<manifest> \n\n  <remote  name=\"github\" \n           fetch=\".\" /> \n\n <remote  name=\"aosp\" \n fetch=\"https://android.googlesource.com/\" /> \n  <default revision=\"refs/tags/android-7.1.1_r4\" \n           remote=\"aosp\" \n           sync-c=\"true\" \n           sync-j=\"1\" /> \n\n  <!-- github/shugaoye --> \n  <project path=\"kernel\" name=\"goldfish\" remote=\"github\" \n   revision=\"refs/tags/android-7.1.1_r4_x86emu_ch04_r1\" /> \n  <project path=\"device/generic/x86emu\" name=\"x86emu\" remote=\"github\" \n   revision=\"refs/tags/android-7.1.1_r4_x86emu_ch04_r1\" /> \n\n  <!-- aosp --> \n  <project path=\"build\" name=\"platform/build\" groups=\"pdk,tradefed\" > \n    <copyfile src=\"img/root.mk\" dest=\"Makefile\" /> \n  </project> \n... \n\n```", "```kt\n$ mkdir android-x86emu\n$ cd android-x86emu\n$ repo init -u https://github.com/shugaoye/manifests -b **android-7.1.1_r4_ch04_****aosp**\n$ repo sync  \n\n```", "```kt\n$ cd device/generic \n$ mkdir x86emu \n\n```", "```kt\nPRODUCT_MAKEFILES := \\ \n    $(LOCAL_DIR)/x86emu_x86.mk \\  \n    $(LOCAL_DIR)/x86emu_x86_64.mk \\  \n\n```", "```kt\n$(call inherit-product, device/generic/x86emu/device.mk)\n$(call inherit-product, $(SRC_TARGET_DIR)/product/full.mk)\n# Overrides\nPRODUCT_BRAND := x86emu_x86\nPRODUCT_NAME := x86emu_x86\nPRODUCT_DEVICE = x86emu\nPRODUCT_MODEL := x86emu_x86_ch4\nTARGET_ARCH := x86\nTARGET_KERNEL_CONFIG := i386_ranchu_defconfig\n$(call inherit-product, $(LOCAL_PATH)/x86emu_base.mk)\n\n```", "```kt\n$(call inherit-product, device/generic/x86emu/device.mk)\n$(call inherit-product, $(SRC_TARGET_DIR)/product/full_x86_64.mk)\n# Overrides\nPRODUCT_BRAND := x86emu_x86_64\nPRODUCT_NAME := x86emu_x86_64\nPRODUCT_DEVICE = x86emu\nPRODUCT_MODEL := x86emu_x86_64_ch4\nTARGET_SUPPORTS_32_BIT_APPS := true\nTARGET_SUPPORTS_64_BIT_APPS := true\nTARGET_ARCH := x86_64\nTARGET_KERNEL_CONFIG := x86_64_ranchu_defconfig\n$(call inherit-product, $(LOCAL_PATH)/x86emu_base.mk)\n\n```", "```kt\n$(call inherit-product, $(SRC_TARGET_DIR)/product/full.mk) \n\n```", "```kt\n$(call inherit-product, $(SRC_TARGET_DIR)/product/full_x86_64.mk) \n\n```", "```kt\n$ ls build/target/product\nAndroidProducts.mk      full_base.mk             sdk_base.mk\naosp_arm64.mk           full_base_telephony.mk   sdk_mips.mk\naosp_arm.mk             full_mips64.mk           sdk.mk\naosp_base.mk            full_mips.mk             sdk_phone_arm64.mk\naosp_base_telephony.mk  full.mk                  sdk_phone_armv7.mk\naosp_mips64.mk          full_x86_64.mk           sdk_phone_mips64.mk\naosp_mips.mk            full_x86.mk              sdk_phone_mips.mk\naosp_x86_64.mk          generic_armv5.mk         sdk_phone_x86_64.mk\naosp_x86.mk             generic_mips.mk          sdk_phone_x86.mk\nbase.mk                 generic.mk               sdk_x86_64.mk\ncore_64_bit.mk          generic_no_telephony.mk  sdk_x86.mk\ncore_base.mk            generic_x86.mk           security\ncore_minimal.mk         languages_full.mk        telephony.mk\ncore.mk                 languages_small.mk       vboot.mk\ncore_tiny.mk            locales_full.mk          verity.mk\nembedded.mk             runtime_libart.mk\nemulator.mk             sdk_arm64.mk  \n\n```", "```kt\nTARGET_KERNEL_SOURCE := kernel \n\nPRODUCT_OUT ?= out/target/product/x86emu \n\ninclude $(TARGET_KERNEL_SOURCE)/AndroidKernel.mk \n\n# define build targets for kernel \n.PHONY: $(TARGET_PREBUILT_KERNEL) \n\nLOCAL_KERNEL := $(TARGET_PREBUILT_KERNEL) \n\nPRODUCT_COPY_FILES += \\ \n     $(LOCAL_KERNEL):kernel \\ \n\n```", "```kt\nTARGET_NO_BOOTLOADER := true \nTARGET_NO_KERNEL := true \nTARGET_CPU_ABI := x86 \nTARGET_ARCH := x86 \nTARGET_ARCH_VARIANT := x86 \nTARGET_PRELINK_MODULE := false \n\n# The IA emulator (qemu) uses the Goldfish devices \nHAVE_HTC_AUDIO_DRIVER := true \nBOARD_USES_GENERIC_AUDIO := true \n\n# no hardware camera \nUSE_CAMERA_STUB := true \n\n# customize the malloced address to be 16-byte aligned \nBOARD_MALLOC_ALIGNMENT := 16 \n\n# Enable dex-preoptimization to speed up the first boot sequence \n# of an SDK AVD. Note that this operation only works on Linux for now \nifeq ($(HOST_OS),linux) \nWITH_DEXPREOPT := true \nendif \n\n# Build OpenGLES emulation host and guest libraries \nBUILD_EMULATOR_OPENGL := true \n\n# Build and enable the OpenGL ES View renderer. When running on the emulator, \n# the GLES renderer disables itself if host GL acceleration isn't available. \nUSE_OPENGL_RENDERER := true \n\nTARGET_USERIMAGES_USE_EXT4 := true \nBOARD_SYSTEMIMAGE_PARTITION_SIZE := 1342177280 \nBOARD_USERDATAIMAGE_PARTITION_SIZE := 576716800 \nBOARD_CACHEIMAGE_PARTITION_SIZE := 69206016 \nBOARD_CACHEIMAGE_FILE_SYSTEM_TYPE := ext4 \nBOARD_FLASH_BLOCK_SIZE := 512 \nTARGET_USERIMAGES_SPARSE_EXT_DISABLED := true \n\nBOARD_SEPOLICY_DIRS += \\ \n        build/target/board/generic/sepolicy \\ \n        build/target/board/generic_x86/sepolicy \n\n```", "```kt\ninclude $(SRC_TARGET_DIR)/board/generic_x86/BoardConfig.mk \n\n# \n# Overwrite predefined variables. \n# \n\nTARGET_USERIMAGES_USE_EXT4 := true \nBOARD_SYSTEMIMAGE_PARTITION_SIZE := 1610612736 \nBOARD_USERDATAIMAGE_PARTITION_SIZE := 576716800 \nBOARD_CACHEIMAGE_PARTITION_SIZE := 69206016 \nBOARD_CACHEIMAGE_FILE_SYSTEM_TYPE := ext4 \nBOARD_FLASH_BLOCK_SIZE := 512 \nTARGET_USERIMAGES_SPARSE_EXT_DISABLED := true \n\nBOARD_KERNEL_CMDLINE += androidboot.selinux=permissive \n\n```", "```kt\n$ ls -F\nBoardConfig.mk  device.mk  README.txt  sepolicy/  system.prop  \n\n```", "```kt\nrild.libpath=/system/lib/libreference-ril.so \nrild.libargs=-d /dev/ttyS0 \n\n```", "```kt\n$(call inherit-product, $(SRC_TARGET_DIR)/board/generic_x86/device.mk) \n\n```", "```kt\nPRODUCT_PROPERTY_OVERRIDES := \\ \n    ro.ril.hsxpa=1 \\ \n    ro.ril.gprsclass=10 \\  \n    ro.adb.qemud=1 \n\nPRODUCT_COPY_FILES := \\ \ndevice/generic/goldfish/data/etc/apns-conf.xml:system/etc/\napns-conf.xml \\  \ndevice/generic/goldfish/camera/media_profiles.xml:system/etc/\nmedia_profiles.xml \\  \nframeworks/av/media/libstagefright/data/media_codecs_google_audio.xml:system/etc/media_codecs_google_audio.xml \\  \nframeworks/av/media/libstagefright/data/media_codecs_google_telephony.xml:system/etc/media_codecs_google_telephony.xml \\ \nframeworks/av/media/libstagefright/data/media_codecs_google_video.xml:system/etc/media_codecs_google_video.xml \\  \ndevice/generic/goldfish/camera/media_codecs.xml:system/etc/media_codecs.xml \n\nPRODUCT_PACKAGES := \\ \n    audio.primary.goldfish \\ \n    vibrator.goldfish \n\n```", "```kt\n$ add_lunch_combo <product_name>-<build_variant> \n$ lunch <product_name>-<build_variant> \n\n```", "```kt\n$ add_lunch_combo x86emu_x86-eng \n$ lunch x86emu_x86-eng \n\n```", "```kt\nfor i in eng userdebug user; do \n        add_lunch_combo x86emu_x86-${i} \ndone \n\n```", "```kt\n$ make -j4 \n============================================ \nPLATFORM_VERSION_CODENAME=REL \nPLATFORM_VERSION=7.1.1 \nTARGET_PRODUCT=x86emu \nTARGET_BUILD_VARIANT=eng \nTARGET_BUILD_TYPE=release \nTARGET_BUILD_APPS= \n... \nHOST_BUILD_TYPE=release \nBUILD_ID=MOB30Z \nOUT_DIR=out \n============================================ \nincluding ./abi/cpp/Android.mk ... \nincluding ./art/Android.mk ... \nincluding ./bionic/Android.mk ... \n... \n\n```", "```kt\n$ source build/envsetup.sh  \n\n```", "```kt\n$ lunch x86emu_x86-eng  \n\n```", "```kt\n$ lunch\n\nYou're building on Linux\n\nLunch menu... pick a combo:\n 1\\. aosp_arm-eng\n 2\\. aosp_arm64-eng\n 3\\. aosp_mips-eng\n 4\\. aosp_mips64-eng\n 5\\. aosp_x86-eng\n 6\\. aosp_x86_64-eng\n 7\\. x86emu_x86-eng\n 8\\. x86emu_x86-userdebug\n 9\\. x86emu_x86-user\n\nWhich would you like? [aosp_arm-eng] 7\n\n============================================\nPLATFORM_VERSION_CODENAME=REL\nPLATFORM_VERSION=7.1.1\nTARGET_PRODUCT=x86emu_x86\nTARGET_BUILD_VARIANT=eng\nTARGET_BUILD_TYPE=release\nTARGET_BUILD_APPS=\nTARGET_ARCH=x86\nTARGET_ARCH_VARIANT=x86\nTARGET_CPU_VARIANT=\nTARGET_2ND_ARCH=\nTARGET_2ND_ARCH_VARIANT=\nTARGET_2ND_CPU_VARIANT=\nHOST_ARCH=x86_64\nHOST_2ND_ARCH=x86\nHOST_OS=linux\nHOST_OS_EXTRA=Linux-4.2.0-27-generic-x86_64-with-Ubuntu-14.04-trusty\nHOST_CROSS_OS=windows\nHOST_CROSS_ARCH=x86\nHOST_CROSS_2ND_ARCH=x86_64\nHOST_BUILD_TYPE=release\nBUILD_ID=NMF26O\nOUT_DIR=out\n============================================  \n\n```", "```kt\n$ make -j4  \n\n```", "```kt\n$ m -j4  \n\n```", "```kt\n$ make -j4 showcommands  \n\n```", "```kt\n$ hmm\nInvoke \". build/envsetup.sh\" from your shell to add the following functions to your environment:\n- lunch:   lunch <product_name>-<build_variant>\n- tapas:   tapas [<App1> <App2> ...] [arm|x86|mips|armv5|arm64|x86_64|mips64] [eng|userdebug|user]\n- croot:   Changes directory to the top of the tree.\n- m:       Makes from the top of the tree.\n- mm:      Builds all of the modules in the current directory, but not their dependencies.\n- mmm:     Builds all of the modules in the supplied directories, but not their dependencies.\n To limit the modules being built use the syntax: mmm dir/:target1,target2.\n- mma:     Builds all of the modules in the current directory, and their dependencies.\n- mmma:    Builds all of the modules in the supplied directories, and their dependencies.\n- cgrep:   Greps on all local C/C++ files.\n- ggrep:   Greps on all local Gradle files.\n- jgrep:   Greps on all local Java files.\n- resgrep: Greps on all local res/*.xml files.\n- mangrep: Greps on all local AndroidManifest.xml files.\n- sepgrep: Greps on all local sepolicy files.\n- sgrep:   Greps on all local source files.\n- godir:   Go to the directory containing a file.\n\nEnvironemnt options:\n- SANITIZE_HOST: Set to 'true' to use ASAN for all host modules. Note that\n ASAN_OPTIONS=detect_leaks=0 will be set by default until \n the build is leak-check clean.\n\nLook at the source to view more functions. The complete list is:\naddcompletions add_lunch_combo cgrep check_product check_variant choosecombo chooseproduct choosetype choosevariant core coredump_enable coredump_setup cproj croot findmakefile get_abs_build_var getbugreports get_build_var getdriver getlastscreenshot get_make_command getprebuilt getscreenshotpath getsdcardpath gettargetarch gettop ggrep godir hmm is isviewserverstarted jgrep key_back key_home key_menu lunch _lunch m make mangrep mgrep mm mma mmm mmma pez pid printconfig print_lunch_menu qpid rcgrep resgrep runhat runtest sepgrep set_java_home setpaths set_sequence_number set_stuff_for_environment settitle sgrep smoketest stacks startviewserver stopviewserver systemstack tapas tracedmdump treegrep  \n\n```", "```kt\n$ ls -F $OUT\nAndroid-info.txt  dex_bootjars/             ramdisk.img           symbols/\nboot.img          gen/                      ramdisk-recovery.img  system/\ncache/            installed-files.txt       recovery/             system.img\ncache.img         kernel                    recovery.id           userdata.img\nclean_steps.mk    obj/                      recovery.img\ndata/             previous_build_config.mk  root/  \n\n```", "```kt\n#!/bin/sh \n\nemulator @a25x86 -verbose -show-kernel -shell -selinux disabled -system ${OUT}/system.img -ramdisk ${OUT}/ramdisk.img -initdata ${OUT}/userdata.img -kernel ${OUT}/kernel \n\n```", "```kt\n$ test-ch04.sh  \n\n```", "```kt\nall: \n   cd ../../..;make -j8 showcommands 2>&1 | tee x86emu-`date +%Y%m%d`.txt \n\nx86emu: \n   cd ../../..;make -j4 \n\nsnod: \n   cd ../../..;make snod \n\ninitrd: \n   cd ../../..;make initrd USE_SQUASHFS=0 \n\nramdisk: \n   cd ../../..;make -j4 \n\nclean-ramdisk: \n   rm ${OUT}/ramdisk.img \n   rm -rf ${OUT}/root \n\nclean-initrd: \n   rm ${OUT}/initrd.img \n   rm -rf ${OUT}/installer \n\n```", "```kt\n$ source build/envsetup.sh\n$ lunch x86emu_x86-eng\n${SDK_ROOT}/eclipse/eclipse  \n\n```", "```kt\nall: \n   cd ../../..;make -j8 showcommands 2>&1 | tee x86emu-`date +%Y%m%d`.txt \n\n```"]