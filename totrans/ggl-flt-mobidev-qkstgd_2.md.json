["```kt\nvoid function(int aNumber) {\n debugger(when: aNumber < 10);\n // ...\n }\n```", "```kt\nObservatory listening on http://127.0.0.1:8100/\n```", "```kt\nvoid main() {\n debugPaintSizeEnabled=true;\n runApp(MyApp());\n }\n```", "```kt\n      dev_dependencies:\n           flutter_test:\n             sdk: flutter\n```", "```kt\n      import 'package:test/test.dart';\n      void main() {\n         test('the answer to the question', () {\n           var answer = 42;\n           expect(answer, 42);\n         });\n       }\n```", "```kt\nimport 'package:flutter/material.dart';\n import 'package:flutter_test/flutter_test.dart';\nvoid main() {\n   testWidgets('my first widget test', (WidgetTester tester) async {\n     // You can use keys to locate the widget you need to test\n     var sliderKey = UniqueKey();\n     var value = 0.0;\n    // Tells the tester to build a UI based on the widget tree passed to it\n     await tester.pumpWidget(\n     StatefulBuilder(\n       builder: (BuildContext context, StateSetter setState) {\n         return MaterialApp(\n           home: Material(\n             child: Center(\n               child: Slider(\n                 key: sliderKey,\n                 value: value,\n                 onChanged: (double newValue) {\n                   setState(() {\n                     value = newValue;\n                       });\n                     },\n                   ),\n                 ),\n               ),\n             );\n           },\n         ),\n       );\n     expect(value, equals(0.0));\n    // Taps on the widget found by key\n     await tester.tap(find.byKey(sliderKey));\n    // Verifies that the widget updated the value correctly\n     expect(value, equals(0.5));\n   });\n }\n```", "```kt\n      dev_dependencies:\n           flutter_driver: \n             sdk: flutter\n```", "```kt\n flutter drive --target=my_app/test_driver/my_test.dart \n```"]