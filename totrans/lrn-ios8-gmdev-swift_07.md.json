["```swift\nlet lightNode = SKLightNode()\nlightNode.position = CGPoint(x: viewSize.width * 0.5, y: viewSize.height * 0.75)\nlightNode.categoryBitMask = 1\nlightNode.falloff = 0.25\nlightNode.ambientColor = UIColor.whiteColor()\nlightNode.lightColor = UIColor(red: 1.0, green: 1.0, blue: 0.0, alpha: 0.5)\nlightNode.shadowColor = UIColor(red: 0.0, green: 0.0, blue: 0.0, alpha: 0.3)\naddChild(lightNode)\n```", "```swift\nBG.lightingBitMask = 1\n```", "```swift\nlet myLabel = SKLabelNode(fontNamed:\"Chalkduster\")\nmyLabel.text = \"Ms.TinyBazooka\"\nmyLabel.fontSize = 65\nmyLabel.position = CGPoint(x: viewSize.width/2, y: viewSize.height * 0.8)\nmyLabel.fontColor = UIColor.blueColor()\nself.addChild(myLabel)\n```", "```swift\nself.addChild(playBtn) \nplayBtn.name = \"playBtn\"\n\nplayBtn.shadowCastBitMask = 1\n\n```", "```swift\nskView.ignoresSiblingOrder = false\n\n```", "```swift\nlet sky = SKSpriteNode(imageNamed: \"sky\", normalMapped: true)\nsky.position = CGPoint(x: viewSize.width/2, y: viewSize.height/2)\nself.addChild(sky)\n```", "```swift\nlet sun = SKSpriteNode(imageNamed: \"sun\")\nsun.position = CGPoint(x: viewSize.width * 0.5,y: viewSize.height * 0.75)\naddChild(sun)\nsun.lightingBitMask = 1\n\nsun.runAction(SKAction.repeatActionForever(SKAction.rotateByAngle(1, duration: 1)))\n```", "```swift\nvar scrollingBg:ParallaxSprite!\nvar cloud:MovingSprite!\nvar cloudNode:SKSpriteNode!\n```", "```swift\ncloudNode = SKSpriteNode(imageNamed:\"cloud\");\ncloudNode.position = CGPoint(x: viewSize.width/2, y: viewSize.height * 0.9)\naddChild(cloudNode)\n```", "```swift\ncloudNode.shadowCastBitMask = 1\ncloud = MovingSprite(sprite: cloudNode, speed: CGPointMake(-3.0, 0.0))\n```", "```swift\nlet BG1 = SKSpriteNode(imageNamed: \"BG\")\nself.addChild(BG1)\n\nlet BG2 = SKSpriteNode(imageNamed: \"BG\")\nself.addChild(BG2)\n\nBG1.lightingBitMask = 1        \nBG2.lightingBitMask = 1\n\nscrollingBg = ParallaxSprite(sprite1: BG1, sprite2: BG2, viewSize: viewSize, speed: -5.0)\n```", "```swift\noverride func update(currentTime: CFTimeInterval) {\n   /* Called before each frame is rendered */\n\n   scrollingBg.update()\n   cloud.moveSprite()\n\n   if((cloudNode.position.x + cloudNode.size.width/2) < 0){\n\n       cloudNode.position.x = viewSize.width + cloudNode.size.width/2\n   }\n}\n```", "```swift\n//hero = SKSpriteNode(imageNamed: \"hero\");\n//hero.position = CGPoint(x: viewSize.width/4, y: viewSize.height/2)\n//self.addChild(hero)\n\nhero = SKSpriteNode(texture: SKTexture(imageNamed: \"heroSI\"), normalMap: SKTexture(imageNamed: \"heroSI_n\"));\nhero.position = CGPoint(x: viewSize.width/4, y: viewSize.height/2)\nself.addChild(hero)\n\nhero.lightingBitMask = 1\n\n/*\nlet heroAtlas = heroAnim()\nlet heroIdleAnimArray = heroAtlas.hero_Idle_()\nlet animaiton = SKAction.animateWithTextures(heroIdleAnimArray, timePerFrame: 0.2)\nlet animate = SKAction.repeatActionForever(animaiton)\nhero.runAction(animate)\n*/ \n```", "```swift\nhero.physicsBody = SKPhysicsBody(rectangleOfSize: hero.size)\n```", "```swift\nself.physicsBody = SKPhysicsBody(\n                           edgeLoopFromRect: CGRect(x: 0,\n                                                    y: 0,\n                                         width: viewSize.width,\n                                         height: viewSize.height))\n```", "```swift\nhero.physicsBody?.restitution = 0\nhero.physicsBody?.friction = 0\nhero.physicsBody?.density = 0\nhero.physicsBody?.mass = 0  \n```", "```swift\n//thrust.y = 15.0\n```", "```swift\nhero.physicsBody?.velocity = CGVectorMake(0, 0)\nhero.physicsBody?.applyImpulse(CGVectorMake(0, 300))\n```", "```swift\n    #ifndef skGame_skGame_Bridging_Header_h\n    #define skGame_skGame_Bridging_Header_h\n\n    #endif\n\n    #import \"SSBitmapFont.h\"\n    #import \"SSBitmapFontlabelNode.h\"\n\n    ```", "```swift\n    var bmFontFile = SSBitmapFont(file: NSBundle.mainBundle().URLForResource(\"skGame_font\", withExtension: \"skf\"), error: nil)\n    ```", "```swift\n    let bmFontText = bmFontFile.nodeFromString(\"Ms.TinyBazooka\")\n    bmFontText.position  = CGPoint(x: viewSize.width/2,\n       y: viewSize.height * 0.8)\n    addChild(bmFontText)\n    ```", "```swift\n#import \"SSBitmapFont.h\"\n#import \"SSBitmapFontlabelNode.h\"\n#import \"SpineImport.h\"\n\n```", "```swift\n  var hero = SGG_Spine()\n```", "```swift\nhero.skeletonFromFileNamed(\"player\",\n                            andAtlasNamed: \"player\",\n                            andUseSkinNamed: nil)\n\nhero.position = CGPoint(x: viewSize.width/4, y: viewSize.height * 0.25)\nhero.xScale = 1.25; hero.yScale = 1.25;        \nhero.runAnimation(\"walk\", andCount: -1)\naddChild(hero)\n```"]