- en: Cloud Solutions for App Experiments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云端解决方案应用于应用实验
- en: While an MVP could be something as minimal as a landing page, announcing your
    app, or a live mock up version of your app, there comes a time that your app should
    be a little more than that, whether it is to prove your next hypotheses or to
    see the actual thing in its most basic shape in action. It's about time to create
    a **Proof of Concept** (**PoC**).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然MVP可能只是最简单的着陆页、宣布您的应用或应用的实时模拟版本，但总有那么一个时刻，您的应用应该比这更多，无论是为了证明您的下一个假设，还是为了看到其最基本形态的实际应用。是时候创建一个**概念验证（PoC**）了。
- en: Standalone apps are rare these days. Most apps have functionality to share content
    on Twitter or Facebook, have leaderboards (if it is a game), let the user post
    pictures or video, have a chat or otherwise communicate with each other, and so
    on. For this your app needs to have a backend.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 独立应用现在很少见。大多数应用都有在Twitter或Facebook上分享内容的功能（如果它是游戏），让用户发布图片或视频，拥有排行榜（如果它是游戏），让用户发布聊天或以其他方式相互沟通等功能。为此，您的应用需要有一个后端。
- en: You can of course create your own API or use the API of the many solutions that
    do exist for this purpose, the so-called **Mobile backend as a Service** (**MBaaS**).
    These solutions do work like any other **Software as a Service** (**SaaS**) but
    are specifically intended for this purpose.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您可以创建自己的API或使用为该目的而存在的许多解决方案的API，即所谓的**移动后端即服务（MBaaS**）。这些解决方案的工作方式与任何其他**软件即服务（SaaS**）一样，但专门为此目的而设计。
- en: In this chapter, we will have a look on MBaaS solutions and will see what it
    takes to build an Android PoC using Firebase, a popular cloud-based backend.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨MBaaS解决方案，并了解使用Firebase构建Android PoC需要哪些步骤，Firebase是一个流行的基于云的后端。
- en: 'Specifically, in the chapter we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，在本章中我们将涵盖以下主题：
- en: Find out if we need to create a backend on our own
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解是否需要我们自己创建后端
- en: Leverage cloud solutions for app experiments
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用云端解决方案进行应用实验
- en: Determine what services are available as MBaaS
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定哪些服务可以作为MBaaS（移动后端即服务）使用
- en: Examine an Android PoC app using Firebase
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查使用Firebase的Android PoC应用
- en: Do you need to create a backend yourself?
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要自己创建后端吗？
- en: It totally depends on your app's needs, but for most apps there is no reason
    at all to create a backend yourself, at least not for your **Minimum Viable Product**
    (**MVP**). There are plenty of readymade backend solutions available.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这完全取决于您的应用需求，但对于大多数应用来说，完全没有必要自己创建后端，至少对于您的**最小可行产品（MVP**）来说是这样。有许多现成的后端解决方案可供选择。
- en: Most solutions support push notifications, data storage, social sign up and
    login (sign up or login using your Facebook or Twitter credentials for example)
    and data synchronization functionality, including offline support for your app.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数解决方案支持推送通知、数据存储、社交注册和登录（例如使用您的Facebook或Twitter凭证注册或登录）以及数据同步功能，包括对您的应用的支持离线功能。
- en: If you have to program all these things for yourself, it could take up a lot
    of time and it will probably take even more time to make it error free.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您必须自己编写所有这些代码，可能会花费很多时间，而且可能需要更多时间来确保没有错误。
- en: Almost all solutions come as freemium service and most of the time the free
    options are good enough to build your MVP. Some of them, such as Firebase, come
    with real-time support, making it a great base for a chat app. Later, we will
    build a PoC with Firebase, but first let's see what solutions are currently available.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有解决方案都以免费增值服务的形式提供，而且大多数情况下，免费选项足以构建您的MVP。其中一些，如Firebase，提供实时支持，使其成为聊天应用的一个很好的基础。稍后，我们将使用Firebase构建一个PoC，但首先让我们看看目前有哪些解决方案可用。
- en: 'What a MBaaS can do for you is illustrated here. Most solutions offer a web-based
    **Content Management System** (**CMS**), an **Application Programming Interface**
    (**API**) and a **Software Development Kit** (**SDK**). Such a solution will take
    care of storing both remote and local data. In addition, it has support for the
    synchronization of data (it sends local persisting data to a remote location and
    vice versa) and for distributing push notifications:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: MBaaS能为您做什么在这里得到了说明。大多数解决方案提供基于网络的**内容管理系统（CMS**），**应用程序编程接口（API**）和**软件开发工具包（SDK**）。这样的解决方案将负责存储远程和本地数据。此外，它还支持数据同步（它将本地持久化数据发送到远程位置，反之亦然）和分发推送通知：
- en: '![](img/142bd4e2-c6cc-4025-b86a-4e04bf332b4e.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/142bd4e2-c6cc-4025-b86a-4e04bf332b4e.png)'
- en: To be more precise, an API is a way for apps to communicate with the data stored
    at the remote server (cloud solution). Data can often be retrieved through a **Representational
    State Transfer** (**REST**) interface over http(s). The SDK is a piece of software
    that you can add to your own app. It will make the usage of the API more convenient.
    Often the API will take care of things such as obtaining data and data synchronization.
    The integration of the service will be simplified by using the API, but you can
    still use the REST interface, for example, to show the same data on the website.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 更精确地说，API是应用程序与存储在远程服务器（云解决方案）中的数据通信的方式。数据通常可以通过http(s)上的**表示状态传输**（**REST**）接口检索。SDK是一段你可以添加到自己的应用程序的软件。它将使API的使用更加方便。通常，API会处理诸如获取数据和数据同步等问题。使用API可以简化服务的集成，但你仍然可以使用REST接口，例如，在网站上显示相同的数据。
- en: Leverage cloud solutions for app experiments
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用云解决方案进行应用程序实验
- en: MBaaS solutions are great for getting things going real quickly. Most solutions
    come with features that almost any app has in common, such as registration, login,
    retrieving, saving, and sharing data. Another big advantage of using an MBaaS
    is its scalability. Right now we are aiming for the development of an MVP and
    technical scaling issues are luxury problems. However, it is good to know upfront
    that these problems are easier to resolve using these kinds of third-party solutions.
    Your app has scalability but does not yet need to scale. If it needs to be scaled
    up, then you just switch to a bigger plan (from a technical perspective). You
    will read more about scaling strategies in [Chapter 15](d9145149-0f4e-47b6-bc9d-ff46e5e63304.xhtml),
    *Growing Traction and Improving Retention*.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: MBaaS解决方案非常适合快速启动项目。大多数解决方案都包含几乎所有应用程序都有的功能，例如注册、登录、检索、保存和共享数据。使用MBaaS的另一个重大优势是其可扩展性。目前我们正在致力于开发MVP，技术扩展问题都是奢侈问题。然而，提前知道这些问题可以通过这些类型的第三方解决方案更容易解决是很好的。你的应用程序具有可扩展性，但尚未需要扩展。如果需要扩展，那么只需切换到更大的计划（从技术角度来看）。你将在第15章中了解更多关于扩展策略的内容，*增长吸引力和提高留存率*。
- en: Things to consider
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 需要考虑的事项
- en: There are some other things to look at, such as pricing. You can start with
    a free plan, but if you need to scale up your solution, it is important to know
    how fast the price will increase. Is the service still reasonably priced if you
    need to deal with high volumes. When that happens money may no longer be a big
    issue as your business already has grown significantly. It could also be that
    your strategy is to use the service only for a first MVP. It is all fine as long
    as you have a strategy and you keep these things in mind.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些其他事项需要考虑，例如定价。你可以从免费计划开始，但如果需要扩展你的解决方案，了解价格增长的速度是很重要的。如果你需要处理大量数据，服务是否仍然价格合理。当这种情况发生时，由于你的业务已经显著增长，金钱可能不再是主要问题。也可能你的策略是仅将服务用于第一个最小可行产品（MVP）。只要你有策略，并牢记这些事项，一切就都很好。
- en: Another thing to think about is the fact that your user data resides on the
    server of a third party such as Facebook or Google. You should ask yourself if
    you should trust third parties to build a solution. Of course a lot depends on
    the nature of the solution. Anyhow there are things that you would like to know
    for sure such as "Is your data safe and what is going to happen if the service
    provider decides to discontinue its services?" Parse server and Firebase have
    some impressive names in their testimonials, so we can probably assume that in
    most cases your data is safe indeed.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要思考的问题是，你的用户数据存储在第三方服务器上，例如Facebook或Google。你应该问自己是否应该信任第三方来构建解决方案。当然，这很大程度上取决于解决方案的性质。无论如何，有一些事情你确实需要了解，比如“你的数据是否安全，如果服务提供商决定停止其服务，会发生什么？”Parse服务器和Firebase在其推荐信中有一些令人印象深刻的名称，所以我们可能可以假设在大多数情况下，你的数据确实是安全的。
- en: The story of Parse
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Parse的故事
- en: The second one is more relevant than you might think. A while ago Parse announced
    they were going to discontinue their services. That announcement made a lot of
    (independent) developers pretty angry. These developers were totally dependent
    on Parse services. The discontinuation of Parse made them fearful because they
    thought they had no other choice but to end their business. Developers had high
    expectations from the services, also because Parse had been acquired by Facebook.
    It seemed to be very solid. Apparently, that acquisition perhaps also led to that
    same announcement. For Facebook, the team was probably more interesting than the
    service itself.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个问题比你想象的更重要。不久前，Parse宣布他们将要停止提供服务。这个公告让许多（独立）开发者非常愤怒。这些开发者完全依赖于Parse服务。Parse的停止让他们感到恐惧，因为他们认为他们别无选择，只能结束自己的业务。开发者对服务有很高的期望，这也因为Parse被Facebook收购。它看起来非常稳固。显然，这次收购也许也导致了那个同样的公告。对于Facebook来说，团队可能比服务本身更有趣。
- en: Fortunately, this fairy tale has a happy end. Parse came with a nice migration
    plan, which nowadays is known as the open source solution Parse server. You can
    host it yourself but if you do not want to do that then there is no problem either.
    A lot of other parties jumped right on it and started to offer Parse server hosting.
    The server itself does not come with all the features that were available in Parse
    but parties such as Back4App did a great job adding them all back in.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，这个童话有一个快乐的结局。Parse提供了一套不错的迁移计划，现在这被称为开源解决方案Parse服务器。你可以自己托管，但如果你不想这么做，也没有问题。许多其他方也迅速加入，开始提供Parse服务器托管服务。服务器本身并不具备Parse中所有可用的功能，但像Back4App这样的公司做了大量工作，将它们全部添加回来。
- en: In short, this story proves that you should not completely depend on services
    like these. Partners are important but when they become irreplaceable the future
    of your startup could possibly be uncertain. And while this story is about Parse,
    the same thing could happen to Firebase, for example. That is not very likely
    but Google has shut down some services before, so it also is not completely impossible.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，这个故事证明了你不应该完全依赖这类服务。合作伙伴很重要，但当他们变得不可替代时，你创业的未来可能会变得不确定。虽然这个故事是关于Parse的，但类似的事情也可能发生在Firebase上，例如。这不太可能，但谷歌之前已经关闭了一些服务，所以这也不是完全不可能的。
- en: Strategic considerations
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 战略性考虑
- en: If you need to make a decision whether to use a cloud-based service or not and
    if you need to make a choice from the various available services, then there are
    some strategic considerations that could be important. Using such a service comes
    with both advantages and disadvantages. A number of them are listed next.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要决定是否使用基于云的服务，以及需要从各种可用服务中进行选择，那么有一些战略性的考虑因素可能很重要。使用此类服务既有优点也有缺点。以下列出了一些。
- en: 'The following are the advantages:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些优点：
- en: The service shortens the development time
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该服务缩短了开发时间
- en: Out of the box the service often comes with support for registration and login
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开箱即用的服务通常自带注册和登录支持
- en: Most services can easily be scaled up or down, depending on the amount of traffic
    that you are expecting
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数服务可以根据你预期的流量量轻松地进行扩展或缩减
- en: Almost all services support push notifications and media storage
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几乎所有服务都支持推送通知和媒体存储
- en: 'The following are the disadvantages:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些缺点：
- en: A ready-to-use service is often more expensive. Pricing could be an issue.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个现成的服务通常更贵。定价可能成为一个问题。
- en: The privacy of your (user) data could be an issue. You have to trust that the
    company, that is offering the service, is taking the right precautions to ensure
    the security.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的（用户）数据的隐私可能是一个问题。你必须相信提供该服务的公司正在采取适当的预防措施来确保安全性。
- en: There is always the risk that the service will be discontinued.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总是有这样的风险，即服务可能会被终止。
- en: There is a lock-in risk. It could be difficult to migrate to another service
    when all your data is residing with a particular provider.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存在锁定风险。当所有数据都驻留在特定提供商处时，迁移到另一个服务可能会很困难。
- en: What services are available as MBaaS?
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可作为MBaaS使用的服务有哪些？
- en: There are a couple of services available that could act as a backend for your
    app. Given the strategic considerations from the previous paragraph and the specific
    needs of your app, one service might be more suitable than another.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些服务可以作为你应用程序的后端。考虑到上一段中的战略考虑因素以及你应用程序的具体需求，一个服务可能比另一个服务更适合。
- en: 'Some offer real-time data, making it perfect for a chat application. Others
    are more about persisting data or come with building blocks, such as QuickBlox,
    allowing you to create your app even faster. Some are pretty dedicated solutions,
    pretty easy and fast to use but not very flexible. Others are very flexible but
    come with a steeper learning curve:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一些提供实时数据，使其非常适合聊天应用。其他则更侧重于数据持久化或附带构建块，例如 QuickBlox，让您能够更快地创建应用。一些是相当专业的解决方案，使用起来既简单又快捷，但不够灵活。其他则非常灵活，但学习曲线较陡峭：
- en: '![](img/69fdd9d9-4824-4462-8a81-494055beaf2c.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/69fdd9d9-4824-4462-8a81-494055beaf2c.png)'
- en: 'Most solutions store data in a document-related database, such as MongoDB.
    If you need to have a relational type of database for your app, then choosing
    Azure with SQL Server will probably be the best thing to do. Choose the service
    that matches most closely with your app needs and your current development skills:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数解决方案将数据存储在文档相关的数据库中，如 MongoDB。如果您需要为您的应用选择关系型数据库，那么选择 Azure 与 SQL Server
    可能是最佳选择。选择与您的应用需求和当前开发技能最匹配的服务：
- en: '**Back4App**: The service offers hosted parse servers. The service has support
    for push notifications, data, and file storage and it supports Cloud code. Cloud
    code is code, often queries, that run on the Parse server. You can use the common
    Android and iOS Parse SDKs to communicate with the server.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Back4App**：该服务提供托管解析服务器。该服务支持推送通知、数据和文件存储，并支持云代码。云代码是在解析服务器上运行的代码，通常是查询。您可以使用常见的
    Android 和 iOS 解析 SDK 与服务器通信。'
- en: '**SashiDo**: Just like Back4App, this is a service that offers a hosted parse
    server plus a couple of extra things.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SashiDo**：与 Back4App 类似，这是一个提供托管解析服务器以及一些额外功能的托管服务。'
- en: '**Firebase**: It is a scalable real-time backend for web, Android, and iOS.
    It is perfect for chat and collaboration tools, but is also suitable for other
    needs. Storing media such as images or video is a bit more complicated when compared
    with Parse server or Azure, for example.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Firebase**：它是一个可扩展的实时后端，适用于 Web、Android 和 iOS。它非常适合聊天和协作工具，但也适用于其他需求。与 Parse
    服务器或 Azure 等相比，存储媒体（如图像或视频）可能要复杂一些。'
- en: '**BaasBox**: This is an open source backend for your mobile app. It has SDKs
    for iOS, Android, and JavaScript.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**BaasBox**：这是一个为您的移动应用提供的开源后端。它为 iOS、Android 和 JavaScript 提供了 SDK。'
- en: '**QuickBlox**: This service provides building blocks for a backend infrastructure.
    It offers data storage, push notifications, text and video chat, and many other
    features. It allows developers to create apps quickly, but is a bit pricy. For
    this reason, it is most suitable for a PoC and less for a real app.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**QuickBlox**：这项服务为后端基础设施提供构建块。它提供数据存储、推送通知、文本和视频聊天以及许多其他功能。它允许开发者快速创建应用，但价格略高。因此，它最适合原型验证，而不太适合实际应用。'
- en: '**Azure**: Microsoft Azure comes with support for push notifications and other
    mobile services. It has become one of Microsoft''s core businesses, so you can
    see Azure as one of the most trustworthy MBaaS solutions. The platform will stay
    for sure. It is also true that, compared to other MBaaS, the Azure services can
    sometimes be a little bit confusing. It is less dedicated to MBaaS alone. It can
    simply do way too many things and it can make the service a bit overwhelming if
    you just got started. It is very flexible and because of this it has a relatively
    steep learning curve. For your app needs, you can use table and blob storage (for
    images, documents, and so on), use the mobile services, the API services, or you
    can create your own API using .NET or another language. There are Azure client
    SDKs for Android, iOS, and Windows.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure**：Microsoft Azure 提供了对推送通知和其他移动服务的支持。它已成为微软的核心业务之一，因此您可以将 Azure 视为最值得信赖的
    MBaaS 解决方案之一。该平台肯定会持续存在。事实上，与其他 MBaaS 相比，Azure 服务有时可能有点令人困惑。它并不完全专注于 MBaaS。它能够做很多事情，如果刚开始使用，可能会使服务显得有些令人不知所措。它非常灵活，因此学习曲线相对较陡峭。对于您的应用需求，您可以使用表格和
    blob 存储（用于图像、文档等），使用移动服务、API 服务，或者您可以使用 .NET 或其他语言创建自己的 API。Azure 为 Android、iOS
    和 Windows 提供了客户端 SDK。'
- en: '**Backendless**: Backendless provides an instant mobile Backend as a Service
    and overall application development Platform.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Backendless**：Backendless 提供即时移动后端作为服务以及整体应用开发平台。'
- en: '**remoteStorage**: [remoteStorage](https://remotestorage.io/) offers an open
    protocol for per-user storage. Use a storage account with a provider you trust,
    or set up your own storage server.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**remoteStorage**：[remoteStorage](https://remotestorage.io/) 提供了针对每个用户的开放协议存储。使用您信任的提供商的存储账户，或者设置您自己的存储服务器。'
- en: '**CloudBoost.io**: This is a complete database service that comes with data
    storage, search, real-time and other stuff.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CloudBoost.io**：这是一个包含数据存储、搜索、实时和其他功能的完整数据库服务。'
- en: '**PubNub**: [PubNub](https://www.pubnub.com/) is a real-time network that enables
    software developers to rapidly build and scale real-time apps by providing the
    cloud infrastructure, connections, and key building.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PubNub**：[PubNub](https://www.pubnub.com/)是一个实时网络，它通过提供云基础设施、连接和关键构建块，使软件开发者能够快速构建和扩展实时APP。'
- en: '**Parse server**: The Parse server is an open source solution that you can
    download and host by yourself. You could also, for example, host it on Heroku
    or on Azure. The server uses a MongoDB database and utilizes Amazon S3 storage
    to store files, such as images, audio or video. The Parse SDKs for Android and
    iOS include all kinds of handy stuff, such as caching data and uploading data
    or files in the background.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Parse server**：Parse server是一个开源解决方案，你可以下载并自行托管。例如，你也可以在Heroku或Azure上托管它。服务器使用MongoDB数据库，并利用Amazon
    S3存储来存储文件，如图像、音频或视频。Parse SDKs for Android和iOS包括各种实用功能，如缓存数据、在后台上传数据或文件。'
- en: Technical considerations
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术考虑因素
- en: 'Besides strategic considerations, there are also a couple of technical aspects
    to consider. Before you choose a particular service, you should ask yourself the
    following questions:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 除了战略考虑之外，还有一些技术方面需要考虑。在选择特定服务之前，你应该问自己以下问题：
- en: Does your app require real-time support?
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的APP需要实时支持吗？
- en: Does your app handle a lot of media (images, video, and audio)?
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的APP处理大量的媒体（图像、视频和音频）吗？
- en: How trustworthy should the service provider be?
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务提供商应该有多大的可信度？
- en: How good are your current skills that are required to use the chosen service?
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你目前需要使用所选服务的技能有多好？
- en: How much flexibility do you need and how much time do you have available?
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要多少灵活性，你有多少可用时间？
- en: In the next paragraph, we will examine an Android MVP that is using Firebase.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一段中，我们将检查一个使用Firebase的Android MVP。
- en: Canvapp - an Android MVP app using Firebase
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Canvapp - 使用Firebase的Android MVP APP
- en: Let's build an Android MVP app using Firebase. For this particular case, we
    will have an app that allows you to create and share your business model canvas,
    just by using your phone. Anyone can view or edit each other's canvases so you
    can gather feedback easily. If you do not remember what the business model canvas
    looks like, you can have a look at [Chapter 2](4846c191-1deb-4452-90d3-2bac5032aa3a.xhtml),
    *Lean Startup Primer* again.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用Firebase构建一个Android MVP APP。对于这个特定的案例，我们将有一个APP，允许你通过手机创建和分享你的业务模型画布。任何人都可以查看或编辑彼此的画布，这样你可以轻松地收集反馈。如果你不记得业务模型画布的样子，你可以再次查看[第2章](4846c191-1deb-4452-90d3-2bac5032aa3a.xhtml)，*精益创业入门*。
- en: 'We will be using a wireframing tool, such as SwordSoft Layout as shown in the
    following example . Let''s say that the app should look more or less like this:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一个线框工具，例如以下示例中的SwordSoft Layout。假设APP应该看起来大致如此：
- en: '![](img/9fff2520-8ed2-4616-ae9d-8bf84e1fc80f.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9fff2520-8ed2-4616-ae9d-8bf84e1fc80f.png)'
- en: The first view displays a list of business model canvases and it has a sliding
    menu. The second view is the one that the user will see when he is creating a
    new canvas or when he chooses a canvas from the list. It displays a number of
    pages, each containing a title, description, and some hint. Users can swipe back
    and forward. It is a very basic app. It has only three views, but that will be
    sufficient to demonstrate how to use Firebase as a backend and we can use it to
    prove that this app concept does make sense.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个视图显示了一个业务模型画布的列表，并且有一个滑动菜单。第二个视图是用户在创建新的画布或从列表中选择画布时看到的视图。它显示了多个页面，每个页面包含一个标题、描述和一些提示。用户可以前后滑动。这是一个非常基础的APP。它只有三个视图，但这足以展示如何使用Firebase作为后端，并且我们可以用它来证明这个APP概念是有意义的。
- en: 'For the sake of simplicity, we will just say, for this example, that you have
    already validated your earliest hypotheses. The hypotheses for this solution are:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化起见，我们可以说，在这个例子中，你已经验证了你的早期假设。这个解决方案的假设是：
- en: Startup entrepreneurs want to share their canvases to get feedback from other
    entrepreneurs.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创业者希望通过其他创业者获取反馈来分享他们的画布。
- en: Startup entrepreneurs want to share their canvases using a smartphone or tablet.
    This will allow us to focus on the technical implementation of the app.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创业者希望通过智能手机或平板电脑分享他们的画布。这将使我们能够专注于APP的技术实现。
- en: 'You can find the source for this project at: [https://github.com/mikerworks/packt-lean-saas-canvapp](https://github.com/mikerworks/packt-lean-saas-canvapp).'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下位置找到这个项目的源代码：[https://github.com/mikerworks/packt-lean-saas-canvapp](https://github.com/mikerworks/packt-lean-saas-canvapp)。
- en: Sign up for Firebase
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注册Firebase
- en: 'If you want to see things in action, you will have to go to [www.firebase.com](http://www.firebase.com)
    and sign up. Once you have done that, you can create your first app. The only
    thing that matters is the endpoint that Firebase will create. You need this endpoint
    to configure your app. In the following example, the endpoint is torrid-head-3108.firebaseIO.com:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想看到实际操作，你将需要访问[www.firebase.com](http://www.firebase.com)并注册。完成注册后，你可以创建你的第一个应用。唯一重要的是Firebase将创建的端点。你需要这个端点来配置你的应用。在下面的示例中，端点是torrid-head-3108.firebaseIO.com：
- en: '![](img/18a20cac-a02d-4876-b52e-ec37d0eed9a2.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/18a20cac-a02d-4876-b52e-ec37d0eed9a2.png)'
- en: 'First, download the Android Firebase example from GitHub ([https://github.com/mikerworks/packt-lean-saas-canvapp](https://github.com/mikerworks/packt-lean-saas-canvapp)),
    so we can go through it and see what it is all about. If you prefer, and if you
    have some time left, you can also build this app from scratch, of course. For
    now, you can download the readymade app, examine it, and modify it as needed:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，从GitHub下载Android Firebase示例（[https://github.com/mikerworks/packt-lean-saas-canvapp](https://github.com/mikerworks/packt-lean-saas-canvapp)），这样我们就可以浏览它并了解其内容。如果你愿意，并且有时间的话，当然也可以从头开始构建这个应用。目前，你可以下载现成的应用，检查它，并根据需要修改它：
- en: '![](img/e41af29c-a353-4bdb-8cbb-8f96eb5f2be0.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e41af29c-a353-4bdb-8cbb-8f96eb5f2be0.png)'
- en: 'Open the app in Android Studio or another IDE if you prefer. One of the things
    that you need to modify is the Firebase endpoint in the application. Collapse
    the `data` package node within the app and open the `FirebaseRepository` class.
    Within the `FirebaseRepository` class, locate the constructor and adapt the firebase
    reference so that it matches yours:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你更喜欢在Android Studio或其他IDE中打开应用，你需要修改的是应用中的Firebase端点。折叠应用中的`data`包节点并打开`FirebaseRepository`类。在`FirebaseRepository`类中，找到构造函数并调整Firebase引用，使其与你的匹配：
- en: '[PRE0]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When you run the app and have added a couple of canvases it looks more or less
    like this. Yeah, it already contains some cool ideas:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行应用并添加了几幅画布后，它看起来大致如此。是的，它已经包含了一些酷点子：
- en: '![](img/8519c38b-8cff-4300-a180-2ab17b183bfb.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8519c38b-8cff-4300-a180-2ab17b183bfb.png)'
- en: When you run the app and have added a couple of canvases it looks more or less
    like this. Yeah, it already contains some cool ideas. The app will display a list
    of canvas models residing in Firebase. The title and description for each model
    will be shown. Anyone can view or edit it by clicking on a model. This will display
    the edit view, which will contain a swipeable collection of canvas elements. A
    new canvas can be created through the options in the menu.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行应用并添加了几幅画布后，它看起来大致如此。是的，它已经包含了一些酷点子。应用将显示在Firebase中驻留的画布模型列表。每个模型的标题和描述都将显示。任何人都可以通过点击模型来查看或编辑它。这将显示编辑视图，其中包含可滑动的画布元素集合。可以通过菜单中的选项创建新的画布。
- en: For this app, we have created a new project in Android Studio and we chose the
    Navigation Drawer to be our first activity. This will give us a nice template
    with a readymade menu. It is here that the List and New canvas options are going
    to appear.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个应用，我们在Android Studio中创建了一个新项目，并选择了导航抽屉作为我们的第一个活动。这将给我们一个带有现成菜单的漂亮模板。列表和新画布选项将在这里出现。
- en: Layout
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 布局
- en: 'There are a few layout resources in the project (res/layout) that we will describe.
    These layouts are as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 项目中有几个布局资源（res/layout），我们将对其进行描述。这些布局如下：
- en: '**The list layout**: This displays a list of canvases'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**列表布局**：这个布局显示画布列表'
- en: '**The pager layout**: This shows a swipeable series of elements.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分页布局**：这个布局显示一系列可滑动的元素。'
- en: '**The element layout**: This layout will display a title, description, some
    hints, and edit box for each element of the Business Model Canvas.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**元素布局**：这个布局将为商业模型画布的每个元素显示标题、描述、一些提示和编辑框。'
- en: '**The row layout**: This renders each row in the list of canvases.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**行布局**：这个布局将渲染画布列表中的每一行。'
- en: The layout files are small and contain just some boilerplate code. It is nothing
    fancy but we need it anyway to create the Android Firebase PoC. You can examine
    them if you want, but for now let's proceed with the parts of the code that are
    most relevant.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 布局文件很小，只包含一些样板代码。它并不花哨，但我们仍然需要它来创建 Android Firebase PoC。如果你想检查它们，现在让我们继续与代码中最重要的部分。
- en: Dependencies
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 依赖项
- en: 'To examine the list of dependencies for the app, open the `build.gradle` file
    within the `app` folder. Among other things, you will find the dependencies for
    Firebase and JSON deserialization here, as listed next:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查应用程序的依赖项列表，请打开 `app` 文件夹中的 `build.gradle` 文件。在这里，你将找到 Firebase 和 JSON 反序列化的依赖项，如下所示：
- en: '[PRE1]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Within the `res` folder raw, you will find the `canvas.json` file. The JSON
    data in this file will be parsed using `Gson`. It will act as a template for each
    new canvas. All the user needs to do is to provide a value for each element.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `res` 文件夹的 raw 中，你可以找到 `canvas.json` 文件。该文件中的 JSON 数据将使用 `Gson` 进行解析。它将作为每个新画布的模板。用户需要做的只是为每个元素提供一个值。
- en: 'The JSON object in the file looks like this. It will be processed by the `LocalRepository`
    class:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 文件中的 JSON 对象看起来像这样。它将由 `LocalRepository` 类处理：
- en: '[PRE2]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This template implements a particular type of Business Model Canvas. There are
    some variants as well. Ash Maurya, for example, uses a different and, in my opinion,
    more suitable canvas. He calls it the Lean Canvas and it has been described in
    [Chapter 2](4846c191-1deb-4452-90d3-2bac5032aa3a.xhtml), *Lean Startup Primer*.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 此模板实现了一种特定的商业模型画布类型。还有一些变体。例如，Ash Maurya 使用了一个不同且在我看来更合适的画布。他称之为精益画布，并在 [第 2
    章](4846c191-1deb-4452-90d3-2bac5032aa3a.xhtml)，《精益创业基础》中进行了描述。
- en: Feel free to modify the template or to create a totally different application,
    derived from this one, for example, for some kind of survey.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 随意修改模板或创建一个完全不同的应用程序，例如，用于某种调查。
- en: Models
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型
- en: A canvas typically has a collection of Canvas elements, each representing a
    section of the Business Model Canvas. For the sake of simplicity, these classes
    contain only the most basic information.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 画布通常包含一组画布元素，每个元素代表商业模型画布的一个部分。为了简化，这些类只包含最基本的信息。
- en: 'The most important models used in the app are the `Canvas` and the `CanvasElement`
    models. Both the `Canvas` and `CanvasElement` classes implement the `Parcelable`
    interface. This will make it easier to pass (complex) objects to each fragment:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序中使用的重要模型是 `Canvas` 和 `CanvasElement` 模型。`Canvas` 和 `CanvasElement` 类都实现了
    `Parcelable` 接口。这将使得将（复杂）对象传递给每个片段变得更加容易：
- en: '[PRE3]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The `CanvasElement` class and the JSON object found in the template file have
    similar fields. Each element of the canvas has an ID, title, description, and
    text for the placeholder. The user input will fill the `value` field:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`CanvasElement` 类和模板文件中找到的 JSON 对象具有类似的字段。画布的每个元素都有一个 ID、标题、描述和占位符文本。用户输入将填充
    `value` 字段：'
- en: '[PRE4]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The local repository reads the raw JSON file, which contains the template.
    It will convert the data to a `CanvasElementsModel` class, which, in turn, is
    nothing but a wrapper around canvas elements:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 本地仓库读取包含模板的原始 JSON 文件。它将数据转换为 `CanvasElementsModel` 类，该类本质上是对画布元素的包装：
- en: '[PRE5]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now it is time for some Firebase stuff. The `IRemoteRepository` interface has
    been added to the app. This will avoid a vendor lock in. If you ever want to use
    another MBaaS or your own API, then all you need to do is change the implementation
    for the three methods found as follows:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候处理一些 Firebase 相关的内容了。`IRemoteRepository` 接口已被添加到应用程序中。这将避免供应商锁定。如果你想要使用另一个
    MBaaS 或你自己的 API，那么你需要做的就是更改以下三个方法的实现：
- en: '[PRE6]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The `FirebaseRepository` class is the Firebase-specific implementation for
    the `IRemoteRepository` interface. The following code snippet shows you what is
    needed to store and to retrieve canvases. Let''s have a look at the constructor
    first. Here, the reference to a Firebase endpoint is defined. You can modify the
    reference value to match the endpoint of your own Firebase app:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`FirebaseRepository` 类是针对 `IRemoteRepository` 接口的 Firebase 特定实现。以下代码片段展示了存储和检索画布所需的内容。让我们首先看看构造函数。在这里，定义了
    Firebase 端点的引用。你可以修改引用值以匹配你自己的 Firebase 应用程序的端点：'
- en: '[PRE7]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In the `createCanvas` method, a new `Canvas` object will be created. It will
    be prefilled with the information we get from the template file through the `LocalRepository`
    class. We change the reference to a child node canvas and a canvas node is being
    added as a child node of that node. The `push` method obtains a unique identifier
    for the canvas. We will store that ID, created by Firebase, with the `Canvas`
    object. Finally, this method returns the new `Canvas` object:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `createCanvas` 方法中，将创建一个新的 `Canvas` 对象。它将通过 `LocalRepository` 类从模板文件中获取的信息进行预填充。我们将引用更改为子节点画布，并将画布节点添加为该节点的子节点。`push`
    方法获取画布的唯一标识符。我们将使用 Firebase 创建的该 ID 与 `Canvas` 对象一起存储。最后，此方法返回新的 `Canvas` 对象：
- en: '[PRE8]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: One of the cool things about Firebase is that developers do not need to worry
    too much about being online or offline. In case the device is offline, this method
    will succeed anyway. Firebase will take care of persisting the new `Canvas` object
    locally. Once there is an internet connection available again, Firebase will take
    care of synchronizing the data between your app and the remote repository.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: Firebase的一个酷特点是开发者不必太担心在线或离线。如果设备离线，此方法仍然会成功。Firebase 将负责在本地持久化新的 `Canvas` 对象。一旦再次有互联网连接可用，Firebase
    将负责在您的应用和远程存储库之间同步数据。
- en: 'Here is an example of what the app looks like when you start to create a new
    canvas:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在您开始创建新画布时应用的外观示例：
- en: '![](img/0e7ff96c-70aa-4225-aa91-8813660be9a8.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0e7ff96c-70aa-4225-aa91-8813660be9a8.png)'
- en: 'The `saveCanvasModel` method implementation is even smaller. It will update
    the Firebase data in case the user has made some changes. All you need to do is
    to call the `setValue` method with a given `Canvas` object. The method retrieves
    a reference to the canvas data node. The unique ID we obtained earlier in the
    `createCanvas` method will be used to find the right node. Finally, we only need
    to call the `setValue` method to send the data to Firebase:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`saveCanvasModel` 方法的实现甚至更小。它将在用户进行了一些更改的情况下更新 Firebase 数据。您需要做的就是使用给定的 `Canvas`
    对象调用 `setValue` 方法。该方法检索画布数据节点的引用。我们在 `createCanvas` 方法中较早获得的唯一 ID 将用于找到正确的节点。最后，我们只需调用
    `setValue` 方法将数据发送到 Firebase：'
- en: '[PRE9]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In the `loadCanvasModels` method, we will retrieve all the stored canvases and
    we will add a listener to the canvases node. Every time data is inserted or when
    existing data changes, the `onDataChange` event will be fired. A snapshot will
    be provided with each event. It contains the (JSON) data for all child nodes under
    the canvas's node.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `loadCanvasModels` 方法中，我们将检索所有存储的画布，并将监听器添加到画布节点。每当数据插入或现有数据更改时，`onDataChange`
    事件将被触发。每个事件都会提供一个快照。它包含画布节点下所有子节点的（JSON）数据。
- en: 'Each child node of the obtained snapshot will be deserialized to a `Canvas`
    object. The `CanvasList` fragment will be notified so that it can display or update
    the list:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 获得的快照的每个子节点都将反序列化为 `Canvas` 对象。`CanvasList` 片段将被通知，以便它可以显示或更新列表：
- en: '[PRE10]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `MainActivity` class is derived from the one that comes with the Navigation
    Drawer template. It has been slightly modified, so it can display the various
    fragments. It will also handle the clicks on any of the menu items. The `onList`
    method is triggered if the app starts for the first time or if the user chooses
    the list option from the menu. The `onEdit` method is triggered if the user chooses
    the new canvas option from the menu.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`MainActivity` 类是从带有导航抽屉模板的类派生出来的。它已经稍作修改，以便可以显示各种片段。它还将处理任何菜单项的点击。如果应用首次启动或用户从菜单中选择列表选项，则会触发
    `onList` 方法。如果用户从菜单中选择新的画布选项，则会触发 `onEdit` 方法。'
- en: 'The `onEdit` method will also be called if the users click on any of the listed
    Business Model Canvases, as displayed in the `CanvasList` fragment. In the `onEdit`
    method, the `canvas` parameter will be passed. The `getRepository` method returns
    a class that implements the `IRemoteRepository` interface, which in our example
    is the `FireBaseRepository` class. If you want to switch from Firebase to Parse
    or another MBaaS, then all you need to do is return another repository here:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户点击 `CanvasList` 片段中显示的任何列出的商业画布，`onEdit` 方法也将被调用。在 `onEdit` 方法中，将传递 `canvas`
    参数。`getRepository` 方法返回一个实现 `IRemoteRepository` 接口的类，在我们的例子中是 `FireBaseRepository`
    类。如果您想从 Firebase 切换到 Parse 或其他 MBaaS，那么您只需在这里返回另一个存储库：
- en: '[PRE11]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The app uses three fragments. There is one to display a list of canvases, another
    one to act as a container for a series of swipeable canvas elements, and there
    is one for the canvas elements themselves.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序使用三个片段。有一个用于显示画布列表，另一个用作一系列可滑动画布元素的容器，还有一个用于画布元素本身。
- en: 'The `CanvasListFragment` has a `loadData` method, which calls the `loadCanvasModels`
    method from the repository:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`CanvasListFragment` 有一个 `loadData` 方法，该方法从仓库中调用 `loadCanvasModels` 方法：'
- en: '[PRE12]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'When the results are retrieved they will be handled in the `onResult` method,
    which will take the result and display list canvases:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 当检索到结果时，它们将在 `onResult` 方法中处理，该方法将获取结果并显示列表画布：
- en: '[PRE13]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The `CanvasPagerFragment` is a container fragment. It can hold a number of
    canvas element fragments, each representing a particular element of the canvas.
    Users can swipe backward and forward:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`CanvasPagerFragment` 是一个容器片段。它可以容纳多个画布元素片段，每个片段代表画布的特定元素。用户可以前后滑动：'
- en: '[PRE14]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'In the `loadData` method, we will create the `pagerAdapter` based on the provided
    `Canvas` object:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `loadData` 方法中，我们将根据提供的 `Canvas` 对象创建 `pagerAdapter`：
- en: 'The `setOffscreenPageLimit` method is set to `11` here (each canvas contains
    11 elements, so we need 11 instances of the `CanvasElementFragment` class) to
    make sure we can access all element fragments. This is done for demonstration
    purposes only and it should be avoided in a real-world app. It may cause memory
    issues:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`setOffscreenPageLimit` 方法在此处设置为 `11`（每个画布包含 11 个元素，因此我们需要 11 个 `CanvasElementFragment`
    类的实例）以确保我们可以访问所有元素片段。这只是为了演示目的，在实际应用程序中应避免这样做。它可能会导致内存问题：'
- en: '[PRE15]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'If the user clicks on the Save button, the `onSaveData` method will be triggered.
    There we call the `saveCanvasModel` method from the repository and pass the updated
    canvas object. Finally, we will navigate back to the list of canvases:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户点击保存按钮，将触发 `onSaveData` 方法。在那里，我们调用仓库中的 `saveCanvasModel` 方法并传递更新的画布对象。最后，我们将导航回画布列表：
- en: '[PRE16]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The `CanvasElementFragment` represents an element of the Business Model Canvas.
    This, for example, could be the card where a user can enter ideas about the value
    proposition:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`CanvasElementFragment` 代表商业模型画布的一个元素。例如，这可能是一个用户可以输入关于价值主张想法的卡片：'
- en: '[PRE17]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'In the `OnCreateView` method, we will bind the element object to the view:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `OnCreateView` 方法中，我们将元素对象绑定到视图：
- en: '[PRE18]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Firebase dashboard
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Firebase仪表板
- en: If you have been playing with the app a little, have added some canvases and
    then gone to the Firebase dashboard, you will see all the canvases that you have
    just created appear here. All updates appear here instantly (of course, only if
    the device you are testing the app on is online).
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你稍微玩过这个应用程序，添加了一些画布，然后转到 Firebase 仪表板，你将看到你刚刚创建的所有画布都出现在这里。所有更新都会立即显示（当然，前提是你在测试应用程序的设备是联网的）。
- en: This also makes Firebase very suitable for chat applications. It works the other
    way around as well. If you add a new canvas node here, it will appear instantly
    in the app. Just give it a try, add some nodes, play a bit and adapt the app a
    bit to test other Firebase functionality as well.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这也使得 Firebase 非常适合聊天应用程序。它也可以反过来工作。如果你在这里添加一个新的画布节点，它将立即出现在应用程序中。只需尝试一下，添加一些节点，玩一会儿，并适当地调整应用程序以测试其他
    Firebase 功能。
- en: This is what the dashboard may look like.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是仪表板可能的样子。
- en: 'To clarify this example, the title, description and hint fields, that already
    persist locally, are stored here as well. It makes sense to avoid data redundancy
    as much as possible and to store only the `ID` and `VALUE` properties of each
    element:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 为了阐明这个例子，标题、描述和提示字段，已经本地持久化，也存储在这里。尽可能避免数据冗余，只存储每个元素的 `ID` 和 `VALUE` 属性是有意义的：
- en: '![](img/edafd642-50b0-4e2d-8fe0-ecefc7289f3b.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/edafd642-50b0-4e2d-8fe0-ecefc7289f3b.png)'
- en: With only a little bit of code, you can persist your data in the cloud with
    Firebase. You do not need to worry about scalability issues, being online or offline
    and many other cases. Firebase has many more options such as user management (sign
    up, login), security, limitation, and paging options.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 只需一点代码，你就可以使用 Firebase 在云端持久化你的数据。你不需要担心可扩展性问题、在线或离线以及许多其他情况。Firebase 有许多其他选项，例如用户管理（注册、登录）、安全、限制和分页选项。
- en: Summary
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have seen what services we can choose from if we do not
    want to create the backend for the app ourselves. We learned what could be important
    for making the right strategic and technical choices and also saw an example app,
    which is using Firebase as a mobile backend. You can use the app to learn from
    or you can enhance it and use it as a starter project for your own app idea.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了如果我们不想自己创建应用的后端，我们可以选择哪些服务。我们学习了什么因素对于做出正确的战略和技术选择可能很重要，并且还看到了一个示例应用，该应用使用Firebase作为移动后端。你可以使用这个应用来学习，或者你可以对其进行增强，并用作你自己的应用想法的起始项目。
- en: The app that we examined is for Android only. What if you want to have this
    app built for iOS? Should you create it again, but this time using Swift and Xcode?
    Are there other options to develop an app just one time but for multiple (mobile)
    platforms? You can check out the next chapter to learn more about this.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所检查的应用仅适用于Android。如果你想要这个应用为iOS构建，会怎样呢？你应该再次创建它，但这次使用Swift和Xcode吗？有没有其他选项，只需开发一次应用，但适用于多个（移动）平台？你可以查看下一章来了解更多相关信息。
