- en: Chapter 4.  Developing Watch UI
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章：开发手表UI
- en: '|   | *"To create something exceptional, your mindset must be relentlessly
    focused on the smallest detail."* |   |'
  id: totrans-1
  prefs: []
  type: TYPE_TB
  zh: '|   | *"要创造非凡的东西，你的心态必须始终如一地专注于细节。"* |   |'
- en: '|   | --*Giorgio Armani* |'
  id: totrans-2
  prefs: []
  type: TYPE_TB
  zh: '|   | --*乔治·阿玛尼* |'
- en: In this chapter, we will be extending the `Today` app, we started in the previous
    chapter using the UI components available in the Android Wear SDK. We will also
    be looking into building custom UI components using custom layouts that would
    fit into the watch's form factor.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将扩展在前一章中开始使用的Android Wear SDK中可用的UI组件的`Today`应用。我们还将探讨使用自定义布局构建自定义UI组件，这些布局将适合手表的尺寸。
- en: We will be developing the `Today` app iteratively and incrementally as we go
    through the chapters in this book. We will be introducing various concepts and
    features of Android Wear SDKs and APIs when it's relevant, and utilizing them
    to make this app as feature-rich as possible.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将随着在本书各章节中的学习，迭代和逐步开发`Today`应用。当相关时，我们将介绍Android Wear SDKs和API的各种概念和功能，并利用它们使这个应用尽可能功能丰富。
- en: Please note that by no means will the `Today` app be finished when we complete
    this chapter. It will be improved as we introduce more API concepts in further
    chapters.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，当我们完成这一章时，`Today`应用绝对不会完成。随着我们在后续章节中介绍更多API概念，它将得到改进。
- en: Note
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The code accompanying this chapter is available for reference on GitHub ([https://github.com/siddii/mastering-android-wear/tree/master/Chapter_4](https://github.com/siddii/mastering-android-wear/tree/master/Chapter_4)).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码可在GitHub上参考（[https://github.com/siddii/mastering-android-wear/tree/master/Chapter_4](https://github.com/siddii/mastering-android-wear/tree/master/Chapter_4)）。
- en: For the sake of brevity, only code snippets are included as needed. The reader
    is encouraged to download the referenced code from GitHub and follow along as
    they progress through the chapter.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简洁起见，仅包含所需的代码片段。鼓励读者从GitHub下载引用的代码，并在阅读章节时跟随进度。
- en: Wearable UI
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可穿戴UI
- en: By now, you probably realize that an Android Wear watch is not just a smaller
    form factor than its predecessors, such as the phone and tablet. There are various
    nuances and characteristics that make the Android Wear watch different to the
    other big screen devices.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止，你可能已经意识到Android Wear手表不仅仅比其前辈（如手机和平板）体积更小。它有各种细微差别和特性，使得Android Wear手表与其他大屏幕设备不同。
- en: First and foremost, there is no such thing as keyboard input, at least, not
    currently. That brings a major challenge in how you design apps for Android Wear
    platform. There is not much of interactivity available from the user due to the
    lack of keyboard (physical or virtual) data inputs.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，没有键盘输入，至少目前没有。这给为Android Wear平台设计应用带来了巨大的挑战。由于缺少键盘（物理或虚拟）数据输入，用户交互性非常有限。
- en: On top of that, we also don't have the *ubiquitous* back button that is available
    on all other Android devices. The button for going back on the Android platform
    makes navigating inside an app and switching between apps a lot easier. Without
    that, it would be a lot harder to navigate within and between apps. The swipe
    gestures on the Android Wear watch are used like back buttons.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们也没有其他所有Android设备都有的*通用*返回按钮。在Android平台上，返回按钮使得在应用内导航和切换应用变得容易得多。没有它，在应用内和之间导航将会困难得多。Android
    Wear手表上的滑动手势就像返回按钮一样使用。
- en: Before we start writing UI components and navigation code for the Android Wear
    app, if you are not very familiar with the Android Wear watch platform component
    and navigation flow, this would be a good time to spend some time on a physical
    device or emulator to see how they work. Poke around various stock apps and see
    how the swipe gestures and navigation work.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编写Android Wear应用的UI组件和导航代码之前，如果你对Android Wear手表平台组件和导航流程不是很熟悉，现在花些时间在物理设备或模拟器上看看它们是如何工作的会是个不错的选择。探索各种内置应用，看看滑动手势和导航是如何工作的。
- en: The important point to remember here is that, although the Android Wear device
    works differently to phones and tablets, it is running the same Android platform
    (operating system) available on every device. However, not all the UI components
    and widgets will be available or relevant to the Android Wear platform. It will
    be a subset of components, and in some cases, it will be a slimmed-down version
    of what is available on phones and tablets.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这里要记住的重要一点是，尽管Android Wear设备与手机和平板电脑的工作方式不同，但它运行的是每个设备上都可用的相同Android平台（操作系统）。然而，并非所有UI组件和小部件都适用于或与Android
    Wear平台相关。它将是一个组件的子集，在某些情况下，它将是手机和平板电脑上可用的简化版本。
- en: The Android manifest file
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android清单文件
- en: The `Today` app currently has two activities. The main activity is called `TodayActivity`,
    and the another one is `DayOfYearActivity`, which is used to display data specific
    to days of the year.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`Today`应用目前有两个活动。主活动称为`TodayActivity`，另一个是`DayOfYearActivity`，用于显示特定于年份的数据。'
- en: 'Note the use of the `uses-feature` tag, which makes it an Android Wear watch
    app:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注意使用`uses-feature`标签，这使得它成为一个Android Wear手表应用：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The TodayActivity activity
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TodayActivity活动
- en: Let's see what we have in the main activity—`TodayActivity`. In the `onCreate`
    method, we set the `activity_main.xml` layout as the content view. And we have
    `WearableListView`  with `action_list` tied to the `ListViewAdapter` class.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看主活动中有哪些内容——“TodayActivity”。在`onCreate`方法中，我们将`activity_main.xml`布局设置为内容视图。并且我们有一个与`ListViewAdapter`类关联的`WearableListView`。
- en: Note that the `TodayActivity` activity also implements the click listener for
    the `WearableListView` class, which is why you see the `onClick` handler method
    implemented right next to the `onCreate` method*.*
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`TodayActivity`活动还实现了`WearableListView`类的点击监听器，这就是为什么你会看到`onClick`处理方法紧挨着`onCreate`方法实现的原因*.*
- en: 'At this point, the `onClick` listener method is handling only the first item
    in the list view. It launches `DayOfYearActivity` when it''s clicked, and when
    the default `Intent` bundle is passed:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，`onClick`监听器方法只处理列表视图中的第一个项目。点击时会启动`DayOfYearActivity`，并且当传递默认的`Intent`包时：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Actions inside the arrays.xml file
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`arrays.xml`文件中的操作'
- en: 'The string values for the list view actions are declared inside the `arrays.xml`
    file*.* We can add more actions to this file as we improve or add features to
    this app:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 列表视图操作的字符串值在`arrays.xml`文件中声明*.* 随着我们对这个应用进行改进或添加功能，我们可以向此文件添加更多操作：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Main activity layout file
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主活动布局文件
- en: 'The layout file for the main activity, `activity_main.xml` is pretty simple.
    All it contains is the `WearableListView`  component defined in the layout. As
    we mentioned earlier, the `WearableListView` component is an optimized version
    of the `ListView` method that is suitable for small screen devices. It handles
    all the scrolling and transitions needed while scrolling:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 主活动布局文件`activity_main.xml`相当简单。它只包含在布局中定义的`WearableListView`组件。正如我们之前提到的，`WearableListView`组件是`ListView`方法的优化版本，适用于小屏幕设备。它处理滚动和过渡所需的所有滚动：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'When you launch the app using an Android Wear emulator, you should see the
    app listed with a custom launch icon, as shown in the following screenshot. Please
    note the icons for various device resolutions are placed in the `app/src/main/res/mipmap-*`
    folders:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用Android Wear模拟器启动应用时，你应该看到带有自定义启动图标的列表中列出了应用，如下面的截图所示。请注意，各种设备分辨率的图标放置在`app/src/main/res/mipmap-*`文件夹中：
- en: '![Main activity layout file](img/image00161.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![主活动布局文件](img/image00161.jpeg)'
- en: The WearableListItemLayout component
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WearableListItemLayout组件
- en: The `WearableListView` componentis used to display a list of available actions
    in the app, whereas the `WearableListItemLayout` component is used to style or
    layout components in an individual list item.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`WearableListView`组件用于在应用中显示可用的操作列表，而`WearableListItemLayout`组件用于对单个列表项中的组件进行样式或布局。'
- en: In this specific case, we have `ImageView` and `TextView` tags*.* Note the usage
    of `android:src="img/wl_circle"` line. It is essentially a drawable file available
    in the `res/drawable/wl_circle.xml` directory.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个特定的情况下，我们有`ImageView`和`TextView`标签*.* 注意`android:src="img/wl_circle"`行的使用。它本质上是一个位于`res/drawable/wl_circle.xml`目录中的可绘制文件。
- en: 'The `TextView` tag is used to display individual action strings that come from
    the `arrays.xml` file:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`TextView`标签用于显示来自`arrays.xml`文件的单独操作字符串：'
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Here is the implementation of the `WearableListItemLayout` class. It is basically
    an extension of the `LinearLayout` class with some handler methods for the `OnCenterProximityListener`
    component of the `WearableListView` component. Take a moment to understand how
    the `colors` and `alpha` characteristics of the components are updated when the
    list items are scrolled and brought into the center position:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是`WearableListItemLayout`类的实现。它基本上是`LinearLayout`类的一个扩展，包含一些针对`WearableListView`组件的`OnCenterProximityListener`组件的处理方法。花点时间理解当列表项滚动并带到中心位置时，组件的`colors`和`alpha`特性是如何更新的：
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here is a screenshot of the action list we can see:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是我们可以看到的操作列表的截图：
- en: '![The WearableListItemLayout component](img/image00162.jpeg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![The WearableListItemLayout component](img/image00162.jpeg)'
- en: The DayOfYearActivity class
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DayOfYearActivity类
- en: 'The `DayOfYearActivity` activity is a very simple class that uses Java''s default
    `java.util.Calendar` instance to calculate how many days have passed and how many
    days are remaining until the end of the year:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`DayOfYearActivity`活动是一个非常简单的类，它使用Java的默认`java.util.Calendar`实例来计算已经过去了多少天以及到年底还有多少天：'
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The activity_day_of_year.xml file
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: activity_day_of_year.xml文件
- en: 'An interesting thing about the `BoxInsetLayout` component is that it''s a screen-aware
    component that boxes its children in the center square. It''s a safe component
    that tries to fit nicely on square or circular screens:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 关于`BoxInsetLayout`组件的一个有趣之处在于，它是一个屏幕感知组件，将其子组件框在中心方形中。它是一个安全的组件，试图在方形或圆形屏幕上很好地适应：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You can see the following action in the emulator:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在模拟器中看到以下操作：
- en: '![The activity_day_of_year.xml file](img/image00163.jpeg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![The activity_day_of_year.xml file](img/image00163.jpeg)'
- en: Note
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As we build layout components it's a good idea to preview them in both circular
    and square profiles to see how good they look.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们构建布局组件时，预览它们在圆形和方形轮廓中看起来如何是个好主意。
- en: 'Take a look at the following screenshot to see how the day of year activity
    layout is displayed on a circular screen. Since we used the `BoxInsetLayout` layout
    component, it is rendered pretty decently on both square and circular screens:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 看看以下截图，了解年度活动布局如何在圆形屏幕上显示。由于我们使用了`BoxInsetLayout`布局组件，它在方形和圆形屏幕上渲染得相当不错：
- en: '![The activity_day_of_year.xml file](img/image00164.jpeg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![The activity_day_of_year.xml file](img/image00164.jpeg)'
- en: 'Here is the `DayOfYearActivity` activity in action. You can swipe right to
    go back to the previous activity, which is the main activity in this case:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是`DayOfYearActivity`活动的实际操作。你可以向右滑动返回上一个活动，在这个例子中是主活动：
- en: '![The activity_day_of_year.xml file](img/image00165.jpeg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![The activity_day_of_year.xml file](img/image00165.jpeg)'
- en: Summary
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We discussed how we could utilize list views and layouts that are specific to
    wearable devices. We developed a list of actions in our `Today` app and implemented
    actions for list items. We created an action handler that launches an activity
    from the main activity to display components in the `BoxInsetLayout` layout.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了如何利用针对可穿戴设备的列表视图和布局。我们在`Today`应用中开发了一系列操作，并实现了列表项的操作。我们创建了一个动作处理器，从主活动启动活动以在`BoxInsetLayout`布局中显示组件。
- en: This is just a tiny use case that shows how we can utilize Android Wear UI components
    and customize them for our needs. We couldn't discuss all the files that were
    used in the sample app. Spend some time studying the sample code from this chapter.
    This will help you connect the dots and understand how the individual pieces come
    together.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个微小的用例，展示了我们如何利用Android Wear UI组件并根据我们的需求进行定制。我们无法讨论在示例应用中使用的所有文件。花些时间研究本章的示例代码。这将帮助你连接点，理解各个部分是如何组合在一起的。
- en: We are now ready to step into more advanced topics in Wear development. This
    would be a good time to review the basics of how UI and layout components work
    together in general on the Android platform.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以进入Wear开发的高级主题。这是回顾Android平台上UI和布局组件如何一般性协同工作的好时机。
