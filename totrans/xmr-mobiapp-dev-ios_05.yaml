- en: Chapter 5. UI Controls
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 5 章。UI 控件
- en: 'To paraphrase Edmund Blackadder: "A UI without a control is like a pencil without
    a nib—pointless."'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 用以引用埃德蒙·布莱克阿德的话：“没有控件的 UI 就像没有笔尖的铅笔——毫无意义。”
- en: The range of controls, while not that large, is very flexible in what you can
    do with them. All controls can be created within Xcode or dynamically within the
    code.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 控件的种类虽然不是很大，但在你可以用它们做什么方面非常灵活。所有控件都可以在 Xcode 中创建，或者在代码中动态创建。
- en: 'In this chapter we will be covering the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Controls and widgets
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控件和部件
- en: Control selection
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控件选择
- en: Control customization
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控件定制
- en: Control reference (Android and iOS cross reference)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控件参考（Android 和 iOS 交叉参考）
- en: Controls and widgets
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控件和部件
- en: When we refer to a widget, I use it interchangeably with a UI Control. In old
    terms, a widget stands for a **WI**n**D**ow gad**GET**. The screen on an iOS device
    is classed as a window, so it's fair enough to call anything on screen a widget.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们提到小部件时，我将其与 UI 控件互换使用。在旧术语中，小部件代表 **WI**n**D**ow gad**GET**。iOS 设备上的屏幕被归类为窗口，因此将屏幕上的任何内容称为小部件是合理的。
- en: UI Controls
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: UI 控件
- en: The UI Controls are directly available from Xcode. For creating within code,
    the control name is preceded with UI and all/any spaces removed (except **Round
    Rect Button** which is just `UIButton`). The **Fixed Space Bar Button Item** and
    **Flexible Space Bar Button Item** are accessed from `UIBarButtonItem`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: UI 控件直接从 Xcode 中可用。对于在代码中创建，控件名称前缀为 UI，并删除所有/任何空格（除了 **圆角矩形按钮**，它只是 `UIButton`）。**固定空间栏按钮项**和**弹性空间栏按钮项**通过
    `UIBarButtonItem` 访问。
- en: '![UI Controls](img/00033.jpeg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![UI 控件](img/00033.jpeg)'
- en: Control selection
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控件选择
- en: Most of the controls shown in the previous screenshot are obvious for what they
    do, and are easy enough to just add and connect to the UI. However, there are
    some controls that need to be considered differently from the others, most notably
    `UIButton` and `UIStepper`. The `UIButton` class is very flexible in what it can
    do, while `UIStepper` really needs to be used as an **action** rather than an
    **outlet**. This means they have to be handled in a different way.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一张截图中所显示的大多数控件对于它们的功能来说都很明显，而且足够简单，只需添加并连接到 UI 即可。然而，有一些控件需要与其他控件区别对待，最值得注意的是
    `UIButton` 和 `UIStepper`。`UIButton` 类在它能做什么方面非常灵活，而 `UIStepper` 则真正需要作为一个 **动作**
    而不是 **出口** 来使用。这意味着它们必须以不同的方式处理。
- en: UIButton
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: UIButton
- en: A `UIImageView` has no events attached to it. So, if you need an image that
    can be clicked on, they can be planted onto a `UIButton` class.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`UIImageView` 没有附加事件。因此，如果你需要一个可以点击的图像，它们可以被放置在 `UIButton` 类上。'
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'It is completely possible to add text as well as an image to the button by
    adding a `UILabel` to the button, but it is a two step process. The important
    thing to remember is that, when placing anything on another view, the size of
    the parent has to be taken into consideration, as shown in the following code:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 完全可以在按钮上添加文本以及图像，只需将 `UILabel` 添加到按钮上，但这是一个两步的过程。重要的是要记住，当将任何内容放置在另一个视图上时，必须考虑父视图的大小，如下面的代码所示：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can add as many images and labels to a button. The button can also have
    a background image added to it, as shown in the following code:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以向按钮添加任意多的图像和标签。按钮也可以添加背景图像，如下面的代码所示：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Alternatively, the background can have a gradient fill added, as shown in the
    following code:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，背景可以添加渐变填充，如下面的代码所示：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Say, the `UILabel` class we added before was too small for the text coming in
    (it's no longer `Hello world`, but `I love drinking hot coffee`), the font size
    within the label will need to be changed. The resizing is performed by creating
    a bounding box (`textSize`), and fitting the text inside of it by setting the
    font size so that the text fits the height—not the width — of the bounding box.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 假设，我们之前添加的 `UILabel` 类对于即将到来的文本来说太小了（它不再是“Hello world”，而是“我爱喝热咖啡”），那么标签内的字体大小需要改变。调整大小是通过创建一个边界框（`textSize`），并通过设置字体大小使其适应边界框的高度——而不是宽度——来实现的。
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The button doesn''t have to have a rounded shape—a custom shape can be also
    applied. Let''s look at the following code for a circular button:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮不必是圆形的——也可以应用自定义形状。让我们看看以下代码中的圆形按钮：
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: For this to work, the `Monotouch.CoreGraphics` namespace has to be included.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使这可行，必须包含 `Monotouch.CoreGraphics` 命名空间。
- en: There are other types of buttons also available (`ContactAdd`, `Custom`, `DetailDisclosure`,
    `InfoDark`, `InfoLight`, `RoundedRect`, and `System`). While `RoundedRect` is
    the most common form used, the others can be created either in Xcode or as code
    in your app.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他类型的按钮可供选择（`ContactAdd`、`Custom`、`DetailDisclosure`、`InfoDark`、`InfoLight`、`RoundedRect`
    和 `System`）。虽然 `RoundedRect` 是最常用的形式，但其他类型可以在 Xcode 中创建，也可以在您的应用程序代码中创建。
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The preceeding code creates a button of type `Custom`. The other types of buttons
    look as shown in the following screenshot:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码创建了一个类型为 `Custom` 的按钮。其他类型的按钮外观如下所示：
- en: '![UIButton](img/00034.jpeg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![UIButton](img/00034.jpeg)'
- en: From left to right (System, Custom, DetailDisclosure, InfoLight, InfoDark, ContactAdd)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 从左到右（系统、自定义、详细披露、信息浅色、信息深色、联系添加）
- en: UIStepper
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: UIStepper
- en: 'The `UISteppers` class needs to be defined in the connector as both an outlet
    and action (with the **Event** selected to be **Value Changed**). A typical action
    is shown in the following screenshot:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`UISteppers` 类需要在连接器中定义为输出和动作（选择 **Event** 为 **Value Changed**）。以下截图显示了典型的动作：'
- en: '![UIStepper](img/00035.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![UIStepper](img/00035.jpeg)'
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: When the Stepper control is clicked on, the `partial void` method is called,
    which updates the counter as shown in the preceding code. If you just have one
    without the other, the app will die when it comes to a View Controller with a
    `UIStepper` class on.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击 Stepper 控件时，会调用 `partial void` 方法，该方法更新计数器，如前述代码所示。如果您只有一个而没有另一个，当应用程序到达具有
    `UIStepper` 类的视图控制器时，应用程序将崩溃。
- en: The other controls
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他控件
- en: 'The following table will give you an indicative list of what each control does,
    and any caveats for the use of the control:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格将为您提供每个控件的功能和任何使用控件时的注意事项的指示性列表：
- en: '| Control | Used for | Caveats |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 控件 | 用于 | 注意事项 |'
- en: '| --- | --- | --- |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `Label` | Simple labels | Does not respond to touch events |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `Label` | 简单标签 | 不响应用户触摸事件 |'
- en: '| `SegmentedControl` | A multiple button on a single view. Frequently used
    on `MapViews` for the different types of map available |   |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `SegmentedControl` | 单个视图中多个按钮。常用于 `MapViews` 中的不同类型地图 |   |'
- en: '| `TextField` | Text entry | Set `SecureTextEntry = true` for passwords |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| `TextField` | 文本输入 | 为密码设置 `SecureTextEntry = true` |'
- en: '| `Slider` | Selecting a volume or color | Uses float values |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| `Slider` | 选择音量或颜色 | 使用浮点值 |'
- en: '| `PageControl` | A simple method of showing how many **pages** are on a `scrollview`
    area |   |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| `PageControl` | 显示 `scrollview` 区域中有多少 **页面** 的简单方法 |   |'
- en: '| `DatePicker` | A date picker | Can also be used for Time as well |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| `DatePicker` | 日期选择器 | 也可以用于时间 |'
- en: '| `NavigationBar` | A navigation bar for the top of the screen | Requires a
    navigation item |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| `NavigationBar` | 屏幕顶部的导航栏 | 需要一个导航项 |'
- en: '| `NavigationItem` | A navigation item for the navigation bar | Needs a Navigation
    Controller to be added for the item type to be defined within Xcode |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| `NavigationItem` | 导航栏的导航项 | 需要添加导航控制器以在 Xcode 中定义项类型 |'
- en: '| `SearchBar` | A search bar | Needs both an action and outlet defined |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| `SearchBar` | 搜索栏 | 需要定义动作和输出 |'
- en: '| `ToolBar` | A bar used for adding buttons to, as tools | Use this for the
    event and in the handler use `Item` for the `BarButtonItem`. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `ToolBar` | 用于添加按钮的栏，作为工具 | 用于事件，在处理程序中使用 `Item` 为 `BarButtonItem`。 |'
- en: '| `BarButtonItem` | A button for use on a toolbar. Comes with an image and
    label already on the button | Don''t catch the event from this; use the toolbar
    |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `BarButtonItem` | 用于工具栏的按钮。按钮上已包含图像和标签 | 不要从该事件中捕获；使用工具栏 |'
- en: '| `Fixed`/`FlexibleBarButtonItem` | Provides space between buttons on the toolbar
    |   |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `Fixed`/`FlexibleBarButtonItem` | 在工具栏按钮之间提供空间 |   |'
- en: '| `TabBar` | Used for tabviews | Use a `Toolbar` controller to define which
    nib file, pressing a tab, will call |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| `TabBar` | 用于 tab视图 | 使用 `Toolbar` 控制器来定义哪个 nib 文件，按下标签时将调用 |'
- en: '| `TabBarItem` | A button for use on a `TabBar`, similar to a `BarButtonIt`
    `em` |   |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `TabBarItem` | 用于 `TabBar` 的按钮，类似于 `BarButtonIt` `em` |   |'
- en: Comparing Android to iOS UI controls
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较Android和iOS UI控件
- en: 'The following table is a comparison list and is intended for those wishing
    to port to or from Android:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格是一个比较列表，旨在为希望移植到或从 Android 移植的人提供帮助：
- en: '| Android | iOS | Android responds to events | iOS responds to events |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| Android | iOS | Android 响应事件 | iOS 响应事件 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| `Button` | `UIButton` | Yes | Yes |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `Button` | `UIButton` | 是 | 是 |'
- en: '| `Text` | `UILabel` | Yes | No |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `Text` | `UILabel` | 是 | 否 |'
- en: '| `ListView` | `TableView` | Yes | Yes |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| `ListView` | `TableView` | 是 | 是 |'
- en: '|   | `TableViewCell` |   | Yes |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '|   | `TableViewCell` |   | 是 |'
- en: '| `CheckBox` | `Switch` | Yes | Yes |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `CheckBox` | `Switch` | 是 | 是 |'
- en: '| `CheckedTextView` | `Switch` with `UILabel` | Yes | Yes |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| `CheckedTextView` | 带有 `UILabel` 的 `Switch` | 是 | 是 |'
- en: '| `ProgressBar` | `ActivityIndicatorView` | Yes | No |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| `ProgressBar` | `ActivityIndicatorView` | 是 | 否 |'
- en: '| `RadioButton` | `MTD.RadioElement` | Yes | Yes |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `RadioButton` | `MTD.RadioElement` | 是 | 是 |'
- en: '| `RadioGroup` | `MTD.RadioGroup` | Yes | No |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `RadioGroup` | `MTD.RadioGroup` | 是 | 否 |'
- en: '| `SeekBar` | `Slider` | Yes | Yes |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `SeekBar` | `Slider` | 是 | 是 |'
- en: '| `TextView` (multiple types) | `TextField` | Yes | Yes |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `TextView` (多种类型) | `TextField` | 是 | 是 |'
- en: '| `FrameLayout`, `LinearLayout`, `RelativeLayout`, `TableLayout` |   | Yes
    |   |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `FrameLayout`, `LinearLayout`, `RelativeLayout`, `TableLayout` |  | 是 |  |'
- en: '| `GridView` | `ComponentView` | Yes | Yes |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| `GridView` | `ComponentView` | 是 | 是 |'
- en: '| `ScrollView` | `Scrollview` | Yes | Yes |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| `ScrollView` | `Scrollview` | 是 | 是 |'
- en: '| `SlidingDrawer` | `ActionBar` | Yes |   |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| `SlidingDrawer` | `ActionBar` | 是 |  |'
- en: '| `TabHost` | `TabBar` | No | Yes |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| `TabHost` | `TabBar` | 否 | 是 |'
- en: '| `TabWidget` | `TabBarItem` | Yes | No |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| `TabWidget` | `TabBarItem` | 是 | 否 |'
- en: '| `WebView` | `Webview` | Yes | Yes |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| `WebView` | `Webview` | 是 | 是 |'
- en: '| `Gallery` | `ImageGallery` | Yes | Yes |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| `Gallery` | `ImageGallery` | 是 | 是 |'
- en: '| `ImageButton` | `Button` | Yes | Yes |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| `ImageButton` | `Button` | 是 | 是 |'
- en: '| `ImageView` | `ImageView` | Yes | No |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| `ImageView` | `ImageView` | 是 | 否 |'
- en: '| `MediaController` | `AudioViewController` | Yes | Yes |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| `MediaController` | `AudioViewController` | 是 | 是 |'
- en: '| `VideoView` | `VideoViewController` | Yes | Yes |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| `VideoView` | `VideoViewController` | 是 | 是 |'
- en: '| `DatePicker` | `DatePicker` | Yes | Yes |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| `DatePicker` | `DatePicker` | 是 | 是 |'
- en: '| `TimePicker` | `DatePicker` | Yes | Yes |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| `TimePicker` | `DatePicker` | 是 | 是 |'
- en: '| `DialerFilter` | `UIKeyboard` | Yes | Yes |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| `DialerFilter` | `UIKeyboard` | 是 | 是 |'
- en: '| `GestureOverlayView` | `Gestures` (approx) | Yes | Yes |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| `GestureOverlayView` | `Gestures` (约) | 是 | 是 |'
- en: '| `SurfaceView` | `View` | Yes | Yes |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| `SurfaceView` | `View` | 是 | 是 |'
- en: '| `TwoLineListItem` | `MTD`.`MultipleLineElement` | Yes | Yes |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| `TwoLineListItem` | `MTD`.`MultipleLineElement` | 是 | 是 |'
- en: '| `View` | `View` | Yes | Yes |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| `View` | `View` | 是 | 是 |'
- en: '| `Zoom` Button | `Stepper` | Yes | Yes |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `Zoom` 按钮 | `Stepper` | 是 | 是 |'
- en: '| `Zoom` Controls | `SegmentedControl` | Yes | Yes |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `Zoom` 控件 | `SegmentedControl` | 是 | 是 |'
- en: Although there are other views/controls on Android that are not on iOS and vice
    versa, these are the most common ones.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Android上有其他在iOS上没有，反之亦然，但这些是最常见的。
- en: Summary
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: With the wealth of UI Controls to play around with and the degree of customization
    that can be achieved on just about everything, it is little wonder that people
    enjoy using their iOS devices; they can be made to look good!
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在iOS设备上，有丰富的UI控件可以玩转，并且几乎可以定制任何东西，难怪人们喜欢使用它们；它们可以看起来很棒！
