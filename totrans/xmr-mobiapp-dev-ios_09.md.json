["```swift\nDoWork(object sender, DoWorkEventArgs e);\nRunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e);\nProgressChanged(object sender, ProgressChangedEventArgs e);\n```", "```swift\nprivate UIImage downloadedImage;\nprivate BackgroundWorker bgWorker;\nprivate Timer t;\nprivate int counter = 0;\n\npublic override void ViewDidLoad()\n{\n    base.ViewDidLoad();\n    bgWorker = new BackgroundWorker();\n    bgWorker.DoWork += HandleDoWork;\n    bgWorker.RunWorkerCompleted += HandleRunWorkerCompleted;\n    btnStart.TouchUpInside += delegate\n    {\n        t = new Timer(1000); // 1 second\n        t.Elapsed += delegate\n        {\n            counter++;\n            InvokeOnMainThread(delegate()\n            {\n                lblCountValue.Text = counter.ToString();\n            });\n        };\n        t.Start();\n        bgWorker.RunWorkerAsync();\n    };\n}\n\nprivate void HandleRunWorkerCompleted(object sender,RunWorkerCompletedEventArgs e)\n{\n    uiImageView.Image =UIImage.FromImage(downloadedImage.CGImage).Scale(newSizeF(240f, 240f));\n    t.Stop();\n}\n\nprivate void HandleDoWork(object sender, DoWorkEventArgs e)\n{\n    NSUrl url = new NSUrl(\"http://edmullen.net/test/rc.jpg\");\n    NSData data = NSData.FromUrl(url);\n    downloadedImage = new UIImage(data);\n}\n```", "```swift\nprivate UIImage downloadedImage;\nprivate System.Timers.Timer t;\nprivate int counter = 0;\n\npublic override void ViewDidLoad()\n{\n    base.ViewDidLoad();\n    btnStart.TouchUpInside += delegate\n    {\n        t = new Timer(100);\n        t.Elapsed += delegate\n        {\n            counter++;\n            InvokeOnMainThread(delegate()\n            {\n                lblCountValue.Text = counter.ToString();\n            });\n        };\n        t.Start();\n        ThreadPool.QueueUserWorkItem(delegate\n        {\n            ProcessFile();\n        }); \n    };\n}\n\nprivate void ProcessFile()\n{\n    NSUrl url = new NSUrl(\"http://edmullen.net/test/rc.jpg\");\n    NSData data = NSData.FromUrl(url);\n    downloadedImage = new UIImage(data);\n    InvokeOnMainThread(delegate()\n    {\n        uiImageView.Image =UIImage.FromImage(downloadedImage.CGImage).Scale(newSizeF(240f, 240f));\n    });\n    t.Stop();\n}\n```", "```swift\nvar scheduler = TaskScheduler.FromCurrentSynchronizationContext();\nTask.Factory.StartNew(() => GetMessage(currentPosition)).ContinueWith(ShowResults, scheduler);\n```", "```swift\nvar webView = new UIWebView();\nwebView.LoadStarted += HandleLoadStarted;\n…\nprivate void HandleLoadStarted (object sender, EventArgs e)\n{}\n```", "```swift\nvar webView = new UIWebView();\nwebView.LoadStarted += async(object sender, EventArgs e) =>{HandleLoadStarted(sender, e);};\n```", "```swift\nprivate async void HandleLoadStarted(object sender, EventArgs e)\n```", "```swift\nlogin.name = \"nodoid201213\";\nlogin.password = \"312102diodon\";\nlogin.DataReturned += HandleDataReturned;\ncallLoginService(login);\nprivate void HandleDataReturned { … }\n```", "```swift\nprivate async Task<bool> LogUserIn()\n{\n    login.name = \"nodoid201213\";\n    login.password = \"312102diodon\";\n    bool loginResult = await callLoginService(login);\n    return loginResult;\n}\n```"]