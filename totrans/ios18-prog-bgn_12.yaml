- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Setting Up the User Interface
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置用户界面
- en: In *Part 1* of this book, you studied the Swift language and how it works. Now
    that you have a good working knowledge of the language, you can learn how to develop
    an iOS application. In this part, you will build the **user interface** (**UI**)
    of a journal app, *JRNL*. You will use Xcode’s **Interface Builder** for this,
    and coding will be kept to a minimum.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的*第一部分*中，你学习了Swift语言及其工作原理。现在你对这门语言有了很好的了解，你可以学习如何开发iOS应用程序。在这一部分，你将构建一个名为*JRNL*的日记应用程序的用户界面（UI）。你将使用Xcode的**界面构建器**来完成这项工作，并且代码将保持最小化。
- en: You’ll start this chapter by learning useful terms used in iOS app development,
    which are used extensively throughout this book. Next, you will take a tour of
    the screens used in the *JRNL* app and learn how a user would use the app. Finally,
    you will begin recreating the app’s UI with Interface Builder, starting with the
    tab bar, which allows the user to select between the Journal List and Map screens.
    You’ll add navigation bars to the top of both screens and configure the tab bar
    buttons.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你将从这个章节开始学习iOS开发中广泛使用的一些有用术语。接下来，你将游览*JRNL*应用程序中使用的屏幕，并了解用户如何使用该应用程序。最后，你将开始使用界面构建器重新创建应用程序的UI，从允许用户在日记列表和地图屏幕之间选择的标签栏开始。你将在两个屏幕的顶部添加导航栏并配置标签栏按钮。
- en: By the end of this chapter, you’ll have learned common terms used in iOS app
    development, what the flow of your app will look like, and how to use Interface
    Builder to add and configure UI elements.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将学会iOS应用开发中常用的术语，了解你的应用程序的流程，以及如何使用界面构建器添加和配置UI元素。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Learning useful terms in iOS development
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习iOS开发中的有用术语
- en: A tour of the *JRNL* app
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 游览*JRNL*应用程序
- en: Modifying your Xcode project
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改你的Xcode项目
- en: Setting up a tab bar controller scene
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置标签栏控制器场景
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will modify the `JRNL` Xcode project that you created in *Chapter 1*, *Exploring
    Xcode*.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你将修改在*第一章*，“探索Xcode”中创建的`JRNL` Xcode项目。
- en: 'The resource files and completed Xcode project for this chapter are in the
    `Chapter10` folder of the code bundle for this book, which can be downloaded here:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的资源文件和完成的Xcode项目位于本书代码包的`Chapter10`文件夹中，可以在此处下载：
- en: '[https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition](https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition%0D)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition](https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition%0D)'
- en: 'Check out the following video to see the code in action:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 观看以下视频，看看代码的实际应用：
- en: '[https://youtu.be/lgyerQeTgN4](https://youtu.be/lgyerQeTgN4%0D)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://youtu.be/lgyerQeTgN4](https://youtu.be/lgyerQeTgN4%0D)'
- en: Before you get started with the project, you’ll learn some common terms used
    in iOS development.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在你开始项目之前，你将学习一些iOS开发中常用的术语。
- en: Learning useful terms in iOS development
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习iOS开发中的有用术语
- en: 'As you begin your journey into iOS app development, you will encounter special
    terms and definitions. Here are some of the most used terms and definitions. Just
    read through them for now. Even though you may not understand everything yet,
    things will become clearer as you go along:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开始你的iOS应用开发之旅时，你将遇到特殊的术语和定义。以下是一些最常用的术语和定义。现在只需阅读它们即可。即使你现在可能并不完全理解，但随着你的深入，一切都会变得清晰：
- en: '**View**: A view is an instance of the `UIView` class or one of its subclasses.
    Anything you see on your screen (buttons, text fields, labels, and so on) is a
    view. You will use views to build your UI.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视图**：视图是`UIView`类或其子类的实例。你屏幕上看到的所有内容（按钮、文本字段、标签等）都是视图。你将使用视图来构建你的UI。'
- en: Classes are covered in *Chapter 7,* *Classes, Structures, and Enumerations*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 类在*第七章*，“类、结构和枚举”中有所介绍。
- en: '**Stack view**: A stack view is an instance of the `UIStackView` class, which
    is a subclass of `UIView`. It is used to group views together in a horizontal
    or vertical stack. This makes them easier to position on the screen using **Auto
    Layout**, which is discussed later in this section.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**堆叠视图**：堆叠视图是`UIStackView`类的实例，它是`UIView`的子类。它用于将视图组合成水平或垂直堆叠，这使得它们更容易使用**自动布局**（稍后在本节中讨论）在屏幕上定位。自动布局是一种布局方式，它允许开发者通过指定视图之间的相对位置和大小来创建用户界面。'
- en: '**View controller**: A view controller is an instance of the `UIViewController`
    class. Every view controller has a `view` property, which contains a reference
    to a view. It determines what a view displays to a user and what happens when
    the user interacts with a view.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视图控制器**：视图控制器是`UIViewController`类的一个实例。每个视图控制器都有一个`view`属性，它包含对一个视图的引用。它决定了视图向用户显示的内容以及用户与视图交互时会发生什么。'
- en: View controllers will be discussed in detail in *Chapter 14,* *Getting Started
    with MVC and Table Views*.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 视图控制器将在第14章“开始使用MVC和表格视图”中详细讨论。
- en: '**Table view controller**: A table view controller is an instance of the `UITableViewController`
    class, which is a subclass of the `UIViewController` class. Its `view` property
    has a reference to a `UITableView` instance (table view), which displays a single
    column of `UITableViewCell` instances (table view cells).'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表格视图控制器**：表格视图控制器是`UITableViewController`类的一个实例，它是`UIViewController`类的一个子类。它的`view`属性包含对一个`UITableView`实例（表格视图）的引用，该实例显示一列`UITableViewCell`实例（表格视图单元格）。'
- en: 'The **Settings** app displays your device settings in a table view:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**设置**应用以表格视图的形式显示你的设备设置：'
- en: '![](img/B31371_10_01.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_10_01.png)'
- en: 'Figure 10.1: Settings app'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1：设置应用
- en: As you can see, all the different settings (**General**, **Accessibility**,
    **Privacy**, and so on) are displayed in table view cells inside the table view.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，所有不同的设置（**通用**、**辅助功能**、**隐私**等）都在表格视图的单元格内显示。
- en: '**Collection view controller**: A collection view controller is an instance
    of the `UICollectionViewController` class, which is a subclass of the `UIViewController`
    class. Its `view` property has a reference to a `UICollectionView` instance (collection
    view), which displays a grid of `UICollectionViewCell` instances (collection view
    cells).'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集合视图控制器**：集合视图控制器是`UICollectionViewController`类的一个实例，它是`UIViewController`类的一个子类。它的`view`属性包含对一个`UICollectionView`实例（集合视图）的引用，该实例显示一个`UICollectionViewCell`实例（集合视图单元格）的网格。'
- en: 'The **Photos** app displays photos in a collection view:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**照片**应用在集合视图中显示照片：'
- en: '![](img/B31371_10_02.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_10_02.png)'
- en: 'Figure 10.2: Photos app'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.2：照片应用
- en: As you can see, thumbnail pictures are displayed in collection view cells inside
    the collection view.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，缩略图图片在集合视图中显示在集合视图的单元格内。
- en: '**Navigation controller**: A navigation controller is an instance of the `UINavigationController`
    class, which is a subclass of the `UIViewController` class. It has a `viewControllers`
    property that holds an array of view controllers. The view of the last view controller
    in the array appears onscreen, along with a navigation bar at the top of the screen.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导航控制器**：导航控制器是`UINavigationController`类的一个实例，它是`UIViewController`类的一个子类。它有一个`viewControllers`属性，该属性包含一个视图控制器数组。数组中最后一个视图控制器的视图会显示在屏幕上，同时屏幕顶部还有一个导航栏。'
- en: 'The table view controller in the **Settings** app is embedded in a navigation
    controller, and you can see the navigation bar above the table view:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在**设置**应用中，表格视图控制器嵌入在导航控制器中，你可以看到表格视图上方的导航栏：
- en: '![](img/B31371_10_03.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_10_03.png)'
- en: 'Figure 10.3: Navigation bar in the Settings app'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3：设置应用中的导航栏
- en: When you tap on a setting, the view controller for that setting is added to
    the array of view controllers assigned to the `viewControllers` property. The
    user sees the view for that view controller slide in from the right. Note the
    navigation bar at the top of the screen, which can hold a title and buttons. A
    **< Settings** button appears on the top-left side of the navigation bar. Tapping
    this button returns you to the previous screen, and it removes the view controller
    for that setting from the array of view controllers assigned to the `viewControllers`
    property.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击一个设置时，该设置的视图控制器会被添加到分配给`viewControllers`属性的视图控制器数组中。用户会看到该视图控制器从右侧滑入。注意屏幕顶部的导航栏，它可以包含标题和按钮。一个**<
    设置**按钮出现在导航栏的左上角。点击此按钮会返回上一个屏幕，并从`viewControllers`属性分配的视图控制器数组中移除该设置的视图控制器。
- en: '**Tab bar controller**: A tab bar controller is an instance of the `UITabBarController`
    class, which is a subclass of the `UIViewController` class. It has a `viewControllers`
    property that holds an array of view controllers. The view of the first view controller
    in the array appears onscreen, along with a tab bar with buttons at the bottom.
    The button on the extreme left corresponds to the first view controller in the
    array and will already be selected. When you tap another button, the corresponding
    view controller is loaded, and its view appears on the screen.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标签栏控制器**：标签栏控制器是`UITabBarController`类的一个实例，它是`UIViewController`类的一个子类。它有一个`viewControllers`属性，包含一个视图控制器数组。数组中第一个视图控制器的视图显示在屏幕上，同时还有一个带有按钮的标签栏在底部。最左边的按钮对应于数组中的第一个视图控制器，并且已经选中。当你点击另一个按钮时，相应的视图控制器将被加载，其视图将显示在屏幕上。'
- en: 'The **Fitness** app uses a tab bar controller to navigate to different screens:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**Fitness**应用使用标签栏控制器来导航到不同的屏幕：'
- en: '![](img/B31371_10_04.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_04.png)'
- en: 'Figure 10.4: Tab bar in the Fitness app'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.4：健身应用中的标签栏
- en: As you can see, the different screens for this app (**All Photos**, **For You**,
    **Albums**, and **Search**) are accessed by tapping the corresponding tab bar
    button.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，这个应用的不同屏幕（**所有照片**、**为你推荐**、**相册**和**搜索**）可以通过点击相应的标签栏按钮来访问。
- en: '**Model-View-Controller (MVC)**: This is a very common design pattern used
    in iOS app development. The user interacts with views onscreen. App data is stored
    in data model objects. Controllers manage the flow of information between views
    and data model objects.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型-视图-控制器（MVC）**：这是在iOS应用开发中非常常见的一个设计模式。用户与屏幕上的视图进行交互。应用数据存储在数据模型对象中。控制器管理视图和数据模型对象之间的信息流。'
- en: MVC will be discussed in detail in *Chapter 14,* *Getting Started with MVC and
    Table Views*.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MVC将在*第14章*，*开始使用MVC和表格视图*中详细讨论。
- en: '**Storyboard file**: A storyboard file contains a visual representation of
    what a user sees. Each screen of an app is represented by a storyboard **scene**.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**故事板文件**：故事板文件包含用户看到的视觉表示。应用中的每一屏幕都由一个故事板**场景**表示。'
- en: Open the *JRNL* project that you created in *Chapter 1*, *Exploring Xcode*,
    and click the **Main** storyboard file.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 打开你在*第1章*，*探索Xcode*中创建的*JRNL*项目，并点击**主**故事板文件。
- en: '![](img/B31371_10_05.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_05.png)'
- en: 'Figure 10.5: JRNL Xcode project showing the Main storyboard file'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.5：显示主故事板文件的JRNL Xcode项目
- en: You’ll see one scene in it, and when you run your app in **Simulator**, the
    contents of this scene will be displayed on the screen. You can have more than
    one scene in a storyboard file.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到一个场景，当你运行你的应用在**模拟器**中时，这个场景的内容将显示在屏幕上。你可以在故事板文件中有一个以上的场景。
- en: '**Segue**: If you have more than one scene in an app, you use segues to move
    from one scene to another. The *JRNL* project does not have any segues, since
    there is just one scene in its storyboard file, but you will see them in a later
    part of this chapter.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转场**：如果你在一个应用中有多个场景，你使用转场来从一个场景移动到另一个场景。*JRNL*项目没有转场，因为它的故事板文件中只有一个场景，但你将在本章的后面部分看到它们。'
- en: '**Auto Layout**: As a developer, you must make sure that your app looks good
    on devices with different screen sizes. **Auto Layout** helps you lay out your
    UI based on the **constraints** you specify. For instance, you can set a constraint
    to make sure that a button is centered on the screen, regardless of screen size,
    or make a text field expand to the width of the screen when a device is rotated
    from portrait to landscape.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动布局**：作为一名开发者，你必须确保你的应用在不同屏幕尺寸的设备上看起来都很好。**自动布局**帮助你根据你指定的**约束**来布局你的UI。例如，你可以设置一个约束来确保按钮在屏幕上居中，无论屏幕大小如何，或者当设备从纵向旋转到横向时，使文本字段扩展到屏幕的宽度。'
- en: Now that you are familiar with the terms used in iOS app development, let’s
    take a tour of the app you will build.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经熟悉了在iOS应用开发中使用的术语，让我们来游览一下你将要构建的应用。
- en: A tour of the JRNL app
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JRNL应用的游览
- en: Let’s take a quick tour of the app that you will build. The *JRNL* app is a
    journal app that lets users write their own personal journal, with the option
    of storing a photo or a map location for each journal entry. Users can also view
    a map that shows the locations of entries that are close to a user’s current location.
    You’ll see all the screens used in the app and its overall flow in the next sections.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速浏览一下你将要构建的应用程序。*JRNL*应用程序是一个日记应用程序，允许用户编写自己的个人日记，并为每个日记条目提供存储照片或地图位置的选择。用户还可以查看显示靠近用户当前位置的条目位置的地图。你将在下一节中看到应用程序中使用的所有屏幕及其整体流程。
- en: Using the Journal List screen
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用“期刊列表”屏幕
- en: 'When the app is launched, you will see the Journal List screen:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用程序启动时，你会看到“期刊列表”屏幕：
- en: '![](img/B31371_10_06.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_06.png)'
- en: 'Figure 10.6: Journal List screen'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.6：期刊列表屏幕
- en: Let’s study the different parts of this screen.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们研究一下这个屏幕的不同部分。
- en: A `UITabBar` instance (tab bar) at the bottom of the screen displays the **Journal**
    and **Map** buttons. The **Journal** button is selected, and you can see a table
    view displaying a list of journal entries in table view cells. A `UISearchController`
    instance displays a search bar at the top of the screen. This allows you to search
    for a particular journal entry.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕底部的`UITabBar`实例（标签栏）显示了**期刊**和**地图**按钮。**期刊**按钮被选中，你可以看到一个表格视图，在表格视图中显示期刊条目的列表。一个`UISearchController`实例在屏幕顶部显示一个搜索栏。这允许你搜索特定的期刊条目。
- en: To add a new journal entry, you tap the **+** button at the top of the screen.
    This displays the Add New Journal Entry screen.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加新的期刊条目，你点击屏幕顶部的**+**按钮。这会显示“添加新期刊条目”屏幕。
- en: Using the Add New Journal Entry screen
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用“添加新期刊条目”屏幕
- en: 'When you tap the **+** button at the top of the Journal List screen, you will
    see the Add New Journal Entry screen:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在“期刊列表”屏幕顶部点击**+**按钮时，你会看到“添加新期刊条目”屏幕：
- en: '![](img/B31371_10_07.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_07.png)'
- en: 'Figure 10.7: Add New Journal Entry screen'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.7：添加新期刊条目屏幕
- en: Let’s study the different parts of this screen.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们研究一下这个屏幕的不同部分。
- en: A navigation bar at the top of the screen contains the **Cancel** and **Save**
    buttons. A stack view displays a custom rating control, a switch, an entry title
    text field, a body text view, and a placeholder photo. Tapping the rating control
    allows you to assign 0 to 5 stars for this entry. Switching the switch on will
    obtain your current location.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕顶部的导航栏包含**取消**和**保存**按钮。一个堆叠视图显示自定义评分控件、开关、条目标题文本字段、正文文本视图和占位符照片。点击评分控件可以为此条目分配0到5星。打开开关将获取你的当前位置。
- en: You can enter the journal entry’s title in the entry title text field, and the
    details in the body text view. You can also tap the placeholder photo to take
    a picture with your device camera. Once you tap **Save**, you are returned to
    the Journal List screen, and then the new entry will be visible in the table view.
    You can also tap **Cancel** to return to the Journal List screen without creating
    a new journal entry.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在条目标题文本字段中输入期刊条目的标题，并在正文文本视图中输入详细信息。你还可以点击占位符照片，使用设备相机拍照。一旦你点击**保存**，你将返回到“期刊列表”屏幕，然后新的条目将在表格视图中可见。你也可以点击**取消**，不创建新的期刊条目就返回到“期刊列表”屏幕。
- en: To see the details of a particular journal entry, tap the entry you want in
    the list, and then you will see the Journal Entry Detail screen.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看特定期刊条目的详细信息，点击列表中的条目，然后你会看到“期刊条目详情”屏幕。
- en: Using the Journal Entry Detail screen
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用“期刊条目详情”屏幕
- en: 'Tapping any one of the journal entries on the Journal List screen will display
    the corresponding Journal Entry Detail screen:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“期刊列表”屏幕上的任何一条期刊条目将显示相应的“期刊条目详情”屏幕：
- en: '![](img/B31371_10_08.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_08.png)'
- en: 'Figure 10.8: Journal Entry Detail screen'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.8：期刊条目详情屏幕
- en: Let’s study the different parts of this screen.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们研究一下这个屏幕的不同部分。
- en: A navigation bar at the top of the screen contains a **Back** button. A table
    view displays the journal entry’s date, rating, title text, body text, photo,
    and location map in table view cells.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕顶部的导航栏包含一个**返回**按钮。一个表格视图在表格视图中显示期刊条目的日期、评分、标题文本、正文文本、照片和位置地图。
- en: You can tap the **< Journal** button to return to the Journal List screen.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以点击**< 期刊**按钮返回到“期刊列表”屏幕。
- en: Using the Map screen
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用“地图”屏幕
- en: 'Tapping the **Map** button in the tab bar displays the Map screen:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在标签栏中点击**地图**按钮会显示地图屏幕：
- en: '![](img/B31371_10_09.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_09.png)'
- en: 'Figure 10.9: Map screen'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.9：地图屏幕
- en: Let’s study the different parts of this screen.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们研究一下这个屏幕的不同部分。
- en: A tab bar at the bottom of the screen displays the **Journal** and **Map** buttons.
    The **Map** button is selected, and you can see an `MKMapView` instance (map view)
    displaying a map on the screen, with pins indicating journal entries.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕底部的标签栏显示了**Journal**和**Map**按钮。**Map**按钮被选中，你可以看到一个`MKMapView`实例（地图视图）在屏幕上显示地图，图钉指示期刊条目。
- en: Tapping a pin will display an annotation, and tapping the button in the annotation
    will display the Journal Entry Detail screen for that journal entry.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 点击一个图钉将显示注释，点击注释中的按钮将显示该条目的期刊条目详情屏幕。
- en: This completes the tour of the app. Now, it’s time to start building the UI
    for it!
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了对该应用的浏览。现在，是时候开始构建它的UI了！
- en: Modifying your Xcode project
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改你的Xcode项目
- en: 'Now that you know what the screens of the app are going to look like, you can
    start building it. If you have not yet done so, open the `JRNL` project you created
    in *Chapter 1*, *Exploring Xcode*:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道了应用屏幕的外观，你可以开始构建它了。如果你还没有这样做，打开你在*第1章* *探索Xcode*中创建的`JRNL`项目：
- en: '![](img/B31371_10_10.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_10.png)'
- en: 'Figure 10.10: The JRNL project'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.10：JRNL项目
- en: Verify that **iPhone SE (3rd generation)** is selected from the Destination
    menu. Build and run your app. You will see a blank white screen. If you click
    the **Main** storyboard file in the Project navigator, you will see that it contains
    a single scene containing a blank view. This is why you only see a blank white
    screen when you run the app.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 确认从目标菜单中选择了**iPhone SE (第3代)**。构建并运行你的应用。你会看到一个空白的白色屏幕。如果你在项目导航器中点击**Main**故事板文件，你会看到它包含一个包含空白视图的单个场景。这就是为什么当你运行应用时，你只看到一个空白的白色屏幕。
- en: To configure the UI, you will modify the **Main** storyboard file using Interface
    Builder. Interface Builder allows you to add and configure scenes. Each scene
    represents a screen that a user will see. You can add UI objects such as views
    and buttons to a scene and configure them as required, using the Attributes inspector.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置UI，你将使用Interface Builder修改**Main**故事板文件。Interface Builder允许你添加和配置场景。每个场景代表用户将看到的屏幕。你可以在场景中添加UI对象，如视图和按钮，并按需配置它们，使用属性检查器。
- en: 'For more information on how to use Interface Builder, visit this link: [https://help.apple.com/xcode/mac/current/#/dev31645f17f](https://help.apple.com/xcode/mac/current/#/dev31645f17f).'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何使用Interface Builder的更多信息，请访问此链接：[https://help.apple.com/xcode/mac/current/#/dev31645f17f](https://help.apple.com/xcode/mac/current/#/dev31645f17f)。
- en: Now, you will embed the existing scene in a tab bar and add another scene to
    it. The tab bar scene will display a tab bar with two buttons at the bottom of
    the screen. Tapping a button will display the screen associated with it. These
    screens correspond to the Journal List and Map screens shown in the app tour.
    Let’s see how to do this in the next section.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你将在标签栏中嵌入现有的场景，并向其中添加另一个场景。标签栏场景将在屏幕底部显示一个标签栏，其中包含两个按钮。点击一个按钮将显示与之关联的屏幕。这些屏幕对应于应用浏览中显示的期刊列表和地图屏幕。让我们看看如何在下一节中完成这个操作。
- en: Setting up a tab bar controller scene
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置标签栏控制器场景
- en: 'As you saw in the app tour, the *JRNL* app has a tab bar with two buttons at
    the bottom of the screen, which are used to display the Journal List and Map screens.
    You will embed the existing view controller scene in a tab bar and add a second
    view controller scene to the tab bar. Follow these steps:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在应用浏览中看到的，*JRNL*应用在屏幕底部有一个标签栏，其中包含两个按钮，用于显示期刊列表和地图屏幕。你将在标签栏中嵌入现有的视图控制器场景，并向其中添加第二个视图控制器场景。按照以下步骤操作：
- en: 'Click the **Main** storyboard file in the Project navigator:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击**Main**故事板文件：
- en: '![](img/B31371_10_11.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_11.png)'
- en: 'Figure 10.11: Project navigator with the Main storyboard file selected'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.11：选择Main故事板文件的项目导航器
- en: The contents of the **Main** storyboard file appear in the Editor area.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**Main**故事板文件的内容显示在编辑器区域。'
- en: 'Click the Document Outline button to display the document outline if it is
    not present:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果它不存在，点击文档大纲按钮以显示文档大纲：
- en: '![](img/B31371_10_12.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_12.png)'
- en: 'Figure 10.12: Editor area with the Document Outline button shown'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.12：显示文档大纲按钮的编辑器区域
- en: 'Select **View Controller** in the document outline:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中选择**View Controller**：
- en: '![](img/B31371_10_13.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_13.png)'
- en: 'Figure 10.13: Document outline with View Controller selected'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.13：选择ViewController的文档大纲
- en: 'You’ll embed the existing view controller scene in a tab bar controller scene.
    Choose **Embed In** | **Tab Bar Controller** from the **Editor** menu:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将在标签栏控制器场景中嵌入现有的视图控制器场景。从**编辑器**菜单中选择**嵌入** | **标签栏控制器**：
- en: '![](img/B31371_10_14.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_14.png)'
- en: 'Figure 10.14: Editor menu with Embed In | Tab Bar Controller selected'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.14：选中嵌入 | 标签栏控制器的编辑器菜单
- en: You’ll see a new tab bar controller scene appear in the Editor area.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在编辑器区域看到一个新标签栏控制器场景出现。
- en: 'Click the **+** button at the top-right side of the window to show the library:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击窗口右上角的**+**按钮以显示库：
- en: '![](img/B31371_10_15.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_15.png)'
- en: 'Figure 10.15: Toolbar with the + button shown'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.15：显示+按钮的工具栏
- en: The library allows you to pick UI objects to be added to a scene.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 库允许你选择要添加到场景中的UI对象。
- en: 'Type `view con` in the library’s filter field. A **View Controller** object
    will appear in the list of results:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在库的过滤器字段中输入`view con`。一个**View Controller**对象将出现在结果列表中：
- en: '![](img/B31371_10_16.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_16.png)'
- en: 'Figure 10.16: Library with the View Controller object selected'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.16：选中视图控制器对象的库
- en: 'Drag the **View Controller** object to the storyboard to add a new view controller
    scene, and position it below the existing view controller scene:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**View Controller**对象拖动到故事板中，以添加一个新的视图控制器场景，并将其放置在现有的视图控制器场景下方：
- en: '![](img/B31371_10_17.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_17.png)'
- en: 'Figure 10.17: Main storyboard file with the view controller scene added'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.17：添加了视图控制器场景的主故事板文件
- en: 'Click the **-** button to zoom out, and rearrange the scenes in the storyboard
    so that both the tab bar controller scene and the view controller scenes are visible:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**-**按钮以缩小视图，并在故事板中重新排列场景，以便同时显示标签栏控制器场景和视图控制器场景：
- en: '![](img/B31371_10_18.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_18.png)'
- en: 'Figure 10.18: Editor area with the zoom buttons shown'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.18：显示缩放按钮的编辑区域
- en: If the **–** and **+** buttons are not visible, try making the Xcode window
    larger. You could also try hiding the **Navigator** and **Inspector** areas using
    the **Navigator** and **Inspector** buttons.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果**–**和**+**按钮不可见，尝试放大Xcode窗口。你也可以尝试使用**导航器**和**检查器**按钮隐藏**导航器**和**检查器**区域。
- en: 'Select **Tab Bar Controller** in the document outline. Press *Ctrl* and drag
    from **Tab Bar Controller** to the newly added view controller scene:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中选择**Tab Bar Controller**。按*Ctrl*键并从**Tab Bar Controller**拖动到新添加的视图控制器场景：
- en: '![](img/B31371_10_19.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_19.png)'
- en: 'Figure 10.19: Editor area showing the drag destination'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.19：显示拖动目的地的编辑区域
- en: 'A segue pop-up menu will appear. Choose **view controllers** from this menu:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将出现一个切换弹出菜单。从该菜单中选择**视图控制器**：
- en: '![](img/B31371_10_20.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_20.png)'
- en: 'Figure 10.20: Segue pop-up menu'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.20：切换弹出菜单
- en: A segue connecting the tab bar controller scene to the view controller scene
    will appear.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 将出现一个连接标签栏控制器场景到视图控制器场景的切换。
- en: 'Rearrange the scenes in the **Editor** area so that it looks like the screenshot
    below:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**编辑器**区域重新排列场景，使其看起来像下面的截图：
- en: '![](img/B31371_10_21.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_21.png)'
- en: 'Figure 10.21: Editor area with rearranged scenes'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.21：重新排列场景的编辑区域
- en: 'Build and run your app in Simulator, and you’ll see the tab bar with two buttons
    at the bottom of the screen:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模拟器中构建和运行你的应用，你将在屏幕底部看到带有两个按钮的标签栏：
- en: '![](img/B31371_10_22.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_22.png)'
- en: 'Figure 10.22: Simulator showing the tab bar with two buttons'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.22：显示两个按钮的标签栏的模拟器
- en: You have successfully added a tab bar to your project, but as you can see, the
    button titles are currently both named **Item**. You will change them to **Journal**
    and **Map** in the next section.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 你已成功将标签栏添加到项目中，但正如你所见，按钮标题目前都命名为**Item**。在下一节中，你将将它们更改为**Journal**和**Map**。
- en: Setting the tab bar button titles and icons
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置标签栏按钮标题和图标
- en: 'Your app now displays a tab bar at the bottom of the screen, but the button
    titles and icons do not match those shown in the app tour. To make them match,
    you will configure the button titles to read **Journal** and **Map** in the Attributes
    inspector and configure their icons as well. Follow these steps:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 你的应用现在在屏幕底部显示了一个标签栏，但按钮标题和图标与应用之旅中显示的不匹配。为了使它们匹配，你将在属性检查器中将按钮标题配置为读取**Journal**和**Map**，并配置它们的图标。按照以下步骤操作：
- en: 'Click the **Main** storyboard file in the Project navigator. Click the Document
    Outline button to show the document outline if it is not present. Click the first
    **Item Scene** in the document outline:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击**Main**故事板文件。如果未显示，点击文档大纲按钮以显示文档大纲。点击文档大纲中的第一个**Item Scene**：
- en: '![](img/B31371_10_23.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_23.png)'
- en: 'Figure 10.23: Document outline showing the first Item Scene selected'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.23：显示已选择第一个项目场景的文档大纲
- en: 'Click the **Item** button under **Item Scene**. Then, click the Attributes
    inspector button:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**项目场景**下点击**项目**按钮。然后，点击属性检查器按钮：
- en: '![](img/B31371_10_24.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_24.png)'
- en: 'Figure 10.24: Attributes inspector selected'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.24：已选择属性检查器
- en: 'Under **Bar Item**, set **Title** to `Journal` and **Image** to `person.fill`:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**条目项**下将**标题**设置为`Journal`，**图像**设置为`person.fill`：
- en: '![](img/B31371_10_25.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_25.png)'
- en: 'Figure 10.25: Attributes inspector with Title set to Journal and Image set
    to person.fill'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.25：属性检查器，标题设置为Journal，图像设置为person.fill
- en: 'Click the **Item** button in the second **Item** scene, and under **Bar Item**,
    set **Title** to `Map` and **Image** to `map`:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第二个**项目**场景中点击**项目**按钮，并在**条目项**下将**标题**设置为`Map`，**图像**设置为`map`：
- en: '![](img/B31371_10_26.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_26.png)'
- en: 'Figure 10.26: Attributes inspector with Title set to Map and Image set to map'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.26：属性检查器，标题设置为Map，图像设置为map
- en: 'Build and run your app in Simulator. You’ll see that the titles for the buttons
    have changed to **Journal** and **Map**, respectively, and each button also has
    a custom icon:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模拟器中构建并运行你的应用。你会看到按钮的标题已分别更改为**Journal**和**Map**，并且每个按钮都有一个自定义图标：
- en: '![](img/B31371_10_27.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_27.png)'
- en: 'Figure 10.27: Simulator showing the tab bar with custom button titles and icons'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.27：显示带有自定义按钮标题和图标的标签栏的模拟器
- en: Tapping the **Journal** and **Map** buttons will display the scenes for the
    Journal List and Map screens.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**Journal**和**Map**按钮将显示期刊列表和地图屏幕的场景。
- en: 'The `person.fill` and `map` icons are part of Apple’s **SF Symbols** library.
    To learn more about it, visit this link: [https://developer.apple.com/design/human-interface-guidelines/sf-symbols](https://developer.apple.com/design/human-interface-guidelines/sf-symbols).'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`person.fill`和`map`图标是苹果的**SF Symbols**库的一部分。要了解更多信息，请访问此链接：[https://developer.apple.com/design/human-interface-guidelines/sf-symbols](https://developer.apple.com/design/human-interface-guidelines/sf-symbols)。'
- en: As you have seen in the app tour, some screens have titles and buttons in the
    navigation bar. In the next section, you will learn how to add navigation bars
    to your screens so that you can add buttons and titles to them later as required.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在应用浏览中看到的，一些屏幕在导航栏中有标题和按钮。在下一节中，你将学习如何将导航栏添加到你的屏幕上，以便你可以根据需要稍后添加按钮和标题。
- en: Embedding view controllers in navigation controllers
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在导航控制器中嵌入视图控制器
- en: 'As you saw in the app tour, the Journal List and Map screens both have a navigation
    bar at the top of the screen. To add the navigation bars for both screens, you
    will embed the view controllers of the Journal and Map scenes in a navigation
    controller. This will make navigation bars appear at the top of the screen when
    the Journal List and Map screens are displayed. Follow these steps:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在应用浏览中看到的，期刊列表和地图屏幕的顶部都有导航栏。要为两个屏幕添加导航栏，你需要在导航控制器中嵌入期刊和地图场景的视图控制器。这样，当显示期刊列表和地图屏幕时，导航栏将出现在屏幕顶部。按照以下步骤操作：
- en: 'Click **Journal Scene** in the document outline:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中点击**期刊场景**：
- en: '![](img/B31371_10_28.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_28.png)'
- en: 'Figure 10.28: Document outline with Journal Scene selected'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.28：显示已选择期刊场景的文档大纲
- en: 'Choose **Embed In** | **Navigation Controller** from the **Editor** menu:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**编辑**菜单中选择**嵌入** | **导航控制器**：
- en: '![](img/B31371_10_29.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_29.png)'
- en: 'Figure 10.29: Editor menu with Embed In | Navigation Controller selected'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.29：显示已选择嵌入到导航控制器中的编辑菜单
- en: 'Verify that a navigation controller scene has appeared between the tab bar
    controller scene and the journal scene:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证是否在标签栏控制器场景和期刊场景之间出现了一个导航控制器场景：
- en: '![](img/B31371_10_30.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_30.png)'
- en: 'Figure 10.30: Editor area showing an added navigation controller scene'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.30：显示已添加导航控制器场景的编辑区域
- en: Click **Map Scene** in the document outline and repeat *step 2*.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中点击**地图场景**并重复*步骤2*。
- en: '![](img/B31371_10_31.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_31.png)'
- en: 'Figure 10.31: Editor area showing an added navigation controller scene'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.31：显示已添加导航控制器场景的编辑区域
- en: Both the **Journal List** screen and the **Map** screen now have navigation
    bars, but since they are the same color as the background, it is not apparent
    on the screen. You will set the titles for each scene’s navigation item to distinguish
    between them.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，**期刊列表**屏幕和**地图**屏幕都拥有导航栏，但由于它们的颜色与背景相同，所以在屏幕上并不明显。你将为每个场景的导航项设置标题，以便区分它们。
- en: 'Select the **Navigation Item** for the first **View Controller Scene** in the
    document outline. In the Attributes inspector, under **Navigation Item**, set
    **Title** to `Journal`:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中选择第一个**视图控制器场景**的**导航项**。在属性检查器中，在**导航项**下，将**标题**设置为`日历`：
- en: '![](img/B31371_10_32.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_32.png)'
- en: 'Figure 10.32: Attributes inspector with Title set to Journal'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.32：标题设置为“日历”的属性检查器
- en: 'Select the **Navigation Item** for the second **View Controller Scene** in
    the document outline. In the Attributes inspector, under **Navigation Item**,
    set **Title** to `Map`:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中选择第二个**视图控制器场景**的**导航项**。在属性检查器中，在**导航项**下，将**标题**设置为`地图`：
- en: '![](img/B31371_10_33.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_33.png)'
- en: 'Figure 10.33: Attributes inspector with Title set to Map'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.33：标题设置为“地图”的属性检查器
- en: Build and run your app, and tap each tab bar button to display the corresponding
    screen. Note that each screen displays a title in the navigation bar.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建并运行你的应用，并点击每个标签栏按钮以显示相应的屏幕。注意每个屏幕在导航栏中显示一个标题。
- en: Embedding a view controller in a navigation controller adds that view controller
    to the navigation controller’s `viewControllers` array. The navigation controller
    then displays the view controller’s view on the screen. The navigation controller
    also displays a navigation bar with a title at the top of the screen.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在导航控制器中嵌入视图控制器会将该视图控制器添加到导航控制器的`viewControllers`数组中。然后导航控制器在屏幕上显示视图控制器的视图。导航控制器还会在屏幕顶部显示一个带有标题的导航栏。
- en: Congratulations! You’ve just configured the tab bar and navigation controllers
    for your app!
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你刚刚为你的应用配置了标签栏和导航控制器！
- en: You may have noticed that the screens represented in Interface Builder don’t
    match the iPhone model you selected in the Destination menu, and you may find
    that the minimap display gets in the way of arranging screens in your app. Let’s
    do some additional configuration of Interface Builder to fix that.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到Interface Builder中显示的屏幕与你在目标菜单中选择的iPhone型号不匹配，你可能还会发现最小地图显示会妨碍你在应用中排列屏幕。让我们进行一些额外的Interface
    Builder配置来解决这个问题。
- en: Configuring Xcode
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置Xcode
- en: 'Even though you have configured Simulator to use iPhone SE (3^(rd) generation)
    for your app, the scenes shown in Interface Builder are for a different iPhone
    model. You may also wish to hide the minimap display. Let’s configure the scenes
    in Interface Builder to use iPhone SE (3^(rd) generation) and hide the minimap
    display. Follow these steps:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管你已经配置了模拟器使用iPhone SE（第3代）作为你的应用设备，但在Interface Builder中显示的场景是为不同的iPhone型号。你可能还希望隐藏最小地图显示。让我们配置Interface
    Builder中的场景以使用iPhone SE（第3代）并隐藏最小地图显示。按照以下步骤操作：
- en: 'The **Main** storyboard file should still be selected. To configure the appearance
    of the scenes in Interface Builder, click the device configuration button:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应该仍然选择**主**故事板文件。要配置在Interface Builder中场景的外观，请点击设备配置按钮：
- en: '![](img/B31371_10_34.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_34.png)'
- en: 'Figure 10.34: Editing area with the device configuration button shown'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.34：显示设备配置按钮的编辑区域
- en: A pop-up window displaying different device screens will appear.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 将显示不同设备屏幕的弹出窗口。
- en: 'Choose **iPhone SE (3rd generation)** from this pop-up window, and click anywhere
    in the Editor area to dismiss it:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从此弹出窗口中选择**iPhone SE（第3代**），然后点击编辑区域中的任何位置以关闭它：
- en: '![](img/B31371_10_35.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_35.png)'
- en: 'Figure 10.35: Device pop-up window with iPhone SE (3rd generation) selected'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.35：选择iPhone SE（第3代）的设备弹出窗口
- en: The appearance of the scenes in the storyboard will change to reflect the iPhone
    SE (3^(rd) generation)’s screen.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 故事板中场景的外观将更改为反映iPhone SE（第3代）的屏幕。
- en: If you wish to hide the minimap, choose **Minimap** from the **Editor** menu
    to deselect it.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你希望隐藏最小地图，从**编辑**菜单中选择**最小地图**以取消选中它。
- en: '![](img/B31371_10_36.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_36.png)'
- en: 'Figure 10.36: Editor menu with Minimap highlighted'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.36：突出显示最小地图的编辑菜单
- en: 'Verify that you have the following scenes in the `Main` storyboard file:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证在`主`故事板文件中是否有以下场景：
- en: '![](img/B31371_10_37.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_10_37.png)'
- en: 'Figure 10.37: Editor area showing the completed Main storyboard file'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.37：显示完成的主故事板文件的编辑区域
- en: Build and run your app. It should work just as it did before.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建并运行你的应用。它应该和之前一样工作。
- en: You have created the Journal List and Map screens for your app! Well done!
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经为你的应用创建了日历列表和地图屏幕！做得好！
- en: Summary
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned some useful terms used in iOS app development.
    This will make it easier for you to understand the remainder of this book, as
    well as other books or online resources on the subject.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了在 iOS 应用开发中使用的某些有用术语。这将使你更容易理解本书的其余部分，以及关于该主题的其他书籍或在线资源。
- en: Then, you also learned about the different screens used in the *JRNL* app and
    how a user could use the app. As you recreate the app’s UI from scratch, you’re
    able to compare what you’re doing to what the actual app looks like.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你还了解了 *JRNL* 应用中使用的不同屏幕以及用户如何使用该应用。当你从头开始重新创建应用的 UI 时，你能够将你所做的工作与实际应用的外观进行比较。
- en: Finally, you learned how to use Interface Builder and storyboards to add a tab
    bar controller scene to your app, configure the button titles and icons, and add
    navigation controllers for the JournalList and Map screens. This will familiarize
    you with adding and configuring UI elements for your own apps.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你学习了如何使用 Interface Builder 和 storyboards 将标签栏控制器场景添加到你的应用中，配置按钮标题和图标，并为 JournalList
    和 Map 屏幕添加导航控制器。这将使你熟悉为你的应用添加和配置 UI 元素。
- en: In the next chapter, you will continue setting up your app’s UI and become familiar
    with more UI elements. You will add and configure the remaining screens for your
    app.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将继续设置你应用的 UI，并熟悉更多 UI 元素。你将为你的应用添加和配置剩余的屏幕。
- en: Join us on Discord!
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的 Discord 社区！
- en: Read this book alongside other users, experts, and the author himself. Ask questions,
    provide solutions to other readers, chat with the author via Ask Me Anything sessions,
    and much more. Scan the QR code or visit the link to join the community.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他用户、专家和作者本人一起阅读这本书。提出问题，为其他读者提供解决方案，通过 Ask Me Anything 会话与作者聊天，等等。扫描二维码或访问链接加入社区。
- en: '[https://packt.link/ios-Swift](https://packt.link/ios-Swift%0D)'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/ios-Swift](https://packt.link/ios-Swift%0D)'
- en: '[![](img/QR_Code2370024260177612484.png)](https://packt.link/ios-Swift%0D)'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](img/QR_Code2370024260177612484.png)](https://packt.link/ios-Swift%0D)'
