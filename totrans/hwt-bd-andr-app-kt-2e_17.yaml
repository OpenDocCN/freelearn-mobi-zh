- en: '17'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '17'
- en: Launching Your App on Google Play
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Google Play 上发布您的应用程序
- en: This chapter will introduce you to the Google Play console, release channels,
    and the entire release process. It covers creating a Google Play Developer account,
    setting up the store entry for our developed app, and creating a key store (including
    coverage of the importance of passwords and where to store files). We’ll also
    learn about app bundles and APK, looking at how to generate the app’s APK or AAB
    file. Later in the chapter, we’ll set up release paths, open beta, and closed
    alpha, and finally, we’ll upload our app to the store and download it on a device.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将向您介绍 Google Play 控制台、发布渠道和整个发布过程。它涵盖了创建 Google Play 开发者账户、设置我们开发的应用程序的商店入口以及创建密钥库（包括介绍密码的重要性以及文件存储的位置）。我们还将了解应用程序包和
    APK，查看如何生成应用程序的 APK 或 AAB 文件。在章节的后面部分，我们将设置发布路径、公开测试版和封闭测试版，最后，我们将上传我们的应用程序到商店并在设备上下载。
- en: By the end of this chapter, you will be able to create your own Google Play
    Developer account, prepare your signed APK or app bundle for publishing, and publish
    your first application on Google Play.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将能够创建自己的 Google Play 开发者账户，准备您的已签名 APK 或应用程序包以发布，并在 Google Play 上发布您的第一个应用程序。
- en: You learned how to add animations and transitions with `CoordinatorLayout` and
    `MotionLayout` in [*Chapter 16*](B19411_16.xhtml#_idTextAnchor826), *Animations
    and Transitions with CoordinatorLayout and MotionLayout*. Now, you are ready to
    develop and launch Android applications.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您在[*第 16 章*](B19411_16.xhtml#_idTextAnchor826)中学习了如何使用 `CoordinatorLayout` 和
    `MotionLayout` 添加动画和过渡，*使用 CoordinatorLayout 和 MotionLayout 的动画和过渡*。现在，您已经准备好开发和发布
    Android 应用程序。
- en: After developing Android apps, they will only be available on your devices and
    emulators. You must make them available to everyone so they can download them.
    In turn, you will acquire users, and you can earn from them. The official marketplace
    for Android apps is Google Play. With Google Play, the apps and games you release
    will be available to over two billion active Android devices globally. There are
    also other marketplaces where you can publish your apps, but they are beyond the
    scope of this book.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发 Android 应用后，它们只能在您的设备和模拟器上使用。您必须使它们对所有人可用，以便他们可以下载。反过来，您将获得用户，并且可以从他们那里赚钱。Android
    应用的官方市场是 Google Play。通过 Google Play，您发布的应用程序和游戏将可供全球超过 20 亿台活跃的 Android 设备使用。还有其他市场，您可以在那里发布您的应用程序，但它们超出了本书的范围。
- en: In this chapter, we’re going to learn about launching your apps on Google Play.
    We’ll start with preparing the apps for release and creating a Google Play Developer
    account. Then, we’ll move on to uploading your app and managing app releases.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何在 Google Play 上发布您的应用程序。我们将从准备应用程序发布和创建 Google Play 开发者账户开始。然后，我们将继续上传您的应用程序和管理应用程序发布。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下主题：
- en: Preparing your apps for release
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备您的应用程序发布
- en: Creating a developer account
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建开发者账户
- en: Uploading the app to Google Play
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将应用程序上传到 Google Play
- en: Managing app releases
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理应用程序发布
- en: Preparing your apps for release
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备您的应用程序发布
- en: Android Studio normally signs your build using a debug key. This debug build
    allows you to build and test your app quickly. To publish your app on Google Play,
    you must create a release build signed with your own key. This release build will
    not be debuggable and can be optimized for size.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio 通常使用调试密钥对您的构建进行签名。这种调试构建允许您快速构建和测试您的应用程序。要发布您的应用程序到 Google Play，您必须创建一个使用您自己的密钥签名的发布构建。这个发布构建将不可调试，并且可以优化大小。
- en: The release build must also have the correct version information. Otherwise,
    you won’t be able to publish a new app or update an already published app.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 发布构建还必须具有正确的版本信息。否则，您将无法发布新应用程序或更新已发布的应用程序。
- en: Let’s start with adding versions to your app.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从向您的应用程序添加版本开始。
- en: Versioning apps
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用程序版本控制
- en: 'The version of your app is important for the following reasons:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您的应用程序版本对于以下原因很重要：
- en: Users can see the version they have downloaded. They can use this when checking
    whether there’s an update or whether there are known issues when reporting bugs/problems
    with the app.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以看到他们下载的版本。他们可以在检查是否有更新或报告应用程序的错误/问题时使用此信息。
- en: The device and Google Play use the version value to determine whether an app
    can or should be updated.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备和 Google Play 使用版本值来确定应用程序是否可以或应该更新。
- en: Developers can also use this value to add feature support to specific versions.
    They can also warn or force users to upgrade to the latest version to get important
    fixes on bugs or security issues.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发者还可以使用这个值来为特定版本添加功能支持。他们还可以警告或强制用户升级到最新版本以获取对错误或安全问题的重要修复。
- en: 'An Android app has two versions: `versionCode` and `versionName`. Now, `versionCode`
    is an integer that is used by developers, Google Play, and the Android system
    while `versionName` is the string that the users see on the Google Play page for
    your app.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一个Android应用有两个版本：`versionCode`和`versionName`。现在，`versionCode`是一个由开发者、Google
    Play和Android系统使用的整数，而`versionName`是用户在Google Play页面上看到的应用字符串。
- en: The initial release of an app should have a `versionCode` value of `1`, and
    you should increase it for each new release.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序的初始发布应该有一个`versionCode`值为`1`，你应该为每个新版本增加它。
- en: '`versionName` can be in *x.y* format (where *x* is the major version, and *y*
    is the minor version). You can also use semantic versioning, as in *x.y.z*, by
    adding the patch version with *z*.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`versionName`可以是*x.y*格式（其中*x*是主版本，*y*是次版本）。你也可以使用语义版本，如*x.y.z*，通过添加补丁版本*z*。'
- en: To learn more about semantic versioning, refer to [https://semver.org](https://semver.org).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于语义版本的信息，请参阅[https://semver.org](https://semver.org)。
- en: 'In the module’s `build.gradle` files, `versionCode` and `versionName` are automatically
    generated when you create a new project in Android Studio. They are in the `defaultConfig`
    block under the `android` block. An example `build.gradle` file shows these values:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在模块的`build.gradle`文件中，当你在Android Studio中创建一个新项目时，`versionCode`和`versionName`会自动生成。它们位于`android`块下的`defaultConfig`块中。一个示例`build.gradle`文件显示了这些值：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When publishing updates, the new package being released must have a higher `versionCode`
    value because users cannot downgrade their apps and can only download new versions.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在发布更新时，正在发布的新的包必须有一个更高的`versionCode`值，因为用户不能降级他们的应用，只能下载新版本。
- en: After ensuring that the app version is correct, the next step in the release
    process is to get a keystore to sign the app. This will be discussed in the next
    section.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在确保应用版本正确后，发布流程的下一步是获取一个密钥库来签名应用。这将在下一节中讨论。
- en: Creating a keystore
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建密钥库
- en: Android apps, when run, are automatically signed by a debug key. However, before
    it can be published on Google Play Store, an app must be signed with a release
    key. To do so, you must have a keystore. If you don’t have one yet, you can create
    one in Android Studio.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Android应用在运行时会被自动使用调试密钥签名。然而，在它可以在Google Play商店发布之前，应用必须使用发布密钥进行签名。为此，你必须有一个密钥库。如果你还没有，你可以在Android
    Studio中创建一个。
- en: Exercise 17.01 – creating a keystore in Android Studio
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习17.01 – 在Android Studio中创建密钥库
- en: 'In this exercise, we’ll use Android Studio to make a keystore that can be used
    to sign Android apps. Follow these steps to complete this exercise:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将使用Android Studio创建一个可以用于签名Android应用的密钥库。按照以下步骤完成这个练习：
- en: Open a project in Android Studio.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Android Studio中打开一个项目。
- en: 'Go to the **Build** menu and then click on **Generate Signed Bundle** **or
    APK**:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**构建**菜单，然后点击**生成签名包****或APK**：
- en: '![Figure 17.1 – The Generate Signed Bundle or APK dialog](img/B19411_17_01.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图17.1 – 生成签名包或APK对话框](img/B19411_17_01.jpg)'
- en: Figure 17.1 – The Generate Signed Bundle or APK dialog
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.1 – 生成签名包或APK对话框
- en: An **APK** file is the file format by which users can install your app. The
    Android App Bundle is a new file publishing format that allows Google Play to
    distribute specific and smaller APKs to devices, so developers don’t need to release
    and manage multiple APKs to support different devices.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**APK**文件是用户可以安装应用的文件格式。Android应用包是一种新的文件发布格式，它允许Google Play向设备分发特定且更小的APK，因此开发者不需要发布和管理多个APK以支持不同的设备。'
- en: 'Make sure either **APK** or **Android App Bundle** is selected, and then click
    the **Next** button. Here, you can choose an existing keystore or create a new
    one:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保已选择**APK**或**Android应用包**，然后点击**下一步**按钮。在这里，你可以选择一个现有的密钥库或创建一个新的：
- en: '![Figure 17.2 – The Generate Signed Bundle or APK dialog after selecting APK
    and pressing the Next button](img/B19411_17_02.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图17.2 – 选择APK并点击下一步按钮后的生成签名包或APK对话框](img/B19411_17_02.jpg)'
- en: Figure 17.2 – The Generate Signed Bundle or APK dialog after selecting APK and
    pressing the Next button
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.2 – 选择APK并点击下一步按钮后的生成签名包或APK对话框
- en: 'Click the **Create new…** button. The **New Key Store** dialog will then appear:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建新…**按钮。然后会出现**新密钥库**对话框：
- en: '![Figure 17.3 – The New Key Store dialog](img/B19411_17_03.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图17.3 – 新密钥库对话框](img/B19411_17_03.jpg)'
- en: Figure 17.3 – The New Key Store dialog
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.3 – 新密钥库对话框
- en: In the `users/packt/downloads/keystore.keystore`.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`users/packt/downloads/keystore.keystore`。
- en: Provide the password in both the **Password** and **Confirm** fields.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**密码**和**确认**字段中提供密码。
- en: In the **Certificate** section under **Key**, input values into the **First
    and Last Name**, **Organizational Unit**, **Organization**, **City or Locality**,
    **State or Province**, and **Country Code** fields. Only one of these is required,
    but it’s good to provide all the information.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**密钥**下的**证书**部分，输入**姓名**、**组织单位**、**组织**、**城市或地区**、**州或省**和**国家代码**字段的值。其中只需提供一项，但提供所有信息是好的。
- en: Click the **OK** button. If there is no error, the keystore will be created
    in the path you provided, and you will be back in the **Generate Signed Bundle
    or APK** dialog with the keystore values so you can continue generating the APK
    or app bundle. You could close the dialog if you only wanted to create a keystore.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**按钮。如果没有错误，密钥库将在您提供的路径中创建，您将回到**生成签名包或APK**对话框，并带有密钥库值，以便您继续生成APK或应用包。如果您只想创建密钥库，则可以关闭对话框。
- en: In this exercise, you have created your own keystore, which you can use to sign
    applications to be published to Google Play.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，您已经创建了您自己的密钥库，您可以使用它来为发布到Google Play的应用签名。
- en: 'You can also use the command line to generate a keystore if you prefer to use
    that. The `keytool` command is available in the **Java Development Kit** (**JDK**).
    The command is as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您更喜欢使用命令行，您也可以使用命令行生成密钥库。`keytool`命令在**Java开发工具包**（**JDK**）中可用。命令如下：
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This command creates a 2,048-bit RSA keystore in the current working directory,
    valid for 9,125 days (25 years), with a `my-key.jks` filename and an `key-alias`
    alias. You can change the validity, filename, and alias to your preferred values.
    The command line will prompt you to input the keystore password, then prompt you
    to enter it again to confirm.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令在当前工作目录中创建一个2,048位RSA密钥库，有效期为9,125天（25年），文件名为`my-key.jks`，别名为`key-alias`。您可以将有效期、文件名和别名更改为您喜欢的值。命令行将提示您输入密钥库密码，然后提示您再次输入以确认。
- en: It will then ask you for the first and last name, organizational unit, organization
    name, city or locality, state or province, and country code, one at a time. Only
    one of these is required; you can press the *Enter* key if you want to leave something
    blank. It is good practice, though, to provide all the information.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 它将依次询问您姓名、组织单位、组织名称、城市或地区、州或省和国家代码，只需提供一项；如果您想留空，可以按*Enter*键。尽管如此，提供所有信息是良好的实践。
- en: After the country code prompt, you will be asked to verify the input provided.
    You can type `yes` to confirm. You will then be asked to provide the password
    for the key alias. If you want it to be the same as the keystore password, you
    can press *Enter*. The keystore will then be generated.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在国家代码提示后，您将被要求验证提供的输入。您可以输入`yes`以确认。然后您将被要求提供密钥别名的密码。如果您想它与密钥库密码相同，您可以按*Enter*。然后密钥库将被生成。
- en: Now that you have a keystore for signing your apps, you need to know how you
    can keep it safe. You’ll learn about that in the next section.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经有了用于签名应用的密钥库，您需要知道如何保持其安全。您将在下一节中了解这一点。
- en: Storing the keystore and passwords
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 存储密钥库和密码
- en: You need to keep the keystore and passwords in a safe and secure place because
    if you lose the keystore and/or its credentials, you will no longer be able to
    release updates for your apps. If a hacker also gains access to these, they may
    be able to update your apps without your consent.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要将密钥库和密码保存在安全的地方，因为如果您丢失密钥库和/或其凭证，您将无法再为您的应用发布更新。如果黑客也获得了对这些凭证的访问权限，他们可能能够在未经您同意的情况下更新您的应用。
- en: You can store the keystore in your CI/build server or on a secure server.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将密钥库存储在您的CI/构建服务器或安全服务器上。
- en: Keeping the credentials is a bit tricky, as you will need them later when signing
    releases for app updates. One way you can do this is by including this information
    in your project’s `app/build.gradle` file.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 保持凭证有点棘手，因为您稍后需要在为应用更新签名时使用它们。您可以这样做的一种方法是在项目的`app/build.gradle`文件中包含这些信息。
- en: 'In the `android` block, you can have `signingConfigs`, which references the
    keystore file, its password, and the key’s alias and password:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在`android`块中，您可以有`signingConfigs`，它引用密钥库文件、其密码以及密钥的别名和密码：
- en: '[PRE2]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Under the `buildTypes` release block in the project’s `build.gradle` file,
    you can specify the release config in the `signingConfigs` block:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目的`build.gradle`文件中的`buildTypes`发布块下，您可以在`signingConfigs`块中指定发布配置：
- en: '[PRE3]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Storing the signing configs in the `build.gradle` file is not that secure, as
    someone who has access to the project or the repository can compromise the app.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 将签名配置存储在`build.gradle`文件中并不安全，因为任何可以访问项目或仓库的人都可以危及应用。
- en: You can store these credentials in environment variables to make them more secure.
    With this approach, even if malicious people get access to your code, the app
    updates will still be safe as the signing configurations are not stored in your
    code but on the system. An environment variable is a key-value pair that is set
    outside your **integrated development environment** (**IDE**) or project, for
    example, on your own computer or on a build server.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将这些凭据存储在环境变量中以提高安全性。采用这种方法，即使恶意人员获取了您的代码访问权限，应用更新仍然安全，因为签名配置不是存储在您的代码中，而是在系统上。环境变量是在您的**集成开发环境**（**IDE**）或项目之外设置的键值对，例如，在您的个人电脑或构建服务器上。
- en: To use environment variables for keystore configurations in Gradle, you can
    create environment variables for the store file path, store password, key alias,
    and key password. For example, you can use the `KEYSTORE_FILE`, `KEYSTORE_PASSWORD`,
    `KEY_ALIAS`, and `KEY_PASSWORD` environment variables.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Gradle中为密钥库配置使用环境变量，您可以创建存储文件路径、存储密码、密钥别名和密钥密码的环境变量。例如，您可以使用`KEYSTORE_FILE`、`KEYSTORE_PASSWORD`、`KEY_ALIAS`和`KEY_PASSWORD`环境变量。
- en: 'On macOS and Linux, you can set an environment variable by using the following
    command:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS和Linux上，您可以使用以下命令设置环境变量：
- en: '[PRE4]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you’re using Windows, it can be done with this command:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是Windows，可以使用以下命令完成：
- en: '[PRE5]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This command will create a `KEYSTORE_PASSWORD` environment variable with `securepassword`
    as the value. In the `app/build.gradle` file, you can then use the values from
    the environment variables:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将创建一个`KEYSTORE_PASSWORD`环境变量，其值为`securepassword`。在`app/build.gradle`文件中，您可以使用环境变量的值：
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Your keystore will be used to sign your app for release so you can publish it
    on Google Play. We’ll discuss that in the next section.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 您的密钥库将用于为您的应用发布签名，以便您可以在Google Play上发布。我们将在下一节讨论这个问题。
- en: Signing your apps for release
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为发布版本签名应用
- en: When you run an application on an emulator or an actual device, Android Studio
    automatically signs it with the debug keystore. To publish it on Google Play,
    you must sign the APK or app bundle with your own key, using a keystore you made
    in Android Studio or from the command line.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在模拟器或实际设备上运行应用程序时，Android Studio会自动使用调试密钥库对其进行签名。要发布到Google Play，您必须使用在Android
    Studio或命令行中创建的密钥库使用自己的密钥对APK或应用包进行签名。
- en: Suppose you have added the signing config for the release build in your `build.gradle`
    file; you can automatically build a signed APK or app bundle by selecting the
    release build in the `app/build/output` directory of your project.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您已在您的`build.gradle`文件中添加了发布构建的签名配置；您可以通过选择项目`app/build/output`目录中的发布构建来自动构建签名APK或应用包。
- en: Exercise 17.02 – creating a signed APK
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习17.02 – 创建签名APK
- en: 'In this exercise, we will create a signed APK for an Android project using
    Android Studio:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将使用Android Studio为Android项目创建一个签名APK：
- en: Open a project in Android Studio.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Android Studio中打开一个项目。
- en: 'Go to the **Build** menu and then click on the **Generate Signed Bundle or
    APK** menu item:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**构建**菜单，然后点击**生成签名包或APK**菜单项：
- en: '![Figure 17.4 – The Generate Signed Bundle or APK dialog](img/B19411_17_04.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图17.4 – 点击“下一步”按钮后的“生成签名包或APK”对话框](img/B19411_17_04.jpg)'
- en: Figure 17.4 – The Generate Signed Bundle or APK dialog
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.4 – “生成签名包或APK”对话框
- en: 'Select **APK** and then click the **Next** button:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**APK**，然后点击**下一步**按钮：
- en: '![Figure 17.5 – The Generate Signed Bundle or APK dialog after clicking the
    Next button](img/B19411_17_05.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图17.5 – 点击“下一步”按钮后的“生成签名包或APK”对话框](img/B19411_17_05.jpg)'
- en: Figure 17.5 – The Generate Signed Bundle or APK dialog after clicking the Next
    button
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.5 – 点击“下一步”按钮后的“生成签名包或APK”对话框
- en: Choose the keystore you made in *Exercise 17.01* – *creating a keystore in*
    *Android Studio*.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您在*练习17.01* – *在Android Studio中创建密钥库*中创建的密钥库。
- en: Provide the password that you set for the keystore you created in the **Key
    store** **password** field.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**密钥库密码**字段中提供您为创建的密钥库设置的密码。
- en: In the **Key alias** field, click the icon on the right side and select the
    key alias.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**密钥别名**字段中，点击右侧的图标并选择密钥别名。
- en: Provide the alias password that you set for the keystore in the **Key** **password**
    field.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**密钥** **密码**字段中提供您为密钥库设置的别名密码。
- en: Click the **Next** button.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**按钮。
- en: Choose the destination folder where the signed APK will be generated.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择签名APK将生成的目标文件夹。
- en: 'In the **Build Variants** field, make sure the **release** variant is selected:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**构建变体**字段中，确保选择了**发布**变体：
- en: '![Figure 17.6 – Choose the release build in the Generate Signed Bundle or APK
    dialog](img/B19411_17_06.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图17.6 – 在“生成签名包或APK”对话框中选择发布构建](img/B19411_17_06.jpg)'
- en: Figure 17.6 – Choose the release build in the Generate Signed Bundle or APK
    dialog
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.6 – 在“生成签名包或APK”对话框中选择发布构建
- en: For the signature version, select both **V1** and **V2**. **V2 (Full APK Signature)**
    is a whole-file scheme that increases your app security and makes it faster to
    install. This is only available for Android 7.0 Nougat and above. If you are targeting
    a version lower than that, you should also use **V1 (Jar Signature)**, which is
    the old way of signing APKs but is less secure than **V2**.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 对于签名版本，选择**V1**和**V2**。**V2（完整APK签名）**是一个整个文件方案，它增加了您的应用安全性并使其安装速度更快。这仅适用于Android
    7.0 Nougat及以上版本。如果您针对的版本低于这个版本，您还应该使用**V1（JAR签名）**，这是签名的旧方法，但比**V2**安全性低。
- en: 'Click the **Finish** button. Android Studio will build the signed APK. An IDE
    notification will inform you that the signed APK was generated. You can click
    on **locate** to go to the directory where the signed APK file is:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**按钮。Android Studio将构建签名APK。IDE通知将告知您已生成签名APK。您可以通过点击**定位**来转到签名APK文件所在的目录：
- en: '![Figure 17.7 – A pop-up notification for successfully signed APK generation](img/B19411_17_07.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图17.7 – 成功生成签名APK的弹出通知](img/B19411_17_07.jpg)'
- en: Figure 17.7 – A pop-up notification for successfully signed APK generation
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '![图17.7 – 成功生成签名APK的弹出通知](img/B19411_17_07.jpg)'
- en: In this exercise, you have made a signed APK, which you can now publish on Google
    Play. In the next section, you will learn about Android App Bundle, which is a
    new way of packaging apps for release.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，您已经制作了一个已签名的APK，现在您可以将其发布到Google Play。在下一节中，您将了解Android App Bundle，这是一种新的发布应用打包方式。
- en: Android app bundle
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android应用包
- en: The traditional way of releasing Android apps is through an APK or an application
    package. This APK file is the one downloaded to users’ devices when they install
    your app. This one big file contains all the strings, images, and other resources
    for all device configurations.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的发布Android应用的方式是通过APK或应用包。这个APK文件是用户在安装您的应用时下载到设备上的文件。这个大文件包含了所有设备配置的所有字符串、图像和其他资源。
- en: As you support more device types and more countries, this APK file will grow
    in size. The APK that users download will contain things that are not really needed
    for their devices. This will be an issue for you as users with low storage might
    not have enough space to install your app. Users with expensive data plans or
    slow internet connections might also avoid downloading the app if it’s too big.
    They might also uninstall your app to save storage space.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 随着您支持的设备类型和国家的增加，这个APK文件的大小将会增长。用户下载的APK将包含他们设备上并不真正需要的部分。这可能会成为您的问题，因为存储空间有限的用户可能没有足够的空间来安装您的应用。拥有昂贵的数据计划或慢速互联网连接的用户可能会避免下载过大的应用。他们也可能卸载您的应用以节省存储空间。
- en: Some developers have built an published multiple APKs to avoid these issues.
    However, it’s a complicated and inefficient solution, especially when you target
    different screen densities, CPU architectures, and languages. In addition, that
    would be too many APK files to maintain per release.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 一些开发者已经构建并发布了多个APK来避免这些问题。然而，这既复杂又低效，尤其是在您针对不同的屏幕密度、CPU架构和语言时。此外，每个发布版本维护的APK文件会太多。
- en: Android App Bundle is a new way of packaging apps for publishing. You just generate
    a single app bundle file (using Android Studio 3.2 and upward) and upload it on
    Google Play. Google Play will automatically generate the base APK file and the
    APK files for each device configuration, CPU architecture, and language. Users
    who install your app will only download the necessary APKs for their device. This
    will be smaller in size compared to a universal APK.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Android App Bundle是发布应用的一种新打包方式。您只需生成单个应用包文件（使用Android Studio 3.2及以上版本）并将其上传到Google
    Play。Google Play将自动生成基础APK文件以及每个设备配置、CPU架构和语言的APK文件。安装您的应用的用户将只下载他们设备所需的APK。与通用APK相比，这将更小。
- en: This will work for devices running on Android 5.0 Lollipop and upward; for those
    below it, the APK files that will be generated are only for device configuration
    and CPU architecture. All the languages and other resources will be included in
    each APK file.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这适用于运行 Android 5.0 Lollipop 及以上版本的设备；对于低于此版本的设备，生成的 APK 文件仅用于设备配置和 CPU 架构。所有语言和其他资源都将包含在每个
    APK 文件中。
- en: Exercise 17.03 – creating a signed app bundle
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 17.03 – 创建签名应用包
- en: 'In this exercise, we will create a signed app bundle for an Android project
    using Android Studio:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将使用 Android Studio 为 Android 项目创建一个签名应用包：
- en: Open a project in Android Studio.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Android Studio 中打开一个项目。
- en: 'Go to the **Build** menu, then click on the **Generate Signed Bundle or APK**
    menu item:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**构建**菜单，然后点击**生成签名包或 APK**菜单项：
- en: '![Figure 17.8 – The Generate Signed Bundle or APK dialog](img/B19411_17_08.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.8 – 生成签名包或 APK 对话框](img/B19411_17_08.jpg)'
- en: Figure 17.8 – The Generate Signed Bundle or APK dialog
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.8 – 生成签名包或 APK 对话框
- en: 'Select **Android App Bundle**, then click the **Next** button:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Android App Bundle**，然后点击**下一步**按钮：
- en: '![Figure 17.9 – The Generate Signed Bundle or APK dialog after clicking the
    Next button](img/B19411_17_09.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.9 – 点击下一步按钮后的生成签名包或 APK 对话框](img/B19411_17_09.jpg)'
- en: Figure 17.9 – The Generate Signed Bundle or APK dialog after clicking the Next
    button
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.9 – 点击下一步按钮后的生成签名包或 APK 对话框
- en: Choose the keystore you made in *Exercise 17.01 – creating a keystore in* *Android
    Studio*.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在*练习 17.01 – 在 Android Studio 中创建密钥库*中创建的密钥库中选择。
- en: Provide the password that you set for the keystore you created, in the **Key
    store** **password** field.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**密钥库** **密码**字段中提供您为创建的密钥库设置的密码。
- en: In the **Key alias** field, click the icon on the right side and select the
    key alias.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**密钥别名**字段中，点击右侧的图标并选择密钥别名。
- en: Provide the alias password that you set for the keystore you created in the
    **Key** **password** field.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**密钥** **密码**字段中提供您为在 Android Studio 中创建的密钥库设置的别名密码。
- en: Click the **Next** button.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**按钮。
- en: Choose the destination folder to generate the signed app bundle.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择生成签名应用包的目标文件夹。
- en: 'In the **Build Variants** field, make sure the **release** variant is selected:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**构建变体**字段中，确保选择了**发布**变体：
- en: '![Figure 17.10 – Choose the release build in the Generate Signed Bundle or
    APK dialog](img/B19411_17_10.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.10 – 在生成签名包或 APK 对话框中选择发布构建](img/B19411_17_10.jpg)'
- en: Figure 17.10 – Choose the release build in the Generate Signed Bundle or APK
    dialog
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.10 – 在生成签名包或 APK 对话框中选择发布构建
- en: 'Click the **Finish** button. Android Studio will build the signed app bundle.
    An IDE notification will inform you that the signed app bundle was generated.
    You can click on **locate** to go to the directory where the signed app bundle
    file is:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**按钮。Android Studio 将构建签名应用包。IDE 通知将告知您已生成签名应用包。您可以点击**定位**以转到签名应用包文件所在的目录：
- en: "![Figure 17.11 – P\uFEFFop-up notification that the signed app bundle was generated](img/B19411_17_11.jpg)"
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.11 – 已生成签名应用包的弹出通知](img/B19411_17_11.jpg)'
- en: Figure 17.11 – Pop-up notification that the signed app bundle was generated
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.11 – 已生成签名应用包的弹出通知
- en: In this exercise, you have made a signed app bundle that you can now publish
    on Google Play.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，您已经创建了一个签名应用包，现在可以将其发布到 Google Play。
- en: To be able to publish your app to Google Play Store with the Android app bundle
    format, you will first need to opt-in to Google Play’s app signing feature. We
    will discuss Google Play app signing in the next section.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 要能够以 Android 应用包格式将您的应用发布到 Google Play 商店，您首先需要选择 Google Play 的应用签名功能。我们将在下一节中讨论
    Google Play 应用签名。
- en: App signing by Google Play
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google Play 应用签名
- en: Google Play provides a service called app signing that allows Google to manage
    and protect your app signing keys and automatically re-sign your app for users.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Google Play 提供了一种名为应用签名的服务，允许 Google 管理和保护您的应用签名密钥，并自动为用户重新签名您的应用。
- en: With the Google Play app signing service, you can let Google generate the signing
    key or upload your own. You can also create a different upload key for additional
    security. You can sign the app with the upload key and publish the app on the
    Play Console.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Google Play 应用签名服务，您可以允许 Google 生成签名密钥或上传您自己的密钥。您还可以为额外的安全性创建不同的上传密钥。您可以使用上传密钥对应用进行签名并在
    Play Console 上发布应用。
- en: Google will check the upload key, remove it, and use the app signing key to
    re-sign the app for distribution to users. When app signing is enabled for the
    app, the upload key can be reset. If you lose the upload key or feel that it is
    already compromised, you can simply contact Google Play developer support, verify
    your identity, and get a new upload key.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Google 将检查上传密钥，将其删除，并使用应用签名密钥重新签名应用以分发给用户。当应用启用应用签名时，上传密钥可以被重置。如果您丢失了上传密钥或认为它已经被破坏，您可以简单地联系
    Google Play 开发者支持，验证您的身份，并获取一个新的上传密钥。
- en: It is easy to opt into app signing when publishing a new app. In the Google
    Play Console ([https://play.google.com/console](https://play.google.com/console)),
    you can go to the **Release Management** | **App Releases** section and select
    **Continue** in the **Let Google manage and protect your app signing key** section.
    The key you originally used to sign the app will become the upload key, and Google
    Play will generate a new app signing key.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在发布新应用时加入应用签名很容易。在 Google Play Console ([https://play.google.com/console](https://play.google.com/console))
    中，您可以前往 **发布管理** | **应用发布** 部分，并在 **让 Google 管理和保护您的应用签名密钥** 部分选择 **继续**。您最初用于签名应用的密钥将成为上传密钥，Google
    Play 将生成一个新的应用签名密钥。
- en: You can also configure existing apps to use app signing. This is available in
    the **Release** | **Setup** | **App Signing** section of the app in the Google
    Play Console. You need to upload your existing app signing key and generate a
    new upload key.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以配置现有应用以使用应用签名。这可以在 Google Play Console 中应用的 **发布** | **设置** | **应用签名** 部分找到。您需要上传现有的应用签名密钥并生成一个新的上传密钥。
- en: Once you enroll in Google Play app signing, you can no longer opt out. Also,
    if you use third-party services, you must use the app signing key’s certificate.
    This is available in **Release Management** | **App Signing**.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您注册了 Google Play 应用签名，您就无法取消注册。此外，如果您使用第三方服务，您必须使用应用签名密钥的证书。这可以在 **发布管理**
    | **应用签名** 中找到。
- en: App signing also enables you to upload an app bundle, and Google Play will automatically
    sign and generate APK files, which users will download when they install your
    app.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 应用签名还允许您上传应用包，Google Play 将自动签名并生成 APK 文件，用户在安装您的应用时将下载这些文件。
- en: In the next section, you will create a Google Play developer account, so you
    can publish an app’s signed APK or app bundle to Google Play.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，您将创建 Google Play 开发者账户，以便您可以将签名的 APK 或应用包发布到 Google Play。
- en: Creating a developer account
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建开发者账户
- en: To publish applications on Google Play, the first step that you need to take
    is to create a Google Play developer account. Head over to [https://play.google.com/console/signup](https://play.google.com/console/signup)
    and log in with your Google account. If you don’t have one, you should create
    one first.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Google Play 上发布应用程序，您需要采取的第一步是创建 Google Play 开发者账户。前往 [https://play.google.com/console/signup](https://play.google.com/console/signup)
    并使用您的 Google 账户登录。如果您还没有，您应该先创建一个。
- en: We recommend using a Google account that you plan to use in the long term instead
    of a throwaway one. Read the developer distribution agreement and agree to the
    terms of service.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议使用您计划长期使用的 Google 账户，而不是一次性账户。阅读开发者分发协议并同意服务条款。
- en: Note
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If your goal is to sell paid apps or add in-app products to your apps/games,
    you must also create a merchant account. This is not available in all countries,
    unfortunately. We won’t cover this here, but you can read more about it on the
    registration page or at [https://packt.link/LDncA](https://packt.link/LDncA).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的目标是销售付费应用或在您的应用/游戏中添加内购产品，您还必须创建一个商户账户。遗憾的是，这并非在所有国家都可用。我们在这里不会涉及此内容，但您可以在注册页面或[https://packt.link/LDncA](https://packt.link/LDncA)上了解更多信息。
- en: You must pay a $25 registration fee to create your Google Play Developer account.
    (This is a one-time payment). The fee must be paid using a valid debit/credit
    card, but some prepaid/virtual credit cards also work. What you can use varies
    by location/country.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须支付 25 美元的注册费来创建您的 Google Play 开发者账户。（这是一次性支付）。费用必须使用有效的借记卡/信用卡支付，但某些预付费/虚拟信用卡也适用。您可以使用的内容因地区/国家而异。
- en: The final step is to complete the account details, such as the developer’s name,
    email address, website, and phone number. These, which can be updated later, will
    form the developer information displayed on your app’s store listing.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是完成账户详情，例如开发者的姓名、电子邮件地址、网站和电话号码。这些信息可以在以后更新，并将形成在您的应用商店列表中显示的开发者信息。
- en: After completing the registration, you will receive a confirmation email. It
    may take a few hours (up to 48 hours) for your payment to be processed and your
    account registered, so be patient. Ideally, you should do this in advance, even
    if your app is not yet ready, so you can easily publish the app once it’s ready
    for release.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 完成注册后，你将收到一封确认邮件。你的付款可能需要几小时（最多48小时）才能处理并注册你的账户，所以请耐心等待。理想情况下，你应该提前这样做，即使你的应用还没有准备好，这样你就可以在它准备好发布时轻松发布。
- en: When you have received the confirmation email from Google, you can start publishing
    apps and games to Google Play.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 当你收到谷歌的确认邮件后，你就可以开始将应用和游戏发布到谷歌Play了。
- en: In the next section, we will discuss uploading apps to Google Play.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论如何将应用上传到谷歌Play。
- en: Uploading an app to Google Play
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 上传应用到谷歌Play
- en: Once you have an app ready for release and a Google Play Developer account,
    you can go to the Google Play Console ([https://play.google.com/console](https://play.google.com/console))
    to publish the app.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了一个准备发布的应用和一个谷歌Play开发者账号，你就可以访问谷歌Play控制台([https://play.google.com/console](https://play.google.com/console))来发布应用。
- en: To upload an app, go to the Play Console, click **All Apps**, and then click
    **Create app**. Provide the name of the application and the default language.
    In the **App or game** section, set whether it’s an app or game. Likewise, in
    the **Free or paid** section, set whether it’s free or paid. Create your store
    listing, prepare the app release, and roll out the release. We’ll have a look
    at the detailed steps in this section.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 要上传应用，请访问Play控制台，点击**所有应用**，然后点击**创建应用**。提供应用程序的名称和默认语言。在**应用或游戏**部分，设置它是一个应用还是一个游戏。同样，在**免费或付费**部分，设置它是免费还是付费。创建你的商店列表，准备应用发布，并推出发布。我们将在本节中查看详细步骤。
- en: Creating a store listing
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建商店列表
- en: The store listing is what users first see when they open your app’s page on
    Google Play. If the app is already published, you can go to **Grow**, **Store
    presence**, and select **Main** **store listing**.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户在谷歌Play上打开你的应用页面时，首先看到的是商店列表。如果应用已经发布，你可以转到**增长**、**商店存在感**，然后选择**主要商店列表**。
- en: App Details
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用详情
- en: 'You will navigate to the **App details** page. On the **App details** page,
    you need to fill in the following fields:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 你将导航到**应用详情**页面。在**应用详情**页面，你需要填写以下字段：
- en: '**App name**: Here, you provide your app’s name (the maximum number of characters
    is 50).'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用名称**：在这里，你提供你的应用名称（最大字符数为50）。'
- en: '**Short description**: Here, you provide a short text summarizing your app
    (the maximum number of characters is 80).'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简短描述**：在这里，你提供一段简短的文字总结你的应用（最大字符数为80）。'
- en: '**Full description**: This is the long description for your app. The limit
    is 4,000 characters, so you can add a lot of relevant information here, such as
    what its features are and things users need to know.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整描述**：这是你应用的详细描述。限制为4,000个字符，所以你可以在这里添加很多相关信息，例如它的功能以及用户需要知道的事情。'
- en: Note
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For the product details, you can add localized versions depending on the languages/countries
    where your app will be released.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 对于产品详情，你可以根据你的应用将在哪些语言/国家发布添加本地化版本。
- en: Your app title and description must not contain copyrighted materials and spam,
    as this might result in your app being rejected.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 你的应用标题和描述不得包含受版权保护的材料和垃圾邮件，因为这可能会导致你的应用被拒绝。
- en: Graphic Assets
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图形资产
- en: 'In this section, provide the following details:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，提供以下详细信息：
- en: An icon (a high-resolution icon that is 512 x 512).
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个图标（一个512 x 512的高分辨率图标）。
- en: A feature graphic (1,024 x 500).
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特效图形（1,024 x 500）。
- en: 2–8 screenshots of the app. If your app supports other form factors (tablet,
    TV, or Wear OS), you should also add screenshots for each form factor.
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序的2-8张截图。如果你的应用支持其他形式因素（平板电脑、电视或Wear OS），你也应该为每个形式因素添加截图。
- en: You can also add promo graphics and videos if you have any. Your app can be
    rejected if you use graphics that violate Google Play policy, so ensure that the
    images you use are your own and don’t include copyrighted or inappropriate content.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有的话，也可以添加促销图形和视频。如果你的应用使用了违反谷歌Play政策的图形，它可能会被拒绝，所以请确保你使用的图片是你的，并且不包含受版权保护或不适当的内容。
- en: Preparing the release
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备发布
- en: Before preparing your release, ensure that your build is signed with a signature
    key. If you’re publishing an app update, make sure that it is of the same package
    name, signed with the same key, and with a version code higher than the current
    one on the Play Store.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备发布之前，请确保您的构建已使用签名密钥签名。如果您正在发布应用更新，请确保它与相同的包名、使用相同的密钥签名，并且版本代码高于Play Store上的当前版本。
- en: You must also make sure you follow the developer policy (to avoid any violations)
    and make sure that your app follows the app quality guidelines. More of these
    are listed on the launch checklist, which you can see at [https://support.google.com/googleplay/android-developer/](https://support.google.com/googleplay/android-developer/).
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 您还必须确保遵循开发者政策（以避免任何违规行为），并确保您的应用遵循应用质量指南。更多内容列在发布清单中，您可以在[https://support.google.com/googleplay/android-developer/](https://support.google.com/googleplay/android-developer/)查看。
- en: APK/app bundle
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: APK/app bundle
- en: 'You can upload an APK or the newer format: Android App Bundle. Go to **Release**
    and then **App Releases**. This will display a summary of active and draft releases
    in each track.'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以上传APK或更新的格式：Android App Bundle。转到**发布**，然后**应用发布**。这将显示每个轨道中活跃和草稿发布的摘要。
- en: 'There are different tracks where you can release the app:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在不同的轨道上发布应用：
- en: Production
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产
- en: Open testing
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开放测试
- en: Closed testing
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 封闭测试
- en: Internal testing
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内部测试
- en: We’ll discuss the release tracks in detail in this chapter’s *Managing app*
    *releases* section.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章的*管理应用发布*部分详细讨论发布轨道。
- en: Select the track where you will create the release. For the production track,
    you can select **Manage** on the left. For the other tracks, click **Testing**
    first, and then select the track. To release on a closed testing track, you must
    also select **Manage track** and then create a new track by clicking on **Create
    track**.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 选择您将创建发布的轨道。对于生产轨道，您可以在左侧选择**管理**。对于其他轨道，请先点击**测试**，然后选择轨道。要在封闭测试轨道上发布，您还必须选择**管理轨道**，然后通过点击**创建轨道**来创建一个新的轨道。
- en: Once done, you can click **Create new release** at the top right of the page.
    In the **Android App Bundles and APKs to add** section, you can upload your APK
    or app bundle.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您可以在页面右上角点击**创建新发布**。在**要添加的Android App Bundles和APKs**部分，您可以上传您的APK或app
    bundle。
- en: Make sure that the app bundle or APK file is signed by your release signing
    key. The Google Play Console will not accept it if it’s not properly signed. If
    you’re publishing an update, the version code for the app bundle or APK must be
    higher than the existing version.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 确保app bundle或APK文件已由您的发布签名密钥签名。如果未正确签名，Google Play控制台将不接受。如果您正在发布更新，app bundle或APK的版本代码必须高于现有版本。
- en: You can also add a release name and release notes. The release name is for the
    developer’s use to track the release and won’t be visible to users. By default,
    the version name of the APK or app bundle uploaded is set as the release name.
    The release notes form the text that will be shown on the Play page and will inform
    users of what the updates to the app are.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以添加发布名称和发布说明。发布名称供开发者使用以跟踪发布，对用户不可见。默认情况下，上传的APK或app bundle的版本名称设置为发布名称。发布说明将显示在Play页面上，并告知用户应用的更新内容。
- en: The text for the release notes must be added inside the tags for the language.
    For example, the opening and closing tags for the default US English language
    are `<en-US>` and `</en-US>`. If your app supports multiple languages, each language
    tag will be displayed in the field for the release notes by default. You can then
    add the release notes for each language.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 发布说明的文本必须添加到语言的标签内。例如，默认的美国英语语言的开头和结尾标签是`<en-US>`和`</en-US>`。如果您的应用支持多种语言，默认情况下，每个语言标签都会显示在发布说明的字段中。然后您可以添加每种语言的发布说明。
- en: If you have already released the app, you can copy the release notes from previous
    releases and reuse or modify them by clicking the **Copy from a previous release**
    button and selecting from the list.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经发布了应用，您可以从之前的发布中复制发布说明，并通过点击**从上一个发布复制**按钮并从列表中选择来重用或修改它们。
- en: When you click the **Save** button, the release will be saved, and you can go
    back to it later. The **Review release** button will take you to the screen where
    you can review and roll out the release.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 当您点击**保存**按钮时，发布将被保存，您可以在以后返回。**审查发布**按钮将带您到可以审查和发布发布的屏幕。
- en: Rolling out a release
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布版本
- en: 'If you’re ready to roll out your release, go to the Play Console and select
    your app. Go to **Release** and select your release track. Click the **Releases**
    tab and then click on the **Edit** button next to the release:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您准备好发布您的发布，请转到Play控制台并选择您的应用。转到**发布**并选择您的发布轨道。点击**发布**标签，然后点击发布旁边的**编辑**按钮：
- en: '![Figure 17.12 – A draft release on the Production track](img/B19411_17_12.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![图17.12 – 生产轨道上的草稿发布](img/B19411_17_12.jpg)'
- en: Figure 17.12 – A draft release on the Production track
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.12 – 生产轨道上的草稿发布
- en: You can review the APK or app bundle, release names, and release notes. Click
    the **Review release** button to start the rollout for the release. The Play Console
    will open the **Review and release** screen. Here, you can review the release
    information and check whether there are warnings or errors.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以审查APK或应用包、发布名称和发布说明。点击**审查发布**按钮以开始发布的发布。Play控制台将打开**审查和发布**屏幕。在这里，您可以审查发布信息并检查是否有警告或错误。
- en: If you are updating an app, you can also select the rollout percentage when
    creating another release. Setting it to 100% means it will be available for all
    your users to download. When you set it to a lower percentage, for example, 50%,
    the release will be available to half of your existing users.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在更新一个应用，你还可以在创建另一个版本时选择发布百分比。将其设置为100%意味着它将可供所有用户下载。当你将其设置为较低的百分比，例如，50%时，发布将可供一半的现有用户使用。
- en: 'If you’re confident with the release, select the **START ROLLOUT TO PRODUCTION**
    button at the bottom of the page. After publishing your app, it will take a while
    (7 days or longer for new apps) before it is reviewed. You can see the status
    in the top-right corner of the Google Play Console. These statuses include the
    following:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对自己的发布有信心，请点击页面底部的**开始发布到生产**按钮。发布您的应用后，它需要一段时间（新应用可能需要7天或更长时间）才能进行审查。您可以在Google
    Play控制台的右上角查看状态。这些状态包括以下内容：
- en: '**Pending publication** (your new app is being reviewed)'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**待发布**（您的应用正在审查中）'
- en: '**Published** (your app is now available on Google Play)'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**已发布**（您的应用现在可在Google Play上使用）'
- en: '**Rejected** (your app wasn’t published because of a policy violation)'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拒绝**（您的应用因违反政策而未发布）'
- en: '**Suspended** (your app violated Google Play policy and was suspended)'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**暂停**（您的应用违反了Google Play政策并被暂停）'
- en: If there are issues with your app, you can resolve them and resubmit the app.
    Your app can be rejected for reasons such as copyright infringement, impersonation,
    and spam.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的应用存在问题，您可以解决它们并重新提交应用。您的应用可能因版权侵权、假冒和垃圾邮件等原因被拒绝。
- en: Once the app has been published, users can now download it. It can take some
    time before the new app or the app update becomes live on Google Play. If you’re
    trying to search for your app on Google Play, it might not be searchable. Make
    sure you publish it on the production or open track.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦应用发布，用户现在可以下载它。新应用或应用更新在Google Play上变为可用可能需要一些时间。如果您正在尝试在Google Play上搜索您的应用，它可能不可搜索。请确保您在生产和开放轨道上发布它。
- en: Managing app releases
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理应用发布
- en: You can slowly release your apps on different tracks to test them before publicly
    rolling them out to users. You can also do timed publishing to make the app available
    on a certain date instead of automatically publishing it once approved by Google.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以缓慢地在不同的轨道上发布您的应用以测试它们，然后再向用户公开发布。您还可以进行定时发布，使应用在特定日期可用，而不是一旦通过Google的审核就自动发布。
- en: Release tracks
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布轨道
- en: 'When creating a release for an app, you can choose between four different tracks:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在为应用创建发布时，您可以选择四个不同的轨道：
- en: Production is where everyone can see the app.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产是所有人都可以看到应用的地方。
- en: Open testing is targeted at wider public testing. The release will be available
    on Google Play, and anyone can join the beta program and test.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公开测试针对更广泛的公众测试。发布将在Google Play上可用，任何人都可以加入测试计划并测试。
- en: Closed testing is intended for small groups of users testing pre-release versions.
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 封闭测试旨在为测试预发布版本的小组用户。
- en: Internal testing is for the developer/tester builds while developing/testing
    an app.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内部测试是在开发/测试应用时为开发者/测试者构建的。
- en: The internal, closed, and open tracks allow developers to create a special release
    and allow real users to download it while the rest are on the production version.
    This allows you to know whether the release has bugs and quickly fix them before
    rolling it out to everyone. User feedback on these tracks will also not affect
    the public reviews/ratings of your app.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 内部、封闭和公开渠道允许开发者创建一个特殊版本，并允许真实用户在其余用户使用生产版本的同时下载它。这让你能够知道发布版本是否有错误，并在将其推广给所有人之前快速修复它们。这些渠道的用户反馈也不会影响你应用的公开评论/评分。
- en: The ideal way is to release it first on internal tracks during development and
    internal testing. When a pre-release version is ready, you can create a closed
    test for a small group of trusted people/users/testers. Then, you can create an
    open test to allow other users to try your app before the full launch to production.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 理想的方式是在开发期间和内部测试阶段首先在内部渠道发布。当预发布版本准备就绪时，你可以为少量信任的人/用户/测试者创建一个封闭测试。然后，你可以创建一个公开测试，允许其他用户在全面上线生产之前尝试你的应用。
- en: To go to each track and manage releases, you can go to the **Release** section
    of the Google Play Console and select **Production** or **Testing** and then the
    **Open testing**, **Closed testing**, or **Internal** **testing** tracks.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问每个渠道并管理发布，你可以进入Google Play控制台的**发布**部分，并选择**生产**或**测试**，然后选择**公开测试**、**封闭测试**或**内部测试**渠道。
- en: The feedback channel and opt-in link
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 反馈渠道和订阅链接
- en: In the internal, closed, and open tracks, there is a section for **Feedback
    URL or email address** and **How testers join your test**. You can provide an
    email address or a website under **Feedback URL or email address** to which testers
    can send their feedback. This is displayed when they opt into your testing program.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在内部、封闭和公开渠道中，有一个用于**反馈URL或电子邮件地址**和**测试者如何加入你的测试**的部分。你可以在**反馈URL或电子邮件地址**下提供一个电子邮件地址或网站，测试者可以将他们的反馈发送到那里。当他们在你的测试计划中订阅时，这会被显示出来。
- en: In the **How testers join your test** section, you can copy the link to share
    with your testers. They can then join the testing program using this link.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在**测试者如何加入你的测试**部分，你可以复制链接与测试者分享。他们可以使用此链接加入测试计划。
- en: Internal testing
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内部测试
- en: This track is for builds while developing/testing the app. Releases here will
    be quickly available on Google Play for internal testers. In the **Testers** tab,
    there’s a **Testers** section. You can choose an existing list or create a new
    one. There is a maximum of 100 testers for an internal test.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 此渠道用于在开发/测试应用时的构建。这里的发布将快速对内部测试者可用。在**测试者**标签页中，有一个**测试者**部分。你可以选择现有的列表或创建一个新的列表。内部测试的测试者数量上限为100。
- en: Closed testing
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 封闭测试
- en: On the **Testers** tab, you can choose **Email list** or **Google Groups** for
    the testers. If you choose email lists, choose a list of testers or create a new
    list. There is a maximum of 2,000 testers for a closed test.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在**测试者**标签页中，你可以为测试者选择**电子邮件列表**或**Google Groups**。如果你选择电子邮件列表，请选择一个测试者列表或创建一个新的列表。封闭测试的测试者数量上限为2,000。
- en: If you select `the-alpha-group@googlegroups.com`), and all the members of that
    group will become testers.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择`the-alpha-group@googlegroups.com`），该组的所有成员都将成为测试者。
- en: Open testing
  id: totrans-216
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 公开测试
- en: In the **Testers** tab, you can set **Unlimited** or **Limited number** for
    the testers. The minimum number of testers for the limited testing that you can
    set is 1,000.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在**测试者**标签页中，你可以为测试者设置**无限**或**有限数量**。你可以设置的有限测试的最小测试者数量是1,000。
- en: In the open, closed, and internal tracks, you can add users to be your testers
    for your applications. You will learn how to add testers in the next section.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在公开、封闭和内部渠道中，你可以添加用户作为你的应用的测试者。你将在下一节中学习如何添加测试者。
- en: Staged rollouts
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分阶段推广
- en: When rolling out app updates, you can release them to a small group of users
    first. Then, when the release has issues, you can stop the rollout or publish
    another update to fix the issues. If there are none, you can slowly increase the
    rollout percentage. This is called **staged rollout**.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在推出应用更新时，你可以首先将它们发布给一小群用户。然后，当发布版本出现问题时，你可以停止推广或发布另一个更新来修复问题。如果没有问题，你可以逐渐增加推广百分比。这被称为**分阶段推广**。
- en: If you have published an update to less than 100% of your users, you can go
    to the Play Console, select **Release**, click the track, then select the **Releases**
    tab. Below the release you want to update, you can see the **Manage rollout**
    drop-down menu. It will have options to update or halt the rollout.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已将更新发布给不到 100% 的用户，你可以转到 Play Console，选择**发布**，点击跟踪，然后选择**发布**选项卡。在你要更新的发布下方，你可以看到**管理发布**下拉菜单。它将包含更新或停止发布的选项。
- en: You can select **Manage rollout**, then **Update rollout** to increase the percentage
    of the rollout of the release. A dialog will appear where you can input the rollout
    percentage. You can also click the **Update** button to update the percentage.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以选择**管理发布**，然后**更新发布**来增加发布发布的百分比。将出现一个对话框，你可以输入发布百分比。你还可以点击**更新**按钮来更新百分比。
- en: A 100% rollout will make the release available to all of your users. Any percentage
    below that means the release will only be available to that percentage of your
    users.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 完全发布将使发布内容对所有用户可用。低于该百分比的任何百分比意味着发布内容仅对相应百分比的用户可用。
- en: 'If a major bug or crash is found during a staged rollout, you can go to the
    Play Console, select **Release**, click the track, then select the **Releases**
    tab. Under the release you want to update, select **Manage rollout**, then **Halt
    rollout**. A dialog will appear with additional information. Add an optional note,
    then click the **Halt rollout** button to confirm:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在分阶段发布过程中发现重大错误或崩溃，你可以转到 Play Console，选择**发布**，点击跟踪，然后选择**发布**选项卡。在你要更新的发布下面，选择**管理发布**，然后**停止发布**。将出现一个包含额外信息的对话框。添加可选的备注，然后点击**停止发布**按钮以确认：
- en: '![Figure 17.13 – The dialog for halting a staged rollout](img/B19411_17_13.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.13 – 停止分阶段发布的对话框](img/B19411_17_13.jpg)'
- en: Figure 17.13 – The dialog for halting a staged rollout
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.13 – 停止分阶段发布的对话框
- en: 'When a staged rollout is halted, the release page in your track page will be
    updated with **Rollout halted** and a **Resume** **rollout** button:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 当分阶段发布被停止时，你的跟踪页面中的发布页面将更新为**发布已停止**和**恢复发布**按钮：
- en: '![Figure 17.14 – The release page for a halted staged rollout](img/B19411_17_14.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.14 – 停止分阶段发布的发布页面](img/B19411_17_14.jpg)'
- en: Figure 17.14 – The release page for a halted staged rollout
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.14 – 停止分阶段发布的发布页面
- en: If you have fixed the issue, for example, in the backend, and there’s no need
    to release a new update, you can resume your staged rollout. To do that, go to
    the Play Console, select **Release**, click the track, then select the **Releases**
    tab. Choose the release and click the **Resume rollout** button. In the **Resume
    staged rollout** dialog, you can update the percentage and click **Resume rollout**
    to continue the rollout.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已修复问题，例如在后台，且无需发布新更新，你可以恢复你的分阶段发布。要这样做，请转到 Play Console，选择**发布**，点击跟踪，然后选择**发布**选项卡。选择发布并点击**恢复发布**按钮。在**恢复分阶段发布**对话框中，你可以更新百分比并点击**恢复发布**以继续发布。
- en: Managed publishing
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 托管发布
- en: When you roll out a new release on Google Play, it will be published in a few
    minutes. You can change it to be published at a later time. This is useful when
    targeting a specific day, for example, the same day as an iOS/web release or after
    a launch date.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在 Google Play 上发布新版本时，它将在几分钟内发布。你可以将其更改为稍后发布。这在针对特定日期时很有用，例如，与 iOS/web 发布的同一日期或发布日期之后。
- en: 'Managed publishing must be set up before creating and releasing the update
    for which you want to control the publishing. When you select your app on the
    Google Play Console, you can select **Publishing Overview** on the left side.
    In the **Managed publishing** section, click on the **Turn on managed** **publishing**
    button:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建和发布你想要控制的发布的更新之前，必须设置托管发布。当你选择 Google Play Console 上的你的应用时，你可以在左侧选择**发布概览**。在**托管发布**部分，点击**开启托管****发布**按钮：
- en: "![Figure 17.15 – Managed publishing \uFEFFin Publishing overview](img/B19411_17_15.jpg)"
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.15 – 发布概览中的托管发布](img/B19411_17_15.jpg)'
- en: Figure 17.15 – Managed publishing in Publishing overview
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.15 – 发布概览中的托管发布
- en: '**Managed publishing** dialog will be displayed. Here, you can turn managed
    publishing on or off, then click the **Save** button.'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '**托管发布**对话框将显示。在此，你可以开启或关闭托管发布，然后点击**保存**按钮。'
- en: When you turn on **Managed publishing**, you can continue adding and submitting
    updates to the app. You can see these changes in **Publishing overview** under
    the **Changes in** **review** section.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开启**管理发布**时，你可以继续添加和提交应用的更新。你可以在**更改审查**下的**发布概述**中看到这些更改。
- en: 'Once the changes have been approved, **Changes in review** will be empty and
    moved to the **Changes ready to publish** section. There, you can click on the
    **Publish changes** button. In the dialog that appears, you can click on the **Publish
    changes** button to confirm. Your update will then be published instantly:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦更改被批准，**待审查的更改**将变为空，并移动到**准备发布的更改**部分。在那里，你可以点击**发布更改**按钮。在出现的对话框中，你可以点击**发布更改**按钮以确认。然后你的更新将立即发布：
- en: "![Figure 17.16 – \uFEFFChanges ready to publish](img/B19411_17_16.jpg)"
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图 17.16 – 准备发布的更改](img/B19411_17_16.jpg)'
- en: Figure 17.16 – Changes ready to publish
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.16 – 准备发布的更改
- en: In this section, you learned about the release tracks where you can test your
    releases, perform staged rollouts for your releases, and manage your publishing
    time.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你了解了可以测试发布、执行分阶段发布的发布轨道，以及管理发布时间。
- en: Let’s test everything you’ve learned by doing an activity.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 通过一个活动来测试你所学的一切。
- en: Activity 17.01 – publishing an app
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 17.01 – 发布应用
- en: 'As the final activity of this book, you are tasked with creating a Google Play
    Developer account and publishing a newly developed Android app that you have built.
    You could publish one of the apps you’ve built as part of this book or another
    project that you’ve developed. You can use the following steps as guidelines:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 作为本书的最后一项活动，你被要求创建一个 Google Play 开发者账户并发布你构建的新 Android 应用。你可以发布本书或另一个项目中构建的应用之一。你可以使用以下步骤作为指南：
- en: Go to the Google Play Developer Console ([https://play.google.com/console](https://play.google.com/console))
    and create an account.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 Google Play 开发者控制台([https://play.google.com/console](https://play.google.com/console))并创建一个账户。
- en: Create a keystore that you can use for signing the release build.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个密钥库，你可以用它来签署发布构建。
- en: Generate an Android app bundle for release.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为发布生成 Android 应用包。
- en: Publish the app on an open beta track before releasing it to the production
    track.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在发布到生产轨道之前，在公开测试轨道上发布应用。
- en: Note
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The detailed steps for publishing an app have been explained throughout this
    chapter, so no separate solution is available for this activity. You can follow
    the exercises of this chapter to successfully complete the preceding steps. The
    exact steps required will be unique to your app and will depend on the settings
    you want to use.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 本章已解释了发布应用的详细步骤，因此没有为这个活动提供单独的解决方案。你可以遵循本章的练习来成功完成前面的步骤。所需的精确步骤将取决于你的应用和你要使用的设置。
- en: Summary
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'This chapter covered the Google Play Store: from preparing a release to creating
    a Google Play Developer account and finally publishing your app. We started with
    versioning your apps, generating a keystore, creating an APK file or Android app
    bundle and signing it with a release keystore, and storing the keystore and its
    credentials. We then moved on to registering an account on the Google Play Console,
    uploading your APK file or app bundle, and managing releases.'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了 Google Play 商店：从准备发布到创建 Google Play 开发者账户，最后发布你的应用。我们从对应用进行版本管理、生成密钥库、创建
    APK 文件或 Android 应用包并使用发布密钥库对其进行签名，以及存储密钥库及其凭证开始。然后我们转向在 Google Play 控制台中注册账户、上传你的
    APK 文件或应用包以及管理发布。
- en: This is the culmination of the work done throughout this book—publishing your
    app and opening it up to the world is a great achievement and demonstrates your
    progress throughout this course.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本书贯穿始终的工作成果的总结——发布你的应用并将其向世界开放是一项伟大的成就，并展示了你在整个课程中的进步。
- en: Throughout this book, you have gained many skills, from the basics of Android
    app development and building up to implementing features such as RecyclerViews,
    fetching data from web services, notifications, and testing. You have seen how
    to improve your apps with best practices, architecture patterns, and animations,
    and finally, you have learned how to publish them to Google Play.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的整个过程中，你获得了许多技能，从 Android 应用开发的基础到实现 RecyclerViews、从网络服务获取数据、通知和测试等功能。你看到了如何通过最佳实践、架构模式和动画来改进你的应用，最后，你学习了如何将它们发布到
    Google Play。
- en: This is still just the start of your journey as an Android developer. There
    are many more advanced skills for you to develop as you continue to build more
    complex apps of your own and expand upon what you have learned here.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是你作为安卓开发者的旅程的开始。随着你继续构建更复杂的个人应用并在此基础上扩展你的学习，你还有许多更高级的技能需要掌握。
- en: Remember that Android is continuously evolving, so keep yourself up to date
    with the latest Android releases. You can go to [https://developer.android.com/](https://developer.android.com/)
    to find the latest resources and further immerse yourself in the Android world.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，安卓系统是持续演进的，所以请确保自己跟上最新的安卓版本。你可以访问[https://developer.android.com/](https://developer.android.com/)来获取最新的资源，并进一步沉浸在安卓的世界中。
