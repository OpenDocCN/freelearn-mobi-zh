["```swift\nstage.quality = StageQuality.LOW;\n\n```", "```swift\nimport flash.display.StageQuality;\n\n```", "```swift\n    for(var i:uint = 0; i < 10; i++)\n    {\n    var monkey:MovieClip = new Monkey();\n    monkey.x = Math.random() * stage.stageWidth;\n    monkey.y = Math.random() * stage.stageHeight;\n    monkey.cacheAsBitmap = true;\n    monkeys.push(monkey);\n    addChild(monkey);\n    }\n\n    ```", "```swift\nmonkey.cacheAsBitmap = true;\n\n```", "```swift\n    var matrix:Matrix = new Matrix();\n    for(var i:uint = 0; i < 10; i++)\n    {\n    var monkey:MovieClip = new Monkey(); \n    monkey.x = Math.random() * stage.stageWidth;\n    monkey.y = Math.random() * stage.stageHeight;\n    monkey.rotation = Math.random() * 360;\n    monkey.cacheAsBitmap = true;\n    monkey.cacheAsBitmapMatrix = matrix; \n    monkeys.push(monkey);\n    addChild(monkey);\n    }\n\n    ```", "```swift\n    import flash.geom.Matrix;\n\n    ```", "```swift\nmonkey.cacheAsBitmap = true;\nmonkey.cacheAsBitmapMatrix = matrix;\n\n```", "```swift\nvar matrix:Matrix = new Matrix();\nmatrix.scale(0.5, 0.5);\ndisplayObject.cacheAsBitmap = true;\ndisplayObject.cacheAsBitmapMatrix = matrix;\n\n```", "```swift\ndisplayObject.cacheAsBitmap = true;\ndisplayObject.cacheAsBitmapMatrix = new Matrix();\n\n```", "```swift\nfor(var i:uint = 0; i < 100; i++)\n{\ndisplayObjects[i].cacheAsBitmap = true; \ndisplayObjects[i].cacheAsBitmapMatrix = new Matrix(); \n}\n\n```", "```swift\nvar matrix:Matrix = new Matrix(); \nfor(var i:uint = 0; i < 100; i++)\n{\ndisplayObjects[i].cacheAsBitmap = true;\ndisplayObjects[i].cacheAsBitmapMatrix = matrix; \n}\n\n```", "```swift\nbubble.cacheAsBitmap = true;\nbubble.cacheAsBitmapMatrix = new Matrix();\n\n```", "```swift\nimport flash.geom.Matrix;\n\n```", "```swift\n    import flash.display.Bitmap; \n    import flash.display.MovieClip;\n\n    ```", "```swift\n    public function Main() {\n    var bitmapData:MonkeyBitmapData = new MonkeyBitmapData();\n    ,\n    }\n\n    ```", "```swift\n    public function Main() {\n    var bitmapData:MonkeyBitmapData = new MonkeyBitmapData();\n    var bitmap:Bitmap = new Bitmap(bitmapData); \n    }\n\n    ```", "```swift\n    public function Main() {\n    var bitmapData:MonkeyBitmapData = new MonkeyBitmapData();\n    var bitmap:Bitmap = new Bitmap(bitmapData);\n     bitmap.x = 23;\n    bitmap.y = 57;\n    addChild(bitmap); \n    }\n\n    ```", "```swift\n    import flash.display.MovieClip;\n     import flash.display.Bitmap;\n    import flash.display.Loader;\n    import flash.events.Event;\n    import flash.net.URLRequest; \n\n    ```", "```swift\n    public function Main() {\n    var loader:Loader = new Loader();\n    loader.contentLoaderInfo.addEventListener(Event.COMPLETE,\n    bitmapLoaded);\n    loader.load(new URLRequest(\"monkey.png\")); \n    }\n\n    ```", "```swift\n    private function bitmapLoaded(e:Event):void {\n    var b:Bitmap = e.target.content as Bitmap;\n    b.x = 23;\n    b.y = 57;\n    addChild(b);\n    msgField.text = \"loaded\";\n    }\n\n    ```", "```swift\nloader.load(new URLRequest(\"monkey.png\"));\n\n```", "```swift\nvar b:Bitmap = e.target.content as Bitmap;\n\n```", "```swift\nprivate function bitmapLoaded(e:Event):void {\nvar b:Bitmap = e.target.content as Bitmap;\nvar bd:BitmapData = b.bitmapData; \n}\n\n```", "```swift\nprivate function bitmapLoaded(e:Event):void {\nvar b:Bitmap = e.target.content as Bitmap;\nvar bd:BitmapData = b.bitmapData;\nbd.dispose(); \n}\n\n```", "```swift\n    import flash.display.Bitmap;\n     import flash.display.BitmapData;\n    import flash.display.Loader; \n    import flash.display.MovieClip;\n     import flash.events.Event;\n    import flash.geom.Point;\n    import flash.geom.Rectangle;\n    import flash.net.URLRequest; \n\n    ```", "```swift\n    public class Main extends MovieClip {\n     static private const GRID_W:uint = 2;\n    static private const GRID_H:uint = 2;\n    static private const FRAME_W:uint = 192;\n    static private const FRAME_H:uint = 256; \n\n    ```", "```swift\n    private var bitmaps:Array = [];\n\n    ```", "```swift\n    private var monkey:Bitmap = new Bitmap();\n\n    ```", "```swift\n    public function Main() {\n     var loader:Loader = new Loader();\n    loader.contentLoaderInfo.addEventListener(Event.COMPLETE, bitmapLoaded);\n    loader.load(new URLRequest(\"sprite-sheet.png\"));\n    }\n\n    ```", "```swift\n    private function bitmapLoaded(e:Event):void {\n    sliceSpriteSheet(e.target.content.bitmapData);\n    createMonkey();\n    }\n\n    ```", "```swift\n    private function sliceSpriteSheet(sheet:BitmapData):void {\n    for(var y:uint = 0; y < GRID_H; y++)\n    {\n    for(var x:uint = 0; x < GRID_W; x++)\n    {\n    var bd:BitmapData = new BitmapData(\n    FRAME_W, FRAME_H, true);\n    var srcRect:Rectangle = new Rectangle(\n    (x * FRAME_W), (y * FRAME_H), FRAME_W, FRAME_H);\n    bd.copyPixels(sheet, srcRect, new Point(0,0));\n    bitmaps.push(bd);\n    }\n    }\n    sheet.dispose();\n    }\n\n    ```", "```swift\n    private function createMonkey():void {\n    monkey = new Bitmap(bitmaps[0]);\n    monkey.x = 64;\n    monkey.y = 112;\n    addChild(monkey);\n    }\n\n    ```", "```swift\n    static private const MAX_FRAMES:uint = GRID_W * GRID_H;\n\n    ```", "```swift\n    private var frame:uint = 0;\n\n    ```", "```swift\n    private function bitmapLoaded(e:Event):void {\n    sliceSpriteSheet(e.target.content.bitmapData);\n    createMonkey();\n    addEventListener(Event.ENTER_FRAME, update);\n    }\n\n    ```", "```swift\n    private function update(e:Event):void {\n    monkey.bitmapData = bitmaps[frame];\n    if(++frame == MAX_FRAMES)\n    {\n    frame = 0;\n    }\n    }\n\n    ```", "```swift\nmonkey.bitmapData = bitmaps[frame];\n\n```", "```swift\nstatic private const SEQUENCE:Array = [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3];\n\n```", "```swift\nprivate function update(e:Event):void {\nmonkey.bitmapData = bitmaps[SEQUENCE[frame]];\nif(++frame == SEQUENCE.length)\n{\nframe = 0;\n}\n}\n\n```"]