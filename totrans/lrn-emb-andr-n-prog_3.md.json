["```java\n~$ sudo apt-get install openjdk-7-jdk\n\n```", "```java\n~$ sudo update-alternative –config javac\n\n```", "```java\n~$ sudo apt-get install bison g++-multilib git gperf libxml2-utils \\\n make python-networkx zlib1g-dev:i386 zip\n\n```", "```java\n~$ hdiutil create -type SPARSE -fs 'Case-sensitive Journaled HFS+' \\-size 50g ~/android.dmg\n\n```", "```java\n~$ hdiutil attach ~/android.dmg -mountpoint /Volumes/android-disk;\n~$ hdiutil detach /Volumes/android-disk;\n\n```", "```java\n~$ hdiutil resize -size <new-size-you-want>g ~/android.dmg.sparseimage\n\n```", "```java\n~$ POSIXLY_CORRECT=1 sudo port install gmake bison libsdl git gnupg\n\n```", "```java\n~$ ulimit –S –n 1024 \n\n```", "```java\n### DO NOT EDIT THIS FILE ###\ninclude build/core/main.mk\n### DO NOT EDIT THIS FILE ###\n```", "```java\n~$ . build/envsetup.sh\n\n```", "```java\n:~$ hmm\n\n```", "```java\n$ make menuconfig\n\n```", "```java\n$ export TARGET_PRODUCT=aosp_arm\n\n```", "```java\n$ export TARGET_BUILD_VARIANT=eng\n\n```", "```java\n$ lunch\n\n```", "```java\n:~$ make –j8\n\n```", "```java\n:~$ make –j8 showcommands\n\n```", "```java\n~$ make art\n\n```", "```java\n$ mm\n\n```", "```java\n~$ make clean-<module>\n\n```", "```java\n~$ make clean\n\n```", "```java\n$ make modules\n\n```", "```java\n$ make snod\n\n```", "```java\n$ make module_name\n\n```", "```java\n:$ make module_name snod\n\n```", "```java\n:$ make tools\n\n```", "```java\n~$ . build/envsetup.sh\n~$ lunch sdk-eng\n~$ make\n\n```", "```java\n~$ cd ndk/build/tools\n~$ export ANDROID_NDK_ROOT=path/to/WORKING_DIRECTORY/ndk\n~$ ./make-release\n\n```", "```java\n~$ make cts\n\n```", "```java\nLOCAL_PATH:= $(call my-dir)\ninclude $(CLEAR_VARS)\n\nLOCAL_SRC_FILES:=\\\n        netcat.c \\\n        atomicio.c\n\nLOCAL_CFLAGS:=-O2 -g\n\nLOCAL_MODULE_TAGS := eng\n\nLOCAL_MODULE_PATH := $(TARGET_OUT_OPTIONAL_EXECUTABLES)\n\nLOCAL_MODULE:=nc\n\n# gold in binutils 2.22 will warn about the usage of mktemp\nLOCAL_LDFLAGS += -Wl,--no-fatal-warnings\n\ninclude $(BUILD_EXECUTABLE)\n```", "```java\nLOCAL_PATH:= $(call my-dir)\n```", "```java\ninclude $(CLEAR_VARS)\n```", "```java\nLOCAL_SRC_FILES:=\\\n        netcat.c \\\n        atomicio.c\n```", "```java\nLOCAL_CFLAGS:=-O2 -g\n```", "```java\nLOCAL_MODULE_TAGS := eng\n```", "```java\nLOCAL_MODULE_PATH := $(TARGET_OUT_OPTIONAL_EXECUTABLES)\n```", "```java\nLOCAL_MODULE:=nc\n```", "```java\nLOCAL_LDFLAGS += -Wl,--no-fatal-warnings\n```", "```java\ninclude $(BUILD_EXECUTABLE)\n```", "```java\n    include $(BUILD_EXECUTABLE)\n    ```", "```java\nLOCAL_PATH:= $(call my-dir)\ninclude $(CLEAR_VARS)         \n\nLOCAL_SRC_FILES:= your_executable.c       \nLOCAL_MODULE:= your_executable            \n\ninclude $(BUILD_EXECUTABLE)\n```", "```java\nLOCAL_PATH:= $(call my-dir)     \ninclude $(CLEAR_VARS)\n\nLOCAL_SRC_FILES:= foo.c bar.c\nLOCAL_MODULE:= libmysharedlib\nLOCAL_PRELINK_MODULE := false   # Prevent from prelink error\n\ninclude $(BUILD_SHARED_LIBRARY) \n```", "```java\nLOCAL_PATH:= $(call my-dir)\ninclude $(CLEAR_VARS)\nLOCAL_MODULE_TAGS:= eng\nLOCAL_SRC_FILES:= $(call all-java-files-under src)\nLOCAL_PACKAGE_NAME:= MyApplication\n\ninclude $(BUILD_PACKAGE)\n```", "```java\n~$ mkdir –p device/irarref/f488\n\n```", "```java\n    LOCAL_PATH:= $(call my-dir)\n    Include $(CLEAN_VARS)\n\n    Ifneq ($(filter f488, $(TARGET_DEVICE)),)\n    Include $(call all-makefile-unter, $(LOCAL_PATH))\n    Endif\n    ```", "```java\n    PRODUCT_MAKEFILES:= $(LOCAL_DIR)/full_f488.mk\n    ```", "```java\n    $(call inherit-product, \n    $(SRC_TARGET_DIR)/product/aosp_base.mk\n    #\n    DEVICE_PACKAGE_OVERLAY:=\n\n    PRODUCT_PACKAGE+=\n    PRODUCT_COPY_FILES+=\n    PRODUCT_NAME:= full_f488\n    PRODUCT_DEVICE:= f488\n    PRODUCT_MODEL:= Android for Irarref F488\n    ```", "```java\n    TARGET_NO_BOOTLOADER := true\n    TARGET_NO_KERNEL := true\n    TARGET_CPU_ABI := armeabi\n    HAVE_HTC_AUDIO_DRIVER := true\n    BOARD_USES_GENERIC_AUDIO := true\n\n    # no hardware camera\n    USE_CAMERA_STUB := true\n\n    # CPU\n    TARGET_ARCH_VARIANT := armv7-a-neon\n    ARCH_ARM_HAVE_TLS_REGISTER := true\n    ```", "```java\n    add_lunch_combo full_f488-eng\n    ```", "```java\n:$ mkdir WORKING_DIRECTORY\n:$ cd WORKING_DIRECTORY\n:$ repo init –u https://android.googlesource.com/platform/manifest -b \\\nandroid-5.1.1_r9\n:$ repo sync\n\n```", "```java\n:$ build/envsetup.sh\n\n```", "```java\n:$ lunch\n\n```", "```java\naosp_arm-eng\n\n```", "```java\n:$ make –j8\n\n```", "```java\n$ emulator -system out/target/product/generic/system.img -ramdisk out/target/product/generic/ramdisk.img -data out/target/product/generic/userdata-qemu.img\n\n```"]