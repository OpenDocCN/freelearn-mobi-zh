["```java\n$ sudo apt-get update\n$ sudo apt-get -y install docker.io\n\n```", "```java\n$ sudo wget -qO- https://get.docker.com/ | sh\n\n```", "```java\n$ docker version\nClient version: 1.6.0\nClient API version: 1.18\nGo version (client): go1.4.2\nGit commit (client): 4749651\n...\n\n```", "```java\n$ docker run hello-world\nUnable to find image 'hello-world' locally\nPulling repository hello-world\n91c95931e552: Download complete \na8219747be10: Download complete \nHello from Docker.\n\n```", "```java\n$ docker pull ubuntu\n\nlatest: Pulling from ubuntu\n\ne9e06b06e14c: Pull complete \na82efea989f9: Pull complete \n37bea4ee0c81: Pull complete \n...\n\n```", "```java\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED VIRTUAL SIZE\n<none>              <none>              07f8e8c5e660        14 hours ago        188.3 MB\npython              2.7                 912046e33f03        8 days ago          747.9 MB\nubuntu              latest              d0955f21bf24        6 weeks ago         188.3 MB\n\n```", "```java\n$ docker run -dit --name \"testUbuntu1\" ubuntu /bin/bash\nb25a9d5806a71f411631c4bb5c4c2dd4d059d874a24fee2210110ac9e8c2909a\n\n```", "```java\n$ docker run -dit --name \"testUbuntu2\" ubuntu /bin/bash\nf9cdd046cbf47f957ef972690592245f27784f5f79ded6ca836afab54b4f9a8f\n\n```", "```java\n$ docker ps \nCONTAINER ID      IMAGE             COMMAND         CREATED         STATUS            PORTS             NAMES\nb25a9d5806a7      ubuntu:latest     /bin/bash         2 minutes ago   Up 2 minutes                          testUbuntu1 \n\n```", "```java\n$ docker ps -a\nCONTAINER ID      IMAGE             COMMAND           CREATED         STATUS                   PORTS             NAMES\nf8148e333eb3      ubuntu:latest     echo hello world  7 seconds ago   Exited (1) 7 seconds ago                     testUbuntu2 \nb25a9d5806a7      ubuntu:latest     /bin/bash         3 minutes ago   Up 3 minutes                                 testUbuntu1\n\n```", "```java\n$ docker start|stop containername|containerid\n\n```", "```java\n$ docker stop testUbuntu1\n$ docker start f8148e333eb3\n\n```", "```java\n$ docker attach testUbuntu1\n[Enter]\nroot@b25a9d5806a7:/#\n\n```", "```java\n$ docker rm testUbuntu2\ntestUbuntu2\n\n```", "```java\n$ docker rmi ubuntu\n\n```", "```java\n$sudo cp -r dir1 /var/lib/docker/aufs/mnt/b25a9d5806a71f411631c4bb5c4c2dd4d059d874a24fee2210110ac9e8c2909a/home/mycontents/\n\n```", "```java\n$ docker run -ditP --name testUbuntu -v /home/user1/dir1:/home/dir1 ubuntu\n\n```", "```java\n$ docker cp testUbuntu1:/home/dir1/readme.txt .\n\n```", "```java\n$ docker inspect testUbuntu1\n[{\n  \"Args\": [],\n  \"Config\": {\n    \"AttachStderr\": false,\n    \"AttachStdin\": false,\n    \"AttachStdout\": false,\n    \"Cmd\": [\n    \"/bin/bash\"\n    ],\n    \"CpuShares\": 0,\n    \"Cpuset\": \"\",\n    \"Domainname\": \"\",\n    \"Entrypoint\": null,\n    \"Env\": [\n    \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n    ],\n...\n...\n    \"PublishAllPorts\": false,\n    \"VolumesFrom\": null\n  },\n  \"HostnamePath\": \"/var/lib/docker/containers/b25a9d5806a71f411631c4bb5c4c2dd4d059d874a24fee2210110ac9e8c2909a/hostname\",\n  \"HostsPath\": \"/var/lib/docker/containers/b25a9d5806a71f411631c4bb5c4c2dd4d059d874a24fee2210110ac9e8c2909a/hosts\",\n\"Id\": \"b25a9d5806a71f411631c4bb5c4c2dd4d059d874a24fee2210110ac9e8c2909a\",\n\"Image\": \"d0955f21bf24f5bfffd32d2d0bb669d0564701c271bc3dfc64cfc5adfdec2d07\",\n  \"MountLabel\": \"\",\n  \"Name\": \"/testUbuntu1\",\n  \"NetworkSettings\": {\n      \"Bridge\": \"docker0\",\n      \"Gateway\": \"172.17.42.1\",\n      \"IPAddress\": \"172.17.0.22\",\n      \"IPPrefixLen\": 16,\n      \"PortMapping\": null,\n      \"Ports\": {}\n  },\n  \"Path\": \"/bin/bash\",\n...\n...\n}\n```", "```java\n# Docker Upstart and SysVinit configuration file\n\n# Customize location of Docker binary (especially for development testing).\n#DOCKER=\"/usr/local/bin/docker\"\n\n# Use DOCKER_OPTS to modify the daemon startup options.\n#DOCKER_OPTS=\"--dns 8.8.8.8 --dns 8.8.4.4\"\n\n# If you need Docker to use an HTTP proxy, it can also be specified here.\n#export http_proxy=\"http://127.0.0.1:3128/\"\n\n# This is also a handy place to tweak where Docker's temporary files go.\n#export TMPDIR=\"/mnt/bigdrive/docker-tmp\"\n```", "```java\n$ docker commit  -m \"Creating new image\" testUbuntu1 user1/ubuntu_1\n\n```", "```java\n$ docker run -dit --name testUbuntu_1  user1/ubuntu_1\n\n```", "```java\n$ docker run -it --rm -p 8181:8080 --name \"userdetailsservice\" tomcat:7.0.57-jre7\nUsing CATALINA_BASE:   /usr/local/tomcat\nUsing CATALINA_HOME:   /usr/local/tomcat\nUsing CATALINA_TMPDIR: /usr/local/tomcat/temp\nUsing JRE_HOME:        /usr\nUsing CLASSPATH:     /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar\nMay 03, 2015 5:03:07 PM org.apache.catalina.startup.VersionLoggerListener log\nINFO: Server version:        Apache Tomcat/7.0.57\n...\n\n```", "```java\n    $ docker run -it --rm -p 8181:8080 -v ~/userdetailsservice:/usr/local/tomcat/webapps/userdetailsservice --name \"userdetailsservice\" tomcat:7.0.57-jre7\n\n    ```", "```java\n    $ docker run -it --rm -p 8181:8080 --name \"userdetailsservice\" tomcat:7.0.57-jre7\n\n    ```", "```java\n    $ docker ps --no-trunc\n    CONTAINER ID                                                       IMAGE                COMMAND             CREATED              STATUS               PORTS               NAMES\n    1ad08559109a0f5eec535d05d55e76c5ad3646ae7bb6f4fffa92ad4721955349   tomcat:7.0.57-jre7   \"catalina.sh run\"   About a minute ago   Up About a minute   0.0.0.0:8181->8080/\n\n    ```", "```java\n    $ sudo cp ~/UserDetailsService/build/lib/userdetailsservice.war /var/lib/docker/aufs/mnt/1ad08559109a0f5eec535d05d55e76c5ad3646ae7bb6f4fffa92ad4721955349/usr/local/tomcat/webapps\n\n    ```", "```java\n    $ docker run -it --rm -p 8181:8080 -v ~/Downloads/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml --name \"userdetailsservice\" tomcat:7.0.57-jre7\n\n    ```", "```java\n    $ docker run -it --rm -p 8181:8080 --name \"userdetailsservice\" tomcat:7.0.57-jre7 command.\n\n    ```", "```java\n    $ docker exec -it userdetailsservice /bin/bash\n\n    ```", "```java\nroot@0ff13ab7f076:/usr/local/tomcat# apt-get update\nroot@0ff13ab7f076:/usr/local/tomcat# apt-get install vim\n\n```", "```java\n<role rolename=\"manager-gui\"/>\n<user username=\"admin\" password=\"admin\" roles=\"manager-gui\"/>\n```", "```java\n$ docker commit 0ff13ab7f076 usedetailsimage:v1\n1d4cbdbe2b6ba97048431dbe2055f1df4d780cf5564200c5946e0944baf84b8f\n\n```", "```java\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED   VIRTUAL SIZE\nusedetailsimage     v1                  1d4cbdbe2b6b        8 seconds ago       384.4 MB\nhello-world         latest              91c95931e552        3 weeks ago         910 B\ntomcat              7.0.57-jre7         b215f59f9987        3 months ago        345.9 MB\n\n```", "```java\n$ docker run -it --rm -p 8181:8080 --name \"userdetailsservice\" usedetailsimage:v1\n\n```", "```java\n#!/bin/sh\n\nif [ -z \"$1\" ]; then\n BUILD_HOME=$(pwd)/UserDetailsService\nelse\n BUILD_HOME=$1\nfi\n\ndocker pull tomcat:7.0.57-jre7\n\nrunningContainer=`docker ps -l | grep userdetailsservice | awk '{print $1}'`\n\nif [ ! -z \"$runningContainer\" ]\nthen\n docker stop $runningContainer\n docker rm $runningContainer\nfi\n\ndocker run -d -v $BUILD_HOME/build/libs/userdetailsservice.war:/usr/local/tomcat/webapps/userdetailsservice.war -p 8181:8080 --name \"userdetailsservice\" tomcat:7.0.57-jre7\n\n```", "```java\n@Test \npublic void createUser() {\n  User request = new User(\"User1\", \"User user\", \"user@abc.com\");\n  User response = resttemplate.postForObject(URL, request, User.class);\n  Assert.assertEquals(response.getEmail(), \"user@abc.com\");\n}\n\n@Test(dependsOnMethods=\"createUser\")\npublic void getUsers() {\n  User[] response = resttemplate.getForObject(URL, User[].class);\n  Assert.assertEquals(response.length, 1);\n}\n```"]