["```java\n#include \"variant.h\"\n#include <stdio.h>\n#include <adk.h>\n\n#define  LED_PIN  13\n\n// Accessory descriptor. It's how Arduino identifies itself to Android.\nchar descriptionName[] = \"ArduinoADK\"; \nchar modelName[] = \"UDOO_ADK\";           // Arduino Accessory name (Need to be the same defined in the Android App)\nchar manufacturerName[] = \"Packt\";     // Manufacturer (Need to be the same defined in the Android App)\n\nchar versionNumber[] = \"1.0\";            // version (Need to be the same defined in the Android App)\nchar serialNumber[] = \"1\";\nchar url[] = \"http://www.packtpub.com\";      // If there isn't any compatible app installed, Android suggest to visit this url\n\nUSBHost Usb;\nADK adk(&Usb, manufacturerName, modelName, descriptionName, versionNumber, url, serialNumber);\n\n#define RCVSIZE 128\nuint8_t buf[RCVSIZE];\nuint32_t bytesRead = 0;\n\nvoid setup() {\n    Serial.begin(115200);   \n    pinMode(LED_PIN, OUTPUT);\n    delay(500);\n    Serial.println(\"Starting...\");\n}\n\nvoid loop() {\n    Usb.Task();\n\n    if (adk.isReady()) {\n      adk.read(&bytesRead, RCVSIZE, buf);// read data into buf variable\n      if (bytesRead > 0) {\n        if (parseCommand(buf[0]) == 1) {// compare received data\n          // Received \"1\" - turn on LED\n          digitalWrite(LED_PIN, HIGH);\n        } else if (parseCommand(buf[0]) == 0) {\n          // Received \"0\" - turn off LED\n          digitalWrite(LED_PIN, LOW); \n        }  \n      }\n    } else {\n      digitalWrite(LED_PIN , LOW); // turn off light\n    }  \n\n    delay(10);\n}\n\n// the characters sent to Arduino are interpreted as ASCII, we decrease 48 to return to ASCII range.\nuint8_t parseCommand(uint8_t received) {\n  return received - 48;\n}\n```", "```java\ndependencies {\n    compile 'me.palazzetti:adktoolkit:0.3.0'\n}\n```", "```java\n<intent-filter>\n  <action android:name=\"android.hardware.usb.action.USB_ACCESSORY_ATTACHED\"/>\n</intent-filter>\n<meta-data\n  android:name=\"android.hardware.usb.action.USB_ACCESSORY_ATTACHED\"\n  android:resource=\"@xml/accessory_filter\"/>\n```", "```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n  <usb-accessory\n    manufacturer=\"Packt\"\n    model=\"UDOO_ADK\"\n    version=\"1.0\"/>\n</resources>\n```", "```java\n<ToggleButton \n android:id=\"@+id/toggleButtonLED\"\n android:textOn=\"Turn OFF\" \n android:textOff=\"Turn ON\" \n android:layout_width=\"500dp\" \n android:layout_height=\"200dp\" \n android:layout_centerVertical=\"true\" \n android:layout_centerHorizontal=\"true\"\n android:textSize=\"50sp\"\n android:onClick=\"blinkLED\"/>\n```", "```java\npublic void blinkLED(View v) {\n    if (buttonLED.isChecked()) {\n        adkManager.write(\"1\");\n    } else {\n        adkManager.write(\"0\");\n    }\n}\n```", "```java\npublic class UDOOBlinkLEDActivity extends Activity {\n\n    private ToggleButton buttonLED;\n\n    private AdkManager adkManager;\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n        buttonLED = (ToggleButton) findViewById(R.id.toggleButtonLED);\n\n        adkManager = new AdkManager(this);\n        registerReceiver(adkManager.getUsbReceiver(), adkManager.getDetachedFilter());\n    }\n\n    @Override\n    public void onResume() {\n        super.onResume();\n        adkManager.open();\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        adkManager.close();\n    }\n\n    public void blinkLED(View v) {\n        if (buttonLED.isChecked()) {\n            adkManager.write(\"1\");\n        } else {\n            adkManager.write(\"0\");\n        }\n    }\n}\n```"]