["```swift\n// TeamID + Bundle Identifier\nNSFileManager *fileManager = [NSFileManagerdefaultManager];\nNSURL *CloudURL = [fileManager URLForUbiquityContainerIdentifier: @\"TEAMID.com.yourcompany.iCloudExample\"];\n// Log our iCloud URL to the console window\nNSLog(@\"iCloudURL: %@\", [CloudURLabsoluteString]);\n// Get a reference to the user's cloud store.\nNSUbiquitousKeyValueStore *cloudStore = [NSUbiquitousKeyValueStoredefaultStore];\n// Store our Cloud URL to the iCloudURL key.\n[cloudStoresetString:[CloudURLabsoluteString] forKey:@\"CloudURL\"];\n// This is important to include as it stores the\n// values you set earlier on iCloud.\n[cloudStore synchronize];\n\n```", "```swift\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n<key>application-identifier</key>\n<string>AXEUZ3F6VR.com.geniesoftstudios</string> <key>com.apple.developer.ubiquity-container-identifiers</key>\n<array>\n<string>TEAMID.com.yourcompany.iCloudExample</string>\n</array>\n<key>com.apple.developer.ubiquity-kvstore-identifier</key>\n<string>TEAMID.com.yourcompany.iCloudExample</string>\n<key>get-task-allow</key>\n<true/>\n</dict>\n</plist>\n\n```", "```swift\n    #import<UIKit/UIKit.h>\n    @interfaceiCloudExampleViewController : UIViewController {\n    UILabel *iCloudURL;\n    UILabel *documentPath;\n    UILabel *authorName;\n    }\n    - (IBAction)getCloudURL:(id)sender;\n    - (IBAction)storeDocument:(id)sender;\n    - (IBAction)readDocument:(id)sender;\n    @property (strong, nonatomic) IBOutletUILabel *iCloudURL;\n    @property (strong, nonatomic) IBOutletUILabel *documentPath;\n    @property (strong, nonatomic) IBOutletUILabel *authorName;\n    @end\n\n    ```", "```swift\n    #import \"iCloudExampleViewController.h\" #import<Foundation/Foundation.h>\n    #import<Foundation/NSObject.h>\n    @implementationiCloudExampleViewController; @synthesizeiCloudURL;\n    @synthesizedocumentPath;\n    @synthesizeauthorName;\n\n    ```", "```swift\n    // Function to obtain the iCloud URL based on the TEAMID\n    // and the Bundle Identifier\n    - (IBAction)getCloudURL:(id)sender {\n    // TeamID + Bundle Identifier\n    NSFileManager *fileManager = [NSFileManagerdefaultManager];\n    NSURL *CloudURL = [fileManager URLForUbiquityContainerIdentifier :@\"TEAMID.com.yourcompany.iCloudExample\"];\n    iCloudURL.text = [@\"iCloudURL = \" stringByAppendingFormat:@\"%@\", [CloudURLabsoluteString ]];\n    iCloudURL.numberOfLines = 4;\n    iCloudURL.textColor = [UIColorblueColor];\n    }\n\n    ```", "```swift\n    - (IBAction)storeDocument:(id)sender {\n    // Store document in the Cloud\n    NSArray *searchPath = NSSearchPathForDirectoriesInDomains( NSDocumentDirectory, NSUserDomainMask, YES);\n    NSString *docPath = [searchPath objectAtIndex:0];\n    NSString *fileName = [NSStringstringWithFormat: @\"%@/iCloudExample.doc\",docPath];\n    NSString *fileContent = @\"Welcome to storing documents using icloud. iCloud Rocks!!!\";\n    // Now Save the content to the documents directory\n    [fileContentwriteToFile:fileNameatomically: NOencoding:NSStringEncodingConversionAllowLossyerror:nil];\n    NSURL *fileURL = [NSURL URLWithString:fileName];\n    documentPath.text = [@\"DocPath = \" stringByAppendingFormat: @\"%@\", [fileURLabsoluteString ]];\n    documentPath.textColor = [UIColorblueColor];\n    documentPath.lineBreakMode = UILineBreakModeWordWrap;\n    }\n\n    ```", "```swift\n    - (IBAction)readAuthor:(id)sender {\n    NSUbiquitousKeyValueStore *cloudStore = [NSUbiquitousKeyValueStoredefaultStore];\n    [cloudStoresetString:@\"John Grisham\" forKey:@\"FavoriteAuthor\"];\n    // Important, as it first stores your in memory key values\n    // to disk based storage, prior to eventually storing this\n    //within iCloud\n    [cloudStore synchronize];\n    // Get the latest values from iCloud\n    authorName.text = [@\"Favorite Author = \" stringByAppendingFormat :@\"%@\", [cloudStorestringForKey:@\"FavoriteAuthor\"]];\n    authorName.textColor = [UIColorredColor];\n    authorName.lineBreakMode = UILineBreakModeWordWrap;\n    }\n\n    ```", "```swift\n// TeamID + Bundle Identifier\nNSFileManager *fileManager = [NSFileManagerdefaultManager];\nNSURL *CloudURL = [fileManager URLForUbiquityContainerIdentifier: @\"TEAMID.com.yourcompany.iCloudExample\"];\nNSString *docString = @\"Documents\";\nNSURL *tempURL = [NSURL URLWithString:docString];\nBOOL myVal = [fileManagersetUbiquitous:YESitemAtURL: fileURLdestinationURL:CloudURLerror:NULL];\n\n```", "```swift\nNSMetadataQuery *mdQuery = [[NSMetadataQueryalloc] init];\n[mdQuerysetPredicate:[NSPredicatepredicateWithFormat:@\"(kMDItemFSName LIKE 'iCloudDoc *')\"]];\n[[NSNotificationCenterdefaultCenter] addObserver:selfselector: @selector(processQuery:) name:nilobject:mdQuery];\n[mdQuerystartQuery];\n\n```", "```swift\n-(void)processQuery:(NSNotification *)notification {\nNSMetadataQuery *mdQuery = [notification object];\nif ([[notification name] isEqualToString: NSMetadataQueryDidStartGatheringNotification]) {\nNSLog(@\"%@ %@ Query started\", [self class], NSStringFromSelector(_cmd));\n}\nelse if ([[notification name] isEqualToString: NSMetadataQueryGatheringProgressNotification]) {\nNSLog(@\"%@ %@ %ld\", [self class], NSStringFromSelector(_cmd), (long)[mdQueryresultCount]);\n}\nelse if ([[notification name] isEqualToString: NSMetadataQueryDidFinishGatheringNotification]) {\nNSUIntegertheResultCount = [mdQueryresultCount];\ntheResultCount = 20;\nfor (NSUIntegeri; i<theResultCount; i++) {\nNSLog(@\"%@ %@ %ld %@\", [self class], NSStringFromSelector(_cmd), (long)i, [mdQueryresultAtIndex:i]);\n}\n}\nelse {\nNSLog(@\"%@ %@ NSMetadataQueryDidUpdateNotification: %@\", [self class], NSStringFromSelector(_cmd), notification);\n}\n}\n\n```"]