["```swift\n    NSString *samplePath = [[NSBundle mainBundle] pathForResource:@\"sample-sound\" ofType:@\"caf\"];\n    ```", "```swift\n    NSURL *sampleURL = [NSURL fileURLWithPath:samplePath];\n    ```", "```swift\n    AudioServicesCreateSystemSoundID((__bridge CFURLRef)sampleURL, &self.sampleSound);\n    ```", "```swift\n    AudioServicesPlaySystemSound(self.sampleSound);\n    ```", "```swift\n    #import <AVFoundation/AVFoundation.h>\n    ```", "```swift\n    NSError *error;\n    AVAudioPlayer *backgroundAudioPlayer = [AVAudioPlayer alloc] initWithContentsOfURL:file error:&error];\n    ```", "```swift\n    [backgroundAudioPlayer prepareToPlay];\n    ```", "```swift\n    backgroundAudioPlayer.volume = 1.0;\n    backgroundAudioPlayer.numberOfLoops = -1;\n    [backgroundAudioPlayer play];\n    ```", "```swift\nNSString *samplePath = [[NSBundle mainBundle] pathForResource:@\"sample-sound\" ofType:@\"caf\"];\nNSURL *sampleURL = [NSURL fileURLWithPath:samplePath];\nAudioServicesCreateSystemSoundID((__bridge CFURLRef)sampleURL, &self.sampleSound);\nAudioServicesPlaySystemSound(self.sampleSound);\n```", "```swift\n    @import AVFoundation;\n    ```", "```swift\n    @property (nonatomic, strong) AVAudioPlayer     *backgroundAudioPlayer;\n    ```", "```swift\n    NSString *samplePath = [[NSBundle mainBundle] pathForResource:@\"background-music.caf\" ofType:nil];\n    NSURL *file = [NSURL fileURLWithPath:samplePath];\n    ```", "```swift\n    NSError *error;\n    self.backgroundAudioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:file error:&error];\n    if (error)\n    {\n       NSLog(@\"Error in audio play %@\",[error userInfo]);\n       return;\n    }\n    ```", "```swift\n    [self.backgroundAudioPlayer prepareToPlay];\n    self.backgroundAudioPlayer.numberOfLoops = -1;\n    self.backgroundAudioPlayer.volume = 1.0;\n    ```", "```swift\n    [self.backgroundAudioPlayer play];\n    ```", "```swift\n    @property (nonatomic, strong) AVAudioPlayer     *coinCollectedAudioPlayer;\n    ```", "```swift\n    NSString *samplePath = [[NSBundle mainBundle] pathForResource:@\"coin-collected-sound.caf\" ofType:nil];\n    NSURL *file = [NSURL fileURLWithPath:samplePath];\n    ```", "```swift\n    NSError *error;\n    self.coinCollectedAudioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:file error:&error];\n    if (error)\n    {\n       NSLog(@\"Error in audio play %@\",[error userInfo]);\n       return;\n    }\n    ```", "```swift\n    [self.coinCollectedAudioPlayer prepareToPlay];\n    self.coinCollectedAudioPlayer.numberOfLoops = 1;\n    self.coinCollectedAudioPlayer.volume = 1.0;\n    ```", "```swift\n    [self.coinCollectedAudioPlayer play];\n    ```", "```swift\n        NSFileManager* fileManager = [NSFileManager defaultManager];\n        id currentiCloudToken = fileManager.ubiquityIdentityToken;\n    ```", "```swift\n     if (currentiCloudToken)\n        {\n        NSData *newTokenData = [NSKeyedArchiver archivedDataWithRootObject:currentiCloudToken];\n          [[NSUserDefaults standardUserDefaults]setObject:newTokenData forKey:@\"com.mb.FlyingSpaceship.UbiquityIdentityToken\"];\n        }\n        else\n        {\n          [[NSUserDefaults standardUserDefaults] removeObjectForKey: @\"com.mb.FlyingSpaceship.UbiquityIdentityToken\"];\n        }\n    ```", "```swift\n    [[NSNotificationCenter defaultCenter] addObserver:selfselector:@selector(iCloudAccountAvailabilityChanged:)name:NSUbiquityIdentityDidChangeNotification object:nil];\n    ```", "```swift\n      BOOL firstLaunchWithiCloudAvailable = [[NSUserDefaults standardUserDefaults] objectForKey:@\"FirstLaunchWithiCloudAvailable\"];\n      if (firstLaunchWithiCloudAvailable == NO)\n        {\n          [[NSUserDefaults standardUserDefaults] setObject:[NSNumber numberWithBool:YES]\n          forKey:@\"FirstLaunchWithiCloudAvailable\"];\n        }\n      [[NSUserDefaults standardUserDefaults] synchronize];\n    ```", "```swift\n    - (void)showiCloudInviteAlertView\n    {\n        BOOL firstLaunchWithiCloudAvailable = [[NSUserDefaults standardUserDefaults] objectForKey:@\"FirstLaunchWithiCloudAvailable\"];\n\n        if (currentiCloudToken && firstLaunchWithiCloudAvailable)\n        {\n         UIAlertView *alertView = [[UIAlertView alloc]  initWithTitle: @\"Choose Storage Option\" message: @\"Should documents be stored in iCloud and available on all your devices?\"\n                delegate: self\n                   cancelButtonTitle: @\"Local Only\"\n               otherButtonTitles: @\"Use iCloud\", nil];\n            [alertView show];\n        }\n    }\n    ```"]