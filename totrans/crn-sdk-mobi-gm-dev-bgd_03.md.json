["```java\nphysics.setGravity( 0, 9.8 ): Standard Earth gravity\n\n```", "```java\nfunction movePaddle(event)\npaddle.x = display.contentCenterX - (display.contentCenterX * (event.yGravity*3))\nend\nRuntime:addEventListener( \"accelerometer\", movePaddle )\n\n```", "```java\nphysics.setScale( 60 )\n\n```", "```java\nphysics.setPositionIterations( 16 )\n\n```", "```java\nphysics.setVelocityIterations( 6 )\n\n```", "```java\n    settings =\n    {\n    orientation =\n    {\n    default = \"landscapeRight\",\n    }\n    }\n\n    ```", "```java\n    application =\n    {\n    content =\n    {\n    width = 320,\n    height = 480,\n    scale = \"letterbox\",\n    fps = 60,\n    },\n    }\n\n    ```", "```java\nlocal rect = display.newRect(0, 0, 150, 150)\nrect:setFillColor(255, 255, 255)\nlocal myGroup = display.newGroup()\nmyGroup:insert( rect )\n\n```", "```java\nprint( system.getInfo( \"name\" ) ) -- display the deviceID\n\n```", "```java\nsystem.setAccelerometerInterval( 75 )\n\n```", "```java\n    display.setStatusBar(display.HiddenStatusBar)\n    local physics = require \"physics\"\n    physics.start()\n    physics.setGravity(0, 0)\n    system.setAccelerometerInterval( 100 )\n\n    ```", "```java\n    local menuScreenGroup -- display.newGroup()\n    local mmScreen\n    local playBtn\n\n    ```", "```java\n    local background\n    local paddle\n    local brick\n    local ball\n\n    ```", "```java\n    local scoreText\n    local scoreNum\n    local levelText\n    local levelNum\n\n    ```", "```java\n    local alertDisplayGroup -- display.newGroup()\n    local alertBox\n    local conditionDisplay\n    local messageText\n\n    ```", "```java\n    local _W = display.contentWidth / 2\n    local _H = display.contentHeight / 2\n    local bricks = display.newGroup()\n    local brickWidth = 35\n    local brickHeight = 15\n    local row\n    local column\n    local score = 0\n    local scoreIncrease = 100\n    local currentLevel\n    local vx = 3\n    local vy = -3\n    local gameEvent = \"\"\n\n    ```", "```java\n    local isSimulator = \"simulator\" == system.getInfo(\"environment\")\n\n    ```", "```java\n    function main()\n    end\n    --[[\n    This empty space will hold other functions and methods to run the application\n    ]]--\n    main()\n\n    ```", "```java\nlocal playBtn = display.newImage(\"playbtn.png\")\nplayBtn.name = \"playbutton\"\nlocal function listener(event)\nif event.target.name == \"playbutton\" then\nprint(\"The button was touched.\")\nend\nend\nplayBtn:addEventListener(\"touch\", listener )\n\n```", "```java\nlocal playBtn = display.newImage(\"playbtn.png\")\nlocal function listener(event)\nprint(\"The button appeared.\")\nend\nRuntime:addEventListener(\"enterFrame\", listener )\n\n```", "```java\n_W = display.contentWidth\n_H = display.contentHeight\nlocal square = display.newRect( 0, 0, 100, 100 )\nsquare:setFillColor( 255,255,255 )\nsquare.x = _W/2; square.y = _H/2\nlocal square2 = display.newRect( 0, 0, 50, 50 )\nsquare2:setFillColor( 255,255,255 )\nsquare2.x = _W/2; square2.y = _H/2\ntransition.to( square, { time=1500, x=250, y=400 } )\ntransition.from( square2, { time=1500, x=275, y=0 } )\n\n```", "```java\n    function mainMenu()\n    end\n\n    ```", "```java\n    menuScreenGroup = display.newGroup()\n    mmScreen = display.newImage(\"mmScreen.png\", 0, 0, true)\n    mmScreen.x = _W\n    mmScreen.y = _H\n    playBtn = display.newImage(\"playbtn.png\")\n    playBtn:setReferencePoint(display.CenterReferencePoint)\n    playBtn.x = _W; playBtn.y = _H + 50\n    playBtn.name = \"playbutton\"\n    menuScreenGroup:insert(mmScreen)\n    menuScreenGroup:insert(playBtn)\n\n    ```", "```java\n    function main()\n    mainMenu()\n    end\n\n    ```", "```java\n    function loadGame(event)\n    if event.target.name == \"playbutton\" then\n    transition.to(menuScreenGroup,{time = 0, alpha=0, onComplete = addGameScreen})\n    playBtn:removeEventListener(\"tap\", loadGame)\n    end\n    end\n\n    ```", "```java\n    playBtn:addEventListener(\"tap\", loadGame)\n\n    ```", "```java\n    function addGameScreen()\n    background = display.newImage(\"bg.png\", 0, 0, true )\n    background.x = _W\n    background.y = _H\n    paddle = display.newImage(\"paddle.png\")\n    paddle.x = 240; paddle.y = 300\n    paddle.name = \"paddle\"\n    ball = display.newImage(\"ball.png\")\n    ball.x = 240; ball.y = 290\n    ball.name = \"ball\"\n\n    ```", "```java\n    scoreText = display.newText(\"Score:\", 5, 2, \"Arial\", 14)\n    scoreText:setTextColor(255, 255, 255, 255)\n    scoreNum = display.newText(\"0\", 54, 2, \"Arial\", 14)\n    scoreNum:setTextColor(255, 255, 255, 255)\n    levelText = display.newText(\"Level:\", 420, 2, \"Arial\", 14)\n    levelText:setTextColor(255, 255, 255, 255)\n    levelNum = display.newText(\"1\", 460, 2, \"Arial\", 14)\n    levelNum:setTextColor(255, 255, 255, 255)\n\n    ```", "```java\n    gameLevel1()\n    end\n\n    ```", "```java\n    function gameLevel1()\n    currentLevel = 1\n    bricks:toFront()\n\n    ```", "```java\n    local numOfRows = 4\n    local numOfColumns = 4\n    local brickPlacement = {x = (_W) - (brickWidth * numOfColumns ) / 2 + 20, y = 50}\n\n    ```", "```java\n    for row = 0, numOfRows - 1 do\n    for column = 0, numOfColumns - 1 do\n    local brick = display.newImage(\"brick.png\")\n    brick.name = \"brick\"\n    brick.x = brickPlacement.x + (column * brickWidth)\n    brick.y = brickPlacement.y + (row * brickHeight)\n    physics.addBody(brick, \"static\", {density = 1, friction = 0, bounce = 0})\n    bricks.insert(bricks, brick)\n    end\n    end\n    end\n\n    ```", "```java\n    function gameLevel2()\n    currentLevel = 2\n    bricks:toFront()\n    local numOfRows = 5\n    local numOfColumns = 8\n    local brickPlacement = {x = (_W) - (brickWidth * numOfColumns ) / 2 + 20, y = 50}\n    for row = 0, numOfRows - 1 do\n    for column = 0, numOfColumns - 1 do\n    -- Create a brick\n    local brick = display.newImage(\"brick.png\")\n    brick.name = \"brick\"\n    brick.x = brickPlacement.x + (column * brickWidth)\n    brick.y = brickPlacement.y + (row * brickHeight)\n    physics.addBody(brick, \"static\", {density = 1, friction = 0, bounce = 0})\n    bricks.insert(bricks, brick)\n    end\n    end\n    end\n\n    ```", "```java\nif event.other.name == \"brick\" and ball.x + ball.width * 0.5 event.other.x + event.other.width * 0.5 then\nvx = -vx\nelseif event.other.name == \"brick\" and ball.x + ball.width * 0.5 >= event.other.x + event.other.width * 0.5 then\nvx = vx\nend\n\n```", "```java\n    function alertScreen(title, message)\n    alertBox = display.newImage(\"alertBox.png\")\n    alertBox.x = 240; alertBox.y = 160\n    transition.from(alertBox, {time = 500, xScale = 0.5, yScale = 0.5, transition = easing.outExpo})\n\n    ```", "```java\n    conditionDisplay = display.newText(title, 0, 0, \"Arial\", 38)\n    conditionDisplay:setTextColor(255,255,255,255)\n    conditionDisplay.xScale = 0.5\n    conditionDisplay.yScale = 0.5\n    conditionDisplay:setReferencePoint(display.CenterReferencePoint)\n    conditionDisplay.x = display.contentCenterX\n    conditionDisplay.y = display.contentCenterY - 15\n\n    ```", "```java\n    messageText = display.newText(message, 0, 0, \"Arial\", 24)\n    messageText:setTextColor(255,255,255,255)\n    messageText.xScale = 0.5\n    messageText.yScale = 0.5\n    messageText:setReferencePoint(display.CenterReferencePoint)\n    messageText.x = display.contentCenterX\n    messageText.y = display.contentCenterY + 15\n\n    ```", "```java\n    alertDisplayGroup = display.newGroup()\n    alertDisplayGroup:insert(alertBox)\n    alertDisplayGroup:insert(conditionDisplay)\n    alertDisplayGroup:insert(messageText)\n    end\n\n    ```", "```java\n    local square = display.newRect( 0, 0, 50, 50 )\n    square:setFillColor( 255,255,255 )\n    square.x = 100 square2.y = 300\n\n    ```"]