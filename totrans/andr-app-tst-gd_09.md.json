["```java\n/* (non-Javadoc)\n* @see android.text.TextWatcher#onTextChanged( * java.lang.CharSequence, int, int, int)\n*/\npublic void onTextChanged(CharSequence s, int start, int before, int count) {\nif (!mDest.hasWindowFocus() || mDest.hasFocus() || s == null ) {\nreturn;\n}\nfinal String str = s.toString();\nif ( \"\".equals(str) ) {\nmDest.setText(\"\");\nreturn;\n} final long t0;\nif ( BENCHMARK_TEMPERATURE_CONVERSION ) {\nt0 = System.currentTimeMillis();\n}\ntry {\nfinal double temp = Double.parseDouble(str);\nfinal double result = (mOp == OP.C2F) ? TemperatureConverter.celsiusToFahrenheit(temp) : TemperatureConverter.fahrenheitToCelsius(temp);\nfinal String resultString = String.format(\"%.2f\", result);\nmDest.setNumber(result);\nmDest.setSelection(resultString.length());\n} catch (NumberFormatException e) {\n// WARNING\n// this is generated while a number is entered,\n// for example just a '-'\n// so we don't want to show the error\n} catch (Exception e) {\nmSource.setError(\"ERROR: \" + e.getLocalizedMessage());\n} if ( BENCHMARK_TEMPERATURE_CONVERSION ) {\nlong t = System.currentTimeMillis() - t0;\nLog.i(TAG, \"TemperatureConversion took \" + t + \" ms to complete.\");\n}\n}\n\n```", "```java\npackage com.example.aatg.tc.test.launchperf;\nimport android.app.Instrumentation;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\n/**\n* Base class for all launch performance Instrumentation classes.\n*/\npublic class LaunchPerformanceBase extends Instrumentation {\npublic static final String TAG = \"LaunchPerformanceBase\";\nprotected Bundle mResults;\nprotected Intent mIntent;\n/**\n* Constructor.\n*/\npublic LaunchPerformanceBase() {\nmResults = new Bundle();\nmIntent = new Intent(Intent.ACTION_MAIN);\nmIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\nsetAutomaticPerformanceSnapshots();\n}\n/**\n* Launches intent {@link #mIntent}, and waits for idle before\n* returning.\n*/\nprotected void LaunchApp() {\nstartActivitySync(mIntent);\nwaitForIdleSync();\n}\n@Override\npublic void finish(int resultCode, Bundle results) {\nLog.v(TAG, \"Test reults = \" + results);\nsuper.finish(resultCode, results);\n}\n}\n\n```", "```java\npackage com.example.aatg.tc.test.launchperf;\nimport com.example.aatg.tc.TemperatureConverterActivity;\nimport android.app.Activity;\nimport android.os.Bundle;\n/**\n* Instrumentation class for {@link TemperatureConverterActivity} launch performance testing.\n*/\npublic class TemperatureConverterActivityLaunchPerformance extends LaunchPerformanceBase {\n/**\n* Constructor.\n*/\npublic TemperatureConverterActivityLaunchPerformance() {\nsuper();\n}\n@Override\npublic void onCreate(Bundle arguments) {\nsuper.onCreate(arguments);\nmIntent.setClassName(\"com.example.aatg.tc\", \"com.example.aatg.tc.TemperatureConverterActivity\");\nstart();\n}\n/**\n* Calls LaunchApp and finish.\n*/\n@Override\npublic void onStart() {\nsuper.onStart();\nLaunchApp();\nfinish(Activity.RESULT_OK, mResults);\n}\n}\n\n```", "```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest  package=\"com.example.aatg.tc.test\" android:versionCode=\"1\" android:versionName=\"1.0\">\n<application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\">\n<uses-library android:name=\"android.test.runner\" />\n</application>\n<uses-sdk android:minSdkVersion=\"9\" />\n<instrumentation android:targetPackage=\"com.example.aatg.tc\" android:name=\"android.test.InstrumentationTestRunner\" android:label=\"Temperature Converter Activity Tests\" android:icon=\"@drawable/icon\" /> <instrumentation android:targetPackage=\"com.example.aatg.tc\" android:label=\"Temperature Converter Activity Launch Performance\" android:name=\".launchperf.TermeratureConverterActivity LaunchPerformance\" />\n</manifest>\n\n```", "```java\n$ adb -s emulator-5554 shell am instrument -w com.example.aatg.tc.test/.launchperf.TermeratureConverterActivityLaunchPerformance\n\n```", "```java\nINSTRUMENTATION_RESULT: other_pss=13430\nINSTRUMENTATION_RESULT: java_allocated=2565\nINSTRUMENTATION_RESULT: global_freed_size=16424\nINSTRUMENTATION_RESULT: native_private_dirty=504\nINSTRUMENTATION_RESULT: native_free=6\nINSTRUMENTATION_RESULT: global_alloc_count=810\nINSTRUMENTATION_RESULT: other_private_dirty=12436\nINSTRUMENTATION_RESULT: global_freed_count=328\nINSTRUMENTATION_RESULT: sent_transactions=-1\nINSTRUMENTATION_RESULT: java_free=2814\nINSTRUMENTATION_RESULT: received_transactions=-1\nINSTRUMENTATION_RESULT: pre_sent_transactions=-1\nINSTRUMENTATION_RESULT: other_shared_dirty=5268\nINSTRUMENTATION_RESULT: pre_received_transactions=-1 INSTRUMENTATION_RESULT: execution_time=4563\nINSTRUMENTATION_RESULT: native_size=11020\nINSTRUMENTATION_RESULT: native_shared_dirty=1296 INSTRUMENTATION_RESULT: cpu_time=1761\nINSTRUMENTATION_RESULT: java_private_dirty=52\nINSTRUMENTATION_RESULT: native_allocated=11013\nINSTRUMENTATION_RESULT: gc_invocation_count=0\nINSTRUMENTATION_RESULT: java_shared_dirty=1860\nINSTRUMENTATION_RESULT: global_alloc_size=44862\nINSTRUMENTATION_RESULT: java_pss=1203\nINSTRUMENTATION_RESULT: java_size=5379\nINSTRUMENTATION_RESULT: native_pss=660\nINSTRUMENTATION_CODE: -1\n\n```", "```java\n$ adb -s emulator-5554 am start -n com.example.aatg.tc/.TemperatureConverterActivity\n$ adb -s emulator-5554 shell am profile com.example.aatg.tc start /mnt/sdcard/tc.trace\n\n```", "```java\n$ adb -s emulator-5554 shell am profile com.example.aatg.tc stop\n$ adb -s emulator-5554 pull /mnt/sdcard/tc.trace /tmp/tc.trace\n1132 KB/s (2851698 bytes in 2.459s)\n$ traceview /tmp/tc.trace\n\n```", "```java\n@Override\npublic void onTextChanged(CharSequence s, int start, int before, int count) {\nif (!dest.hasWindowFocus() || dest.hasFocus() || s == null ) {\nreturn;\n}\nfinal String ss = s.toString();\nif ( \"\".equals(ss) ) {\ndest.setText(\"\");\nreturn;\n} if ( BENCHMARK_TEMPERATURE_CONVERSION ) {\nDebug.startMethodTracing();\n}\ntry {\nfinal double result = (Double) convert.invoke( TemperatureConverter.class, Double.parseDouble(ss));\ndest.setNumber(result);\ndest.setSelection(dest.getText().toString().length());\n} catch (NumberFormatException e) {\n// WARNING\n// this is generated while a number is entered,\n//for example just a '-'\n// so we don't want to show the error\n} catch (Exception e) {\ndest.setError(e.getCause().getLocalizedMessage());\n} if ( BENCHMARK_TEMPERATURE_CONVERSION ) {\nDebug.stopMethodTracing();\n}\n}\n\n```", "```java\n$ adb -s emulator-5554 pull /mnt/sdcard/dmtrace.trace /tmp/dmtrace.trace\n375 KB/s (50664 bytes in 0.131s)\n$ traceview /tmp/dmtrace.trace\n\n```", "```java\n$ svn checkout http://caliper.googlecode.com/svn/trunk/ caliper-read-only\n$ cd caliper-read-only\n$ ant\n\n```", "```java\npackage com.example.aatg.tc.benchmark;\nimport java.util.Random;\nimport com.example.aatg.tc.TemperatureConverter;\nimport com.google.caliper.Param;\nimport com.google.caliper.SimpleBenchmark;\n/**\n* Caliper Benchmark.<br>\n* To run the benchmarks in this class:<br>\n* {@code $ CLASSPATH=... caliper com.example.aatg.tc. * benchmark.TemperatureConverterBenchmark. * CelsiusToFahrenheitBenchmark} [-Dsize=n]\n*\n* @author diego\n*\n*/\npublic class TemperatureConverterBenchmark {\npublic static class CelsiusToFahrenheitBenchmark extends SimpleBenchmark {\nprivate static final double T = 10; // some temp\n@Param\nint size;\nprivate double[] temps;\n@Override\nprotected void setUp() throws Exception {\nsuper.setUp();\ntemps = new double[size];\nRandom r = new Random(System.currentTimeMillis());\nfor (int i=0; i < size; i++) {\ntemps[i] = T * r.nextGaussian();\n}\n}\npublic final void timeCelsiusToFahrenheit(int reps) {\nfor (int i=0; i < reps; i++) {\nfor (double t: temps) {\nTemperatureConverter.celsiusToFahrenheit(t);\n}\n}\n}\n}\npublic static void main(String[] args) {\nSystem.out.println(\"This is a caliper benchmark.\");\n}\n}\n\n```", "```java\n#!/bin/bash\nVERSION=0.0\nCALIPER_DIR=/opt/caliper-$VERSION\nexport PATH=$PATH:$JAVA_HOME/bin\nexec java -cp ${CALIPER_DIR}/lib/caliper-${VERSION}.jar:$CLASSPATH com.google.caliper.Runner \"$@\"\n\n```", "```java\n$ export CLASSPATH=$CLASSPATH:~/workspace/TemperatureConverter/bin:~/workspace/TemperatureConverterBenchmark/bin\n\n```", "```java\n$ caliper com.example.aatg.tc.benchmark.TemperatureConverterBenchmark.CelsiusToFahrenheitBenchmark -Dsize=1\n\n```", "```java\n$ caliper com.example.aatg.tc.benchmark.TemperatureConverterBenchmark.CelsiusToFahrenheitBenchmark -Dsize=1,10,100\n\n```", "```java\n# Caliper API key for myuser@gmail.com\npostUrl: http://microbenchmarks.appspot.com:80/run/\napiKey: 012345678901234567890123456789012\n\n```", "```java\n$ caliper com.example.aatg.tc.benchmark.TemperatureConverterBenchmark.CelsiusToFahrenheitBenchmark -Dsize=1,10,100\n\n```"]