["```java\n//create the root window\nvar win1 = Titanium.UI.createWindow({\ntitle: 'Android Options Menu',\nbackgroundColor: '#ccc'\n});\nif(Titanium.Platform.osname == 'android')\n{\n//references the current android activity\nvar activity = Ti.Android.currentActivity;\n//create our menu\nactivity.onCreateOptionsMenu = function(e) {\nvar menu = e.menu;\n//menu button 1\nvar menuItem1 = menu.add({ title: \"Item 1\" });\nmenuItem1.setIcon(\"item1.png\");\nmenuItem1.addEventListener(\"click\", function(e) {\nalert(\"Menu item #1 was clicked\");\n});\n//menu button 2\nvar menuItem2 = menu.add({\ntitle: \"Show Item #4\",\nitemId: 2\n});\nmenuItem2.setIcon(\"item2.png\");\nmenuItem2.addEventListener(\"click\", function(e) {\nmenu.findItem(4).setVisible(true);\n});\n//menu button 3\nvar menuItem3 = menu.add({ title: \"Item 3\" });\nmenuItem3.setIcon(\"item3.png\");\nmenuItem3.addEventListener(\"click\", function(e) {\nalert(\"Menu item #3 was clicked\");\n});\n//menu button 4 (will be hidden)\nvar menuItem4 = menu.add({\ntitle: \"Hide Item #4\",\nitemId: 4\n});\nmenuItem4.setIcon(\"item4.png\");\nmenuItem4.addEventListener(\"click\", function(e) {\nmenu.findItem(4).setVisible(false);\n});\n};\n//turn off the item #4 by default\nactivity.onPrepareOptionsMenu = function(e) {\nvar menu = e.menu;\nmenu.findItem(4).setVisible(false);\n};\n}\nwin1.open();\n\n```", "```java\n//create the root window\nvar win1 = Titanium.UI.createWindow({\ntitle: 'Android Options Menu',\nbackgroundColor: '#ccc'\n});\n//add the textfields\nvar txtName = Titanium.UI.createTextField({\nwidth: 280,\ntop: 150,\nleft: 20,\nheight: 40,\nbackgroundColor: '#fff',\nborderRadius: 3,\nhintText: 'Friend\\'s name...',\npaddingLeft: 3\n});\nwin1.add(txtName);\nvar txtEmail = Titanium.UI.createTextField({\nwidth: 280,\ntop: 200,\nleft: 20,\nheight: 40,\nbackgroundColor: '#fff',\nborderRadius: 3,\nhintText: 'Contact\\'s email address...',\npaddingLeft: 3,\nkeyboardType: Titanium.UI.KEYBOARD_EMAIL\n});\nwin1.add(txtEmail);\n//this is the user image\nvar imgView = Titanium.UI.createImageView({\nwidth: 80,\nleft: 20,\nheight: 80,\ntop: 45,\nimage: 'no_avatar.gif'\n});\nwin1.add(imgView);\nvar contactButton = Titanium.UI.createButton({\ntitle: 'Select a contact...',\nleft: 20,\ntop: 10,\nheight: 28,\nwidth: 280\n});\ncontactButton.addEventListener('click', function(e){\n//\n//if array of details is specified, the detail view will be\n//shown\n//when the contact is selected. this will also trigger\n//e.key, and e.index in the success callback\n//\nTitanium.Contacts.showContacts({\nselectedProperty: function(e) {\nTi.API.info(e.type + ' - '+ e.value);\ntxtEmail.value = e.email;\n},\nselectedPerson: function(e) {\nvar person = e.person;\ntxtEmail.value = person.email.home[0];\nif (person.image != null) {\nimgView.image = person.image;\n}\nelse {\nimgView.image = 'no_avatar.gif';\navatar = 'no_avatar.gif';\n}\ntxtName.value = person.firstName + ' ' + person.lastName;\n}\n});\n});\nwin1.add(contactButton);\nwin1.open();\n\n```", "```java\nvar win1 = Titanium.UI.createWindow({\nbackgroundColor: '#fff',\ntitle: 'Copy and Paste'\n});\nvar txtData1 = Titanium.UI.createTextField({\nleft: 20,\nwidth: 280,\nheight: 40,\ntop: 10,\nborderStyle:Titanium.UI.INPUT_BORDERSTYLE_ROUNDED\n});\nvar txtData2 = Titanium.UI.createTextField({\nleft: 20,\nwidth: 280,\nheight: 40,\ntop: 60,\nborderStyle:Titanium.UI.INPUT_BORDERSTYLE_ROUNDED\n});\nvar copyButton = Titanium.UI.createButton({\ntitle: 'Copy',\nwidth: 80,\nheight: 30,\nleft: 20,\ntop: 140\n});\nvar pasteButton = Titanium.UI.createButton({\ntitle: 'Paste',\nwidth: 80,\nheight: 30,\nleft: 120,\ntop: 140,\nvisible: false\n});\nvar clearButton = Titanium.UI.createButton({\ntitle: 'Clear',\nwidth: 80,\nheight: 30,\nright: 20,\ntop: 140\n});\nfunction copyTextToClipboard() {\nTi.UI.Clipboard.setText(txtData1.value);\ncopyButton.visible = false;\npasteButton.visible = true;\n}\nfunction pasteTextFromClipboard() {\ntxtData2.value = Ti.UI.Clipboard.getText();\ntxtData1.value = '';\ncopyButton.visible = true;\npasteButton.visible = false;\n}\nfunction clearTextFromClipboard() {\nTi.UI.Clipboard.clearText();\n}\ncopyButton.addEventListener('click', copyTextToClipboard);\npasteButton.addEventListener('click', pasteTextFromClipboard);\nclearButton.addEventListener('click', clearTextFromClipboard);\nwin1.add(txtData1);\nwin1.add(txtData2);\nwin1.add(copyButton);\nwin1.add(pasteButton);\nwin1.add(clearButton);\nwin1.open();\n\n```", "```java\n//create root window\nvar win1 = Titanium.UI.createWindow({\nbackgroundColor: '#fff',\ntitle: 'Background Services'\n});\nfunction validiOSPlatform() {\n//add iphone checks\nif (Titanium.Platform.osname == 'iphone')\n{\nvar version = Titanium.Platform.version.split(\".\");\nvar major = parseInt(version[0],0);\n//can only test this support on ios 4+\nif (major >= 4) {\nreturn true;\n}\n}\n//either we're not running ios or platform is old\nreturn false;\n}\nif (validiOSPlatform() == true) {\n//register a background service.\n//this JS will run when the app is backgrounded\nvar service =\nTi.App.iOS.registerBackgroundService({url:'bg.js'});\nTi.API.info(\"registered background service = \" + service);\n//fired when an app is resuming for suspension\nTi.App.addEventListener('resume',function(e){\nTi.API.info(\"App is resuming from the background\");\n});\n//fired when an app has resumed\nTi.App.addEventListener('resumed',function(e){\nTi.API.info(\"App has resumed from the background\");\n});\n//fired when an app is paused\nTi.App.addEventListener('pause',function(e){\nTi.API.info(\"App was paused from the foreground\");\n});\n}\n//finally, open the window\nwin1.open();\n\n```", "```java\nTi.API.info(\"This line was executed from a background service!\");\n\n```", "```java\nvar notification = Ti.App.iOS.scheduleLocalNotification({\nalertBody: 'Hey, this is a local notification!',\nalertAction: \"Answer it!\",\nuserInfo: {\"Hello\": \"world\"},\ndate: new Date(new Date().getTime())\n});\n\n```", "```java\n//listen for a local notification event\nTi.App.iOS.addEventListener('notification', function(e)\n{\nTi.API.info(\"Local notification received: \"+ JSON.stringify(e));\nalert('Your local notification caused this event to fire!');\n});\n\n```", "```java\n<activity\nandroid:name=\".NativeapisActivity\"\nandroid:label=\"NativeAPIs\"\nandroid:theme=\"@style/Theme.Titanium\"\nandroid:configChanges=\"keyboardHidden|orientation\"\n>\n...\n\n```", "```java\n//create root window\nvar win1 = Titanium.UI.createWindow();\nif(Titanium.Platform.osname == 'android')\n{\nvar intent = Titanium.Android.createIntent({\naction: Titanium.Android.ACTION_MAIN,\nclassName: 'com.boydlee.nativeapis.NativeapisActivity',\npackageName: 'com.boydlee.nativeapis'\n});\nintent.addCategory(Titanium.Android.CATEGORY_LAUNCHER);\nvar pending = Titanium.Android.createPendingIntent({\nactivity: Titanium.Android.currentActivity,\nintent: intent,\ntype:\nTitanium.Android.PENDING_INTENT_FOR_ACTIVITY,\nflags: Titanium.Android.FLAG_ACTIVITY_NEW_TASK\n});\nvar notification =\nTitanium.Android.createNotification({\ncontentIntent: pending,\ncontentTitle: 'New Notification',\ncontentText: 'Hey there Titanium Developer!!',\ntickerText: 'You have a new Titanium message...',\nledARGB: 1,\nnumber: 1,\nwhen: new Date().getTime()\n});\nTi.Android.NotificationManager.notify(1,\nnotification);\n}\n//finally, open the window\nwin1.open();\n\n```", "```java\n<android >\n<tool-api-level>8</tool-api-level>\n<manifest android:installLocation=\"preferExternal\">\n<uses-sdk android:minSdkVersion=\"7\" />\n</manifest>\n</android>\n\n```"]