- en: Chapter 6. Ad Destinations and Actions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After creating an amazing ad that excites users about our product or brand,
    we need to channel this and get them to perform an action beneficial to us.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'In this chapter, we''ll look at:'
  prefs: []
  type: TYPE_NORMAL
- en: Why we shouldn't just redirect the user to our website
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Selling our digital content, such as apps and music
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Taking our store finder to the next level
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enhancing the structure of our ads
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Socially engaging the user with our brand, using SMS text messaging
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Opening external websites
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A traditional advertisement on a mobile device consists of a banner, which when
    tapped takes the user to their mobile browser and often loads a full, cluttered
    desktop website. Creating an iAd is different, as you have an entire framework
    to build a mini-application, all housed within a host app. It's possible to create
    the same, if not better, integrated experiences in our iAd using the iAd Framework
    and iAd Producer.
  prefs: []
  type: TYPE_NORMAL
- en: Think of your iAd as a microsite that you really don't ever want the user to
    leave. Let's explore the destinations and user actions we can achieve within our
    iAd, avoiding having to take users to your main site.
  prefs: []
  type: TYPE_NORMAL
- en: Selling digital products
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can sell digital products, such as songs, movies, or apps, directly in our
    iAd, without the user having to leave the ad or app they're in. As long as your
    items are available on the iTunes store, they can be included in an iAd.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When digital content is downloaded from your ad, you'll receive the same revenue
    as if it was purchased directly from the store.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action — downloading an app from our ad
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using the **Purchase** template in iAd Producer, we'll add a **Purchase** page
    into our ad for the addictive, free application `Bouncing Balls`.
  prefs: []
  type: TYPE_NORMAL
- en: We'll continue with our `Coffee Beans` project that we worked on in the last
    chapter. Open it in iAd Producer.
  prefs: []
  type: TYPE_NORMAL
- en: Let's add an extra page to use as our **Purchase** page. From the ad overview,
    click on the plus icon, found on the lines that show the relationship between
    the menu and pages, as highlighted in the following screenshot:![Time for action
    — downloading an app from our ad](img/1321_06_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the newly created page, labeled **Page 4**, to open the template
    chooser. Select the **Purchase** template, and then double-click on the page again
    to open it on the editing canvas. You'll see a placeholder product page, similar
    to those seen in the iOS App Store.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If it isn't already open, open the inspector pane, and click anywhere on the
    canvas to select the store view object that was automatically added to the page
    by the template. Expand the **Properties** section to reveal the settings we need
    to configure for this page of our ad.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You'll see that we need to provide the **Country** where our item is available,
    the **Store ID**, and the unique ID iTunes assigns to items, so the template knows
    which item we want to sell. For now, use `358992973` as the **Store ID** and select
    your country from the list:![Time for action — downloading an app from our ad](img/1321_06_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You should see the canvas update to show you the **Balance Balls** app. If the
    item doesn't appear when you select a country, try either **United Kingdom** or
    **United States**, as the content might not currently be available in your country.
    We'll look at getting the **Store ID** for your own content from the iTunes Store
    later.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Test the ad on a device and try purchasing the item; you'll be asked to enter
    your iTunes account password. If you don't want to complete the transaction, tap
    **cancel** at this step. You'll be unable to download or purchase store items
    in the iOS Simulator as it isn't permitted to access licensed content.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Watch out: if you''re testing downloading an item that isn''t free, you will
    be charged, even if it''s your own product or content.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As you can see, there's little that we have to do to create a great, quick,
    and seamless way of letting users download our content. You'd typically not style
    this page, as it's consistent with the purchasing experience of the iTunes and
    App Store. So, leave it as it is and save your iAd project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What just happened?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We added an extra page to our iAd, using the plus button on the ad canvas in
    iAd Producer. You can use the plus button to add as many pages as you want to
    your iAd, but try to keep the total under five to prevent your ad from being overwhelming.
  prefs: []
  type: TYPE_NORMAL
- en: Using an example `Store ID`, we were able to let users of our iAd directly purchase
    or download an app from the App Store without leaving the ad. The app will download
    in the background and automatically appear on the device home screen of the user.
    Now, let's look at adding your own iTunes content to the **Purchase** template.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action — getting iTunes Store IDs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We can get the Store IDs of items required by the **Purchase** template using
    the built-in store in iTunes:'
  prefs: []
  type: TYPE_NORMAL
- en: To access the iTunes Store, open iTunes. You'll find iTunes in the `Applications`
    folder on your Mac. Double-click on the icon to open it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the sidebar, on the left of iTunes, click on the **iTunes Store** item found
    under the **Store** heading, shown in the following screenshot:![Time for action
    — getting iTunes Store IDs](img/1321_06_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the search store text area in the top right of the main bar of iTunes.
    Enter the content you want to find the ID of, for example, Apple's iBooks app.
    Press the *Enter* key to search.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You'll now see a list of search results; find your item, click on the arrow
    next to the price, and select **Copy Link**. This will copy the link of your item
    to your clipboard:![Time for action — getting iTunes Store IDs](img/1321_06_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, we need to paste the link so that we can extract the Store ID from it.
    Open TextEdit, a text editor that came with your Mac. You should be able to find
    it in the `Applications` folder. Once opened, you should see a large white text
    area; right-click on it and choose **Paste**, or use the keyboard shortcut *cmd*
    + *V*. You'll see the link (that we just copied) appear. The link is a website
    URL you're able to share; it will automatically open the iTunes store when it's
    clicked.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: If you can't select **Paste**, or if something other than the link appeared,
    go back to iTunes and copy the link again.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You'll find the Store ID near the end of the link. Take, for example, [http://itunes.apple.com/gb/app/ibooks/id364709193?mt=8](http://itunes.apple.com/gb/app/ibooks/id364709193?mt=8).
    In this link, the ID is the string of numbers after `id` and before `?mt=8`, so
    you would use `364709193` as the Store ID. Try opening the `Coffee Beans` project
    now and updating the Store ID to the iBooks ID.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, let''s try finding a song; go back to iTunes and search for a song, such
    as A beautiful mine by RJD2\. From the search results, find the item you want,
    and copy the link. Paste the link into TextEdit; it should look similar to this:
    [http://itunes.apple.com/gb/album/a-beautiful-mine/id148031770?i=148032644](http://itunes.apple.com/gb/album/a-beautiful-mine/id148031770?i=148032644).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With songs, you're only able to offer the individual track to purchase, not
    the entire album, so we need the item ID of the song. The individual song ID is
    found after `i=`, so for this item it would be `148032644`, not the other id,
    which is used to identify the entire album.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: We can also offer movies to purchase, right in our ad. Copy a link for a movie,
    for example, *District 9*, and paste it into TextEdit. A movie link will look
    like [http://itunes.apple.com/gb/movie/district-9/id331251689](http://itunes.apple.com/gb/movie/district-9/id331251689).
    Like the app link, the Store ID for this movie is found after the id text at the
    end of the link; the ID of this item is `331251689`. Try updating the Store ID
    in iAd Producer with this ID to see how the purchase template appears for movies
    and films.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Some content, although visible in your country's iTunes Store; might not appear
    correctly in iAd Producer or when testing your iAd. Try updating the country to
    **US** temporarily, to fix this. If you continue to have problems, contact your
    Apple iTunes store agent or developer support.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Finally, books can be included—their ISBN is used as the Store ID—but the book
    has to be available in the iBook Store. To find a book's Store ID, for example,
    *Treasure Island*, copy the link and paste it into TextEdit. The link will look
    similar to [http://itunes.apple.com/gb/book/treasure-island/id370190362?mt=11](http://itunes.apple.com/gb/book/treasure-island/id370190362?mt=11),
    with the Store ID being after `id`, in this case, `370190362`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What just happened?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We used iTunes and the iTunes Store to find the Store ID of items, which is
    required by the **Purchase** template in iAd Producer. You can use this technique
    whenever you need to get the ID of your own items in the store.
  prefs: []
  type: TYPE_NORMAL
- en: Depending on what digital content you have, consider offering it for free or
    at a discount when promoting it within your ad. Let's tweak our ad as we've inadvertently
    created a few inconsistencies when we added the **Purchase** page to it.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action — fixing our ad
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As the menu template we used for our `Coffee Beans` project automatically updates
    whenever we add or remove pages, we don''t have to do anything to update it. However,
    there are a few tweaks we''ll need to make:'
  prefs: []
  type: TYPE_NORMAL
- en: Continuing with our `Coffee Beans` project, make sure it is open in iAd Producer.
    Open the **Purchase** page on the editing canvas.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: iAd Producer has automatically named our page **Purchase**, which isn't particularly
    engaging for our user. Without any objects selected, expand the inspector and
    rename the page in the **Properties** to, say, `Get the app!`. This uses a call
    to action, requesting and encouraging the user to follow your instruction.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the following screenshot, you can see the **Properties** section and **Name**
    field:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Time for action — fixing our ad](img/1321_06_05.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Return to the ad overview and open the menu on the canvas. You'll see the text
    has updated to match the new name for the page, but the styling of the other buttons
    hasn't been applied to our new menu item. The whole menu object has also been
    cut off at the bottom of the screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the menu object and drag it up on the page, so the last button isn't
    obscured. You may also need to resize the menu by dragging the bottom drag handle
    to accommodate our additional button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, we'll update the style of the button so it matches the others. With the
    menu selected, double-click on the first button to enter editing mode; then, click
    on the button again to select it. This can take a few attempts. Once selected,
    expand the inspector pane if it isn't already and click on **Apply Style to All
    Buttons**, as shown in the following screenshot. This duplicates the style to
    all other buttons in the menu so that they match and are consistent:![Time for
    action — fixing our ad](img/1321_06_07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that our button matches the others, let's test our ad on a device or in
    the iOS Simulator.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: You may have noticed that we can't return from the **Purchase** page as the
    menu item is missing. It's on the page but hidden behind the purchase object on
    the page, so we need to send the store item to the back of the page. Open the
    **Purchase** page on the ad canvas, and click on the purchase object to select
    it. Right-click and choose **Send to Back**. The menu button should now appear.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you saved a style for your menu items in the last chapter, don't forget to
    select that style from the style presets list.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Unfortunately, the positioning of our menu item interferes with the content
    of the purchase object, as you can see in the following screenshot. Let's restructure
    the page to accommodate it:![Time for action — fixing our ad](img/1321_06_08.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By resizing the purchase object, we can have a dedicated area, at the bottom
    of our iAd, to contain the back button. Click on the purchase object, and drag
    the bottom drag handle so it's above the **Menu** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now center the menu button by dragging it to the middle of the screen. Consider
    updating the text to `Back to Menu` and resizing the button so it fills more of
    the space at the bottom of the ad.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the background of the page to color fill and set it to white; this will
    separate the scrollable purchase object and the **Back to Menu** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reselect the purchase object and add a drop shadow to further separate the two
    sections of the page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, add a build in and out animation to the button and purchase object.
    Make the purchase view **Move In From Top** on build in, and **Move Out To Top**
    for build out. Make the **Menu** button **Move In From Bottom** for the build
    in and **Build Out To Bottom** for the build out. You can find the build in and
    out sections in the animations pane, when you have an object selected.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open your iAd in the iOS Simulator or iAd Tester for your device, and check
    whether we''re able to interact as you''d expect. Your final **Purchase** page
    should look similar to this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Time for action — fixing our ad](img/1321_06_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: What just happened?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As adding an extra page to our iAd project had caused some styling issues on
    the main menu and prevented our app navigation from working as intended, we reapplied
    our button style to the cells and redesigned the **Purchase** page to incorporate
    a **Back to Menu** button.
  prefs: []
  type: TYPE_NORMAL
- en: Pop Quiz — digital downloads
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The awareness or revenue you can generate from downloadable content in your
    iAds can be vast, so let''s check whether you''re doing it right:'
  prefs: []
  type: TYPE_NORMAL
- en: How do you get a Store ID, for a digital item, required by the purchase template
    in iAd Producer?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Just use the name of the item.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: b. Email Apple requesting the ID for your item.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: c. Open iTunes and use the copy link menu item in the store.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: d. Purchase the item and look at our receipt; the ID is there, next to the price.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: What's the Store ID of this link for a song—`http://itunes.apple.com/gb/album/a-beautiful-mine/id148031770?i=148032644?`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. a-beautiful-mine
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: b. id148031770
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: c. 148031770
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: d. 148032644
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: As you can see, selling digital content, whether music, movies, or apps, is
    incredibly simple. In three taps, the user has purchased your product and it's
    on their iOS device. You could also create a free app for your company, offering
    an even richer experience than your iAd, that persists on the users home screen
    so they can keep reengaging with your brand.
  prefs: []
  type: TYPE_NORMAL
- en: Advanced store finders
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Not all products are digital; sometimes you want to increase the footfall to
    brick and mortar stores. Earlier, we incorporated a basic store finder into an
    iAd; now, we'll look at extending this to deliver a fantastic experience to get
    users to your stores.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action — adding a store finder
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We''ll add a store finder to our `Coffee Beans` iAd, so users can find a local
    store and go buy some great coffee:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the `Coffee Beans` project that we've been working on in iAd Producer.
    We'll start by adding an extra page to our iAd. From the ad overview, use the
    plus icon to add an extra page to the project. Double-click on the new page to
    open the template chooser and select **Map**. Double-click on the new page to
    open it on the ad canvas.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The first thing we'll do is add a **custom pin**; this will show on the map
    for each store near our user. Open the inspector pane and expand the **Properties**
    section; from the **custom pin** drop-down, select the pin image, for example,
    **coffee-cup-pin.jpg**. We'll adjust the offset to center the image over the blue
    location crosshair—change the X and Y offsets until your pin sits on the crosshair.
    An X Offset of around 8px and a Y Offset of 5px should work well with this image.
    Your aligned pin should be similar to the following:![Time for action — adding
    a store finder](img/1321_06_10.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you have a Site ID, enter it now; if not, just use the demo ID that shows
    the nearest Apple stores.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Before you submit your iAd to Apple, you'll need to contact them to set up your
    own Site ID to show your store locations.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now, double-click on the title of your page, the **Location** label, and update
    the text to something more friendly, say, `Find your nearest cup..`. You should
    update the background to match the rest of your ad, in this case, to a color fill
    of *white*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Resize the map area to fill the width of the screen, and maybe add a drop shadow
    and border of your choosing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Preview your iAd; you'll see we now have a basic store finder in our ad. However,
    clicking on a pin reveals a plain, default styled details page. Return to iAd
    Producer and switch to the **Map Details** view, using the toggle at the top of
    the canvas:![Time for action — adding a store finder](img/1321_06_11.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By styling this page to match the rest of our ad, we'll create a consistent
    experience. Set the **Background** to a **Color Fill** and the color to *white*.
    Add an image to the image placeholder object next to the title; **coffee-cup-small.jpg**
    works well here.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Drag the image **beans 3-dark-roast.jpg** from the **Asset Library** to the
    canvas. Send it to the back so it's behind all the other objects on the page,
    and move it so it's at the bottom of the screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The information area's solid white background does not fit well with our white
    background or image. We can change the **Background, Border, Opacity**, and **Drop
    Shadow**, to improve their style. Click on the first information area, containing
    the phone number. Then, from the inspector, expand the **Background, Border, Opacity**,
    and **Drop Shadow** sections. Set the **Background Color Fill** to a light grey,
    such as the *Mercury* color from the crayon selector. Make the **Border 2px**
    wide and change its color to be slightly darker than the background, like *Silver*,
    from the crayon selector. Change the **Opacity** at the bottom of the inspector
    to, say, **90%**. This will allow the image to slightly appear through our information
    areas:![Time for action — adding a store finder](img/1321_06_12.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With the first information area styled, let's duplicate this style to the other
    areas, using a style preset. Under the **STYLES** heading, click on the cog button
    and select **Save**. Enter a name for the style, such as `Map Details Info Area`,
    and click on **OK**. Now, select the other information areas and apply that style
    preset to them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: We don't need to update the text in the **Title** text area of the **Map Detail**
    view, as this is set automatically by the iAd Framework when a user taps to open
    a store.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Your final page might look something like this:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Time for action — adding a store finder](img/1321_06_13.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Save your ad and test it in the iOS Simulator or on your device.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What just happened?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We added a basic store finder, using the **Map** template, then styled and customized
    it. After the **Map** page was styled, we changed the plain default store details
    page by adding a couple of images and restyling the information boxes. Now, finding
    your stores will almost be as great as being in them!
  prefs: []
  type: TYPE_NORMAL
- en: As our ad becomes more content rich with many pages, we may want to hide certain
    pages and access them as subpages from other sections of our ad. We'll now look
    at including hidden pages in our ad.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action — hidden pages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you can see, we've got too many items in our menu and the first page looks
    cluttered and messy. Let's make our own custom menu and make our store finder
    page accessible as a hidden subpage of our ad.
  prefs: []
  type: TYPE_NORMAL
- en: We'll be continuing with our coffee beans example; if it isn't already open,
    open your `Coffee Beans` project in iAd Producer. From the **Overview**, open
    the **Menu** page on the canvas. You'll see our last menu item; the store finder
    is cut off the page, as shown in the following screenshot:![Time for action —
    hidden pages](img/1321_06_14.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We could just move the menu up, but this would produce a cluttered and overwhelming
    initial screen to show to the user. Instead, we'll create our own navigation menu
    with button objects and place the map page button in the **Steamy Savings** page,
    so it's hidden from the main menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Return to **ad overview** and open the **Steamy Savings** page on the canvas.
    Before we're able to add anything to this page, we need to temporarily move the
    `Wipe Clear` object off the canvas to access the page objects. Click on the `Wipe
    Clear` object and drag it off the main canvas, to the left or right of the page.
    We'll move it back into place later, once we've edited our page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With the wipe clear off the canvas, select and drag **Voucher Codes** and the
    **Voucher** area further up the screen towards the coffee cup; this will create
    some extra room for our **Map** button. If you added it earlier, select the **Present
    voucher codes in store** text label and delete it, using the *delete* or *backspace*
    key on your keyboard; we'll replace this with a store finder button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the **Objects** library and select **Button**. This will add an empty button
    to the canvas; resize and move this button so it fits well at the bottom of our
    ad. Double-click on the button so you can edit the text, and update it to something
    such as `Find a store now`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With the button selected, expand the **Events** section in the inspector. Change
    the **Touched Up Inside** drop-down to **Go to Page**, then select **Map**; this
    will cause the **Map** page to open when the user taps the button:![Time for action
    — hidden pages](img/1321_06_15.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Preview your ad and test whether the button works as expected.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We'll now want to update our main menu to remove the **Maps** button. Unfortunately,
    as the menu object is automatically updated when we add new pages, removing the
    **Maps** button will just cause it to be regenerated next time we modify a page.
    This means we need to build our own menu out of buttons. There are a few tricks
    that we can use though that'll make managing our own menu easier. Go back to the
    ad overview and open the **Menu** page on the canvas.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: First, we'll save the button style of our menu as a preset so we can quickly
    apply it to all our own buttons. Single-click on the menu object to select it,
    then double click to enter the menu item editing mode; finally, click on one of
    the buttons in the menu to select it. Now, save the style as a preset using the
    **cog** button, then choose **Save**. Call your preset something like `Main Menu
    Button`, so you'll know which style to choose later. With the button style saved,
    we can safely delete our menu object. Click outside of the menu object to exit
    the menu item editing mode, and then single-click on the menu object to select
    it. Press the *delete* or *backspace* key to remove the entire object from the
    canvas.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: If the **Save** and **Save As…** items are disabled, try selecting the individual
    button again; it's often hard to select the right item!
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As we've no longer got any form of navigation in our **Menu** page, open the
    **Objects** library and click on the button object to add a new button to our
    canvas. From the style preset selector, update the style to your menu button style,
    for example **Main Menu Button**. The button should now look like the one from
    the menu we deleted; if it doesn't, make sure you have selected the right style.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let's change the button's `Touch Up Inside` event to `Go To Page`. Then, select
    the page to be `Bean Blender`, the first page of our iAd, with the same technique
    that we used to add a go-to target for our **store finder** button. Double-click
    on the button and replace the text with `Bean Blender` so it matches the go-to
    destination.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, we'll duplicate this button to save us having to create a new button from
    scratch. With the button object selected, right-click on it and choose **Copy**,
    or use the keyboard shortcut *cmd* + *C*. Now, right-click on the canvas and choose
    **Paste** from the menu, or use *cmd* + *V* on the keyboard. Paste the button
    two more times so you have four buttons on the screen:![Time for action — hidden
    pages](img/1321_06_16.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reposition each item so they're equally spaced on the page. Use the yellow guidelines
    that appear when dragging items near each other to ensure the spacing is correct,
    as shown in the following screenshot:![Time for action — hidden pages](img/1321_06_17.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change each item's `Touch Up Inside` event to go to the right page and text,
    so each page of our ad can be accessed like before. However, don't add a button
    for the **Maps** page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: You may have noticed in the ad overview that iAd Producer still shows the **Map**
    page as being connected to the **Menu** page. This is fine; iAd Producer assumes
    all of your pages are linked from the core menu page, even when you've changed
    it.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: With our custom menu complete, return to **ad overview** and open the **Maps**
    page. Currently, the button on our **Map** page says **Menu** and returns the
    user to the menu. However, as this page is now accessed from the **Voucher** page,
    we'll want to update the button to take them back there. Click on the **Menu**
    button to select it and then change it to go to **Steamy Savings**. Update the
    button text to `Back` to tell the user they'll be going back to the previous page
    they came from, not the menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the **Steamy Savings** page and reposition the `Wipe Clear` object over
    the page. You might have to right-click the `Wipe Clear` object and choose **Bring
    to Front** to make sure it's the most forward object on the canvas. Save and preview
    your iAd.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What just happened?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By building the menu ourselves, we get more control over the page structure
    of our ad, but lose the convenience of an automatically updating menu object.
  prefs: []
  type: TYPE_NORMAL
- en: 'Remember: if you''re adding any extra pages to your ad, you''ll need to go
    and add another button to the menu that points to that page; similarly, when removing
    pages, you''ll also have to remove the menu item.'
  prefs: []
  type: TYPE_NORMAL
- en: Have a go hero
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We''ve made quite a few changes to our ad, so why not try tidying it up? For
    example, you could do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Add transitions to our new pages to ease the user journey through our ad.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Try adding back in the **build in and out** action animations that we lost when
    we replaced the menu with a set of buttons.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Check that all buttons have the correct styling applied to them and that tapping
    them takes you to the right page.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Try adding another page and creating an item on the menu for it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test the ad thoroughly, ideally on more than one device. Try to fix any issues
    that you may find.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once your ad is looking awesome, save it and show it off to your team, friends,
    and family. It's a good idea to periodically have a full review and tidy up your
    ad throughout development, particularly when you're nearing the completion of
    your iAd.
  prefs: []
  type: TYPE_NORMAL
- en: Sending a message
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To generate additional promotion from within our iAd, we can enable pre-composed
    SMS text messaging and emailing right in our ad, without the user having to leave
    the ad or app. Encouraging your users to share their passion for your brand or
    product with a friend in a few simple taps increases the reach of our ad's potential
    audience substantially.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action — sending the message
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Out of the box, iAd Producer doesn't have an object or template that supports
    sending SMS; however, we can achieve this with the **iAd JS Library**, the framework
    that powers our iAd. We're able to send an SMS with just four lines of code; don't
    worry, it's very simple to add this to your ad.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Remember: iAd Producer is an editor that manages most of the iAd JS library
    for us, although it currently doesn''t support all the available features, so
    we occasionally have to modify and add some custom code.'
  prefs: []
  type: TYPE_NORMAL
- en: We'll continue with our `Coffee Beans` project; if it isn't already open, open
    it now.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Let''s create a button on the **Menu** page so our users can share our brand
    with their friends. Open the **Menu** page on the editing canvas and add a button
    object from the **Objects** library. Change the button text to something like
    `Tell a friend`, and then position the button on the bottom right of the screen.
    Change the button''s styling. For example, try:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Setting the background to a light-to-dark, linear, red gradient
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Changing the text color to white
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding a border radius to the button so it has rounded edges
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Including a drop shadow to add a light glow to the button
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Adjusting the different button states, such as highlighted, so your button changes
    when tapped
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: You'll probably need to reposition other objects on the page to accommodate
    the new button
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: You might want to make your button look like the following:![Time for action
    — sending the message](img/1321_06_18.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When you're happy with the style of the button, it's time to add a tiny bit
    of code to add our SMS sending functionality of the ad. With the button selected,
    right-click on it and select **Object Events** | **Touched Up Inside** | **Execute
    JavaScript**. You can see the menus in the following screenshot:![Time for action
    — sending the message](img/1321_06_19.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You''ll see a text window appear on your screen, with some code pre-filled
    for you; this is simply the set of actions that are run when this event is triggered.
    In the empty line between `function(event) {` and `}`;, type the following lines
    exactly:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading the example code**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.PacktPub.com](http://www.PacktPub.com). If you
    purchased this book elsewhere, you can visit [http://www.PacktPub.com/support](http://www.PacktPub.com/support)
    and register to have the files e-mailed directly to you.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Save this code file by clicking on **File** | **Save** from the menu bar, or
    with *cmd* + *S* on the keyboard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Return to the iAd Producer main window by closing the code window. Preview your
    ad on an iOS device; you can't use the iOS Simulator as it doesn't have SMS capabilities.
    If you don't see the messaging window appear when you tap the button, try repeating
    these steps and make sure the code matches exactly.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Save your iAd project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What just happened?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We styled a button and added a short piece of custom code. This code is written
    in JavaScript and called when certain events happen. Object Events are actions
    that occur on an object; we used **Touched Up Inside** as the event that is triggered
    when a user lifts their finger off an object. This then causes our code to be
    executed that in turn opens the SMS window.
  prefs: []
  type: TYPE_NORMAL
- en: With this powerful scripting language, we're able to integrate e-mail, SMS,
    telephone, and social networking into our advertisements.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Actions and destinations are goals that are directly beneficial to your brand,
    whether it''s a user socially sharing content with a friend or locating their
    nearest store with rich mapping. We looked at engaging the user with some of these
    compelling techniques:'
  prefs: []
  type: TYPE_NORMAL
- en: Promoting and buying iTunes store content, such as apps and media, right within
    our ad, generating additional revenue streams or promotion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customizing the store finder experience
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hiding certain pages of the ad from the main navigation to offer supplementary
    content
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sending an SMS text arranging to meet a friend using our first bit of JavaScript
    code!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We'll learn how to create even further interaction using advanced code later,
    but first, let's take a look at making ads for the big-screen iPad iAds.
  prefs: []
  type: TYPE_NORMAL
