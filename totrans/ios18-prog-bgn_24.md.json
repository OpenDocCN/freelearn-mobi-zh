["```swift\n    extension JournalListViewController: UISearchResultsUpdating {\n    } \n    ```", "```swift\n    // MARK: - Search\n    func updateSearchResults(for searchController: UISearchController) {\n      guard let searchBarText = searchController.searchBar.text\n      else { return }\n      print(searchBarText)\n    } \n    ```", "```swift\n    @IBOutlet var tableView: UITableView!\n    **private let****search****=****UISearchController****(****searchResultsController****:** **nil****)**\n    **private var****filteredTableData****: [****JournalEntry****]** **=** **[]** \n    ```", "```swift\n    override func viewDidLoad() {\n      super.viewDidLoad()\n      SharedData.shared.loadJournalEntriesData()\n    **search****.****searchResultsUpdater****=****self**\n    **search****.****obscuresBackgroundDuringPresentation****=****false**\n    **search****.****searchBar****.****placeholder****=****\"Search titles\"**\n    **navigationItem****.****searchController****=****search**\n    } \n    ```", "```swift\nsearch.searchResultsUpdater = self \n```", "```swift\nsearch.obscuresBackgroundDuringPresentation = false \n```", "```swift\nsearch.searchBar.placeholder = \"Search titles\" \n```", "```swift\nnavigationItem.searchController = search \n```", "```swift\n    //MARK: - Search\n    func updateSearchResults(for searchController: UISearchController) {\n      guard let searchBarText = searchController.searchBar.text\n      else {\n        return\n      }\n     **filteredTableData =** **SharedData****.****shared****.****allJournalEntries****()** **.****filter** **{ entry in** **entry.****entryTitle****.****lowercased****().****contains****(searchBarText** **.****lowercased****())**\n\n     **}**\n    **tableView****.****reloadData****()**\n    } \n    ```", "```swift\n    //MARK: - UITableViewDataSource\n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n    **if****search****.****isActive** **{**\n    **return** **filteredTableData.****count**\n     **}** **else** **{**\n    **return****SharedData****.****shared****.****numberOfJournalEntries****()**\n     **}**\n    } \n    ```", "```swift\n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n      let journalCell =   tableView.dequeueReusableCell(withIdentifier:   \"journalCell\", for: indexPath) as!  JournalListTableViewCell\n    **let** **journalEntry:** **JournalEntry**\n    **if****search****.****isActive** **{**\n     **journalEntry** **=** **filteredTableData[indexPath.****row****]**\n     **}** **else** **{** \n     **journalEntry** **=****SharedData****.****shared****.****journalEntry****(****at****: indexPath.****row****)**\n\n     **}**\n      if let photoData = journalEntry.photoData {\n        journalCell.photoImageView.image =     UIImage(data: photoData)\n      }\n      journalCell.dateLabel.text = journalEntry.date.formatted(\n      .datetime.month().day().year()\n    )\n      journalCell.titleLabel.text = journalEntry.entryTitle\n      return journalCell\n    } \n    ```", "```swift\n    //MARK: - Navigation\n    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n      super.prepare(for: segue, sender: sender)\n      guard segue.identifier == \"entryDetail\" else {\n        return\n      }\n      guard let journalEntryDetailViewController = \n      segue.destination as?\n      JournalEntryDetailViewController, \n      let selectedJournalEntryCell = sender as?\n      JournalListTableViewCell,   let indexPath = tableView.indexPath(for:\n      selectedJournalEntryCell)\n      else {\n        fatalError(\"Could not get indexpath\")\n      }\n    **let** **selectedJournalEntry:** **JournalEntry**\n    **if****search****.****isActive** **{**\n     **selectedJournalEntry** **=** **filteredTableData[indexPath.****row****]**\n     **}** **else** **{**\n     **selectedJournalEntry** **=**\n    **SharedData****.****shared****.****journalEntry****(****at****: indexPath.****row****)**\n     **}**\n      journalEntryDetailViewController.selectedJournalEntry = \n      selectedJournalEntry\n    } \n    ```", "```swift\n    class JournalEntry: NSObject, MKAnnotation, Codable {\n      // MARK: - Properties\n    **var****key****=****UUID****().****uuidString**\n      let date: Date\n      let rating: Int \n    ```", "```swift\n    func removeSelectedJournalEntry(_ selectedJournalEntry: JournalEntry) {\n      journalEntries.removeAll {\n        $0.key == selectedJournalEntry.key\n      }\n    } \n    ```", "```swift\n    //MARK: - TableViewDelegate\n    func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {\n      if editingStyle == .delete {\n    **if****search****.****isActive** **{**\n    **let** **selectedJournalEntry** **=****filteredTableData****[** **indexPath.****row****]**\n\n    **filteredTableData****.****remove****(****at****: indexPath.****row****)**\n    **SharedData****.****shared****.****removeSelectedJournalEntry****(**\n     **selectedJournalEntry)**\n     **}** **else** **{**\n          SharedData.shared.removeJournalEntry(at:       indexPath.row)\n        **}**\n        SharedData.shared.saveJournalEntriesData()\n        tableView.reloadData()\n      }\n    } \n    ```"]