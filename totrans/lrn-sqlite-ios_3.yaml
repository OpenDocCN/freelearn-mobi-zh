- en: Chapter 3. Administering the Database
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 章：数据库管理
- en: In this chapter, we are going to introduce you to administering the **SQLite**
    database and make you aware of the different components of this relational database
    system that best suits the mobile or tablet devices. SQLite is an embedded SQL
    engine and simply reads and writes to ordinary disk files instead of having a
    separate server process. It was designed for this purpose and is much easier to
    maintain and look after.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将向您介绍 SQLite 数据库的管理，并让您了解这个关系型数据库系统的不同组件，这些组件最适合移动或平板设备。SQLite 是一个嵌入式
    SQL 引擎，它简单地读取和写入普通磁盘文件，而不是有一个单独的服务器进程。它是为此目的而设计的，并且维护起来更容易。
- en: Apart from being a great database for programmers, SQLite is also an easier
    database to administer and maintain. There is no configuration or setup required
    to administer this database. It comes with a standard **command-line interface**
    (**CLI**) client that is available to administer the database(s).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 除了是一个优秀的程序员数据库外，SQLite 还是一个易于管理和维护的数据库。管理这个数据库不需要任何配置或设置。它附带了一个标准的 **命令行界面**（**CLI**）客户端，可用于管理数据库（们）。
- en: There is a variety of languages that work with SQLite which are easier to maintain
    and add new functionality.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多与 SQLite 兼容的语言，这些语言更容易维护并添加新功能。
- en: 'The following are the features of SQLite:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些 SQLite 的特性：
- en: SQLite is one of the most easy-to-learn databases, is easy to interact with,
    and gets on with the task of building a new database from scratch
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQLite 是最容易学习的数据库之一，易于交互，并且能够从头开始构建新的数据库。
- en: Its ability to integrate database engine itself into the code is a major boost
    for code development, performance, and interfacing
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它能够将数据库引擎本身集成到代码中，这对代码开发、性能和接口是一个巨大的提升。
- en: It is easy to start, learn, perform, and get practical with how a relational
    database system, functions, glued together and is a store for your application's
    data
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始、学习、执行以及在实际操作中了解关系型数据库系统如何组合在一起，以及它是如何存储应用程序数据的，这些都非常容易。
- en: In the market, there are a variety of tools that can be used to make database
    administration on SQLite even easier to use, more practical to install and go
    and develop. In our case, only the **command-line program** (**CLP**) will be
    used.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在市场上，有各种各样的工具可以使 SQLite 的数据库管理更加容易使用，安装更加实用，并便于开发。在我们的案例中，仅将使用 **命令行程序**（**CLP**）。
- en: 'These are some of the tools in the market:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是市场上的一些工具：
- en: '**RazorSQL**, located at [http://www.razorsql.com/features/sqlite_features.html](http://www.razorsql.com/features/sqlite_features.html),
    is a tailored piece of software that works in a browser environment. It can highlight
    syntax and comes with an editor to write and update code, some visual administrator
    tools, and functionality unique to SQLite.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**RazorSQL**，位于 [http://www.razorsql.com/features/sqlite_features.html](http://www.razorsql.com/features/sqlite_features.html)，是一款在浏览器环境中运行的定制软件。它可以突出显示语法，并提供一个编辑器来编写和更新代码，一些可视化管理员工具以及
    SQLite 独有的功能。'
- en: Another tool is **SQLite Maestro,** located at [http://www.sqlmaestro.com/products/sqlite/maestro/](http://www.sqlmaestro.com/products/sqlite/maestro/),
    which is a superior product aimed at the database management market for the creation,
    updation, and deletion of data using SQLite. For example, it includes a database
    designer, SQLite syntax checking, administrator tools, and a data exporter.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一个工具是 **SQLite Maestro**，位于 [http://www.sqlmaestro.com/products/sqlite/maestro/](http://www.sqlmaestro.com/products/sqlite/maestro/)，这是一个针对数据库管理市场的优秀产品，旨在使用
    SQLite 创建、更新和删除数据。例如，它包括数据库设计器、SQLite 语法检查、管理员工具和数据导出功能。
- en: '**Navicat** is another database management tool for SQLite, located at [http://www.navicat.com/products/navicat-for-sqlite](http://www.navicat.com/products/navicat-for-sqlite).
    Their product comes with some good visual tools, database maintenance functionality,
    reporting, and data exporting, for example.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Navicat** 是另一个 SQLite 数据库管理工具，位于 [http://www.navicat.com/products/navicat-for-sqlite](http://www.navicat.com/products/navicat-for-sqlite)。他们的产品包含一些优秀的可视化工具、数据库维护功能、报表和数据导出等功能。'
- en: 'CLP is actually a separate program that has the SQLite engine compiled in it.
    CLP operates both as a command line tool and interactive shell. The command line
    mode is the facility **database administrators** (**DBAs**) can use to create
    tables for an application, upload data to the skeleton tables, and modify information
    so that it is ready for development, testing, and releasing. To start using the
    command, in terminal monitor, type `sqlite3`:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: CLP 实际上是一个包含 SQLite 引擎的程序。CLP 既可以作为命令行工具，也可以作为交互式外壳运行。命令行模式是**数据库管理员**（**DBAs**）可以使用它来为应用程序创建表、上传数据到骨架表以及修改信息以便进行开发、测试和发布的设施。要开始使用命令，在终端监视器中输入
    `sqlite3`：
- en: '![Administering the Database](img/4725_03_01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![管理数据库](img/4725_03_01.jpg)'
- en: 'If you type `sqlite3 <database name>`, the system will be loaded into the named
    database and will be ready to do work. For example, you can also type `sqlite3
    –help`, as shown in the following screenshot, which will outline the commands
    available as part of the help. As shown in the following screenshot, there are
    a variety of options that will help the DBA or user perform tasks as required.
    Within `sqlite3`, to exit at the prompt, type `.exit` to leave the program. At
    the terminal prompt, `$`, type `sqlite3 –help` to get a list of commands, as shown
    here:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您输入 `sqlite3 <database name>`，系统将加载到命名的数据库中，并准备好进行工作。例如，您还可以输入 `sqlite3 –help`，如以下截图所示，这将概述作为帮助一部分可用的命令。如以下截图所示，有多种选项可以帮助
    DBA 或用户按需完成任务。在 `sqlite3` 中，要退出提示符，请输入 `.exit` 以离开程序。在终端提示符 `$` 中，输入 `sqlite3
    –help` 以获取命令列表，如此处所示：
- en: '![Administering the Database](img/4725_03_02.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![管理数据库](img/4725_03_02.jpg)'
- en: The preceding steps are manual and can be used by the database administrator.
    Shell scripts to automate database processes can ideally use the format, which
    can improve database performance.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的步骤是手动进行的，可以由数据库管理员使用。为了自动化数据库过程，Shell 脚本理想情况下可以使用该格式，这可以提高数据库性能。
- en: Creating a database
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建数据库
- en: 'To start, a database must be created. By using the following command to create
    the database, although it will be created, nothing will be physically stored in
    the database yet. There is no default place to store the SQLite database once
    it has been created. The location could be your home directory, a working directory,
    or a pre-created database directory:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，必须创建一个数据库。通过使用以下命令创建数据库，尽管数据库将被创建，但数据库中还没有实际存储任何内容。一旦创建，SQLite 数据库没有默认的存储位置。位置可能是您的家目录、工作目录或预先创建的数据库目录：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: By default, an environment is prepared ready effectively, for database objects,
    as defined by the preceding statement. SQLite was designed with the distinct policy
    of avoiding any size limits. To have a policy that would easily fit in the device's
    memory and be a 32-bit integer would work, but was not the best option. It proved
    to create problems since the product was pushed to extremes and the exploitation
    of security loopholes may have made the product vulnerable. The default settings
    of objects are generous and adequate for most applications. There are also different
    settings statements such as `SQLITE_MAX_COLUMN` that controls the maximum number
    of columns in a table, indexes, or view.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，环境已经准备好，以便有效地为数据库对象，如前所述定义。SQLite 被设计为具有避免任何大小限制的独特策略。为了有一个易于适应设备内存并作为
    32 位整数的策略是可行的，但这不是最佳选择。事实证明，当产品被推向极限并且可能利用安全漏洞时，这会引发问题。对象的默认设置很慷慨，对于大多数应用程序来说都是足够的。还有不同的设置语句，例如
    `SQLITE_MAX_COLUMN`，它控制表、索引或视图中的最大列数。
- en: It is only when tables and indexes are created that the physical creation of
    the database actually starts. This allows the DBA to alter different page settings
    before the disk parameters and allocations are created. Thereafter, it is more
    difficult to change the settings.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在创建了表和索引之后，数据库的物理创建实际上才开始。这允许 DBA 在创建磁盘参数和分配之前更改不同的页面设置。此后，更改设置会更加困难。
- en: Creating a table
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建表
- en: 'To create a table in the new database, use the following commands:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要在新的数据库中创建表，请使用以下命令：
- en: '![Creating a table](img/4725_03_03.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![创建表](img/4725_03_03.jpg)'
- en: After the preceding command is run to create a database, the `create table temp`
    statement is executed to make a temporary table. It has three columns, `id` which
    is a primary key whose value is automatically incremented; `name`, which is text;
    and `address`; which is also of text.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行上述命令创建数据库之后，执行`create table temp`语句以创建一个临时表。它有三个列，`id`是一个主键，其值会自动递增；`name`，是文本类型；以及`address`，也是文本类型。
- en: Inserting data
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 插入数据
- en: 'To insert data into the new table, use the following command. It is a simple
    operation to insert data into the table with the columns listed on the left-hand
    side, and the values and parameters, or data on the right-hand side of the same
    format type:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要将数据插入到新表中，请使用以下命令。这是一个简单的操作，将数据插入到左侧列出的表中，以及右侧相同格式类型的值和参数，或数据：
- en: '![Inserting data](img/4725_03_04.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![插入数据](img/4725_03_04.jpg)'
- en: 'Data is input into the `temp` table using data for two columns: `name` and
    `address`. Please note that no values are required for the `id` field since its
    value is provided internally by SQLite, which automatically increments its value.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 使用两个列的数据（`name`和`address`）将数据输入到`temp`表中。请注意，对于`id`字段不需要提供值，因为SQLite会内部提供，并且自动递增其值。
- en: Selecting data
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择数据
- en: 'To select data from the new table, follow the next command. It is a simple
    operation to fetch the information for display on the screen:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要从新表中选择数据，请遵循以下命令。这是一个简单的操作，用于获取信息并在屏幕上显示：
- en: '![Selecting data](img/4725_03_05.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![选择数据](img/4725_03_05.jpg)'
- en: Data is selected from the `temp` table using all columns, hence the character
    `*`, otherwise, a column name could have been specified instead, retrieving only
    that column data.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 从`temp`表中选择了所有列的数据，因此使用了字符`*`，否则可以指定一个列名，只检索该列数据。
- en: Creating an index
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建索引
- en: 'To create an index for the `temp` table, which will allow faster selection
    using the `id` field and also have a small overhead, which may be overtaken by
    the performance gain, use the following command:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要为`temp`表创建索引，这将允许使用`id`字段更快地进行选择，并且有少量的开销，这可能会被性能提升所超过，请使用以下命令：
- en: '![Creating an index](img/4725_03_06.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![创建索引](img/4725_03_06.jpg)'
- en: An index called `temp_idx` is created in the `name` column, which will allow
    faster access with a minimal overhead for data access.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在`name`列中创建了一个名为`temp_idx`的索引，这将允许以最小的数据访问开销更快地访问。
- en: Exporting data
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导出数据
- en: To export data from SQLite, the `.dump` command is used, as shown in the following
    screenshot. No arguments are required and the complete database can be exported
    in this way. If an argument is added like a table name, then only their contents
    will be exported. By default, the `.dump` command will output the data to the
    screen. If you want to direct the output to a filesystem, use the `.output` statement
    plus a space, and then the `file name`, as shown in the following screenshot.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要从SQLite导出数据，使用`.dump`命令，如下所示截图。不需要任何参数，可以以这种方式导出整个数据库。如果添加了一个参数，如表名，则只导出其内容。默认情况下，`.dump`命令将输出到屏幕。如果您想将输出定向到文件系统，请使用`.output`语句加上一个空格，然后是`文件名`，如下所示截图。
- en: After the commands are used, a file is created in your current directory. To
    get back to outputting the data back to the screen, use the `.output stdout` command,
    as shown here.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些命令后，在当前目录中创建了一个文件。要返回到屏幕上输出数据，请使用`.output stdout`命令，如下所示。
- en: 'Using these methods allows more flexibility, control, and better formatting
    output:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些方法可以提供更多的灵活性、控制和更好的输出格式：
- en: '![Exporting data](img/4725_03_07.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![导出数据](img/4725_03_07.jpg)'
- en: As shown in the preceding screenshot, there is an output to the `temp.sql` file.
    The `.dump` command is issued to output all the information about the database
    to the `temp.sql` file. To put the output back to the screen, use the `.output
    stdout` command.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个屏幕截图所示，输出到了`temp.sql`文件。执行了`.dump`命令，将所有数据库信息输出到`temp.sql`文件。要将输出返回到屏幕，请使用`.output
    stdout`命令。
- en: Viewing database schema data
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看数据库模式数据
- en: 'SQLite offers several commands as part of a command set to get information
    about the contents of a database. For example, to get a list of tables, use the
    `.table` command. To find a specific table name, use a `%` symbol and text as
    a pattern to find the result, for example, `.tables [pattern]`, as shown in the
    following screenshot. By issuing the `.tables` command and appending a `%te%`
    text to it, is a request to SQLite to list all its tables within the database
    that has the word `te` (in our case `temp`) in their name which are displayed
    correctly:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite提供了一系列命令，作为命令集的一部分，以获取有关数据库内容的信息。例如，要获取表列表，使用`.table`命令。要查找特定的表名，使用一个`%`符号和文本作为模式来查找结果，例如，`.tables
    [pattern]`，如下面的截图所示。通过发出`.tables`命令并将其附加一个`%te%`文本，是请求SQLite列出其数据库中所有名称中包含单词`te`（在我们的案例中是`temp`）的表，并且显示正确：
- en: '![Viewing database schema data](img/4725_03_08.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![查看数据库模式数据](img/4725_03_08.jpg)'
- en: Index data
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 索引数据
- en: 'Prior to the following example, a `temp_idx` index has been created, to get
    a list of indexes for the `temp` table, at the `sqlite3` prompt `.indices temp`,
    which is actually the `.indices` command followed by the table name, as shown
    here:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例之前，已经创建了一个`temp_idx`索引，要获取`temp`表的索引列表，在`sqlite3`提示符下输入`.indices temp`，这实际上是`.indices`命令后跟表名，如下所示：
- en: '![Index data](img/4725_03_09.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![索引数据](img/4725_03_09.jpg)'
- en: By using the preceding command, the `temp` table's index can be seen.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面的命令，可以看到`temp`表的索引。
- en: Schema data
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模式数据
- en: 'To view the schema of the database, the following command can be issued, `.schema`,
    but type the `.schema <table name>` command to get specific information on a `name`
    database object. See the following screenshot for more information:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看数据库的模式，可以发出以下命令，`.schema`，但输入`.schema <table name>`命令以获取关于特定`name`数据库对象的详细信息。请参阅以下截图以获取更多信息：
- en: '![Schema data](img/4725_03_010.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![模式数据](img/4725_03_010.jpg)'
- en: 'The preceding command shows the output from the `temp` set of tables and index
    from the database. The next command shows the whole database schema:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个命令显示了从数据库的`temp`集合的表和索引的输出。下一个命令显示了整个数据库模式：
- en: '![Schema data](img/4725_03_011.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![模式数据](img/4725_03_011.jpg)'
- en: The SQLite master schema table shows tables and indexes that exist on the SQLite
    database.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite主模式表显示了SQLite数据库上存在的表和索引。
- en: Backing up the database
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 备份数据库
- en: 'There are a couple of ways to back up your SQLite database. To make it portable,
    use the `.dump` statement as part of the CLP, which can export the entire database
    and scripts to the filesystem. An example can be seen as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 备份SQLite数据库有几种方法。为了使其便携，请在CLP中使用`.dump`语句，它可以导出整个数据库和脚本到文件系统。以下是一个示例：
- en: '![Backing up the database](img/4725_03_012.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![备份数据库](img/4725_03_012.jpg)'
- en: The preceding statement shows how to invoke SQLite with a database name and
    pipe the output to a file called `temp.sql`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的语句显示了如何使用数据库名称调用SQLite并将输出管道传输到名为`temp.sql`的文件。
- en: Following is another way to invoke SQLite and then perform a backup interactively.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是将SQLite和备份交互式调用的另一种方法。
- en: 'User can directly import the data, by the following set of commands:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以直接通过以下命令集导入数据：
- en: '![Backing up the database](img/4725_03_013.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![备份数据库](img/4725_03_013.jpg)'
- en: 'The following command will open SQLite and the `temp.db` database, and import
    the `temp.sql` file to it. Within the `temp.sql` file, there will be scripts to
    read the source files and import data back to database (existing or new version):'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将打开SQLite和`temp.db`数据库，并将`temp.sql`文件导入其中。在`temp.sql`文件中，将包含读取源文件并将数据导入数据库（现有或新版本）的脚本：
- en: '![Backing up the database](img/4725_03_014.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![备份数据库](img/4725_03_014.jpg)'
- en: There is another way, just copy the `temp.db` file to a version called `temp.backup`,
    but the aforementioned methods are much better and portable, and there may be
    binary compatibility issues since SQLite does not have a great reputation for
    backward compatibility.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是只需将`temp.db`文件复制到名为`temp.backup`的版本中，但上述方法更好且更便携，并且可能存在二进制兼容性问题，因为SQLite在向后兼容性方面并不享有很高的声誉。
- en: Database tools
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库工具
- en: 'There is a vast array of SQLite administration tools, and one of them is **SQL
    Browser** ([http://sqlitebrowser.org/](http://sqlitebrowser.org/)), which works
    on different platforms. Databases can be managed, tables can be exported or imported,
    and queries can be created, updated, and executed. The other tools are listed
    as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite 管理工具种类繁多，其中之一是 **SQL Browser** ([http://sqlitebrowser.org/](http://sqlitebrowser.org/))，它适用于不同的平台。数据库可以进行管理，表格可以导出或导入，查询可以创建、更新和执行。其他工具如下列出：
- en: '**RazorSQL**'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**RazorSQL**'
- en: '**Navicat**'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Navicat**'
- en: '**SQL Maestro**'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQL Maestro**'
- en: '**SQL Browser**'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQL Browser**'
- en: '**phpSQLiteAdmin**'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**phpSQLiteAdmin**'
- en: '**SQLiteManager**'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQLiteManager**'
- en: '**SQLite Expert**'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQLite Expert**'
- en: Another previous or abandoned project for SQLite administration is **phpSQLiteAdmin**.
    This is now abandoned and the last update was in 2008\. It is available at [http://phpsqliteadmin.sourceforge.net/](http://phpsqliteadmin.sourceforge.net/).
    phpSQLiteAdmin is a web interface for the administration of SQLite databases.
    It allows users to drop, create, and manage databases, and view database information
    like the schema, tables, indexes, and file metadata. There is a similar project
    in the market, namely; **Bitbucket** (available at [https://bitbucket.org/phpliteadmin/public/](https://bitbucket.org/phpliteadmin/public/)).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个用于 SQLite 管理的先前或已废弃的项目是 **phpSQLiteAdmin**。该项目现已废弃，最后一次更新是在 2008 年。它可在 [http://phpsqliteadmin.sourceforge.net/](http://phpsqliteadmin.sourceforge.net/)
    获取。phpSQLiteAdmin 是 SQLite 数据库管理的网络界面。它允许用户删除、创建和管理数据库，并查看数据库信息，如模式、表格、索引和文件元数据。市场上还有一个类似的项目，名为
    **Bitbucket**（可在 [https://bitbucket.org/phpliteadmin/public/](https://bitbucket.org/phpliteadmin/public/)
    获取）。
- en: '**SQLiteManager** is a product that can manage databases to create, update,
    and import or export data; SQLiteManager is available at [http://www.sqlitemanager.org/](http://www.sqlitemanager.org/).
    This is a web-based administration tool for SQLite. Rows in the tables can be
    managed and user functions can be created as required. Again, this project and
    product is not active at present and there have been no updates since 2013\. This
    product has now moved to Bitbucket and is no longer valid as SQLiteManager. However,
    since moving to Bitbucket in 2013, there have been no updates.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**SQLiteManager** 是一款可以管理数据库以创建、更新和导入或导出数据的产品；SQLiteManager 可在 [http://www.sqlitemanager.org/](http://www.sqlitemanager.org/)
    获取。这是一个基于网络的 SQLite 管理工具。表格中的行可以管理，并且可以根据需要创建用户函数。再次强调，该项目和产品目前不活跃，自 2013 年以来没有更新。该产品现已迁移到
    Bitbucket，不再作为 SQLiteManager 有效。然而，自 2013 年迁移到 Bitbucket 以来，没有更新。'
- en: There is an additional tool, namely SQLite Expert (available at [http://www.sqliteexpert.com/](http://www.sqliteexpert.com/))
    that has a personal and a professional edition. For example, it has a built-in
    **SQL Query Builder**, facilities to import and export data, and data editing.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一个名为 SQLite Expert 的额外工具（可在 [http://www.sqliteexpert.com/](http://www.sqliteexpert.com/)
    获取），它有个人版和专业版。例如，它内置了 **SQL 查询构建器**，提供了导入和导出数据的功能，以及数据编辑功能。
- en: Database file information
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库文件信息
- en: 'The `sqlite_master` view outlines the details of all the database objects within
    SQLite. In SQLite, the maximum size for a database would be 2,147,483,646 pages
    at 65,536 bytes per page or 140,737,488,224,256 bytes (about 140 terabytes), While
    the minimum size for an SQLite database is a single 512-byte page. The best way
    to see which tables exist is by performing an SQL statement on the master table,
    as shown in the following set of commands:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`sqlite_master` 视图概述了 SQLite 中所有数据库对象的详细信息。在 SQLite 中，数据库的最大大小为 2,147,483,646
    页，每页 65,536 字节，或 140,737,488,224,256 字节（约 140 太字节），而 SQLite 数据库的最小大小是一个 512 字节的页面。查看哪些表格存在最好的方法是通过对主表执行
    SQL 语句，如下面的命令集所示：'
- en: '![Database file information](img/4725_03_015.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![数据库文件信息](img/4725_03_015.jpg)'
- en: Effectively, download the `sqlite3_analyzer` program from the SQLite website.
    The program performs many functions, such as interrogating the database file and
    outputs a summary in text format showing the database structure, its environment,
    tables, indexes, the page sizes, entries, storage in bytes consumed, pages used,
    overflow pages, and unused bytes on primary pages.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，可以从 SQLite 网站下载 `sqlite3_analyzer` 程序。该程序执行许多功能，例如查询数据库文件，并以文本格式输出摘要，显示数据库结构、其环境、表格、索引、页面大小、条目、以字节为单位的存储、使用的页面、溢出页面和主页面上的未使用字节。
- en: The amount of detail available is impressive and useful when it comes to analyzing
    resources, components, and structure of a database.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 当分析数据库的资源、组件和结构时，可用的详细信息令人印象深刻且非常有用。
- en: The `sqlite3_analyzer` program can also be used in a variety of ways to use
    the statistics gained from using it. `sqlite3_analyzer` is a TCL script and is
    available at [http://www.sqlite.org/src/artifact/8e50b217c56a6a08](http://www.sqlite.org/src/artifact/8e50b217c56a6a08).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '`sqlite3_analyzer` 程序也可以以多种方式使用，以利用从其使用中获得的统计数据。`sqlite3_analyzer` 是一个 TCL
    脚本，可在 [http://www.sqlite.org/src/artifact/8e50b217c56a6a08](http://www.sqlite.org/src/artifact/8e50b217c56a6a08)
    获取。'
- en: Summary
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned how to administer and look after the SQLite relational
    database system, which has shown you in a simple way how to look after the database
    for your application. This chapter showed some of the basic elements of the SQLite
    database. It has covered the essentials of table creation and viewing tables that
    make up the schema. The topics are enough to get a grasp of the subject and master
    the basics. This chapter covers the basic elements and gave a helping hand to
    administer this easy-to-use database for mobile development. This chapter also
    summarizes how easy it is to administer as compared to other databases in the
    market. There are additional tools for SQLite Administration that can be found
    on the web. There are many more commands and not all have been shown as examples
    in this chapter. These are some of the methods of using and administering SQLite.
    This chapter showed you what is possible when you learn a few commands and how
    it can help use this simple, mobile database.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何管理和维护 SQLite 关系型数据库系统，它以简单的方式向你展示了如何管理应用程序的数据库。本章介绍了 SQLite 数据库的一些基本元素。它涵盖了创建表和查看构成模式的表的必要要素。这些主题足以让你掌握这个主题并精通基础知识。本章涵盖了基本元素，并为管理这个易于使用的移动数据库提供了帮助。本章还总结了与其他市场上的数据库相比，管理
    SQLite 的简便性。你可以在网上找到更多用于 SQLite 管理的工具。还有许多其他命令，本章并未全部以示例形式展示。这些都是使用和管理 SQLite
    的一些方法。本章向你展示了当你学习一些命令时，你可以做到什么，以及它如何帮助使用这个简单、移动的数据库。
- en: In the next chapter, you will learn all about the essentials of SQL. The chapter
    will outline how SQL can be used properly on this mobile database. It will show
    you how to use the SQLite method of using SQL compared to other databases and
    how easy it is to pick up SQL with SQLite.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习 SQL 的所有基本要素。本章将概述如何正确地在移动数据库上使用 SQL。它将向你展示如何使用 SQLite 的 SQL 方法与其他数据库相比，以及使用
    SQLite 学习 SQL 的简便性。
