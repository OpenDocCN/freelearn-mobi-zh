- en: Chapter 10. Publishing and Distribution
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So, the moment is finally here. We have put in our time and effort and made
    this awesome game. Now, we want the world to know about our creation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: The road to publishing a game is actually quite straightforward, provided you
    follow the steps correctly. Just as we created a developer profile so that we
    can run the game on the device, we also need to create a publisher profile in
    order to publish the game on the App Store or run it on any device other than
    our own.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The next step will be to create the app in the iTunesConnect portal. This is
    where you will give the app a name, a description, an icon, and screenshots. Finally,
    you will upload the app file from the system to the App Store.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: You will also have the opportunity to decide whether you want to give the game
    away for free or charge a price.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: Although achievements and leaderboards are not covered in this book, you can
    definitely add them to the game, along with ads, so that you can monetize the
    game.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: 'So, let''s get started with getting the game ready for being published. Here''s
    what you will learn in this chapter:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Getting the app ready
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Distribution certificate
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The iTunesConnect portal
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating the app
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ad hoc installation
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: References
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alternatives
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Final remarks
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting Ms. tinyBazooka ready
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: First, we will make some changes to the app. Click on the project root and then
    on the information screen of the project. Here, change the bundle identifier by
    double-clicking on the area adjacent to it. For example, I changed the bundle
    name to `com.growlgamesstudio.Ms.TinyBazooka`. Also, change the bundle name to
    reflect the name of the game; otherwise, the name of the project will be displayed,
    which we don't want.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Make sure that the bundle version is set to `1.0`. This is the release version.
    Later, when you make updates to the game, you will need to change the number for
    every new update you make. The rest of the items can remain as default.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting Ms. tinyBazooka ready](img/B04014_10_01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
- en: Next, we will change the icons so that instead of the default icon, we can use
    our own icon for the game. In the project directory in the hard disk, navigate
    to the `images.xcassets` folder and replace the `AppIcon.appiconset` folder, which
    is the one currently present, with the one provided in the resources folder of
    the chapter.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Now, if you build the game, the name will reflect properly, along with the new
    icon that you have provided.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting Ms. tinyBazooka ready](img/B04014_10_02.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
- en: This will also be reflected in your project if you click on **AppIcon** in the
    `images.xcassets` folder in your project.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting Ms. tinyBazooka ready](img/B04014_10_03.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
- en: This has the icons specified for all iOS devices. So later, when I want to make
    a universal app, I don't have to specify icons for the different iPhone and iPod
    devices.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we will also change the launch image, which shows a white screen as
    of now, with the name of the game and some copyright information. Click on the
    project root. In the **General** tab, which is under the **App Icons and Launch
    Images** section, click on the **Use Assets Catalog** button next to **Launch
    Image source**.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting Ms. tinyBazooka ready](img/B04014_10_04.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
- en: 'Next, click on **Migrate**. Then, click on the small arrow pointing to the
    right to the launch image dropdown:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting Ms. tinyBazooka ready](img/B04014_10_05.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
- en: This will take you to the launch image in the assets catalog. Since we are developing
    only for iPad landscape mode, we can drag-and-drop the background images into
    the **1x** and **2x** slots of the landscape section. Make sure that the **Launch
    Screen File** field is empty in **App Icons Source** and **Launch Images Source**.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, we will remove the debug information that shows the number of nodes
    added and the FPS. So, go to the `GameViewController` class and comment or delete
    these two lines:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now, when you launch the game, you will see the background image instead of
    the other white background. The app will show the proper icon, and the debug information
    will be removed.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Generating the distribution certificate
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To distribute the app, we need the distribution certificate. This is included
    with all the apps that are released on the App Store because without it, an app
    cannot be installed on any device.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: For getting the distribution certificate, the steps are similar to setting up
    the developer certificate. Go to the Apple developer portal and sign in with the
    developer account you created in the first chapter at [https://developer.apple.com/devcenter/ios/index.action](https://developer.apple.com/devcenter/ios/index.action).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: On the right-hand side of the screen, click on the **Certificates, identifiers
    and profiles** link under **iOS Developer Program**. Then, click on **Certificates**.
    Next, click on the **+** sign in the top-right corner of the screen.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: In the next screen, select **App Store and AdHoc** and click on **Continue**.
    In the next step, create a **Certificate Signing Request** (**CSR**) file, as
    the portal requires it to be uploaded to it. Go to Launchpad, search for `KeyChain`,
    and open it.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '![Generating the distribution certificate](img/B04014_10_06.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
- en: Then, navigate to **KeyChainAccess** | **Certificate Assistant** | **Request
    a Certificate Authority**.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '![Generating the distribution certificate](img/B04014_10_07.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
- en: Enter your e-mail address and name, select **Saved to disk**, and click on **Continue**.
    Save the file on the desktop in the next step.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: On the developer website, click on **Continue**. In the next step, click on
    **Choose file** and **Generate**. Next, download the certificate created. Double-click
    on the file after the download to install the certificate.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '![Generating the distribution certificate](img/B04014_10_08.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
- en: On the website, click on **Done**. Now we are ready distribute the game.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: The iTunesConnect portal
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To create the app, we will need to go to the iTunesConnect portal. In the developer
    portal, click on the iTunesConnect link, or go to [https://itunesconnect.apple.com](https://itunesconnect.apple.com).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: You might be asked to sign in, so do it using the developer ID and password.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '![The iTunesConnect portal](img/B04014_10_09.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
- en: 'Once in, you should see a page like this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '![The iTunesConnect portal](img/B04014_10_10.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
- en: 'The various parts of this page are as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '**My Apps**: This is where we will create new apps and update existing apps'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sales and Trends**: This will show the number of units of each app you have
    sold over a period of time. You can check the sales per territory, platform, category,
    content type, transaction type, and so on.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Payment and Financial Reports**: Here, you will get a report of the summary
    of the items sold, earnings, amount owed by Apple, and payments made by Apple
    to you:![The iTunesConnect portal](img/B04014_10_11.jpg)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**iAds**: Apple has its own ad network from which you can pool and show ads
    in your game. You have to use the iAds workbench to configure iAds.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Users and Roles**: Here, information regarding the roles of individuals involved
    with the account can be updated. The person who created the Apple ID needs to
    input their details here. Later, if you add testers for the game, you''ll need
    to include their details here, as well.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Agreements, Tax and Banking**: As the name suggests, this is where you will
    need to sit with an attorney, go through Apple''s agreements, and digitally agree
    and sign all of them. You will also be providing your banking information here
    so that when you create a paid app, you can be paid for the sale of the app. The
    **Tax** section will have tax forms that will need to be filled in. Primarily,
    there are forms for US, Canada, and Australia, depending on your location. If
    you are not from any of these three countries, then you will need to fill in the
    US tax forms.![The iTunesConnect portal](img/B04014_10_12.jpg)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resources and Help**: Here, you have links to resources such as forums and
    FAQs that you can refer to if you need answers to any questions. You can also
    click on **Contact Us** and send an e-mail with your query. Apple''s personnel
    will reply to you.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With the basic introduction out of the way, we can click on **My Apps** to publish
    and distribute the Ms. TinyBazooka game.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Creating the app
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To create a new app, in the **My Apps** section, click on the **+** sign in
    the top-left corner of the page. Then, click on **New iOS App**, as shown in this
    screenshot:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_13.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
- en: 'The following window will open up:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_14.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
- en: 'The various parts of this page are as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '**Name**: This is the name of the app as it will appear in the App Store. If
    the name you are suggesting has already been taken, then you will need to give
    an alternate name and also change it in the info file in Xcode.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Version**: This needs to be the same as the version number you provided in
    the information in the project. Since our game is Version 1.0, we type in this
    value.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Primary Language**: Choose the language used in the game. You can choose
    English.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SKU**: This is the stock keeping unit number you need to provide. You can
    enter `001`.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bundle ID**: This is what the app will be recognized by on the app store.
    We need to register the `com.growlgamesstudio.Ms.TinyBazook` bundle ID in the
    developer portal so that when we upload the app to iTunesConnect, it will link
    up the app to the bundle ID.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Click on the developer portal link under the Bundle ID drop-down menu.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_15.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
- en: In **App Id Description**, type a name for the app; this is just for reference.
    Next, in **App ID Suffix**, type the app bundle ID exactly as you typed in the
    info. So, in this case, I have to type `com.growlgamesstudio.Ms.TinyBazooka`.
    Once again, this is unique for each app.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_16.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
- en: Click on **Continue** to proceed. On the next page, after confirming your app
    ID, click on **Submit**. The registration is now complete. Click on **Done** at
    the bottom of the window.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_17.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
- en: You will now see that the bundle ID has been added to **App IDs** under **Identifiers**
    in the developer portal.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: Go back to the **App Creation** window and in the **BundleID** drop-down list,
    you will be able to select the tinyBazooka bundle ID. Select it and click on **Submit**.
    This might take a couple of minutes to update and reflect in the drop-down menu.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: You will now be greeted with the app page. Here, we will add the description
    and screenshots, and upload the binary file. Next to the **Submit for Review**
    button, there is a **Save** button, which will light up whenever you make a change.
    The **Save** button is your friend, so use it as often as possible so that you
    don't lose any changes that you make.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: First, we will add some screenshots. You can create a screenshot from your device
    by clicking on the power and home buttons at the same time on the device. Take
    five screenshots, plug the device into the Mac, and transfer the images to the
    desktop. Then you can drag the files from the desktop to the space on the iTunes
    app page. You can drag-and-drop each file separately or all files at the same
    time. Click on the **iPad** tab at the top, as we are developing the game only
    for the iPad, for now.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_18.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
- en: 'Next, we will have to provide the name of the app as it will appear on the
    App Store. So, in the **Name** section, type the name of the app:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_19.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
- en: We will have to provide a small description of the game. We can highlight the
    genre, story, and pretty much anything we want to tell users about the app here.
    You can keep it as long or as short as you want.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_20.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
- en: To the right of the description, we can provide keywords, support, marketing,
    and privacy policy URLs. Keywords, the description, and the title are parts of
    the ranking algorithm, so do good research to make sure that your game gets ranked
    higher.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_21.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
- en: Next, we need to upload the icon for the app. The icon shouldn't have rounded
    corners and alpha. It would also better to have higher resolution; 1024 x 1024
    would be ideal. A sample icon has been provided in the `Resources` folder for
    you to test. Drag the icon into the **App Icon** slot.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_22.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
- en: Now, we have to select the main the category for the app. You can select up
    to two subcategories. For the main category, choose **Games**. The subcategory
    mainly depends on the genre of the game. Here, I have chosen **Action and Arcade**
    as subcategories.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_23.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
- en: 'Next, we have to specify the rating for the game. In the **Ratings** section,
    click on the **Edit** link:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_24.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
- en: Rate each of the items as **None** if the content described doesn't appear at
    all in the game. If it does, then select either infrequent or very frequent. Depending
    on this, the game will be rated for a suitable audience. So, if your target audience
    is kids, then it should be **None** for the first section and **No** for the last
    two items ideally. This will make the game rated for ages 4 and above. Otherwise,
    you are targeting either a teen or an adult audience, so choose carefully.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, under **Edit License Agreement**, the standard end user license agreement
    is selected by default. Otherwise, you can include a custom license:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_25.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
- en: Now, we have to upload the build of the game. So, open the game in Xcode. Once
    Xcode opens, on the top menu, select **Product** and then **Archive**.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_26.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
- en: 'Once the app is archived, the following window will open up. If it doesn''t,
    you can also access it by going to **Window** | **Organizer** | **Archives**:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_27.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
- en: Notice that the identifiers and version number match what we input when we created
    the app in iTunesConnect. This is important because the bundle cannot be uploaded
    otherwise. To upload the build, click on the **Submit** button to the right.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, Xcode will check for the team for provisioning profile. If you are an
    individual, your account name will show up as shown in the following screenshot.
    Select it and click on **Choose**:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_28.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
- en: Next, the **Send App to Apple** window will pop up. Click on **Submit**. Now
    the archive bundle will be built and it will be uploaded to Apple.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_29.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
- en: This might take 5-25 minutes, depending on the time of the year and your Internet
    connection's upload speed. During Christmas and other holidays, it might take
    even longer because a lot of developers will be uploading their apps, so it is
    better to think ahead and upload in advance.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: Once the binary is uploaded, click on **Done**. If you get some errors, don't
    be alarmed. Fix the errors that are mentioned, create a new archive, and upload
    a new binary.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, go back to the app page on iTunesConnect. Under the **Add Build** section,
    click on the **+** sign on the left, select the build that you have just uploaded,
    and select **Done** in the pop-up window:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_30.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
- en: Next, in the **App Review Information** heading, add your contact information.
    Include your name, e-mail address, and contact information.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: Under **Version Release**, you can select either **Automatically** releasing
    the version or **Manually Releasing** the game.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: If you select **Automatically** releasing, the app will be released as soon
    it passes the review process. In the manual release, you can provide a date on
    which the app will be released. So, even if the app passes the review, it will
    still not be released until the release date.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: Next, we have to specify the pricing for the game. At the top, select **Pricing**.
    Here, you can select the date you want to release your app on and the pricing
    tier for the app.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_31.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
- en: If you have selected automatic release, then you don't have to specify the date.
    For pricing, you can select from any of the tiers provided or you can select free.
    To create a paid app, you have to update the banking information in the **Banking
    and Taxation** heading.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: 'After selecting the pricing, click on **Save** at the bottom of the screen.
    Next, click on **Submit for Review**:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_32.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
- en: If your app includes an encryption, a third-party application or advertisements,
    click on **Yes**, or else select **No**. Then, click on **Submit**.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: Congratulations! You have successfully submitted your app for review. The status
    of the app will change to **Waiting for Review**. It usually takes 5-7 days for
    an app to be reviewed by Apple's app review team, so sit back and hold tight.
    You will receive an e-mail saying whether your app is accepted or rejected.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the app](img/B04014_10_33.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
- en: If the app is accepted, it will appear in the App Store shortly. If the app
    is rejected, don't worry! You will be able to rectify the errors and submit the
    app again for review. It will again take about a week for it to be reviewed. So,
    when making apps, make sure that you avoid making errors in the upload. Also prepare
    more in advance when you want to release your app on the App Store.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: Creating an ad hoc app
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can build the game to a device by connecting it to the machine, but what
    if a friend or a client would like to run the app on their device and they live
    somewhere else? For that, you can create an ad hoc app. The steps are quite similar
    to creating and publishing on the App Store; it's just that this time, you will
    need to provide the device IDs on which the app can run.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: So first, we need to add the device ID of the device on which we want to run
    the app. The device ID is a unique number, which is specific to a particular device.
    So, if your friend has an iPad and an iPhone and he would like to run it on both
    the devices, then you will need to ask for both the device IDs from him. The device
    ID is also a **user device ID** (**UDID**).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: 'To get the UDID, connect the device to the Mac and open iTunes. In the summary
    under **Settings**, click on **Serial Number** to reveal the UDID of the device:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating an ad hoc app](img/B04014_10_34.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
- en: 'You can also go to **Devices** under **Window** in Xcode and select the device
    to show the UDID of the device:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating an ad hoc app](img/B04014_10_35.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
- en: So, once you get the UDID from your friend, open the Apple Developer Portal.
    Go to the **Certificates, Identifiers and Profiles** section. Click on **Devices**
    in the panel on the left side.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: Once it opens, click on the **+** sign in the top-right corner of the page.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating an ad hoc app](img/B04014_10_36.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
- en: In the **Name** section, type the name of the friend and their device, enter
    the UDID directly below it, and click on **Continue**. Repeat the process to add
    the UDID for the other device.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: You can also upload a file with the UDID and register all devices at once by
    selecting **Register Multiple Devices** and uploading the file. In any case, note
    that Apple will let you register up to 100 devices. So, it is more suitable for
    testing your game with testers.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: Now, open up the project on Xcode. In the top bar, go to **Window** and select
    **Organizer** from the drop-down list.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating an ad hoc app](img/B04014_10_37.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
- en: This will open the same window that opened when you archived your file for publishing.
    Instead of clicking on the Submit button, click on the **Export** button this
    time. Under **Select the Method for Export**, select **Save for AdHoc deployment**
    and click on **Next**.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating an ad hoc app](img/B04014_10_38.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
- en: Next, select **Development Team to Use for Provisioning**. Select your name
    from the drop-down list and click on **Choose**.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: Now, an archive will be created. In the next screen, a summary will be provided
    with the app and the files that will be part of the bundle. Click on **Export**.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: Next, you will be asked to choose a location where you want the exported file
    to be saved. So, create a directory in the project folder and name it builds.
    Name and save the file in it.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating an ad hoc app](img/B04014_10_39.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
- en: This `.ipa` file is what needs to be sent to your friend now, so that they can
    run on it on their devices.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's see how to run this on a device. Connect the device to your Mac
    or PC. You will need the latest version of iTunes to install the app. So, if you
    haven't updated iTunes, then now is a good time to do so. Once the device is connected,
    open iTunes; in most cases, iTunes should open automatically.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: Click on the three dots next to the movies section on the top and select **Apps**.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating an ad hoc app](img/B04014_10_40.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
- en: This will show all the apps. Next, drag the `.ipa` file you just created into
    this area. The app will be added to the list of apps that are currently present.
    Then, select the device icon right next to the three dots you selected earlier.
    On the panel to the left under **Settings**, select **Apps**. This will show all
    the apps ready to be installed.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: Scroll down the list to the see the apps that are designed for iPads and iPhones.
    Select the Ms.TinyBazooka app and click on **Install**.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating an ad hoc app](img/B04014_10_41.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
- en: Once you click on **Install**, it will change to **Will Install**. At the bottom
    of the windows, select **Apply**. Now, it will start installing the app onto the
    device. Once installed, the **Will Install** text will change to **Remove**. This
    means that the installation is complete.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: Now, you can run the app, the same as you would run any other app.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: References
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For Swift, SpriteKit, SceneKit, and Metal, Apple has provided very good documentation.
    All of these can be accessed from the Apple Developer Portal for free.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: All the API and functions are very cleanly explained, and if you want a deeper
    understanding of the functions and variables used, then links are also provided
    for each. You can click on them and read through them in order to understand their
    implementation.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: You can go to [https://developer.apple.com/library/mac/navigation/](https://developer.apple.com/library/mac/navigation/)
    and search for SpriteKit or SceneKit for the respective documentation.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '![References](img/B04014_10_42.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
- en: 'To learn more about Metal, you can visit the site at [https://developer.apple.com/metal/](https://developer.apple.com/metal/):'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: '![References](img/B04014_10_43.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
- en: 'For more information about Swift, you can visit the Apple site at [https://developer.apple.com/swift/](https://developer.apple.com/swift/):'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: '![References](img/B04014_10_44.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
- en: Alternative frameworks/engines
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For SpriteKit and 2D game development, there are a couple of alternatives. Once
    you create a game using SpriteKit and if it becomes a hit, you would obviously
    want to bring it to other platforms as well, such as Android and Windows Phone.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: For cross-platform game development, you have Cocos2d and Coco2d-x. With Cocos2d,
    you can develop games for iOS and Android, simultaneously. You can develop your
    game in either Objective-C or Swift. Once you've understood development using
    SpriteKit, you will notice that the syntax is pretty similar, so you will feel
    right at home.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: 'Industry professionals have used Cocos2d for a very long time to develop stellar
    games. It is open source and completely free. It has a good community, where you
    can ask questions to help find answers for your problems, and it is regularly
    updated. If you are interested, you can access it at [http://cocos2d.spritebuilder.com/](http://cocos2d.spritebuilder.com/):'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: '![Alternative frameworks/engines](img/B04014_10_45.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
- en: Like Cocos2d, Cocos2d-x is also completely open source and free and supports
    cross-platform game development. With Cocos2d-x, you can develop games for iOS,
    Android, Windows Phone, PC, Mac, Linux, and more.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: You can create two-dimensional as well as three-dimensional games, using Cocos2d-x.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to develop games with Cocos2d-x, you are required to know C++. But
    there is also Cocos2d-js, which uses JavaScript as its development language. By
    using it, you can even develop a game for the Web. It can be downloaded from [http://www.cocos2d-x.org/](http://www.cocos2d-x.org/):'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: '![Alternative frameworks/engines](img/B04014_10_46.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
- en: For three-dimensional game development engines, you can take a look at Unity
    and Unreal Engine. You can develop games for 2D as well using the engine.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: Unity uses JavaScript, C#, and Boo as its languages for development, and Unreal
    uses C++. At GDC, both of these frameworks are completely free to use, so I really
    recommend checking them out at [http://unity3d.com/5](http://unity3d.com/5) and
    [https://www.unrealengine.com/](https://www.unrealengine.com/).
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: Final remarks
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By now, I am hoping that you have got a good foundation for developing 2D and
    3D games with Swift, SpriteKit and SceneKit. I also hope that you have gained
    some basic understanding of graphics programming with Metal.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: With these tools, you should be able to develop and publish your games on the
    iOS store. This is the first step; there is more to learn about each of these
    frameworks, if you want to make better looking games.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: With my experience in Swift, SpriteKit and SceneKit, I can say that both Swift
    and SceneKit were only introduced iOS 8 and Xcode 6\. This is definitely a good
    start for Apple, and I hope that with the next version, these will be improved
    upon. As and when more people start accepting and using Swift and SceneKit, there
    will be a much bigger developer community that you will be able to take help from
    and be part of. This is just like SpriteKit, which is widely used by hobbyists
    and enthusiasts.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: If you have any questions, would like an expert opinion, or would simply like
    to share your creations, you can mail me by visiting the **Contact Me** section
    of my company website. You can also follow me at `@sidshekar`, and I will reply
    to your query as soon as possible.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有任何问题，需要专家意见，或者只是想分享你的作品，你可以通过访问我公司的**联系我**部分来给我发邮件。你也可以在`@sidshekar`上关注我，我会尽快回复你的询问。
- en: Summary
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: So, in this final chapter, we saw how to prepare our app for publishing and
    create the publishing license. You learned about the iTunesConnect portal, created
    an app in it, and finally published the app on the iOS store. At the end, we saw
    how to create an ad hoc build of the game that can be run on a specific device.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本章的最后，我们看到了如何为我们的应用发布做准备，并创建发布许可证。你了解了iTunesConnect门户，在其中创建了一个应用，并最终在iOS商店发布了应用。最后，我们看到了如何创建一个可以在特定设备上运行的游戏的临时构建版本。
- en: I had a wonderful time writing this book. Along the way, I myself learned a
    lot about these technologies and game development in general. I hope that you
    will enjoy this book as much as I enjoyed bringing it to you.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 我在撰写这本书的过程中度过了美好的时光。在这个过程中，我自己对这些技术和游戏开发有了很多了解。我希望你们能像我享受将这本书带给你们一样，享受这本书。
- en: Happy game developing!
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你游戏开发愉快！
