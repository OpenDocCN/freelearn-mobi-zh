- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Functional programming (FP) is getting a lot of attention as it eases many of
    the difficulties faced in object-oriented programming (OOP), such as testability,
    maintainability, scalability, and concurrency. Swift has a lot of functional programming
    features that can be easily used, but most Objective-C and Swift programmers are
    not familiar with these tools.
  prefs: []
  type: TYPE_NORMAL
- en: This book aims to simplify the functional programming paradigms and make it
    easily usable for Swift programmers, showing you how to use popular functional
    programming techniques to solve many of your day-to-day development problems.
    Whether you are new to functional programming and Swift or experienced, this book
    will provide you with the skills you need to design and develop high quality,
    easily maintainable, scalable, and efficient applications for iOS, macOS, tvOS,
    and watchOS. Through this book, you'll learn to build bug-free, maintainable code
    using functional programming.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Getting Started with Functional Programming
    in Swift"), *Getting Started with Functional Programming in Swift*, introduces
    functional programming paradigms, such as immutability, stateless programming,
    pure, first-class, and higher-order functions. This chapter will provide an introduction
    to the Swift programming language and functional programming paradigms in Swift.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Functions and Closures"), *Functions and
    Closures*, begins with a definition of functions, continues with other related
    topics, such as function types and tuples, and finally concludes with more advanced
    topics such as first-class functions, higher-order functions, function composition,
    closures, currying, recursion, and memoization.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Types and Type casting"), *Types and Type
    casting*, takes a look at types in general and explores reference versus value
    types in detail. We will cover topics such as value and reference type constants,
    mixing value and reference types, and copying. Then we will discuss the characteristics
    of value types. We will also cover the key differences between value and reference
    types, and how we should decide which one to use. We will continue by exploring
    equality, identity, type checking, and casting topics.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Enumerations and Pattern Matching"), *Enumerations
    and Pattern Matching*, explains the enumeration definition and usage. We will
    cover associated and raw values and introduce the concept of algebraic data types.
    We will explore some examples to cover the sum, product, and recursion types.
    Also, in this chapter, we will explore patterns such as wildcard, value-binding,
    identifier, tuple, enumeration case, optional, type casting, and expression, along
    with related pattern matching examples.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Generics and Associated Type Protocols"),
    *Generics and Associated Type Protocols*, teaches us how to define and use generics.
    We will also understand the type of problems generics solve. Moving forward, we
    will explore type constraints, generic data structures, and associated type protocols
    with examples.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Map, Filter, and Reduce"), *Map, Filter,
    and Reduce*, introduces the map, filter, and reduce methods in the Swift programming
    language with appropriate examples. These methods are used on arrays and can replace
    almost all uses of for-in loops and are more clear and concise.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Dealing with Optionals"), *Dealing with Optionals*,
    familiarizes us with different techniques to deal with optionals. We will talk
    about built-in techniques to deal with optionals, such as optional binding, guard,
    coalescing, and optional chaining. Then we will explore functional programming
    techniques to deal with optionals.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Functional Data Structures"), *Functional
    Data Structures*, introduces you to the concept of functional data structures
    and explores examples of data structures implemented in functional way, such as
    Semigroup, Monoid, BST, LinkedList, Stack, and LazyList.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Importance of Immutability"), *Importance
    of Immutability*, explores the concept of immutability. We will look at its importance
    and benefits with the help of examples. Then we will look into cases for mutability
    and go through an example to compare mutability and immutability effects on our
    code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. The Best of Both Worlds – Combining FP
    Paradigms with OOP"), *The Best of Both Worlds – Combining FP Paradigms with OOP*,
    covers object-oriented programming principles and paradigms. Then we will be introduced
    to protocol-oriented programming. Next, we will have an introduction of functional
    reactive programming and explore how to mix FP with OOP paradigms.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](ch11.html "Chapter 11. Case Study – Developing an iOS Application
    with the FP and OOP Paradigms"), *Case Study – Developing an iOS Application with
    the FP and OOP Paradigms*, teaches us to develop a Todo backend and an iOS application,
    employing the concepts we have discussed so far. We will use functional programming
    techniques to parse and map the data, we will use functional reactive programming
    to reactively manage events in applications. We will also employ protocol-oriented
    programming and object-oriented programming techniques as well.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To follow along with the examples in this book, you'll need to have an Apple
    computer with macOS 10.10 or higher installed. You'll also need to install Xcode
    version 8 beta 1 with Swift 3.0 Preview 1.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The book is for iOS and macOS developers with basic knowledge of Swift programming.
    Prior knowledge of object-oriented programming is assumed.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    `VerboseClass.h` file defines an interface as a subclass of the `NSObject` class."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Next, we will create a **Single View Application** project in Xcode."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of. To send us general
    feedback, simply e-mail feedback@packtpub.com, and mention the book's title in
    the subject of your message. If there is a topic that you have expertise in and
    you are interested in either writing or contributing to a book, see our author
    guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads & Errata**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Download**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Swift-3-Functional-Programming](https://github.com/PacktPublishing/Swift-3-Functional-Programming).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the color images of this book
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from [http://www.packtpub.com/sites/default/files/downloads/Swift3FunctionalProgramming_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/Swift3FunctionalProgramming_ColorImages.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at copyright@packtpub.com with a link to the suspected pirated
    material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at questions@packtpub.com,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
