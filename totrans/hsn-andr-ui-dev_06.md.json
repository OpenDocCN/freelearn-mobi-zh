["```kt\npublic Attachment selectById(final long id) {\n   final Cursor cursor = db.query(\n           \"attachments\",\n           new String[]{\"file\", \"type\"},\n           \"_id=?\",\n           new String[]{Long.toString(id)},\n           null, null, null);\n\n   try {\n       if (cursor.moveToFirst()) {\n           return new Attachment(\n                   new File(cursor.getString(0)),\n                   Attachment.Type.valueOf(cursor.getString(1))\n           );\n       }\n   } finally {\n       cursor.close();\n   }\n   return null;\n}\n```", "```kt\nimplementation 'android.arch.persistence.room:runtime:+'\nannotationProcessor 'android.arch.persistence.room:compiler:+'\n```", "```kt\n@Entity\npublic class ClaimItem implements Parcelable {\n```", "```kt\n@PrimaryKey(autoGenerate = true)\npublic long id;\n```", "```kt\n@Ignore List<Attachment> attachments = new ArrayList<>();\n```", "```kt\nprotected ClaimItem(final Parcel in) {\n       id = in.readLong();\n       description = in.readString();\n       amount = in.readDouble();\n       // …\n}\n\npublic void writeToParcel(final Parcel dest, final int flags) {\n   dest.writeLong(id);\n   dest.writeString(description);\n   dest.writeDouble(amount);\n   dest.writeLong(timestamp != null ? timestamp.getTime() : -1);\n   dest.writeInt(category != null ? category.ordinal() : -1);\n   dest.writeTypedList(attachments);\n}\n```", "```kt\n@Entity(indices = @Index(\"claimItemId\"))\npublic class Attachment implements Parcelable {\n```", "```kt\n@PrimaryKey(autoGenerate = true)\npublic long id;\npublic long claimItemId;\n```", "```kt\npublic Attachment() {}\n@Ignore public Attachment(final File file, final Type type) {\n    this.file = file;\n    this.type = type;\n}\n```", "```kt\nprotected Attachment(final Parcel in) {\n    id = in.readLong();\n claimItemId = in.readLong();\n    file = new File(in.readString());\n    type = Type.values()[in.readInt()];\n}\n\npublic void writeToParcel(final Parcel dest, final int flags) {\n    dest.writeLong(id);\n dest.writeLong(claimItemId);\n    dest.writeString(file.getAbsolutePath());\n    dest.writeInt(type.ordinal());\n}\n```", "```kt\n@Query(“SELECT * FROM users WHERE _id = :id”)\npublic User selectById(long id);\n```", "```kt\n@Query(“SELECT contacts.firstname, contacts.lastname, emails.address FROM contacts, emails WHERE emails._id = contacts.primaryEmailId ORDER BY contacts.lastname”)\npublic List<DisplayContact> selectDisplayContacts()\n```", "```kt\nimplementation 'android.arch.lifecycle:runtime:+'\nimplementation 'android.arch.lifecycle:extensions:+'\nannotationProcessor 'android.arch.lifecycle:compiler:+'\n```", "```kt\n@Dao\npublic interface ClaimItemDao {\n```", "```kt\n@Query(\"SELECT * FROM claimitem ORDER BY timestamp DESC\")\nLiveData<List<ClaimItem>> selectAll();\n```", "```kt\n@Insert long insert(ClaimItem item);\n@Update void update(ClaimItem item);\n@Delete void delete(ClaimItem item);\n```", "```kt\n@Dao\npublic interface AttachmentDao {\n```", "```kt\n@Query(\"SELECT * FROM attachment WHERE claimItemId = :claimItemId\")\nLiveData<List<Attachment>> selectForClaimItemId(final long claimItemId);\n```", "```kt\n@Insert long insert(Attachment attachment);\n@Update void update(Attachment attachment);\n@Delete void delete(Attachment attachment);\n```", "```kt\n@Database(\n        entities = {ClaimItem.class, Attachment.class},\n        version = 1,\n        exportSchema = false)\npublic abstract class ClaimDatabase extends RoomDatabase {\n```", "```kt\n@Database(\n        entities = {ClaimItem.class, Attachment.class},\n        version = 1,\n        exportSchema = false)\n@TypeConverters(ClaimDatabase.class)\npublic abstract class ClaimDatabase extends RoomDatabase {\n```", "```kt\npublic abstract ClaimItemDao claimItemDao();\npublic abstract AttachmentDao attachmentDao();\n```", "```kt\n@TypeConverter\npublic static Long fromDate(final Date date) {\n    return date == null ? null : date.getTime();\n}\n\n@TypeConverter\npublic static Date toDate(final Long value) {\n    return value == null ? null : new Date(value);\n}\n```", "```kt\n@TypeConverter\npublic static String fromFile(final File value) {\n    return value == null ? null : value.getAbsolutePath();\n}\n\n@TypeConverter\npublic static File toFile(final String path) {\n    return path == null ? null : new File(path);\n}\n\n@TypeConverter\npublic static String fromCategory(final Category value) {\n    return value == null ? null : value.name();\n}\n\n@TypeConverter\npublic static Category toCategory(final String name) {\n    return name == null ? null : Category.valueOf(name);\n}\n\n@TypeConverter\npublic static String fromAttachmentType(final Attachment.Type value) {\n    return value == null ? null : value.name();\n}\n\n@TypeConverter\npublic static Attachment.Type toAttachmentType(final String name) {\n    return name == null ? null : Attachment.Type.valueOf(name);\n}\n```", "```kt\nprivate static ClaimDatabase DATABASE;\n```", "```kt\n@Override\npublic void onCreate() {\n    super.onCreate();\n    DATABASE = Room.databaseBuilder(\n this,                 /* Context */\n            ClaimDatabase.class,  /* Abstract Database Class */\n            \"Claims\"              /* Filename */ \n    ).build();\n}\n```", "```kt\npublic static ClaimDatabase getClaimDatabase() {\n    return DATABASE;\n}\n```", "```kt\n<application\n    android:name=\".ClaimApplication\"\n    android:icon=\"@mipmap/ic_launcher\"\n    android:label=\"@string/app_name\"\n    android:roundIcon=\"@mipmap/ic_launcher_round\"\n    android:supportsRtl=\"true\"\n    android:theme=\"@style/AppTheme\">\n```"]