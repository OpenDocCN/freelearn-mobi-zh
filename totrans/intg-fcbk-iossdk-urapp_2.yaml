- en: Chapter 2. Creating a New iOS Social Project
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章 创建新的iOS社交项目
- en: With this chapter, we start our coding journey. We are going to build our social
    application from the group up.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本章，我们开始我们的编码之旅。我们将从头开始构建我们的社会应用。
- en: 'In this chapter we will learn about:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下内容：
- en: '**Creating a Facebook App ID**: It is a key used with our APIs to communicate
    with the Facebook Platform.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建Facebook App ID**：这是与我们的API一起使用的关键，用于与Facebook平台通信。'
- en: '**Downloading the Facebook SDK**: iOS SDK can be downloaded from two different
    channels. We will look into both of them.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**下载Facebook SDK**：iOS SDK可以从两个不同的渠道下载。我们将探讨这两个渠道。'
- en: '**Creating a new XCode Project**: I will give a brief introduction on how to
    create a new XCode project and description of the IDE environment.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建新的XCode项目**：我将简要介绍如何创建新的XCode项目以及IDE环境的描述。'
- en: '**Importing Facebook iOS SDK into our XCode project**: I will go through the
    import of the Facebook SDK into our XCode project step-by-step.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**将Facebook iOS SDK导入到我们的XCode项目中**：我将逐步介绍如何将Facebook SDK导入到我们的XCode项目中。'
- en: '**Getting familiar with Storyboard to build a better interface**: This is a
    brief introduction on the Apple tool to build our application interface.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**熟悉Storyboard以构建更好的界面**：这是对苹果工具的简要介绍，用于构建我们的应用程序界面。'
- en: 'Before starting any job, we should always check whether we have the right tools.
    In order to start building our application, we need two things:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始任何工作之前，我们应始终检查我们是否有合适的工具。为了开始构建我们的应用程序，我们需要两样东西：
- en: '**Mac OS machine**: XCode runs only on Macs (officially)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Mac OS机器**：XCode仅在Mac上运行（官方）'
- en: '**XCode**: It is the editor used to build our social application'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**XCode**：这是用于构建我们的社会应用的编辑器'
- en: The target of this book is to explain how to integrate the iOS Facebook SDK
    into our application. Using XCode and Objective-C concepts are outside the scope
    of this book. This chapter will give a quick introduction on XCode because we
    assume readers are already familiar with the Apple development environment and
    their features. We are going to build a social application for book tracking.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的目标是解释如何将iOS Facebook SDK集成到我们的应用程序中。使用XCode和Objective-C概念超出了本书的范围。本章将简要介绍XCode，因为我们假设读者已经熟悉苹果开发环境和其功能。我们将构建一个用于图书跟踪的社会应用。
- en: Creating a Facebook App ID
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Facebook App ID
- en: In order to communicate with the Facebook Platform using their SDK, we need
    an identifier for our application. This identifier, also known as Facebook App
    ID, will give access to the Platform; at the same time, we will be able to collect
    a lot of information about its usage, impressions, and ads.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用他们的SDK与Facebook平台进行通信，我们需要为我们的应用程序提供一个标识符。这个标识符，也称为Facebook App ID，将使我们能够访问平台；同时，我们还将能够收集大量有关其使用情况、印象和广告的信息。
- en: 'To obtain a Facebook App ID, we need a Facebook account. If you don''t have
    one, you can create a Facebook account via the following page at [https://www.facebook.com](https://www.facebook.com):'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取Facebook App ID，我们需要一个Facebook账户。如果您还没有，您可以通过以下页面创建一个Facebook账户：[https://www.facebook.com](https://www.facebook.com)：
- en: '![](img/VDlWgBty.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/VDlWgBty.jpg)'
- en: The previous screenshot shows the new Facebook account sign up form. Fill out
    all the fields and you will be able to access the Facebook Developer Portal.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张截图显示了新的Facebook账户注册表单。填写所有字段后，您将能够访问Facebook开发者门户。
- en: Once we are logged into Facebook, we need to visit the Developer Portal. You
    can find it at [https://developers.facebook.com/](https://developers.facebook.com/).
    I already mentioned the important role of Developer Portal in developing our social
    application.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们登录到Facebook，我们需要访问开发者门户。您可以在[https://developers.facebook.com/](https://developers.facebook.com/)找到它。我已经提到了开发者门户在开发我们的社会应用中的重要作用。
- en: '![](img/eAetWvJY.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/eAetWvJY.jpg)'
- en: The previous screenshot shows the Facebook Developer Portal. The main section,
    the top part, is dedicated to the current SDKs. On the top-blue bar, click on
    the **Apps** link, and it will redirect us to the Facebook App Dashboard.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张截图显示了Facebook开发者门户。主要部分，即顶部部分，是专门用于当前SDK的。在顶部蓝色栏上点击**Apps**链接，它将重定向我们到Facebook应用仪表板。
- en: '![](img/WjqVQLjn.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/WjqVQLjn.jpg)'
- en: The previous screenshot shows the Facebook App Dashboard. To the left, we have
    a list of apps; on the center of the page, we can see the details of the currently
    selected app from our list. The page shows the application's setting and analytics
    (**Insights**).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张截图显示了Facebook应用仪表板。在左侧，我们有一个应用列表；在页面中心，我们可以看到列表中当前选定应用的详细信息。页面显示了应用的设置和分析（**洞察**）。
- en: In order to create a new Facebook App ID, you can click on **Create New App**
    on the top-right part of the App Dashboard.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建一个新的Facebook App ID，您可以在应用仪表板的右上角点击**创建新应用**。
- en: '![](img/uhLazoAP.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/uhLazoAP.jpg)'
- en: The previous screenshot shows the first step in order to create a Facebook App
    ID. When providing the **App Name**, be sure the name does not already exist or
    violate any copyright laws; otherwise, Facebook will remove your app. **App Namespace**
    is something that we need if we want to define custom objects and/or actions in
    the Open Graph structure. The **App Namespace** topic is not part of this book.
    Web hosting is really useful when creating a social web application. Facebook,
    in partnership with other providers, can create a web hosting for us if needed.
    This part is not going to be discussed in this book; therefore, do not check this
    option for your application.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张截图显示了创建Facebook App ID的第一步。在提供**应用名称**时，请确保该名称尚未存在或违反任何版权法；否则，Facebook将删除您的应用。**应用命名空间**是我们想要在Open
    Graph结构中定义自定义对象和/或操作时需要的东西。**应用命名空间**主题不包含在本书中。Web托管在创建社交Web应用时非常有用。如果需要，Facebook可以与其他提供商合作为我们创建Web托管。这部分内容将不会在本书中讨论；因此，请不要为您的应用选择此选项。
- en: Once all the information is provided, we can move on to the next step. Please
    fill out the form, and move forward to the next one.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦提供了所有信息，我们就可以继续下一步。请填写表格，并继续到下一个步骤。
- en: '![](img/Q4qJ03IT.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Q4qJ03IT.jpg)'
- en: On the top of the page, we can see both **App ID** and **App Secret**. These
    are the most important pieces of information about our new social applicaton.
    **App ID** is a piece of information that we can share unlike **App Secret**.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面顶部，我们可以看到**App ID**和**App Secret**。这是我们新社交应用最重要的信息。**App ID**是我们可以分享的信息，而**App
    Secret**则不可以。
- en: At the center of our new Facebook Application Page, we have basic information
    fields. Do not worry about **Namespace**, **App Domains**, and **Hosting URL**;
    these fields are for web applications. **Sandbox Mode** only allows developers
    to use the current application. Developers are specified through the **Developer
    Roles** link on the left side bar.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们新的Facebook应用页面中心，我们有基本信息字段。不要担心**命名空间**、**应用域名**和**托管URL**；这些字段是针对Web应用的。**沙盒模式**仅允许开发者使用当前应用。开发者通过左侧边栏上的**开发者角色**链接进行指定。
- en: Moving down, select the type of app. For our goal, select **Native iOS App**.
    You can select multiple types and create multiplatform social applications.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 向下移动，选择应用的类型。对于我们的目标，选择**原生iOS应用**。您可以选择多个类型并创建多平台社交应用。
- en: 'Once you have checked **Native iOS App**, you will be prompted with the following
    form:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您选择了**原生iOS应用**，您将看到一个以下表格：
- en: '![](img/dNN1zlqo.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dNN1zlqo.jpg)'
- en: The only field we need to provide for now is the **Bundle ID**. The **Bundle
    ID** is something related to XCode settings. Be sure that the Facebook **Bundle
    ID** will match our **XCode Social App Bundle Identifier**. The format for the
    bundle identifier is always something like `com.MyCompany.MyApp`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在需要提供的唯一字段是**包标识符**。**包标识符**与XCode设置有关。确保Facebook的**包标识符**将与我们的**XCode社交应用包标识符**匹配。包标识符的格式始终类似于`com.MyCompany.MyApp`。
- en: '**iPhone**/**iPad App Store IDs** are the App Store identifiers of your application
    if you have published your app in the App Store. If you didn''t provide any of
    them after you saved your changes, you will receive a warning message; however,
    don''t worry, our new **App ID** is now ready to be used.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**iPhone**/**iPad App Store IDs**是您在App Store发布应用时的App Store标识符。如果您在保存更改后没有提供任何这些标识符，您将收到一个警告消息；然而，请不要担心，我们新的**App
    ID**现在可以使用了。'
- en: Save your changes and get ready to start our developing journey.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 保存您的更改，并准备好开始我们的开发之旅。
- en: Downloading the Facebook iOS SDK
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载Facebook iOS SDK
- en: 'The iOS Facebook SDK can be downloaded through two different channels:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: iOS Facebook SDK可以通过两个不同的渠道下载：
- en: '**Facebook Developer Portal**: For downloading the installation package'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Facebook开发者门户**：用于下载安装包'
- en: '**GitHub**: For downloading the SDK source code'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GitHub**：用于下载SDK源代码'
- en: Using Facebook Developer Portal, we can download the iOS SDK as the installation
    package. Visit [https://developers.facebook.com/ios/](https://developers.facebook.com/ios/)
    as shown in the following screenshot and click on **Download the SDK** to download
    the installation package.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Facebook开发者门户，我们可以下载iOS SDK作为安装包。如以下截图所示访问[https://developers.facebook.com/ios/](https://developers.facebook.com/ios/)并点击**下载SDK**以下载安装包。
- en: '![](img/zLJTuTRO.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/zLJTuTRO.jpg)'
- en: The package, once installed, will create a new **FacebookSDK** folder within
    our `Documents` folder.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 安装包安装后，将在我们的`Documents`文件夹中创建一个新的**FacebookSDK**文件夹。
- en: '![](img/tIUBG5QS.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/tIUBG5QS.jpg)'
- en: 'The previous screenshot shows the content of the iOS SDK installation package.
    Here, we can see four elements:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的截图显示了iOS SDK安装包的内容。在这里，我们可以看到四个元素：
- en: '**FacebookSDK.framework**: This is the framework that we will import in our
    XCode social project'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FacebookSDK.framework**：这是我们将在XCode社交项目中导入的框架'
- en: '**LICENSE**: It contains information about licensing and usage of the framework'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LICENSE**：它包含有关框架许可和使用的相关信息'
- en: '**README**: It contains all the necessary information about the framework installation'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**README**：它包含有关框架安装的所有必要信息'
- en: '**Samples**: It contains a useful set of sample projects that uses the iOS
    framework''s features'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Samples**：它包含一组有用的示例项目，这些项目使用了iOS框架的功能'
- en: With the installation package, we only have the compiled files to use, with
    no original source code.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 使用安装包，我们只有编译后的文件可以使用，没有原始源代码。
- en: 'It is possible to download the source code using the GitHub channel. To clone
    `git repo`, you will need a Git client, either Terminal or GUI. The iOS SDK framework
    `git repo` is located at [https://github.com/facebook/facebook-ios-sdk.git](https://github.com/facebook/facebook-ios-sdk.git).
    I prefer the Terminal client that I am using in the following command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过GitHub渠道下载源代码。要克隆`git repo`，你需要一个Git客户端，无论是终端还是图形用户界面。iOS SDK框架`git repo`位于[https://github.com/facebook/facebook-ios-sdk.git](https://github.com/facebook/facebook-ios-sdk.git)。我更喜欢以下命令中使用的终端客户端：
- en: '[PRE0]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After we have cloned the repo, the target folder will look as the following
    screenshot:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们克隆了repo之后，目标文件夹将如下截图所示：
- en: '![](img/spAyo5lX.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/spAyo5lX.jpg)'
- en: 'The previous picture shows the content of the **iOS SDK GitHub repo**. Two
    new elements are present in this repo: **src** and **scripts**. **src** contains
    the framework source code that needs to be compiled. The **scripts** folder has
    all the necessary scripts needed to compile the source code.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的图片显示了**iOS SDK GitHub repo**的内容。在这个repo中出现了两个新元素：**src**和**scripts**。**src**包含需要编译的框架源代码。**scripts**文件夹包含编译源代码所需的所有必要脚本。
- en: Using the GitHub version allows us to keep the framework in our social application
    always up-to-date, but for the scope of this book, we will be using the installation
    package.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用GitHub版本可以使我们在社交应用中始终保持框架的最新状态，但就本书的范围而言，我们将使用安装包。
- en: Creating a new XCode project
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建新的XCode项目
- en: We created a Facebook App ID and downloaded the iOS Facebook SDK. It's time
    for us to start our social application using XCode.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个Facebook App ID并下载了iOS Facebook SDK。现在是时候使用XCode开始我们的社交应用程序了。
- en: The application will prompt the welcome dialog if **Show this window when XCode
    launches** is enabled.![](img/vIhM2pXb.jpg)
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果启用了**在XCode启动时显示此窗口**，应用程序将提示欢迎对话框！[](img/vIhM2pXb.jpg)
- en: Choose the **Create a new XCode project** option. If the welcome dialog is disabled,
    navigate to **File** | **New** | **Project…**.![](img/V0Ysg5Oh.jpg)
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**创建新的XCode项目**选项。如果欢迎对话框已禁用，请导航到**文件** | **新建** | **项目…**！[](img/V0Ysg5Oh.jpg)
- en: Choosing the type of project to work with is the next step as shown in the following
    screenshot:![](img/hccaL07b.jpg)
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要工作的项目类型是下一步，如下面的截图所示！[](img/hccaL07b.jpg)
- en: The bar to the left defines whether the project is targeting a desktop or a
    mobile device. Navigate to **iOS** | **Application** and choose the **Single View
    Application** project type.![](img/fSaxx9pR.jpg)
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 左侧的条目定义了项目是针对桌面还是移动设备。导航到**iOS** | **应用程序**并选择**单视图应用程序**项目类型！[](img/fSaxx9pR.jpg)
- en: 'The previous screenshot shows our new project''s details. Provide the following
    information for your new project:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的截图显示了新项目的详细信息。为新项目提供以下信息：
- en: '**Product Name**: This is the name of our application'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**产品名称**：这是我们应用程序的名称'
- en: '**Organization Name**: I will strongly recommend filling out this part even
    if you don''t belong to an organization because this field will be part of our
    **Bundle Identifier**'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组织名称**：即使您不属于任何组织，我也强烈建议填写这部分，因为此字段将是我们的**Bundle Identifier**的一部分。'
- en: '**Company Identifier**: It is still optional, but we should definitely fill
    it out to respect the best-practice format for **Bundle Identifier**'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公司标识符**：虽然这仍然是可选的，但我们绝对应该填写它，以尊重**Bundle Identifier**的最佳实践格式。'
- en: '**Class Prefix**: This prefix will be prepended to every class we are going
    to create in our project'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**类前缀**：此前缀将被添加到我们将在项目中创建的每个类之前。'
- en: '**Devices**: We can select the target device of our application; in this case,
    it is an iPhone but we could also have chosen iPad or Universal'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设备**：我们可以选择应用程序的目标设备；在这种情况下，是一个iPhone，但我们也可以选择iPad或通用。'
- en: '**Use Storyboards**: We are going to use storyboards to create the user interface
    for our application'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用故事板**：我们将使用故事板来创建应用程序的用户界面。'
- en: '**Use Automatic Reference Counting**: This feature enables reference counting
    in the **Objective C Garbage Collector**'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用自动引用计数**：此功能使**Objective C垃圾回收器**能够进行引用计数。'
- en: '**Include Unit Tests**: If it is selected, XCode will also create a separate
    project target to unit-test our app; this is not part of this book'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**包含单元测试**：如果选中，XCode还将为我们的应用程序创建一个单独的项目目标以进行单元测试；这不是本书的内容。'
- en: Save the new project. I will strongly recommend checking the **Create a local
    git repository for this project** option in order to keep track of changes. Once
    the project is under version control, we can also decide to use GitHub as the
    remote host to store our source code.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 保存新项目。我强烈建议勾选**为此项目创建本地git仓库**选项，以便跟踪更改。一旦项目处于版本控制之下，我们还可以决定使用GitHub作为远程主机来存储我们的源代码。
- en: '![](img/wClePNy7.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/wClePNy7.jpg)'
- en: Importing the Facebook SDK into the application project
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Facebook SDK导入到应用程序项目中
- en: 'I have already mentioned that we are going to import Facebook SDK using the
    installation package. The installation package will create a **FacebookSDK** folder
    within the **Documents** folder. Within the folder, locate the **FacebookSDK**.
    **framework** folder, and drag it onto your XCode project. Drop the framework
    within the **Frameworks** section of **Project Navigator** as shown in the following
    screenshot:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经提到，我们将使用安装包导入Facebook SDK。安装包将在**Documents**文件夹中创建一个**FacebookSDK**文件夹。在文件夹中，找到**FacebookSDK**.
    **framework**文件夹，并将其拖放到您的XCode项目中。将框架拖放到**Project Navigator**的**Frameworks**部分，如图所示：
- en: '![](img/FVL4ym2c.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/FVL4ym2c.jpg)'
- en: When prompted to import the settings, check the **Copy items into destination
    group's folder (if needed)** option.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当提示导入设置时，请勾选**将项目复制到目标组文件夹中（如有必要）**选项。
- en: Locate the **Facebook SDK** folder within your project directory using **Finder**.
    You can find the folder location from XCode by right-clicking on and navigating
    to **SDK** | **Show in Finder**. Within the **Framework** folder, locate the **Resources**
    folder and open it.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**Finder**在您的项目目录中定位**Facebook SDK**文件夹。您可以通过在XCode中右键单击并导航到**SDK** | **在Finder中显示**来找到文件夹位置。在**Framework**文件夹中，找到**Resources**文件夹并打开它。
- en: '![](img/lafR3Ykx.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/lafR3Ykx.jpg)'
- en: As we did for the Facebook Framework, drag-and-drop `FacebookSDKResources.bundle`
    within the **Frameworks** section of XCode. It will be used for creating UI objects
    in the iOS project. Still check whether the **Copy items into destination group's
    folder (if needed)** option needs to be enabled.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们对Facebook框架所做的那样，将`FacebookSDKResources.bundle`拖放到XCode的**Frameworks**部分。它将用于在iOS项目中创建UI对象。仍然检查是否需要启用**将项目复制到目标组文件夹中（如有必要）**选项。
- en: The SDK relies on three frameworks already included in XCode, such as AdSupport,
    Accounts, and Social. We need to add these frameworks to our project. In the target's
    **Summary** pane, locate **Linked Frameworks and Libraries**, click on **+**,
    and the list of all available frameworks will show up.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: SDK依赖于XCode中已经包含的三个框架，例如AdSupport、Accounts和Social。我们需要将这些框架添加到我们的项目中。在目标**摘要**面板中，找到**链接的框架和库**，点击**+**，将显示所有可用的框架列表。
- en: '![](img/ZDd9Fpd0.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ZDd9Fpd0.jpg)'
- en: Select the frameworks mentioned in the previous image, and click on **Add**.
    The three packages will be added into our root project folder. In order to keep
    our project in order, we can move the three frameworks into the **Frameworks**
    section of our project.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 选择之前图像中提到的框架，并点击**添加**。这三个包将被添加到我们的根项目文件夹中。为了保持我们的项目有序，我们可以将这三个框架移动到项目的**Frameworks**部分。
- en: '![](img/InFQw62Z.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/InFQw62Z.jpg)'
- en: The next step is to add **SQLite** and the **-ObjC linker Flags**. In the **Summary**
    pane, select the project in **Targets**, locate **Build Settings** to your right,
    and check **All** and **Levels** in the bar underneath. Now in the search bar,
    type `other link`. The result should look as the following screenshot.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是添加**SQLite**和**-ObjC链接器标志**。在**Summary**面板中，选择**Targets**中的项目，在右侧找到**Build
    Settings**，在下面的条中检查**All**和**Levels**。现在在搜索栏中输入`other link`。结果应该看起来像下面的屏幕截图。
- en: '![](img/WcZfnpJ2.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/WcZfnpJ2.jpg)'
- en: 'Then select the **Other Linker Flags** entry, and double-click on the third
    column, the one after **Resolved**. Add the following flags to it:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 然后选择**Other Linker Flags**条目，双击第三列，即**Resolved**之后的列。向其中添加以下标志：
- en: '**-ObjC**'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-ObjC**'
- en: '**-lsqlite3.0**![](img/XEdZOfh1.jpg)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-lsqlite3.0**![](img/XEdZOfh1.jpg)'
- en: Now we need to set the Facebook framework to use the Facebook App ID we created
    previously. In **Navigator**, locate the `Application-Info.plist` file; you can
    find it in the project **Navigator** | **Application Folder** | **Supporting Files**.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要将Facebook框架设置为使用我们之前创建的Facebook App ID。在**Navigator**中，定位到`Application-Info.plist`文件；您可以在项目的**Navigator**
    | **Application Folder** | **Supporting Files**中找到它。
- en: Create a new entry with the `FacebookAppID` key; the value needs to be a string
    type with your Facebook App ID previously created.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的条目，使用`FacebookAppID`键；值需要是一个字符串类型，包含您之前创建的Facebook App ID。
- en: 'We also need to ensure that the application receives the callback URL of the
    web-based authentication flow (`OAuth`). To achieve this, create a new URL type
    array entry with a single item. Add a new **URL Schemes** array to the array item,
    and the first entry will be a string key with the Facebook App ID prefixed with
    `fb`. You can see the result in the following screenshot:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要确保应用程序接收到基于Web的身份验证流程（`OAuth`）的回调URL。为了实现这一点，创建一个新的URL类型数组条目，包含一个单独的项目。向数组项目添加一个新的**URL
    Schemes**数组，第一个条目将是一个以`fb`前缀的Facebook App ID的字符串键。您可以在下面的屏幕截图中看到结果：
- en: '![](img/eEI49Aek.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eEI49Aek.jpg)'
- en: The new social iOS project is now ready. In the next chapter, we will start
    coding new features.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 新的社会iOS项目现在已准备就绪。在下一章中，我们将开始编写新的功能代码。
- en: Getting familiar with Storyboard to build a better interface
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 熟悉Storyboard以构建更好的界面
- en: '**Storyboard** is a great tool to build an iPhone/iPad user interaction and
    interface. Using it, we are able to sketch the entire dataflow and interaction
    before we start developing our code.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**Storyboard**是构建iPhone/iPad用户交互和界面的优秀工具。使用它，我们能够在开始编写代码之前绘制整个数据流和交互。'
- en: Storyboard was introduced with the iOS 5 release. Previously, the only available
    format to build the UI was the XIB format. The XIB format provides the ability
    to build one interface at a time, whereas Storyboard allows you to work across
    multiple interfaces and connect them using actions (**segues**).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Storyboard是在iOS 5版本中引入的。在此之前，唯一可用的构建UI的格式是XIB格式。XIB格式允许一次构建一个界面，而Storyboard允许您跨多个界面工作，并使用动作（**segues**）将它们连接起来。
- en: Storyboard is not meant to completely replace the XIB format; in fact, they
    can coexist easily.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Storyboard并不是要完全取代XIB格式；实际上，它们可以轻松共存。
- en: The following screenshot shows an example of Storyboard in action. Each of the
    elements in Storyboard is called a **scene**. Scenes are connected through segues.
    Two scenes are embedded within a navigation controller, the object to the extreme
    left in the screenshot; the two main controllers are connected to each other using
    two segues associated with a button in each scene.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的屏幕截图中显示了Storyboard的实际应用示例。Storyboard中的每个元素都称为**场景**。场景通过segues连接。两个场景嵌入在导航控制器中，截图中最左侧的对象；两个主要控制器通过每个场景中按钮关联的两个segues相互连接。
- en: '![](img/Akrk34eB.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Akrk34eB.jpg)'
- en: For this project, we will be taking advantage of the Storyboard features to
    build the application interface.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，我们将利用Storyboard功能来构建应用程序界面。
- en: Summary
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to create a new Facebook App ID that will be
    used to identify our social application on the social platform. We also created
    a new iPhone project, and downloaded the Facebook iOS SDK. In order to use the
    Facebook iOS SDK, we had to import several frameworks in our social project, and
    set some specific linker flags that will be used by the Facebook SDK. It's important
    also to remember that we need to use the Facebook App ID previously created in
    our application; otherwise, Facebook SDK will throw an exception because the Facebook
    App ID is used to communicate with the social platform.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何创建一个新的Facebook App ID，这个ID将用于在社交平台上识别我们的社交应用。我们还创建了一个新的iPhone项目，并下载了Facebook
    iOS SDK。为了使用Facebook iOS SDK，我们必须在我们的社会项目中导入几个框架，并设置一些特定的链接器标志，这些标志将由Facebook
    SDK使用。同样重要的是要记住，我们需要在我们的应用程序中使用之前创建的Facebook App ID；否则，Facebook SDK将抛出异常，因为Facebook
    App ID用于与社交平台通信。
- en: An important tool that will also be used to build our social project is Storyboard.
    Storyboard will help users to create our GUI and define user interaction.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重要的工具，它也将被用来构建我们的社会项目，就是Storyboard。Storyboard将帮助用户创建我们的图形用户界面并定义用户交互。
