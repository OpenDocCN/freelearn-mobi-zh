["```swift\n    import UIKit\n    class ViewController: UIViewController {\n       @IBOutlet var toastLabel: UILabel!\n       @IBOutlet var eggLabel: UILabel!\n       @IBOutlet var plateAndServeLabel: UILabel!\n       @IBOutlet var elapsedTimeLabel: UILabel!\n       override func viewDidAppear(_ animated: Bool) {\n          super.viewDidAppear(animated)\n          let startTime = Date().timeIntervalSince1970\n          toastLabel.text = \"Making toast...\"\n          toastLabel.text = makeToast()\n          eggLabel.text = \"Boiling eggs...\"\n          eggLabel.text = boilEggs()\n          plateAndServeLabel.text = plateAndServe()\n          let endTime = Date().timeIntervalSince1970\n          elapsedTimeLabel.text = \"Elapsed time is\n          \\(((endTime - startTime) * 100).rounded()\n          / 100) seconds\"\n       }\n       func makeToast() -> String {\n          sleep(2)\n          return \"Toast done\"\n       }\n       func boilEggs() -> String {\n          sleep(7)\n          return \"Eggs done\"\n       }\n       func plateAndServe() -> String {\n          return \"Plating and serving done\"\n       }\n       @IBAction func testButton(_ sender: UIButton) {\n          print(\"Button tapped\")\n       }\n    } \n    ```", "```swift\n@IBOutlet var toastLabel: UILabel!\n@IBOutlet var eggLabel: UILabel!\n@IBOutlet var plateAndServeLabel: UILabel!\n@IBOutlet var elapsedTimeLabel: UILabel! \n```", "```swift\noverride  func viewDidAppear(_ animated: Bool) { \n```", "```swift\nlet startTime = Date().timeIntervalSince1970 \n```", "```swift\ntoastLabel.text = \"Making toast...\" \n```", "```swift\ntoastLabel.text = makeToast() \n```", "```swift\neggLabel.text = \"Boiling eggs...\" \n```", "```swift\neggLabel.text = boilEggs() \n```", "```swift\nplateAndServeLabel.text = plateAndServe() \n```", "```swift\nlet endTime = Date().timeIntervalSince1970 \n```", "```swift\nelapsedTimeLabel.text = \"Elapsed time is\n\\(((endTime - startTime) * 100).rounded()\n/ 100) seconds\" \n```", "```swift\n@IBAction func testButton(_ sender: UIButton) {\n   print(\"Button tapped\")\n} \n```", "```swift\nfunc methodName() async -> returnType { \n```", "```swift\nawait methodName() \n```", "```swift\n    func makeToast() -> String {\n       **try?****await****Task****.sleep(for: .seconds(2))**\n       return \"Toast done\"\n    }\n    func boilEggs() -> String {\n       **try?****await****Task****.sleep(for: .seconds(7))**\n       return \"Eggs done\"\n    } \n    ```", "```swift\n    func makeToast() **async** -> String {\n       try? await Task.sleep(for: .seconds(2))\n       return \"Toast done\"\n    }\n    func boilEggs() **async** -> String {\n       try? await Task.sleep(for: .seconds(2))\n       return \"Eggs done\"\n    } \n    ```", "```swift\n    override  func viewDidAppear(_ animated: Bool) {\n       super.viewDidAppear(animated)\n       **Task** **{**\n          let startTime = Date().timeIntervalSince1970\n          toastLabel.text = \"Making toast...\"\n          toastLabel.text = await makeToast()\n          eggLabel.text = \"Boiling eggs...\"\n          eggLabel.text = await boilEggs()\n          plateAndServeLabel.text = plateAndServe()\n          let endTime = Date().timeIntervalSince1970\n          elapsedTimeLabel.text = \"Elapsed time is\n          \\(((endTime - startTime) * 100).rounded()\n          / 100) seconds\"\n       **}**\n    } \n    ```", "```swift\nasync let temporaryConstant1 = methodName1()\nasync let temporaryConstant2 = methodName2()\nawait variable1 = temporaryConstant1\nawait variable2 = temporaryConstant1 \n```", "```swift\nTask {\n   let startTime = Date().timeIntervalSince1970\n   toastLabel.text = \"Making toast...\"\n**async****let** **tempToast** **=****makeToast****()**\n   eggLabel.text = \"Boiling eggs...\"\n**async****let** **tempEggs** **=****boilEggs****()**\n**await****toastLabel****.****text****=** **tempToast**\n**await****eggLabel****.****text****=** **tempEggs**\n   plateAndServeLabel.text = plateAndServe()\n   let endTime = Date().timeIntervalSince1970\n   elapsedTimeLabel.text = \"Elapsed time is\n   \\(((endTime - startTime) * 100).rounded()\n   / 100) seconds\"\n} \n```"]