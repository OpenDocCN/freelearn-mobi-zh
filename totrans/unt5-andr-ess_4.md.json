["```java\nvar animatorController = UnityEditor.Animations.AnimatorController.CreateAnimatorControllerAtPath (\"Assets/Your/Folder/Name/state_machine_transitions.controller\");\n```", "```java\nanimatorController.AddParameter(\"Parameter1\", UnityEditor.Animations.AnimatorControllerParameterType.Trigger);\nanimatorController.AddParameter(\"Parameter2\", UnityEditor.Animations.AnimatorControllerParameterType.Trigger);\nanimatorController.AddParameter(\"Parameter3\", UnityEditor.Animations.AnimatorControllerParameterType.Trigger);\n```", "```java\nvar sm1 = animatorController.layers[0].stateMachine;\nvar sm2 = sm1.AddStateMachine(\"sm2\");\nvar sm3 = sm1.AddStateMachine(\"sm3\");\n```", "```java\nvar s1 = sm2.AddState(\"s1\");\nvar s2 = sm3.AddState(\"s2\");\nvar s3 = sm3.AddState(\"s3\");\n```", "```java\nvar exitTransition = s1.AddExitTransition();\nexitTransition.AddCondition(UnityEditor.Animations.AnimatorConditionMode.If, 0, \"Parameter1\");\nexitTransition.duration = 0;\n\nvar transition1 = sm2.AddAnyStateTransition(s1);\ntransition.AddCondition(UnityEditor.Animations.AnimatorConditionMode.If, 0, \"Parameter2\");\ntransition.duration = 0;\n\nvar transition2 = sm3.AddEntryTransition(s2);\ntransition2.AddCondition(UnityEditor.Animations.AnimatorConditionMode.If, 0, \"Parameter3\");\nsm3.AddEntryTransition(s3);\nsm3.defaultState = s2;\n\nvar exitTransition = s3.AddExitTransition();\nexitTransition.AddCondition(UnityEditor.Animations.AnimatorConditionMode.If, 0, \"Parameter3\");\nexitTransition.duration = 0;\n\nvar smt = rootStateMachine.AddStateMachineTransition(sm2, sm3);\nsmt.AddCondition(UnityEditor.Animations.AnimatorConditionMode.If, 0, \"Parameter2\");\nsm2.AddStateMachineTransition(sm1, sm3);\n```", "```java\nvoid OnCollisionEnter (Collision collision)\n```", "```java\nvoid OnCollisionStay (Collision collision)\n```", "```java\nvoid OnCollisionExit (Collision collision)\n```", "```java\nvoid OnCollisionEnter ()\n```", "```java\nvoid OnCollisionStay ()\n```", "```java\nvoid OnCollisionExit ()\n```", "```java\nvoid OnTriggerEnter (Collider collider)\n```", "```java\nvoid OnTriggerStay (Collider collider)\n```", "```java\nvoid OnTriggerExit (Collider collider)\n```", "```java\nvoid OnTriggerEnter ()\n```", "```java\nvoid OnTriggerStay ()\n```", "```java\nvoid OnTriggerExit ()\n```", "```java\n      public ParticleSystem yourParticleSystemVariable;\n      void YourMethodName() {\n        yourParticleSystemVariable.enableEmission = false;\n      }\n    ```", "```java\n  public ParticleSystem yourParticleSystemVariable;\n  void YourMethodName() {\n    yourParticleSystemVariable.Emit(123); //emits 123 particles\n  }\n```", "```java\n  public ParticleSystem yourParticleSystem;\n  private ParticleSystem.Particle[] \n      yourParticlesList = new ParticleSystem.Particle[1750];\n  void YourMethodName() {\n    int len = yourParticleSystem.GetParticles(yourParticlesList);\n    for(int i=0; i < len; i++) {\n          yourParticlesList[i].color = new Color(0,0,1,0.5f);\n      }\n    yourParticleSystem.SetParticles(yourParticlesList, len);\n  }\n```"]