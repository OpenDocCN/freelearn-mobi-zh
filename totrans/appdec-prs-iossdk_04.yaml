- en: Chapter 4. Parse Analytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Analytics plays an important role in application development. Analytics provides
    you with data and shows how it's impacting the customer base. Analytics helps
    organizations and management take vital decisions to move forward and make business
    plans and strategies. You can get the detailed knowledge of customer behavior
    using analytics.
  prefs: []
  type: TYPE_NORMAL
- en: Parse provides you with in-built support for analytics. It's a Plug and Play
    analytics approach to track your application.
  prefs: []
  type: TYPE_NORMAL
- en: Parse analytics will help you to track your application and helps in management
    decisions to make the application a success. In this chapter, we will learn about
    the integration of Parse analytics along with the ways to use the data generated
    by those analytics.
  prefs: []
  type: TYPE_NORMAL
- en: Integrating Parse analytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To track your application on Parse you need to plug the following code in your
    `applicationDelegate` file in the `application:didFinishLaunching:` method:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: By adding the preceding line of code, you can collect the data on the basis
    of how frequently your application is opened and what triggered it. This will
    also include the means by which an application is opened and the effects of push
    notifications.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you pass the `launchOptions` parameter as `nil`, the application will only
    track the standard app opened event. In case your application is running in the
    background, then your `application:didReceiveRemoteNotification:` method will
    get invoked. In this case you need to add the following code in that method:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Once you receive push notifications for the application, your application badge
    is incremented, and after launching the application from the push notification,
    you need to clear the badges. The code to clear badges is in the following section.
  prefs: []
  type: TYPE_NORMAL
- en: Tracking pages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Parse allows you to track your application pages as well. This helps you to
    understand how frequently your pages are accessed by users. Parse provides you
    with the `trackEvent:` method to track the pages in your application. Let''s say
    you want to track how frequently your article page is accessed. You can use the
    following code to track the frequency of this event:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'There are some cases in which we need to track the page with specific data.
    For example, in case of searching, it''s helpful to track which data is being
    searched the most. So for tracking the event with specific data, you can use the
    `trackEvent:dimensions:` method. This method accepts a dictionary as a parameter,
    which allows you to pass specific data while tracking the page. Let''s say we
    want to track which article is most frequently read by users. In that case you
    can use the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The previous code will help you to track the event along with the custom parameters.
  prefs: []
  type: TYPE_NORMAL
- en: Clearing all badges
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To clear all your badges once your application is opened, you need to set the
    property of the current installation to update the badge number, and ensure to
    update the badge value on save. To achieve all your scenarios you need to plug
    the following lines of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: You can access the analytics data from your Parse application dashboard. There
    you will find options to filter your data as per your requirements and it will
    be helpful to track the application based on the tracked criteria.
  prefs: []
  type: TYPE_NORMAL
- en: Reading analytics data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Parse analytics provides you with access to various types of data analytics.
    You can filter your analytics data based on the following filters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Push notifications**: This filter helps you to track the push notifications
    that were sent by the application to the devices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**App opens**: This filter helps you to track how frequently your application
    is opened. You can even filter your data based on time as well. You can get the
    data for any particular date, month or week.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**API requests**: As shown in the following screenshot you can add an **API
    Requests** filter to the application. This filter helps you to track the number
    of API requests that are made in a specified time slot:![Reading analytics data](img/0333OS_04_01.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Application platforms**: This filter will help you to track the device from
    which the application has been accessed, such as iOS, Android, Windows, and so
    on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**All classes**: As shown in the following screenshot, this will filter the
    results based on the classes accessed in our application, and in terms of changes
    done in that class during our application lifecycle:![Reading analytics data](img/0333OS_04_02.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Request**: This will filter the data based on the type of request made, such
    as create, get, delete, find, update and find. Based on such requests we can track
    which operations are performed on the application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After applying the filter you will have a graph, which will help you to extract
    how frequently the specified event had occurred:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Reading analytics data](img/0333OS_04_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can set the time slot for which you need to access the data. The data can
    be displayed in either graph format or in the bar chart format.
  prefs: []
  type: TYPE_NORMAL
- en: Data usage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Traditionally, companies have used data to forecast trends based on historical
    evidence. Now you have access to analytics to find the meaning behind the numbers
    and to differentiate the data based on the associated event. Data charts allow
    you to make business strategies. For example, the total time the user is spending
    on their application, and how a small shift can improve their outcomes. Analytics
    saves time by providing context to the data; this helps us to maximize productivity
    and prioritize tasks.
  prefs: []
  type: TYPE_NORMAL
- en: You can determine which content sources of your application are getting the
    most traffic once a visitor starts using the application, along with the frequency
    of the traffic. This information can be used to find which content is more valuable
    to the users of the application and will help to develop content more effectively,
    based on visitor preferences.
  prefs: []
  type: TYPE_NORMAL
- en: Advantages of analytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are various advantages of using analytics in mobile applications such
    as:'
  prefs: []
  type: TYPE_NORMAL
- en: Analytics helps you to track your mobile application to improve the user satisfaction
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It helps you to crunch data and use that data to construct business development
    models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analytics helps you to know your application users and their areas of interest,
    such as which is the most frequently accessed area of the application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we've explored Parse analytics and the way to integrate it
    in our project.
  prefs: []
  type: TYPE_NORMAL
- en: We started by integrating Parse analytics in the project. Then we learned about
    the ways to read the analytics data from the Parse dashboard. Finally, we have
    seen some advantages of using analytics in our mobile application.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn to configure and send push notifications
    to the users.
  prefs: []
  type: TYPE_NORMAL
