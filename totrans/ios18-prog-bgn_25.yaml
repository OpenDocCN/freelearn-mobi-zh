- en: '22'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '22'
- en: Getting Started with Collection Views
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用集合视图
- en: In the previous chapter, you implemented a search bar for the Journal List screen,
    and your app is now complete. However, your app is designed to suit the iPhone’s
    screen, and if you were to run it on an iPad or Mac, you’d see that it does not
    make the best use of the larger screen size.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你为 Journal List 屏幕实现了搜索栏，现在你的应用已经完成。然而，你的应用是为 iPhone 的屏幕设计的，如果你要在 iPad
    或 Mac 上运行它，你会看到它没有充分利用更大的屏幕尺寸。
- en: In this chapter, you will replace the table view on the Journal List screen
    with a **collection view**, which will make better use of the extra screen space
    available when you run your app on an iPad or Mac. You’ll also dynamically modify
    the number of columns and the collection view cell sizes when your device is rotated
    using size classes.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将用 **集合视图** 替换 Journal List 屏幕上的表格视图，这将更好地利用在 iPad 或 Mac 上运行应用时额外的屏幕空间。你还将使用大小类在设备旋转时动态修改列数和集合视图单元格大小。
- en: First, in the `Main` storyboard file, you’ll replace the table view on the Journal
    List screen with a collection view and configure the collection view cell to display
    the same information the table view cell used to display. Next, you’ll refactor
    the `JournalListViewController` and `JournalListTableViewCell` classes to work
    with the collection view and collection view cells you added. After that, you’ll
    add code to dynamically change the collection view cell size to suit the display
    your app is running on. Finally, you’ll test your app on different devices.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在 `Main` 故事板文件中，你将用集合视图替换 Journal List 屏幕上的表格视图，并配置集合视图单元格以显示表格视图单元格曾经显示的相同信息。接下来，你将重构
    `JournalListViewController` 和 `JournalListTableViewCell` 类以与添加的集合视图和集合视图单元格一起工作。然后，你将添加代码以动态更改集合视图单元格大小以适应应用正在运行的显示。最后，你将在不同设备上测试你的应用。
- en: By the end of this chapter, you’ll have learned about collection views, how
    to use collection view delegate and data source protocols, and how to dynamically
    modify your app’s interface based on size classes.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将了解集合视图、如何使用集合视图代理和数据源协议，以及如何根据大小类动态修改应用界面。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Understanding collection views
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解集合视图
- en: Modifying the Journal List screen to use a collection view
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Journal List 屏幕修改为使用集合视图
- en: Dynamically modifying collection view cell size using size classes
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用大小类动态修改集合视图单元格大小
- en: Testing your app on different devices
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在不同设备上测试你的应用
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will continue working on the `JRNL` project that you modified in the previous
    chapter.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你将继续在上一章中修改的 `JRNL` 项目上工作。
- en: 'The resource files and completed Xcode project for this chapter are in the
    `Chapter22` folder of the code bundle for this book, which can be downloaded here:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的资源文件和完成的 Xcode 项目位于本书代码包的 `Chapter22` 文件夹中，可以在此处下载：
- en: '[https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition](https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition%0D)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition](https://github.com/PacktPublishing/iOS-18-Programming-for-Beginners-Ninth-Edition%0D)'
- en: 'Check out the following video to see the code in action:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频以查看代码的实际运行情况：
- en: '[https://youtu.be/yIJpBHzAHCU](https://youtu.be/yIJpBHzAHCU%0D)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://youtu.be/yIJpBHzAHCU](https://youtu.be/yIJpBHzAHCU%0D)'
- en: Let’s start by learning about collection views in the next section.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从下一节学习集合视图开始。
- en: Understanding collection views
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解集合视图
- en: A collection view is an instance of the `UICollectionView` class. It manages
    an ordered collection of elements and presents them using customizable layouts.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 集合视图是 `UICollectionView` 类的一个实例。它管理一个有序的元素集合，并使用可定制的布局来展示这些元素。
- en: To learn more about collection views, visit [https://developer.apple.com/documentation/uikit/uicollectionview](https://developer.apple.com/documentation/uikit/uicollectionview).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于集合视图的信息，请访问 [https://developer.apple.com/documentation/uikit/uicollectionview](https://developer.apple.com/documentation/uikit/uicollectionview)。
- en: The data displayed by a collection view is usually provided by a view controller.
    A view controller providing data for a collection view must adopt the `UICollectionViewDataSource`
    protocol. This protocol declares a list of methods that tells the collection view
    how many cells to display and what to display in each cell.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 集合视图显示的数据通常由视图控制器提供。为集合视图提供数据的视图控制器必须采用`UICollectionViewDataSource`协议。此协议声明了一系列方法，告诉集合视图显示多少个单元格以及每个单元格显示什么内容。
- en: To learn more about the `UICollectionViewDataSource` protocol, visit [https://developer.apple.com/documentation/uikit/uicollectionviewdatasource](https://developer.apple.com/documentation/uikit/uicollectionviewdatasource).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于`UICollectionViewDataSource`协议的信息，请访问[https://developer.apple.com/documentation/uikit/uicollectionviewdatasource](https://developer.apple.com/documentation/uikit/uicollectionviewdatasource)。
- en: To provide user interaction, a view controller for a collection view must also
    adopt the `UICollectionViewDelegate` protocol, which declares a list of methods
    triggered when a user interacts with the collection view.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提供用户交互，集合视图的视图控制器还必须采用`UICollectionViewDelegate`协议，该协议声明了一系列在用户与集合视图交互时触发的方法。
- en: To learn more about the `UICollectionViewDelegate` protocol, visit [https://developer.apple.com/documentation/uikit/uicollectionviewdelegate](https://developer.apple.com/documentation/uikit/uicollectionviewdelegate).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于`UICollectionViewDelegate`协议的信息，请访问[https://developer.apple.com/documentation/uikit/uicollectionviewdelegate](https://developer.apple.com/documentation/uikit/uicollectionviewdelegate)。
- en: The way the collection view is laid out is specified by a `UICollectionViewLayout`
    object. This determines the cell placement, supplementary views, and decoration
    views inside the collection view’s bounds.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 集合视图的布局方式由一个`UICollectionViewLayout`对象指定。这决定了集合视图边界内的单元格位置、辅助视图和装饰视图。
- en: You’ll use the `UICollectionViewFlowLayout` class, a subclass of the `UICollectionViewLayout`
    class, for your app. Collection view cells in the collection view flow from one
    row or column to the next, with each row containing as many cells as will fit.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你将使用`UICollectionViewFlowLayout`类，它是`UICollectionViewLayout`类的子类，为你的应用提供支持。集合视图中的单元格从一行或一列流向下一行或一列，每行包含尽可能多的单元格。
- en: To learn more about the `UICollectionViewFlowLayout` class, visit [https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout](https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于`UICollectionViewFlowLayout`类的信息，请访问[https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout](https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout)。
- en: A flow layout works with the collection view’s delegate object to determine
    the size of items, headers, and footers in each section and grid. That delegate
    object must conform to the `UICollectionViewDelegateFlowLayout` protocol. This
    allows you to adjust layout information dynamically.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 流布局通过与集合视图的代理对象协同工作来确定每个部分和网格中项目、头部和脚部的大小。该代理对象必须遵守`UICollectionViewDelegateFlowLayout`协议。这允许你动态调整布局信息。
- en: To learn more about the `UICollectionViewFlowLayoutDelegate` protocol, visit
    [https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout](https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于`UICollectionViewFlowLayoutDelegate`协议的信息，请访问[https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout](https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout)。
- en: Now that you have a basic understanding of collection views, you’ll modify the
    Journal List screen by replacing the table view with a collection view in the
    next section.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经对集合视图有了基本的了解，你将在下一节中通过将表格视图替换为集合视图来修改“期刊列表”屏幕。
- en: Modifying the Journal List screen to use a collection view
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改“期刊列表”屏幕以使用集合视图
- en: 'At present, the Journal List screen in the *JRNL* app uses a table view. A
    table view presents table view cells using rows arranged in a single column. This
    works great on an iPhone, but if you were to run the app on an iPad, you’d see
    there is a lot of wasted screen space on the Journal List screen, as shown in
    the following figure:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，“JRNL”应用中的“期刊列表”屏幕使用的是表格视图。表格视图通过单列排列的行来展示表格视图单元格。这在iPhone上效果很好，但如果你在iPad上运行该应用，你会看到“期刊列表”屏幕上有大量的空白屏幕空间，如下面的图所示：
- en: '![](img/B31371_22_01.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_22_01.png)'
- en: 'Figure 22.1: Simulator showing Journal List screen containing a table view
    on an iPad'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.1：模拟器显示的“期刊列表”屏幕，其中包含一个iPad上的表格视图
- en: 'To address this, you’ll replace the table view with a collection view, which
    will allow you to more effectively use the available screen space, as shown in
    the following figure:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，您将用集合视图替换表格视图，这将允许您更有效地使用可用的屏幕空间，如图所示：
- en: '![](img/B31371_22_02.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_22_02.png)'
- en: 'Figure 22.2: Simulator showing Journal List screen containing a collection
    view on an iPad'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.2：模拟器显示包含iPad上集合视图的期刊列表屏幕
- en: 'To implement a collection view on the Journal List screen, you’ll need to do
    the following:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要在期刊列表屏幕上实现集合视图，您需要执行以下操作：
- en: In the `Main` storyboard file, replace the table view in the **Journal Scene**
    with a collection view.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Main`故事板文件中，将**期刊场景**中的表格视图替换为集合视图。
- en: Add UI elements to the collection view cell.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向集合视图单元格添加UI元素。
- en: Modify the `JournalListTableViewCell` class to manage the collection view cell’s
    contents.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`JournalListTableViewCell`类以管理集合视图单元格的内容。
- en: Modify the `JournalListViewController` class to manage what the collection view
    displays.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`JournalListViewController`类以管理集合视图显示的内容。
- en: Add methods to dynamically change the collection view cell’s size based on device
    screen size and orientation.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加方法以根据设备屏幕尺寸和方向动态更改集合视图单元格的大小。
- en: You’ll start by modifying the **Journal Scene** in the `Main` storyboard file
    to use a collection view instead of a table view in the next section.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，您将开始修改`Main`故事板文件中的**期刊场景**，使用集合视图而不是表格视图。
- en: Replacing the table view with a collection view
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 替换表格视图为集合视图
- en: 'At present, the **Journal Scene** in the `Main` storyboard file contains a
    table view. You’ll replace this with a collection view. Follow these steps:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，`Main`故事板文件中的**期刊场景**包含一个表格视图。您将用集合视图替换它。按照以下步骤操作：
- en: 'Open the `JRNL` project you modified in the previous chapter and choose **iPad
    (10th generation)** as the destination from the Destination menu:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开上一章中修改的`JRNL`项目，并从目标菜单中选择**iPad（第10代）**：
- en: '![](img/B31371_22_03.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_22_03.png)'
- en: 'Figure 22.3: Destination menu showing iPad (10th generation) selected'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.3：显示已选择iPad（第10代）的目标菜单
- en: 'Build and run your app, and note how it appears on the iPad’s screen:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建并运行您的应用，并注意它在iPad屏幕上的显示：
- en: '![](img/B31371_22_04.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_22_04.png)'
- en: 'Figure 22.4: Simulator showing iPad screen'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.4：模拟器显示iPad屏幕
- en: Although the app works as it should, note that a lot of space is wasted on the
    right side of the Journal List screen.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然应用按预期工作，但请注意，在期刊列表屏幕的右侧浪费了很多空间。
- en: 'Click the Stop button. Click the **Main** storyboard file in the Project navigator.
    In the document outline, click the table view under **Journal Scene**. Press the
    *Delete* key to remove it:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击停止按钮。在项目导航器中点击**主**故事板文件。在文档大纲中，点击**期刊场景**下的表格视图。按*删除*键将其删除：
- en: '![](img/B31371_22_05.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_22_05.png)'
- en: 'Figure 22.5: Editor area showing table view selected in the document outline'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.5：编辑区域显示文档大纲中选中的表格视图
- en: 'Click the Library button to display the library. Type `collec` in the filter
    field. A **Collection View** object will appear as one of the results. Drag it
    to the middle of the view of the **Journal Scene**:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击库按钮以显示库。在过滤器字段中输入`collec`。一个**集合视图**对象将作为结果之一出现。将其拖到**期刊场景**视图的中间：
- en: '![](img/B31371_22_06.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_22_06.png)'
- en: 'Figure 22.6: Library with Collection View object selected'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.6：库中选中的集合视图对象
- en: 'Make sure the collection view is selected and click the Auto Layout Add New
    Constraints button:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保集合视图被选中，然后点击自动布局添加新约束按钮：
- en: '![](img/B31371_22_07.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_22_07.png)'
- en: 'Figure 22.7: Journal scene with collection view selected'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.7：已选择集合视图的期刊场景
- en: 'Type `0` in the top, left, right, and bottom edge constraint fields and click
    all the pale red struts. Make sure all the struts have turned bright red and **Constrain
    to margins** is not checked. Then, click the **Add 4 Constraints** button:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部、左侧、右侧和底部边缘约束字段中输入`0`，并点击所有浅红色支柱。确保所有支柱都已变为亮红色，并且**约束到边距**未选中。然后，点击**添加4个约束**按钮：
- en: '![](img/B31371_22_08.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_22_08.png)'
- en: 'Figure 22.8: Auto Layout – Add New Constraints pop-up dialog box'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.8：自动布局 – 添加新约束弹出对话框
- en: This sets the space between the edges of the collection view and the edges of
    the enclosing view to 0, binding the collection view’s edges to those of the enclosing
    view.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这将设置集合视图边缘与包围视图边缘之间的空间为0，将集合视图的边缘绑定到包围视图的边缘。
- en: 'Verify that all four sides of the collection view are now bound to the edges
    of the screen as shown:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证集合视图的四个边现在都已绑定到屏幕的边缘，如图所示：
- en: '![](img/B31371_22_09.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_09.png)'
- en: 'Figure 22.9: Journal Scene with collection view filling the screen'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.9：填充整个屏幕的集合视图的日志场景
- en: With the collection view still selected, click the Size inspector button. Under
    **Collection View**, set **Estimate Size** to **None**.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在集合视图仍然被选中时，点击大小检查器按钮。在**集合视图**下，将**估算大小**设置为**无**。
- en: '![](img/B31371_22_10.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_10.png)'
- en: 'Figure 22.10: Size inspector with Estimate Size highlighted'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.10：大小检查器，高亮显示估算大小
- en: You’ll be adding code to determine the collection view size dynamically later.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在稍后添加代码以动态确定集合视图的大小。
- en: You’ll need to re-establish the segue between the Journal List screen and the
    Journal Entry Detail screen. *Ctrl* + *Drag* from **Collection View Cell** in
    the document outline to the **Entry Detail Scene** and choose **Show** from the
    pop-up menu.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要重新建立日志列表屏幕和日志条目详情屏幕之间的转换。*Ctrl* + *拖动*文档大纲中的**集合视图单元格**到**条目详情场景**，并从弹出菜单中选择**显示**。
- en: '![](img/B31371_22_11.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_11.png)'
- en: 'Figure 22.11: Editor area showing drag destination'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.11：显示拖动目的地的编辑区域
- en: Click the newly added storyboard segue and click the Attributes inspector button.
    Under **Storyboard Segue**, set **Identifier** to `entryDetail`.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击新添加的故事板转换，并点击属性检查器按钮。在**故事板转换**下，将**标识符**设置为`entryDetail`。
- en: '![](img/B31371_22_12.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_12.png)'
- en: 'Figure 22.12: Attributes inspector with Identifier set to entryDetail'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.12：属性检查器，标识符设置为entryDetail
- en: You have added a collection view to the Journal Scene and used Auto Layout constraints
    to make it fill the screen, but the prototype collection view cell is currently
    empty. You’ll add UI elements to the collection view cell in the next section.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经向日志场景添加了一个集合视图，并使用自动布局约束使其填充整个屏幕，但当前原型集合视图单元格是空的。你将在下一节向集合视图单元格添加UI元素。
- en: Adding UI elements to the collection view cell
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向集合视图单元格添加UI元素
- en: 'You have replaced the table view inside the **Journal Scene** with a collection
    view, but the prototype collection view cell inside the collection view is empty.
    You’ll need to add an image view and two labels to the prototype collection view
    cell and set up the constraints for them. This will make it match the table view
    cell used previously. Follow these steps:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经将**日志场景**内的表格视图替换为集合视图，但集合视图内的原型集合视图单元格是空的。你需要向原型集合视图单元格添加一个图像视图和两个标签，并设置它们的约束，使其与之前使用的表格视图单元格相匹配。按照以下步骤操作：
- en: 'Select **Collection View Cell** for the **Journal Scene** in the document outline.
    Drag the right edge of the collection view cell to the right until it reaches
    the right side of the screen:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中选择**日志场景**的**集合视图单元格**。将集合视图单元格的右边缘向右拖动，直到它达到屏幕的右侧：
- en: '![](img/B31371_22_13.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_13.png)'
- en: 'Figure 22.13: Editor area showing Collection View Cell'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.13：显示集合视图单元格的编辑区域
- en: Click the Size inspector button, and under **Collection View Cell**, set **Height**
    to `90`.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击大小检查器按钮，在**集合视图单元格**下，将**高度**设置为`90`。
- en: 'To add an image view to the table view cell, click the Library button. Type
    `imag` into the filter field. An **Image View** object will appear in the results.
    Drag it into the prototype cell:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要向表格视图单元格添加图像视图，点击库按钮。在过滤器字段中输入`imag`。一个**图像视图**对象将出现在结果中。将其拖动到原型单元格中：
- en: '![](img/B31371_22_14.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_14.png)'
- en: 'Figure 22.14: Prototype cell with image view added'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.14：添加了图像视图的原型单元格
- en: 'With the image view selected, click the Add New Constraints button and enter
    the following values to set the constraints for the newly added image view:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选择图像视图后，点击添加新约束按钮并输入以下值以设置新添加的图像视图的约束：
- en: 'Top: `0`'
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶部：`0`
- en: 'Left: `0`'
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 左侧：`0`
- en: 'Bottom: `0`'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 底部：`0`
- en: 'Width: `90`'
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 宽度：`90`
- en: '**Constrain to margins** should not be checked. When done, click the **Add
    4 Constraints** button:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**约束到边距**不应被勾选。完成设置后，点击**添加4个约束**按钮：'
- en: '![](img/B31371_22_15.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_15.png)'
- en: 'Figure 22.15: Constraints for image view'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.15：图像视图的约束
- en: 'Click the Attributes inspector button. Under **Image View**, set **Image**
    to `face.smiling`:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击属性检查器按钮。在**图像视图**下，将**图像**设置为`face.smiling`：
- en: '![](img/B31371_22_16.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_16.png)'
- en: 'Figure 22.16: Image View with Image set to face.smiling'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.16：图像视图，图像设置为face.smiling
- en: 'Next, you’ll add a label to display the journal entry date. Click the Library
    button. Type `label` into the filter field. A **Label** object will appear in
    the results. Drag it to the space between the image view you just added and the
    right side of the cell:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你将为显示日记条目日期添加一个标签。点击图书馆按钮。在过滤器字段中输入`label`。一个**标签**对象将在结果中显示。将其拖动到刚刚添加的图像视图和单元格右侧的空间之间：
- en: '![](img/B31371_22_17.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_17.png)'
- en: 'Figure 22.17: Prototype cell with label added'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.17：添加标签的原型单元格
- en: 'In the Attributes inspector, under **Label**, set **Font** to **Title 1** using
    the **Font** menu:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在属性检查器中，在**标签**下，使用**字体**菜单将**字体**设置为**标题 1**：
- en: '![](img/B31371_22_18.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_18.png)'
- en: 'Figure 22.18: Attributes inspector for Label'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.18：标签的属性检查器
- en: 'Click the Add New Constraints button and enter the following values to set
    the constraints for the label:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加新约束**按钮并输入以下值以设置标签的约束：
- en: 'Top: `0`'
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶部：`0`
- en: 'Left: `8`'
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 左侧：`8`
- en: 'Right: `0`'
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 右侧：`0`
- en: '**Constrain to margins** should be checked, which sets a standard margin of
    8 points. When done, click the **Add 3 Constraints** button.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**约束到边距**应该被勾选，这设置了标准的8点边距。完成时，点击**添加3个约束**按钮。'
- en: '![](img/B31371_22_19.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_19.png)'
- en: 'Figure 22.19: Constraints for label'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.19：标签的约束条件
- en: 'Finally, you’ll add a label to display the journal entry title. Click the Library
    button. Type `label` into the filter field. A **Label** object will appear in
    the results. Drag it to the space between the label you just added and the bottom
    of the cell:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你将为显示日记条目标题添加一个标签。点击图书馆按钮。在过滤器字段中输入`label`。一个**标签**对象将在结果中显示。将其拖动到刚刚添加的标签和单元格底部之间的空间：
- en: '![](img/B31371_22_20.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_20.png)'
- en: 'Figure 22.20: Prototype cell with second label added'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.20：添加第二个标签的原型单元格
- en: 'In the Attributes inspector, under **Label**, set **Font** to **Body** using
    the **Font** menu, and set **Lines** to `2`:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在属性检查器中，在**标签**下，使用**字体**菜单将**字体**设置为**正文**，并将**行数**设置为`2`：
- en: '![](img/B31371_22_21.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_21.png)'
- en: 'Figure 22.21: Attributes inspector for Label'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.21：标签的属性检查器
- en: 'Click the Add New Constraints button and enter the following values to set
    the constraints for the label:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加新约束**按钮并输入以下值以设置标签的约束：
- en: 'Top: `0`'
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶部：`0`
- en: 'Left: `8`'
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 左侧：`8`
- en: 'Right: `0`'
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 右侧：`0`
- en: '**Constrain to margins** should be checked, which sets a standard margin of
    8 points. When done, click the **Add 3 Constraints** button.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**约束到边距**应该被勾选，这设置了标准的8点边距。完成时，点击**添加3个约束**按钮。'
- en: '![](img/B31371_22_22.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_22.png)'
- en: 'Figure 22.22: Constraints for second label'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.22：第二个标签的约束条件
- en: The prototype collection view cell now has an image view and two labels, and
    all the necessary constraints have been added. Fantastic! In the next section,
    you’ll modify the `JournalListTableViewCell` class to manage the collection view
    cell’s contents.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在原型集合视图单元格已包含一个图像视图和两个标签，并且已添加所有必要的约束。太棒了！在下一节中，你将修改`JournalListTableViewCell`类以管理集合视图单元格的内容。
- en: Modifying the JournalListTableViewCell class
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改`JournalListTableViewCell`类
- en: 'Originally, the `JournalListTableViewCell` class was used to manage the table
    view instance’s table view cells in the Journal List screen. Since you have replaced
    the table view with a collection view, all the connections between the `JournalListTableViewCell`
    class will need to be re-established to work with the UI elements that you just
    added to the collection view cell. Follow these steps:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，`JournalListTableViewCell`类用于在“日记列表”屏幕中管理表格视图实例的表格视图单元格。由于你已经用集合视图替换了表格视图，因此需要重新建立`JournalListTableViewCell`类与集合视图单元格中添加的UI元素之间的所有连接。按照以下步骤操作：
- en: 'First, you’ll change the `JournalListTableViewCell` class name to more accurately
    describe its new role. Click the `JournalListTableViewCell`file in the Project
    navigator. Right-click on the class name in the file and choose **Refactor** |
    **Rename…** from the pop-up menu:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，你将更改`JournalListTableViewCell`类的名称，以更准确地描述其新角色。在项目导航器中点击`JournalListTableViewCell`文件。在文件中的类名上右键单击，并从弹出菜单中选择**重构**
    | **重命名…**：
- en: '![](img/B31371_22_23.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_23.png)'
- en: 'Figure 22.23: Pop-up menu with Refactor | Rename… selected'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.23：弹出菜单，选择 Refactor | Rename…
- en: 'Change the name to `JournalListCollectionViewCell` and click **Rename**:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将名称更改为`JournalListCollectionViewCell`并点击**重命名**：
- en: '![](img/B31371_22_24.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_24.png)'
- en: 'Figure 22.24: Editor area showing the new name'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.24：显示新名称的编辑区域
- en: 'You’ll modify the class declaration as this class is now used to manage a collection
    view cell. Change the superclass to `UICollectionViewCell`:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将修改类声明，因为这个类现在用于管理集合视图单元格。将超类更改为`UICollectionViewCell`：
- en: '[PRE0]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You’ll now assign this class as the identity of the collection view cell. Click
    the **Main** storyboard file in the Project navigator and click **Collection View
    Cell** under **Journal Scene** in the document outline:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将这个类分配为集合视图单元格的标识符。在项目导航器中点击**Main**故事板文件，然后在文档大纲中点击**Journal Scene**下的**Collection
    View Cell**：
- en: '![](img/B31371_22_25.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_25.png)'
- en: 'Figure 22.25: Editor area showing Collection View Cell inside Journal Scene'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.25：编辑区域显示在期刊场景中的集合视图单元格
- en: 'Click the Identity inspector button. Under the **Custom Class** section, set
    **Class** to `JournalListCollectionViewCell`. This sets a `JournalListCollectionViewCell`
    instance as the custom collection view subclass for the collection view cell.
    Press *Return* when done:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击标识符检查器按钮。在**自定义类**部分下，将**类**设置为`JournalListCollectionViewCell`。这设置了一个`JournalListCollectionViewCell`实例作为集合视图单元格的自定义集合视图子类。完成后按*Return*键：
- en: '![](img/B31371_22_26.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_26.png)'
- en: 'Figure 22.26: Identity inspector showing Class set to JournalListCollectionViewCell'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.26：标识符检查器显示类设置为JournalListCollectionViewCell
- en: 'Click the Attributes inspector button. Under **Collection Reusable View**,
    set **Identifier** to `journalCell`:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击属性检查器按钮。在**集合可重用视图**下，将**标识符**设置为`journalCell`：
- en: '![](img/B31371_22_27.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_27.png)'
- en: 'Figure 22.27: Attributes inspector showing Identifier set to journalCell'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.27：属性检查器显示标识符设置为journalCell
- en: Note that the name of the collection view cell in the document outline has changed
    to **journalCell**.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，文档大纲中集合视图单元格的名称已更改为**journalCell**。
- en: With **journalCell** selected in the document outline, click the Connections
    inspector button to display the outlets for **journalCell**.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中选中**journalCell**，点击连接检查器按钮以显示**journalCell**的出口。
- en: Drag from the **photoImageView** outlet to the image view in the table view
    cell.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**photoImageView**出口拖动到表格视图单元格中的图像视图。
- en: Drag from the **dateLabel** outlet to the top label in the table view cell.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**dateLabel**出口拖动到表格视图单元格顶部的标签。
- en: Drag from the **titleLabel** outlet to the bottom label in the table view cell.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**titleLabel**出口拖动到底部标签在表格视图单元格中。
- en: 'Verify that the connections look like the following screenshot when done:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，验证连接看起来像以下截图：
- en: '![](img/B31371_22_28.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_28.png)'
- en: 'Figure 22.28: Connections inspector showing the connections for journalCell'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.28：连接检查器显示journalCell的连接
- en: Remember that if you make a mistake, you can click the **x** to break the connection
    and drag from the outlet to the UI element once more.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，如果你犯了错误，你可以点击**x**来断开连接，然后再次从出口拖动到UI元素。
- en: The `journalCell` collection view cell in the `Main` storyboard file has now
    been set up with the `JournalCollectionTableViewCell` class. The outlets for the
    collection view cell’s image view and labels have also been assigned. In the next
    section, you’ll update the `JournalListViewController` class to work with a collection
    view instead of a table view.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`Main`故事板文件中的`journalCell`集合视图单元格已使用`JournalCollectionTableViewCell`类设置。集合视图单元格的图像视图和标签的出口也已分配。在下一节中，你将更新`JournalListViewController`类以使用集合视图而不是表格视图。'
- en: Modifying the JournalListViewController class
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改JournalListViewController类
- en: 'At present, the `JournalListViewController` class has an outlet for a `UITableView`
    object and implemented data source and delegate methods to manage a table view.
    You’ll modify this class to work with a collection view instead. Follow these
    steps:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，`JournalListViewController`类有一个`UITableView`对象的出口，并实现了数据源和代理方法来管理表格视图。你将修改这个类以使用集合视图。按照以下步骤操作：
- en: 'First, you’ll modify the class declaration to work with a `UICollectionView`
    instance. Click the **JournalListViewController** file in the Project navigator.
    Modify the class declaration as shown:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，你将修改类声明以使用`UICollectionView`实例。在项目导航器中点击**JournalListViewController**文件。按照以下方式修改类声明：
- en: '[PRE1]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here, you’ve changed the data source and delegate protocols to the collection
    view equivalents and added conformance to a new protocol, `UICollectionViewDelegateFlowLayout`.
    This protocol is used to determine how the collection view cells in a collection
    view are laid out. You will see an error because the collection view data source
    methods have not been implemented. Don’t worry about the error as you’ll fix it
    in a later step in this section.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您已将数据源和代理协议更改为集合视图的等效协议，并添加了对新协议 `UICollectionViewDelegateFlowLayout` 的遵守。此协议用于确定集合视图中集合视图单元格的布局。您将看到一个错误，因为集合视图数据源方法尚未实现。不要担心这个错误，因为您将在本节稍后的步骤中修复它。
- en: 'To change the name for the `tableview` outlet, right-click it and choose **Refactor**
    | **Rename…** from the pop-up menu:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要更改 `tableview` 输出的名称，右键单击它，并从弹出菜单中选择 **重构** | **重命名…**：
- en: '![](img/B31371_22_29.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_29.png)'
- en: 'Figure 22.29: Pop-up menu with Refactor | Rename… selected'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.29：选择“重构 | 重命名…”的弹出菜单
- en: 'Change the name to `collectionView` and click **Rename**:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将名称更改为 `collectionView` 并点击 **重命名**：
- en: '![](img/B31371_22_30.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_30.png)'
- en: 'Figure 22.30: Editor area showing the new name'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.30：编辑区域显示新名称
- en: 'Since the view controller will be managing a collection view, change the outlet
    type from `UITableView` to `UICollectionView`:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于视图控制器将管理一个集合视图，将输出类型从 `UITableView` 更改为 `UICollectionView`：
- en: '[PRE2]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To establish the connections between the UI element and your code, click the
    **Main** storyboard file in the Project navigator and click the first **Journal
    Scene** in the document outline.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要建立UI元素与您的代码之间的连接，请在项目导航器中点击 **Main** 故事板文件，并在文档大纲中点击第一个 **Journal 场景**。
- en: 'Click the Connections inspector button and drag from the **collectionView**
    outlet to the **Collection View** in the document outline:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击连接检查器按钮，从 **collectionView** 输出拖动到文档大纲中的 **集合视图**：
- en: '![](img/B31371_22_31.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_31.png)'
- en: 'Figure 22.31: Connections inspector showing the connections for JournalListViewController'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.31：连接检查器显示JournalListViewController的连接
- en: Click **Collection View** in the document outline. Drag from the **dataSource**
    and **delegate** outlets to the view controller (shown as **Journal**) in the
    document outline.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中点击 **Collection View**。从 **dataSource** 和 **delegate** 输出拖动到文档大纲中的视图控制器（显示为
    **Journal**）。
- en: '![](img/B31371_22_32.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_32.png)'
- en: 'Figure 22.32: Connections inspector showing the connections for collectionView'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.32：连接检查器显示collectionView的连接
- en: 'Now you’ll fix the errors in the `JournalListViewController` class. Click the
    **JournalListViewController** file in the Project navigator and replace the table
    view data source methods in your code with these collection view data source methods:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您将修复 `JournalListViewController` 类中的错误。在项目导航器中点击 **JournalListViewController**
    文件，并将您的代码中的表格视图数据源方法替换为以下集合视图数据源方法：
- en: '[PRE3]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As you can see, they are very similar to the table view data source methods
    that you used previously.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，它们与您之前使用的表格视图数据源方法非常相似。
- en: 'As you are now using a collection view, `tableView(_:commit:forRowAt:)` can
    no longer be used to remove cells. Replace the `tableView(_:commit:forRowAt:)`
    method with the following method:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于您现在正在使用集合视图，`tableView(_:commit:forRowAt:)` 方法不能再用于删除单元格。将 `tableView(_:commit:forRowAt:)`
    方法替换为以下方法：
- en: '[PRE4]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Instead of swiping left to delete, this method implements a contextual menu
    with a single option, **Delete**, that appears when you tap and hold on a collection
    view cell.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 代替向左滑动以删除，此方法实现了一个上下文菜单，其中包含一个选项 **删除**，当您在集合视图单元格上轻按并保持时出现。
- en: 'You’ll also see an error in the `prepare(for:sender:)` method. Modify the `guard`
    statement in the `prepare(for:sender:)` method as shown:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还会在 `prepare(for:sender:)` 方法中看到一个错误。按照以下方式修改 `prepare(for:sender:)` 方法中的 `guard`
    语句：
- en: '[PRE5]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: All the errors in `JournalListViewController` have been resolved. Cool! In the
    next section, you’ll add code to change the size of the collection view cells
    based on device screen size and orientation.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`JournalListViewController` 中的所有错误都已解决。太棒了！在下一节中，您将添加代码以根据设备屏幕尺寸和方向更改集合视图单元格的大小。'
- en: Dynamically modifying collection view cell size using size classes
  id: totrans-186
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用大小类动态修改集合视图单元格大小
- en: As you saw earlier, the table view on the Journal List screen presents table
    view cells using rows arranged in a single column. This works great on an iPhone,
    but as you have seen, this results in a lot of wasted space if you run the app
    on an iPad. Even though you can use the same UI for both iPhone and iPad, it would
    be better if you could customize it to suit each device.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你之前看到的，在“期刊列表”屏幕上的表格视图使用单列排列的行来呈现表格视图单元格。这在iPhone上工作得很好，但正如你所看到的，如果在iPad上运行应用，这会导致大量的空间浪费。尽管你可以为iPhone和iPad使用相同的UI，但如果你能根据每个设备进行定制会更好。
- en: To do this, you’ll add some code so your app can identify the size of the screen
    it’s running on, and you’ll dynamically modify the size of the collection view
    cells in the collection view to suit. You can identify the current screen size
    using size classes; you’ll learn about them in the next section.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，你将添加一些代码，使你的应用能够识别其正在运行的屏幕大小，并且你将动态修改集合视图中的集合视图单元格的大小以适应。你可以使用大小类别来识别当前屏幕大小；你将在下一节中了解它们。
- en: Understanding size classes
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解大小类别
- en: To determine the size of the screen your app is running on, you must consider
    the effects of device orientation on your UI. It can be challenging to do this
    as there is a wide variety of screen sizes, in both portrait and landscape orientations.
    To make this easier, instead of using the physical resolution of the device, you
    will use size classes.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确定你的应用正在运行的屏幕大小，你必须考虑设备方向对你的UI的影响。由于屏幕尺寸在纵向和横向都有很大的差异，这可能会很有挑战性。为了使这更容易，你将使用大小类别而不是设备的物理分辨率。
- en: 'For more information on size classes, see this link: [https://developer.apple.com/design/human-interface-guidelines/layout](https://developer.apple.com/design/human-interface-guidelines/layout).'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 关于大小类别的更多信息，请参阅此链接：[https://developer.apple.com/design/human-interface-guidelines/layout](https://developer.apple.com/design/human-interface-guidelines/layout)。
- en: 'Size classes are traits that are automatically assigned to a view by the operating
    system. Two classes are defined, which describe the height and width of a view:
    regular (expansive space) and compact (constrained space). Let’s look at size
    classes for a full-screen view on different devices:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 大小类别是操作系统自动分配给视图的特性。定义了两个类别，描述了视图的高度和宽度：常规（扩展空间）和紧凑（约束空间）。让我们看看不同设备上全屏视图的大小类别：
- en: '![](img/B31371_22_33.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31371_22_33.png)'
- en: 'Figure 22.33: Size classes for different iOS devices'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图22.33：不同iOS设备的大小类别
- en: For the *JRNL* app, you will configure the collection view in the Journal List
    screen to use a single column of collection view cells if the size class is compact,
    and two columns if the size class is regular.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 对于*JRNL*应用，你将在“期刊列表”屏幕中配置集合视图，如果大小类别是紧凑的，则使用单列的集合视图单元格，如果大小类别是常规的，则使用两列。
- en: You’ll add code to your app to determine the current size class. Once you know
    the size class, you’ll be able to set the number of columns to use and the size
    of the collection view cells in the collection view. You’ll learn how to do this
    in the next section.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 你将为你的应用添加代码以确定当前的大小类别。一旦你知道了大小类别，你就能设置要使用的列数和集合视图中的集合视图单元格的大小。你将在下一节中学习如何做到这一点。
- en: Modifying the JournalListViewController class
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改JournalListViewController类
- en: You have already made the `JournalListViewController` class adopt the `UICollectionViewDelegateFlowLayout`
    protocol. Now you will create and set the collection view’s layout using a `UICollectionViewFlowLayout`
    instance and implement methods to dynamically set the collection view cell size.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经使`JournalListViewController`类采用了`UICollectionViewDelegateFlowLayout`协议。现在你将创建并设置集合视图的布局，使用`UICollectionViewFlowLayout`实例，并实现动态设置集合视图单元格大小的方法。
- en: 'Follow these steps:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤操作：
- en: 'Click the **JournalListViewController** file in the Project navigator. In the
    `JournalListViewController` class, add the following method to the class definition
    before the closing curly brace:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击**JournalListViewController**文件。在`JournalListViewController`类中，在闭合花括号之前添加以下方法到类定义中：
- en: '[PRE6]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This method creates an instance of the `UICollectionViewFlowLayout` class, sets
    all the edge insets for the collection view to 10 points, sets the minimum inter-item
    spacing to 0 points, sets the minimum line spacing to 10 points, and assigns it
    to the collection view. Section insets reflect the spacing at the outer edges
    of the section. Minimum inter-item spacing is the minimum spacing to use between
    items in the same row. Minimum line spacing is the minimum spacing to use between
    lines of items in the grid.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法创建了一个`UICollectionViewFlowLayout`类的实例，将集合视图的所有边缘内边距设置为10点，将最小项间距设置为0点，将最小行间距设置为10点，并将其分配给集合视图。分区内边距反映了分区外边缘的间距。最小项间距是在同一行中的项之间使用的最小间距。最小行间距是在网格中项的行之间使用的最小间距。
- en: 'Add the following `UICollectionViewDelegateFlowLayout` method after the `setupCollectionView()`
    method:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`setupCollectionView()`方法之后添加以下`UICollectionViewDelegateFlowLayout`方法：
- en: '[PRE7]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This method determines the number of columns to be displayed and sets the height
    and width of the collection view cells.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法确定要显示的列数，并设置集合视图单元格的高度和宽度。
- en: 'Let’s break it down:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下：
- en: '[PRE8]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This method returns a `CGSize` instance that the collection view cell size should
    be set to.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法返回一个`CGSize`实例，应将其设置为集合视图单元格的大小。
- en: '[PRE9]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This code sets the number of columns to display.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码设置要显示的列数。
- en: '[PRE10]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This statement gets the width of the screen and assigns it to `viewWidth`.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句获取屏幕宽度并将其分配给`viewWidth`。
- en: '[PRE11]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This code subtracts the space used for the edge insets so the cell size can
    be determined.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码减去边缘内边距所占用的空间，以便确定单元格大小。
- en: '[PRE12]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This statement calculates the width of the cell by dividing `contentWidth` by
    the number of columns and assigns it to `cellWidth`.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句通过将`contentWidth`除以列数来计算单元格宽度，并将其分配给`cellWidth`。
- en: '[PRE13]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This statement assigns `90` to `cellHeight`, which will be used to set the cell
    height.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句将`90`分配给`cellHeight`，这将用于设置单元格高度。
- en: '[PRE14]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This returns the `CGSize` instance containing the cell size.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句返回包含单元格大小的`CGSize`实例。
- en: Assume you’re running on iPhone 16 Pro Max in portrait mode. The horizontal
    size class would be `.compact`, so `numberOfColumns` is set to `1`. `viewWidth`
    would be assigned the width of the iPhone screen, which is `414` points. `contentWidth`
    is set to `414 - (10 x 2) = 394`. `cellWidth` is set to `contentWidth / numberOfColumns
    = 394`, and `cellHeight` is set to `90`, so the `CGSize` instance returned would
    be `(394, 90),` enabling one cell to fit in a row.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您正在以竖屏模式在iPhone 16 Pro Max上运行。水平尺寸类将是`.compact`，因此`numberOfColumns`设置为`1`。`viewWidth`将被分配给iPhone屏幕的宽度，即`414`点。`contentWidth`设置为`414
    - (10 x 2) = 394`。`cellWidth`设置为`contentWidth / numberOfColumns = 394`，`cellHeight`设置为`90`，因此返回的`CGSize`实例将是`(394,
    90)`，使得一行可以容纳一个单元格。
- en: When you rotate the same iPhone to landscape mode, the horizontal size class
    would be `.regular`, so `numberOfColumns` is set to `2`. `viewWidth` would be
    assigned the height of the iPhone screen, which is `896` points. `contentWidth`
    is set to `896 - (10 x 3) = 866`. `cellWidth` is set to `contentWidth / numberOfColumns
    = 433`, and `cellHeight` is set to `90`, so the `CGSize` instance returned would
    be `(433, 90)`, enabling two cells to fit in a row.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 当将相同的iPhone旋转到横屏模式时，水平尺寸类将是`.regular`，因此`numberOfColumns`设置为`2`。`viewWidth`将被分配给iPhone屏幕的高度，即`896`点。`contentWidth`设置为`896
    - (10 x 3) = 866`。`cellWidth`设置为`contentWidth / numberOfColumns = 433`，`cellHeight`设置为`90`，因此返回的`CGSize`实例将是`(433,
    90)`，使得两行可以容纳两个单元格。
- en: 'Modify the `viewDidLoad()` method to call the `setupCollectionView()` method:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`viewDidLoad()`方法以调用`setupCollectionView()`方法：
- en: '[PRE15]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Add the following method after the `viewDidLoad()` method to recalculate the
    number of columns and size of the collection view cells when the device is rotated:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`viewDidLoad()`方法之后添加以下方法，以便在设备旋转时重新计算列数和集合视图单元格的大小：
- en: '[PRE16]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: You have implemented all the code required to change the collection view cell
    size based on size classes. Excellent! In the next section, you’ll test your app
    on different simulated devices and on your Mac.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经实现了所有根据尺寸类更改集合视图单元格大小的代码。太棒了！在下一节中，您将在不同的模拟设备和您的Mac上测试您的应用。
- en: Testing your app on different devices
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在不同设备上测试您的应用
- en: 'Now that you have implemented all the code required to dynamically set collection
    view cell size, you’ll test your app on different simulated devices and on your
    Mac. Follow these steps:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经实现了所有动态设置集合视图单元格大小的代码，您将在不同的模拟设备和您的Mac上测试您的应用。按照以下步骤操作：
- en: 'Simulator should still be set to iPad. Build and run your app. It will display
    two columns, as shown:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 模拟器应仍然设置为 iPad。构建并运行您的应用程序。它将显示两列，如下所示：
- en: '![](img/B31371_22_34.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_34.png)'
- en: 'Figure 22.34: Simulator showing iPad screen with two columns'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.34：模拟器显示双列的 iPad 屏幕
- en: 'Choose **Rotate Left** from the **Device** menu, and you’ll still see two columns,
    but the cells have expanded in size to fill the screen:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**设备**菜单中选择**向左旋转**，您仍然会看到两列，但单元格已扩展以填充屏幕：
- en: '![](img/B31371_22_35.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_35.png)'
- en: 'Figure 22.35: Simulator showing iPad screen rotated to the left with two columns'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.35：模拟器显示左旋转的 iPad 屏幕，带有两列
- en: 'Stop your app and choose **iPhone SE (3rd Generation)** from the Destination
    menu. Run your app on Simulator again, and it will display a single column, as
    shown:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止您的应用程序，并在目标菜单中选择**iPhone SE (第 3 代)**。再次在模拟器上运行您的应用程序，它将显示单列，如下所示：
- en: '![](img/B31371_22_36.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_36.png)'
- en: 'Figure 22.36: Simulator showing iPhone screen with a single column'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.36：模拟器显示单列的 iPhone 屏幕
- en: Simulator will not automatically close the iPad instance when it launches the
    iPhone instance. Close the iPad instance manually for better performance.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟器在启动 iPhone 实例时不会自动关闭 iPad 实例。为了获得更好的性能，请手动关闭 iPad 实例。
- en: 'Choose **Rotate Left** from the **Device** menu, and you’ll still see a single
    column, but the cell size has expanded to fill the screen:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**设备**菜单中选择**向左旋转**，您仍然会看到单列，但单元格大小已扩展以填充屏幕：
- en: '![](img/B31371_22_37.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_37.png)'
- en: 'Figure 22.37: Simulator showing iPhone screen rotated with a single column'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.37：模拟器显示旋转后的 iPhone 屏幕，带有单列
- en: 'Stop your app and choose **iPhone 16 Pro Max** from the Destination menu. Run
    your app on Simulator again, and it will display a single column, as shown:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止您的应用程序，并在目标菜单中选择**iPhone 16 Pro Max**。再次在模拟器上运行您的应用程序，它将显示单列，如下所示：
- en: '![](img/B31371_22_38.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_38.png)'
- en: 'Figure 22.38: Simulator showing iPhone screen with a single column'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.38：模拟器显示单列的 iPhone 屏幕
- en: 'Choose **Rotate Left** from the **Device** menu, and you’ll see two columns:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**设备**菜单中选择**向左旋转**，您将看到两列：
- en: '![](img/B31371_22_39.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_39.png)'
- en: 'Figure 22.39: Simulator showing iPhone screen rotated with two columns'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.39：模拟器显示旋转后的 iPhone 屏幕，带有两列
- en: 'Stop your app and choose **MyMac (Designed for iPad)** in the Destination menu.
    Run your app and it should display two columns:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止您的应用程序，并在目标菜单中选择**MyMac (专为 iPad 设计)**。运行您的应用程序，它应该显示两列：
- en: '![](img/B31371_22_40.png)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B31371_22_40.png)'
- en: 'Figure 22.40: Mac app with two columns'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22.40：具有两列的 Mac 应用程序
- en: You’ll need a free or paid Apple Developer account to run your app on your Mac.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一个免费或付费的 Apple 开发者账户才能在您的 Mac 上运行您的应用程序。
- en: At the time of writing, clicking the camera button while the app is running
    on the Mac will cause the app to crash. To work around this, choose **Product
    | Scheme | Edit Scheme...** from the menu bar, select **Run** from the sidebar,
    click the **Diagnostics** tab, and uncheck the **Metal API Validation** check
    box.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，当应用程序在 Mac 上运行时点击相机按钮会导致应用程序崩溃。为了解决这个问题，从菜单栏中选择**产品 | 方案 | 编辑方案...**，从侧边栏中选择**运行**，点击**诊断**选项卡，并取消选中**Metal
    API 验证**复选框。
- en: You have modified your app to use a collection view in place of a table view,
    and you have enabled it to dynamically modify the collection view cell size when
    it runs on different devices. Great job!
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 您已将您的应用程序修改为使用集合视图代替表格视图，并且已启用它在不同设备上运行时动态修改集合视图单元格大小。做得好！
- en: Summary
  id: totrans-255
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you replaced the table view on the Journal List screen with
    a collection view, which makes better use of the extra screen space available
    when you run your app on an iPad or Mac. You also made your app dynamically modify
    the number of columns and the collection view cell sizes when your device is rotated
    using size classes.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将 Journal List 屏幕上的表格视图替换为集合视图，这使得在您在 iPad 或 Mac 上运行应用程序时更好地利用额外的屏幕空间。您还使用大小类使您的应用程序在设备旋转时动态修改列数和集合视图单元格大小。
- en: First, in the `Main` storyboard file, you replaced the table view on the Journal
    List screen with a collection view and configured the collection view cell to
    display the same information the table view cell used to display. Next, you modified
    the `JournalListTableViewController` and `JournalListTableViewCell` classes to
    work with the collection view and collection view cells. After that, you added
    code to dynamically change the collection view cell size to suit the display your
    app is running on. Finally, you created and tested your app on Simulator and your
    Mac.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在`Main`故事板文件中，您将期刊列表屏幕上的表格视图替换为集合视图，并配置集合视图单元格以显示表格视图单元格曾经显示的相同信息。接下来，您修改了`JournalListTableViewController`和`JournalListTableViewCell`类，以便与集合视图和集合视图单元格一起工作。然后，您添加了代码以动态更改集合视图单元格的大小，以适应您的应用程序正在运行的显示。最后，您在模拟器和您的Mac上创建并测试了您的应用程序。
- en: You should now be able to use collection views in your app and know how to dynamically
    modify your app’s interface based on size classes.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在应该能够在您的应用程序中使用集合视图，并了解如何根据尺寸类别动态修改您应用程序的界面。
- en: This is the end of *Part 3* of this book. You’ll learn more about the cool new
    features Apple introduced during WWDC 2024 in the next part, starting with SwiftUI.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书的第三部分到此结束。在下一部分，您将了解苹果在WWDC 2024期间推出的新酷炫功能，从SwiftUI开始。
- en: Leave a review!
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 留下评论！
- en: Thank you for purchasing this book from Packt Publishing—we hope you enjoy it!
    Your feedback is invaluable and helps us improve and grow. Once you’ve completed
    reading it, please take a moment to leave an Amazon review; it will only take
    a minute, but it makes a big difference for readers like you. Scan the QR code
    below or visit the link to receive a free ebook of your choice.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您从Packt Publishing购买此书——我们希望您喜欢它！您的反馈对我们来说无价，它帮助我们改进和成长。一旦您阅读完毕，请花一点时间在亚马逊上留下评论；这只需一分钟，但对像您这样的读者来说意义重大。扫描下面的二维码或访问链接，以获取您选择的免费电子书。
- en: '[https://packt.link/NzOWQ](https://packt.link/NzOWQ%0D)'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/NzOWQ](https://packt.link/NzOWQ%0D)'
- en: '[![](img/QR_Code2370024260177460609.png)](https://packt.link/NzOWQ%0D)'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](img/QR_Code2370024260177460609.png)](https://packt.link/NzOWQ%0D)'
