["```swift\n    import SpriteKit\n\n    class MenuScene: SKScene {\n        // Grab the HUD texture atlas:\n        let textureAtlas:SKTextureAtlas = \n            SKTextureAtlas(named:\"hud.atlas\")\n        // Instantiate a sprite node for the start button\n        // (we'll use this in a moment):\n        let startButton = SKSpriteNode()\n\n        override func didMoveToView(view: SKView) {\n        }\n    }\n    ```", "```swift\n    // Position nodes from the center of the scene:\n    self.anchorPoint = CGPoint(x: 0.5, y: 0.5)\n    // Set a sky-blue background color:\n    self.backgroundColor = UIColor(red: 0.4, green: 0.6,\n        blue: 0.95, alpha: 1.0) \n    // Add the background image:\n    let backgroundImage = SKSpriteNode(imageNamed: \"Background-menu\")\n    backgroundImage.size = CGSize(width: 1024, height: 768)\n    self.addChild(backgroundImage)\n    ```", "```swift\n    // Draw the name of the game:\n    let logoText = SKLabelNode(fontNamed: \"AvenirNext-Heavy\")\n    logoText.text = \"Pierre Penguin\"\n    logoText.position = CGPoint(x: 0, y: 100)\n    logoText.fontSize = 60\n    self.addChild(logoText)\n    // Add another line below:\n    let logoTextBottom = SKLabelNode(fontNamed: \"AvenirNext-Heavy\")\n    logoTextBottom.text = \"Escapes the Antarctic\"\n    logoTextBottom.position = CGPoint(x: 0, y: 50)\n    logoTextBottom.fontSize = 40\n    self.addChild(logoTextBottom)\n    ```", "```swift\n    // Build the start game button:\n    startButton.texture = textureAtlas.textureNamed(\"button.png\")\n    startButton.size = CGSize(width: 295, height: 76)\n    // Name the start node for touch detection:\n    startButton.name = \"StartBtn\"\n    startButton.position = CGPoint(x: 0, y: -20)\n    self.addChild(startButton)\n\n    // Add text to the start button:\n    let startText = SKLabelNode(fontNamed: \n        \"AvenirNext-HeavyItalic\")\n    startText.text = \"START GAME\"\n    startText.verticalAlignmentMode = .Center\n    startText.position = CGPoint(x: 0, y: 2)\n    startText.fontSize = 40\n    // Name the text node for touch detection:\n    startText.name = \"StartBtn\"\n    startButton.addChild(startText)\n    ```", "```swift\n    // Pulse the start button in and out gently:\n    let pulseAction = SKAction.sequence([\n        SKAction.fadeAlphaTo(0.7, duration: 0.9),\n        SKAction.fadeAlphaTo(1, duration: 0.9),\n        ])\n    startButton.runAction( SKAction.repeatActionForever(pulseAction))\n    ```", "```swift\n    override func viewWillLayoutSubviews() {\n        super.viewWillLayoutSubviews()\n\n        // Build the menu scene:\n        let menuScene = MenuScene()\n        let skView = self.view as! SKView\n        // Ignore drawing order of child nodes\n        // (This increases performance)\n        skView.ignoresSiblingOrder = true\n        // Size our scene to fit the view exactly:\n        menuScene.size = view.bounds.size\n        // Show the menu:\n        skView.presentScene(menuScene)\n    }\n    ```", "```swift\noverride func touchesBegan(touches: Set<NSObject>, withEvent \n    event: UIEvent) {\n    for touch in (touches as! Set<UITouch>) {\n        let location = touch.locationInNode(self)\n        let nodeTouched = nodeAtPoint(location)\n\n        if nodeTouched.name == \"StartBtn\" {\n            // Player touched the start text or button node\n            // Switch to an instance of the GameScene:\n            self.view?.presentScene(GameScene(size: self.size))\n        }\n    }\n}\n```", "```swift\n    let restartButton = SKSpriteNode()\n    let menuButton = SKSpriteNode()\n    ```", "```swift\n    // Add the restart and menu button textures to the nodes:\n    restartButton.texture = \n        textureAtlas.textureNamed(\"button-restart.png\")\n    menuButton.texture = \n        textureAtlas.textureNamed(\"button-menu.png\")\n    // Assign node names to the buttons:\n    restartButton.name = \"restartGame\"\n    menuButton.name = \"returnToMenu\"\n    // Position the button node:\n    let centerOfHud = CGPoint(x: screenSize.width / 2,\n        y: screenSize.height / 2)\n    restartButton.position = centerOfHud\n    menuButton.position = \n        CGPoint(x: centerOfHud.x - 140, y: centerOfHud.y)\n    // Size the button nodes:\n    restartButton.size = CGSize(width: 140, height: 140)\n    menuButton.size = CGSize(width: 70, height: 70)\n    ```", "```swift\n    func showButtons() {\n        // Set the button alpha to 0:\n        restartButton.alpha = 0\n        menuButton.alpha = 0\n        // Add the button nodes to the HUD:\n        self.addChild(restartButton)\n        self.addChild(menuButton)\n        // Fade in the buttons:\n        let fadeAnimation = \n            SKAction.fadeAlphaTo(1, duration: 0.4)\n        restartButton.runAction(fadeAnimation)\n        menuButton.runAction(fadeAnimation)\n    }\n    ```", "```swift\nfunc gameOver() {\n    // Show the restart and main menu buttons:\n    hud.showButtons()\n}\n```", "```swift\n// Alert the GameScene:\nif let gameScene = self.parent?.parent as? GameScene {\n    gameScene.gameOver()\n}\n```", "```swift\noverride func touchesBegan(touches: Set<NSObject>, withEvent \n    event: UIEvent) {\n    player.startFlapping()\n\n    for touch in (touches as! Set<UITouch>) {\n        let location = touch.locationInNode(self)\n        let nodeTouched = nodeAtPoint(location)\n\n        if let gameSprite = nodeTouched as? GameSprite {\n            gameSprite.onTap()\n        }\n\n // Check for HUD buttons:\n if nodeTouched.name == \"restartGame\" {\n // Transition to a new version of the GameScene\n // to restart the game:\n self.view?.presentScene(\n GameScene(size: self.size),\n transition: .crossFadeWithDuration(0.6))\n }\n else if nodeTouched.name == \"returnToMenu\" {\n // Transition to the main menu scene:\n self.view?.presentScene(\n MenuScene(size: self.size),\n transition: .crossFadeWithDuration(0.6))\n }\n    }\n}\n```", "```swift\n    import AVFoundation\n    ```", "```swift\n    var musicPlayer = AVAudioPlayer()\n    ```", "```swift\n    // Start the background music:\n    let musicUrl = NSBundle.mainBundle().URLForResource(\n        \"Sound/BackgroundMusic.m4a\", withExtension: nil)\n    if let url = musicUrl {\n        musicPlayer = \n            AVAudioPlayer(contentsOfURL: url, error: nil)\n        musicPlayer.numberOfLoops = -1\n        musicPlayer.prepareToPlay()\n        musicPlayer.play()\n    }\n    ```", "```swift\n    let coinSound = \n        SKAction.playSoundFileNamed(\"Sound/Coin.aif\", \n            waitForCompletion: false)\n    ```", "```swift\n    // Play the coin sound:\n    self.runAction(coinSound)\n    ```", "```swift\n    let powerupSound = \n        SKAction.playSoundFileNamed(\"Sound/Powerup.aif\",     \n            waitForCompletion: false)\n    let hurtSound = \n        SKAction.playSoundFileNamed(\"Sound/Hurt.aif\",\n            waitForCompletion: false)\n    ```", "```swift\n    // Play the hurt sound:\n    self.runAction(hurtSound)\n    ```", "```swift\n    // Play the powerup sound:\n    self.runAction(powerupSound)\n    ```", "```swift\n    // Play the start sound:\n    self.runAction(SKAction.playSoundFileNamed(\"Sound/StartGame.aif\", \n        waitForCompletion: false))\n    ```"]