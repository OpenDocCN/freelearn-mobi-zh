["```java\n    <Button\n        android:id=\"@+id/button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Button\"\n        android:layout_centerVertical=\"true\"\n        android:layout_centerHorizontal=\"true\" />\n    ```", "```java\n    Button button = (Button)findViewById(R.id.button);\n    button.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            Toast.makeText(MainActivity.this, \"Click\", Toast.LENGTH_SHORT).show();\n        }\n    });\n    button.setOnLongClickListener(new View.OnLongClickListener() {\n        @Override\n        public boolean onLongClick(View v) {\n            Toast.makeText(MainActivity.this, \"Long Press\", Toast.LENGTH_SHORT).show();\n            return true;\n        }\n    });\n    ```", "```java\nandroid:onClick=\"\"\n```", "```java\npublic void onClick(View v) {}\n```", "```java\nbutton.setOn\n```", "```java\n    private GestureDetectorCompat mGestureDetector;\n    ```", "```java\n    private class GestureListener extends GestureDetector.SimpleOnGestureListener {\n        @Override\n        public boolean onSingleTapConfirmed(MotionEvent e) {\n            Toast.makeText(MainActivity.this, \"onSingleTapConfirmed\", Toast.LENGTH_SHORT).show();\n            return super.onSingleTapConfirmed(e);\n        }\n        @Override\n        public boolean onDoubleTap(MotionEvent e) {\n            Toast.makeText(MainActivity.this, \"onDoubleTap\", Toast.LENGTH_SHORT).show();\n            return super.onDoubleTap(e);\n        }\n    }\n    ```", "```java\n    public boolean onTouchEvent(MotionEvent event) {\n        mGestureDetector.onTouchEvent(event);\n        return super.onTouchEvent(event);\n    }\n    ```", "```java\n    mGestureDetector = new GestureDetectorCompat(this, new GestureListener());\n    ```", "```java\n    <ImageView\n        android:id=\"@+id/imageView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:src=\"img/ic_launcher\"\n        android:layout_centerVertical=\"true\"\n        android:layout_centerHorizontal=\"true\" />\n    ```", "```java\n    private ScaleGestureDetector mScaleGestureDetector;\n    private float mScaleFactor = 1.0f;\n    private ImageView mImageView;\n    ```", "```java\n    public boolean onTouchEvent(MotionEvent motionEvent) {\n        mScaleGestureDetector.onTouchEvent(motionEvent);\n        return true;\n    }\n    ```", "```java\n    private class ScaleListener extends ScaleGestureDetector.SimpleOnScaleGestureListener {\n        @Override\n        public boolean onScale(ScaleGestureDetector scaleGestureDetector) {\n            mScaleFactor *= scaleGestureDetector.getScaleFactor();\n            mScaleFactor = Math.max(0.1f, Math.min(mScaleFactor, 10.0f));\n            mImageView.setScaleX(mScaleFactor);\n            mImageView.setScaleY(mScaleFactor);\n            return true;\n        }\n    }\n    ```", "```java\n    mImageView=(ImageView)findViewById(R.id.imageView);\n    mScaleGestureDetector = new ScaleGestureDetector(this, new ScaleListener());\n    ```", "```java\nmScaleFactor = Math.max(0.1f, Math.min(mScaleFactor, 10.0f));\n```", "```java\n    <android.support.v4.widget.SwipeRefreshLayout\n\n        android:id=\"@+id/swipeRefresh\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <ListView\n            android:id=\"@android:id/list\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\" />\n    </android.support.v4.widget.SwipeRefreshLayout>\n    ```", "```java\n    SwipeRefreshLayout mSwipeRefreshLayout;\n    ListView mListView;\n    List mArrayList = new ArrayList<>();\n    private int mRefreshCount=0;\n    ```", "```java\n    private void refreshList() {\n        mRefreshCount++;\n        mArrayList.add(\"Refresh: \" + mRefreshCount);\n        ListAdapter countryAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, mArrayList);\n        mListView.setAdapter(countryAdapter);\n        mSwipeRefreshLayout.setRefreshing(false);\n    }\n    ```", "```java\n    mSwipeRefreshLayout = (SwipeRefreshLayout)findViewById(R.id.swipeRefresh);\n    mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\n        @Override\n        public void onRefresh() {\n            refreshList();\n        }\n    });\n\n    mListView = (ListView)findViewById(android.R.id.list);\n    final String[] countries = new String[]{\"China\", \"France\", \"Germany\", \"India\", \"Russia\", \"United Kingdom\", \"United States\"};\n    mArrayList = new ArrayList<String>(Arrays.asList(countries));\n    ListAdapter countryAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, mArrayList);\n    mListView.setAdapter(countryAdapter);\n    ```", "```java\n<menu  >\n    <item\n        android:id=\"@+id/menu_refresh\"\n        android:showAsAction=\"never\"\n        android:title=\"@string/menu_refresh\"/>\n</menu>\n```", "```java\nSwipeRefreshLayout.setRefreshing(true);\n```", "```java\n<uses-feature android:name=\"android.hardware.sensor.compass\" android:required=\"true\"/>\n```", "```java\n    <ListView\n        android:id=\"@+id/list\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" />\n    ```", "```java\n    ListView listView = (ListView)findViewById(R.id.list);\n    List sensorList = new ArrayList<String>();\n\n    List<Sensor> sensors = ((SensorManager) getSystemService(Context.SENSOR_SERVICE)).getSensorList(Sensor.TYPE_ALL);\n    for (Sensor sensor : sensors ) {\n        sensorList.add(sensor.getName());\n    }\n    ListAdapter sensorAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, sensorList);\n    listView.setAdapter(sensorAdapter);\n    ```", "```java\nList<Sensor> sensors = ((SensorManager) getSystemService(Context.SENSOR_SERVICE)).getSensorList(Sensor.TYPE_ALL);\n```", "```java\nList<Sensor> sensors = sensorManager.getSensorList(Sensor.TYPE_ACCELEROMETER);\n```", "```java\nif (sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER) != null){\n    //Sensor is available - do something here\n}\n```", "```java\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerHorizontal=\"true\"\n        android:layout_centerVertical=\"true\"\n        android:text=\"0\"/>\n    ```", "```java\n    private SensorManager mSensorManager;\n    private Sensor mSensor;\n    private TextView mTextView;\n    ```", "```java\n    private SensorEventListener mSensorListener = new SensorEventListener() {\n        @Override\n        public void onSensorChanged(SensorEvent event) {\n            mTextView.setText(String.valueOf(event.values[0]));\n        }\n        @Override\n        public void onAccuracyChanged(Sensor sensor, int accuracy) {\n            //Nothing to do\n        }\n    };\n    ```", "```java\n    @Override\n    protected void onResume() {\n        super.onResume();\n        mSensorManager.registerListener(mSensorListener, mSensor, SensorManager.SENSOR_DELAY_NORMAL);\n    }\n\n    @Override\n    protected void onPause() {\n        super.onPause();\n        mSensorManager.unregisterListener(mSensorListener);\n    }\n    ```", "```java\n    mTextView = (TextView)findViewById(R.id.textView);\n    mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\n    mSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_LIGHT);\n    ```", "```java\nandroid:configChanges=\"keyboardHidden|orientation|screenSize\"\n```", "```java\nonConfigurationChanged (Configuration newConfig)\n```", "```java\n    <Button\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Check Orientation\"\n        android:id=\"@+id/button\"\n        android:layout_centerVertical=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"checkOrientation\"/>\n    ```", "```java\n    public void checkOrientation(View view){\n        int orientation = getResources().getConfiguration().orientation;\n        switch (orientation) {\n            case Configuration.ORIENTATION_LANDSCAPE:\n                Toast.makeText(MainActivity.this, \"ORIENTATION_LANDSCAPE\", Toast.LENGTH_SHORT).show();\n                break;\n            case Configuration.ORIENTATION_PORTRAIT:\n                Toast.makeText(MainActivity.this, \"ORIENTATION_PORTRAIT\", Toast.LENGTH_SHORT).show();\n                break;\n            case Configuration.ORIENTATION_UNDEFINED:\n                Toast.makeText(MainActivity.this, \"ORIENTATION_UNDEFINED\", Toast.LENGTH_SHORT).show();\n                break;\n        }\n    }\n    ```", "```java\ngetResources().getConfiguration().orientation\n```", "```java\nint rotation = getWindowManager().getDefaultDisplay().getRotation();\n```"]