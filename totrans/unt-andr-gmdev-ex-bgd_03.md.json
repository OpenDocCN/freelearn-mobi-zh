["```java\n    public static int score = 0;\n    ```", "```java\n    public void OnGUI() {\n      Rect scoreRect = new Rect(0, 0, 100, 30);\n      GUI.Box(scoreRect, \"\" + score);\n    }\n    ```", "```java\n    public CharacterController characterControl;\n    public float moveSpeed = 10f;\n    public float rotateSpeed = 45f;\n    ```", "```java\n    public void OnGUI() {\n      Rect fore = new Rect(50, Screen.height – 150, 50, 50);\n      if(GUI.RepeatButton(fore, \"f\")) {\n        MoveTank(moveSpeed);\n      }\n\n      Rect back = new Rect(50, Screen.height – 50, 50, 50);\n      if(GUI.RepeatButton(back, \"b\")) {\n        MoveTank(-moveSpeed);\n      }\n\n      Rect left = new Rect(0, Screen.height – 100, 50, 50);\n      if(GUI.RepeatButton(left, \"l\")) {\n        RotateTank(-rotateSpeed);\n      }\n\n      Rect right = new Rect(100, Screen.height – 100, 50, 50);\n      if(GUI.RepeatButton(right, \"r\")) {\n        RotateTank(rotateSpeed);\n      }\n    }\n    ```", "```java\n    public void MoveTank(float speed) {\n    ```", "```java\n      Vector3 move = characterControl.transform.forward * speed * Time.deltaTime;\n    ```", "```java\n      move.y -= 9.8f * Time.deltaTime;\n    ```", "```java\n      characterControl.Move(move);\n    }\n    ```", "```java\n    public void RotateTank(float speed) {Vector3 rotate = Vector3.up * speed * Time.deltaTime;\n    ```", "```java\n      characterControl.transform.Rotate(rotate);\n    }\n    ```", "```java\n    public Transform turretPivot;\n    public Transform cannonPivot;\n\n    public float turretSpeed = 45f;\n    public float cannonSpeed = 20f;\n\n    public float lowCannonLimit = 315f;\n    public float highCannonLimit = 359.9f;\n    ```", "```java\n    public void OnGUI() {\n      Rect up = new Rect(Screen.width – 100, Screen.height – 150, 50, 50);\n      if(GUI.RepeatButton(up, \"u\")) {\n        RotateCannon(cannonSpeed);\n      }\n\n      Rect down = new Rect(Screen.width – 100, Screen.height – 50, 50, 50);\n      if(GUI.RepeatButton(down, \"d\")) {\n        RotateCannon(-cannonSpeed);\n      }\n\n      Rect left = new Rect(Screen.width – 150, Screen.height – 100, 50, 50);\n      if(GUI.RepeatButton(left, \"l\")) {\n        RotateTurret(-turretSpeed);\n      }\n\n      Rect right = new Rect(Screen.width – 50, Screen.height – 100, 50, 50);\n      if(GUI.RepeatButton(right, \"r\")) {\n        RotateTurret(turretSpeed);\n      }\n    }\n    ```", "```java\n    public void RotateTurret(float speed) {\n      Vector3 rotate = Vector3.up * speed * Time.deltaTime;\n      turretPivot.Rotate(rotate);\n    }\n    ```", "```java\n    public void RotateCannon(float speed) {\n      float rotate = speed * Time.deltaTime;\n    ```", "```java\n    Vector3 euler = cannonPivot.localEulerAngles;\n    ```", "```java\n    euler.x = Mathf.Clamp(euler.x – rotate, lowCannonLimit, highCannonLimit);\n    ```", "```java\n      cannonPivot.localEulerAngles = euler;\n    }\n    ```", "```java\n    public Renderer rightTread;\n    public Renderer leftTread;\n    ```", "```java\n    private float rightOffset = 0;\n    private float leftOffset = 0;\n    ```", "```java\n    rightOffset += speed * Time.deltaTime;\n    rightTread.material.mainTextureOffset = new Vector2(rightOffset, 0);\n    leftOffset += speed * Time.deltaTime;\n    leftTread.material.mainTextureOffset = new Vector2(leftOffset, 0);\n    ```", "```java\n    public Animator animator;\n    ```", "```java\n    public float maxIdleTime = 10f;\n    public float minIdleTime = 3f;\n    ```", "```java\n    private int timeId = -1;\n    private int wasHitId = -1;\n    private int inTheFrontId = -1;\n    ```", "```java\n    private int idleRetractId = -1;\n    private int idleExtendId = -1;\n    ```", "```java\n    public void Awake() {\n      timeId = Animator.StringToHash(\"time\");\n      wasHitId = Animator.StringToHash(\"wasHit\");\n      inTheFrontId = Animator.StringToHash(\"inTheFront\");\n      idleRetractId = Animator.StringToHash(\"Base Layer.Idle_Retract\");\n      idleExtendId = Animator.StringToHash(\"Base Layer.Idle_Extend\");\n    }\n    ```", "```java\n    public void Update() {\n      int currentStateId = animator.GetCurrentAnimatorStateInfo(0).nameHash;\n    ```", "```java\n      if(currentStateId == idleRetractId || currentStateId == idleExtendId) {\n        SubtractTime();\n      }\n    ```", "```java\n      else {\n        if(animator.GetBool(wasHitId)) {\n          ClearHit();\n          ResetTime();\n        }\n\n        if(animator.GetFloat(timeId) < 0) {\n          ResetTime();\n        }\n      }\n    }\n    ```", "```java\n    public void SubtractTime() {\n      float curTime = animator.GetFloat(timeId);\n      curTime -= Time.deltaTime;\n      animator.SetFloat(timeId, curTime);\n    }\n    ```", "```java\n    public void ClearHit() {\n      animator.SetBool(wasHitId, false);\n      animator.SetBool(inTheFrontId, false);\n    }\n    ```", "```java\n    public void ResetTime() {\n      float newTime = Random.Range(minIdleTime, maxIdleTime);\n      animator.SetFloat(timeId, newTime);\n    }\n    ```", "```java\n    public Transform muzzlePoint;\n    public Transform targetPoint;\n\n    public void OnGUI() {\n      Rect fire = new Rect(Screen.width – 70, Screen.height – 220, 50, 50);\n      if(GUI.Button(fire, \"Fire\")) {\n        Fire();\n      }\n    }\n    ```", "```java\n    public void Fire() {\n      RaycastHit hit;\n      if(Physics.Raycast(muzzlePoint.position, muzzlePoint.forward, out hit)) {\n        targetPoint.position = hit.point;\n        hit.transform.root.gameObject.SendMessage(\"Hit\", hit.point, SendMessageOptions.DontRequireReceiver);\n      }\n      else {\n        targetPoint.position = Vector3.zero;\n      }\n    }\n    ```", "```java\n    public void Hit(Vector3 point) {\n      int currentStateId = animator.GetCurrentAnimatorStateInfo(0).nameHash;\n      if(currentStateId != idleExtendId) return;\n      animator.SetBool(wasHitId, true);\n    ```", "```java\n    Vector3 localPoint = transform.InverseTransformPoint(point);\n      if(localPoint.x > 0) {\n        animator.SetBool(inTheFrontId, false);\n        ScoreCounter.score += 5;\n      }\n      else {\n        animator.SetBool(inTheFrontId, true);\n        ScoreCounter.score += 10;\n      }\n    }\n    ```"]