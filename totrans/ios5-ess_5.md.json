["```swift\n    #import <UIKit/UIKit.h> #import <MediaPlayer/MediaPlayer.h>\n    @interface ViewController : UIViewController -(IBAction)playMovie:(id)sender;\n    @end\n\n    ```", "```swift\n    -(IBAction)playMovie:(id)sender{\n    NSString *filepath = [[NSBundle mainBundle] pathForResource:@\"GenieCompanyVideo\" ofType:@\"mp4\"];\n    NSURL *fileURL = [NSURL fileURLWithPath:filepath];\n    MPMoviePlayerController *moviePlayerController = [[MPMoviePlayerController alloc]initWithContentURL:fileURL];\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(moviePlaybackComplete:) name:MPMoviePlayerPlaybackDidFinishNotification object:moviePlayerController];\n    [self.view addSubview:moviePlayerController.view];\n    moviePlayerController.fullscreen = YES;\n    moviePlayerController.scalingMode = MPMovieScalingModeAspectFit;\n    [moviePlayerController play];\n    }\n\n    ```", "```swift\nmoviePlayerController.scalingMode = MPMovieScalingModeFill;\n\n```", "```swift\n- (void)moviePlaybackComplete:(NSNotification *)notification{\nMPMoviePlayerController *moviePlayerController = [notification object];\n[[NSNotificationCenter defaultCenter] removeObserver:self name:MPMoviePlayerPlaybackDidFinishNotification object:moviePlayerController];\n[moviePlayerController.view removeFromSuperview];\n[moviePlayerController release];\n}\n\n```", "```swift\n    [self.view addSubview:moviePlayerController.view];\n\n    ```", "```swift\n    if([moviePlayerController respondsToSelector:@selector(setAllowsAirPlay:)]){\n    [moviePlayerController setAllowsAirPlay:YES];\n    }\n\n    ```", "```swift\nNSArray *builtInFilterList = [CIFilter filterNamesInCategory:kCICategoryBuiltIn];\nNSLog(@\"%@\", builtInFilterList);\n\n```", "```swift\n    #import <UIKit/UIKit.h> @interface ViewController : UIViewController<UIImagePickerControllerDelegate, UINavigationControllerDelegate, UIAlertViewDelegate, UIActionSheetDelegate> {\n    UIImageView *imageView;\n    UIButton *chooseImage;\n    UIButton *filterEffects;\n    }\n    @property (nonatomic, retain) IBOutlet UIImageView *imageView;\n    @property (nonatomic, retain) IBOutlet UIButton *chooseImage;\n    @property (nonatomic, retain) IBOutlet UIButton *filterEffects;\n    -(IBAction) getImage:(id) sender;\n    -(IBAction) getFilterEffects:(id) sender;\n    @end\n\n    ```", "```swift\n    #import \"ViewController.h\" #import \"QuartzCore/QuartzCore.h\"\n    @implementation ViewController @synthesize imageView, chooseImage, filterEffects;\n\n    ```", "```swift\n    -(IBAction) getImage:(id) sender {\n    UIImagePickerController * picker = [[UIImagePickerController alloc] init];\n    picker.delegate = self;\n    picker.sourceType = UIImagePickerControllerSourceTypeSavedPhotosAlbum;\n    [self presentModalViewController:picker animated:YES];\n    }\n    - (void)imagePickerController:(UIImagePickerController *) picker didFinishPickingMediaWithInfo:(NSDictionary *)info {\n    [picker dismissModalViewControllerAnimated:YES];\n    imageView.image = [info objectForKey:@\"UIImagePickerControllerOriginalImage\"];\n    [picker release];\n    }\n\n    ```", "```swift\n    // Displays our Action Sheet\n    - (IBAction)getFilterEffects:(id)sender {\n    // Define an instance of our Action Sheet\n    UIActionSheet *actionSheet;\n    // Initialise our Action Sheet with options\n    actionSheet=[[UIActionSheet alloc]initWithTitle:@\"Available Actions\" delegate:self cancelButtonTitle:@\"Cancel\" destructiveButtonTitle:@\"Close\" otherButtonTitles: @\"Hue Adjust\",@\"Vibrance\",@\"Color Invert\",@\"Straighten Filter\",@\"Ripple Effect\", nil];\n    [actionSheet showInView:self.view];\n    [actionSheet release];\n    }\n\n    ```", "```swift\n    // Delegate which handles the processing of the option buttons //selected\n    - (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex{}\n\n    ```", "```swift\nCIContext *context = [CIContext contextWithOptions:nil];\nCIImage *cImage = [CIImage imageWithCGImage:[imageView.image CGImage]];\nCIImage *result;\n\n```", "```swift\n    // Handle when the Hue Adjust Filter option has been chosen.\n    if (buttonIndex == 1){\n    CIFilter *hueAdjust = [CIFilter filterWithName:@\"CIHueAdjust\"];\n    [hueAdjust setDefaults];\n    [hueAdjust setValue: cImage forKey: @\"inputImage\"];\n    [hueAdjust setValue: [NSNumber numberWithFloat: 2.094] forKey: @\"inputAngle\"];\n    result = [hueAdjust valueForKey: @\"outputImage\"];\n    }\n\n    ```", "```swift\n    // Handle when the Vibrance Filter option has been chosen.\n    else if (buttonIndex == 2){\n    CIFilter *vibrance = [CIFilter filterWithName:@\"CIVibrance\"];\n    [vibrance setDefaults];\n    [vibrance setValue: cImage forKey: @\"inputImage\"];\n    [vibrance setValue: [NSNumber numberWithFloat: 1.00] forKey: @\"inputAmount\"];\n    result = [vibrance valueForKey: @\"outputImage\"];\n    }\n\n    ```", "```swift\n    // Handle when the Color Invert option has been chosen.\n    else if (buttonIndex == 3){\n    CIFilter *invert = [CIFilter\n    filterWithName:@\"CIColorInvert\"];\n    [invert setDefaults];\n    [invert setValue: cImage forKey:@\"inputImage\"];\n    result = [invert valueForKey:@\"outputImage\"];\n    }\n\n    ```", "```swift\n    // Handle when the Straighten Filter option has been chosen.\n    else if (buttonIndex == 4){\n    CIFilter *straightenFilter = [CIFilter filterWithName:@\"CIStraightenFilter\"];\n    [straightenFilter setDefaults];\n    [straightenFilter setValue: cImage forKey:@\"inputImage\"];\n    [straightenFilter setValue: [NSNumber numberWithFloat: 3.10] forKey: @\"inputAngle\"];\n    result = [straightenFilter valueForKey:@\"outputImage\"];\n    }\n\n    ```", "```swift\n    // Only process when button index is based on the list of //options.Ignore the Close and Cancel buttons and then display\n    // our update image to our UIImageView Control.\n    if (buttonIndex != 0 && buttonIndex != 5 && buttonIndex != 6) {\n    self.imageView.image = [UIImage imageWithCGImage:[context createCGImage:result fromRect:CGRectMake(0, 0, self.imageView.image.size.width, self.imageView.image.size.height)]];\n    }\n\n    ```", "```swift\n    else if (buttonIndex == 5){\n    CATransition *animation = [CATransition animation];\n    [animation setDelegate:self];\n    [animation setDuration:3.0f];\n    [animation setTimingFunction:UIViewAnimationCurveEaseInOut];\n    [animation setType:@\"rippleEffect\" ];\n    [self.view.layer addAnimation:animation forKey:NULL];\n    }\n\n    ```"]