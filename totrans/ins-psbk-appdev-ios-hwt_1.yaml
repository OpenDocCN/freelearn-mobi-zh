- en: Chapter 1. Instant Passbook App Development for iOS How-to
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. iOS即时Passbook应用程序开发指南
- en: Welcome to *Instant Passbook App Development for iOS How-to*. This book will
    guide you through creating a Passbook Pass, distributing it to your users, and
    integrating it in to your existing app.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到*iOS即时Passbook应用程序开发指南*。这本书将指导您创建Passbook Pass，将其分发给您的用户，并将其集成到现有的应用程序中。
- en: Understanding Passbook (Simple)
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解Passbook（简单）
- en: This recipe will help you understand Passbook from the perspective of both,
    a user and a Pass creator.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这个菜谱将帮助您从用户和Pass创建者的角度理解Passbook。
- en: Getting ready
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: With iOS, Apple introduced the Passbook app as a central digital wallet for
    all the store cards, coupons, boarding passes, and event tickets that have become
    a popular feature of apps.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用iOS，苹果推出了Passbook应用程序作为所有商店卡、优惠券、登机牌和活动门票的中央数字钱包，这些已成为应用程序的流行功能。
- en: A company wishing to take advantage of this digital wallet and the extra functionality
    it provides, can use Apple's developer platform to create a Pass for their users.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 想要利用这个数字钱包及其提供的额外功能的公司，可以使用苹果的开发者平台为他们的用户创建Pass。
- en: How to do it…
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'To understand Passbook, we need to see a Pass in action. Download the example
    Pass from:'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要理解Passbook，我们需要看到Pass的实际应用。从以下链接下载示例Pass：
- en: '[http://passkit.pro/example-generic-pkpass](http://passkit.pro/example-generic-pkpass)'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://passkit.pro/example-generic-pkpass](http://passkit.pro/example-generic-pkpass)'
- en: If you open this link within Mobile Safari, on an iPhone or iPod Touch running
    iOS, you will be presented with the Pass and the option to add it to your Passbook:![How
    to do it…](img/7064OT_01_01.jpg)
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您在运行iOS的iPhone或iPod Touch上的Mobile Safari中打开此链接，您将看到Pass以及将其添加到Passbook的选项：![如何操作…](img/7064OT_01_01.jpg)
- en: Alternatively, you can download the Pass on a Mac or PC and e-mail it to yourself,
    and then open the e-mail within the Mail app on an iPhone or iPod Touch. Tapping
    the Pass attachment link will present the Pass.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 或者，您可以在Mac或PC上下载Pass并将其通过电子邮件发送给自己，然后在iPhone或iPod Touch上的Mail应用程序中打开该电子邮件。点击Pass附件链接将显示Pass。
- en: If you choose to add the Pass to your Passbook app, the displayed Pass will
    disappear, having been filed away within your Passbook. Now, click on the **home**
    button to return to the home screen and launch the Passbook app. In the app you
    will now see the Pass that was just added. It contains information specified by
    the app creator and can be presented when interacting with the company providing
    the service. Additional information can be placed on the back of the Pass. Tap
    the **i** button in the top-right hand corner of the Pass, to reveal this information.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您选择将Pass添加到您的Passbook应用程序中，显示的Pass将消失，因为它已经被存档到您的Passbook中。现在，点击**主页**按钮返回主屏幕并启动Passbook应用程序。在应用程序中，您现在将看到刚刚添加的Pass。它包含应用程序创建者指定的信息，并在与提供服务的企业互动时可以展示。可以在Pass的背面放置附加信息。点击Pass右上角顶部的**i**按钮，以显示这些信息。
- en: How it works…
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'The following diagram describes how Passes are delivered to a Passbook, and
    how these can be updated:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表描述了Pass是如何交付到Passbook的，以及这些Pass如何更新：
- en: '![How it works…](img/7064OT_01_02.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/7064OT_01_02.jpg)'
- en: The process of creating a Pass involves cryptographically signing the Pass using
    a certificate and key generated from your iOS developer account. For this reason,
    the generation of the Pass needs to take place on a server, and then be delivered
    to Passbook either via your own app, as an e-mail attachment, or by embedding
    it in a website.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 创建Pass的过程涉及使用从您的iOS开发者账户生成的证书和密钥对Pass进行加密签名。因此，Pass的生成需要在服务器上进行，然后通过您的应用程序、作为电子邮件附件或嵌入到网站中，将其交付给Passbook。
- en: It's important to note that Apple does not provide any system for the Pass providers
    to authenticate, validate, or invalidate Passes. The Pass can contain barcode
    information, but it is up to the Pass provider to provide the infrastructure for
    reading and processing these barcodes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要注意，苹果不提供任何系统让Pass提供者进行验证、验证或使Pass失效。Pass可以包含条形码信息，但提供这些条形码读取和处理基础设施的责任在于Pass提供者。
- en: Instead of just sitting in the Passbook app, waiting to be used, a Pass can
    contain location and time triggers, that proactively present the Pass to the user,
    serving as both a reminder and providing convenient access. For example, an event
    Pass could be set to appear 15 minutes before the start time, at the time when
    a user is likely to want to present their event Pass to an attendant. Alternatively,
    a coupon Pass could be presented as a user approaches their local store where
    the coupon can be redeemed.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 通行证不仅仅可以静坐在Passbook应用中等待使用，它还可以包含位置和时间触发器，主动向用户展示通行证，既起到提醒作用，又提供方便的访问。例如，活动通行证可以设置为在开始前15分钟出现，此时用户可能需要向服务员出示活动通行证。或者，优惠券通行证可以在用户接近可以兑换优惠券的本地商店时展示。
- en: Passes that have been added to Passbook can also be updated dynamically. For
    example, if the Pass is for a store card, a change to the card balance may require
    an update to the Pass. In the case of, for example an airline ticket Pass, a departure
    gate change should trigger a Pass update.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 已添加到Passbook的通行证也可以动态更新。例如，如果通行证是商店卡，卡余额的变化可能需要更新通行证。例如，对于航班通行证，登机口变更应触发通行证更新。
- en: When a Pass needs to be updated, your server sends a **push notification** to
    the Passbook app on the user's device. This push notification is not displayed
    to the user.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当需要更新通行证时，您的服务器会向用户设备上的Passbook应用发送推送通知。这种推送通知不会显示给用户。
- en: Upon receiving this Push Notification, the Passbook app then makes a request
    to your server for the updated Pass information. Your server would then respond
    to the relevant request, and provide the updated information in the expected format.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在接收到此推送通知后，Passbook应用会向您的服务器请求更新的通行证信息。您的服务器会响应相关请求，并以预期的格式提供更新信息。
- en: When the Passbook App on the user's device receives the updated information,
    it silently updates the Pass. The next time the user looks at the Pass contained
    in the Passbook app, the updated information is displayed.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户的设备上的Passbook应用接收到更新信息时，它会静默地更新通行证。下次用户查看Passbook应用中的通行证时，会显示更新后的信息。
- en: There's more…
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'Support for Passbook is also built into OSX Mountain Lion (10.8.2). Pass files
    with the `pkpass` file extension will open in a preview window:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Passbook的支持也内置在OSX Mountain Lion（10.8.2）中。具有`pkpass`文件扩展名的Pass文件将在预览窗口中打开：
- en: '![There''s more…](img/7064OT_01_03.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多…](img/7064OT_01_03.jpg)'
- en: Clicking on the **Add to Passbook** button will place the Pass in the Passbook
    associated with the iCloud account set up in OSX system preferences.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**添加到Passbook**按钮，将通行证放入与OSX系统偏好设置中设置的iCloud账户关联的Passbook中。
- en: The OSX Mail app and Safari also support embedded Passes.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: OSX的Mail应用和Safari也支持嵌入的通行证。
- en: 'When building a Pass, you can specify a relevant time and up to 10 relevant
    locations that will trigger a message to be displayed on the lock screen. The
    message looks similar to a push notification, however a Pass notification is less
    intrusive. When it is relevant to display, it doesn''t vibrate the iPhone and
    it doesn''t wake up the screen. The notification only becomes visible when the
    phone wakes up from sleep:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建通行证时，您可以指定相关的时间和最多10个相关位置，这些位置将触发在锁屏上显示消息。消息看起来与推送通知相似，然而通行证通知不那么侵扰性。当需要显示时，它不会振动iPhone，也不会唤醒屏幕。通知仅在手机从睡眠中唤醒时才可见：
- en: '![There''s more…](img/7064OT_01_04.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多…](img/7064OT_01_04.jpg)'
- en: The option to specify relevant times and locations, and how far from the location
    the notification is triggered, is determined by the Pass type, as we will see
    later.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 指定相关时间和位置以及通知触发的位置距离的选项，由通行证类型决定，我们稍后会看到。
- en: Apps using Passbook
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Passbook的应用
- en: 'Some of the apps in the App Store using Passbook are as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: App Store中使用Passbook的一些应用如下：
- en: '**Hotels.com**: This uses Passbook for room reservation details. It can be
    downloaded from [http://appstore.com/hotelscom/hotelscom](http://appstore.com/hotelscom/hotelscom).'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hotels.com**：此应用使用Passbook来存储房间预订详情。可以从[http://appstore.com/hotelscom/hotelscom](http://appstore.com/hotelscom/hotelscom)下载。'
- en: '**Starbucks**: This uses Passbook for a store card. It can be downloaded from
    [http://appstore.com/starbuckscoffeecompany](http://appstore.com/starbuckscoffeecompany).'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**星巴克**：此应用使用Passbook作为商店卡。可以从[http://appstore.com/starbuckscoffeecompany](http://appstore.com/starbuckscoffeecompany)下载。'
- en: '**Ticketmaster**: This uses Passbook for event tickets. It can be downloaded
    from [http://appstore.com/ticketmaster/ticketmaster](http://appstore.com/ticketmaster/ticketmaster).'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**票务大师**：此公司使用Passbook进行活动门票。可以从[http://appstore.com/ticketmaster/ticketmaster](http://appstore.com/ticketmaster/ticketmaster)下载。'
- en: '**United Airlines**: This uses Passbook for boarding passes. It can be downloaded
    from [http://appstore.com/unitedairlines](http://appstore.com/unitedairlines).'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**联合航空**：此航空公司使用Passbook进行登机牌。可以从[http://appstore.com/unitedairlines](http://appstore.com/unitedairlines)下载。'
- en: Further documentation
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多文档
- en: For more details refer to Apple's Passbook documentation at [https://developer.apple.com/passbook/](https://developer.apple.com/passbook/).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 更多详细信息，请参阅Apple的Passbook文档，链接为[https://developer.apple.com/passbook/](https://developer.apple.com/passbook/)。
- en: Setting up your environment (Simple)
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置环境（简单）
- en: This recipe shows how to set up your Pass type in Apple's provisioning Portal
    and generate the required files for code signing.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方展示了如何在Apple的配置文件门户中设置您的Pass类型并生成代码签名所需的文件。
- en: Getting ready
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To get started with creating your own Pass, you will need a paid iOS developer
    account. If you intend to present the Passes within an existing iOS app, you will
    need access to the iOS developer account that publishes this existing app. In
    addition, many of these steps require apps and utilities only available on OSX,
    Keychain Access for example, which is used in the certificate creation process.
    Therefore, these steps should be undertaken using a Mac, running OSX.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始创建自己的Pass，您需要一个付费的iOS开发者账户。如果您打算在现有的iOS应用程序中展示Pass，您将需要访问发布此现有应用程序的iOS开发者账户。此外，许多这些步骤需要仅在OSX上可用的应用程序和实用程序，例如用于证书创建过程的Keychain
    Access。因此，这些步骤应在运行OSX的Mac上执行。
- en: How to do it…
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: If you intend to present Passes within an iOS App, but have not yet created
    the app, you will need to create an App ID within the **Identifiers** section
    of the iOS Developer Center.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您打算在iOS应用程序中展示Pass，但尚未创建应用程序，您需要在iOS开发者中心的**标识符**部分创建一个App ID。
- en: 'Log in to the iOS Developer Center and navigate to **Certificates** | I**dentifiers
    & Profiles** | **Identifiers**, or follow this link:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录iOS开发者中心，导航到**证书** | **标识符 & 配置文件** | **标识符**，或点击此链接：
- en: '[https://developer.apple.com/account/ios/identifiers/bundle/bundleList.action](https://developer.apple.com/account/ios/identifiers/bundle/bundleList.action)'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/account/ios/identifiers/bundle/bundleList.action](https://developer.apple.com/account/ios/identifiers/bundle/bundleList.action)'
- en: Click the **+** button at the top-right hand corner.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击右上角的**+**按钮。
- en: Enter an app name in the **App ID Description** field:![How to do it…](img/7064OT_01_05.jpg)
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**App ID 描述**字段中输入应用程序名称：![如何操作…](img/7064OT_01_05.jpg)
- en: Under **Application Services**, ensure that **Passbook** is enabled.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**应用程序服务**下，确保**Passbook**已启用。
- en: Under **App ID Prefix**, use Team ID unless you have a reason to explicitly
    specify this.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**App ID 前缀**下，除非您有明确指定此内容的理由，否则请使用Team ID。
- en: An App ID Suffix is a string identifier that is unique to your app. The provisioning
    portal will not allow you to specify a Bundle Identifier being used in another
    app. The suggestion is to use a reverse domain name style string. For example,
    throughout this book I have used the domain name [http://passkit.pro](http://passkit.pro),
    therefore the Bundle Identifier I have chosen is `pro.passkit.example` as this
    will be the app ID for the example app.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: App ID 后缀是一个唯一的字符串标识符，仅适用于您的应用程序。配置文件门户不允许您指定在另一个应用程序中使用的Bundle Identifier。建议使用反向域名样式字符串。例如，在这本书中，我使用了域名[http://passkit.pro](http://passkit.pro)，因此我选择的Bundle
    Identifier是`pro.passkit.example`，因为这将是示例应用程序的应用ID。
- en: If you have a pre-existing app ID, you will need to enable Passbook for this
    app ID. From the app ID section of the provisioning portal, select the app ID,
    and note down the prefix, as we need it when specifying the Team Identifier of
    your Pass. Having done this, choose **Settings**:![How to do it…](img/7064OT_01_06.jpg)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您有一个现有的App ID，您需要为该App ID启用Passbook。从配置文件门户的App ID部分选择App ID，并记下前缀，因为我们指定Pass的Team
    Identifier时需要它。完成此操作后，选择**设置**：![如何操作…](img/7064OT_01_06.jpg)
- en: Check the checkbox next to Passbook and click on **Done**. A warning will be
    displayed, informing that all new provisioning profiles created for this app ID
    will be enabled for Passes. This is presented as a reminder that pre-existing
    provisioning profiles will not be enabled for Passbook, until they are re-created.
    Therefore, if you have a pre-existing App published to the App Store, you will
    need to re-generate the App's distribution provisioning profile, re-build the
    App with this new provisioning profile, and submit an update of the App to the
    App Store. Until you do this, your App will not be able to add Passes into Passbook.
    When Passes have been correctly enabled for an app ID the Passes' indicator will
    turn green and be labeled as **Enabled** in the app ID summary screen:![How to
    do it…](img/7064OT_01_07.jpg)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“Passbook”旁边的复选框中勾选，然后点击**完成**。将显示一个警告，告知为该应用ID创建的所有新配置文件都将启用Passes。这作为一个提醒，表示现有的配置文件将不会为Passbook启用，直到它们被重新创建。因此，如果你有一个已发布到App
    Store的现有应用，你需要重新生成应用的分发配置文件，使用这个新的配置文件重新构建应用，并将应用的更新提交到App Store。在你这样做之前，你的应用将无法将Passes添加到Passbook中。当Passes为应用ID正确启用后，Passes的指示器将变为绿色，并在应用ID摘要屏幕上标记为**启用**：![如何操作…](img/7064OT_01_07.jpg)
- en: 'Regardless of whether you intend to present your Pass in an app, you will now
    need to create a Pass Type ID. Follow the link on the left menu for Pass Type
    IDs or visit:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 无论你打算在应用中展示你的Pass还是不展示，你现在都需要创建一个Pass Type ID。点击左侧菜单上的Pass Type ID链接或访问：
- en: '[https://developer.apple.com/account/ios/identifiers/passTypeId/passTypeIdList.action](https://developer.apple.com/account/ios/identifiers/passTypeId/passTypeIdList.action)'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/account/ios/identifiers/passTypeId/passTypeIdList.action](https://developer.apple.com/account/ios/identifiers/passTypeId/passTypeIdList.action)'
- en: Click on the **+** button to create a new Pass Type ID. You will need to create
    a Pass Type ID for each type of Pass you intend to create. The types of Passes
    currently available to create are Boarding Pass, Coupon, Event Ticket, Store Card,
    and Generic. The Pass types are presented differently and have different functionality,
    as we will see. In our examples we will focus on building a Generic Pass. If you
    intend to create a Store Card type Pass and a Coupon type Pass, you will need
    to create a Pass Type ID for each:![How to do it…](img/7064OT_01_08.jpg)
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**+**按钮创建一个新的Pass Type ID。你需要为打算创建的每种Pass类型创建一个Pass Type ID。目前可以创建的Pass类型有登机牌、优惠券、活动门票、商店卡和通用。Pass类型以不同的方式呈现，具有不同的功能，正如我们将看到的。在我们的示例中，我们将专注于构建一个通用Pass。如果你打算创建商店卡类型Pass和优惠券类型Pass，你需要为每种类型创建一个Pass
    Type ID：![如何操作…](img/7064OT_01_08.jpg)
- en: For the description, choose a name that defines the type of Pass you are creating.
    For the main example later in the book, a Generic type Pass will be created, therefore
    in the example Pass Type ID above, the description **Generic** is used.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于描述，选择一个定义你正在创建的Pass类型的名称。在本书后面的主要示例中，将创建一个通用类型的Pass，因此在上面的示例Pass Type ID中，使用了描述**通用**。
- en: 'The Identifier has to start with `pass.`, then a reverse domain name string
    is suggested, with the type of Pass placed on the end. In the example above, I
    use the full app ID created earlier, with Pass Type of generic, giving the full
    Pass Type Identifier as follows:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 标识符必须以`pass.`开头，然后是一个反向域名字符串，Pass类型放在末尾。在上面的示例中，我使用了之前创建的完整应用ID，Pass类型为通用，因此完整的Pass
    Type Identifier如下：
- en: '[PRE0]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'With the Pass Type ID created, we will generate an associated cryptographic
    key and certificate, which is needed for authentication of the Pass. Select the
    Pass Type ID and note down the Pass Type ID, as this will be needed later when
    creating the Pass:'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在创建Pass Type ID后，我们将生成一个相关的加密密钥和证书，这是用于Pass认证所需的。选择Pass Type ID并记下Pass Type
    ID，因为这将需要在创建Pass时使用：
- en: '![How to do it…](img/7064OT_01_09.jpg)'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/7064OT_01_09.jpg)'
- en: Click on the **Settings** button and follow the instructions to create a Certificate
    Signing Request. I will repeat the instructions below, with some suggestions to
    help avoid confusion later.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**设置**按钮，按照说明创建证书签名请求。以下我将重复说明，并提供一些建议以帮助避免后续的混淆。
- en: Launch the Keychain Access utility.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动“钥匙串访问”实用程序。
- en: 'From the menu, select **Keychain Access** | **Certificate Assistant** | **Request
    a Certificate from a Certificate Authority**. In the **Certificate Information**
    window, enter the following:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从菜单中选择**钥匙串访问** | **证书助手** | **从证书颁发机构请求证书**。在**证书信息**窗口中，输入以下信息：
- en: '**User Email Address**: Enter the e-mail address associated with your iOS developer
    account.'
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户电子邮件地址**：输入与您的iOS开发者账户关联的电子邮件地址。'
- en: '**Common Name**: Choose a name that relates to the Pass Type ID. This will
    be displayed next to the key in Keychain Access, so a common name that isn''t
    specific enough can cause confusion. See the following screenshot, which is how
    this will be presented in Keychain Access after step 18.'
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通用名称**：选择一个与Pass Type ID相关的名称。这将显示在Keychain Access中的密钥旁边，因此一个不够具体的通用名称可能会导致混淆。请参阅以下截图，这是在步骤18之后在Keychain
    Access中如何呈现的。'
- en: '**CA Email Address**: Leave this field blank'
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CA电子邮件地址**：此字段留空'
- en: '**Request is**: Choose **Saved to Disk**'
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**请求类型**：选择**保存到磁盘**'
- en: '![How to do it…](img/7064OT_01_10.jpg)'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/7064OT_01_10.jpg)'
- en: Click on **Continue** and save your Certificate Signing Request. Then, in Safari
    (other browsers may have problems or incompatibilities that prevent you from choosing
    a file), click on **Choose File** and select the Certificate Signing Request that
    has just been generated. Click on **Generate** and wait for the pass Type certificate
    to be generated:![How to do it…](img/7064OT_01_11.jpg)
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**继续**并保存您的证书签名请求。然后，在Safari（其他浏览器可能会有问题或不兼容，阻止您选择文件）中，点击**选择文件**并选择刚刚生成的证书签名请求。点击**生成**并等待生成密码类型证书：![如何操作…](img/7064OT_01_11.jpg)
- en: Once generated, click on **Done** and download your certificate. Open your downloaded
    certificate, which will launch Keychain Access and attach the certificate to the
    associated private key, which was created during the generation of the Certificate
    Signing Request:![How to do it…](img/7064OT_01_12.jpg)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成后，点击**完成**并下载您的证书。打开您下载的证书，这将启动Keychain Access并将证书附加到在证书签名请求生成过程中创建的相关私钥：![如何操作…](img/7064OT_01_12.jpg)
- en: The certificate and key pair should now be visible in Keychain Access. These
    now need to be converted into a format that can be used to correctly sign the
    Passes you will create. Select the certificate in Keychain Access, and from the
    menu choose **File** | **Export Items**, and choose an export location. You will
    be asked to provide a password to protect the exported items, you may also be
    asked for the administrator password as you are performing a task that requires
    administrator privileges.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 证书和密钥对现在应在Keychain Access中可见。这些现在需要转换为可以正确签署您将创建的Passes的格式。在Keychain Access中选择证书，然后从菜单中选择**文件**
    | **导出项**，并选择一个导出位置。您将被要求提供密码以保护导出的项，您还可能被要求输入管理员密码，因为您正在执行需要管理员权限的任务。
- en: You will need to use a command-line tool called OpenSSL to use the exported
    file to generate the key and certificate files that will be needed. This command
    line tool can be run from a built-in OSXutility called **Terminal**. To open Terminal,
    go to your `Applications` folder in `Finder`. Terminal is located in the `Utilities`
    folder.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要使用名为OpenSSL的命令行工具来使用导出的文件生成所需的密钥和证书文件。此命令行工具可以从内置的OSX实用程序**终端**中运行。要打开终端，请转到Finder中的`Applications`文件夹。终端位于`Utilities`文件夹中。
- en: Use the following Terminal commands to generate a `certificate.pem` file and
    a `key.pem` file.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下终端命令生成一个`certificate.pem`文件和一个`key.pem`文件。
- en: '[PRE1]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: On generating the `key.pem`, you will be prompted to enter an import passport,
    which is the password that was set when exporting from Keychain Access. You will
    then be prompted for a pass phrase; this can be the same as the import password,
    but note that this pass phrase will need to provided when signing your Passes
    and so may form part of an automated script.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在生成`key.pem`时，您将被提示输入导入护照，这是在从Keychain Access导出时设置的密码。然后，您将被提示输入密码短语；这可以与导入密码相同，但请注意，此密码短语在签署您的Passes时需要提供，因此可能成为自动化脚本的一部分。
- en: In addition to the `certificate.pem` file and `key.pem` file generated above,
    the Apple WWDR intermediate certificate is also required. This can be found by
    going to the provisioning portal, in the **Certificates** section, click on the
    **+** button, or visit the following. The certificate is labeled *Worldwide Developer
    Relations Certificate Authority* under Intermediate Certificates.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了上面生成的`certificate.pem`文件和`key.pem`文件外，还需要Apple WWDR中间证书。您可以通过访问配置文件门户，在**证书**部分，点击**+**按钮，或访问以下链接。该证书在**中间证书**下标记为*Worldwide
    Developer Relations Certificate Authority*。
- en: '[https://developer.apple.com/account/ios/certificate/certificateCreate.action](https://developer.apple.com/account/ios/certificate/certificateCreate.action)'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/account/ios/certificate/certificateCreate.action](https://developer.apple.com/account/ios/certificate/certificateCreate.action)'
- en: Once this has been downloaded, it also needs to be converted into a `.pem` file.
    Double-click on the WWDR certificate file, to load it into Keychain Access, and
    select the certificate in Keychain Access:![How to do it…](img/7064OT_01_13.jpg)
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦下载完成，还需要将其转换为 `.pem` 文件。双击 WWDR 证书文件，将其加载到钥匙串访问中，并在钥匙串访问中选择证书：![如何操作…](img/7064OT_01_13.jpg)
- en: Then, from the menu choose **File** | **Export Items**, change the file format
    to **Privacy Enhanced Mail** `(.pem`) and save as it `wwdr.pem`.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，从菜单中选择 **文件** | **导出项**，将文件格式更改为 **增强隐私邮件** `(.pem)` 并将其保存为 `wwdr.pem`。
- en: How it works…
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Apple's security model ensures that only registered iOS developers can create
    Passes and that Passes cannot be altered by a third party while being delivered
    to a user's device, without being detected, and rejected by Passbook.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果的安全模型确保只有注册的 iOS 开发者可以创建 Pass，并且 Pass 在发送到用户设备时不能被第三方更改，除非被检测并拒绝，否则 Passbook
    将拒绝。
- en: The certificate creation process produces a Pass Type certificate that is tied
    to the Pass Type ID that it was created from, which in turn ties it to your developer
    account. This provides a method for verifying the contents of a Pass signed using
    this certificate, and therefore, a way of detecting any manipulation of the Pass
    by anyone other than the registered Pass creator.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 证书创建过程生成一个与创建它的 Pass 类型 ID 相关联的 Pass 类型证书，这反过来又将其与您的开发者账户关联起来。这提供了一种验证使用此证书签名的
    Pass 内容的方法，因此，也是一种检测除注册 Pass 创建者之外任何人篡改 Pass 的方法。
- en: Creating your Pass (Medium)
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建您的 Pass（中等）
- en: Passes are built and customized by specifying the relevant information in JSON
    format. Certain graphical assets can also be provided to further customize the
    look and feel of the Pass.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Pass 通过在 JSON 格式中指定相关信息来构建和自定义。还可以提供某些图形资产以进一步自定义 Pass 的外观和感觉。
- en: As an example, we will build a Pass of a Generic type, to be used as an employee
    identification card. Once we understand the JSON structure of this type, we will
    see how other Pass types differ.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们将构建一个通用类型的 Pass，用作员工身份卡。一旦我们了解了这种类型的 JSON 结构，我们就会看到其他 Pass 类型有何不同。
- en: Getting ready
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'You can get the full JSON code, which we will use, from the following link:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从以下链接获取完整的 JSON 代码，我们将使用它：
- en: '[http://passkit.pro/example-generic-json](http://passkit.pro/example-generic-json)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://passkit.pro/example-generic-json](http://passkit.pro/example-generic-json)'
- en: This will create a Pass that looks like the following two images.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个如下两个图像所示的 Pass。
- en: 'The following screenshot shows the front of the Pass:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了 Pass 的正面：
- en: '![Getting ready](img/7064OT_01_14.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/7064OT_01_14.jpg)'
- en: 'The back of the Pass is shown in the following screenshot:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了 Pass 的背面：
- en: '![Getting ready](img/7064OT_01_15.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/7064OT_01_15.jpg)'
- en: How to do it…
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Save the following JSON code to a file called `pass.json`:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 JSON 代码保存到名为 `pass.json` 的文件中：
- en: '[PRE2]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Replace the value for `passTypeIdentifier` (currently `pass.pro.passkit.example.generic`)
    with your own Pass Type Identifier created previously.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `passTypeIdentifier` 的值（当前为 `pass.pro.passkit.example.generic`）替换为您之前创建的 Pass
    类型标识符。
- en: Replace the value for `teamIdentifier` (currently `YAXJZJ267E`) with your own
    Team Identifier, noted previously as the App ID Prefix.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `teamIdentifier` 的值（当前为 `YAXJZJ267E`）替换为您的团队标识符，之前记为应用 ID 前缀。
- en: A number of graphical assets can be added to further customise the Pass. The
    only required graphical asset is an icon, which is used when displaying the Pass
    on the lock screen.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以添加多个图形资产以进一步自定义 Pass。唯一必需的图形资产是图标，它在显示 Pass 在锁屏上时使用。
- en: Create an icon for retina screens with dimensions of 58 px by 58 px, this should
    be named `icon@2x.png`. Create a non-retina version with dimensions 29 px by 29
    px, this should be named `icon.png`. Example assets can downloaded from [http://passkit.pro/example-generic-package](http://passkit.pro/example-generic-package).
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个分辨率为 58 像素 x 58 像素的视网膜屏幕图标，应命名为 `icon@2x.png`。创建一个非视网膜版本，分辨率为 29 像素 x 29
    像素，应命名为 `icon.png`。示例资产可以从 [http://passkit.pro/example-generic-package](http://passkit.pro/example-generic-package)
    下载。
- en: How it works…
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'The `pass.json` file we''ve just created contains the following top-level key/value
    pairs:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚创建的 `pass.json` 文件包含以下顶级键/值对：
- en: '`passTypeIdentifier`: This ties the Pass to your developer account.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`passTypeIdentifier`: 这将通行证与您的开发者账户关联。'
- en: '`formatVersion`: Currently this is always 1, but it will allow Apple to vary
    the format in the future, while maintaining backwards compatibility.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`formatVersion`: 目前这始终为1，但它将允许苹果在未来更改格式，同时保持向后兼容性。'
- en: '`teamIdentifier`: This identifier allows separate apps, by the same developer,
    to share data through the iOS keychain. For our purposes, this just needs to match
    the App ID Prefix specified when the Pass Type Identifier was created.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`teamIdentifier`: 此标识符允许同一开发者通过iOS密钥链在不同应用程序之间共享数据。对于我们的目的，这只需要与创建通行证标识符时指定的App
    ID前缀相匹配。'
- en: '`organizationName`: This is the name of your company or app, this should be
    how your users know and refer to you. It will be displayed as the title of the
    notification when a Pass is presented on the lock screen.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`organizationName`: 这是您的公司或应用程序的名称，这应该是您的用户了解和提及您的方式。当通行证在锁定屏幕上显示时，它将作为通知的标题显示。'
- en: '`serialNumber`: This should contain a unique reference to the Pass, when updating
    a Pass, this serial number will be used to request the updated information from
    your server, and therefore this should uniquely identify only one Pass of this
    type. In the example of a staff identification Pass, this could be the employee
    reference number. While it''s represented as a number in the example, it can be
    any text value.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`serialNumber`: 这应该包含对通行证的唯一引用，当更新通行证时，此序列号将用于从您的服务器请求更新信息，因此它应唯一标识此类通行证中的一个通行证。在员工识别通行证的例子中，这可能是员工参考编号。虽然示例中将其表示为数字，但它可以是任何文本值。'
- en: '`description`: Used for accessibility features and so should briefly describe
    the Pass''s use and should include enough information to distinguish it from other
    Passes of the same type.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description`: 用于辅助功能，因此应简要描述通行证的使用情况，并包含足够的信息以区分同一类型的其他通行证。'
- en: '`associatedStoreIdentifiers`: An array of iTunes Store App Identifiers for
    Apps that are associated with this Pass. If you already have an app in the App
    Store, through which Passes will be provided, this should be included. An app''s
    identifier can be found in iTunes Connect. If multiple identifiers are provided,
    the first one that is available for the device is used. This will present an App
    information banner on the back of the Pass. This banner will prompt the user to
    install your app or open the app if it is already installed.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`associatedStoreIdentifiers`: 与此通行证关联的iTunes Store应用程序标识符数组。如果您已经有了一个在App Store中提供通行证的app，则应包括此标识符。应用程序的标识符可以在iTunes
    Connect中找到。如果提供了多个标识符，则将使用设备上可用的第一个标识符。这将显示通行证背面的应用程序信息横幅。此横幅将提示用户安装您的应用程序或如果已安装则打开应用程序。'
- en: The following two top-level key/value pairs determine under what circumstances
    the Pass is presented to the user on their lock screen.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以下两个顶级键/值对决定了在什么情况下通行证会在用户的锁定屏幕上显示给用户。
- en: '`locations`: This is a list of locations that are relevant to the use of the
    Pass. This is represented as an array of dictionaries containing the location
    information. Only one location is provided in the example, however up to 10 may
    be specified. If the user is within a certain distance of this location, they
    may be presented with the Pass on their lock screen. The distance from the location
    that triggers this behavior varies depending on the Pass type, for a generic Pass
    type the distance is approximately 100 meters. Each `locations` dictionary contains
    latitude, longitude, and relevant text that will be displayed on the lock screen
    when triggered. In the `locations` dictionary you can optionally specify altitude
    as well.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`locations`: 这是与通行证使用相关的位置列表。这表示为包含位置信息的字典数组的数组。示例中只提供了一个位置，但实际上可以指定多达10个位置。如果用户位于此位置的一定距离内，他们可能会在锁定屏幕上看到通行证。触发此行为的位置距离取决于通行证类型，对于通用通行证类型，距离大约为100米。每个`locations`字典包含纬度、经度和在触发时将在锁定屏幕上显示的相关文本。在`locations`字典中，您可以可选地指定海拔。'
- en: '`relevantDate`: Not included in the example above, as it didn''t fit with the
    employer ID use case. This determines a time period within which the Pass is relevant.
    The value for this key should be text in the form of a W3C timestamp, for example,
    "2013-12-31T00:00-23:59", and can also include seconds if necessary. No timezone
    information should be included, as the timezone set in the device''s settings
    is used.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`relevantDate`：在上述示例中没有包含，因为它与雇主ID用例不匹配。此键确定通行证相关的时段。此键的值应为W3C时间戳形式的文本，例如，“2013-12-31T00:00-23:59”，如果需要，也可以包括秒。不应包含时区信息，因为设备设置中设置的时区将被使用。'
- en: The behavior of the two relevancy keys described above varies depending on the
    Pass type. The Pass type determines that for `locations` and `relevantDate`, which
    are required and which are options, it also determines the triggering criteria
    used in presenting a Pass on the user's lock screen.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 上文所述的两个相关性键的行为取决于通行证类型。通行证类型决定了`locations`和`relevantDate`哪些是必需的，哪些是可选的，它还决定了在用户锁屏上展示通行证时使用的触发条件。
- en: 'An explanation of the differing behavior can be found in Apple''s Passbook
    Programming Guide (Apple Developer account signin required) at:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 不同行为的解释可以在苹果的通行证编程指南（需要苹果开发者账户登录）中找到：
- en: '[https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Creating.html#//apple_ref/doc/uid/TP40012195-CH4-SW53](https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Creating.html)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Creating.html#//apple_ref/doc/uid/TP40012195-CH4-SW53](https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Creating.html)'
- en: '`foregroundColor`: The foreground color of the Pass, value provided as an RGB
    triple.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`foregroundColor`：通行证的前景颜色，以RGB三元组的形式提供值。'
- en: '`backgroundColor`: The background color of the Pass, value provided as an RGB
    triple.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`backgroundColor`：通行证的背景颜色，以RGB三元组的形式提供值。'
- en: '`labelColor`: The color of the text displayed in the Pass, value provided as
    an RGB triple.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`labelColor`：通行证中显示的文本颜色，以RGB三元组的形式提供值。'
- en: '`logoText`: The text shown in the top-left hand corner of the Pass. This will
    mostly likely be the name of your company, or an indication of the Pass''s use.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`logoText`：在通行证左上角显示的文本。这很可能是您公司的名称，或是对通行证用途的指示。'
- en: '`barcode`: This dictionary contains the information to display in a barcode
    and how to display it. The Pass format supports automatic creation of 2D barcodes
    in one of the following formats:'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`barcode`：此字典包含要在条码中显示的信息以及如何显示它。通行证格式支持以下格式之一自动创建2D条码：'
- en: '`PKBarcodeFormatQR`'
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PKBarcodeFormatQR`'
- en: '`PKBarcodeFormatPDF417`'
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PKBarcodeFormatPDF417`'
- en: '`PKBarcodeFormatAztec`'
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PKBarcodeFormatAztec`'
- en: Message encoding will typically be `iso-8859-1`, unless you know that another
    encoding format is supported by your barcode scanner.
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 消息编码通常是`iso-8859-1`，除非您知道您的条码扫描器支持其他编码格式。
- en: The value to be encoded into the barcode should be defined with the message
    key and the `altText` key used to optionally display a more human readable description
    of the barcode information.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 应将编码到条码中的值定义为消息键，并使用`altText`键可选地显示条码信息的更易读的描述。
- en: '**generic**: This top-level key determines the type of Pass that you will be
    creating. The types currently available are:'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**generic**：此顶级键确定您将要创建的通行证类型。目前可用的类型有：'
- en: '`generic`'
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`generic`'
- en: '`boardingPass`'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`boardingPass`'
- en: '`coupon`'
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`coupon`'
- en: '`eventTicket`'
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eventTicket`'
- en: '`storeCard`'
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`storeCard`'
- en: Your choice of Pass type effects many things about the Pass, including overall
    style, text layout, available graphical asset options, and lock screen behavior.
    Apple has optimized the Pass types for their individual use cases, so try to pick
    a Pass type that most closely represents your Pass's use case. If none of the
    specific Pass types are appropriate, then the generic Pass type can be used.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您选择的通行证类型会影响通行证的许多方面，包括整体风格、文本布局、可用的图形资产选项以及锁屏行为。苹果针对其各自的用例优化了通行证类型，因此请尽量选择与您的通行证用例最接近的通行证类型。如果没有任何特定的通行证类型适用，则可以使用通用通行证类型。
- en: 'The Passbook Programming Guide describes the different layout configurations
    for each Pass type:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 通行证编程指南描述了每种通行证类型的不同布局配置：
- en: '[https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Creating.html#//apple_ref/doc/uid/TP40012195-CH4-SW1](https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Creating.html)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Creating.html#//apple_ref/doc/uid/TP40012195-CH4-SW1](https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Creating.html)'
- en: Within the Pass type top-level key is a dictionary, containing arrays of various
    display groups, including `headerFields`, `primaryFields`, `secondaryFields`,
    and `backFields`, which are displayed according to Pass type. Each group contains
    an array of dictionaries, specifying key, label, and value. The label and value
    fields are displayed on the Pass, while the key field should be unique within
    your Pass format, and will be used when updating a Pass.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在通行证类型的顶级键中是一个字典，包含各种显示组的数组，包括 `headerFields`、`primaryFields`、`secondaryFields`
    和 `backFields`，它们根据通行证类型进行显示。每个组包含一个字典数组，指定键、标签和值。标签和值字段在通行证上显示，而键字段应在您的通行证格式中是唯一的，并在更新通行证时使用。
- en: There's more…
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Graphical assets can be provided to further visually customize your Pass. The
    `icon.png` asset is required, but the following assets can optionally be included
    in the Pass package:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 可以提供图形资产以进一步视觉定制您的通行证。`icon.png` 资产是必需的，但以下资产可以可选地包含在通行证包中：
- en: '`logo.png`'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`logo.png`'
- en: '`background.png`'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`background.png`'
- en: '`thumbnail.png`'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`thumbnail.png`'
- en: '`footer.png`'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`footer.png`'
- en: '`strip.png`'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strip.png`'
- en: 'All assets should include a retina version that is twice as wide and twice
    as high, with `@2x` at the end of the filename. Therefore, for the icon, you provide
    the following files:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 所有资产都应包含一个视网膜版本，其宽度和高都是两倍，文件名末尾带有 `@2x`。因此，对于图标，您应提供以下文件：
- en: '`icon.png`: 29 px width x 29 px height'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`icon.png`: 29 像素宽度 x 29 像素高度'
- en: '`icon@2x.png`: 58 px width x 58 px height'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`icon@2x.png`: 58 像素宽度 x 58 像素高度'
- en: 'The following table provides the available size of each asset, and the space
    available for each Pass type. The sizes are provided as pixels width x pixels
    height:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 下表提供了每个资产的可用大小以及每种通行证类型的可用空间。大小以像素宽度 x 像素高度提供：
- en: '| Pass Type | icon29 x 29 | logo160 x 50 | background180 x 220 | thumbnail90
    x 90* | strip** | footer286x15 |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| 通行证类型 | icon29 x 29 | logo160 x 50 | background180 x 220 | thumbnail90 x
    90* | strip** | footer286x15 |'
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- |'
- en: '| Generic | Required | Optional | Not used | Optional | Not used | Not used
    |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| 通用 | 必需 | 可选 | 未使用 | 可选 | 未使用 | 未使用 |'
- en: '| Boarding pass | Required | Optional | Not used | Not used | Not used | Optional
    |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| 登机牌 | 必需 | 可选 | 未使用 | 未使用 | 未使用 | 可选 |'
- en: '| Coupon | Required | Optional | Not used | Not used | Optional | No |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| 优惠券 | 必需 | 可选 | 未使用 | 未使用 | 可选 | 不适用 |'
- en: '| Event ticket | Required | Optional | Optional | Optional | Not used | Not
    used |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| 事件门票 | 必需 | 可选 | 可选 | 可选 | 未使用 | 未使用 |'
- en: '| (with strip) | Not used | Not used | Optional |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '|（带条形码）| 未使用 | 未使用 | 可选 |'
- en: '| Store card | Required | Optional | Not used | Not used | Optional | Not used
    |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| 商店卡片 | 必需 | 可选 | 未使用 | 未使用 | 可选 | 未使用 |'
- en: '* 90px x 90px is the space available, but the graphic must be either 60px x
    90px, or 90px x 60px'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '* 90px x 90px 是可用空间，但图形必须是 60px x 90px 或 90px x 60px'
- en: '** Allowed size for the strip asset is 312 x 84 for Event tickets, 312 x 110
    when a square barcode is used and 312 x 123 otherwise.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '**条形码资产的允许大小为 312 x 84（事件门票），当使用正方形条形码时为 312 x 110，否则为 312 x 123**。'
- en: Further documentation
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 进一步的文档
- en: 'Further details of Pass type layout structures can be found in the Apple Passbook
    Package Format Reference (Apple Developer account signin required) at:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 有关通行证类型布局结构的更多详细信息，可以在 Apple Passbook 包格式参考（需要 Apple 开发者账户登录）中找到：
- en: '[https://developer.apple.com/library/ios/#documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html#//apple_ref/doc/uid/TP40012026](https://developer.apple.com/library/ios/#documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/library/ios/#documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html#//apple_ref/doc/uid/TP40012026](https://developer.apple.com/library/ios/#documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html)'
- en: Signing your Pass (Simple)
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 签署您的通行证（简单）
- en: Now that you have built and customized your Pass, you will need to digitally
    sign the Pass package contents, so that it will be accepted by the Passbook app.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经构建并定制了您的通行证，您需要数字签名通行证包内容，以便它将被 Passbook 应用程序接受。
- en: 'We will make use of the certificate and keys generated previously. This will
    sign the Pass with your developer identity, allowing your Pass to be validated
    and used with the Passbook app:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用之前生成的证书和密钥。这将使用您的开发者身份对通行证进行签名，允许通行证通过Passbook应用进行验证和使用：
- en: '![Signing your Pass (Simple)](img/7064OT_01_16.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![签名您的通行证（简单）](img/7064OT_01_16.jpg)'
- en: Getting ready
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The graphical assets for your Pass and the `pass.json` file should be in their
    own folder, with the `.pem` files created earlier, in a higher level folder.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 您的通行证图形资产和`pass.json`文件应在自己的文件夹中，与之前创建的`.pem`文件在同一较高层文件夹中。
- en: 'Here is an example of the folder structure:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个文件夹结构的示例：
- en: How to do it…
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Save the following JSON code into a file called `manifest.json`.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下JSON代码保存到名为`manifest.json`的文件中。
- en: '[PRE3]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This file should contain a JSON dictionary, where each key is the filename
    of a contained in your Pass package, and the value is the SHA1 hash of that file.
    To determine the SHA1 value, open your Terminal App, and enter the following commands:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此文件应包含一个JSON字典，其中每个键是通行证包中包含的文件名，值是该文件的SHA1哈希值。要确定SHA1值，打开您的终端应用，并输入以下命令：
- en: '[PRE4]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Place the resulting hash values into the `manifest.json` file.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将生成的哈希值放入`manifest.json`文件中。
- en: 'The manifest file then needs to be digitally signed, to produce a signature
    file, which will verify that the contents of the Pass have not been modified.
    This can be done using the following Terminal command. (Note that this requires
    administrator privileges, so you will need to enter your administrator password.):'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后需要使用以下终端命令对清单文件进行数字签名，以生成签名文件，这将验证通行证的内容未被修改。这需要管理员权限，因此您需要输入管理员密码：
- en: '[PRE5]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If your folder differs from the preceding suggestion, you will need to alter
    the paths to the `.pem` files accordingly.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的文件夹与前面的建议不同，您需要相应地更改`.pem`文件的路径。
- en: 'Your package folder should now include:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的包文件夹现在应包括：
- en: Graphical assets
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形资产
- en: '`pass.json`'
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pass.json`'
- en: '`manifest.json`'
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`manifest.json`'
- en: The `signature` file
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`signature`文件'
- en: Place the files in your package folder into a ZIP file. This can be done by
    selecting all the files and navigating to **File** | **Compress** from the **Finder**
    menu.
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将您的包文件夹中的文件放入ZIP文件中。这可以通过选择所有文件并从**Finder**菜单中选择**文件** | **压缩**来完成。
- en: Rename the resulting ZIP file to change the file extension to `.pkpass`. If
    you have filenames set to be hidden, you may be changing the filename and not
    the extension. To show filename extensions, select **Finder** | **Preferences**
    from the menu and enable **Show all filename extensions**.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将生成的ZIP文件重命名，将文件扩展名更改为`.pkpass`。如果您已将文件名设置为隐藏，则可能更改的是文件名而不是扩展名。要显示文件扩展名，请从菜单中选择**Finder**
    | **首选项**，并启用**显示所有文件扩展名**。
- en: Congratulations! You now have a customized and signed Pass.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您现在拥有一张定制并签名的通行证。
- en: How it works…
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The goal of the signing process is to prevent the Pass from being modified by
    a third party between leaving your servers and being received by the user. When
    the `manifest.json` file is created, each file in the Pass package has its hash
    value calculated and stored. If the contents of any of the files were to change,
    its hash value would also change, therefore this `manifest.json` file represents
    an easy way of checking that the Pass package files have not been modified.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 签名过程的目标是防止第三方在您的服务器和用户接收之间修改通行证。当创建`manifest.json`文件时，通行证包中的每个文件都会计算其哈希值并存储。如果任何文件的
    内容发生变化，其哈希值也会发生变化，因此此`manifest.json`文件代表了一种检查通行证包文件是否被修改的简单方法。
- en: However, this on it's own is not enough, as a third party could modify the `manifest.json`
    file when they modify other files in the package. To guard against this, public/private
    key encryption is used to produce a signature file from the `manifest.json`. Your
    private key, to which only you have access, was used to generate the file, but
    anyone with access to the public key can use it to verify that the manifest file
    hasn't been tampered with.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，仅此还不够，因为第三方在修改包中的其他文件时可能会修改`manifest.json`文件。为了防止这种情况，使用公钥/私钥加密从`manifest.json`生成签名文件。您的私钥，只有您可以访问，用于生成文件，但任何拥有公钥的人都可以使用它来验证清单文件是否被篡改。
- en: Using this process, the user's device can be sure that the source of the Pass
    it receives is genuine and hasn't been altered in transit.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用此过程，用户的设备可以确信接收到的通行证的来源是真实的，并且在传输过程中没有被更改。
- en: Because of this verification, it is important that only files specified in the
    `manifest.json` file are included in the zipped file. Individually selecting the
    files in Finder, and then choosing compress from the menu, is a good way to ensure
    this. Be careful if you choose to zip the entire contents of a folder, possibly
    through a Terminal command, as this can include additional hidden files like `.DS_Store`.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 由于此验证，确保只有 `manifest.json` 文件中指定的文件包含在压缩文件中非常重要。在Finder中单独选择文件，然后从菜单中选择压缩，是确保这一点的良好方法。如果您选择通过终端命令压缩整个文件夹的内容，请小心，因为这可能包括像
    `.DS_Store` 这样的额外隐藏文件。
- en: Changing the file extension tells the system that it should be treated as a
    Pass instead of a regular ZIP file.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 改变文件扩展名告诉系统将其视为通行证而不是常规 ZIP 文件。
- en: There's more…
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: It's important to understand the process and steps involved in signing a Pass,
    however it is unlikely that it will be feasible to manually perform these steps
    for every Pass that you create. Instead they should form part of an automated
    system for producing your user's Passes.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 理解签署通行证的过程和涉及的步骤很重要，但是手动执行这些步骤为每个创建的通行证可能不太可行。相反，它们应该成为生产用户通行证的自动化系统的一部分。
- en: 'Pre-built Pass creation implementations are starting to emerge, including this
    PHPserver code:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 预构建的通行证创建实现正在出现，包括以下 PHPserver 代码：
- en: '[https://github.com/tschoffelen/PHP-Passkit](https://github.com/tschoffelen/PHP-Passkit)'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/tschoffelen/PHP-Passkit](https://github.com/tschoffelen/PHP-Passkit)'
- en: Delivering your Pass via e-mail (Medium)
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过电子邮件发送您的通行证（Medium）
- en: Passes can be delivered as an e-mail attachment, allowing the recipient to view
    the Pass and add it to their Passbook app.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 通行证可以作为电子邮件附件发送，允许收件人查看通行证并将其添加到他们的 Passbook 应用中。
- en: Getting ready
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The Pass e-mail creation script, used below, can be downloaded from the following
    location:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的通行证电子邮件创建脚本可以从以下位置下载：
- en: '[http://passkit.pro/ruby-email-script](http://passkit.pro/ruby-email-script)'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://passkit.pro/ruby-email-script](http://passkit.pro/ruby-email-script)'
- en: How to do it…
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Save the following code into a file named `send_pass_by_email.rb`.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码保存到名为 `send_pass_by_email.rb` 的文件中。
- en: '[PRE6]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Under the section headed **# Setup template email values**, enter relevant values
    for the sender name, sender e-mail address, subject, and e-mail body.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **# 设置模板电子邮件值** 部分下，输入发件人姓名、发件人电子邮件地址、主题和电子邮件正文的相关值。
- en: Under the section header **# Setup SMTP settings**, enter the details of the
    SMTP e-mail server and account details that will be used to send the e-mail. These
    can be found from the setting of your e-mail client, or you can use a free e-mail
    service like Gmail.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **# 设置 SMTP 设置** 部分下，输入用于发送电子邮件的 SMTP 电子邮件服务器和账户详情。这些可以从您的电子邮件客户端设置中找到，或者您可以使用像
    Gmail 这样的免费电子邮件服务。
- en: 'This Ruby script accepts three arguments, the recipient''s name, the recipient''s
    e-mail address and the path to the Pass to be attached. Open the Terminal and
    send a Pass-enabled e-mail by calling the script with appropriate arguments, as
    shown in the following example:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此 Ruby 脚本接受三个参数，即收件人姓名、收件人电子邮件地址以及要附加的通行证的路径。打开终端，通过使用适当的参数调用脚本以发送启用通行证的电子邮件，如下例所示：
- en: '[PRE7]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following screenshot shows what the resulting e-mail will look like on
    iOS:'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下截图显示了在 iOS 上最终电子邮件的外观：
- en: ','
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ','
- en: '![How to do it…](img/7064OT_02_01.jpg)'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/7064OT_02_01.jpg)'
- en: If you sent this e-mail to an e-mail account you have access to, open this e-mail
    in the Mail app on an iPhone running iOS 6 or Mail on OSX 10.8.2, and you will
    be given the option to open and view the Pass and add it to Passbook.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您将此电子邮件发送到您有权访问的电子邮件账户，请在运行 iOS 6 的 iPhone 上的 Mail 应用或 OS X 10.8.2 上的 Mail
    中打开此电子邮件，您将获得打开和查看通行证并将其添加到 Passbook 的选项。
- en: How it works…
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The script used above is written in Ruby, as the Ruby interpreter is installed
    by default on OSX.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的脚本是用 Ruby 编写的，因为 Ruby 解释器默认安装在 OSX 上。
- en: 'Sending a Pass as an attachment that will be understood by iOS and OSX, and
    presented to the user, requires it to have a specific MIME Type specified in the
    attachment. This MIME type is the following:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 发送一个iOS和OSX都能理解并展示给用户的通行证附件，需要指定附件中的特定 MIME 类型。此 MIME 类型如下：
- en: application/vnd.apple.pkpass
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: application/vnd.apple.pkpass
- en: This script, or something similar could be used to automate the delivery of
    Passes to a large number of users, through email.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本或类似脚本可用于通过电子邮件自动向大量用户发送通行证。
- en: Delivering your Pass via a web link (Medium)
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过网页链接（Medium）发送您的通行证
- en: You can deliver a Pass to your users by linking to it from your website, for
    instance, from a confirmation page.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过从您的网站链接到 Pass 来向用户交付 Pass，例如，从确认页面链接。
- en: Getting ready
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'You will need access to your own web server, or shared hosting space with FTP
    access. The following instructions are for an Apache web server. Mac OSX does
    come with an Apache web server built in, which can be used. This used to be available
    under the **Sharing** menu in **System Preferences**, however since OSX 10.8 it
    can only be activated by the command line. You can run the following command from
    the Terminal, to start the web server:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要访问自己的 Web 服务器，或者具有 FTP 访问权限的共享托管空间。以下说明适用于 Apache Web 服务器。Mac OSX 内置了 Apache
    Web 服务器，可以使用。这曾经可以在 **系统偏好设置** 中的 **共享** 菜单下找到，然而自 OSX 10.8 以来，它只能通过命令行激活。您可以从终端运行以下命令来启动
    Web 服务器：
- en: '[PRE8]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The root for this server can be found at `/Library/WebServer/Documents/`.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 该服务器的根目录位于 `/Library/WebServer/Documents/`。
- en: 'The files we will create can be downloaded from the following location:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建的文件可以从以下位置下载：
- en: '[http://passkit.pro/apache-mime-type](http://passkit.pro/apache-mime-type)'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://passkit.pro/apache-mime-type](http://passkit.pro/apache-mime-type)'
- en: How to do it…
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Save the following MIME type instruction into a file named `htaccess`:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 MIME 类型指令保存到名为 `htaccess` 的文件中：
- en: '[PRE9]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Create an HTML page linking to a Pass, shown as follows, and save it as `index.html`:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个链接到 Pass 的 HTML 页面，如下所示，并将其保存为 `index.html`：
- en: '[PRE10]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Upload your `htaccess` file, the `index.html` file and the Pass file to a publicly
    accessible directory on your web sever. If you are running your web server locally,
    place these files within the web server's root folder.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `htaccess` 文件、`index.html` 文件和 Pass 文件上传到您的 Web 服务器上的一个公开可访问的目录。如果您在本地运行 Web
    服务器，请将这些文件放置在 Web 服务器根目录中。
- en: Rename the `htaccess` file to `.htaccess`. (The file may disappear, as files
    starting with a `.` are treated as hidden files.)
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `htaccess` 文件重命名为 `.htaccess`。（文件可能会消失，因为以 `.` 开头的文件被视为隐藏文件。）
- en: With Mobile Safari on your iPhone, visit the URL for the `index.html` file on
    your web server.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的 iPhone 上的 Mobile Safari 中，访问您 Web 服务器上 `index.html` 文件的 URL。
- en: Follow the link to your Pass and Mobile Safari will display the Pass so it can
    be added to Passbook.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 Pass 的链接，Mobile Safari 将显示 Pass，以便可以将其添加到 Passbook。
- en: How it works…
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: For the Safari or Mobile Safari browser to understand a Pass file and display
    it to the user, your Web server needs to present the files with the MIME type
    of `application/vnd.apple.pkpass`.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让 Safari 或 Mobile Safari 浏览器理解 Pass 文件并将其显示给用户，您的 Web 服务器需要以 `application/vnd.apple.pkpass`
    的 MIME 类型呈现文件。
- en: The `.htaccess` file tells the web server how to treat files in the folder in
    which resides. In this case it is instructing the web server to inform any visiting
    web browser that files with the file extension `pkpass` are to be treated as Passes.
    The `.htaccess` must be placed in each folder that contains a Pass.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '`.htaccess` 文件告诉 Web 服务器如何处理其所在文件夹中的文件。在这种情况下，它指示 Web 服务器通知任何访问的 Web 浏览器，具有
    `pkpass` 文件扩展名的文件应被视为 Pass。`.htaccess` 必须放置在每个包含 Pass 的文件夹中。'
- en: Only users of a browser that supports this MIME type will be present with the
    Pass dialog, the rest will be prompted to download the Pass. While Safari and
    Mobile Safari support Passes, other third party browsers may not. However, the
    current versions of Chrome on iOS and the in-app browser from the Facebook app
    do support Pass display.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 只有支持此 MIME 类型的浏览器用户才会出现 Pass 对话框，其他人将被提示下载 Pass。虽然 Safari 和 Mobile Safari 支持
    Pass，但其他第三方浏览器可能不支持。然而，iOS 上当前版本的 Chrome 和 Facebook 应用程序中的内置浏览器都支持 Pass 显示。
- en: There's more…
  id: totrans-237
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'If you wish to add server-wide support of the Pass MIME type, you can add an
    entry to your Apache web server''s `mimes.type` file, this is located in the `conf`
    directory. Open up the file in a text editor and add the following line in the
    correct alphabetical position:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望添加对 Pass MIME 类型的服务器端支持，您可以在 Apache Web 服务器的 `mimes.type` 文件中添加一个条目，该文件位于
    `conf` 目录中。在文本编辑器中打开该文件，并在正确的字母顺序中添加以下行：
- en: '[PRE11]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You will need to restart the server for this to take effect.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要重新启动服务器才能使更改生效。
- en: Delivering your Pass via an app (Medium)
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过应用程序（中等）交付 Pass
- en: Passes can be delivered through a companion iOS app. The app will provide a
    UI, using Apple's PassKit framework, allowing the user to view a Pass and choose
    to add it to their Passbook.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: Pass 可以通过配套的 iOS 应用程序进行交付。该应用程序将使用 Apple 的 PassKit 框架提供用户界面，使用户能够查看 Pass 并选择将其添加到他们的
    Passbook 中。
- en: Getting ready
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To follow these steps, it is assumed that you have some experience of Objective-C
    and creating iOS apps.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 要遵循这些步骤，假设您有一些Objective-C和创建iOS应用程序的经验。
- en: 'The example project, created as follows, can be downloaded from the following
    location:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式创建的示例项目可以从以下位置下载：
- en: '[http://passkit.pro/example-app](http://passkit.pro/example-app)'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://passkit.pro/example-app](http://passkit.pro/example-app)'
- en: This app does not use **Automatic Reference Counting** (**ARC**), if you are
    using the code in an ARC environment, remove any calls to releasing objects.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 此应用程序不使用 **自动引用计数** (**ARC**)，如果您在ARC环境中使用此代码，请删除对释放对象的任何调用。
- en: How to do it…
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Open Xcode and create a new, single view project. The setup options used for
    the example project are shown in the following screenshot:![How to do it…](img/7064OT_02_02.jpg)
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Xcode并创建一个新的单视图项目。示例项目的设置选项如下截图所示：![如何操作…](img/7064OT_02_02.jpg)
- en: In the Target settings, under **Build Phases**, expand the **Link Binaries With
    Libraries** section, and click on the **+** button. Search for the PassKit framework
    and add it. After this, the list of linked libraries should look like this:![How
    to do it…](img/7064OT_02_03.jpg)
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在目标设置中，在 **构建阶段** 下，展开 **链接二进制与库** 部分，并点击 **+** 按钮。搜索PassKit框架并将其添加。之后，链接库列表应如下所示：![如何操作…](img/7064OT_02_03.jpg)
- en: Add your previously created Pass to the project by dragging the file to the
    project navigator, in the example, this Pass is called `Pass-Example-Generic.pkpass`.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您之前创建的通行证拖动到项目导航器中，添加到项目中，例如，此通行证名为 `Pass-Example-Generic.pkpass`。
- en: '[PRE12]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'In **PKEViewController.m** replace the existing code with the following:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **PKEViewController.m** 中替换现有代码为以下内容：
- en: '[PRE13]'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Open **PKEViewController.xib**, place a `UIButton` with the title **Add Pass
    to Passbook** on the view and connect it to `IBOutlet` **addPassButton** and IBAction**addPassButtonPressed**
    for the sent event Touch Up Inside:'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 打开 **PKEViewController.xib**，在视图中放置一个标题为 **添加通行证到Passbook** 的 `UIButton`，并将其连接到
    `IBOutlet` **addPassButton** 和 IBAction**addPassButtonPressed** 以便发送触摸事件：
- en: '![How to do it…](img/7064OT_02_04.jpg)'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/7064OT_02_04.jpg)'
- en: Run the project in the iPhone Simulator. Tapping on the **Add Pass To Passbook**
    button will launch the PassKit UI, which displays the Pass and would allow the
    user to add the Pass to the Passbook app. At this stage however, the Pass will
    not be successfully added to the Passbook app as we need to use the correct provisioning
    profile.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在iPhone模拟器中运行项目。点击 **添加通行证到Passbook** 按钮将启动PassKit UI，显示通行证并允许用户将其添加到Passbook应用中。然而，在这个阶段，通行证将不会成功添加到Passbook应用中，因为我们需要使用正确的配置文件。
- en: 'To build the app to an iPhone, we will need an appropriate provisioning profile.
    Therefore, you need to log in to the Apple Developer Center:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将应用程序构建到iPhone上，我们需要一个合适的配置文件。因此，您需要登录到Apple开发者中心：
- en: '[https://developer.apple.com/account/ios/profile/profileList.action](https://developer.apple.com/account/ios/profile/profileList.action)'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/account/ios/profile/profileList.action](https://developer.apple.com/account/ios/profile/profileList.action)'
- en: 'Under **Provisioning**, click on the **New Profile** button, and follow these
    steps:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **配置** 下，点击 **新建配置文件** 按钮，并按照以下步骤操作：
- en: Choose a name for the development profile.
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为开发配置文件选择一个名称。
- en: Tick next to your certificate.
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的证书旁边打勾。
- en: Select the App ID in which you enabled Passes and generated certificates for
    previously.
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您之前为通行证启用并生成证书的App ID。
- en: Choose the devices you will be using.
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您将要使用的设备。
- en: Click on **Submit**.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **提交**。
- en: Once generated, download the provisioning profile and open it to load it into
    Xcode.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成后，下载配置文件并将其打开以加载到Xcode中。
- en: In **Target** settings, under **Info**, ensure that the Bundle Identifier matches
    the app ID that was previously created and chosen in the profile creation.
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **目标** 设置中，在 **信息** 下，确保捆绑标识符与在配置文件创建过程中之前创建并选择的App ID相匹配。
- en: In **Build Settings**, under **Code Signing Identity**, ensure the profile created
    above is selected under **Debug**.
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **构建设置** 中，在 **代码签名身份** 下，确保在 **调试** 下选择了上面创建的配置文件。
- en: Build to the device, and test that the presented Pass is successfully added
    to Passbook.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建到设备，并测试所显示的通行证是否成功添加到Passbook。
- en: How it works…
  id: totrans-270
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: The example app uses the PassKit framework to present a framework supplied view
    controller to the user, listen for a delegate callback when the user finishes
    interacting with the view controller and changes the button's title if the Pass
    was successfully added to Passbook.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 示例应用程序使用PassKit框架向用户展示框架提供的视图控制器，监听用户完成与视图控制器交互时的代理回调，如果通行证成功添加到Passbook，则更改按钮的标题。
- en: 'Using the following code, the `PKPass` object is created from a `NSData` object:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下代码，从`NSData`对象创建`PKPass`对象：
- en: '[PRE14]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: For the sake of simplicity, in this example, the Pass is loaded from a file
    bundled with the app. It is much more likely in a real-world app that a Pass will
    be downloaded from a network resource.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化起见，在这个示例中，通行证是从与应用程序捆绑的文件中加载的。在现实世界的应用程序中，通行证更有可能从网络资源下载。
- en: '`PKPassLibrary` provides access to the Passes contained in Passbook. It also
    provides a class method called `isPassLibraryAvailable` that will tell you if
    Passbook exists on that device, for example Passbook is not present on iPads.
    This method is used in the example app to decide whether to show the Pass view
    controller.'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '`PKPassLibrary`提供了访问Passbook中包含的通行证的方法。它还提供了一个名为`isPassLibraryAvailable`的类方法，可以告诉您Passbook是否存在于该设备上，例如，Passbook不在iPad上。此方法在示例应用程序中用于决定是否显示通行证视图控制器。'
- en: '[PRE15]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: There's more…
  id: totrans-277
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Further documentation of the PassKit framework can be found in the following
    location:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: PassKit框架的更多文档可以在以下位置找到：
- en: '[https://developer.apple.com/library/ios/#documentation/UserExperience/Reference/PassKit_Framework/](https://developer.apple.com/library/ios/#documentation/UserExperience/Reference/PassKit_Framework/)'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/library/ios/#documentation/UserExperience/Reference/PassKit_Framework/](https://developer.apple.com/library/ios/#documentation/UserExperience/Reference/PassKit_Framework/)'
- en: Updating a Pass within the Passbook app (Advanced)
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Passbook应用内更新通行证（高级）
- en: Apple provides a mechanism for updating a Pass that has been added to Passbook
    by a user. This process involves sending a push notification to the user's device,
    and implementing a REST API that will respond to the device's requests and provide
    the relevant updated Pass information.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果为用户添加到Passbook的通行证提供了一种更新机制。这个过程涉及向用户的设备发送推送通知，并实现一个REST API，该API将响应用户设备的请求并提供相关的更新通行证信息。
- en: Getting ready
  id: totrans-282
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The first stage in updating a Pass is to send a Push Notification to the user''s
    device to prompt the Pass update process. The process for sending **Apple Push
    Notifications** (**APNs**) is outside the scope for this book, and the assumption
    will made that the facility to send the appropriate APN is available. Further
    information on APNs can be found in Apple''s documentation:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 更新通行证的第一阶段是向用户的设备发送推送通知，以启动通行证更新过程。发送**苹果推送通知**（**APNs**）的过程超出了本书的范围，并假设发送适当APN的功能是可用的。有关APNs的更多信息可以在苹果的文档中找到：
- en: '[https://developer.apple.com/library/ios/#documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Introduction/Introduction.html](https://developer.apple.com/library/ios/#documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Introduction/Introduction.html)'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/library/ios/#documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Introduction/Introduction.html](https://developer.apple.com/library/ios/#documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Introduction/Introduction.html)'
- en: 'In implementing the required REST API, we will be making use of the GIT source
    control management tool. If you don''t already have GIT installed and setup, follow
    the GitHub tutorial:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在实现所需的REST API时，我们将使用GIT源代码管理工具。如果您尚未安装和设置GIT，请遵循GitHub教程：
- en: '[https://help.github.com/articles/set-up-git](https://help.github.com/articles/set-up-git)'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://help.github.com/articles/set-up-git](https://help.github.com/articles/set-up-git)'
- en: How to do it…
  id: totrans-287
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Open Terminal and change the directory to the directory that is to contain the
    server code.
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端，将目录更改为包含服务器代码的目录。
- en: 'We will be using the open source example Passbook server built in Ruby on Rails
    by Mattt Thompson ([https://github.com/mattt](https://github.com/mattt)), so we
    first need to clone the server code from the repository, with the following command:'
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用开源的Passbook服务器示例，由Mattt Thompson使用Ruby on Rails构建（[https://github.com/mattt](https://github.com/mattt)），因此我们首先需要从存储库克隆服务器代码，以下命令：
- en: '[PRE16]'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: You will need to install Xcode command-line tools, you can do this by opening
    Xcode and on the menu, going to **Xcode** | **Preferences** | **Download** and
    clicking on **Install** next to **Command Line Tools**.
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要安装 Xcode 命令行工具，您可以通过打开 Xcode 并在菜单中转到 **Xcode** | **首选项** | **下载**，然后点击 **命令行工具**
    旁边的 **安装** 来完成此操作。
- en: 'Change to the directory containing the code and prepare the Ruby App:'
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到包含代码的目录并准备 Ruby 应用程序：
- en: '[PRE17]'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: If you get an error related to Postgres, use the following command to install
    it separately and run the `bundle` command again. (This command will require administrator
    access.)
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您遇到与 Postgres 相关的错误，请使用以下命令单独安装它，然后再次运行 `bundle` 命令。（此命令需要管理员权限。）
- en: '[PRE18]'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Depending on the version of Ruby installed, you may have an extra command to
    enter. Mountain Lion comes bundled with Ruby 1.8.7 and will require the extra
    command, but if you have updated to version 1.9.2 or greater, then the following
    command is not required. (Administration access will be required.):'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据安装的 Ruby 版本，您可能需要输入额外的命令。Mountain Lion 随带 Ruby 1.8.7 并需要额外的命令，但如果您已升级到 1.9.2
    或更高版本，则不需要以下命令。（需要管理员权限。）
- en: '[PRE19]'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Open `[path to server code]/db/seeds.rb` in a text editor. The content in this
    file will be used to populate the database initially, therefore replace the example
    data with details that match your previously created Pass, ensure that the pass
    type identifier and serial number are correct, but change at least one part of
    the Pass data. In the following example, I have changed Peter Brooke's job title
    from `Chief Pass Creator`, to `CTO`.
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开 `[服务器代码路径]/db/seeds.rb`。此文件中的内容将用于初始化数据库，因此用与您之前创建的 Pass 匹配的详细信息替换示例数据，确保通行证类型标识符和序列号正确，但至少更改通行证数据的一部分。在以下示例中，我将彼得·布鲁克的职位从
    `Chief Pass Creator` 更改为 `CTO`。
- en: '[PRE20]'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: In the `seeds.rb` file, specify a unique authentication token for each Pass
    you add. in the preceding example **UniqueAuthTokenABCD1234** is used, although
    this would be automatically generated in a real-world use.
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `seeds.rb` 文件中，为每个添加的通行证指定一个唯一的认证令牌。在先前的示例中使用了 **UniqueAuthTokenABCD1234**，尽管在实际应用中这将是自动生成的。
- en: Deploying this server code to the free Heroku service is the quickest and easiest
    way to make it available for testing. Visit [http://www.heroku.com](http://www.heroku.com)
    and sign up for an account.
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此服务器代码部署到免费的 Heroku 服务是使其可用于测试最快、最简单的方法。访问 [http://www.heroku.com](http://www.heroku.com)
    并注册一个账户。
- en: Download and install the HerokuToolbelt for OSX:![How to do it…](img/7064OT_02_05.jpg)
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并安装 HerokuToolbelt for OSX：![如何操作…](img/7064OT_02_05.jpg)
- en: Open Terminal and log in to Heroku. Then create a new Heroku App and push the
    server code to it. Heroku will generate a name for your App; for example [http://frozen-bayou-9500.herokuapp.com/](http://frozen-bayou-9500.herokuapp.com/).
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并登录到 Heroku。然后创建一个新的 Heroku 应用程序并将服务器代码推送到它。Heroku 将为您的应用程序生成一个名称；例如 [http://frozen-bayou-9500.herokuapp.com/](http://frozen-bayou-9500.herokuapp.com/).
- en: '[PRE21]'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: For the Passes we have previously created to update using the server, we need
    to include the relevant information in the Pass. (In the following code sample,
    note that the sample web server has the additional path component of `passbook`
    in the `webServiceURL.`) Open the `pass.json` previously created and add two top-level
    keys with the relevant values, reproduce the `manifest.json`, reproduce the `signature`
    file, and re-zip the package files.
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于我们之前创建的用于通过服务器更新的通行证，我们需要在通行证中包含相关信息。（在以下代码示例中，请注意示例网络服务器在 `webServiceURL`
    中有额外的 `passbook` 路径组件。）打开之前创建的 `pass.json` 并添加两个顶级键及其相关值，重新生成 `manifest.json`，重新生成
    `signature` 文件，并重新压缩包文件。
- en: '[PRE22]'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: How it works…
  id: totrans-307
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The server we have implemented above is to facilitate the Pass update process,
    which involves back and forth communication between the user's device and your
    server.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 我们上面实现的服务器是为了方便通行证更新过程，这涉及到用户设备与您的服务器之间的双向通信。
- en: When a user adds a Pass to Passbook that contains `webServiceURL` and `authenticationToken`
    keys, the device registers with your server, passing a device library ID that
    is used to authenticate further communication, the authentication token to authenticate
    this initial communication, and a push token to be used when sending an APN.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户添加包含 `webServiceURL` 和 `authenticationToken` 键的 Pass 到 Passbook 时，设备会与您的服务器注册，传递一个用于进一步通信验证的设备库
    ID，用于验证初始通信的认证令牌，以及用于发送 APN 时使用的推送令牌。
- en: When information contained in the Pass changes, in our example this may be Peter
    Brooke being promoted, your server sends an APN to the device, using the push
    token it received. (The sending of this push notification is outside the scope
    of this book.) This prompts the device to ask your server for a list of all the
    updated Passes since it last asked. From this list, the device asks for updated
    information for each of the Passes in turn. Finally, the server responds with
    the updated Pass information and the updated Pass is presented to the user.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 当Pass中包含的信息发生变化时，以我们的例子来说，这可能是指彼得·布鲁克晋升，你的服务器会向设备发送一个APN，使用它收到的推送令牌。（发送此推送通知超出了本书的范围。）这会提示设备向你的服务器请求自上次请求以来所有更新的Pass列表。从这个列表中，设备依次请求每个Pass的更新信息。最后，服务器响应更新后的Pass信息，并更新后的Pass呈现给用户。
- en: There's more…
  id: totrans-311
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'Further information on the Pass update process can be found in the Apple documentation:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 关于Pass更新过程的更多信息可以在苹果文档中找到：
- en: '[https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Updating.html](https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Updating.html)'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Updating.html](https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Updating.html)'
- en: 'There is also a full specification for the REST API that the server above implements:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 上述服务器还实现了REST API的完整规范：
- en: '[https://developer.apple.com/library/ios/#documentation/PassKit/Reference/PassKit_WebService/WebService.html](https://developer.apple.com/library/ios/#documentation/PassKit/Reference/PassKit_WebService/WebService.html)'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/library/ios/#documentation/PassKit/Reference/PassKit_WebService/WebService.html](https://developer.apple.com/library/ios/#documentation/PassKit/Reference/PassKit_WebService/WebService.html)'
- en: 'When testing the web service endpoints in a browser, it is necessary to include
    the following request header in addition to any authorization header described
    in the specification:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中测试网络服务端点时，除了规范中描述的任何授权头之外，还需要包含以下请求头：
- en: '[PRE23]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'In a live production setting, the web service must use HTTPS, however you can
    allow Passbook on your device to use HTTP for development testing. If your device
    has been enabled for development using Xcode, you will have an additional **Developer**
    section under the app settings. In the **Developer** section, under **PassKit
    Testing**, switch on **Allow HTTP Services**:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际生产环境中，网络服务必须使用HTTPS，但是你可以允许你的设备在开发测试中使用HTTP。如果你的设备已经通过Xcode启用开发，你将在应用设置下有一个额外的**开发者**部分。在**开发者**部分，在**PassKit
    测试**下，打开**允许HTTP服务**：
- en: '![There''s more…](img/7064OT_02_06.jpg)'
  id: totrans-319
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多…](img/7064OT_02_06.jpg)'
