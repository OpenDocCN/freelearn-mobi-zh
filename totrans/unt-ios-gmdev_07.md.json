["```swift\nfunction Awake()\n{\niPhoneSettings.screenOrientation = iPhoneScreenOrientation.Landscape;\n}\n\n```", "```swift\nvoid Awake()\n{\niPhoneSettings.screenOrientation = iPhoneScreenOrientation.Landscape;\niPhoneKeyboard.autorotateToPortrait = false;\niPhoneKeyboard.autorotateToPortraitUpsideDown = false;\n}\n\n```", "```swift\nprivate var thisTransform : Transform;\nprivate var character : CharacterController;\nprivate var velocity : Vector3; //Used for continuing momentum while in air\nprivate var canJump = true;\nprivate var soldier : GameObject;\nfunction Start()\n{\n// Cache component lookup at startup instead of doing this every frame\nthisTransform = GetComponent( Transform );\ncharacter = GetComponent( CharacterController );\n\n```", "```swift\nif ( soldier )\n{\nif ( ( movement.x != 0 ) || ( movement.z != 0 ) )\n{\nsoldier.animation.Play(\"walk\");\n}\nelse\n{\nsoldier.animation.Play(\"idle\");\n}\n}\n\n```", "```swift\nusing UnityEngine;\nusing System.Collections;\npublic class CameraRotate : MonoBehaviour {\npublic float speed = 10.0f;\n// Use this for initialization\nvoid Start () {\n}\n// Update is called once per frame\nvoid Update () {\nVector3 direction = Vector3.zero;\ndirection.x = - Input.acceleration.y;\ndirection.z = Input.acceleration.x;\nif ( direction.sqrMagnitude > 1 )\n{\ndirection.Normalize();\n}\ndirection *= Time.deltaTime;\ntransform.Translate( direction * speed );\n}\n}\n\n```", "```swift\nusing UnityEngine;\nusing System.Collections;\npublic class DetectShake : MonoBehaviour {\npublic float shakeThreshold = 2.0f;\n// Update is called once per frame\nvoid Update () {\nVector3 accel = Input.acceleration;\nfloat x = accel.x;\nfloat y = accel.y;\nfloat z = accel.z;\nfloat shakeStrength = Mathf.Sqrt( x * x + y * y + z * z );\nif ( shakeStrength >= shakeThreshold )\n{\n// do the shake action\n}\n}\n}\n\n```", "```swift\npublic class Player {\npublic static int MAX_HEALTH = 100;\nprivate int health = 0;\npublic Player()\n{\n}\npublic int getHealth()\n{\nreturn health;\n}\npublic void heal()\n{\nhealth = health + 10;\nif ( health > MAX_HEALTH )\n{\nhealth = MAX_HEALTH;\n}\n}\n}\n\n```"]