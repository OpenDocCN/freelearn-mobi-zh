["```swift\n// Nav Bar\n@IBOutlet var heartButton: UIBarButtonItem!\n// Cell One\n@IBOutlet var nameLabel: UILabel!\n@IBOutlet var cuisineLabel: UILabel!\n@IBOutlet var headerAddressLabel: UILabel!\n// Cell Two\n@IBOutlet var tableDetailsLabel: UILabel!\n// Cell Three\n@IBOutlet var overallRatingLabel: UILabel!\n// Cell Eight\n@IBOutlet var addressLabel: UILabel!\n// Cell Nine\n@IBOutlet var locationMapImageView: UIImageView!\n```", "```swift\n    import MapKit\n    ```", "```swift\n    func createMap() {\n       guard let annotation = selectedRestaurant, let long\n       = annotation.long, let lat = annotation.lat else { \n          return \n       }\n       let location = CLLocationCoordinate2D(latitude: \n       lat, longitude: long)\n       takeSnapshot(with: location)\n    }\n    ```", "```swift\n    func takeSnapshot(with location:\n    CLLocationCoordinate2D) {\n       let mapSnapshotOptions = MKMapSnapshotter.Options()\n       var loc = location\n       let polyline = MKPolyline(coordinates: &loc, count:\n       1 )\n       let region = MKCoordinateRegion(polyline.\n       boundingMapRect)\n       mapSnapshotOptions.region = region \n       mapSnapshotOptions.scale = UIScreen.main.scale \n       mapSnapshotOptions.size = CGSize(width: 340, \n       height: 208) \n       mapSnapshotOptions.showsBuildings = true \n       mapSnapshotOptions.pointOfInterestFilter = \n       .includingAll\n       let snapShotter = MKMapSnapshotter(options: \n       mapSnapshotOptions)\n       snapShotter.start() { snapshot, error in \n          guard let snapshot = snapshot else {\n             return \n          }\n          UIGraphicsBeginImageContextWithOptions(\n          mapSnapshotOptions.size, true, 0)\n          snapshot.image.draw(at: .zero)\n          let identifier = \"custompin\"\n          let annotation = MKPointAnnotation()\n          annotation.coordinate = location\n          let pinView = MKPinAnnotationView(annotation: \n          annotation, reuseIdentifier: identifier) \n          pinView.image = UIImage(named: \"custom-\n          annotation\")! \n          let pinImage = pinView.image\n          var point = snapshot.point(for: location)\n          let rect = self.locationMapImageView.bounds \n          if rect.contains(point) { \n             let pinCenterOffset = pinView.centerOffset\n             point.x -= pinView.bounds.size.width / 2\n             point.y -= pinView.bounds.size.height / 2\n             point.x += pinCenterOffset.x\n             point.y += pinCenterOffset.y\n             pinImage?.draw(at: point)\n          }\n          if let image = \n          UIGraphicsGetImageFromCurrentImageContext() {\n             UIGraphicsEndImageContext() \n             DispatchQueue.main.async {\n                self.locationMapImageView.image = image\n             }\n          }\n       }\n    }\n    ```", "```swift\n    func initialize() { \n       setupLabels() \n       createMap()\n    }\n    ```", "```swift\n    override func viewDidLoad() { \n       super.viewDidLoad() \n       initialize()\n    }\n    ```", "```swift\n    override func prepare(for segue: UIStoryboardSegue, \n    sender: Any?) {\n       if let identifier = segue.identifier {\n          switch identifier {\n          case Segue.showDetail.rawValue:\n             showRestaurantDetail(segue: segue)\n          default:\n             print(\"Segue not added\")\n          }\n       }\n    }\n    ```", "```swift\n    func showRestaurantDetail(segue: UIStoryboardSegue) {\n       if let viewController = segue.destination as? \n       RestaurantDetailViewController, let indexPath = \n       collectionView.indexPathsForSelectedItems?.first {\n          selectedRestaurant = manager.restaurantItem(at:\n          indexPath.row)\n          viewController.selectedRestaurant = \n          selectedRestaurant\n       }\n    }\n    ```"]