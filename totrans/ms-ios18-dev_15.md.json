["```swift\n protocol LoginUseCaseProtocol {\n    func login(username: String,\n              password: String,\n              completion: @escaping (Result<User, Error>)\n                -> Void)\n}\n```", "```swift\n enum NetworkRequestType{\n    case login\n}\nprotocol NetworkServiceProtocol {\n    func performRequest(requestType: NetworkRequestType,\n                        params: [String: Any],\n                        completion: @escaping (Result<User,\n                        Error>) -> Void )\n}\n```", "```swift\n class LoginUseCase: LoginUseCaseProtocol {\n    let authService: NetworkServiceProtocol\n    init(authService: NetworkServiceProtocol) {\n        self.authService = authService\n    }\n    func login(username: String, password: String,\n      completion: @escaping (Result<User, any Error>) ->\n      Void) {\n        authService.performRequest(requestType: .login,\n                                   params: [\"username\" : username,\n                                            \"password\" : password],\n                                   completion: completion)\n    }\n}\n```", "```swift\n class NetworkService { }\nextension NetworkService: <st c=\"34459\">NetworkServiceProtocol</st> {\n    func performRequest(requestType: NetworkRequestType,\n                        params: [String : Any],\n                        completion: @escaping (Result<User, any Error>) -> Void) {\n        // implementation needed\n    }\n}\n```", "```swift\n import SwiftUI\nstruct LoginView: View {\n    @State var username: String = \"\"\n    @State var password: String = \"\" <st c=\"34969\">let loginUseCase: LoginUseCaseProtocol</st> var body: some View {\n        VStack {\n            TextField(\"Username\", text: $username)\n            SecureField(\"Password\", text: $password)\n            Button(\"Login\") {\n                loginUseCase.login(username: username,\n                  password: password) { result in\n                    // handle result\n                }\n            }\n        }\n        .padding()\n```", "```swift\n @main\nstruct HexagonalAppApp: App {\n    var body: some Scene {\n        WindowGroup {\n            let networkService = NetworkService()\n            let loginUserCase =\n              LoginUseCase(networkService: networkService)\n            LoginView(loginUseCase: loginUserCase)\n        }\n    }\n}\n```"]