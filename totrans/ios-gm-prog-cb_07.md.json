["```swift\n    -(id)initWithSize:(CGSize)size {\n        if (self = [super initWithSize:size]) {\n            self.backgroundColor = [SKColor colorWithRed:0.15 green:0.15 blue:0.3 alpha:1.0];\n        }\n        return self;\n    }\n    ```", "```swift\n    -(void)viewWillLayoutSubviews {\n        [super viewWillLayoutSubviews];\n\n        // Configure the view.\n        SKView * skView = (SKView *)self.view;\n        if (!skView.scene) {\n            skView.showsFPS = YES;\n            skView.showsNodeCount = YES;\n\n            // Create and configure the scene.\n            GameScene * scene = [GameScene sceneWithSize:skView.bounds.size];\n            scene.scaleMode = SKSceneScaleModeAspectFill;\n\n            // Present the scene.\n            [skView presentScene:scene];\n        }\n    }\n    ```", "```swift\n    self.physicsWorld.gravity = CGVectorMake(0.0f, -0.5f);\n    ```", "```swift\n    self.PhysicsBody = [SKPhysicsBody bodyWithEdgeLoopFromRect:self.frame];\n    self.physicsBody.friction = 0.0f;\n    ```", "```swift\n    -(void)update:(CFTimeInterval)currentTime {\n        /* Called before each frame is rendered */\n    }\n    ```", "```swift\n    -(void)createPhysicsBodiesOnScene:(SKScene*)scene\n    {\n        //Adding Rectangle\n        SKSpriteNode* backBone = [[SKSpriteNode alloc] initWithColor:[UIColor whiteColor] size:CGSizeMake(20, 200)];\n        backBone.position = CGPointMake(CGRectGetWidth(self.frame)/2.0, CGRectGetHeight(self.frame)/2.0);\n        backBone.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:backBone.size];\n        [scene addChild:backBone];\n\n        //Adding Square\n        SKSpriteNode* head = [[SKSpriteNode alloc] initWithColor:[SKColor grayColor] size:CGSizeMake(40, 40)];\n        head.position = CGPointMake(backBone.position.x, backBone.position.y-40);\n        head.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:head.size];\n        [scene addChild:head];\n\n    }\n    ```", "```swift\n    [self createPhysicsBodiesOnScene:self];\n    ```", "```swift\n    -(void)createPinJointOnScene:(SKScene*)scene\n    {\n        //Adding Rectangle\n        SKSpriteNode* backBone = [[SKSpriteNode alloc] initWithColor:[UIColor whiteColor] size:CGSizeMake(20, 200)];\n        backBone.position = CGPointMake(CGRectGetWidth(self.frame)/2.0, CGRectGetHeight(self.frame)/2.0);\n        backBone.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:backBone.size];\n        backBone.physicsBody.categoryBitMask = GFPhysicsCategoryRectangle;\n        backBone.physicsBody.collisionBitMask = GFPhysicsCategoryWorld;\n        [scene addChild:backBone];\n\n        //Adding Square\n        SKSpriteNode* head = [[SKSpriteNode alloc] initWithColor:[SKColor grayColor] size:CGSizeMake(40, 40)];\n        head.position = CGPointMake(backBone.position.x+5, backBone.position.y-40);\n        head.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:head.size];\n        head.physicsBody.categoryBitMask = GFPhysicsCategorySquare;\n        head.physicsBody.collisionBitMask = GFPhysicsCategoryWorld;\n        [scene addChild:head];\n\n        //Pinning Rectangle and Square\n        NSLog(@\"Head position %@\", NSStringFromCGPoint(head.position));\n        SKPhysicsJointPin* pin =[SKPhysicsJointPin jointWithBodyA:backBone.physicsBody bodyB:head.physicsBody anchor:CGPointMake(head.position.x-5, head.position.y)];\n        [scene.physicsWorld addJoint:pin];\n    }\n    ```", "```swift\n    [self createPinJointOnScene:self];\n    ```", "```swift\n    -(void)createFixedJointOnScene:(SKScene*)scene\n    {\n        //Adding Rectangle\n        SKSpriteNode* backBone = [[SKSpriteNode alloc] initWithColor:[UIColor whiteColor] size:CGSizeMake(20, 200)];\n        backBone.position = CGPointMake(CGRectGetWidth(self.frame)/2.0, CGRectGetHeight(self.frame)/2.0);\n        backBone.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:backBone.size];backBone.physicsBody.categoryBitMask = GFPhysicsCategoryRectangle;\n        backBone.physicsBody.collisionBitMask = GFPhysicsCategoryWorld;\n        [scene addChild:backBone];\n\n        //Adding Square\n        SKSpriteNode* head = [[SKSpriteNode alloc] initWithColor:[SKColor grayColor] size:CGSizeMake(40, 40)];\n        head.position = CGPointMake(backBone.position.x+5, backBone.position.y-40);\n        head.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:head.size];\n        head.physicsBody.categoryBitMask = GFPhysicsCategorySquare;\n        head.physicsBody.collisionBitMask = GFPhysicsCategoryWorld;\n        [scene addChild:head];\n\n        //Pinning Rectangle and Square\n        NSLog(@\"Head position %@\", NSStringFromCGPoint(head.position));\n        SKPhysicsJointFixed* pin =[SKPhysicsJointFixed jointWithBodyA:backBone.physicsBody bodyB:head.physicsBody anchor:CGPointMake(head.position.x-5, head.position.y)];\n        [scene.physicsWorld addJoint:pin];\n    }\n    ```", "```swift\n    [self createFixedJointOnScene:self];\n    ```", "```swift\n    -(void)createSlidingJointOnScene:(SKScene*)scene {\n        //Adding Rectangle\n        SKSpriteNode* backBone = [[SKSpriteNode alloc] initWithColor:[UIColor whiteColor] size:CGSizeMake(20, 200)];\n        backBone.position = CGPointMake(CGRectGetWidth(self.frame)/2.0, CGRectGetHeight(self.frame)/2.0);\n        backBone.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:backBone.size];\n        backBone.physicsBody.categoryBitMask = GFPhysicsCategoryRectangle;\n        backBone.physicsBody.collisionBitMask = GFPhysicsCategoryWorld;\n        backBone.physicsBody.affectedByGravity = NO;\n        backBone.physicsBody.allowsRotation = NO;\n        [scene addChild:backBone];\n\n        //Adding Square\n        SKSpriteNode* head = [[SKSpriteNode alloc] initWithColor:[SKColor grayColor] size:CGSizeMake(40, 40)];\n        head.position = CGPointMake(backBone.position.x, backBone.position.y-40);\n        head.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:head.size];\n        head.physicsBody.categoryBitMask = GFPhysicsCategorySquare;\n        head.physicsBody.collisionBitMask = GFPhysicsCategoryWorld;\n        [scene addChild:head];\n\n        //Pinning Rectangle and Square\n        NSLog(@\"Head position %@\", NSStringFromCGPoint(head.position));\n        SKPhysicsJointSliding* pin =[SKPhysicsJointSliding jointWithBodyA:backBone.physicsBody bodyB:head.physicsBody anchor:head.position axis:CGVectorMake(0, 1)];\n        pin.shouldEnableLimits = YES;\n        pin.upperDistanceLimit = 200;\n        pin.lowerDistanceLimit = -100;\n\n        [scene.physicsWorld addJoint:pin];\n    }\n    ```", "```swift\n    -(void)applyImpulseUpwards:(NSTimer*)timer {\n        NSDictionary* dict = [timer userInfo];\n        SKPhysicsBody* body = dict[@\"body\"];\n\n        CGVector impulse = CGVectorMake(0, [dict[@\"impulse\"] intValue]);\n\n        [body applyImpulse:impulse];\n    }\n    ```", "```swift\n    [NSTimer scheduledTimerWithTimeInterval:5 target:self selector:@selector(applyImpulseUpwards:) userInfo:@{@\"body\":head.physicsBody,@\"impulse\":@(25)} repeats:YES];\n    ```", "```swift\n    [self createSlidingJointOnScene:self];\n    ```", "```swift\n    -(void)createSpringJointOnScene:(SKScene*)scene\n    {\n        SKSpriteNode* backBone = [[SKSpriteNode alloc] initWithColor:[UIColor whiteColor] size:CGSizeMake(20, 200)];\n        backBone.position = CGPointMake(CGRectGetWidth(self.frame)/2.0, CGRectGetHeight(self.frame)/2.0);\n        backBone.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:backBone.size];\n        backBone.physicsBody.categoryBitMask = GFPhysicsCategoryRectangle;\n        backBone.physicsBody.collisionBitMask = GFPhysicsCategoryWorld;\n        [scene addChild:backBone];\n\n        //Adding Square\n        SKSpriteNode* head = [[SKSpriteNode alloc] initWithColor:[SKColor grayColor] size:CGSizeMake(40, 40)];\n        head.position = CGPointMake(backBone.position.x, backBone.position.y+backBone.size.height/2.0+40);\n        head.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:head.size];\n        head.physicsBody.categoryBitMask = GFPhysicsCategorySquare;\n        head.physicsBody.collisionBitMask = GFPhysicsCategoryWorld;\n        [scene addChild:head];\n\n        //Pinning Rectangle and Square\n        NSLog(@\"Head position %@\", NSStringFromCGPoint(head.position));\n        SKPhysicsJointSpring* pin =[SKPhysicsJointSpring jointWithBodyA:backBone.physicsBody bodyB:head.physicsBody anchorA:head.position anchorB:CGPointMake(backBone.position.x, backBone.position.y+backBone.size.height/2.0)];\n        pin.damping = 0.5;\n        pin.frequency = 0.5;\n        [scene.physicsWorld addJoint:pin];\n    }\n    ```", "```swift\n    [self createSpringJointOnScene:self];\n    ```", "```swift\n    -(void)createLimitJointOnScene:(SKScene*)scene {\n        SKLabelNode* label = [SKLabelNode labelNodeWithFontNamed:@\"Futura-Medium\"];\n        label.text = @\"An upward impulse is applied to the square every few seconds.\";\n        label.fontSize = 14;\n        label.position = CGPointMake(220, scene.view.frame.size.height-100);\n        [scene addChild:label];\n\n        SKSpriteNode* backBone = [[SKSpriteNode alloc] initWithColor:[UIColor whiteColor] size:CGSizeMake(20, 200)];\n        backBone.position = CGPointMake(CGRectGetWidth(self.frame)/2.0, CGRectGetHeight(self.frame)/2.0);\n        backBone.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:backBone.size];\n        backBone.physicsBody.categoryBitMask = GFPhysicsCategoryRectangle;\n        backBone.physicsBody.collisionBitMask = GFPhysicsCategoryWorld;\n        [scene addChild:backBone];\n\n        //Adding Square\n        SKSpriteNode* head = [[SKSpriteNode alloc] initWithColor:[SKColor grayColor] size:CGSizeMake(40, 40)];\n        head.position = CGPointMake(backBone.position.x, backBone.position.y+backBone.size.height/2.0+40);\n        head.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:head.size];\n        head.physicsBody.categoryBitMask = GFPhysicsCategorySquare;\n        head.physicsBody.collisionBitMask = GFPhysicsCategoryWorld;\n        [scene addChild:head];\n\n        //Pinning Rectangle and Square\n        NSLog(@\"Head position %@\", NSStringFromCGPoint(head.position));\n        SKPhysicsJointLimit* pin =[SKPhysicsJointLimit jointWithBodyA:backBone.physicsBody bodyB:head.physicsBody anchorA:head.position anchorB:CGPointMake(backBone.position.x, backBone.position.y+backBone.size.height/2.0)];\n        pin.maxLength = 100;\n        [scene.physicsWorld addJoint:pin];\n\n        [NSTimer scheduledTimerWithTimeInterval:5 target:self selector:@selector(applyImpulseUpwards:) userInfo:@{@\"body\":head.physicsBody,@\"impulse\":@(50)} repeats:YES];\n    }\n    ```", "```swift\n    [self createLimitJointOnScene:self];\n    ```", "```swift\n    - (void)createCollisionDetectionOnScene:(SKScene*)scene {\n        collisionLabel = [SKLabelNode labelNodeWithFontNamed:@\"Futura-Medium\"];\n        collisionLabel.text = @\"Collision detected\";\n        collisionLabel.fontSize = 18;\n        collisionLabel.fontColor = [SKColor whiteColor];\n        collisionLabel.position = CGPointMake(CGRectGetWidth(self.frame)/2.0, CGRectGetHeight(self.frame)/1.2);\n        collisionLabel.alpha = 0.0f;\n        [scene addChild:collisionLabel];\n\n        SKSpriteNode* backBone = [[SKSpriteNode alloc] initWithColor:[UIColor whiteColor] size:CGSizeMake(20, 200)];\n        backBone.position = CGPointMake(CGRectGetWidth(self.frame)/2.0, CGRectGetHeight(self.frame)/2.0);\n        backBone.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:backBone.size];\n        backBone.physicsBody.categoryBitMask = GFPhysicsCategoryRectangle;\n        backBone.physicsBody.collisionBitMask = GFPhysicsCategorySquare;\n        backBone.physicsBody.contactTestBitMask = GFPhysicsCategorySquare;\n        backBone.physicsBody.dynamic = YES;\n        [scene addChild:backBone];\n\n        //Adding Square\n        SKSpriteNode* head = [[SKSpriteNode alloc] initWithColor:[SKColor grayColor] size:CGSizeMake(40, 40)];\n        head.position = CGPointMake(backBone.position.x, backBone.position.y+backBone.size.height/2.0+40);\n        head.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:head.size];\n        head.physicsBody.categoryBitMask = GFPhysicsCategorySquare;\n        head.physicsBody.collisionBitMask = GFPhysicsCategoryRectangle;\n        head.physicsBody.contactTestBitMask = GFPhysicsCategoryRectangle;\n        head.physicsBody.dynamic = YES;\n        [scene addChild:head];\n\n        [NSTimer scheduledTimerWithTimeInterval:5 target:self selector:@selector(applyImpulseUpwards:) userInfo:@{@\"body\":head.physicsBody,@\"impulse\":@(50)} repeats:YES];\n    }\n    ```", "```swift\n    [self createCollisionDetectionOnScene:self];\n    ```", "```swift\n    self.physicsWorld.contactDelegate = self;\n    ```", "```swift\n    <SKPhysicsContactDelegate>\n    ```", "```swift\n    SKLabelNode* collisionLabel;\n    ```", "```swift\n    collisionLabel = [SKLabelNode labelNodeWithFontNamed:@\"Futura-Medium\"];\n    collisionLabel.text = @\"Collision detected\";\n    collisionLabel.fontSize = 18;\n    collisionLabel.fontColor = [SKColor whiteColor];\n    collisionLabel.position = CGPointMake(CGRectGetWidth(self.frame)/2.0, CGRectGetHeight(self.frame)/1.2);\n    collisionLabel.alpha = 0.0f;\n    [scene addChild:collisionLabel];\n    ```", "```swift\n    SKSpriteNode *firstNode, *secondNode;\n\n    firstNode = (SKSpriteNode *)contact.bodyA.node;\n    secondNode = (SKSpriteNode *) contact.bodyB.node;\n\n    if (firstNode.physicsBody.categoryBitMask == GFPhysicsCategoryRectangle && secondNode.physicsBody.categoryBitMask == GFPhysicsCategorySquare) {\n\n        SKAction *fadeIn = [SKAction fadeAlphaTo:1.0f duration:0.2];\n        SKAction *fadeOut = [SKAction fadeAlphaTo:0.0f duration:0.2];\n        [collisionLabel runAction:fadeIn completion:^{\n            [collisionLabel runAction:fadeOut];\n        }];\n    }\n    ```"]