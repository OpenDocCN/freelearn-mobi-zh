["```java\ndependencies {\n  compile fileTree(dir: 'libs', include: ['*.jar'])\n  compile 'com.google.android.gms:play-services:6.5.87'\n  compile 'com.android.support:appcompat-v7:22.0.0'\n}\n```", "```java\n<uses-permission android:name=\"android.permission.INTERNET\" />\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n<uses-permission android:name=\"com.google.android.providers.gsf.permission.READ_GSERVICES\" />\n<uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\n<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n```", "```java\n<meta-data\n  android:name=\"com.google.android.gms.version\"\n  android:value=\"@integer/google_play_services_version\" />\n<meta-data\n  android:name=\"com.google.android.maps.v2.API_KEY\"\n  android:value=\"@string/google_maps_key\" />\n```", "```java\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout \n\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      android:orientation=\"vertical\">\n\n      <TextView\n        android:id=\"@+id/text_view\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center_horizontal\"\n        android:text=\"No last location\" />\n\n      <fragment\n        android:id=\"@+id/map\"\n        class=\"com.google.android.gms.maps.SupportMapFragment\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MapsActivity\" />\n\n    </LinearLayout>\n    ```", "```java\n    private static final String DEBUG_TAG = \"tag\";\n    private TextView textView;\n    private GoogleApiClient googleApiClient;\n    ```", "```java\n    textView = (TextView) findViewById(R.id.text_view);\n\n    googleApiClient = new GoogleApiClient.Builder(this)\n      .addApi(LocationServices.API)\n      .addConnectionCallbacks(this)\n      .addOnConnectionFailedListener(this)\n      .build();\n    ```", "```java\n    public class MapsActivity extends FragmentActivity implements GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener {\n    ```", "```java\n    @Override\n    public void onConnected(Bundle bundle) {\n      Location loc = LocationServices.FusedLocationApi.getLastLocation(googleApiClient);\n      Log.d(DEBUG_TAG, \"Connected\");\n      if (loc != null) {\n        textView.setText(loc.toString());\n      }\n    }\n    ```", "```java\n    @Override\n    public void onConnectionSuspended(int i) {\n      Log.d(DEBUG_TAG, \"Connection suspended\");\n    }\n\n    @Override\n    public void onConnectionFailed(ConnectionResult connectionResult) {\n      Log.d(DEBUG_TAG, \"Connection  failed\");\n    }\n    ```", "```java\n    @Override\n    protected void onResume() {\n      super.onResume();\n      setUpMapIfNeeded();\n      googleApiClient.connect();\n      Log.d(DEBUG_TAG, \"onResume() called - connected\");\n    }\n    ```", "```java\n    @Override\n    protected void onPause() {\n      super.onPause();\n      if (googleApiClient.isConnected()) {\n        googleApiClient.disconnect();\n        Log.d(DEBUG_TAG, \"Disconnected\");\n      }\n    }\n    ```", "```java\n    private void setUpMap() {\n      mMap.addMarker(new MarkerOptions()\n        .position(new LatLng(51.178844, -1.826189))\n        .title(\"Stonehenge\"));\n    }\n    ```", "```java\n    public class MapsActivity extends FragmentActivity implements\n      GoogleApiClient.ConnectionCallbacks,\n      GoogleApiClient.OnConnectionFailedListener,\n      LocationListener {\n    ```", "```java\n    private LocationRequest locationRequest;\n    ```", "```java\n    locationRequest = LocationRequest.create()\n      .setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY)\n      .setInterval(30000)\n      .setFastestInterval(5000);\n    ```", "```java\n    @Override\n    public void onLocationChanged(Location location) {\n      LocationServices.FusedLocationApi.requestLocationUpdates(googleApiClient, locationRequest, this);\n      textView.setText(location.toString());\n    }\n    ```", "```java\n    private void setUpMap() {\n      mMap.addMarker(new MarkerOptions()\n        .position(new LatLng(51.178844, -1.826189))\n        .title(\"Stonehenge\")\n        .snippet(\"3000 BC\")\n        .icon(BitmapDescriptorFactory.fromResource(R.mipmap.ic_launcher)));\n\n      mMap.setMapType(GoogleMap.MAP_TYPE_SATELLITE);\n\n      mMap.setMyLocationEnabled(true);\n      mMap.getUiSettings().setMyLocationButtonEnabled(true);\n      mMap.getUiSettings().setZoomControlsEnabled(true);\n      mMap.getUiSettings().setZoomGesturesEnabled(true);\n      mMap.getUiSettings().setCompassEnabled(true);\n      mMap.getUiSettings().setRotateGesturesEnabled(true);\n    }\n    ```", "```java\n    GoogleMap.OnMapClickListener\n    ```", "```java\n    mMap.setOnMapClickListener(this);\n    ```", "```java\n    public void onMapClick(LatLng latLng) {\n      textView.setText(\"Clicked, position = \" + latLng);\n      CameraPosition position = new CameraPosition.Builder()\n        .target(latLng)\n        .zoom(6)\n        .build();\n      mMap.animateCamera(CameraUpdateFactory.newCameraPosition(position));\n    }\n    ```"]