["```swift\npublic function Main() {\n//constructor code\n}\n\n```", "```swift\n    import flash.display.MovieClip;\n     import flash.desktop.NativeApplication;\n    import flash.desktop.SystemIdleMode; \n\n    ```", "```swift\n    public class Main extends MovieClip {\n    private var application:NativeApplication; \n\n    ```", "```swift\n    public function Main() {\n    application = NativeApplication.nativeApplication; \n    }\n\n    ```", "```swift\n    public function Main() {\n    application = NativeApplication.nativeApplication;\n    application.systemIdleMode = SystemIdleMode.KEEP_AWAKE; \n    }\n\n    ```", "```swift\n    import flash.display.MovieClip;\n    import flash.desktop.NativeApplication;\n    import flash.desktop.SystemIdleMode;\n    import flash.events.Event; \n\n    ```", "```swift\n    public function Main() {\n    application = NativeApplication.nativeApplication;\n    application.systemIdleMode = SystemIdleMode.KEEP_AWAKE;\n    application.addEventListener(Event.ACTIVATE, activate);\n    application.addEventListener(Event.DEACTIVATE, deactivate); \n    }\n\n    ```", "```swift\n    private function deactivate(e:Event):void {\n    application.systemIdleMode = SystemIdleMode.NORMAL;\n    }\n    private function activate(e:Event):void {\n    application.systemIdleMode = SystemIdleMode.KEEP_AWAKE;\n    }\n\n    ```", "```swift\n    public function Main() {\n    application = NativeApplication.nativeApplication;\n    application.systemIdleMode = SystemIdleMode.KEEP_AWAKE; \n    application.addEventListener(Event.ACTIVATE, activate);\n    application.addEventListener(Event.DEACTIVATE, deactivate);\n    }\n\n    ```", "```swift\n    import flash.display.MovieClip;\n    import flash.desktop.NativeApplication;\n    import flash.desktop.SystemIdleMode;\n    import flash.events.Event; \n\n    ```", "```swift\n    application.addEventListener(Event.EXITING, exiting);\n\n    ```", "```swift\n    private function exiting(e:Event):void {\n    application.removeEventListener(Event.EXITING, exiting);\n    application.systemIdleMode = SystemIdleMode.NORMAL; \n    }\n\n    ```", "```swift\n    private function exiting(e:Event):void {\n    application.removeEventListener(Event.ACTIVATE, activate);\n    application.removeEventListener(Event.DEACTIVATE, deactivate);\n    application.removeEventListener(Event.EXITING, exiting);\n    application.systemIdleMode = SystemIdleMode.NORMAL;\n    }\n\n    ```", "```swift\n    package {\n    import flash.display.Sprite;\n    import flash.events.Event;\n    public class Bubble extends Sprite {\n    private var _speed:Number = 1;\n    public function Bubble() {\n    addEventListener(Event.ENTER_FRAME, enterFrame);\n    }\n    public function set speed(s:Number):void {\n    _speed = s;\n    }\n    private function enterFrame(e:Event):void {\n    y -= _speed;\n    if(y < -(height / 2))\n    {\n    y = stage.stageHeight + (height / 2) + (height * Math.random());\n    x = -(width / 2) + ((stage.stageWidth + width) * Math.random());\n    }\n    }\n    }\n    }\n\n    ```", "```swift\n    public function Bubble() {\n    addEventListener(Event.ENTER_FRAME, enterFrame); \n    }\n\n    ```", "```swift\n    public function update():void { \n    y -= _speed;\n    if(y < -(height / 2))\n    {\n    y = stage.stageHeight + (height / 2) +\n    (height * Math.random());\n    x = -(width / 2) +\n    ((stage.stageWidth + width) * Math.random());\n    }\n    }\n\n    ```", "```swift\n    import flash.events.Event; \n\n    ```", "```swift\n    private var bubbles:Array;\n    private var speeds:Array;\n\n    ```", "```swift\n    bubbles = [bubble1, bubble2, bubble3, bubble4, bubble5, bubble6, bubble7, bubble8, bubble9];\n    speeds = [1.3, 1.5, 1.8, 2, 2.2, 2.4, 4.5, 5, 8];\n\n    ```", "```swift\n    for(var i:uint = 0; i < bubbles.length; i++)\n    {\n    bubbles[i].speed = speeds[i];\n    }\n\n    ```", "```swift\n    addEventListener(Event.ENTER_FRAME, update);\n\n    ```", "```swift\n    removeEventListener(Event.ENTER_FRAME, update);\n\n    ```", "```swift\n    private function update(e:Event):void {\n    for each(var b:Bubble in bubbles)\n    {\n    b.update();\n    }\n    }\n\n    ```", "```swift\nprivate function update(e:Event):void {\nfor each(var b:Bubble in bubbles)\n{\nb.update();\n}\n}\n\n```", "```swift\n    <iPhone>\n    <InfoAdditions>\n    <![CDATA[<key>UIDeviceFamily</key> <array><string>1</string></array>]]>\n    </InfoAdditions>\n\n    ```", "```swift\n    <iPhone>\n    <InfoAdditions>\n    <![CDATA[<key>UIDeviceFamily</key> <array><string>1</string></array>\n     <key>UIPrerenderedIcon</key><true/>]]> \n    </InfoAdditions>\n\n    ```", "```swift\n<key>UIPrerenderedIcon</key><true/>\n\n```", "```swift\n<key>UIStatusBarStyle</key>\n<string>UIStatusBarStyleBlackOpaque</string>\n\n```", "```swift\n    public function Main() {\n    trace(\"Inside the constructor.\"); \n\n    ```", "```swift\n    ipconfig\n\n    ```", "```swift\n    IPv4 Address. . . . . . . . . . . : 192.168.0.4 \n\n    ```", "```swift\n    Waiting for Player to connect... \n\n    ```", "```swift\n    [SWF] bubbles.swf - 327469 bytes after decompression\n    Inside the constructor. \n\n    ```"]