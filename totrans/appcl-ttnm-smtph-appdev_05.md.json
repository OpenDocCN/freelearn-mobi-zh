["```java\n// this sets the background color of the master UIView (when there are no windows/tab groups on it)\nTitanium.UI.setBackgroundColor('#000');\n//this variable will hold our image data blob from the device's gallery\nvar selectedImage = null;\nvar win1 = Titanium.UI.createWindow({\ntitle:'Tab 1',\nbackgroundImage: 'images/background.jpg'\n});\nvar label = Titanium.UI.createLabel({\nwidth: 280,\nheight: 'auto',\ntop: 20,\nleft: 20,\ncolor: '#fff',\nfont: {fontSize: 18, fontFamily: 'Helvetica', fontWeight: 'bold'},\ntext: 'Photo Share: \\nEmail, Facebook & Twitter'\n});\nwin1.add(label);\nvar imageThumbnail = Titanium.UI.createImageView({\nwidth: 100,\nheight: 120,\nleft: 20,\ntop: 90,\nbackgroundColor: '#000',\nborderSize: 10,\nborderColor: '#fff'\n});\nwin1.add(imageThumbnail);\nvar buttonSelectImage = Titanium.UI.createButton({\nwidth: 100,\nheight: 30,\ntop: 220,\nleft: 20,\ntitle: 'Choose'\n});\nbuttonSelectImage.addEventListener('click',function(e){\n//obtain an image from the gallery\nTitanium.Media.openPhotoGallery({\nsuccess:function(event)\n{\nselectedImage = event.media;\n// set image view\nTi.API.debug('Our type was: '+event.mediaType);\nif(event.mediaType == Ti.Media.MEDIA_TYPE_PHOTO)\n{\nimageThumbnail.image = selectedImage;\n}\n},\ncancel:function()\n{\n//user cancelled the action from within\n//the photo gallery\n}\n});\n});\nwin1.add(buttonSelectImage);\nvar txtTitle = Titanium.UI.createTextField({\nwidth: 160,\nheight: 35,\nleft: 140,\ntop: 90,\nvalue: 'Message title...',\nborderStyle: 2,\nbackgroundColor: '#fff'\n});\nwin1.add(txtTitle);\nvar txtMessage = Titanium.UI.createTextArea({\nwidth: 160,\nheight: 120,\nleft: 140,\ntop: 130,\nvalue: 'Message text...',\nfont: {fontSize: 15},\nborderStyle: 2,\nbackgroundColor: '#fff'\n});\nwin1.add(txtMessage);\nwin1.open();\n\n```", "```java\n//create your email\nfunction postToEmail() {\nvar emailDialog = Titanium.UI.createEmailDialog();\nemailDialog.subject = txtTitle.value;\nemailDialog.toRecipients = ['info@packtpub.com'];\nemailDialog.messageBody = txtMessage.value;\nemailDialog.open();\n}\nvar buttonEmail = Titanium.UI.createButton({\nwidth: 280,\nheight: 35,\ntop: 280,\nleft: 20,\ntitle: 'Send Via Email'\n});\nbuttonEmail.addEventListener('click', function(e){\nif(selectedImage != null) {\npostToEmail();\n} else {\nalert('You must select an image first!');\n}\n});\nwin1.add(buttonEmail);\n\n```", "```java\nemailDialog.toRecipients = ['info@packtpub.com',\n'me@boydlee.com'];\n\n```", "```java\n//add an image from the Resource/images directory\nemailDialog.addAttachment('images/my_test_photo.png');\n\n```", "```java\n//create your email\nfunction postToEmail() {\nvar newDir = Titanium.Filesystem.getFile(\nTitanium.Filesystem.applicationDataDirectory,\n'attachments');\nif(!newDir.exists()) { newDir.createDirectory(); }\n//write out the image file to the attachments directory\nwriteFile = Titanium.Filesystem.getFile(newDir.nativePath,\n'temp-image.jpg');\nwriteFile.write(selectedImage);\nvar emailDialog = Titanium.UI.createEmailDialog();\nemailDialog.subject = txtTitle.value;\nemailDialog.toRecipients = ['info@packtpub.com'];\nemailDialog.messageBody = txtMessage.value;\n//add an image via attaching the saved file\nemailDialog.addAttachment(writeFile);\nemailDialog.open();\n}\n\n```", "```java\n//create your facebook session and post to fb\nfunction postToFacebook() {\n//if the user is not logged in, do so, else post to wall\nif(Titanium.Facebook.loggedIn == false) {\nTitanium.Facebook.appid = '<your app id>';\nTitanium.Facebook.permissions = ['publish_stream'];\n// Permissions your app needs\nTitanium.Facebook.addEventListener('login', function(e)\n{\nif(e.success) {\nalert('You are now logged in!');\n} else if(e.error) {\nalert('Error: ' + e.error);\n} else if(e.cancelled) {\nalert('You cancelled the login');\n}\n});\n//call the facebook authorize method to login\nTitanium.Facebook.authorize();\n}\n}\nvar buttonFacebook = Titanium.UI.createButton({\nwidth: 280,\nheight: 35,\ntop: 330,\nleft: 20,\ntitle: 'Send Via Facebook'\n});\nbuttonFacebook.addEventListener('click', function(e){\nif(selectedImage != null) {\npostToFacebook();\n} else {\nalert('You must select an image first!');\n}\n});\nwin1.add(buttonFacebook);\n\n```", "```java\n//create your facebook session and post to fb\nfunction postToFacebook() {\n//if the user is not logged in, do so, else post to wall\nif(Titanium.Facebook.loggedIn == false) {\nTitanium.Facebook.appid = '252235321506456';\nTitanium.Facebook.permissions = ['publish_stream'];\n// Permissions your app needs\nTitanium.Facebook.addEventListener('login', function(e)\n{\nif(e.success) {\nalert('You are now logged in!');\n} else if(e.error) {\nalert('Error: ' + e.error);\n} else if(e.cancelled) {\nalert('You cancelled the login');\n}\n});\n//call the facebook authorize method to login\nTitanium.Facebook.authorize();\n}\nelse {\n//Now post the photo after you've confirmed\n//that we have an access token\nvar data = {\ncaption: 'I am posting a photo to my facebook page!',\npicture: selectedImage\n};\nTitanium.Facebook.requestWithGraphPath('me/photos',\ndata, \"POST\", function(e) {\nif (e.success) {\nalert( \"Success! Your image has been posted to\nyour Facebook wall.\");\nTi.API.info(\"Success! The image you posted has\nthe new ID: \" + e.result);\n}\nelse {\nalert('Your image could not be posted to Facebook\nat this time. Try again later.');\nTi.API.error(e.error);\n}\n});\n} //end if else loggedIn\n}\n\n```", "```java\nTi.include('birdhouse.js');\n\n```", "```java\n//create your twitter session and post a tweet\nfunction postToTwitter()\n{\nvar BH = new BirdHouse({\nconsumer_key: \"your-consumer-key\",\nconsumer_secret: \"your-consumer-secret\"\n});\n//call the birdhouse authorize() method\nBH.authorize();\n}\nvar buttonTwitter = Titanium.UI.createButton({\nwidth: 280,\nheight: 35,\ntop: 375,\nleft: 20,\ntitle: 'Send Via Twitter'\n});\nbuttonTwitter.addEventListener('click', function(e){\nif(selectedImage != null) {\npostToTwitter();\n} else {\nalert('You must select an image first!');\n}\n});\nwin1.add(buttonTwitter);\n\n```", "```java\n<?php\n$target = getcwd();\n$target = $target .'/'. $_POST['randomFilename'];\nif(move_uploaded_file($_FILES['media']['tmp_name'], $target))\n{\n$filename = $target;\n// Get dimensions of the original image\nlist($current_width, $current_height) = getimagesize($filename);\n// The x and y coordinates on the original image where we\n// will begin cropping the image\n$left = 0;\n$top = 0;\n// This will be the final size of the image (e.g. how many pixels\n// left and down we will be going)\n$crop_width = $current_width;\n$crop_height = $current_height;\n// Resample the image\n$canvas = imagecreatetruecolor($crop_width, $crop_height);\n$current_image = imagecreatefromjpeg($filename);\nimagecopy($canvas, $current_image, 0, 0, $left, $top, $current_width, $current_height);\nimagejpeg($canvas, $filename, 100);\necho 'http://<mysite.com>/'.$_POST['randomFilename'];\n}\nelse\n{\necho \"0\";\n}\n?>\n\n```", "```java\nfunction randomString(length,current){\ncurrent = current ? current : '';\nreturn length ? randomString( --length , \"abcdefghiklmnopqrstuvwxyz\".charAt ( Math.floor( Math.random() * 60 ) ) + current ) : current;\n}\n//create your twitter session and post a tweet\nfunction postToTwitter()\n{\nvar BH = new BirdHouse({\nconsumer_key: \"<your consumer key>\",\nconsumer_secret: \"<your consumer secret>\"\n});\nif(!BH.authorized){\nBH.authorize();\n}\nelse\n{\n//create the httpRequest\nvar xhr = Titanium.Network.createHTTPClient();\n//open the httpRequest\nxhr.open('POST','http://<mysite>.com/upload.php');\nxhr.onload = function(response) {\n//the image upload method has finished\nif(this.responseText != '0')\n{\nvar imageURL = this.responseText;\nalert('Your image was uploaded to ' + imageURL);\n//now we have an imageURL we can post a tweet\n//using birdhouse!\n}\nelse\n{\nalert('The upload did not work! Check your PHP server settings.');\n}\n};\n// send the data\nvar r = randomString(5) + '.jpg';\nxhr.send({'media': selectedImage, 'randomFilename': r});\n}\n}\n\n```", "```java\nBH.tweet(txtMessage.value + ' ' + this.responseText,\nfunction(){\nalertDialog = Ti.UI.createAlertDialog({\nmessage:'Tweet posted!'\n});\nalertDialog.show();\n});\n\n```"]