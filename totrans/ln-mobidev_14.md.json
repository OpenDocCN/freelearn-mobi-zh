["```kt\ndependencies {\n ...\n   implementation \"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version\"\n   implementation 'com.android.support:appcompat-v7:25.4.0'\n   implementation 'com.android.support.constraint:constraint-layout:1.0.2'\n   implementation 'com.google.firebase:firebase-config:11.6.0'\n}\napply plugin: 'com.google.gms.google-services'\n```", "```kt\nval firebaseRemoteConfig = FirebaseRemoteConfig.getInstance()\nvar firebaseAnalytics: FirebaseAnalytics? = null\noverride fun onCreate(savedInstanceState: Bundle?) {\n ...\n   val configSettings = FirebaseRemoteConfigSettings.Builder()\n           .setDeveloperModeEnabled(BuildConfig.DEBUG)\n           .build()\n   firebaseAnalytics = FirebaseAnalytics.getInstance(this)\n   firebaseRemoteConfig.setConfigSettings(configSettings)\n   firebaseRemoteConfig.setDefaults(R.xml.remote_config_defaults)\n   val token = FirebaseInstanceId.getInstance().getToken()\n   Log.i(javaClass.simpleName, \"token = ${token}\")\n   val cacheExpiration = 1L\n   Log.i(javaClass.simpleName,\"fetch\")\nfirebaseRemoteConfig.fetch(cacheExpiration).addOnCompleteListener(this)\n}\n```", "```kt\noverride fun onComplete(task: Task<Void>) {\n   if (task.*isSuccessful*){\n       Log.i(*javaClass*.*simpleName*, \"complete success\")\n       firebaseRemoteConfig.activateFetched()\n   }\n   else{\n       Log.i(*javaClass*.*simpleName*, \"complete no success\")\n   }\n   applyRemoteConfiguration()\n}\n```", "```kt\nprivate fun applyRemoteConfiguration(){\n   val variant = firebaseRemoteConfig.getString(\"experiment_variant\")\n   Log.i(javaClass.simpleName, \"experiment = ${variant}\")\n   firebaseAnalytics?.setUserProperty(\"Experiment\", variant)\n   val onboardingColor = firebaseRemoteConfig.getString(\"onboarding_color\")\n   Log.i(javaClass.simpleName, \"onboarding color= ${onboardingColor}\")\n   if (onboardingColor==\"blue\") {\nfindViewById(R.id.sign_up_button).setBackgroundColor(Color.parseColor(\"#0000ff\"))\n   }\n   else{\n       findViewById(R.id.sign_up_button).setBackgroundColor(Color.parseColor(\"#00ff00\"))\n   }\n   val onboardingText = firebaseRemoteConfig.getString(\"onboarding_text\")\n   Log.i(javaClass.simpleName, \"onboarding text= ${onboardingText}\")\n   (findViewById(R.id.sign_up_text) as TextView).text = onboardingText\n   val onboardingBackground = firebaseRemoteConfig.getString(\"onboarding_background\")\n   Log.i(javaClass.simpleName, \"onboarding bg= ${onboardingBackground}\")\n   if (onboardingBackground==\"strawberry\") {\n       (findViewById(R.id.image).setBackgroundResource(R.drawable.strawberry))\n   }\n   else{\n       (findViewById(R.id.image).setBackgroundResource(R.drawable.oranges))\n   }\n}\n```", "```kt\nprivate fun onSignup(){\n   logEvent(\"signUp\")\n   Log.i(javaClass.simpleName, \"sign up button clicked\")\n}\nprivate fun logEvent(eventName: String){\n   firebaseAnalytics?.logEvent(eventName, Bundle())\n}\n```", "```kt\n11-10 11:22:09.856 27547-27547/com.packt.splittestdemo I/MainActivity: token = cG-QulinNq0:APA91bH2lOQThh57qNseb3PDoBRDy-mPXvE_vezn1nNFBiDrWd0aâ€¦\n```"]