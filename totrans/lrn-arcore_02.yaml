- en: ARCore on Android
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android上的ARCore
- en: Google developed ARCore to be accessible from multiple development platforms
    (Android [Java], Web [JavaScript], Unreal [C++], and Unity [C#]), thus giving
    developers plenty of flexibility and options to build applications on various
    platforms. While each platform has its strengths and weaknesses, which we will
    get to later, all the platforms essentially extend from the native Android SDK
    that was originally built as Tango. This means that regardless of your choice
    of platform, you will need to install and be somewhat comfortable working with
    the Android development tools.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Google开发了ARCore，使其可以从多个开发平台（Android [Java]，Web [JavaScript]，Unreal [C++]，和Unity
    [C#]）访问，从而为开发者提供了大量的灵活性和选项，以便在各种平台上构建应用程序。虽然每个平台都有其优势和劣势，我们将在后面讨论，但所有平台本质上都扩展了最初作为Tango构建的本地Android
    SDK。这意味着无论你选择哪个平台，你都需要安装并熟悉使用Android开发工具。
- en: 'In this chapter, we will focus on setting up the Android development tools
    and building an ARCore application for Android. The following is a summary of
    the major topics we will cover in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将专注于设置Android开发工具和构建Android的ARCore应用程序。以下是本章我们将涵盖的主要主题摘要：
- en: Installing Android Studio
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Android Studio
- en: Installing ARCore
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装ARCore
- en: Build and deploy
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建和部署
- en: Exploring the code
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索代码
- en: If you have experience working with the Android tools and already have the SDK
    installed, you may want to just skim over the first three sections. Otherwise,
    be sure to follow along with the exercises in this chapter, as these steps will
    be required to undertake exercises in many other areas of this book.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经有经验使用Android工具并且已经安装了SDK，你可能只想快速浏览前三部分。否则，请确保跟随本章的练习，因为这些步骤将在本书的许多其他领域的练习中是必需的。
- en: At the time of writing, in order to perform any of the exercises in this book,
    you will need an ARCore-supported device. The list of supported devices can be
    found at [https://developers.google.com/ar/discover/#supported_devices](https://developers.google.com/ar/discover/#supported_devices).
    There has been some work done by others to add support for earlier devices, so
    if you have an unsupported device, that may be an option. You can find more details
    about the `ARCore for All` project at [https://github.com/tomthecarrot/arcore-for-all](https://github.com/tomthecarrot/arcore-for-all).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，为了执行本书中的任何练习，你需要一个支持ARCore的设备。支持设备的列表可以在[https://developers.google.com/ar/discover/#supported_devices](https://developers.google.com/ar/discover/#supported_devices)找到。其他人已经做了一些工作来支持早期设备，所以如果你有一个不支持设备，这可能是一个选择。你可以在[https://github.com/tomthecarrot/arcore-for-all](https://github.com/tomthecarrot/arcore-for-all)找到更多关于“ARCore
    for All”项目的详细信息。
- en: Installing Android Studio
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Android Studio
- en: 'Android Studio is a development environment for coding and deploying Android
    applications. As such, it contains the core set of tools we will need for building
    and deploying our applications to an Android device. After all, ARCore needs to
    be installed to a physical device in order to test. Follow the given instructions
    to install Android Studio for your development environment:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio是一个用于编码和部署Android应用程序的开发环境。因此，它包含了我们构建和部署应用程序到Android设备所需的核心工具集。毕竟，ARCore需要安装到物理设备上以便测试。按照以下说明在你的开发环境中安装Android
    Studio：
- en: Open a browser on your development computer to [https://developer.android.com/studio](https://developer.android.com/studio).
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的开发计算机上打开浏览器到[https://developer.android.com/studio](https://developer.android.com/studio)。
- en: Click on the green DOWNLOAD ANDROID STUDIO button.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击绿色的“下载Android Studio”按钮。
- en: Agree to the Terms and Conditionsand follow the instructions to download.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同意条款和条件并按照说明下载。
- en: After the file has finished downloading, run the installer for your system.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文件下载完成后，运行你的系统安装程序。
- en: 'Follow the instructions on the installation dialog to proceed. If you are installing
    on Windows, ensure that you set a memorable installation path that you can easily
    find later, as shown in the following example:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照安装对话框上的说明进行操作。如果你在Windows上安装，请确保设置一个容易记住的安装路径，以便稍后轻松找到，如下例所示：
- en: '![](img/456d1ec8-849f-4fbf-bfb2-5a40b076c018.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/456d1ec8-849f-4fbf-bfb2-5a40b076c018.png)'
- en: Setting the install path for Windows
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 设置Windows的安装路径
- en: Click through the remaining dialogs to complete the installation.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击剩余的对话框以完成安装。
- en: When the installation is complete, you will have the option to launch the program.
    Ensure that the option to launch Android Studio is selected and click on Finish.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，您将可以选择启动程序。确保选中启动 Android Studio 的选项，然后点击“完成”。
- en: Android Studio comes embedded with OpenJDK. This means we can omit the steps
    to installing Java, on Windows at least. If you are doing any serious Android
    development, again on Windows, then you should go through the steps on your own
    to install the full Java JDK 1.7 and/or 1.8, especially if you plan to work with
    older versions of Android.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio 内置了 OpenJDK。这意味着我们至少在 Windows 上可以省略安装 Java 的步骤。如果您在 Windows 上进行任何严肃的
    Android 开发，那么您应该自己执行步骤来安装完整的 Java JDK 1.7 和/或 1.8，尤其是如果您计划使用较旧的 Android 版本。
- en: On Windows, we will install everything to `C:\Android`; that way, we can have
    all the Android tools in one place. If you are using another OS, use a similar
    well-known path.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上，我们将把所有内容安装到 `C:\Android`；这样，我们可以把所有 Android 工具放在一个地方。如果您使用的是其他操作系统，请使用类似的已知路径。
- en: 'Now that we have Android Studio installed, we are not quite done. We still
    need to install the SDK tools that will be essential for building and deployment.
    Follow the instructions in the next exercise to complete the installation:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装了 Android Studio，但我们还没有完成。我们还需要安装构建和部署所必需的 SDK 工具。按照下一项练习中的说明完成安装：
- en: 'If you have not installed the Android SDK before, you will be prompted to install
    the SDK when Android Studio first launches, as shown:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您之前没有安装 Android SDK，那么当 Android Studio 首次启动时，您将被提示安装 SDK，如下所示：
- en: '![](img/ec9364dd-45ba-4320-9c48-7c2a7bc91582.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ec9364dd-45ba-4320-9c48-7c2a7bc91582.png)'
- en: Setting the SDK installation path for Windows
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为 Windows 设置 SDK 安装路径
- en: Select the SDK components and ensure that you set the installation path to a
    well-known location, again, as shown in the preceding screenshot.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 SDK 组件，并确保您将安装路径设置为已知位置，再次，如前一张截图所示。
- en: Leave the Welcome to Android Studio dialog open for now. We will come back to
    it in a later exercise.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目前请保持 Android Studio 欢迎对话框开启。我们将在稍后的练习中返回它。
- en: That completes the installation of Android Studio. In the next section, we will
    get into installing ARCore.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这样就完成了 Android Studio 的安装。在下一节中，我们将开始安装 ARCore。
- en: Installing ARCore
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 ARCore
- en: 'Of course, in order to work with or build any ARCore applications, we will
    need to install the SDK for our chosen platform. Follow the given instructions
    to install the ARCore SDK:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，为了使用或构建任何 ARCore 应用程序，我们需要为我们的选择平台安装 SDK。按照以下说明安装 ARCore SDK：
- en: 'We will use Git to pull down the code we need directly from the source. You
    can learn more about Git and how to install it on your platform at [https://git-scm.com/book/en/v2/Getting-Started-Installing-Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)
    or use Google to search: getting started installing Git. Ensure that when you
    install on Windows, you select the defaults and let the installer set the `PATH` environment
    variables.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Git 直接从源代码拉取所需的代码。您可以在 [https://git-scm.com/book/en/v2/Getting-Started-Installing-Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)
    上了解更多关于 Git 以及如何在您的平台上安装 Git 的信息，或者使用 Google 搜索：getting started installing Git。确保当您在
    Windows 上安装时，选择默认选项，并让安装程序设置 `PATH` 环境变量。
- en: Open Command Prompt or Windows shell and navigate to the Android (`C:\Android`
    on Windows) installation folder.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符或 Windows 命令行，导航到 Android (`C:\Android` 在 Windows 上) 安装文件夹。
- en: 'Enter the following command:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This will download and install the ARCore SDK into a new folder called `arcore-android-sdk`,
    as illustrated in the following screenshot:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将下载并安装 ARCore SDK 到一个名为 `arcore-android-sdk` 的新文件夹中，如下面的截图所示：
- en: '![](img/a1d8b719-9fd2-4611-954a-498f9313e07a.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a1d8b719-9fd2-4611-954a-498f9313e07a.png)'
- en: Command window showing the installation of ARCore
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 显示 ARCore 安装的命令窗口
- en: Ensure that you leave the command window open. We will be using it again later.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您保持命令窗口开启。我们稍后还会再次使用它。
- en: Installing the ARCore service on a device
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在设备上安装 ARCore 服务
- en: 'Now, with the ARCore SDK installed on our development environment, we can proceed
    with installing the ARCore service on our test device. Use the following steps
    to install the ARCore service on your device:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，随着 ARCore SDK 已安装在我们的开发环境中，我们可以继续在测试设备上安装 ARCore 服务。使用以下步骤在您的设备上安装 ARCore
    服务：
- en: 'NOTE: this step is only required when working with the Preview SDK of ARCore.
    When Google ARCore 1.0 is released you will not need to perform this step.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：此步骤仅在处理ARCore预览SDK时需要。当Google ARCore 1.0发布时，你将不需要执行此步骤。
- en: 'Grab your mobile device and enable the developer and debugging options by doing
    the following:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 拿起你的移动设备，通过以下步骤启用开发者调试选项：
- en: Opening the Settings app
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开设置应用
- en: Selecting the System
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“系统”
- en: Scrolling to the bottom and selecting About phone
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到页面底部并选择“关于手机”
- en: Scrolling again to the bottom and tapping on Build number seven times
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次滚动到页面底部并连续点击“构建号”七次
- en: Going back to the previous screen and selecting Developer options near the bottom
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到上一屏幕并选择底部的“开发者选项”
- en: Selecting USB debugging
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“USB调试”
- en: Download the ARCore service APK from [https://github.com/google-ar/arcore-android-sdk/releases/download/sdk-preview/arcore-preview.apk](https://github.com/google-ar/arcore-android-sdk/releases/download/sdk-preview/arcore-preview.apk)
    to the Android installation folder (`C:\Android`). Also note that this URL will
    likely change in the future.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://github.com/google-ar/arcore-android-sdk/releases/download/sdk-preview/arcore-preview.apk](https://github.com/google-ar/arcore-android-sdk/releases/download/sdk-preview/arcore-preview.apk)下载ARCore服务APK到Android安装文件夹（`C:\Android`）。此外，请注意，此URL可能会在未来发生变化。
- en: Connect your mobile device with a USB cable. If this is your first time connecting,
    you may have to wait several minutes for drivers to install. You will then be
    prompted to switch on the device to allow the connection. Select Allow to enable
    the connection.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用USB线连接你的移动设备。如果你是第一次连接，你可能需要等待几分钟以安装驱动程序。然后，你将被提示开启设备以允许连接。选择“允许”以启用连接。
- en: 'Go back to your Command Prompt or Windows shell and run the following command:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到命令提示符或Windows shell，并运行以下命令：
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: After the command is run, you will see the word `Success`. If you have encountered
    an error at this stage, ensure that you consult [Chapter 11](e7c0bdd1-e380-4498-af5a-fe9e627eb6cb.xhtml), *Performance
    Tips and Troubleshooting*, for more help.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 命令运行后，你会看到“成功”这个词。如果你在这一阶段遇到了错误，请确保查阅[第11章](e7c0bdd1-e380-4498-af5a-fe9e627eb6cb.xhtml)，*性能提示和故障排除*，以获取更多帮助。
- en: This completes the installation of ARCore for the Android platform. In the next
    section, we will build our first sample ARCore application.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这就完成了Android平台ARCore的安装。在下一节中，我们将构建我们的第一个ARCore示例应用。
- en: Build and deploy
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建和部署
- en: 'Now that we have all the tedious installation stuff out of the way, it''s time
    to build and deploy a sample app to your Android device. Let''s begin by jumping
    back to Android Studio and following the given steps:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了所有繁琐的安装步骤，是时候构建并部署一个示例应用到你的Android设备上了。让我们回到Android Studio，按照给定的步骤开始操作：
- en: Select the Open an existing Android Studio project option from the Welcome to
    Android Studio window. If you accidentally closed Android Studio, just launch
    it again.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Android Studio的欢迎窗口中选择“打开现有Android Studio项目”选项。如果你意外关闭了Android Studio，只需再次启动它。
- en: 'Navigate and select the `Android\arcore-android-sdk\samples\java_arcore_hello_ar`
    folder, as follows:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下步骤导航并选择`Android\arcore-android-sdk\samples\java_arcore_hello_ar`文件夹：
- en: '![](img/e8c3f8a9-e093-482f-b6aa-54ce1f658c46.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e8c3f8a9-e093-482f-b6aa-54ce1f658c46.png)'
- en: Selecting the ARCore sample project folder
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 选择ARCore示例项目文件夹
- en: 'Click on OK. If this is your first time running this project, you will encounter
    some dependency errors, such as the one here:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“确定”。如果你是第一次运行此项目，你可能会遇到一些依赖错误，例如这里所示：
- en: '![](img/5b68523d-de1c-406a-b0c9-7f0ab6bf80db.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5b68523d-de1c-406a-b0c9-7f0ab6bf80db.png)'
- en: Dependency error message
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖错误信息
- en: In order to resolve the errors, just click on the link at the bottom of the
    error message. This will open a dialog, and you will be prompted to accept and
    then download the required dependencies. Keep clicking on the links until you
    see no more errors.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了解决错误，只需点击错误信息底部的链接。这将打开一个对话框，你将被提示接受并下载所需的依赖项。继续点击链接，直到不再出现错误。
- en: Ensure that your mobile device is connected and then, from the menu, choose
    Run - Run. This should start the app on your device, but you may still need to
    resolve some dependency errors. Just remember to click on the links to resolve
    the errors.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你的移动设备已连接，然后从菜单中选择“运行”-“运行”。这应该在设备上启动应用，但你可能仍然需要解决一些依赖错误。只需记住点击链接来解决错误。
- en: This will open a small dialog. Select the app option. If you do not see the
    app option, select Build - Make Project from the menu. Again, resolve any dependency
    errors by clicking on the links.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开一个小对话框。选择应用选项。如果你看不到应用选项，从菜单中选择构建 - 构建项目。再次，通过点击链接解决任何依赖错误。
- en: '"Your patience will be rewarded."'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '"你的耐心将得到回报。"'
- en: '- Alton Brown'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '- 阿尔顿·布朗'
- en: 'Select your device from the next dialog and click on OK. This will launch the
    app on your device. Ensure that you allow the app to access the device''s camera.
    The following is a screenshot showing the app in action:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下一个对话框中选择你的设备并点击“确定”。这将启动你的设备上的应用。确保你允许应用访问设备的相机。以下是一个显示应用运行状态的截图：
- en: '![](img/d780081c-2bb6-4794-bf20-ff461c31bb5a.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d780081c-2bb6-4794-bf20-ff461c31bb5a.png)'
- en: Sample Android ARCore app running; the dog is real
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 运行中的示例 Android ARCore 应用；这只狗是真的
- en: Great, we have built and deployed our first Android ARCore app together. In
    the next section, we will take a quick look at the Java source code.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了，我们一起构建并部署了我们的第一个 Android ARCore 应用。在下一节中，我们将快速查看 Java 源代码。
- en: Exploring the code
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索代码
- en: 'Now, let''s take a closer look at the main pieces of the app by digging into
    the source code. Follow the given steps to open the app''s code in Android Studio:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过深入研究源代码来更仔细地查看应用的主要部分。按照以下步骤在 Android Studio 中打开应用的代码：
- en: 'From the Project window, find and double-click on the `HelloArActivity`, as
    shown:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从项目窗口中，找到并双击`HelloArActivity`，如图所示：
- en: '![](img/f01603f2-f3bb-447d-a53f-172d55280efb.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f01603f2-f3bb-447d-a53f-172d55280efb.png)'
- en: HelloArActivity shown in the Project window
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 项目窗口中显示的HelloArActivity
- en: 'After the source is loaded, scroll through the code to the following section:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在源代码加载后，滚动到以下部分：
- en: '[PRE2]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note the highlighted text—**`"Searching for surfaces.."`**. Select this text
    and change it to **`"Searching for ARCore surfaces.."`**. The `showLoadingMessage`
    function is a helper for displaying the loading message. Internally, this function
    calls `runOnUIThread`, which in turn creates a new instance of `Runnable` and
    then adds an internal `run` function. We do this to avoid thread blocking on the
    UI, a major no-no. Inside the `run` function is where the messaging is set and
    the message `Snackbar` is displayed.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意高亮显示的文本——**`"Searching for surfaces.."`**。选择此文本并将其更改为**`"Searching for ARCore
    surfaces.."`**。`showLoadingMessage`函数是一个用于显示加载信息的辅助函数。内部，这个函数调用`runOnUIThread`，它反过来创建一个新的`Runnable`实例，然后添加一个内部的`run`函数。我们这样做是为了避免在
    UI 上阻塞线程，这是一个大忌。在`run`函数内部设置消息，并显示消息`Snackbar`。
- en: From the menu, select Run - Run 'app' to start the app on your device. Of course,
    ensure that your device is connected by USB.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从菜单中选择运行 - 运行 'app' 以在设备上启动应用。当然，确保你的设备通过 USB 连接。
- en: Run the app on your device and confirm that the message has changed.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的设备上运行应用并确认消息已更改。
- en: Great, now we have a working app with some of our own code. This certainly isn't
    a leap, but it's helpful to walk before we run. At this point, go back and review
    the code, paying special attention to the comments and flow. If you have never
    developed an Android app, the code may look quite intimidating, and it is. Not
    to worry, we will deconstruct and reuse several elements of this sample app in
    [Chapter 5](3bd45362-4747-4f1c-a313-d6ccf5f6b8fc.xhtml), *Real-World Motion Tracking*,
    and [Chapter 6](8390414c-80b0-413c-bcec-cfdad3f7ad5d.xhtml), *Understanding the
    Environment.*
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了，现在我们有一个包含我们自己的代码的工作应用。这当然不是飞跃，但在跑之前先走一走是有帮助的。在这个阶段，返回并审查代码，特别注意注释和流程。如果你从未开发过
    Android 应用，代码可能看起来相当令人畏惧，确实如此。不必担心，我们将在第 5 章[现实世界运动跟踪](3bd45362-4747-4f1c-a313-d6ccf5f6b8fc.xhtml)和第
    6 章[理解环境](8390414c-80b0-413c-bcec-cfdad3f7ad5d.xhtml)中分解并重用这个示例应用的一些元素。
- en: Summary
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we started our exploration of ARCore by building and deploying
    an AR app for the Android platform. We did this by first installing Android Studio,
    which will be our go-to **Integrated Development Environment** (**IDE**) for Android
    development. Then, we installed the ARCore SDK and ARCore service onto our test
    mobile device. Next, we loaded up the sample ARCore app and patiently installed
    the various required build and deploy dependencies. After a successful build,
    we deployed the app to our device and tested. Finally, we tested making a minor
    code change and then deployed another version of the app. Doing this assured us
    that our Android development environment was fully functional, and we are now
    ready to proceed to the rest of the book.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们通过为Android平台构建和部署一个AR应用开始了对ARCore的探索。我们首先安装了Android Studio，这将成为我们Android开发的**集成开发环境**（**IDE**）。然后，我们在测试移动设备上安装了ARCore
    SDK和ARCore服务。接下来，我们加载了示例ARCore应用，并耐心地安装了各种所需的构建和部署依赖项。在成功构建后，我们将应用部署到我们的设备上并进行了测试。最后，我们测试了对代码进行微小修改后再次部署应用。这样做确保了我们的Android开发环境完全可用，我们现在可以继续阅读本书的其余部分。
- en: Our journey continues in the next chapter, where we will build and deploy an
    ARCore app with the Unity platform. Unity is a leading free/commercial game engine
    we will use for our final project in [Chapter 10](6a8f64fb-080f-47a2-9565-4099269831b1.xhtml), *Mixing
    in Mixed Reality*.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的故事将在下一章继续，我们将使用Unity平台构建和部署一个ARCore应用。Unity是一个领先的免费/商业游戏引擎，我们将在第10章[混合现实混合](6a8f64fb-080f-47a2-9565-4099269831b1.xhtml)的最终项目中使用。
