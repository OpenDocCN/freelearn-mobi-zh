- en: ARCore on Android
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Google developed ARCore to be accessible from multiple development platforms
    (Android [Java], Web [JavaScript], Unreal [C++], and Unity [C#]), thus giving
    developers plenty of flexibility and options to build applications on various
    platforms. While each platform has its strengths and weaknesses, which we will
    get to later, all the platforms essentially extend from the native Android SDK
    that was originally built as Tango. This means that regardless of your choice
    of platform, you will need to install and be somewhat comfortable working with
    the Android development tools.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will focus on setting up the Android development tools
    and building an ARCore application for Android. The following is a summary of
    the major topics we will cover in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Installing Android Studio
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing ARCore
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build and deploy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring the code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you have experience working with the Android tools and already have the SDK
    installed, you may want to just skim over the first three sections. Otherwise,
    be sure to follow along with the exercises in this chapter, as these steps will
    be required to undertake exercises in many other areas of this book.
  prefs: []
  type: TYPE_NORMAL
- en: At the time of writing, in order to perform any of the exercises in this book,
    you will need an ARCore-supported device. The list of supported devices can be
    found at [https://developers.google.com/ar/discover/#supported_devices](https://developers.google.com/ar/discover/#supported_devices).
    There has been some work done by others to add support for earlier devices, so
    if you have an unsupported device, that may be an option. You can find more details
    about the `ARCore for All` project at [https://github.com/tomthecarrot/arcore-for-all](https://github.com/tomthecarrot/arcore-for-all).
  prefs: []
  type: TYPE_NORMAL
- en: Installing Android Studio
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Android Studio is a development environment for coding and deploying Android
    applications. As such, it contains the core set of tools we will need for building
    and deploying our applications to an Android device. After all, ARCore needs to
    be installed to a physical device in order to test. Follow the given instructions
    to install Android Studio for your development environment:'
  prefs: []
  type: TYPE_NORMAL
- en: Open a browser on your development computer to [https://developer.android.com/studio](https://developer.android.com/studio).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the green DOWNLOAD ANDROID STUDIO button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Agree to the Terms and Conditionsand follow the instructions to download.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After the file has finished downloading, run the installer for your system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Follow the instructions on the installation dialog to proceed. If you are installing
    on Windows, ensure that you set a memorable installation path that you can easily
    find later, as shown in the following example:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/456d1ec8-849f-4fbf-bfb2-5a40b076c018.png)'
  prefs: []
  type: TYPE_IMG
- en: Setting the install path for Windows
  prefs: []
  type: TYPE_NORMAL
- en: Click through the remaining dialogs to complete the installation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When the installation is complete, you will have the option to launch the program.
    Ensure that the option to launch Android Studio is selected and click on Finish.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Android Studio comes embedded with OpenJDK. This means we can omit the steps
    to installing Java, on Windows at least. If you are doing any serious Android
    development, again on Windows, then you should go through the steps on your own
    to install the full Java JDK 1.7 and/or 1.8, especially if you plan to work with
    older versions of Android.
  prefs: []
  type: TYPE_NORMAL
- en: On Windows, we will install everything to `C:\Android`; that way, we can have
    all the Android tools in one place. If you are using another OS, use a similar
    well-known path.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we have Android Studio installed, we are not quite done. We still
    need to install the SDK tools that will be essential for building and deployment.
    Follow the instructions in the next exercise to complete the installation:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have not installed the Android SDK before, you will be prompted to install
    the SDK when Android Studio first launches, as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ec9364dd-45ba-4320-9c48-7c2a7bc91582.png)'
  prefs: []
  type: TYPE_IMG
- en: Setting the SDK installation path for Windows
  prefs: []
  type: TYPE_NORMAL
- en: Select the SDK components and ensure that you set the installation path to a
    well-known location, again, as shown in the preceding screenshot.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Leave the Welcome to Android Studio dialog open for now. We will come back to
    it in a later exercise.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That completes the installation of Android Studio. In the next section, we will
    get into installing ARCore.
  prefs: []
  type: TYPE_NORMAL
- en: Installing ARCore
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Of course, in order to work with or build any ARCore applications, we will
    need to install the SDK for our chosen platform. Follow the given instructions
    to install the ARCore SDK:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We will use Git to pull down the code we need directly from the source. You
    can learn more about Git and how to install it on your platform at [https://git-scm.com/book/en/v2/Getting-Started-Installing-Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)
    or use Google to search: getting started installing Git. Ensure that when you
    install on Windows, you select the defaults and let the installer set the `PATH` environment
    variables.'
  prefs: []
  type: TYPE_NORMAL
- en: Open Command Prompt or Windows shell and navigate to the Android (`C:\Android`
    on Windows) installation folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This will download and install the ARCore SDK into a new folder called `arcore-android-sdk`,
    as illustrated in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a1d8b719-9fd2-4611-954a-498f9313e07a.png)'
  prefs: []
  type: TYPE_IMG
- en: Command window showing the installation of ARCore
  prefs: []
  type: TYPE_NORMAL
- en: Ensure that you leave the command window open. We will be using it again later.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Installing the ARCore service on a device
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, with the ARCore SDK installed on our development environment, we can proceed
    with installing the ARCore service on our test device. Use the following steps
    to install the ARCore service on your device:'
  prefs: []
  type: TYPE_NORMAL
- en: 'NOTE: this step is only required when working with the Preview SDK of ARCore.
    When Google ARCore 1.0 is released you will not need to perform this step.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Grab your mobile device and enable the developer and debugging options by doing
    the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Opening the Settings app
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Selecting the System
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Scrolling to the bottom and selecting About phone
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Scrolling again to the bottom and tapping on Build number seven times
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Going back to the previous screen and selecting Developer options near the bottom
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Selecting USB debugging
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Download the ARCore service APK from [https://github.com/google-ar/arcore-android-sdk/releases/download/sdk-preview/arcore-preview.apk](https://github.com/google-ar/arcore-android-sdk/releases/download/sdk-preview/arcore-preview.apk)
    to the Android installation folder (`C:\Android`). Also note that this URL will
    likely change in the future.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect your mobile device with a USB cable. If this is your first time connecting,
    you may have to wait several minutes for drivers to install. You will then be
    prompted to switch on the device to allow the connection. Select Allow to enable
    the connection.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Go back to your Command Prompt or Windows shell and run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: After the command is run, you will see the word `Success`. If you have encountered
    an error at this stage, ensure that you consult [Chapter 11](e7c0bdd1-e380-4498-af5a-fe9e627eb6cb.xhtml), *Performance
    Tips and Troubleshooting*, for more help.
  prefs: []
  type: TYPE_NORMAL
- en: This completes the installation of ARCore for the Android platform. In the next
    section, we will build our first sample ARCore application.
  prefs: []
  type: TYPE_NORMAL
- en: Build and deploy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we have all the tedious installation stuff out of the way, it''s time
    to build and deploy a sample app to your Android device. Let''s begin by jumping
    back to Android Studio and following the given steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Select the Open an existing Android Studio project option from the Welcome to
    Android Studio window. If you accidentally closed Android Studio, just launch
    it again.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Navigate and select the `Android\arcore-android-sdk\samples\java_arcore_hello_ar`
    folder, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e8c3f8a9-e093-482f-b6aa-54ce1f658c46.png)'
  prefs: []
  type: TYPE_IMG
- en: Selecting the ARCore sample project folder
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on OK. If this is your first time running this project, you will encounter
    some dependency errors, such as the one here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5b68523d-de1c-406a-b0c9-7f0ab6bf80db.png)'
  prefs: []
  type: TYPE_IMG
- en: Dependency error message
  prefs: []
  type: TYPE_NORMAL
- en: In order to resolve the errors, just click on the link at the bottom of the
    error message. This will open a dialog, and you will be prompted to accept and
    then download the required dependencies. Keep clicking on the links until you
    see no more errors.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure that your mobile device is connected and then, from the menu, choose
    Run - Run. This should start the app on your device, but you may still need to
    resolve some dependency errors. Just remember to click on the links to resolve
    the errors.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This will open a small dialog. Select the app option. If you do not see the
    app option, select Build - Make Project from the menu. Again, resolve any dependency
    errors by clicking on the links.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '"Your patience will be rewarded."'
  prefs: []
  type: TYPE_NORMAL
- en: '- Alton Brown'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select your device from the next dialog and click on OK. This will launch the
    app on your device. Ensure that you allow the app to access the device''s camera.
    The following is a screenshot showing the app in action:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d780081c-2bb6-4794-bf20-ff461c31bb5a.png)'
  prefs: []
  type: TYPE_IMG
- en: Sample Android ARCore app running; the dog is real
  prefs: []
  type: TYPE_NORMAL
- en: Great, we have built and deployed our first Android ARCore app together. In
    the next section, we will take a quick look at the Java source code.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, let''s take a closer look at the main pieces of the app by digging into
    the source code. Follow the given steps to open the app''s code in Android Studio:'
  prefs: []
  type: TYPE_NORMAL
- en: 'From the Project window, find and double-click on the `HelloArActivity`, as
    shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f01603f2-f3bb-447d-a53f-172d55280efb.png)'
  prefs: []
  type: TYPE_IMG
- en: HelloArActivity shown in the Project window
  prefs: []
  type: TYPE_NORMAL
- en: 'After the source is loaded, scroll through the code to the following section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Note the highlighted text—**`"Searching for surfaces.."`**. Select this text
    and change it to **`"Searching for ARCore surfaces.."`**. The `showLoadingMessage`
    function is a helper for displaying the loading message. Internally, this function
    calls `runOnUIThread`, which in turn creates a new instance of `Runnable` and
    then adds an internal `run` function. We do this to avoid thread blocking on the
    UI, a major no-no. Inside the `run` function is where the messaging is set and
    the message `Snackbar` is displayed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the menu, select Run - Run 'app' to start the app on your device. Of course,
    ensure that your device is connected by USB.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the app on your device and confirm that the message has changed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Great, now we have a working app with some of our own code. This certainly isn't
    a leap, but it's helpful to walk before we run. At this point, go back and review
    the code, paying special attention to the comments and flow. If you have never
    developed an Android app, the code may look quite intimidating, and it is. Not
    to worry, we will deconstruct and reuse several elements of this sample app in
    [Chapter 5](3bd45362-4747-4f1c-a313-d6ccf5f6b8fc.xhtml), *Real-World Motion Tracking*,
    and [Chapter 6](8390414c-80b0-413c-bcec-cfdad3f7ad5d.xhtml), *Understanding the
    Environment.*
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we started our exploration of ARCore by building and deploying
    an AR app for the Android platform. We did this by first installing Android Studio,
    which will be our go-to **Integrated Development Environment** (**IDE**) for Android
    development. Then, we installed the ARCore SDK and ARCore service onto our test
    mobile device. Next, we loaded up the sample ARCore app and patiently installed
    the various required build and deploy dependencies. After a successful build,
    we deployed the app to our device and tested. Finally, we tested making a minor
    code change and then deployed another version of the app. Doing this assured us
    that our Android development environment was fully functional, and we are now
    ready to proceed to the rest of the book.
  prefs: []
  type: TYPE_NORMAL
- en: Our journey continues in the next chapter, where we will build and deploy an
    ARCore app with the Unity platform. Unity is a leading free/commercial game engine
    we will use for our final project in [Chapter 10](6a8f64fb-080f-47a2-9565-4099269831b1.xhtml), *Mixing
    in Mixed Reality*.
  prefs: []
  type: TYPE_NORMAL
