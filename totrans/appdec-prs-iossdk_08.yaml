- en: Chapter 8. Using Cloud Functions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章 使用云函数
- en: In application development, all the processes cannot be executed on the client
    side. So it's recommended to execute such processes on the cloud end. Parse allows
    users to develop a mobile app, bypassing the server-side coding and management.
    While developing complex applications, users want some business logic to not be
    executed on the client end. So for such applications, Parse provides the Parse
    Cloud, where you can deploy your custom logic, which can be accessed by your application.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序开发中，并非所有过程都可以在客户端执行。因此，建议在云端执行此类过程。Parse允许用户开发移动应用程序，绕过服务器端编码和管理。在开发复杂应用程序时，用户希望某些业务逻辑不在客户端执行。因此，对于此类应用程序，Parse提供了Parse
    Cloud，您可以在其中部署自定义逻辑，该逻辑可以通过您的应用程序访问。
- en: The cloud code is required to be written in JavaScript language. The difference
    would be the place of execution; cloud code will be executed on the Parse Cloud
    rather than executing on the mobile device. Once the cloud code is updated, it's
    available for use across all mobile environments instantly. Such features help
    you to change application behavior instantly with ease. In this chapter, we will
    learn about the implementation of the cloud code and its usage on the mobile end.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 云代码必须用JavaScript语言编写。区别在于执行位置；云代码将在Parse Cloud上执行，而不是在移动设备上执行。一旦云代码更新，它将立即对所有移动环境可用。这些功能可以帮助您轻松地即时更改应用程序的行为。在本章中，我们将学习云代码的实现及其在移动端的用法。
- en: The cloud code
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云代码
- en: Before getting started with the cloud code, you need to set up the Parse command
    line tool. This tool will help you to manage and deploy your code on the cloud.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用云代码之前，您需要设置Parse命令行工具。此工具将帮助您管理和部署代码到云上。
- en: Installing the command-line tool
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装命令行工具
- en: 'To install the Parse command-line tool on a Mac/Linux environment, you need
    to execute the following command in your terminal window:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Mac/Linux环境中安装Parse命令行工具，您需要在终端窗口中执行以下命令：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The previous line of code will install a tool named `parse` to the`/usr/local/bin/parse`
    directory. To uninstall, you just need to delete the file, as it does not have
    any junk files installed with it.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码行将在`/usr/local/bin/parse`目录下安装一个名为`parse`的工具。要卸载，只需删除文件即可，因为它没有安装任何垃圾文件。
- en: Setting up the cloud code
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置云代码
- en: To set up the cloud code, create a directory where you want to save your cloud
    code. It's recommended to keep the cloud code in your project workspace.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置云代码，创建一个您想要保存云代码的目录。建议将云代码保存在您的项目工作区中。
- en: 'The command `parse new` creates a new directory for you, and prompts for the
    selection of the application for which you are creating the cloud code:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 命令`parse new`为您创建一个新的目录，并提示选择您要为它创建云代码的应用程序：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You need to use the e-mail ID and password of the Parse account to log in.
    In case of the `OAuth` login, you need to set a new password from your Parse settings
    to set up the cloud code. After successful execution of the previous command,
    the following file structure will be created for you:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要使用Parse账户的电子邮件地址和密码进行登录。如果使用`OAuth`登录，您需要从Parse设置中设置新密码以设置云代码。在成功执行前面的命令后，将为您创建以下文件结构：
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The explanation of the files mentioned in the preceding section is as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对前面提到的文件的说明：
- en: The JSON file in the `config` directory should not be edited, it's for Parse
    use
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config`目录中的JSON文件不应被编辑，它是供Parse使用的'
- en: The `cloud` directory is the place where you will store your cloud code
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cloud`目录是您存储云代码的地方'
- en: Initially the `config` folder will contain `main.js`, which holds your cloud
    functions
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始时，`config`文件夹将包含`main.js`，它包含您的云函数
- en: The `public` directory will hold the static data content for hosting on Parse
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`public`目录将包含用于在Parse上托管静态数据内容的静态数据'
- en: Creating the cloud function
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建云函数
- en: 'To create the function on the cloud, you need to add the function to your `cloud`/`main.js`
    file. Let''s take an example of the `cloud` function:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要在云上创建函数，您需要将函数添加到您的`cloud`/`main.js`文件中。以下是一个`cloud`函数的示例：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To deploy the code on the Parse Cloud, run the following command in your terminal:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的终端中运行以下命令以在Parse Cloud上部署代码：
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Once the function is deployed on the cloud, you can check the cloud code in
    your Parse application under the **Cloud Code** section. The deployed code should
    be published there. Now it's time to execute the cloud code on the mobile side.
    Parse provides you with the `callFunctionInBackground:withParameters:block:` method
    to execute the cloud code from the mobile end.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦函数部署到云端，你可以在Parse应用的**云代码**部分查看云代码。部署的代码应该在那里发布。现在，是时候在移动端执行云代码了。Parse为你提供了`callFunctionInBackground:withParameters:block:`方法，用于从移动端执行云代码。
- en: 'You will have to use the following code to execute the cloud code:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须使用以下代码来执行云代码：
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: So, in this section, we explored how to write and execute the cloud code.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本节中，我们探讨了如何编写和执行云代码。
- en: Hosting a website
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 托管一个网站
- en: 'It''s easy to host a website on Parse. All the files in your `public` directory
    will be hosted at `your-custom-subdomain.parseapp.com`. The following code will
    illustrate a way to host your site on the Parse Cloud. Open the terminal and execute
    the following code:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在Parse上托管一个网站非常简单。你`public`目录中的所有文件都将托管在`your-custom-subdomain.parseapp.com`。以下代码将展示如何在Parse
    Cloud上托管你的网站。打开终端并执行以下代码：
- en: '[PRE6]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The previous line of code will add `Hello World` in your `index.html` file and
    with the `deploy` command your code will be deployed to the Parse Cloud.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 上一行代码将在您的`index.html`文件中添加`Hello World`，并且使用`deploy`命令，您的代码将被部署到Parse云端。
- en: To update your subdomain, navigate to the **Web Hosting** section of your app's
    setting. In the field of **ParseApp name**, provide a unique name, and all your
    website files will be available at `your-custom-subdomain.parseapp.com`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新您的子域名，请导航到您应用设置的**Web Hosting**部分。在**ParseApp名称**字段中提供唯一的名称，您的所有网站文件都将可在`your-custom-subdomain.parseapp.com`上访问。
- en: Understanding complex functions
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解复杂函数
- en: 'The cloud code is important to reduce the computation on the client side. Let''s
    say, your application requires the average marks of students associated with the
    MBA course. The `Marks` object will look as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 云端代码对于减少客户端的计算量非常重要。比如说，如果你的应用程序需要计算与MBA课程相关的学生的平均成绩。`Marks`对象将如下所示：
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In this case, you should not fetch a long list of data and filter that on the
    client side. You can add a Parse code for filtering the result and providing you
    with the resultant data. The following Parse Cloud code will help you to filter
    the data:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你不应该获取一个长的数据列表并在客户端进行过滤。你可以添加一个用于过滤结果并提供结果数据的Parse代码。以下Parse云端代码将帮助你进行数据过滤：
- en: '[PRE8]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'These are the following key points to note about the previous `Cloud` function:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是需要注意的关于前一个 `Cloud` 函数的要点：
- en: Define a `cloud` function, and a query on the `Marks` object
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义一个`cloud`函数，并对`Marks`对象进行查询
- en: Filter the `Marks` objects based on the `course` name provided in `params query.equalTo("course",
    request.params.course);`
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据在`params query`中提供的`course`名称过滤`Marks`对象`params.query.equalTo("course", request.params.course);`
- en: Then fetch the filtered data and return the average after completing the computation
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后获取过滤后的数据，在完成计算后返回平均值
- en: 'Now to fetch the data using the cloud code on the client side, you need to
    use the following code:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在要在客户端使用云代码获取数据，你需要使用以下代码：
- en: '[PRE9]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The previous code will invoke the `cloud` function with the name `averageMarks`,
    and with the `course` name `MBA` as a parameter. After successful execution of
    the cloud code, you will get `marks` as the response, which will hold the average
    marks of the students who are associated with the MBA course.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码将调用名为 `averageMarks` 的 `cloud` 函数，并将 `MBA` 课程名称作为参数。在云代码成功执行后，你将获得 `marks`
    作为响应，该响应将包含与 MBA 课程相关联的学生的平均分数。
- en: Using cloud on the saved code
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用云存储的代码
- en: 'In case of multiplatform mobile application development, the cloud code saves
    a lot of code to write on the client end. Suppose you have an iOS, Android, or
    Windows environment for application development, then in that case you can avoid
    coding validation on all environments by deploying a validation code on the cloud.
    The Cloud provides you with the `beforeSave` method. The following code will illustrate
    the usage:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在多平台移动应用开发的情况下，云代码可以节省在客户端编写的大量代码。假设您有一个用于应用开发的iOS、Android或Windows环境，那么在这种情况下，您可以通过在云上部署验证代码来避免在所有环境中进行编码验证。云为您提供`beforeSave`方法。以下代码将展示其用法：
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: By this method, Parse allows you to add your custom logic, which will be executed
    before saving the object on the Cloud. In this function you can add your validation
    code on the objects.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方法，Parse允许你在对象在云上保存之前添加自定义逻辑。在这个函数中，你可以在对象上添加验证代码。
- en: 'Likewise, Parse provides you with the `afterSave` method as well, which will
    help you to provide custom logic, which will be executed after saving the object:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，Parse也为你提供了`afterSave`方法，这将帮助你提供自定义逻辑，该逻辑将在对象保存后执行：
- en: '[PRE11]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The previous code will be executed after saving the object on the cloud. This
    method allows you to add custom logic, which will get executed after saving the
    object.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码将在对象在云上保存后执行。这种方法允许你添加自定义逻辑，该逻辑将在对象保存后执行。
- en: Using cloud on the deleted code
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在删除代码中使用云
- en: Just like saving, you can add the custom code, which will be executed before
    and after deleting any object from Parse. Parse provides you with the `beforeDelete`
    and `afterDelete` methods, which will help you to add your custom logic on these
    events.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 就像保存一样，你可以在删除任何对象之前和之后添加自定义代码。Parse为你提供了`beforeDelete`和`afterDelete`方法，这将帮助你在这些事件上添加自定义逻辑。
- en: 'The following code will illustrate the usage of the `beforeDelete` method.
    Similarly, you can use the `afterDelete` method as well:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将展示`beforeDelete`方法的用法。同样，你也可以使用`afterDelete`方法：
- en: '[PRE12]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Summary
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we explored the Parse Cloud code and its various implementations
    to simplify the application development on the mobile end.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们探讨了Parse云代码及其各种实现，以简化移动端的应用开发。
- en: We started by exploring the installation process of the command-line tool and
    then we saw the setup of the cloud code on Parse.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先探索了命令行工具的安装过程，然后我们看到了在Parse上设置云代码。
- en: We also learned about writing the cloud functions and their usage on the client
    side.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还学习了编写云函数及其在客户端的用法。
- en: Then, we learned about publishing our website on the cloud.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们学习了如何在云上发布我们的网站。
- en: Finally, we explored complex-case scenarios and implementations using the cloud.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们探讨了使用云的复杂场景和实现。
- en: In the next chapter, we will learn about error handling and security on Parse.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习关于Parse的错误处理和安全。
