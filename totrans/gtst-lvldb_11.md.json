["```swift\nvar levelup = require('levelup')\n// open a data store\nvar db = levelup('/tmp/testleveldb11_node.db')\n// a simple Put operation\ndb.put('name', 'William Bloggs', function (err) {\n  // a Batch operation made up of 3 Puts (after 1st Put finished)\n  db.batch([\n      { type: 'put', key: 'spouse', value: 'Josephine Bloggs' }\n    , { type: 'put', key: 'dog', value: 'Kilroy' }\n    , { type: 'put', key: 'occupation', value: Dev' }\n  ], function (err) {\n    // asynch after batch put finishes, another nest\n    // read store as a stream and print each entry to stdout\n    db.createReadStream()\n      .on('data', console.log)\n      .on('close', function () {\n        db.close()\n      })\n  })  // end of batch Put\n})  // end of top-level Put\n```", "```swift\nlibleveldb.a\nlibleveldb.dylib\nlibleveldb.dylib.1\nlibleveldb.1.12\n```", "```swift\n#!/usr/bin/env python\nimport leveldb\n\n# open a data store\ndb = leveldb.DB(\"/tmp/testleveldb11_py.db\",\n create_if_missing=True)\n\n# a simple Put operation\ndb.put('name', 'William Bloggs')\n\n# a Batch operation made up of 3 Puts\nb = db.newBatch()\ndb.putTo(b, key = 'spouse', val= 'Josephine Bloggs')\ndb.putTo(b, key = 'dog', val= 'Kilroy')\ndb.putTo(b, key = 'occupation', val= 'Dev')\ndb.write(b, sync=True)\ndb.close()\n```", "```swift\nfor k in db.keys(): \n  print k, db.get(k)\n```", "```swift\ndef testPutGet(self):\n    db = self.db_class(self.db_path, create_if_missing=True)\n    db.put(\"key1\", \"val1\")\n    db.put(\"key2\", \"val2\", sync=True)\n    self.assertEqual(db.get(\"key1\"), \"val1\")\n...\n    self.assertEqual(list(db.keys()), [\"key1\", \"key2\"])\n    self.assertEqual(list(db.keys(prefix=\"key\")), [\"1\", \"2\"])\n```", "```swift\nsudo gem install leveldb-ruby\n\n```", "```swift\nrequire 'leveldb'\n# open a data store\ndb = LevelDB::DB.new(\"/tmp/testleveldb11_ruby.db\")\n# a simple Put operation\ndb.put('name', 'William Bloggs')\ndb.put('spouse', 'Josephine Bloggs')\ndb.put('dog', 'Kilroy')\ndb.put('occupation', 'Dev')\ndb.close()\n```", "```swift\ndb.each do |k,v|\n  puts \"Key=#{k}, Value=#{v}\"\nend\n```", "```swift\ndb.batch do |b|\n  b.put 'spouse', 'Josephine Bloggs'\n  b.put 'dog', 'Kilroy'\n  b.delete 'name'\nend\n```"]