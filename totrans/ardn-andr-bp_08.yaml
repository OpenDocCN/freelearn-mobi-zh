- en: Chapter 8. Control an Arduino Board via NFC
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章 控制通过NFC的Arduino板
- en: In this chapter, we will see the capabilities of integrating the Arduino **Near
    Field Communications** (**NFC**) shield from Seeed Studio with an NFC-enabled
    Android application that uses the **Android Beam** technology to send a message
    from the Android app to the NFC shield antenna. NFC allows instant communication
    between two devices that are close to each other, which makes it the perfect technology
    to open door locks or for payment services.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看到将Arduino **近场通信**（**NFC**）盾牌从Seeed Studio集成到具有NFC功能的Android应用程序的能力，该应用程序使用**Android
    Beam**技术将消息从Android应用程序发送到NFC盾牌天线。NFC允许两个靠近的设备之间进行即时通信，这使得它成为打开门锁或支付服务的完美技术。
- en: We will make a home automation application in this chapter. The NFC shield will
    be connected to the Arduino Uno board, along with the relay. Therefore, we will
    be able to switch the relay on or off depending on the message sent by the Android
    application.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将制作一个智能家居应用程序。NFC盾牌将连接到Arduino Uno板，以及继电器。因此，我们将能够根据Android应用程序发送的消息切换继电器的开关。
- en: This baseline project will help you develop interesting projects that use NFC
    and will potentially expand the capabilities of such a project.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这个基线项目将帮助你开发使用NFC的有趣项目，并可能扩展此类项目的功能。
- en: 'The following will be the major takeaways from this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下将是本章的主要收获：
- en: Connecting an NFC shield to an Arduino board
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将NFC盾牌连接到Arduino板
- en: Building an Android app to communicate with the NFC Arduino shield
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个与NFC Arduino盾牌通信的Android应用程序
- en: Opening and closing a relay from an Android device via NFC
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过NFC从Android设备打开和关闭继电器
- en: Hardware and software requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 硬件和软件要求
- en: The first thing you will need for this project is an Arduino Uno board.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，你首先需要一块Arduino Uno板。
- en: Then, you need an NFC shield. There are many NFC shields available on the market,
    but for this project, we chose an NFC shield V2.0 from SeeedStudio. We made this
    choice as the shield has good documentation and because some example code was
    already available.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你需要一个NFC盾牌。市场上有很多NFC盾牌，但为了这个项目，我们选择了来自SeeedStudio的NFC盾牌V2.0。我们做出这个选择是因为该盾牌有良好的文档，并且因为已经有了一些示例代码可用。
- en: You will also need a relay module. For this project, we used a 5V relay module
    from Polulu.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要一个继电器模块。对于这个项目，我们使用了Polulu的5V继电器模块。
- en: Finally, to make the different electrical connections, you will need some jumper
    wires.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了进行不同的电气连接，你需要一些跳线。
- en: 'The following is the list of all hardware parts you will need for this project,
    along with links to find these parts on the Web:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是你将需要用于此项目的所有硬件组件列表，以及在网上找到这些组件的链接：
- en: The Arduino Uno board ([http://www.adafruit.com/product/50](http://www.adafruit.com/product/50))
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arduino Uno板（[http://www.adafruit.com/product/50](http://www.adafruit.com/product/50)）
- en: The 5V relay module ([http://www.pololu.com/product/2480](http://www.pololu.com/product/2480))
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 5V继电器模块（[http://www.pololu.com/product/2480](http://www.pololu.com/product/2480)）
- en: The Arduino NFC shield ([http://www.seeedstudio.com/depot/nfc-shield-v20-p-1370.html](http://www.seeedstudio.com/depot/nfc-shield-v20-p-1370.html))
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arduino NFC盾牌（[http://www.seeedstudio.com/depot/nfc-shield-v20-p-1370.html](http://www.seeedstudio.com/depot/nfc-shield-v20-p-1370.html)）
- en: The breadboard ([https://www.adafruit.com/product/64](https://www.adafruit.com/product/64))
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 面包板（[https://www.adafruit.com/product/64](https://www.adafruit.com/product/64)）
- en: Jumper wires ([https://www.adafruit.com/product/758](https://www.adafruit.com/product/758))
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跳线（[https://www.adafruit.com/product/758](https://www.adafruit.com/product/758)）
- en: 'On the software side, you will of course need the Arduino IDE. You will also
    need the following libraries to make the NFC chip work:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在软件方面，你当然需要Arduino IDE。你还需要以下库来使NFC芯片工作：
- en: First, download the PN532 library ([https://github.com/Seeed-Studio/PN532](https://github.com/Seeed-Studio/PN532))
    and put all the folders into your Arduino's `libraries` folder.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，下载PN532库（[https://github.com/Seeed-Studio/PN532](https://github.com/Seeed-Studio/PN532)），并将所有文件夹放入Arduino的`libraries`文件夹中。
- en: Then, download the NDEF library ([https://github.com/don/NDEF](https://github.com/don/NDEF)),
    and put it in your Arduino's `libraries` folder and rename the folder to `NDEF`.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，下载NDEF库（[https://github.com/don/NDEF](https://github.com/don/NDEF)），并将其放入Arduino的`libraries`文件夹中，并将文件夹重命名为`NDEF`。
- en: Configuring the hardware
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置硬件
- en: Now, let's assemble the project. The first step is to simply put the NFC shield
    on top of the Arduino Uno board, and to connect the NFC reader to the shield.
    Note that the NFC can come without the header being soldered; in this case, you
    will need to solder the headers on the shield yourself. To assemble the NFC reader
    to the shield, simply connect the reader via the antenna connector on the shield.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们组装项目。第一步是将NFC盾牌放在Arduino Uno板上，并将NFC读取器连接到盾牌。请注意，NFC可能没有焊接引脚；在这种情况下，您需要自己焊接盾牌上的引脚。要将NFC读取器连接到盾牌，只需通过盾牌上的天线连接器连接读取器即可。
- en: Now, let's connect the relay. Simply connect the relay module **VCC** pin to
    the 5V pin of the Arduino board, and the **GND** pin to the **GND** pin of the
    board. Finally, connect the **SIG** pin of the relay to pin number **8** of the
    Arduino board.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们连接继电器。只需将继电器模块的**VCC**引脚连接到Arduino板的5V引脚，将**GND**引脚连接到板的**GND**引脚。最后，将继电器的**SIG**引脚连接到Arduino板的**8**号引脚。
- en: 'The following is what you should end up with:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是你应该得到的结果：
- en: '![Configuring the hardware](img/0389OS_08_01.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![配置硬件](img/0389OS_08_01.jpg)'
- en: Testing the NFC shield
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试NFC盾牌
- en: 'Before writing the application to control the relay via NFC, we will first
    make sure that the shield is functional and that all the libraries were correctly
    installed. To do so, we will write a simple Arduino sketch. The following is the
    complete code for this part:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写通过NFC控制继电器的应用程序之前，我们首先确保盾牌功能正常，并且所有库都已正确安装。为此，我们将编写一个简单的Arduino草图。以下是这个部分的完整代码：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let''s now look at the details of this sketch. It starts by including the required
    libraries:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在看看这个草图的细节。它首先包含所需的库：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, we can create an instance of the NFC adapter with these two lines of
    code:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以使用这两行代码创建NFC适配器的实例：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now, in the `setup()` function of the sketch, we will initialize the serial
    communications:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在草图的`setup()`函数中，我们将初始化串行通信：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We will also start the NFC chip, and print a message on the serial monitor:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将启动NFC芯片，并在串行监视器上打印一条消息：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now, in the `loop()` function of the sketch, we will check if an NFC tag is
    present, and we will read it if this is the case:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在草图的`loop()`函数中，我们将检查是否存在NFC标签，如果是这样，我们将读取它：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that all the code for this chapter can be found in the GitHub repository
    of the book at [https://github.com/marcoschwartz/arduino-android-blueprints](https://github.com/marcoschwartz/arduino-android-blueprints).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，本书的GitHub仓库[https://github.com/marcoschwartz/arduino-android-blueprints](https://github.com/marcoschwartz/arduino-android-blueprints)中可以找到本章的所有代码。
- en: You can now upload the sketch to the Arduino board and open the serial monitor.
    You should see that the NFC chip is being initialized, and then it starts checking
    for available tags. If you have a simple NFC tag, you can test it now.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以将草图上传到Arduino板，并打开串行监视器。您应该看到NFC芯片正在初始化，然后它开始检查可用的标签。如果您有一个简单的NFC标签，您现在可以测试它了。
- en: As an example, you can also use a simple tag from SeeedStudio ([http://www.seeedstudio.com/depot/MifareOne-RFID-Tag-1356MHz-p-923.html](http://www.seeedstudio.com/depot/MifareOne-RFID-Tag-1356MHz-p-923.html)).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您也可以使用来自SeeedStudio的简单标签([http://www.seeedstudio.com/depot/MifareOne-RFID-Tag-1356MHz-p-923.html](http://www.seeedstudio.com/depot/MifareOne-RFID-Tag-1356MHz-p-923.html))。
- en: These kinds of tags are actually simpler than the actual RFID technology, but
    they will work just fine to test our project.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这些标签实际上比实际的RFID技术要简单，但它们足以测试我们的项目。
- en: Writing the Arduino sketch
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写Arduino草图
- en: We will now write the code that will receive commands from the Android NFC app.
    The goal of this code will be to switch the relay on or off when the NFC shield
    receives a given code from the Android device. As the code for this part is quite
    long, we will split the code into several parts that will be detailed individually.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将编写将接收来自Android NFC应用的命令的代码。此代码的目标是当NFC盾牌从Android设备接收到给定代码时切换继电器的开或关。由于这部分代码相当长，我们将将其分成几个部分，分别详细说明。
- en: 'The code starts by including the required libraries:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 代码首先包含所需的库：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We will also define on which pin the relay is connected:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将定义继电器连接的引脚：
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'After this, we will define the code that should be received from the Android
    app to switch the relay on or off:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将定义从Android应用接收的代码，以切换继电器的开或关：
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We will also need to create an instance of the NFC chip:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要创建NFC芯片的实例：
- en: '[PRE9]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To store data coming from the Android phone via NFC, we will create a `char`
    buffer:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要存储通过 NFC 从 Android 手机来的数据，我们将创建一个 `char` 缓冲区：
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In the `setup()` function of the sketch, we will start the serial communications:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在草图中的 `setup()` 函数中，我们将开始串行通信：
- en: '[PRE11]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We will also declare the relay pin as an output:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将声明继电器引脚为输出：
- en: '[PRE12]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, in the `loop()` function, we will constantly check for data coming from
    the phone via NFC:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在 `loop()` 函数中，我们将不断检查通过 NFC 从手机来的数据：
- en: '[PRE13]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now, if the message has a size different from zero, we store it, process it,
    and then check if it contains the correct key that we defined before. If this
    is the case, we will switch the state of the relay. The following piece of code
    does exactly the same:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果消息的大小不为零，我们将存储它，处理它，然后检查它是否包含我们之前定义的正确密钥。如果是这样，我们将切换继电器的状态。以下代码块正是执行相同的操作：
- en: '[PRE14]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note that all the code for this chapter can be found in the GitHub repository
    of the book at [https://github.com/marcoschwartz/arduino-android-blueprints](https://github.com/marcoschwartz/arduino-android-blueprints).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，本章的所有代码都可以在书的 GitHub 仓库中找到，网址为 [https://github.com/marcoschwartz/arduino-android-blueprints](https://github.com/marcoschwartz/arduino-android-blueprints)。
- en: You can now upload the code to the Arduino board, and move on to the development
    of the Android application.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以将代码上传到 Arduino 板，并继续开发 Android 应用程序。
- en: Setting up the Android app
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 Android 应用
- en: In this project, we will be implementing an Android app that leverages the use
    of the NFC API and hardware allowing us to send a MIME-type message to switch
    on and switch off the relay.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们将实现一个利用 NFC API 和硬件的 Android 应用，允许我们发送 MIME-type 消息来切换继电器的开关。
- en: 'We will assume that you will have switched on the `Auto-Import` function within
    your preferences. If not, activate it by going to the **Auto-Import** preferences
    and selecting all available options. The **Auto-Import** preferences are available
    on Mac and Windows as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设您已经在您的首选项中打开了 `自动导入` 功能。如果没有，请通过转到 **自动导入** 首选项并选择所有可用选项来激活它。**自动导入** 首选项在
    Mac 和 Windows 上的位置如下：
- en: On a Mac, navigate to **Android Studio** > **Preferences**| **Editor**| **Auto-Import**
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Mac 上，导航到 **Android Studio** > **首选项**| **编辑器**| **自动导入**
- en: On Windows, navigate to **File** | **Settings** > **Editor** > **Auto-Import**
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 上，导航到 **文件** | **设置** > **编辑器** > **自动导入**
- en: 'With all the necessary settings in place, we will first start off by creating
    a new project, where we will choose the following within the **New Project** setup:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有必要的设置到位后，我们首先创建一个新的项目，在 **New Project** 设置中，我们将选择以下内容：
- en: '**Name**: `Arduino NFC`'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名称**：`Arduino NFC`'
- en: '**Minimum SDK**: `18`'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最小 SDK**：`18`'
- en: '**Project**: `Blank Activity`'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目**：`Blank Activity`'
- en: '**Activity Name**: MainScreen'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**活动名称**：MainScreen'
- en: '**Domain**: `arduinoandroid.com`'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**域名**：`arduinoandroid.com`'
- en: In order to make this project work, we will need to first go over to the Android
    `Manifest` file, which is available at `app` > `src` > `main` > `AndroidManifest.xml`.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使这个项目工作，我们首先需要转到 Android 的 `Manifest` 文件，该文件位于 `app` > `src` > `main` > `AndroidManifest.xml`。
- en: Laying out the Android user interface and permissions
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 布局 Android 用户界面和权限
- en: 'Once we open the file, we need to add permissions for the Android application
    to be able to access the NFC hardware. We will need to add the following two lines
    of code to our `AndroidManifest.xml` file in order to access both the user permissions
    and the actual NFC hardware:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们打开文件，我们需要添加权限，以便 Android 应用能够访问 NFC 硬件。我们需要在我们的 `AndroidManifest.xml` 文件中添加以下两行代码，以便访问用户权限和实际
    NFC 硬件：
- en: '[PRE15]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The next step is to set up the basic Android layout file. This will allow us
    to implement a user interface consisting of two buttons (switch on and off) and
    a text view.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是设置基本的 Android 布局文件。这将允许我们实现一个由两个按钮（开关）和一个文本视图组成用户界面。
- en: The text within the TextView will be the message that we will be sending to
    our NFC shield. The first step will be to navigate to the Android layout file,
    which is available at `app` > `src` > `res` > `layout` > `activity_nfc.xml`.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: TextView 中的文本将是我们将发送到我们的 NFC 防护罩的消息。第一步是导航到 Android 布局文件，该文件位于 `app` > `src`
    > `res` > `layout` > `activity_nfc.xml`。
- en: 'Once we are within this layout file, we will switch to the text view of the
    Android layout file, and we will replace the current code with the following lines
    of code:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们在这个布局文件中，我们将切换到 Android 布局文件的文本视图，并将当前代码替换为以下代码行：
- en: '[PRE16]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'At this point, we should have something that looks as follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们应该有一个如下所示的东西：
- en: '![Laying out the Android user interface and permissions](img/0389OS_08_02.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![布局 Android 用户界面和权限](img/0389OS_08_02.jpg)'
- en: Coding the app's internals
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写应用程序的内部代码
- en: We will then move on to the `MainScreen.java` file, which is available at `app`
    > `src` > `main` > `java` > `package name` > `NFCActivity.java`.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将转到 `MainScreen.java` 文件，该文件位于 `app` > `src` > `main` > `java` > `package
    name` > `NFCActivity.java`。
- en: We will implement the project step by step within our code. Don't worry about
    importing the right statements for our project, as Android Studio will automatically
    import all the statements that we will need for our project if you have the **Auto-Import**
    function switched on. If not, please follow the instructions present in the Android
    section of this chapter.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将逐步在我们的代码中实现项目。请不要担心导入正确的语句，因为如果你开启了 **Auto-Import** 功能，Android Studio 将会自动导入我们项目所需的所有语句。如果没有，请按照本章
    Android 部分的说明操作。
- en: Feel free to follow along the project through the GitHub Repository where all
    the source code is available for the readers of our book in its entirety. The
    repository for this chapter is available at [https://github.com/marcoschwartz/arduino-android-blueprints/tree/master/chapter8/ArduinoNFC](https://github.com/marcoschwartz/arduino-android-blueprints/tree/master/chapter8/ArduinoNFC).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎您通过 GitHub 仓库跟随项目，其中包含了本书读者的所有源代码。本章的仓库地址为 [https://github.com/marcoschwartz/arduino-android-blueprints/tree/master/chapter8/ArduinoNFC](https://github.com/marcoschwartz/arduino-android-blueprints/tree/master/chapter8/ArduinoNFC)。
- en: 'We will first start off by declaring the user interface''s variables and the
    necessary variables to get the NFC up and running:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先声明用户界面的变量以及启动 NFC 所必需的变量：
- en: '[PRE17]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Within the `onCreate` method, we will implement a number of anonymous classes
    that we will go through step by step.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `onCreate` 方法中，我们将实现多个匿名类，我们将逐步介绍它们。
- en: 'In the first part, we will connect the user interface elements to the main
    Android code:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一部分，我们将连接用户界面元素到主要的 Android 代码：
- en: '[PRE18]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Then, in the following code, we need to set `onClickListeners` to our button
    to be able to change the `TextView` part to the right text to beam the message
    to our NFC shield. The term *beam* is used in this code section since **Android
    Beam** is the feature of the Android mobile operating system that allows data
    to be transferred via NFC.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在下面的代码中，我们需要将 `onClickListeners` 设置到我们的按钮上，以便能够将 `TextView` 部分更改为正确的文本，以便通过我们的
    NFC 防护罩发送消息。在这个代码部分使用术语 *beam*，因为 **Android Beam** 是 Android 移动操作系统的功能，允许通过 NFC
    传输数据。
- en: '[PRE19]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'In order to enhance the user experience, we need to send a message to the users
    that they are unable to use this Android application as they don''t have NFC enabled
    on their device:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提升用户体验，我们需要向用户发送消息，告知他们无法使用这个 Android 应用程序，因为他们设备上没有启用 NFC：
- en: '[PRE20]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'In the `onCreate()` method, we will also implement our basic NFC callback functions
    to be able to send and receive a message via NFC:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `onCreate()` 方法中，我们还将实现基本的 NFC 回调函数，以便能够通过 NFC 发送和接收消息：
- en: '[PRE21]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We need to also implement a method known as `Handler`, which will notify the
    user via the NFC status text view as to whether the message has been beamed or
    not:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要实现一个名为 `Handler` 的方法，该方法将通过 NFC 状态文本视图通知用户消息是否已通过 NFC 发送：
- en: '[PRE22]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'For the sake of completeness, we will also include the necessary methods to
    be able to read NDEF messages sent via NFC and to improve app performance by not
    including a number of different instances within the application:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完整性，我们还将包括必要的读取通过 NFC 发送的 NDEF 消息的方法，并通过不在应用程序中包含多个实例来提高应用程序的性能：
- en: '[PRE23]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Once you have included all the methods, you should be able to build the app
    and run it on your Android physical device with NFC capabilities, running Android
    4.3 or higher, and with Android Beam activated within the settings.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦包含了所有的方法，你应该能够构建应用程序，并在具有 NFC 功能的 Android 物理设备上运行它，该设备运行 Android 4.3 或更高版本，并且设置中已激活
    Android Beam。
- en: You can switch on the relay by tapping the **Switch On** button and, holding
    the phone against the NFC shield for at least 5 to 10 seconds, and the user interface
    will get smaller in size. At this point, you need to tap again on the user interface
    to send your message.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过点击 **开关** 按钮来开启中继，并将手机至少对准 NFC 防护罩 5 到 10 秒，此时用户界面将缩小。在此之后，你需要再次点击用户界面来发送你的消息。
- en: How to go further
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何进一步学习
- en: This project focused mainly on using NFC to transmit a message and have it read
    by the Arduino NFC shield.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目主要关注使用 NFC 传输消息，并由 Arduino NFC 防护罩读取。
- en: The ideal user experience would be the user merely tapping the phone against
    the NFC shield and switching on the light. This could be achieved via **Host-Card
    Emulation** or with further modification of this baseline project.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 理想的用户体验将是用户只需将手机轻触NFC屏蔽器并打开灯光。这可以通过**主机卡仿真**或进一步修改此基础项目来实现。
- en: Summary
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned the basic essentials of setting an NFC-enabled Android
    app. This app communicates with Arduino using the NFC shield and the NFC capabilities
    of Android 4.3 and higher.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了设置NFC功能Android应用的基本要素。此应用通过NFC屏蔽器和Android 4.3及以上版本的NFC功能与Arduino通信。
- en: In this, we highlighted the opportunities available for user-engaging projects
    using NFC. In the next chapter, we will take this to the next level and use Bluetooth
    to give the user the opportunity to control and engage with a robot.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们强调了使用NFC进行用户参与型项目的机遇。在下一章中，我们将进一步提升这一层次，并使用蓝牙来给用户提供控制并参与与机器人互动的机会。
