- en: Chapter 1. Refreshing Your Cocos2d Knowledge
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。刷新你的Cocos2d知识
- en: In this chapter, we'll be bringing you up to speed by refreshing the memory
    of the most advanced users. This chapter will also cover project planning before
    any project even gets created. You'll see later why determining what features
    you want early can help speed up the process of creating a game. Project examples,
    references to downloading, and setup information will be found here. We'll then
    take a deep dive into the various additional third-party libraries and tools in
    the Cocos2d ecosystem that you may want to consider.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将通过刷新高级用户的记忆来让你跟上进度。本章还将涵盖在项目创建之前的项目规划。你将看到为什么早期确定你想要的功能可以帮助加快游戏创建的过程。项目示例、下载参考和设置信息将在这里找到。然后我们将深入研究Cocos2d生态系统中的各种第三方库和工具，你可能想要考虑。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Planning for a successful game
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 规划成功游戏
- en: Additional tools you might want to consider
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可能还想考虑的其他工具
- en: Setting flexible, focused goals
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设定灵活、专注的目标
- en: Preparing the mindset
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备心态
- en: First, we'll discuss how to structure your project from start to finish, and
    why you should do that instead of just jumping right in. We're going to discuss
    some theory and ask you questions to help you determine what exactly your project
    will need before even a line of code is written.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将讨论如何从开始到结束构建你的项目，以及为什么你应该这样做而不是直接跳进去。我们将讨论一些理论，并问你一些问题，帮助你确定在写代码之前你的项目到底需要什么。
- en: Before you start planning, you need to ask questions about key features your
    game needs, as they will require additional support and development. For example,
    is there a physics engine involved? Are you going to implement Game Center or
    In-App Purchases or possibly connect to a database to store the user's information?
    How complex are the mechanics? Start thinking of the answers to these and similar
    questions, as knowing the answers will help you move faster and still remain efficient.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始规划之前，你需要对你的游戏所需的关键功能提出问题，因为它们将需要额外的支持和开发。例如，是否涉及到物理引擎？你打算实现Game Center或In-App
    Purchases，或者可能连接到数据库来存储用户信息？机制有多复杂？开始思考这些答案以及类似的问题，因为知道答案将帮助你更快地移动，同时仍然保持高效。
- en: The physics engine
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 物理引擎
- en: Although this is not something that most people will know off the top of their
    head when they first start planning their project, it's important to know. Luckily,
    with Cocos2d, there's a physics engine built into the code for you, which is nice
    because you don't have to go out of your way to implement one.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这并不是大多数人在刚开始规划项目时会立刻想到的事情，但了解这一点很重要。幸运的是，使用Cocos2d，代码中已经内置了物理引擎，这很好，因为你不需要额外努力去实现一个。
- en: If you find your project does need a physics engine (or would be much more 'realistic'
    with it), you can refer to [Chapter 5](part0042.xhtml "Chapter 5. Creating Cool
    Content"), *Creating Cool Content*, later on in this book to understand how to
    implement it, as well as example code to use.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现你的项目确实需要物理引擎（或者有了它会显得更加“真实”），你可以参考本书后面的[第5章](part0042.xhtml "第5章。创建酷内容")，了解如何实现它，以及示例代码的使用。
- en: 'If you''re unsure of whether you should use a physics engine or not, here are
    a few examples of games that use Box2D, one of the built-in physics engines with
    Cocos2d. Take a look at the physics in *Angry Birds* by Rovio:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不确定是否应该使用物理引擎，这里有一些使用Box2D（Cocos2d内置的物理引擎之一）的游戏示例。看看Rovio的*Angry Birds*中的物理效果：
- en: '![The physics engine](img/image00196.jpeg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![物理引擎](img/image00196.jpeg)'
- en: In the preceding screenshot, each bird and each pig is a circle-shaped physics
    object, the ground is a rectangle, and all the obstacles on the right-hand side
    (except the pigs) are rectangles. When the bird gets flung from the left side
    to the right side, gravity starts acting on the bird and begins pulling it down.
    Once collisions occur, it pushes the objects around and does some fancy "damage"
    calculations based on the velocity of the incoming and colliding object.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，每只鸟和每头猪都是一个圆形的物理对象，地面是一个矩形，右手边（除了猪）的所有障碍物都是矩形。当鸟从左侧被弹到右侧时，重力开始作用于鸟，并开始将其向下拉。一旦发生碰撞，它推动物体并基于
    incoming 和 colliding 物体的速度进行一些复杂的“伤害”计算。
- en: 'The following screenshot is of the physics in *Crescent Ridge Mini Golf* by
    KeitGames:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了KeitGames开发的*Crescent Ridge Mini Golf*中的物理效果：
- en: '![The physics engine](img/image00197.jpeg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![物理引擎](img/image00197.jpeg)'
- en: In the preceding screenshot, the ball is a circle-shaped physics object, and
    each wall has a set of vertices that act as the boundaries through which the ball
    cannot pass. There is no gravity in play here, or else the ball would be constantly
    falling to the bottom of the screen. If the ball bounces on a wall, the physics
    engine knows exactly what angle the ball will turn by, and by what velocity it
    will go backwards. Being able to determine the angle of reflection of the golf
    ball was the main reason a physics engine was used to create a simple mini golf
    game.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，球是一个圆形的物理对象，每个墙壁都有一组顶点，这些顶点充当球不能通过的边界。这里没有重力作用，否则球会不断落到屏幕底部。如果球在墙上弹跳，物理引擎会确切地知道球将转向的角度以及它将向后移动的速度。能够确定高尔夫球的反射角度是使用物理引擎创建简单迷你高尔夫游戏的主要原因。
- en: 'If you''re still unsure, then answering "yes" to any of the following questions
    means you should consider using a physics engine. If your answer to any of the
    following questions is "yes," then refer to [Chapter 3](part0029.xhtml "Chapter 3. Focusing
    on Physics"), *Focusing on Physics*, to learn how to implement a physics engine.
    If your answer to all of these questions is "no," then I suggest holding off for
    now because your game probably doesn''t need an engine, and instead, it can be
    coded in a way that gives the impression of physics but doesn''t actually use
    a physics engine:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你仍然不确定，那么对以下任何问题的回答是“是”，意味着你应该考虑使用物理引擎。如果你对以下任何问题的回答是“是”，请参考[第3章](part0029.xhtml
    "第3章. 关注物理")，*关注物理*，了解如何实现物理引擎。如果你对所有这些问题的回答都是“否”，那么我建议你现在暂时不要使用，因为你的游戏可能不需要引擎，而可以通过编码的方式给人一种物理的感觉，但实际上并不使用物理引擎：
- en: Do you need noncircular or nonrectangular objects to collide?
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你是否需要非圆形或非矩形的物体来碰撞？
- en: Do objects need to bounce off of each other or push other objects?
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物体是否需要相互弹跳或推动其他物体？
- en: Does your game make use of real-time gravity?
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的游戏是否使用了实时重力？
- en: If you're interested in making use of any liquid physics or using soft bodies
    in your game, feel free to check out LiquidFun. However, this book will not cover
    how to implement or use that engine.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你感兴趣，想在游戏中使用任何液体物理或使用软体，请随意查看LiquidFun。然而，这本书不会涵盖如何实现或使用该引擎。
- en: In-App Purchases
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用内购买
- en: '**In-App Purchases** (**IAPs**) are a feature that are a result of design decisions,
    possibly to make the game cheaper and/or include expansions or extra content in
    the game. There are a lot of ways you can utilize IAPs, but forcing them into
    your game instead of designing them as an integral part of the experience could
    cause your players to either not utilize the IAPs you took so much time to implement,
    or just stop playing the game altogether.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**应用内购买**（**IAPs**）是设计决策的结果，可能是为了使游戏更便宜，或者包括游戏中的扩展或额外内容。你可以利用IAPs的很多方式，但如果你将它们强加到游戏中而不是将其设计为体验的有机部分，可能会让你的玩家要么不使用你花费了大量时间实现的IAPs，要么完全停止玩游戏。'
- en: 'The thing about IAPs is that Apple requires your project''s provisioning profile
    to have the IAPs permission added—that''s the easy part. The hard part is getting
    them included in your code. Here are some examples of In-App Purchases in various
    games. The following screenshot is of the shop in *Clash of Clans* by Supercell:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 关于IAPs的问题在于，苹果要求你的项目配置文件中添加IAPs权限——这是容易的部分。困难的部分是让它们包含在你的代码中。以下是一些各种游戏中应用内购买的例子。以下截图是Supercell的*Clash
    of Clans*中的商店：
- en: '![In-App Purchases](img/image00198.jpeg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![应用内购买](img/image00198.jpeg)'
- en: 'In the preceding screenshot, you see the various IAPs available in *Clash of
    Clans*. You can see that they have a tiered structure such that as the player
    spends more money in one go, they get more gems per dollar spent. The following
    screenshot is of the bank in *Bina Blocks* by KeitGames:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，你可以看到*Clash of Clans*中可用的各种IAPs。你可以看到它们有一个分层结构，即玩家一次性花更多的钱，每美元可以获得的宝石就越多。以下截图是KeitGames的*Bina
    Blocks*中的银行：
- en: '![In-App Purchases](img/image00199.jpeg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![应用内购买](img/image00199.jpeg)'
- en: What you just saw is a screenshot of the bank in *Bina Blocks*. You can see
    a similar tier of pricing as was in *Clash of Clans*.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚才看到的是*Bina Blocks*中银行的截图。你可以看到与*Clash of Clans*中相似的定价层级。
- en: 'Although IAP implementation is not covered in this book, it can still be a
    significant constituent of your game. If you wish to continue learning how to
    implement your own IAPs, you can read about them from any of these sources:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这本书没有涵盖IAP的实现，但它仍然可以是你的游戏的一个重要组成部分。如果你希望继续学习如何实现自己的IAP，你可以从以下这些来源了解它们：
- en: '[http://www.raywenderlich.com/21081/introduction-to-in-app-purchases-in-ios-6-tutorial](http://www.raywenderlich.com/21081/introduction-to-in-app-purchases-in-ios-6-tutorial)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.raywenderlich.com/21081/introduction-to-in-app-purchases-in-ios-6-tutorial](http://www.raywenderlich.com/21081/introduction-to-in-app-purchases-in-ios-6-tutorial)'
- en: '[http://www.playngive.com/blog/2010/3/6/adding-in-app-store-to-cocos2d.html](http://www.playngive.com/blog/2010/3/6/adding-in-app-store-to-cocos2d.html)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.playngive.com/blog/2010/3/6/adding-in-app-store-to-cocos2d.html](http://www.playngive.com/blog/2010/3/6/adding-in-app-store-to-cocos2d.html)'
- en: '[http://troybrant.net/blog/2010/01/in-app-purchases-a-full-walkthrough/](http://troybrant.net/blog/2010/01/in-app-purchases-a-full-walkthrough/)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://troybrant.net/blog/2010/01/in-app-purchases-a-full-walkthrough/](http://troybrant.net/blog/2010/01/in-app-purchases-a-full-walkthrough/)'
- en: Making use of analytics
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用数据分析
- en: Analytics packages are a great tool that any developer can make use of. If you
    want to know what level your users are getting stuck at the most, you can track
    how many times each level was beaten to see where the drop-off happens. Or maybe,
    you want to track how people are using the new characters you just added. In [Chapter
    7](part0057.xhtml "Chapter 7. Reaching Our Destination"), *Reaching Our Destination*,
    you'll learn how to implement Flurry Analytics, which uses a simple, event-driven
    system used to track when certain methods get called. Essentially, you can track
    anything from a button press and screen loading to the time a user spent on a
    problem. All of this data is sent to Flurry's server and compiled into easy-to-read
    charts and graphs.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 分析工具包是任何开发者都可以利用的伟大工具。如果你想了解用户在哪个关卡上遇到的最大困难，你可以跟踪每个关卡被击败的次数，以查看掉落发生的地方。或者，你可能想跟踪人们如何使用你刚刚添加的新角色。在第7章“到达我们的目的地”中，你将学习如何实现Flurry
    Analytics，它使用一个简单的事件驱动系统来跟踪某些方法何时被调用。基本上，你可以跟踪从按钮点击和屏幕加载到用户在问题上的花费时间。所有这些数据都发送到Flurry的服务器，并编译成易于阅读的图表和图形。
- en: Although your users won't notice any difference, it'll definitely make your
    game better in the long run, as you can see what is happening when your players
    interact with your game. Thus, you can submit better updates as time goes on.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你的用户不会注意到任何区别，但长远来看，这肯定会让你的游戏变得更好，因为你可以看到玩家与你的游戏互动时发生了什么。因此，随着时间的推移，你可以提交更好的更新。
- en: Complex mechanics and special effects
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 复杂机制和特效
- en: The term "complex mechanics" can be a bit vague or general at times. However,
    it can be anything from a really smooth transition between your game's scenes
    to a unique control system for the way the player plays the game. If you feel
    that your game needs these complex mechanics to become successful, them make sure
    you do it right. If you're only planning to add extra bells and whistles because
    you feel that you have to, and not because it's part of making your game better,
    then thinking of this beforehand can help structure your project plan in a way
    that allows the addition of extra (or bonus) features at the end of development.
    This is better than attempting to add things halfway through and delaying necessary
    features if you can't figure out how to code them right away.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 术语“复杂机制”有时可能有些模糊或过于笼统。然而，它可能从游戏场景之间非常平滑的过渡到玩家游戏方式的独特控制系统。如果你觉得你的游戏需要这些复杂机制来获得成功，那么请确保你做得正确。如果你只是计划添加额外的功能，因为你觉得你必须这样做，而不是因为它能让你游戏变得更好，那么提前考虑这一点可以帮助你以某种方式构建项目计划，以便在开发后期添加额外的（或奖励）功能。这样做比试图在中途添加东西并延迟必要功能要好，如果你不能立即找到正确编码它们的方法。
- en: There are some games that are very special because of their unique gameplay
    mechanics, in combination with making use of the touch screen (which we will cover
    in detail in [Chapter 4](part0035.xhtml "Chapter 4. Sound and Music"), *Sounding
    Off*). For example, if you look at *Smash Hit*, *Blek*, *Tiny Wings*, or *Threes!*,
    you'll see that they don't quite fit into any traditional genre.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有些游戏因其独特的游戏机制而非常特别，结合使用触摸屏（我们将在第4章“声音和音乐”中详细讨论），例如，如果你看看《Smash Hit》、《Blek》、《Tiny
    Wings》或《Threes!》，你会发现它们并不完全符合任何传统类型。
- en: 'Note that if you''re relatively new to game design (especially when it comes
    to mobile design), it might not be entirely in your best interest to try something
    completely new or unique. Instead, try at least replicating mechanics that already
    exist, and possibly tweaking them slightly to better fit the game that you''re
    trying to make. The following screenshot is of *Smash Hit*:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果你相对较新手游戏设计（尤其是移动设计），尝试完全新颖或独特的东西可能并不完全符合你的最佳利益。相反，至少尝试复制已经存在的机制，并可能对其进行轻微调整，以更好地适应你试图制作的游戏。以下截图是
    *Smash Hit*：
- en: '![Complex mechanics and special effects](img/image00200.jpeg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![复杂力学和特效](img/image00200.jpeg)'
- en: 'The next screenshot is of *Blek*:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个截图是 *Blek*：
- en: '![Complex mechanics and special effects](img/image00201.jpeg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![复杂力学和特效](img/image00201.jpeg)'
- en: 'The following screenshot is of *Tiny Wings*:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了 *Tiny Wings*：
- en: '![Complex mechanics and special effects](img/image00202.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![复杂力学和特效](img/image00202.jpeg)'
- en: 'This screenshot is of *Threes!*:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这个截图是 *Threes!*：
- en: '![Complex mechanics and special effects](img/image00203.jpeg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![复杂力学和特效](img/image00203.jpeg)'
- en: These are games that thrive on their complex mechanics and special effects.
    They were extremely well-planned and properly designed. If you're only looking
    for special effects (for example, particle explosions or faces on the *Threes!*
    cards), then [Chapter 7](part0057.xhtml "Chapter 7. Reaching Our Destination"),
    *Reaching Our Destination*, is where you should look. That chapter goes into detail
    of how to polish your game and increase its likeability factor. But for now, just
    know that if you plan to do something unique, creative, or never done before as
    an integral part of your design, you should plan accordingly.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这些游戏依靠其复杂的力学和特效而繁荣。它们规划得非常周密，设计得也很恰当。如果你只想要特效（例如，粒子爆炸或 *Threes!* 卡牌上的面部表情），那么你应该查看第7章，*达到我们的目的地*，这是你应该查找的地方。那一章详细介绍了如何润色你的游戏并提高其受欢迎程度。但就目前而言，只需知道，如果你计划将独特、创新或前所未有的东西作为你设计的一个组成部分，你应该相应地计划。
- en: If you are adding mechanics just because you think it would be cool to have
    it and it isn't necessary for the game's progression, then plan it at the end.
    There's nothing worse than delaying your game's launch date because of a feature
    that isn't really that important in the first place.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只是因为觉得有它会很酷而添加机制，而这些机制对游戏进程并不必要，那么你应该在最后计划。没有什么比因为一个一开始就并不重要的功能而推迟游戏发布日期更糟糕的了。
- en: Choosing tools and getting started
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择工具和开始
- en: Knowing which tools your project is going to need before you start working is
    a good place to start. In this way, when the time comes to implement a given feature,
    you can easily open the program and use the tool you've gotten beforehand. It's
    not too bad to get the tools halfway through the project, but from experience,
    it's better to think of it before you start to work on a project.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始工作之前就知道你的项目需要哪些工具是一个好的开始。这样，当需要实现某个特定功能的时候，你可以轻松打开程序并使用你事先获取的工具。在项目中途获取工具也不是太糟糕，但根据经验，最好在开始工作之前就考虑好。
- en: There are a few third-party programs out there that make development of games
    using Cocos2d go a lot faster. Listed here are such products, information on how
    to download and install them, along with their cost (if any) and other things
    you need to know about them.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些第三方程序可以使使用 Cocos2d 开发游戏的速度大大加快。以下列出了这样的产品，有关如何下载和安装它们的信息，以及它们的成本（如果有）以及其他你需要了解的事情。
- en: Tip
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Note that just because a product is listed here does not mean it is required
    when creating a game using Cocos2d. This section is merely a "just in case you
    were wondering" guide for things to consider when trying to develop better, more
    polished games.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这里列出的产品并不意味着在用 Cocos2d 创建游戏时是必需的。本节仅作为“以防你有所疑问”的指南，用于在尝试开发更好、更精致的游戏时考虑的事项。
- en: This section also assumes that you either have a dedicated person creating the
    artwork for your game, or you will be doing it yourself in any image editing software,
    such as Photoshop. This is assumed because there are no listed image editors here
    due to the large volume of editors. Any of them can be used when making games.
    However, the programs listed here are the best at what they strive to do, although
    there may be others similar to them.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 本节还假设您要么有专门的人为您的游戏制作艺术作品，要么您将在任何图像编辑软件中自行完成，例如Photoshop。这是假设的，因为这里没有列出图像编辑器，因为编辑器的数量很大。在制作游戏时，任何一种都可以使用。然而，这里列出的程序在它们所追求的方面都是最好的，尽管可能还有其他类似的程序。
- en: '**Texture Packer**: This is an image condenser used to place all your images
    on one sprite sheet. This helps draw optimization (increases your game''s frames
    per second) as well as reduces the space in your game''s overall size (which could
    mean the difference between the users having to download over Wi-Fi, or not).'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**纹理打包器（Texture Packer**）: 这是一个图像压缩工具，用于将所有图像放置在一个精灵图上。这有助于优化绘图（提高游戏每秒帧数）以及减少游戏整体大小的空间（这可能是用户是否需要通过Wi-Fi下载的区别）。'
- en: '**Particle Designer**: This is a visual particle editor that allows quick creation
    of particle effects, ranging from lasers and smoke effects to explosions and candle
    effects.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**粒子设计师（Particle Designer**）: 这是一个可视化粒子编辑器，允许快速创建粒子效果，从激光和烟雾效果到爆炸和蜡烛效果。'
- en: '**Glyph Designer**: This is a custom font creator that allows you to create
    nice-looking fonts instead of using pre-rendered images with text or plain fonts
    with just a fill color.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**符号设计师（Glyph Designer**）: 这是一个自定义字体创建器，允许您创建看起来漂亮的字体，而不是使用带有文本的预渲染图像或仅具有填充颜色的普通字体。'
- en: '**VertexHelper Pro**: This is a visual vertex calculator meant for use with
    physics engines. It can be used for other purposes, but it''s mostly used in conjunction
    with a physics engine to determine the exact coordinates of collision, instead
    of using a standard box or circle to calculate the collision boundaries of an
    object.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**顶点助手专业版（VertexHelper Pro**）: 这是一个用于与物理引擎一起使用的可视化顶点计算器。它可以用于其他目的，但主要用于与物理引擎一起使用，以确定碰撞的确切坐标，而不是使用标准的长方体或圆形来计算对象的碰撞边界。'
- en: '**GAF**: This is a way to store Flash animation in an open cross-platform format
    for further playback in a multitude of game development frameworks and devices.
    GAF enables artists and animators to use Flash CS to create complex animations
    and seamlessly use them with various game development frameworks such as Cocos2d,
    Cocos2d-x, Unity3D, and Starling, to name a few.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GAF**: 这是一种将Flash动画存储在开放跨平台格式中的方法，以便在多种游戏开发框架和设备中进一步播放。GAF使艺术家和动画师能够使用Flash
    CS创建复杂的动画，并能够无缝地与各种游戏开发框架（如Cocos2d、Cocos2d-x、Unity3D和Starling等）一起使用。'
- en: '**Git and GitHub/Bitbucket**: There are many ways to make use of source control
    when working on a project. The best solution out there, as well as the one that
    many developers use, is Git. You can manage your code changes over time, and if
    a bug ever shows up, you can always revert to your latest version of your code
    without losing precious development time trying to figure out what was changed.
    It''s also a nice way to back up your project in case of computer failure.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Git和GitHub/Bitbucket**: 在项目开发中，有许多使用源控制的方法。目前最好的解决方案，以及许多开发者使用的解决方案，是Git。您可以管理代码随时间的变化，如果出现错误，您总是可以回滚到代码的最新版本，而无需在试图找出更改了什么时浪费宝贵的发展时间。这也是在计算机故障时备份项目的好方法。'
- en: TexturePacker
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TexturePacker
- en: TexturePacker allows you to easily create sprite sheets for your games. It compresses
    your individual images into one giant image so that you can effectively increase
    the optimization of your game without sacrificing quality.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: TexturePacker允许您轻松地为游戏创建精灵图。它将单个图像压缩成一个大图像，这样您可以在不牺牲质量的情况下有效地提高游戏的优化。
- en: 'The final sheets can be used in a variety of game engines such as Cocos2d,
    Unity, Corona SDK, SpriteKit, and many more. The following screenshot shows the
    UI of TexturePacker:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的图集可以在各种游戏引擎中使用，如Cocos2d、Unity、Corona SDK、SpriteKit等。以下截图显示了TexturePacker的用户界面：
- en: '![TexturePacker](img/image00204.jpeg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![TexturePacker](img/image00204.jpeg)'
- en: The cost is $39.95 for the Pro version (free trial available).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 专业版的价格为39.95美元（提供免费试用）。
- en: To download TexturePacker, go to [http://www.codeandweb.com/texturepacker/download](http://www.codeandweb.com/texturepacker/download).
    There, you can click on the name of the OS you are using, and you're on your way!
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载TexturePacker，请访问[http://www.codeandweb.com/texturepacker/download](http://www.codeandweb.com/texturepacker/download)。在那里，您可以点击您正在使用的操作系统名称，然后您就可以开始了！
- en: TexturePacker is offered on Mac 10.7/8/9, Linux (Ubuntu 64-bit), and Windows
    32-bit and 64-bit (XP/Vista/7/8).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: TexturePacker支持Mac 10.7/8/9、Linux（Ubuntu 64位）、以及Windows 32位和64位（XP/Vista/7/8）。
- en: Particle Designer
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Particle Designer
- en: 'If you want that beautiful explosion, that awesome smoke effect, or that shiny
    laser beam generated in real time, then Particle Designer is what you need. Import
    your own custom "particle," change a ton of parameters to get the effect you want,
    and export the file to your game project. The following screenshot shows the UI
    of Particle Designer:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要实时生成的美丽爆炸、令人惊叹的烟雾效果或闪亮的激光束，那么Particle Designer就是您需要的。导入您自己的自定义“粒子”，调整大量参数以获得您想要的效果，然后将文件导出到您的游戏项目中。以下截图显示了Particle
    Designer的用户界面：
- en: '![Particle Designer](img/image00205.jpeg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![Particle Designer](img/image00205.jpeg)'
- en: The cost is $74.99 (free trial available)
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 价格为74.99美元（提供免费试用）。
- en: To download Particle Designer, go to [https://71squared.com/particledesigner](https://71squared.com/particledesigner).
    There, you will see a link to buy it. You can, however, get a trial version by
    clicking on the **Try** button on their website and entering your e-mail address.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载Particle Designer，请访问[https://71squared.com/particledesigner](https://71squared.com/particledesigner)。在那里，您将看到一个购买链接。然而，您可以通过点击他们网站上的**试用**按钮并输入您的电子邮件地址来获取试用版。
- en: Particle Designer is offered on Mac 10.8, 9, and 10.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Particle Designer支持Mac 10.8、9和10。
- en: Technically, you can manually create each particle in the code, but that's horribly
    inefficient. Plus, being able to see the particle in real time as you're designing
    it makes the entire process smoother, as importing the particle effect to Cocos2d
    is extremely easy.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，您可以在代码中手动创建每个粒子，但这非常低效。此外，在您设计粒子时能够实时看到粒子可以使整个过程更加顺畅，因为将粒子效果导入Cocos2d非常简单。
- en: If you have Particle Designer but haven't used it before, you're advised to
    just open it up and start messing around with some of the settings. You can get
    some seriously cool effects just by dragging some sliders around.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您拥有Particle Designer但之前从未使用过，建议您只需打开它，并开始尝试调整一些设置。只需拖动一些滑块，您就可以获得一些非常酷的效果。
- en: Glyph Designer
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Glyph Designer
- en: If you want fancy fonts instead of the normal TrueType fonts available, or a
    pre-rendered image of text in Photoshop for example, you can use Glyph Designer.
    It basically allows you to get a nicely styled character set that can be used
    with the BMFont labels (bitmap fonts). This essentially means that you can generate
    custom text labels while still maintaining the colorful, styled font you've created
    using Glyph Designer.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要花哨的字体而不是可用的正常TrueType字体，或者例如在Photoshop中预渲染的文本图像，您可以使用Glyph Designer。它基本上允许您获得一个样式优美的字符集，可以与BMFont标签（位图字体）一起使用。这实际上意味着您可以在保持使用Glyph
    Designer创建的彩色、样式化字体的情况下生成自定义文本标签。
- en: '![Glyph Designer](img/image00206.jpeg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![Glyph Designer](img/image00206.jpeg)'
- en: Its cost is $39.99 (free trial available).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 其价格为39.99美元（提供免费试用）。
- en: To download Glyph Designer go to [https://71squared.com/en/glyphdesigner](https://71squared.com/en/glyphdesigner).
    There, you will see a link to buy it. You can, however, get a trial version by
    clicking on the **Try** button on their website and entering your e-mail address.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载Glyph Designer，请访问[https://71squared.com/en/glyphdesigner](https://71squared.com/en/glyphdesigner)。在那里，您将看到一个购买链接。然而，您可以通过点击他们网站上的**试用**按钮并输入您的电子邮件地址来获取试用版。
- en: Glyph Designer is offered on Mac 10.8, 9, and 10.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Glyph Designer支持Mac 10.8、9和10。
- en: If you want fonts like those used in some of the games whose screenshots you
    saw earlier (*Clash of Clans*, *Angry Birds*, *Crescent Ridge Mini Golf*, and
    *Bina Blocks*), instead of just plain, solid-colored fonts as shown in the other
    games, you'll need a good bitmap font creation tool. Just as with particles, if
    you want to get nice-looking fonts, there are only a few programs out there. One
    of them is Glyph Designer, which was made by the same people who created Particle
    Designer.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要像您之前看到的某些游戏（如*Clash of Clans*、*Angry Birds*、*Crescent Ridge Mini Golf*和*Bina
    Blocks*）中使用的字体，而不是其他游戏中显示的纯色字体，您需要一个好的位图字体创建工具。就像粒子一样，如果您想要漂亮的字体，市面上只有少数几个程序。其中之一就是由创建Particle
    Designer的同一群人制作的Glyph Designer。
- en: If you have Glyph Designer installed but haven't begun using it yet, open it
    and begin testing some different styles on various fonts just to get a feel for
    how the program works and some of the things you can create with Glyph Designer.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经安装了 Glyph Designer 但还没有开始使用它，请打开它，并在各种字体上测试一些不同的样式，以了解程序的工作方式以及你可以使用 Glyph
    Designer 创建的一些东西。
- en: One thing to consider when designing your aesthetics (and especially when it
    comes to choosing custom fonts) is, does this font/style work within the overall
    aesthetics of the entire project? If it feels jarring or feels like two different
    styles clashing, then it might be in your best interest to choose a more suitable
    font for your game. Don't worry; it might not come to you right away, but if you
    find the right font, it adds that extra layer of polishing that's crucial to making
    your game a success (we'll talk more about polishing in [Chapter 6](part0049.xhtml
    "Chapter 6. Tidying Up and Polishing"), *Tidying Up and Polishing*).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计你的美学（尤其是在选择自定义字体时）时，需要考虑的是，这种字体/风格是否适合整个项目的整体美学？如果它感觉不协调，或者感觉像两种不同的风格冲突，那么选择一个更适合你游戏的字体可能对你更有利。不用担心；它可能不会立刻出现在你的脑海中，但如果你找到了合适的字体，它将为你的游戏增添额外的磨光层，这对于使你的游戏成功至关重要（我们将在第
    6 章[part0049.xhtml "第 6 章. 整理和磨光"]中更多关于磨光的内容）。
- en: VertexHelper
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VertexHelper
- en: Are you using physics in the game? Do you need a shape better than a box or
    a circle to represent a complex object? VertexHelper can help you find the coordinates
    that make up the shape of a complex object by importing an image and allowing
    you to click where you want the vertices to be. You can manually guess and test
    the coordinates programmatically if you really want, but VertexHelper makes this
    process a lot faster and keeps the coordinates accurate (assuming that the physics
    is implemented properly in the code).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你在游戏中使用物理（或碰撞）吗？你需要一个比盒子或圆形更好的形状来表示复杂物体吗？VertexHelper 可以通过导入图片并允许你点击想要顶点所在的位置来帮助你找到组成复杂物体形状的坐标。如果你真的想的话，你可以手动猜测并程序化地测试坐标，但
    VertexHelper 使这个过程变得更快，并保持坐标的准确性（假设代码中物理实现得正确）。
- en: If you're going to make use of physics (or collisions in general), you should
    be aware that vertex collisions can be incredibly expensive. If possible, it's
    best to stick to primitives (for example, circles or squares), And if that's the
    case, it may be that you don't even need a physics engine. Hence, consider your
    options carefully.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打算使用物理（或碰撞），你应该知道顶点碰撞可能非常昂贵。如果可能的话，最好坚持使用原语（例如，圆形或正方形），如果那样的话，你可能甚至不需要物理引擎。因此，仔细考虑你的选项。
- en: '![VertexHelper](img/image00207.jpeg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![VertexHelper](img/image00207.jpeg)'
- en: Its cost is $7.99.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 它的价格是 $7.99。
- en: To download go to [https://itunes.apple.com/us/app/vertexhelper-pro/id411684411](https://itunes.apple.com/us/app/vertexhelper-pro/id411684411),
    or search for `VertexHelper Pro` and you should be able to find the link to the
    Mac App Store on the first page of results.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 下载请访问 [https://itunes.apple.com/us/app/vertexhelper-pro/id411684411](https://itunes.apple.com/us/app/vertexhelper-pro/id411684411)，或搜索
    `VertexHelper Pro`，你应该能在搜索结果的第一页找到前往 Mac App Store 的链接。
- en: Like any other Mac app, you can run this once it is fully installed.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 就像任何其他 Mac 应用程序一样，一旦完全安装，你就可以运行它。
- en: 'There are two ways to go about generating your boundaries for any physics object:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 为任何物理对象生成边界有两种方法：
- en: Manually code the values using `b2Vec2` arrays and hope that it's correct
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `b2Vec2` 数组手动编写值，并希望它是正确的。
- en: Use a program such as VertexHelper to quickly create boundaries for each object
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 VertexHelper 等程序快速为每个对象创建边界。
- en: It's good to know about this program and have it ready when using a physics
    engine in your game because every object pretty much needs to collide with another
    object (except a few background images, most likely). With that said, every object
    probably isn't a square or a circle so being able to create custom-shaped physics
    boundaries very quickly is good.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的游戏中使用物理引擎时了解这个程序并准备好它是有好处的，因为几乎每个物体都需要与另一个物体发生碰撞（除了少数背景图像）。话虽如此，每个物体可能不是正方形或圆形，因此能够快速创建自定义形状的物理边界是很好的。
- en: If you do have VertexHelper installed on your computer, go ahead; open it and
    import an image. Then start clicking around and get a feel for how the program
    works. This will help a lot later on as you start to implement the physics of
    each object.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经在你的电脑上安装了 VertexHelper，请继续；打开它并导入一张图片。然后开始点击操作，感受一下程序的工作方式。这在你开始实现每个物体的物理特性时会有很大帮助。
- en: GAF
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GAF
- en: If you have any Flash animation that you want to convert for use in your games
    made with Cocos2d, you can do so with GAF, which is essentially a single format
    that gets converted into the individual framework's and device's requirements.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要将任何 Flash 动画转换为用于 Cocos2d 游戏的格式，你可以使用 GAF，它本质上是一种单一格式，可以转换为各个框架和设备的要求。
- en: '![GAF](img/image00208.jpeg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![GAF](img/image00208.jpeg)'
- en: 'Its cost is as follows: for the Free version, $0; for Studio, $995; and for
    Enterprise, $2,995\. Free use is limited to $50,000 annually, and you can develop
    only your own games, not contract work. You can read more about their pricing
    options at [http://gafmedia.com/pricing](http://gafmedia.com/pricing).'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 其费用如下：免费版为 $0；工作室版为 $995；企业版为 $2,995。免费使用每年限制为 $50,000，并且只能开发你自己的游戏，不能进行合同工作。你可以在[http://gafmedia.com/pricing](http://gafmedia.com/pricing)了解更多关于他们的定价选项。
- en: To download GAF go to [http://gafmedia.com/downloads](http://gafmedia.com/downloads)
    and choose the OS. Then follow the instructions to install.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载 GAF，请访问[http://gafmedia.com/downloads](http://gafmedia.com/downloads)，选择操作系统。然后按照说明进行安装。
- en: GAF is available on both Windows and OSX.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: GAF 可在 Windows 和 OSX 上使用。
- en: GAF can be helpful if you have an art developer who is comfortable with animating
    in SWF files, and can then convert them into a platform-agnostic format for use
    with multiple game engines. It can also be helpful if you're porting a game that
    already makes use of SWF files (such as an online Flash game that you wish to
    implement on mobiles).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个熟悉 SWF 文件动画的艺术开发者，并且可以将它们转换为适用于多个游戏引擎的平台无关格式，GAF 会很有帮助。如果你正在移植已经使用 SWF
    文件的游戏（例如你希望在移动设备上实现的在线 Flash 游戏），它也会很有帮助。
- en: Git and GitHub/Bitbucket
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Git 和 GitHub/Bitbucket
- en: If you're ever working with code, chances are that something's going to get
    messed up. Luckily, there is source control software that exists to manage your
    code's versioning and ensuring that in case anything goes wrong, you have copies
    of previous versions to revert to.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你曾经处理过代码，那么很可能会出现一些问题。幸运的是，存在源代码管理软件来管理你的代码版本，并确保在出现问题时，你可以回滚到之前的版本。
- en: 'This is a screenshot of the Cocos2d-Swift GitHub repository (or repo for short)
    at [https://github.com/cocos2d/cocos2d-swift](https://github.com/cocos2d/cocos2d-swift):'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一张 Cocos2d-Swift GitHub 仓库（简称 repo）的截图[https://github.com/cocos2d/cocos2d-swift](https://github.com/cocos2d/cocos2d-swift)：
- en: '![Git and GitHub/Bitbucket](img/image00209.jpeg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![Git 和 GitHub/Bitbucket](img/image00209.jpeg)'
- en: It is free of cost.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这是免费的。
- en: To download this, if you have Xcode installed on your Mac, simply go to **Xcode**
    | **Preferences** | **Downloads**. Then install the command-line tools. With this,
    you can use Xcode's built-in **Source Control** menu, or go through Terminal to
    use your Git commands.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经在你的 Mac 上安装了 Xcode，要下载这个，只需转到 **Xcode** | **Preferences** | **Downloads**。然后安装命令行工具。有了这个，你可以使用
    Xcode 内置的 **Source Control** 菜单，或者通过终端使用你的 Git 命令。
- en: If you wish to install Git manually, simply go to their website and follow the
    links to download and install, at [http://git-scm.com/](http://git-scm.com/).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望手动安装 Git，只需访问他们的网站，按照链接下载和安装，详情请见[http://git-scm.com/](http://git-scm.com/)。
- en: Note that if you've never used any source control before, feel free to read
    how it works at [https://help.github.com/](https://help.github.com/).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果你以前从未使用过任何源代码管理，你可以自由地阅读它是如何工作的[https://help.github.com/](https://help.github.com/)。
- en: You will actually need Git installed only on your Mac, as that's where the code
    is. However, you can install it on any desktop OS.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，你只需要在 Mac 上安装 Git，因为代码就在那里。然而，你可以在任何桌面操作系统上安装它。
- en: Both GitHub and Bitbucket are free to use. However, the key difference is that
    GitHub offers unlimited public repositories, while Bitbucket offers unlimited
    private repositories. So if you want to keep your code hidden from others while
    still making use of the services listed, it's recommended to go with Bitbucket.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 和 Bitbucket 都是免费的。然而，关键的区别在于 GitHub 提供无限量的公共仓库，而 Bitbucket 提供无限量的私有仓库。所以如果你想隐藏你的代码不让别人看到，同时仍然使用列出的服务，建议选择
    Bitbucket。
- en: Both of these services use Git and make use of the same commands and tools.
    It's just a preference between whether you want to go with public or private repositories
    (or the case where someone else you work with has a preference).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这两项服务都使用 Git，并使用相同的命令和工具。这只是一个选择，即你想要使用公共仓库还是私有仓库（或者你合作的人有偏好的情况）。
- en: Setting flexible, focused goals
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设定灵活、专注的目标
- en: When you first came up with your idea to make a game, you probably thought it
    was the best game idea since the beginning of gaming. It honestly might be; don't
    let my words hold you back. However, as time passes, your vision of this game
    might change and your direction might shift a little or a lot as new ideas are
    generated throughout the project's life cycle. It's best to come up with a focused
    goal that's also a bit flexible to leave room for improvement while staying on
    track when it gets too much out of hand.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 当你最初想制作游戏时，你可能认为这是有史以来最好的游戏想法。诚然，可能真的是这样；不要让我说的话阻碍了你。然而，随着时间的推移，你对这个游戏的看法可能会改变，你的方向可能会在项目生命周期的整个过程中有所改变或很大。最好是提出一个既专注又有点灵活的目标，这样可以在保持方向的同时留出改进的空间。
- en: Expand
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扩展
- en: If you're struggling with coming up with an original idea, I recommend that
    you get a whiteboard (the bigger the better; trust me), open an image editing
    software on your computer, or even get some pens and paper, and just start writing
    down whatever you want to make a game about. Pick a topic related to the game's
    genre, or synonyms related to the main mechanics involved, and start making a
    map (something like a spider web) of ideas that you can use in the initial phase
    of creating your game.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正苦于想出一个原创的想法，我建议你拿一块白板（越大越好；相信我），在电脑上打开图像编辑软件，或者甚至拿出一些笔和纸，开始写下你想要制作的游戏内容。选择与游戏类型相关的主题，或者与主要机制相关的同义词，并开始制作一个想法图（类似于蜘蛛网），这些想法可以在你游戏创建的初始阶段使用。
- en: However, creating the initial idea can be tough on its own; for example, when
    is a project ever really ready such that you can begin the coding or the art creation
    process? Is it after the first mechanics implementation? Or is it when each of
    the 27 levels is methodically mapped from start to finish? It's important to realize
    that moment when you've stopped expanding and improving the game, which is getting
    better as you come up with more ideas, and you're coming up with ideas just because
    you can.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，仅仅产生最初的想法本身可能就很有挑战性；例如，何时一个项目真正准备好开始编码或艺术创作过程呢？是在第一次实现力学之后吗？还是当27个级别都被系统地从开始到结束规划好之后？重要的是要意识到那一刻，当你停止扩展和改进游戏时，随着你产生更多想法，游戏也在变得更好，而你只是因为可以而提出想法。
- en: Focus
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 专注
- en: Once you have a good idea of the type of game you want to make, it's time to
    focus that end goal in such a way that it allows flexibility later. In my honest
    opinion, making games is all about flow and the creation of ideas as time passes
    by. So, if you're in the middle of making a game and you think adding another
    enemy type or a few side quests might make the game more interesting, then don't
    hesitate to do so.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你对想要制作的类型有了良好的想法，就需要将这个最终目标集中起来，以便在以后保持灵活性。坦白说，制作游戏就是关于流程和随着时间的推移产生想法。所以，如果你正在制作游戏，并且认为添加另一种敌人类型或几个支线任务可能会使游戏更有趣，那么请不要犹豫，去做吧。
- en: That said, you can't be flip-flopping all over the place from one idea to the
    next, or else your game will lack a sense of direction as the player goes through
    it. They will feel as if the plot never resolves the initial conflicts presented.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，你不能从一个想法跳到另一个想法，否则你的游戏在玩家体验过程中会缺乏方向感。他们可能会觉得剧情从未解决最初提出的冲突。
- en: Plus, if your game lacks a focused end goal and is constantly changing over
    time, it will just take longer to develop. So, speaking from experience, if you
    want to create two different game ideas, the second of which is something you
    thought would be cool halfway through the development of the first game, either
    add it in as an update or expansion after the first game is released, or turn
    it into a separate project, but don't delay the development longer than it already
    has to.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果你的游戏缺乏一个明确的目标，并且随着时间的推移不断变化，那么开发时间将会更长。所以，从经验的角度来看，如果你想创造两个不同的游戏想法，第二个想法是在第一个游戏开发过程中的一半时产生的，那么你可以在第一个游戏发布后将其作为更新或扩展添加进去，或者将其变成一个独立的项目，但不要让开发时间比原本更长。
- en: So what are some of the things you should have in a focused goal? If your game
    has a narrative or is somehow plot driven, try to ensure that this stays intact
    throughout the development. Or, if your game is dependent on a single feature
    of mechanics and you want to add another feature halfway through the game, ensure
    that the newly added feature does not affect the initial user experience that
    was thought about when first coming up with the idea of the game. However, if
    the feature you want to add isn't really that important for the initial part of
    the game, then don't worry about it now and just include it in an update. Trust
    me; unless it's going take a few minutes to add the new feature, it's probably
    not worth spending your time on something that's not very necessary for the game
    to work as intended when it was first designed. Or, if the art style of the game
    just isn't very appealing or could be represented in another way, think about
    how important the art really is for your game. If it's low-quality art, as done
    in MS Paint for example, then consider getting some higher-quality art. However,
    if it's already polished, then don't bother changing it until after the release.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，在专注的目标中，你应该有哪些东西呢？如果你的游戏有叙事或以某种方式是情节驱动的，尽量确保这一点在整个开发过程中保持不变。或者，如果你的游戏依赖于某个机制的单个特性，你希望在游戏中途添加另一个特性，确保新添加的特性不会影响最初构思游戏时考虑到的初始用户体验。然而，如果你想要添加的功能对游戏最初的部分并不是非常重要，那么现在不必担心，只需在更新中包含它即可。相信我；除非添加新功能需要几分钟时间，否则它可能不值得你花费时间在那些对游戏按最初设计意图工作并不非常必要的事情上。或者，如果游戏的艺术风格并不非常吸引人或者可以用另一种方式表示，考虑一下艺术对你游戏的重要性。如果它是低质量的艺术，例如像MS
    Paint那样，那么考虑获取一些高质量的艺术。然而，如果它已经非常完善，那么在发布后不必麻烦去改变它。
- en: Flex
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 弹性
- en: 'I''ve mentioned in the preceding section: do not hesitate to be a bit lenient
    when it comes to your game''s mechanics, narrative, art style, and so on. As your
    game progresses, you will almost inevitably think, "Oh my gosh, wouldn''t it be
    the best game in the world if we just added this one extra boss at the end?" Maybe,
    it will. And that''s where you would want to be flexible.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我在上一节中提到过：在游戏机制、叙事、艺术风格等方面，不要犹豫，要有点宽容。随着游戏的进展，你几乎不可避免地会想，“哦，天哪，如果我们只是在游戏结束时添加一个额外的Boss，那岂不是世界上最好的游戏？”也许吧。这就是你需要灵活的地方。
- en: But remember to try staying true to that focused goal we talked about in the
    previous section. It's all about keeping that balance between laser-focused goals
    and free-flowing creativity at every step of the way.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 但请记住，要尽量保持我们在上一节中提到的那个专注目标。这关乎在每一步都保持激光般的专注目标和自由流动的创造力之间的平衡。
- en: Downloading the IDE and Source Code
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载IDE和源代码
- en: If you don't have Xcode and the Cocos2d library installed on your computer,
    now is probably a good time to do that. This section will guide you through the
    process.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的电脑上还没有安装Xcode和Cocos2d库，现在可能是一个安装的好时机。本节将指导你完成这个过程。
- en: Step 1 – become a developer through Apple's iOS program
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 1 – 通过苹果的iOS计划成为开发者
- en: Now, it's not entirely necessary for this book to pay the $99 per year fee to
    become an official Apple iOS developer. But if you wish to test the apps and games
    on your device or release the apps to the App Store, it is required.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这本书并不完全需要支付每年99美元的费用来成为官方苹果iOS开发者。但如果你希望在设备上测试应用程序和游戏或发布应用程序到App Store，这是必需的。
- en: If you wish to skip this step for now, feel free. You can get back here when
    you're ready.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在想跳过这一步，请随意。当你准备好时，可以回到这里。
- en: First, go to [https://developer.apple.com/programs/start/standard/](https://developer.apple.com/programs/start/standard/)
    to begin your enrollment process for the iOS App Developer program. If you already
    have an Apple account, you may use it if you wish. Otherwise, create an account.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，前往[https://developer.apple.com/programs/start/standard/](https://developer.apple.com/programs/start/standard/)开始你的iOS应用开发者计划的注册流程。如果你已经有了苹果账户，你可以使用它。否则，创建一个账户。
- en: Next, choose either **Individual** or **Company**. Apple provides a nice description
    on their website, so I feel that if you need help determining which one to get,
    their site can aid you in making that decision.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，选择**个人**或**公司**。苹果在其网站上提供了很好的描述，所以我觉得如果你需要帮助确定选择哪一个，他们的网站可以帮助你做出决定。
- en: '![Step 1 – become a developer through Apple''s iOS program](img/image00210.jpeg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 1 – 通过苹果的iOS计划成为开发者](img/image00210.jpeg)'
- en: Go through the steps to enter some contact information, then select **iOS Developer
    Program**, and click on **Continue**.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 按照步骤输入一些联系信息，然后选择**iOS开发者计划**，并点击**继续**。
- en: Agree to the license, enter your purchasing information, and you're on your
    way!
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 同意许可协议，输入您的购买信息，然后您就可以开始了！
- en: Step 2 – download and install Xcode
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第2步 – 下载并安装Xcode
- en: Go to [https://developer.apple.com/xcode/downloads/](https://developer.apple.com/xcode/downloads/)
    and click on the link to download Xcode. At the time of writing this book, it
    says **View in the Mac App Store**, and the version of Xcode referenced in this
    book is Xcode 6\. It requires OS X 10.9.3.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 前往[https://developer.apple.com/xcode/downloads/](https://developer.apple.com/xcode/downloads/)并点击下载Xcode的链接。在撰写本书时，它说**在Mac
    App Store中查看**，本书中引用的Xcode版本是Xcode 6。它需要OS X 10.9.3。
- en: Like a regular app from the Mac App Store, it should be installed in your `Applications`
    folder, and you should be able to be run it after the installation.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 就像Mac App Store中的普通应用程序一样，它应该安装到您的`Applications`文件夹中，并且您应该在安装后能够运行它。
- en: Adding a device
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加设备
- en: Note that if you want to run your app on a device, it requires a developer account
    (which was talked about in the *Step 1 – become a developer through Apple's iOS
    program* section). If you already have it set up, you should be able to add your
    device to your developer account by going to **Window** | **Organizer** in Xcode,
    and clicking on **Devices**.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果您想在设备上运行您的应用程序，需要一个开发者账户（这在*步骤1 – 通过Apple的iOS程序成为开发者*部分中提到过）。如果您已经设置好了，您应该能够通过在Xcode中转到**窗口**
    | **组织者**，然后点击**设备**来将您的设备添加到您的开发者账户中。
- en: Under that, you should see your device's name, and a button in the main view
    that says **Use for Development**.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面，您应该能看到您的设备名称，以及主视图中一个写着**用于开发**的按钮。
- en: If it is not showing, but instead giving a message like **The version of iOS
    on "Brian's iPhone" is not supported by this installation ...**, it means you
    must install the latest version of Xcode to get the latest version of the SDK
    so that your device can be properly supported.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它没有显示，而是显示类似**“Brian的iPhone”上的iOS版本不支持此安装...**的消息，这意味着您必须安装Xcode的最新版本以获取最新版本的SDK，以便您的设备能够得到适当的支持。
- en: Step 3 – download Cocos2d (via SpriteBuilder)
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第3步 – 通过SpriteBuilder下载Cocos2d
- en: Go to [http://www.cocos2d-swift.org/download](http://www.cocos2d-swift.org/download)
    and click on the download link under Latest Release, labelled SpriteBuilder (this
    should open the Mac App Store). At the time of writing this book, the latest version
    is **Cocos2D 3.2.1**, so any content in this book will be following that version
    unless stated otherwise (for example, version 2.1).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 前往[http://www.cocos2d-swift.org/download](http://www.cocos2d-swift.org/download)并点击最新发布下的下载链接，标记为SpriteBuilder（这应该会打开Mac
    App Store）。在撰写本书时，最新版本是**Cocos2D 3.2.1**，所以除非另有说明（例如，版本2.1），本书中的所有内容都将遵循该版本。
- en: As of version 3.2, Cocos2d can be installed only by using SpriteBuilder. For
    those unfamiliar with SpriteBuilder, let me tell you that it is used to create
    projects with a drag-and-drop interface. You do not need to create your game entirely
    through SpriteBuilder. However, as of Cocos2D 3.2.1, project creation is possible
    only through SpriteBuilder.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 截至3.2版本，Cocos2d只能通过SpriteBuilder进行安装。对于那些不熟悉SpriteBuilder的人来说，让我告诉您，它用于通过拖放界面创建项目。您不需要完全通过SpriteBuilder创建您的游戏。然而，截至Cocos2D
    3.2.1版本，项目创建只能通过SpriteBuilder进行。
- en: As with any Mac app, this will be downloaded on your \`Applications` folder,
    and can be run once fully installed.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 就像任何Mac应用程序一样，它将被下载到您的`Applications`文件夹中，并在完全安装后运行。
- en: Creating a new project via SpriteBuilder
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过SpriteBuilder创建新项目
- en: Once Xcode and SpriteBuilder are installed, we can set up an initial project
    to see it all in action. Cocos2d is nice enough to give us some initial temporary
    files on a project creation so that we can get a better start. It's nice because
    we can basically replace them with our own files once we need to.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装了Xcode和SpriteBuilder，我们就可以设置一个初始项目，以便看到所有操作。Cocos2d足够好，在项目创建时给我们一些初始临时文件，这样我们可以有一个更好的开始。它很棒，因为一旦我们需要，我们基本上可以用自己的文件替换它们。
- en: Open **SpriteBuilder**. It may ask you to join their mailing list, but it doesn't
    make a difference in this book whether you sign up or not.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 打开**SpriteBuilder**。它可能会要求您加入他们的邮件列表，但在这本书中，无论您是否注册都没有关系。
- en: 'After that, it may look as if a new project has already been started (which
    may be the case, but let''s make sure we start fresh). Go to **File** | **New**
    | **Project**, and choose a folder location you will remember (for example, \`Desktop`
    or \`Documents`). It should then open up a preview with a blue backdrop and the
    SpriteBuilder text, as shown in the following screenshot:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，它可能看起来像已经启动了一个新项目（这可能是真的，但让我们确保我们从零开始）。转到**文件** | **新建** | **项目**，并选择一个您会记住的文件夹位置（例如，`桌面`或`文档`）。然后，它应该打开一个带有蓝色背景和SpriteBuilder文本的预览，如下面的截图所示：
- en: '![Creating a new project via SpriteBuilder](img/image00211.jpeg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![通过SpriteBuilder创建新项目](img/image00211.jpeg)'
- en: Do not be alarmed if you do not see this exact message. It is simply what's
    happening in version 1.2.1 of SpriteBuilder at the time of writing this book.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有看到这条确切的消息，请不要感到惊讶。这仅仅是本书编写时SpriteBuilder 1.2.1版本中发生的情况。
- en: Congratulations! Your project is now set up.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您的项目现在已经设置好了。
- en: If you wish to start creating your project using the SpriteBuilder visual editor
    for Cocos2d, you can now do so. However, this book does not include any tutorials
    on how to use the program, so if you wish to learn how this program works and
    all about the full potential of the visual editor, check out [https://www.makegameswith.us/tutorials/getting-started-with-spritebuilder/](https://www.makegameswith.us/tutorials/getting-started-with-spritebuilder/).
    They have a great set of tutorials on SpriteBuilder.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想使用SpriteBuilder视觉编辑器为Cocos2d创建项目，您现在可以这样做。然而，本书不包括如何使用该程序的教程，所以如果您想了解这个程序的工作原理以及视觉编辑器的全部潜力，请查看[https://www.makegameswith.us/tutorials/getting-started-with-spritebuilder/](https://www.makegameswith.us/tutorials/getting-started-with-spritebuilder/)。他们有一套很好的SpriteBuilder教程。
- en: If you wish to start coding instead of dragging and dropping, follow the steps
    in the next section.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想开始编写代码而不是拖放，请按照下一节的步骤操作。
- en: Exporting SpriteBuilder projects to Xcode
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将SpriteBuilder项目导出至Xcode
- en: In SpriteBuilder, go to **File** | **Publish**. This will show a progress bar,
    and if your project is brand new, it'll go quite fast.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在SpriteBuilder中，转到**文件** | **发布**。这将显示一个进度条，如果您的项目是全新的，它将非常快地完成。
- en: By default, the Xcode files that are generated when the **Publish** button is
    pressed get saved in the same folder as the project location you chose when you
    first created the project. Remember that I told you to save it in a place that
    you'll remember? Go back to that location, either in **Finder** or by going to
    **Xcode** | **Open viewer**.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，当按下**发布**按钮时生成的Xcode文件将保存在您首次创建项目时选择的与项目位置相同的文件夹中。记得我告诉您要保存到一个您会记住的地方吗？回到那个位置，无论是在**查找器**中还是在**Xcode**
    | **打开查看器**中。
- en: 'Find the file with the same name as your project. It should look something
    like this:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 找到与您的项目同名文件。它看起来可能像这样：
- en: '[PRE0]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you do not see the .`xcodepoj` file extension, don't worry. It should be
    labelled as Xcode project in the kind filter and have a blueprint icon next to
    it.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有看到`.xcodeproj`文件扩展名，请不要担心。它应该被标记为Xcode项目，并在旁边有一个蓝图图标。
- en: Click on that to open it. It should bring up Xcode.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 点击它打开。它应该会打开Xcode。
- en: Feel free to either run the app in a simulator of your choice or attach a device
    and give it a go. Looking good so far! If you wish to run the app on a device,
    go to the section in this chapter titled *Adding a device*.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以自由地选择在您选择的模拟器中运行应用程序，或者连接设备并尝试一下。到目前为止看起来不错！如果您想在设备上运行应用程序，请转到本章标题为*添加设备*的部分。
- en: Summary
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We looked at how to plan your game according to the specific elements you wish
    to include in it, how to choose the tools you'll be needing along the way as you
    create your game, as well as some best practices when it comes to actually creating
    the idea and moving forward throughout the project's lifetime.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我们探讨了如何根据您希望在游戏中包含的具体元素来规划您的游戏，如何在创建游戏的过程中选择所需的工具，以及在实际创建想法并在项目整个生命周期中前进时的一些最佳实践。
- en: Finally, we covered how to download and install Xcode, downloaded and installed
    SpriteBuilder, and downloaded various third-party applications that make your
    life much easier.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们介绍了如何下载和安装Xcode，下载和安装SpriteBuilder，以及下载各种使您生活更轻松的第三方应用程序。
- en: The next chapter will cover in depth why prototypes are essential for a great
    game design, why failing faster with quickly iterated prototypes is the key, and
    why creating a minimal viable product that people can actually play (even if it's
    buggier than anything you've ever seen) is very important for your game's long-term
    success.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将深入探讨原型对于优秀游戏设计的重要性，为什么快速迭代原型以更快地失败是关键，以及为什么创建一个人们可以实际玩的游戏最小可行产品（即使它比您见过的任何东西都更易出bug）对于您游戏长期成功非常关键。
