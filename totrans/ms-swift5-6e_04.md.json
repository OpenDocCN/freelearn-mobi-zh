["```swift\nvar message: String = \"My String\" \nmessage = nil \n```", "```swift\nvar myString: String? \n```", "```swift\nvar myString1: String?\nvar myString2: Optional<String> \n```", "```swift\nenum Optional<T>\n{\n    case None\n    case Some(T)\n} \n```", "```swift\nint i;\nMyObject *m; \n```", "```swift\n-(int)myMethodWithValue:(int)i { \n    return i*2;\n} \n```", "```swift\nMyObject *m;\nNSLog(@\"Value: %d\",[m myMethodWithValue:5]); \n```", "```swift\nvar myString: String \nprint(myString) \n```", "```swift\nvar myOptional: String? \n```", "```swift\nvar myString1: String? \nmyString1 = \"test\"\nvar test: String = myString1! \n```", "```swift\nvar myString1: String? \nmyString1 = \"test\"\nif myString1 != nil { \n    var test = myString1!\n} \n```", "```swift\nif let constantName = optional { \n    statements\n} \n```", "```swift\nif var variableName = optional { \n    statements\n} \n```", "```swift\nvar myString3: String?\nmyString3 = \"Space, the final frontier\" \nif let tempVar = myString3 {\n    print(tempVar)\n} else {\n    print(\"No value\")\n} \n```", "```swift\nif let tmp1 = optional1, let tmp2 = optional2, let tmp3 = optional3 {\n} \n```", "```swift\nif let myOptional = myOptional { \n    print(myOptional)\n} else {\n    print(\"myOptional was nil\")\n} \n```", "```swift\nvar myOptional: String? \nmyOptional = \"test\"\nif var tmp = myOptional { \n    print(\"Inside:\\(tmp)\")\n}\n// This next line will cause a compile time error \nprint(\"Outside: \\(tmp)\") \n```", "```swift\nvar tuple1: (one: String, two: Int)? \nvar tuple2: (one: String, two: Int?) \n```", "```swift\nvar tireSize = car?.tires?.tireSize \n```", "```swift\noptionalA ?? defaultValue \n```", "```swift\nvar defaultName = \"Jon\"\nvar optionalA: String?\nvar optionalB: String?\noptionalB = \"Buddy\"\nvar nameA = optionalA ?? defaultName \nvar nameB = optionalB ?? defaultName \n```", "```swift\nvar nameC = optionalA != nil ? optionalA! : defaultName \n```"]