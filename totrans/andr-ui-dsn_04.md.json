["```java\n<resources> \n  <style name=\"AppTheme\" parent=\"android:Theme.Material\"> \n\n//Inherits from the standard Theme.Material// \n\n  </style> \n</resources> \n\n```", "```java\n<resources> \n\n  <style name=\"AppTheme\" parent=\"android:Theme.Material\"> \n\n    <item name=\"android:colorPrimary\">@color/blue</item> \n\n//Specifies that the theme's primary color should be blue// \n\n    <item name=\"colorPrimaryDark\">@color/darkblue</item> \n\n//Specifies that the navigation bar and status bar should be dark blue// \n\n    <item name=\"colorAccent\">@color/white</item> \n\n//Specifies that the app's accent color should be white// \n\n<item name=\"colorSwitchThumbNormal\">@color/white</item> \n\n//All the switches should have a white thumb element// \n\n  </style> \n\n</resources> \n\n```", "```java\ndependencies { \n    ... \n    compile 'com.android.support:appcompat-v7:23.1.0' \n} \n\n```", "```java\nimport android.support.v7.app.AppCompatActivity; \n\npublic class MainActivity extends AppCompatActivity { \n\n```", "```java\n<style name=\"AppTheme\" parent=\"Theme.AppCompat\"> \n\n```", "```java\n<TextView \n  android:layout_width=\"wrap_content\" \n  android:layout_height=\"wrap_content\" \n  android:elevation=\"20dp\" \n  android:text=\"Hello down there!\" /> \n\n```", "```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<android.support.design.widget.CoordinatorLayout \n......... \n......... \n.......... \n\n<android.support.design.widget.FloatingActionButton \n  android:id=\"@+id/myfab\" \n  android:layout_width=\"wrap_content\" \n  android:layout_height=\"wrap_content\" \n  app:layout_anchor=\"@id/actionbar\" \n\n//The FAB should stay anchored to the action bar//  \n\n  app:layout_anchorGravity=\"bottom|right|end\" \n  android:layout_margin=\"@dimen/fab_margin\" \n  app:elevation=\"20dp\" \n\n//Set the button's elevation so it appears to hover above the rest of the UI, and casts a shadow across the items behind it//   \n\n  android:src=\"img/ic_dialog_email\" /> \n\n//This references the icon that the FAB should display. In this example, I'm using the create new email icon//  \n\n</android.support.design.widget.CoordinatorLayout> \n\n```", "```java\nfab.setOnClickListener(new View.OnClickListener() { \n    @Override public void onClick(View v) { \n        Snackbar.make(content, \"The FAB has been clicked!\",          Snackbar.LENGTH_SHORT).show(); \n\n//Create a snackbar and display the message \"The FAB has been clicked!\"// \n\n    } \n}); \n\n```", "```java\n<android.support.v7.widget.CardView \n\n     android:layout_width=\"match_parent\" \n     android:layout_height=\"wrap_content\"> \n\n</android.support.v7.widget.CardView> \n\n```", "```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n\n<LinearLayout   \n\n  android:layout_width=\"match_parent\" \n\n  android:layout_height=\"match_parent\" \n  android:padding=\"20dp\"  > \n\n  <android.support.v7.widget.CardView \n      android:layout_width=\"match_parent\" \n      android:layout_height=\"wrap_content\" \n      android:id=\"@+id/contacts\" > \n\n   <LinearLayout  \n\n    android:orientation=\"vertical\" \n    android:layout_width=\"match_parent\" \n    android:layout_height=\"match_parent\"> \n\n<TextView \n     android:id=\"@+id/contactName\" \n     android:layout_width=\"wrap_content\" \n     android:layout_height=\"wrap_content\" \n     android:text=\"@string/contactName\" /> \n\n <ImageView \n     android:layout_width=\"wrap_content\" \n     android:layout_height=\"wrap_content\" \n     android:id=\"@+id/contactphoto\" \n     android:src=\"img/avatar\" /> \n\n</LinearLayout> \n\n  </android.support.v7.widget.CardView> \n\n</LinearLayout> \n\n```", "```java\ndependencies { \n     compile \n     'com.android.support:cardview-v7:21.0.+' \n} \n\n```", "```java\n            <android.support.v7.widget.RecyclerView\n            android:id=\"@+id/recylerview\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:scrollbars=\"vertical\" /> \n\n    ```", "```java\n            mLayoutManager = new LinearLayoutManager(this);\n            mRecyclerView.setLayoutManager(mLayoutManager); \n\n    ```", "```java\n            public class MyRecyclerAdapter extends\n            RecyclerView.Adapter<MyRecyclerAdapter.ViewHolder> { \n\n    ```", "```java\n            public class ViewHolder extends\n            RecyclerView.ViewHolder { \n\n    ```"]