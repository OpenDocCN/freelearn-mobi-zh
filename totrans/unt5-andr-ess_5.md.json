["```java\n  using UnityEngine;\n  using UnityEditor;\n```", "```java\n  public class BuilderAssetBundle {\n    // the code you will see below\n  }\n```", "```java\n  [MenuItem(\"PacktPub/AssetBundles/Build Asset Bundle\")]\n  static void Build() {\n    // the code you will see below\n  }\n```", "```java\n  BuildPipeline.BuildAssetBundle(\n    Selection.activeObject, \n   Selection.GetFiltered(typeof(Object),SelectionMode.DeepAssets),\n    \"Assets/Your/Path/To/YourAssetBundle.unity3d\",\n    BuildAssetBundleOptions.CollectDependencies | \n    BuildAssetBundleOptions.CompleteAssets\n  );\n```", "```java\nusing UnityEngine;\nusing UnityEditor;\n\npublic class BuilderAssetBundle {\n  [MenuItem(\"PacktPub/AssetBundles/Build Asset Bundle\")]\n  static void Build() {\n    BuildPipeline.BuildAssetBundle(\n      Selection.activeObject,\n      Selection.GetFiltered(\n        typeof(Object),\n        SelectionMode.DeepAssets\n      ),\n      \"Assets/Your/Path/To/YourAssetBundle.unity3d\",\n      BuildAssetBundleOptions.CollectDependencies | \n      BuildAssetBundleOptions.CompleteAssets\n    );\n  }\n}\n```", "```java\nusing UnityEngine;\nusing System.Collections;\n\npublic class ImporterAssetBundle : MonoBehaviour {\n  void Start() {\n    StartCoroutine(Import());\n  }\n\n  public IEnumerator Import() {\n    using (WWW wwwData = WWW.LoadFromCacheOrDownload(\n        \"http://your-domain.com/your/path/url/new2.unity3d\",\n        23 // your asset bundle version, as an example only\n    )) {\n      yield return wwwData;\n      GameObject obj = www.assetBundle.mainAsset as GameObject;\n      Instantiate(obj);\n      www.assetBundle.Unload(false);\n    }\n  }\n}\n```", "```java\n  using UnityEngine;\n  using System.Collections;\nAfter these lines we will declare our public class:\n  public class MyAssetBundleImporter {\n    // the code you will see below\n  }\n```", "```java\n  public Object assetBundleObject;\n```", "```java\n  public struct AssetBundleStruct {\n    public string assetSourceName;\n    public string assetSourcePath;\n    public string assetBundleUrl;\n    public int assetBundleVersion;\n  }\n```", "```java\n  public IEnumerator Import<T>(AssetBundleStruct abs) where T : Object {}\n```", "```java\n  assetBundleObject = null;\n```", "```java\n  #if UNITY_EDITOR\n    // 1st part, the code you will see below\n  #else\n    // 2nd part, the code you will see below\n  #endif\n```", "```java\n  assetBundleObject = Resources.LoadAssetAtPath(\n    abs.assetSourcePath, typeof(T)\n  );\n\n  if (null == assetBundleObject){\n    Debug.LogError(\"AssetBundle ERROR Path: \" + abs.assetSourcePath);\n    Debug.LogError(\"Asset Bundle could not be found !!!\");\n  }\n  yield break;\n```", "```java\n  WWW www;\n  if (Caching.enabled) {\n    while (false == Caching.ready) {\n      yield return null;\n    }\n    www = WWW.LoadFromCacheOrDownload(\n      abs.assetBundleUrl, abs.assetBundleVersion\n    );\n  } else {\n    www = new WWW(abs.assetBundleUrl);\n  }\n\n  yield return www;\n\n  if (null != www.error) {\n    Debug.LogError(www.error);\n    www.Dispose();\n    yield break;\n  }\n\n  AssetBundle ab = www.assetBundle;\n  www.Dispose();\n\"  www = null;\n  if (string.Empty == abs.assetSourceName || null == abs.assetSourceName) {\n    assetBundleObject = ab.mainAsset;\n  } else {\n    assetBundleObject = ab.Load(abs.assetSourceName, typeof(T));\n  }\n\n  ab.Unload(false);\n```", "```java\nusing UnityEngine;\nusing System.Collections;\n\npublic class ExampleMyImporterUsage : MonoBehaviour {\n  public MyAssetBundleImporter.AssetBundleStruct abs;\n\n  private string _tmpStr;\n  private Object _tmpObj;\n  void Start() {\n    abs = new MyAssetBundleImporter.AssetBundleStruct();\n    abs.assetBundleUrl = \"http://yourapp.com/your/bundle.unity3d\";\n    abs.assetBundleVersion = 0;\n    abs.assetSourceName = \"YourPrefabName\";\n\n    StartCoroutine(Import());\n  }\n\n  IEnumerator Import() {\n    MyAssetBundleImporter mabi = new MyAssetBundleImporter();\n    yield return StartCoroutine(mabi.Import<GameObject>(abs));\n    if (null != mabi.assetBundleObject) {\n      _tmpObj = Instantiate(mabi.assetBundleObject);\n    }\n  }\n\n  void OnGUI() {\n    if (null != _tmpObj) {\n      _tmpStr = _tmpObj.name + \" was successfully created.\";\n      GUILayout.Label(_tmpStr);\n    } else {\n      GUILayout.Label(\"ERROR: Cannot import your AssetBundle.\");\n    }\n  }\n}\n```", "```java\n  using UnityEngine;\n  using UnityEditor;  \n```", "```java\n  public class TextureFormatAssetBundles {\n    // the code you will see below\n  }\n```", "```java\n  public static TextureImporterFormat tif;\n\n  [MenuItem(\"PacktPub/AssetBundles/Create Asset Bundle DXT1\")]\n  static void SetTextureFormatDXT1() {\n    tif = TextureImporterFormat.DXT1;\n    CreateAssetBundle();\n  }\n\n  [MenuItem(\"PacktPub/AssetBundles/Create Asset Bundle DXT5\")]\n  static void SetTextureFormatDXT5() {\n    tif = TextureImporterFormat.DXT5;\n    CreateAssetBundle();\n  }\n\n  [MenuItem(\"PacktPub/AssetBundles/Create Asset Bundle ETC_RGB4\")]\n  static void SetTextureFormatETC_RGB4() {\n    tif = TextureImporterFormat.ETC_RGB4;\n    CreateAssetBundle();\n  }\n```", "```java\n  static void CreateAssetBundle() {\n    // the code you will see below\n  }\n```", "```java\n  string selectedPath = EditorUtility.SaveFilePanel(\n    \"Save\", // TITLE\n    string.Empty, // DIRECTORY PATH\n    \"Your AssetBundle Name\", // DEFAULT FILE NAME\n    \"unity3d\" // FILE EXTENSION\n  );\n\n  if (selectedPath.Length == 0) return;\n```", "```java\n  Object[] selectedAssets = Selection.GetFiltered(\n    typeof(Object), SelectionMode.DeepAssets\n  );\n```", "```java\n  for (int i=0; i < selectedAssets.Length; i++) {\n    Object obj = selectedAssets[i];\n    if ((obj is Texture) == false) continue;\n    string texturePath = AssetDatabase.GetAssetPath(\n      (UnityEngine.Object) obj\n    );\n    AssetDatabase.ImportAsset(texturePath);\n  }\n```", "```java\n  BuildPipeline.BuildAssetBundle(\n    Selection.activeObject,\n    selectedAssets,\n    selectedPath,\n    BuildAssetBundleOptions.CollectDependencies |\n    BuildAssetBundleOptions.CompleteAssets\n  );\n```", "```java\n  Selection.objects = selectedAssets;\n```", "```java\nusing UnityEngine;\nusing UnityEditor;\n\npublic class TextureAssetsPreprocessor : AssetPostprocessor {\n  void OnPreprocessTexture() {\n    TextureImporter ti = assetImporter as TextureImporter;\n    ti.textureFormat = TextureFormatAssetBundles.tif;\n  }\n}\n```", "```java\nusing UnityEngine;\nusing System.Collections;\n\npublic class GetAssetBundleAsync : MonoBehaviour {\n  public string assetBundleUrl = \"http://yourweb.com/yourBundle.unity3d\";\n  public int assetBundleVersion = 1;\n\n  IEnumerator Start() {\n    WWW www = WWW.LoadFromCacheOrDownload(\n      assetBundleUrl, assetBundleVersion\n    );\n\n    yield return www;\n\n    AssetBundle ab = www.assetBundle;\n\n    AssetBundleRequest abr = ab.LoadAsync(\n      \"YourObjName\", typeof(GameObject)\n    );\n\n    yield return abr;\n\n    GameObject go = abr.asset as GameObject;\n\n    ab.Unload(false);\n    www.Dispose();\n  }\n}\n```", "```java\n  AssetBundle ab = www.assetBundle;\n```", "```java\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\nstatic public class YourAssetBundleDispatcher {\n  static Dictionary<string, YourBundleReference> dictionaryBundles;\n\n  static YourAssetBundleDispatcher() {\n         dictionaryBundles = new Dictionary<string, YourBundleReference>();\n  }\n\n     private class YourBundleReference {\n         public AssetBundle ab = null;\n\n         public int assetBundleVersion;\n         public string assetBundleUrl;\n\n         public YourBundleReference(string url, int version) {\n               assetBundleUrl = url;\n               assetBundleVersion = version;\n         }\n     };\n\n  public static AssetBundle \n        RetrieveAssetBundle(string abUrl, int abVersion) {\n         string bundleKey = abUrl + abVersion.ToString();\n\n    YourBundleReference ybr;\n\n    if (dictionaryBundles.TryGetValue(bundleKey, out ybr))\n               return ybr.ab;\n         else\n               return null;\n     }\n\n     public static IEnumerator ImportAssetBundle(string abUrl, int abVersion){\n          string bundleKey = abUrl + abVersion.ToString();\n\n    if (dictionaryBundles.ContainsKey(bundleKey)) {\n               yield return null;\n         } else {\n                using(WWW www = WWW.LoadFromCacheOrDownload(abUrl, abVersion)){\n                   yield return www;\n\n                   if (www.error != null)\n                         throw new Exception(\"WWW ERROR:\" + www.error);\n        YourBundleReference ybr = new YourBundleReference(\n          abUrl, abVersion\n        );\n                   ybr.ab = www.assetBundle;\n                   dictionaryBundles.Add(bundleKey, ybr);\n                }\n         }\n  }\n\n  public static void Dispose(string abUrl, int abVersion, bool flag) {\n    string bundleKey = abUrl + abVersion.ToString();\n\n    YourBundleReference ybr;\n\n         if (dictionaryBundles.TryGetValue(bundleKey, out ybr)){\n               ybr.ab.Unload(flag);\n               ybr.ab = null;\n               dictionaryBundles.Remove(bundleKey);\n         }\n     }\n}\n```", "```java\nusing UnityEngine;\nusing System.Collections;\n\nclass DispatcherUsage : MonoBehaviour {\n  public string assetBundleUrl;\n     public int assetBundleVersion;\n\n     AssetBundle ab;\n\n    void Start() {\n    Debug.Log(\"Importing your Asset Bundle\");\n            ab = YourAssetBundleDispatcher.RetrieveAssetBundle(\n      assetBundleUrl, assetBundleVersion\n    );\n             if(null != ab) StartCoroutine(ImportAssetBundle());\n  }\n\n     IEnumerator ImportAssetBundle() {\n         yield return StartCoroutine(\n      YourAssetBundleDispatcher.ImportAssetBundle(\n        assetBundleUrl, assetBundleVersion\n      )\n    );\n\n         ab = YourAssetBundleDispatcher.RetrieveAssetBundle(\n      assetBundleUrl, assetBundleVersion\n    );\n  }\n\n  void OnDisable() {\n         YourAssetBundleDispatcher.Dispose(\n      assetBundleUrl, assetBundleVersion, false\n    );\n  }\n}\n```", "```java\nusing UnityEngine;\nusing System.Collections;\n\npublic class BinaryDataExample : MonoBehaviour {\n  string assetBundleUrl = \n    \"http://yourweb.com/path/to/yourAssetBundle_1.unity3d\";\n\n  IEnumerator Start() {\n    WWW www = WWW.LoadFromCacheOrDownload(assetBundleUrl, 1);\n    yield return www;\n\n    AssetBundle ab = www.assetBundle;\n\n    TextAsset textAsset = ab.Load(\n      \"YourBinaryFileName\", typeof(TextAsset)\n    ) as TextAsset;\n\n    byte[] yourBinaryData = textAsset.bytes;\n  }\n}\n```", "```java\nusing UnityEngine;\nusing System.Collections;\n\npublic class AssetBundleScript : MonoBehaviour {\n  string assetBundleUrl = \n    \"http://yourweb.com/your/asset/bundle_test.unity3d\";\n\n  IEnumerator Start () {\n    WWW www = WWW.LoadFromCacheOrDownload (assetBundleUrl, 1);\n        yield return www;\n\n        AssetBundle ab = www.assetBundle;\n\n        TextAsset textAsset = ab.Load(\n      \"yourBinaryAssetName\", typeof(TextAsset)\n    ) as TextAsset;\n\n        var assmbl = System.Reflection.Assembly.Load(textAsset.bytes);\n\n    GameObject gameObj = new GameObject();\n        gameObj.AddComponent(\n      assmbl.GetType(\n        \"Your_ClassName_Inherited_From_MonoBehaviour\"\n      )\n    );\n  }\n  }\n```", "```java\nusing UnityEngine;\n\npublic class YourAssetBundleShaders : MonoBehaviour {\n        public Shader[] assetBundleShaders;\n}\n```", "```java\nusing UnityEngine;\nusing UnityEditor;\n\npublic class AssetBundleGenerator {\n  [MenuItem(\"PacktPub/AssetBundles/Generate all accessible Asset Bundles\")]\n       static void Generate() {\n         BuildAssetBundleOptions options = \n                 BuildAssetBundleOptions.CollectDependencies | \n                    BuildAssetBundleOptions.CompleteAssets | \n                    BuildAssetBundleOptions.DeterministicAssetBundle;\n\n    BuildPipeline.PushAssetDependencies();\n\n             BuildPipeline.BuildAssetBundle(\n      AssetDatabase.LoadMainAssetAtPath(\n        \"Assets/YourAssetName_1.prefab\"\n      ), \n      null, \n      \"Your/Path/To/YourAssetBundle_1.unity3d\", \n      options\n    );\n\n    BuildPipeline.PushAssetDependencies();\n    BuildPipeline.BuildAssetBundle(\n      AssetDatabase.LoadMainAssetAtPath(\n        \"Assets/YourAssetName_2.prefab\"\n      ), \n      null, \n      \"YourPath/To/YourAssetBundle_2.unity3d\", \n      options\n    );\n\n    BuildPipeline.BuildAssetBundle(\n      AssetDatabase.LoadMainAssetAtPath(\n        \"Assets/YourAssetName_3.prefab\"\n      ), \n      null, \n      \"YourPath/To/YourAssetBundle_3.unity3d\", \n      options\n    );           \n\n    BuildPipeline.PopAssetDependencies();\n    BuildPipeline.PopAssetDependencies();\n  }\n\n  [MenuItem(\"PacktPub/AssetBundles/Rebuild Asset Bundle\")]\n       static void Rebuild() {\n    BuildAssetBundleOptions options = \n      BuildAssetBundleOptions.CollectDependencies | \n      BuildAssetBundleOptions.CompleteAssets | \n      BuildAssetBundleOptions.DeterministicAssetBundle;\n\n    BuildPipeline.PushAssetDependencies();\n    BuildPipeline.BuildAssetBundle(\n      AssetDatabase.LoadMainAssetAtPath(\n        \"Assets/YourAssetBundleName_1.prefab\"\n      ), \n      null, \n      \"YourPath/To/YourAssetBundle_1.unity3d\", \n      options\n    );\n\n    BuildPipeline.PopAssetDependencies();\n  }\n  }\n```", "```java\nusing UnityEngine;\nusing System.Collections;\n\npublic class AssetBundleSecurityFirst : MonoBehaviour {\n  string assetBundleUrl = \n    \"http://yourweb.com/path/to/yourAssetBundle.unity3d\";\n\n  IEnumerator Start() {\n    WWW www = WWW.LoadFromCacheOrDownload(assetBundleUrl, 1);\n    yield return www;\n\n    TextAsset textAsset = www.assetBundle.Load(\n      \"YourEncryptedAssetName\", typeof(TextAsset)\n    ) as TextAsset;\n\n    /*byte[] yourDecryptedBytes = AnyDecryptionFunction(\n      textAsset.bytes // your encrypted bytes\n    );*/\n  }\n}\n```", "```java\nusing UnityEngine;\nusing System.Collections;\n\npublic class AssetBundleSecuritySecond : MonoBehaviour {\n  string assetBundleUrl = \n    \"http://yourweb.com/path/to/yourAssetBundle.unity3d\";\n\n  IEnumerator Start () {\n    WWW www = new WWW(assetBundleUrl);\n    yield return www;\n\n    /*byte[] yourEncryptedBytes = www.bytes;\n    byte[] yourDecryptedBytes = \n      AnyDecryptionFunction(yourEncryptedBytes);\n\n    AssetBundleCreateRequest assetBundleCreateRequest = \n      AssetBundle.CreateFromMemory(yourDecryptedBytes);\n\n    yield return assetBundleCreateRequest;\n\n    AssetBundle ab = assetBundleCreateRequest.assetBundle;*/\n\n    // Here you can use your AssetBundle. \n    // The AssetBundle was not cached.\n  }\n}\n```", "```java\nusing UnityEngine;\nusing System.Collections;\n\npublic class AssetBundleSecurityThird : MonoBehaviour {\n  string assetBundleUrl = \n    \"http://yourweb.com/path/to/yourAssetBundle.unity3d\";\n\n  IEnumerator Start() {\n    WWW www = WWW.LoadFromCacheOrDownload(assetBundleUrl, 1);\n    yield return www;\n\n    TextAsset textAsset = www.assetBundle.Load(\n      \"YourEncryptedAsset\", typeof(TextAsset)\n    ) as TextAsset;\n\n    /*byte[] yourEncryptedBytes = textAsset.bytes;\n    byte[] yourDecryptedBytes = \n      AnyDecryptionFunction(yourEncryptedBytes);\n\n    AssetBundleCreateRequest assetBundleCreateRequest = \n      AssetBundle.CreateFromMemory(yourDecryptedBytes);\n    yield return assetBundleCreateRequest;\n\n    AssetBundle ab = assetBundleCreateRequest.assetBundle;*/\n    // Here you can use your AssetBundle. The AssetBundle was cached.\n  }\n}\n```"]