["```swift\nvoid setup() {\n\n  // EEPROM INITIALIZATION - FIRST TIME ONLY\n\n  for (int i = 0; i < 6*NUMBER_OF_PINS; i++)\n    EEPROM[i] = 0;\n\n  // Set the master PIN\n\n  EEPROM[0] = 1;\n  EEPROM[1] = '1';\n  EEPROM[2] = '2';\n  EEPROM[3] = '3';\n  EEPROM[4] = '4';\n  EEPROM[5] = '5';\n\nâ€¦\n\n}\n```", "```swift\n    NSLocationAlwaysUsageDescription = \"This is required in order to make Garage iBeacon working properly.\";\n    ```", "```swift\n@interface BLEConnectionViewController ()\n\n@property (strong, nonatomic) IBOutlet UILabel      *deviceUUIDLabel;\n\n@property (strong, nonatomic) IBOutlet UITextField *pinField;\n@property (strong, nonatomic) IBOutlet UITextField *longitudeField;\n@property (strong, nonatomic) IBOutlet UITextField *latitudeField;\n@property (strong, nonatomic) IBOutlet UISegmentedControl   *houseRegionSizeSegment;\n\n@property (strong, nonatomic) CBCentralManager      *centralManager;\n@property (strong, nonatomic) NSTimer               *scanningTimer;\n\n@end\n```", "```swift\n- (IBAction)startLocating:(id)sender {\n\n}\n```", "```swift\n- (IBAction)regionSizeChanged:(UISegmentedControl *)sender {\n\n}\n```", "```swift\n@interface GarageViewController ()\n\n@property (strong, nonatomic) IBOutlet UIImageView  *houseRegionIndicator;\n@property (strong, nonatomic) IBOutlet UIImageView  *garageRegionIndicator;\n@property (strong, nonatomic) IBOutlet UIImageView *readyToOpenIndicator;\n\n@end\n```", "```swift\n- (IBAction)manualOperation:(UIButton *)sender {\n}\n```", "```swift\n- (IBAction)simulateHomeRegionExit:(UIButton *)sender {\n}\n```", "```swift\n    @interface PinsViewController ()\n\n    @property (strong, nonatomic) IBOutlet UITableView *tableView;\n    @property (strong, nonatomic) IBOutlet UITextField *pinField;\n\n    @end\n    ```", "```swift\n    - (IBAction)addPin:(id)sender {\n    }\n    ```", "```swift\n#import <CoreLocation/CoreLocation.h>\n```", "```swift\n@interface BLEConnectionViewController : UIViewController < CBCentralManagerDelegate>\n\n@end\n```", "```swift\n@interface BLEConnectionViewController : UIViewController <CLLocationManagerDelegate, CBCentralManagerDelegate>\n\n@end\n```", "```swift\n@property (strong, nonatomic) CLLocationManager     *locationManager;\n```", "```swift\n-(void)viewDidAppear:(BOOL)animated {\n\n     [super viewDidAppear:animated];\n\n    _locationManager = [[CLLocationManager alloc] init];\n[_locationManager requestAlwaysAuthorization];\n\n    _centralManager = [[CBCentralManager alloc] initWithDelegate:self queue:nil];\n}\n```", "```swift\n[_locationManager requestAlwaysAuthorization];\n```", "```swift\n- (IBAction)startLocating:(id)sender {\n\n    _locationManager.delegate = self;\n    _locationManager.distanceFilter = kCLDistanceFilterNone;\n    _locationManager.desiredAccuracy = kCLLocationAccuracyBest;\n    [_locationManager startUpdatingLocation];\n}\n```", "```swift\n- (void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray *)locations {\n\n    [manager stopUpdatingLocation];\n    CLLocation *currentLocation = [locations objectAtIndex:0];\n\n    _latitudeField.text = [NSString stringWithFormat:@\"%f\",currentLocation.coordinate.latitude];\n    _longitudeField.text = [NSString stringWithFormat:@\"%f\",currentLocation.coordinate.longitude];\n\n    NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];\n\n    [userDefaults setObject:[NSNumber numberWithFloat:currentLocation.coordinate.latitude] forKey:@\"HouseLatitude\"];\n    [userDefaults setObject:[NSNumber numberWithFloat:currentLocation.coordinate.longitude] forKey:@\"HouseLongitude\"];\n    [userDefaults synchronize];\n\n    sleep(2);  // To be sure that monitoring of region started - To avoid kCLErrorDomain error 5 \n}\n```", "```swift\n- (IBAction)regionSizeChanged:(UISegmentedControl *)sender {\n\n    NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];\n\n    [userDefaults setObject:[NSNumber numberWithFloat:sender.selectedSegmentIndex+1] forKey:@\"HouseSize\"];\n    [userDefaults synchronize];\n}\n```", "```swift\n- (BOOL)textFieldShouldReturn:(UITextField *)textField {\n\n    [textField resignFirstResponder];\n\n    NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];\n\n    [userDefaults setObject:textField.text forKey:@\"GarageiBeaconPIN\"];\n    [userDefaults synchronize];\n\n    return YES;\n}\n```", "```swift\n- (void)viewDidLoad {\n\n    [super viewDidLoad];\n\n    _deviceUUIDLabel.text = [[NSUserDefaults standardUserDefaults] objectForKey:@\"GarageiBeaconDevice\"];\n    _pinField.text = [[NSUserDefaults standardUserDefaults] objectForKey:@\"GarageiBeaconPIN\"];\n\n    _latitudeField.text = [[[NSUserDefaults standardUserDefaults] objectForKey:@\"HouseLatitude\"] stringValue];\n    _longitudeField.text = [[[NSUserDefaults standardUserDefaults] objectForKey:@\"HouseLongitude\"] stringValue];\n}\n```", "```swift\n-(void)viewDidDisappear:(BOOL)animated {\n    [super viewDidDisappear:animated];\n\n    _centralManager = nil;\n    _locationManager = nil;\n}\n```", "```swift\n#import <CoreLocation/CoreLocation.h>\n#import <CoreBluetooth/CoreBluetooth.h>\n\n@interface GarageViewController : UIViewController <CLLocationManagerDelegate, CBCentralManagerDelegate, CBPeripheralDelegate>\n\n@end\n```", "```swift\n@property (nonatomic,strong) CLLocationManager      *locationManager;\n@property (nonatomic,strong) CBCentralManager       *centralManager;\n\n@property (strong, nonatomic) CBPeripheral          *arduinoDevice;\n@property (strong, nonatomic) CBCharacteristic      *sendCharacteristic;\n\n@property                     BOOL                  insideHouse;\n```", "```swift\n- (void)peripheral:(CBPeripheral *)peripheral didDiscoverCharacteristicsForService:(CBService *)service error:(NSError *)error {\n\n    if (error) {\n\n        NSLog(@\"Error %@\",[error localizedDescription]);\n\n        return;\n    }\n\n    for (CBService *service in peripheral.services) {\n\n        if ([service.UUID.UUIDString isEqualToString:NRF8001BB_SERVICE_UUID]) {\n\n            for (CBCharacteristic *characteristic in service.characteristics) {\n\n                if ([characteristic.UUID.UUIDString isEqualToString:NRF8001BB_CHAR_TX_UUID]) {\n\n                    _sendCharacteristic = characteristic;\n\n                    // Device connected - Sending opening command\n\n                    NSData      *data;\n                    NSString    *msg;\n\n                    msg = [[NSString alloc] initWithFormat:@\"%@O=1\",[[NSUserDefaults standardUserDefaults] objectForKey:@\"GarageiBeaconPIN\"]];\n                    data=[msg dataUsingEncoding:NSUTF8StringEncoding];\n\n                    [_arduinoDevice writeValue:data forCharacteristic:_sendCharacteristic type:CBCharacteristicWriteWithoutResponse];\n\n                    // Disconnects\n\n                    [_centralManager cancelPeripheralConnection:_arduinoDevice];\n                }\n            }\n        }\n    }\n}\n```", "```swift\n- (void)viewDidLoad {\n\n    [super viewDidLoad];\n\n    _centralManager = [[CBCentralManager alloc] initWithDelegate:self queue:nil];\n\n    _locationManager = [[CLLocationManager alloc] init];\n    _locationManager.delegate = self;\n\n    _locationManager.desiredAccuracy = kCLLocationAccuracyBest;\n    _locationManager.distanceFilter = kCLDistanceFilterNone;\n    _locationManager.activityType = CLActivityTypeOther;\n\n    [_locationManager requestAlwaysAuthorization];\n\n    for (CLRegion *region in _locationManager.monitoredRegions) {\n\n        [_locationManager requestStateForRegion:region];\n    }\n\n    _arduinoDevice = nil;\n\n    // Monitoring change of UserDefaults\n\n    [[NSUserDefaults standardUserDefaults] addObserver:self\n                                            forKeyPath:@\"HouseLongitude\"\n                                               options:NSKeyValueObservingOptionNew\n                                               context:NULL];\n\n    [[NSUserDefaults standardUserDefaults] addObserver:self\n                                            forKeyPath:@\"HouseSize\"\n                                               options:NSKeyValueObservingOptionNew\n                                               context:NULL];\n\n    [self addObserver:self\n           forKeyPath:@\"insideHouse\"\n              options:NSKeyValueObservingOptionNew\n              context:NULL];\n}\n```", "```swift\n- (void)locationManager:(CLLocationManager *)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status {\n\n    if (status == kCLAuthorizationStatusAuthorizedAlways && _centralManager.state == CBCentralManagerStatePoweredOn) {\n        [self createGaregeRegionIfNeeded];\n    }\n}\n```", "```swift\n[[NSUserDefaults standardUserDefaults] addObserver:self\n                                            forKeyPath:@\"HouseLongitude\"\n                                               options:NSKeyValueObservingOptionNew\n                                               context:NULL];\n```", "```swift\n-(void)observeValueForKeyPath:(NSString *)aKeyPath ofObject:(id)anObject change:(NSDictionary *)aChange context:(void *)aContext {\n\n    if ([aKeyPath isEqualToString:@\"insideHouse\"]) {\n\n        if (_insideHouse)\n            _readyToOpenIndicator.image = [UIImage imageNamed:@\"grayLED.png\"];\n        else\n            _readyToOpenIndicator.image = [UIImage imageNamed:@\"blueLED.png\"];\n\n        return;\n    }\n\n    CLLocationCoordinate2D center;\n\n    center.latitude = [[[NSUserDefaults standardUserDefaults] objectForKey:@\"HouseLatitude\"] floatValue];\n    center.longitude = [[[NSUserDefaults standardUserDefaults] objectForKey:@\"HouseLongitude\"] floatValue];\n\n    double radius = [[[NSUserDefaults standardUserDefaults] objectForKey:@\"HouseSize\"] doubleValue];\n    radius = (radius == 0) ? 1 : radius;\n\n    //NSLog(@\"Latitude %f Longitude %f Radius %f\",center.latitude, center.longitude, radius);\n\n    CLCircularRegion *houseRegion = [[CLCircularRegion alloc] initWithCenter:center\nradius:100\\. * radius\nidentifier:@\"House Region\"];\n    houseRegion.notifyOnEntry = YES;\n    houseRegion.notifyOnExit = YES;\n\n    [_locationManager startMonitoringForRegion:houseRegion];\n    [_locationManager requestStateForRegion:houseRegion];\n}\n```", "```swift\n[_locationManager startMonitoringForRegion:houseRegion];\n```", "```swift\n[_locationManager requestStateForRegion:houseRegion];\n```", "```swift\n-(void)createGaregeRegionIfNeeded {\n\n    NSArray *regions = [_locationManager.monitoredRegions allObjects];\n\n    NSPredicate *p = [NSPredicate predicateWithFormat:@\"identifier == %@\",@\"Garage Region\"];\n    NSArray *garageRegions = [regions filteredArrayUsingPredicate:p];\n\n    if (garageRegions.count == 0 && _centralManager.state == CBCentralManagerStatePoweredOn) {\n\n        NSUUID *beaconUUID = [[NSUUID alloc] initWithUUIDString:@\"00000000-0000-0000-0000-0000000000FF\"];\n\n        CLBeaconRegion *beaconRegion = [[CLBeaconRegion alloc] initWithProximityUUID:beaconUUID\n                                                                               major:0\n                                                                               minor:1\n                                                                          identifier:@\"Garage Region\"];\n        beaconRegion.notifyEntryStateOnDisplay = YES;\n\n        [_locationManager startMonitoringForRegion:beaconRegion];\n        [_locationManager requestStateForRegion:beaconRegion];\n    }\n}\n```", "```swift\n- (void)locationManager:(CLLocationManager *)manager didEnterRegion:(CLRegion *)region  {\n\n    UILocalNotification* localNotification = [[UILocalNotification alloc] init];\n    localNotification.fireDate = nil;\n    localNotification.alertBody = [NSString stringWithFormat:@\"Entering %@\",region.identifier];\n    localNotification.timeZone = [NSTimeZone defaultTimeZone];\n    localNotification.soundName = @\"Chime.aiff\";\n    [[UIApplication sharedApplication] presentLocalNotificationNow:localNotification];\n\n    if ([region.identifier isEqualToString:@\"Garage Region\"]) {\n\n        [_locationManager startRangingBeaconsInRegion:(CLBeaconRegion *)region];\n\n        if (_insideHouse)\n            return;\n\n        NSString *deviceIdentifier = [[NSUserDefaults standardUserDefaults] objectForKey:@\"GarageiBeaconDevice\"];\n\n        if (deviceIdentifier!=nil && _arduinoDevice==nil) {\n\n            NSArray *devices = [_centralManager retrievePeripheralsWithIdentifiers:@[[CBUUID UUIDWithString:deviceIdentifier]]];\n            if (devices.count == 0) {\n                return;\n            }\n\n            _arduinoDevice = devices[0];\n            _arduinoDevice.delegate = self;\n        }\n\n        [_centralManager connectPeripheral:_arduinoDevice options:nil];\n\n        [self setInsideHouse:YES];\n    }\n}\n```", "```swift\n- (void)locationManager:(CLLocationManager *)manager didExitRegion:(CLRegion *)region {\n\nUILocalNotification* localNotification = [[UILocalNotification alloc] init];\n    localNotification.fireDate = nil;\n    localNotification.alertBody = [NSString stringWithFormat:@\"Exiting %@\",region.identifier];\n    localNotification.timeZone = [NSTimeZone defaultTimeZone];\n    localNotification.soundName = @\"Chime.aiff\";\n    [[UIApplication sharedApplication] presentLocalNotificationNow:localNotification];\n\n    [_locationManager stopRangingBeaconsInRegion:(CLBeaconRegion *)region];\n\n    if ([region.identifier isEqualToString:@\"House Region\"]) {\n\n        [self setInsideHouse:NO];\n    }\n}\n```", "```swift\n    if ([aKeyPath isEqualToString:@\"insideHouse\"]) {\n\n        if (_insideHouse)\n            _readyToOpenIndicator.image = [UIImage imageNamed:@\"grayLED.png\"];\n        else\n            _readyToOpenIndicator.image = [UIImage imageNamed:@\"blueLED.png\"];\n\n        return;\n    }\n```", "```swift\n- (void)locationManager:(CLLocationManager *)manager didDetermineState:(CLRegionState)state forRegion:(CLRegion *)region {\n\n    switch (state) {\n\n        case CLRegionStateInside:\n            NSLog(@\"Inside %@\",region.identifier);\n            break;\n\n        case CLRegionStateOutside:\n            NSLog(@\"Outside %@\",region.identifier);\n            break;\n\n        case CLRegionStateUnknown:\n            NSLog(@\"Unknown %@\",region.identifier);\n            break;\n    }\n\n    if ([region.identifier isEqualToString:@\"Garage Region\"]) {\n\n        if (state==CLRegionStateInside) {\n\n            _garageRegionIndicator.image = [UIImage imageNamed:@\"blueLED.png\"];\n        }\n        else {\n\n            _garageRegionIndicator.image = [UIImage imageNamed:@\"grayLED.png\"];\n        }\n    }\n\n    if ([region.identifier isEqualToString:@\"House Region\"]) {\n\n        if (state==CLRegionStateInside) {\n\n            _houseRegionIndicator.image = [UIImage imageNamed:@\"blueLED.png\"];\n        }\n        else {\n\n            [self setInsideHouse:NO];\n            _houseRegionIndicator.image = [UIImage imageNamed:@\"grayLED.png\"];\n        }\n    }\n\n}\n```", "```swift\n- (IBAction)manualOperation:(UIButton *)sender {\n\n    NSString *deviceIdentifier = [[NSUserDefaults standardUserDefaults] objectForKey:@\"GarageiBeaconDevice\"];\n\n    if (deviceIdentifier!=nil && _arduinoDevice==nil) {\n\n        NSArray *devices = [_centralManager retrievePeripheralsWithIdentifiers:@[[CBUUID UUIDWithString:deviceIdentifier]]];\n        if (devices.count == 0) {\n            return;\n        }\n        _arduinoDevice = devices[0];\n        _arduinoDevice.delegate = self;\n    }\n\n    if (_arduinoDevice != nil) {\n        [_centralManager connectPeripheral:_arduinoDevice options:nil];\n    }\n}\n\n- (IBAction)simulateHomeRegionExit:(UIButton *)sender {\n\n    //_insideHouse = NO; // This doesn't fire the KVO !\n    [self setInsideHouse:NO];\n}\n```", "```swift\n-(void)locationManager:(CLLocationManager *)manager didRangeBeacons:(NSArray *)beacons inRegion:(CLBeaconRegion *)region {\n\n    if ([beacons count] == 0) {\n        return;\n    }\n\n    CLBeacon *b = beacons[0];\n\n    if (b.proximity == CLProximityFar) {\n\n        NSLog(@\"Far\");\n    }\n\n    if (b.proximity == CLProximityNear) {\n\n        NSLog(@\"Near\");\n    }\n\n    if (b.proximity == CLProximityImmediate) {\n\n        NSLog(@\"Immediate\");\n    }\n\n    if (b.proximity == CLProximityUnknown) {\n\n        NSLog(@\"Unknown\");\n    }\n}\n\n- (void)locationManager:(CLLocationManager *)manager monitoringDidFailForRegion:(CLRegion *)region withError:(NSError *)error {\n\n    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:NSLocalizedString(@\"Error\",nil)\n                                                    message:[NSString stringWithFormat:@\"Region Monitoring Failed for the region: %@\\n%@\",[region identifier],[error localizedDescription]]\n                                                   delegate:self\n                                          cancelButtonTitle:@\"Ok\"\n                                          otherButtonTitles:nil,nil];\n\n    NSLog(@\"%@\",[error localizedDescription]);\n\n    [alert show];\n}\n```", "```swift\n      for (int i = 0; i < 6*NUMBER_OF_PINS; i++)\n        EEPROM[i] = 0;\n\n      // Set the master PIN\n\n      EEPROM[0] = 1;     // Don't change this\n      EEPROM[1] = '1';\n      EEPROM[2] = '2';\n      EEPROM[3] = '3';\n      EEPROM[4] = '4';\n      EEPROM[5] = '5';\n    ```"]