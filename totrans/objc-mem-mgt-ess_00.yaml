- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Managing memory is one of the toughest problems we deal with in Objective-C.
    This book will provide you with the most important information about effective
    memory management in your applications.
  prefs: []
  type: TYPE_NORMAL
- en: The practical element will also ensure that the programmers can actively learn
    key methods and concepts of memory management in a more engaging way rather than
    just simply read the book. Throughout this book, I will be giving examples of
    code.
  prefs: []
  type: TYPE_NORMAL
- en: These example code will demonstrate the fundamentals of programming and memory
    management as well as cover some aspects of iOS development such as Core Data.
    All these Xcode projects are ready to run out of the box and you do not need any
    additional setup to run the code. Just make sure that you have the the latest
    version of Xcode, which is version 6 at this point in time.
  prefs: []
  type: TYPE_NORMAL
- en: So, this book will help you become aware of memory management and how to implement
    this correctly and effectively while being aware of the benefits at the same time.
    This tutorial-based book will actively demonstrate techniques for the implementation
    of memory management, showing the resultant effects on performance and effective
    implementation.
  prefs: []
  type: TYPE_NORMAL
- en: I have to mention that in this book, I will speak about the most recent standard
    of Objective-C and Objective-C 2.0\. Apple suggests Objective-C as a main tool
    of development for their platform and strives to improve the product continuously.
  prefs: []
  type: TYPE_NORMAL
- en: I must say that not all of Apple's attempts to improve Objective-C have been
    entirely successful. Garbage collection is an example of ineffective memory management.
    It is deprecated since OS X Version 10.8 in favor of Automatic Reference Counting
    (ARC) and is scheduled to be removed in a future version of OS X.
  prefs: []
  type: TYPE_NORMAL
- en: I have been working with Objective-C for years and C++ for even longer. Hence,
    memory management is not an alien concept to me as I have been debugging and tracing
    memory leaks for years in the course of my work at Azukisoft Pte Ltd.
  prefs: []
  type: TYPE_NORMAL
- en: At my job at Azukisoft Pte Ltd, I work mostly with Objective-C but with the
    occasional C++ thrown into the mix. And this is a very interesting combination,
    which will be highlighted in this book too.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0014_split_000.html#page "Chapter 1. Introduction to Objective-C
    Memory Management"), *Introduction to Objective-C Memory Management*, will introduce
    you to reference counting, Manual Retain Release (MRR), object ownership, sand
    life cycle, and memory leaks.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0020_split_000.html#page "Chapter 2. Automatic Reference Counting"),
    *Automatic Reference Counting*, will introduce you to ARC and how it works, its
    advantages, and how to set up your projects to use ARC, memory models in Objective-C,
    and UIKit with ARC.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0026_split_000.html#page "Chapter 3. Using Autorelease Pools"),
    *Using Autorelease Pools*, introduces you to autorelease pools, autorelease pools
    mechanics, Apple-autoreleased classes overview, ARC and autorelease, and blocks
    and threads.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0032_split_000.html#page "Chapter 4. Object Creation and Storage"),
    *Object Creation and Storage*, will cover the different ways to create objects;
    a comparison of different memory management options: ARC, MRC, autorelease pools,
    garbage collection, memory models; and how @property makes your life easier.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0044_split_000.html#page "Chapter 5. Managing Your Application
    Data"), *Managing Your Application Data*, will cover disk cache, UI techniques
    of partial data display, serialization and archiving objects, methods to encode
    and decode objects, cases when you need SQLite, and SQLite versus Core Data.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0048_split_000.html#page "Chapter 6. Using Core Data for Persistence"),
    *Using Core Data for Persistence*, explains what Core Data is and why you should
    use it, NSManagedObject and its use in your application, memory management when
    using Core Data, and the common errors.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](part0056_split_000.html#page "Chapter 7. Key-value Programming
    Approaches"), *Key-value Programming Approaches*, explains what key-value coding
    or KVC is, the NSKeyValueCoding protocol, manual subsets of NSKeyValueCoding behavior,
    associated objects, selectors as keys, maximum flexibility, and handling keys/values.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](part0064_split_000.html#page "Chapter 8. Introduction to Swift"),
    *Introduction to Swift*, highlights Cocoa binding in OS X, differences between
    automatic and manual key-value observing, and how key-value observation is implemented.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](part0068_split_000.html#page "Chapter 9. Memory Management and
    Debugging"), *Memory Management and Debugging*, covers memory overuse, collecting
    data on your app, how to use instruments in Xcode, using the LLVM/Clang Static
    Analyzer, using NSZombie to help find an over-released object, and plumbing leaks.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](part0074_split_000.html#page "Chapter 10. Tips and Tricks for
    Memory Management"), *Tips and Tricks for Memory Management*, explains the use
    of accessor methods, declaring accessors using properties, performance guidelines,
    and when you should avoid KVC and KVO.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](part0081_split_000.html#page "Chapter 11. Features of Xcode 6"),
    *Features of Xcode 6*, introduces you to new tools such as view hierarchy debugger,
    preview editor, and the addition of new functionalities such as allowing storyboards
    and NIBs to be used as launch images for your application instead of just static
    images.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this book, you will need Apple's Intel-based Macbook, iMac or Mac mini,
    2010 models or higher with Xcode installed, version 4.3 or later (which is available
    at the Mac Apple Store).
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is especially designed for developers with minimum experience in Objective-C
    or another object-oriented programming language as well as tech students with
    minimum knowledge of programming logic, object-oriented programming, and the Apple
    OS X environment.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "When
    you do a `new`, `malloc`, or `alloc`, what the operating system does is that it
    is giving your program a chunk of memory on the heap."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "In Xcode, go to the target **Build Phases** tab, open the **Compile Sources**
    group, and you will be able to see the source file list."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata** **Submission** **Form** link,
    and entering the details of your errata. Once your errata are verified, your submission
    will be accepted and the errata will be uploaded to our website or added to any
    list of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
