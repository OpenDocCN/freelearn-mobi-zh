["```swift\n    public override void OnActivated (UIApplication application){\n    Console.WriteLine(\"Activated, application state: {0}\", application.ApplicationState);\n    }\n    public override void OnResignActivation (UIApplication application){\n    Console.WriteLine(\"Resign activation, application state: {0}\", application.ApplicationState);\n    }\n    public override void DidEnterBackground (UIApplication application){\n    Console.WriteLine(\"Entered background, application state: {0}\", application.ApplicationState);\n    }\n    public override void WillEnterForeground (UIApplication application){\n    Console.WriteLine(\"Will enter foreground, application state: {0}\", application.ApplicationState);\n    }\n\n    ```", "```swift\npublic override void WillTerminate (UIApplication application){\nConsole.WriteLine(\"App will terminate!\");\n}\n\n```", "```swift\n    private NSObject didEnterBgdObserver;\n    private NSObject willEnterFgdObserver;\n\n    ```", "```swift\n    private void AddAppStateObservers(){\n    this.didEnterBgdObserver = NSNotificationCenter.DefaultCenter. AddObserver(UIApplication.DidEnterBackgroundNotification, delegate(NSNotification obj) {\n    Console.WriteLine(\"App entered background, app state: {0}\", UIApplication.SharedApplication.ApplicationState);\n    } );\n    this.willEnterFgdObserver = NSNotificationCenter.DefaultCenter. AddObserver(UIApplication.WillEnterForegroundNotification, delegate(NSNotification obj) {\n    Console.WriteLine(\"App will enter foreground, app state: {0}\", UIApplication.SharedApplication.ApplicationState);\n    } );\n    }\n    private void RemoveAppStateObservers(){\n    NSNotificationCenter.DefaultCenter.RemoveObservers(new NSObject[] { this.didEnterBgdObserver, this.willEnterFgdObserver });\n    }\n\n    ```", "```swift\n    this.AddAppStateObservers();\n\n    ```", "```swift\nthis.didEnterBgdObserver = NSNotificationCenter.DefaultCenter. AddObserver(UIApplication.DidEnterBackgroundNotification, delegate(NSNotification obj) {\nConsole.WriteLine(\"App entered background, app state: {0}\", UIApplication.SharedApplication.ApplicationState);\n} );\n\n```", "```swift\nthis.RemoveAppStateObservers();\n\n```", "```swift\n    private int taskID;\n    public override void DidEnterBackground (UIApplication application){\n    if (UIDevice.CurrentDevice.IsMultitaskingSupported && this.taskID == 0){\n    this.taskID = application.BeginBackgroundTask(delegate {\n    application.EndBackgroundTask(taskID);\n    this.taskID = 0;\n    } );\n    ThreadPool.QueueUserWorkItem(delegate {\n    for (int i = 0; i < 60; i++){\n    Console.WriteLine(\"Task: {0} - Current Time: {1}\", this.taskID, DateTime.Now);\n    Thread.Sleep(1000);\n    }\n    application.EndBackgroundTask(this.taskID);\n    this.taskID = 0;\n    } );\n    }\n    }\n    public override void WillEnterForeground (UIApplication application){\n    if (this.taskID != 0){\n    Console.WriteLine(\"Background task is running!\");\n    } else{\n    Console.WriteLine(\"Background task completed!\");\n    }\n    }\n\n    ```", "```swift\nthis.taskID = application.BeginBackgroundTask(delegate {\napplication.EndBackgroundTask(taskID);\nthis.taskID = 0;\n} );\n\n```", "```swift\nConsole.WriteLine(\"Remaining time: {0}\", application.BackgroundTimeRemaining);\n\n```", "```swift\n    private AVAudioPlayer audioPlayer;\n    public override void ViewDidLoad (){\n    base.ViewDidLoad ();\n    NSError error = null;\n    AVAudioSession.SharedInstance ().SetCategory (AVAudioSession.CategoryPlayback, out error);\n    if (error != null){\n    Console.WriteLine(\"Error setting audio session category: {0}\", error.LocalizedDescription);\n    }\n    this.audioPlayer = AVAudioPlayer.FromUrl(NSUrl.FromFilename (\"audio/sound.m4a\"));\n    this.buttonStart.TouchUpInside += delegate {\n    this.audioPlayer.Play();\n    } ;\n    }\n\n    ```", "```swift\nNSError error = null;\nAVAudioSession.SharedInstance ().SetCategory (AVAudioSession.CategoryPlayback, out error);\n\n```", "```swift\n    public override void DidEnterBackground (UIApplication application){\n    application.SetKeepAliveTimeout(610, delegate {\n    Console.WriteLine(\"App woken up for network connection maintenance!\");\n    } );\n    }\n\n    ```", "```swift\napplication.SetKeepAliveTimeout(610, delegate {\nConsole.WriteLine(\"App woken up for network connection maintenance!\");\n} );\n\n```"]