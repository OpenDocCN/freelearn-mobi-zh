["```swift\nfunc foo() { print(\"foo\") }\n```", "```swift\nInput: [1, 2, 3, 4, 5] | Expected Output: 4Input: [7, 2, 9, 5, 1] | Expected Output: 8\nInput: [10, 3, 5, 2, 8] | Expected Output: 8\nInput: [6, 5] | Expected Output: 1\nInput: [6] | Expected Output: 0\nInput: [] | Expected Output: 0\nInput: [-10, -5] | Expected Output: -5\n```", "```swift\nfunc maxSubarraySum(_ nums: [Int]) -> Int {    var maxSum = Int.min\n    for i in 0..<nums.count {\n        var currentSum = 0\n        for j in i..<nums.count {\n            currentSum += nums[j]\n            maxSum = max(maxSum, currentSum)\n        }\n    }\n    return maxSum\n}\n```", "```swift\nfunc maxSubarraySum(_ nums: [Int]) -> Int {    var maxSum = nums[0]\n    var currentSum = nums[0]\n    for i in 1..<nums.count {\n        currentSum = max(nums[i], currentSum + nums[i])\n        maxSum = max(maxSum, currentSum)\n    }\n    return maxSum\n}\n```", "```swift\n[2, -3, 5, -1, 6]Iteration 1: currentSum = 2, maxSum = 2\nIteration 2: currentSum = -1, maxSum = 2\nIteration 3: currentSum = 5, maxSum = 5\nIteration 4: currentSum = 4, maxSum = 5\nIteration 5: currentSum = 10, maxSum = 10\n```", "```swift\nfunc findElement(_ array: [Int], target: Int) -> Bool {    for element in array {\n        if element == target {\n            return true\n        }\n    }\n    return false\n}\n```", "```swift\nfunc printNumbers(n: Int) {    var numbers = [Int]()  // Array to store numbers\n    for i in 1...n {\n        numbers.append(i)  // Adding numbers to the array\n    }\n    for number in numbers {\n        print(number)  // Printing each number\n    }\n}\n```"]