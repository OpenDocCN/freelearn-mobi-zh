["```swift\nstruct ContentView: View {\n    //animation bools\n    @State var scaleUpDown = false\n    @State var rotateInOut = false\n    @State var moveInOut = false\n```", "```swift\nvar body: some View {\n      ZStack {\n             }\n      }\n```", "```swift\nRectangle() \n.foregroundColor(Color.black)\n```", "```swift\n.edgesIgnoringSafeArea(.all)\n```", "```swift\n//MARK: - ZStack for the 12 and 6 O'clock circles\n            ZStack {\n                ZStack {\n                    Circle().fill(LinearGradient(gradient:                       Gradient(colors: [.green, .white]),                       startPoint: .top, endPoint: .bottom))\n                        .frame(width: 120, height: 120)\n                        .offset(y: moveInOut ? -60 : 0)\n\n                    Circle().fill(LinearGradient(gradient:                       Gradient(colors: [.green, .white]),                       startPoint: .bottom, endPoint: .top))\n                        .frame(width: 120, height: 120,                           alignment: .center)\n                        .offset(y: moveInOut ? 60 : 0)\n                }.opacity(0.5)\n```", "```swift\n//MARK: - ZStack for the 2 and 7 o'clock circles\n                ZStack {\n                    Circle().fill(LinearGradient(gradient:                       Gradient(colors: [.green, .white]),                       startPoint: .top, endPoint: .bottom))\n                        .frame(width: 120, height: 120,                           alignment: .center)\n                        .offset(y: moveInOut ? -60 : 0)\n                    Circle().fill(LinearGradient(gradient:                       Gradient(colors: [.green, .white]),                       startPoint: .bottom, endPoint: .top))\n                        .frame(width: 120, height: 120,                           alignment: .center)\n                        .offset(y: moveInOut ? 60 : 0)\n                }.opacity(0.5)\n                    .rotationEffect(.degrees(60))\n```", "```swift\n  //MARK: - ZStack for the 10 and 4 o'clock circles\n                ZStack {\n                    Circle().fill(LinearGradient(gradient:                       Gradient(colors: [.green, .white]),                       startPoint: .top, endPoint: .bottom))\n                        .frame(width: 120, height: 120, alignment: .center)\n                        .offset(y: moveInOut ? -60 : 0)\n                    Circle().fill(LinearGradient(gradient:                       Gradient(colors: [.green, .white]),                       startPoint: .bottom, endPoint: .top))\n                        .frame(width: 120, height: 120,                           alignment: .center)\n                        .offset(y: moveInOut ? 60 : 0)\n                }.opacity(0.5)\n                    .rotationEffect(.degrees(120))\n```", "```swift\n            //MARK: - Animations\n            .rotationEffect(.degrees(rotateInOut ? 90 : 0))\n            .scaleEffect(scaleUpDown ? 1 : 1/4)\n            .animation(Animation.easeInOut.              repeatForever(autoreverses: true).speed(1/8),               value: scaleInOut)\n            .onAppear() {\n                rotateInOut.toggle()\n                scaleUpDown.toggle()\n                moveInOut.toggle()\n            }\n        }\n    }\n}\n```"]