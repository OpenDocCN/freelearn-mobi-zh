["```swift\n- (A_Class *)aObject {\n    if (aObject == nil) {//Check if the object exists and if not\n        aObject = [[A_Class alloc] init];//then create the object\n    }\n\n    return aObject;//returns the object\n}\n```", "```swift\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {\n    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@\"Cell\"];\n    if (!cell) {\n        //create a new cell\n    }\n\n    //Do what we need with our cell here\n\n    return cell;\n}\n```", "```swift\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath\n{\n    static NSString *CellIdentifier = @\"Cell\";\n\n    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];\n    if (cell == nil)\n    {\n        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier];\n    }\n\n    cell.textLabel.text = [NSString stringWithFormat:@\"Image #%d\", indexPath.row];\n    cell.imageView.contentMode = UIViewContentModeScaleAspectFill;\n    [cell.imageView setImageWithURL:[NSURL URLWithString:[_objects objectAtIndex:indexPath.row]]\n                   placeholderImage:[UIImage imageNamed:@\"placeholder\"] options:indexPath.row == 0 ? SDWebImageRefreshCached : 0];\n    return cell;\n}\n```", "```swift\n    @interface OurCustomObject : NSObject <NSCoding>\n    {\n        bool isReset;\n        NSString *userName;\n        int score;\n    }\n    @property (nonatomic, retain) NSString *userName;\n    @property (nonatomic, assign) bool  isReset;\n    @property (nonatomic, assign) int score;\n    @end\n    ```", "```swift\n    - (void)encodeWithCoder:(NSCoder *)coder {\n        //do encoding to save the data\n        [coder encodeBool:isReset forKey:@\"isReset\"];\n        [coder encodeObject:userName    forKey:@\"userName\"];\n        [coder encodeInt:score forKey:@\"score\"];\n    }\n    To load the data back into our objects, we add in the initWithCoder method:\n    - (id)initWithCoder:(NSCoder *)decoder {\n        if (self = [super init]) {\n            self.isReset = [decoder decodeBoolForKey:@\"isReset\"];\n            self.userName = [decoder decodeObjectForKey:@\"userName\"];\n            self.score = [decoder decodeIntForKey:@\"score\"];\n        }\n        return self;\n    }\n    ```", "```swift\n    OurCustomObject *ourObj = [[OurCustomObject alloc] init];\n        ourObj.userName = @\"John Doe\";\n        ourObj.isReset   = true;\n        ourObj.score = 99;    \n       //get our file path\n    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\n        NSString *documentsDirectoryPath = [paths objectAtIndex:0];\n        NSString *filePath = [documentsDirectoryPath stringByAppendingPathComponent:@\"OurData\"];\n        [NSKeyedArchiver archiveRootObject: ourObj toFile:filePath];\n    ```", "```swift\n        OurCustomObject *ourObj2 = [NSKeyedUnarchiver unarchiveObjectWithFile:filePath];\n        NSLog(@\"Score is %d\", [ourObj2 score]);\n        NSLog(@\"Name is %@\", [ourObj2 userName]);\n    ```"]