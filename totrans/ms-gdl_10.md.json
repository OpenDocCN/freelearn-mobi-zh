["```java\nsdk.dir=<Location of Android sdk>\n```", "```java\nandroid {\nsourceSets {\n  main {\n    java {\n      manifest.srcFile 'Manifest.xml' res.srcDirs = ['src/res'] assets.srcDirs = ['src/assets']\n    }\n  }\n}\n}\n```", "```java\napply plugin: 'com.android.application'\n\nandroid {\n  compileSdkVersion 22\n  buildToolsVersion \"22.0.1\"\n\n  defaultConfig {\n    applicationId \"ch10.androidsampleapp\"\n    minSdkVersion 15\n    targetSdkVersion 22\n    versionCode 1\n    versionName \"1.0\"\n  }\n  buildTypes {\n    release {\n      minifyEnabled false\n      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n    }\n  }\n}\n\ndependencies {\n  compile fileTree(dir: 'libs', include: ['*.jar'])\n  compile 'com.android.support:appcompat-v7:22.1.1'\n}\n```", "```java\nbuildscript {\n   repositories {\n       jcenter()\n   }\n   dependencies {\n       classpath 'com.android.tools.build:gradle:1.2.3'\n   }\n}\n```", "```java\n> gradle tasks\n\nAndroid tasks\n-------------\nandroidDependencies - Displays the Android dependencies of the project.\nsigningReport - Displays the signing info for each variant.\n\nBuild tasks\n-----------\nassemble - Assembles all variants of all applications and secondary packages.\nassembleAndroidTest - Assembles all the Test applications.\nassembleDebug - Assembles all Debug builds.\n……………...\ncompileDebugSources\ncompileDebugUnitTestSources\ncompileReleaseSources\ncompileReleaseUnitTestSources\nmockableAndroidJar - Creates a version of android.jar that's suitable for unit tests.\n…………………….\n\nInstall tasks\n-------------\ninstallDebug - Installs the Debug build.\ninstallDebugAndroidTest - Installs the android (on device) tests for the Debug build.\nuninstallAll - Uninstall all applications.\nuninstallDebug - Uninstalls the Debug build.\nuninstallDebugAndroidTest - Uninstalls the android (on device) tests for the Debug build.\nuninstallRelease - Uninstalls the Release build.\n\n……………\n\n```", "```java\nbuildTypes {\n  release {\n    minifyEnabled false\n    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n  }\n  staging.initWith(buildTypes.release)\n  staging {\n    debuggable true\n  }\n}\n```", "```java\n> gradle  tasks | grep -i staging\nassembleStaging - Assembles all Staging builds.\ncompileStagingSources\ncompileStagingUnitTestSources\ninstallStaging - Installs the Staging build.\nuninstallStaging - Uninstalls the Staging build.\nlintStaging - Runs lint on the Staging build.\ntestStaging - Run unit tests for the staging build.\njarStagingClasses\n\n```", "```java\n buildTypes {\n  release {\n    minifyEnabled true\n    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n  }\n}\n```", "```java\nproductFlavors {\n  phone{\n    applicationId \"ch10.androidsampleapp\"\n    minSdkVersion 14\n    targetSdkVersion 20\n\n    versionName \"1.0-phone\"\n  }\n  tab {\n    applicationId \"ch10.androidsampleapp\"\n    minSdkVersion 15\n    targetSdkVersion 22\n    versionName \"1.0-tab\"\n  }\n}\n```", "```java\n> gradle tasks | grep -i phone\nassemblePhone - Assembles all Phone builds.\nassemblePhoneDebug - Assembles the DebugPhone build.\nassemblePhoneDebugAndroidTest - Assembles the android (on device) tests for the PhoneDebug build.\nassemblePhoneRelease - Assembles the ReleasePhone build.\nassemblePhoneStaging - Assembles the StagingPhone build.\ncompilePhoneDebugAndroidTestSources\ncompilePhoneDebugSources\ncompilePhoneDebugUnitTestSources\ncompilePhoneReleaseSources\ncompilePhoneReleaseUnitTestSources\ncompilePhoneStagingSources\ncompilePhoneStagingUnitTestSources\ninstallPhoneDebug - Installs the DebugPhone build.\ninstallPhoneDebugAndroidTest - Installs the android (on device) tests for the PhoneDebug build.\nuninstallPhoneDebug - Uninstalls the DebugPhone build.\nuninstallPhoneDebugAndroidTest - Uninstalls the android (on device) tests for the PhoneDebug build.\nuninstallPhoneRelease - Uninstalls the ReleasePhone build.\nuninstallPhoneStaging - Uninstalls the StagingPhone build.\nconnectedAndroidTestPhoneDebug - Installs and runs the tests for DebugPhone build on connected devices.\nlintPhoneDebug - Runs lint on the PhoneDebug build.\nlintPhoneRelease - Runs lint on the PhoneRelease build.\nlintPhoneStaging - Runs lint on the PhoneStaging build.\ntestPhoneDebug - Run unit tests for the phoneDebug build.\ntestPhoneRelease - Run unit tests for the phoneRelease build.\ntestPhoneStaging - Run unit tests for the phoneStaging build.\njarPhoneDebugClasses\njarPhoneReleaseClasses\njarPhoneStagingClasses\n\n```", "```java\n>%ANDROID_SDK%\\tools\\emulator.exe -netdelay none -netspeed full -avd Nexus_5_API_22_x86\n\n```", "```java\n> gradle installPhoneDebug\n:app:preBuild UP-TO-DATE \n:app:prePhoneDebugBuild UP-TO-DATE \n:............\n.............\n:app:mergePhoneDebugAssets UP-TO-DATE \n:app:compilePhoneDebugJava UP-TO-DATE \n:app:compilePhoneDebugNdk UP-TO-DATE \n:app:compilePhoneDebugSources UP-TO-DATE \n:app:preDexPhoneDebug UP-TO-DATE \n:app:dexPhoneDebug UP-TO-DATE \n:app:validateDebugSigning \n:app:packagePhoneDebug UP-TO-DATE \n:app:zipalignPhoneDebug UP-TO-DATE \n:app:assemblePhoneDebug UP-TO-DATE \n:app:installPhoneDebug \nInstalling APK 'app-phone-debug.apk' on 'Nexus_5_API_22_x86(AVD) - 5.1'\nInstalled on 1 device. \n\nBUILD SUCCESSFUL\n\nTotal time: 24.543 secs\n\n```", "```java\n> gradle uninstallPhoneDebug\n\n```", "```java\n> keytool -genkey -v -keystore myCustomkey.keystore -alias customKey -keyalg RSA -keysize 2048 -validity 10000\n\n```", "```java\nandroid {\n\n......\nsigningConfigs {\n  release {\n    storeFile file(\"myCustomkey.keystore\")\n    storePassword \"welcome\"\n    keyAlias \"customKey\"\n    keyPassword \"welcome\"\n  }\n}\n  ……………\nbuildTypes {\n  release {\n    minifyEnabled false\n    signingConfig signingConfigs.release\n    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n  }\n  ………………\n}\n```", "```java\n> gradle tasks | grep -i install\nInstall tasks\ninstallPhoneDebug - Installs the DebugPhone build.\ninstallPhoneDebugAndroidTest - Installs the android (on device) tests for the PhoneDebug build.\ninstallPhoneRelease - Installs the ReleasePhone build.\ninstallPhoneStaging - Installs the StagingPhone build.\ninstallTabDebug - Installs the DebugTab build.\ninstallTabDebugAndroidTest - Installs the android (on device) tests for the TabDebug build.\ninstallTabRelease - Installs the ReleaseTab build.\ninstallTabStaging - Installs the StagingTab build.\nuninstallAll - Uninstall all applications.\n....\n\n```"]