- en: Chapter 1. Unleashing Creativity with MIT App Inventor 2
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 使用麻省理工学院App Inventor 2释放创造力
- en: Mobile applications are ubiquitous. There are apps for just about everything—entertainment,
    socializing, dining, travel, philanthropy, shopping, education, navigation, and
    so on. And just about everyone with a smartphone or tablet is using them to make
    their lives easier or better. But you have decided to move from just using mobile
    apps to creating mobile apps. Congratulations! Thanks to MIT App Inventor 2, mobile
    app development is no longer exclusively the realm of experienced software programmers.
    The software empowers anyone with an idea to create mobile technology. This book
    offers people of all ages a step-by-step guide to creating mobile apps with MIT
    App Inventer 2\. While this visual programming language is an ideal tool for people
    who have little or no coding experience, don't be fooled into thinking that the
    software's capabilities are basic! The simple drag-and-drop blocks format is actually
    a powerful programming language capable of creating complex and sophisticated
    mobile apps.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用无处不在。几乎有应用可以做到任何事情——娱乐、社交、餐饮、旅行、慈善、购物、教育、导航等等。几乎每个拥有智能手机或平板电脑的人都在使用它们来使他们的生活变得更轻松或更好。但您已经决定从仅仅使用移动应用转向创建移动应用。恭喜！多亏了麻省理工学院App
    Inventor 2，移动应用开发不再是经验丰富的软件程序员的专属领域。这款软件赋予任何有想法的人创造移动技术的能力。这本书为所有年龄段的人提供了使用麻省理工学院App
    Inventer 2创建移动应用的逐步指南。虽然这种可视化编程语言是那些几乎没有编程经验的人的理想工具，但不要被软件的功能性是基础的错觉所迷惑！简单的拖放块格式实际上是一种强大的编程语言，能够创建复杂和高级的移动应用。
- en: The purpose of this chapter is to provide an overview of MIT App Inventor 2,
    and of your new role as a mobile app developer. You are in for more skill development
    than you ever imagined! Of course, you will learn to code mobile apps, but there
    are countless other valuable skills weaved into the mobile app building process.
    Most significantly, you will learn to think differently, discover the design-thinking
    process, become a problem solver, and be resourceful. This chapter also offers
    tips on design principles and brainstorming app ideas. Lastly, it reveals the
    potential of MIT App Inventor 2 and showcases an array of mobile apps so that
    you, a budding app designer, can begin thinking about the full spectrum of possibilities.
    These mobile app examples not only display the capabilities and functionalities
    of MIT App Inventor 2, but also serve to spark ideas, foster innovative thinking,
    and help create visual goals as you embark on the mobile app-making process in
    the next chapters.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目的是概述麻省理工学院App Inventor 2，以及您作为移动应用开发者的新角色。您将获得比您想象的更多技能发展！当然，您将学习编写移动应用代码，但移动应用构建过程中融入了无数其他有价值的技能。最重要的是，您将学会以不同的方式思考，发现设计思维过程，成为一个问题解决者，并变得富有资源。本章还提供了关于设计原则和头脑风暴应用想法的技巧。最后，它揭示了麻省理工学院App
    Inventor 2的潜力，并展示了一系列移动应用，以便您，一个初露头角的应用设计师，可以开始思考所有可能性的全谱系。这些移动应用示例不仅展示了麻省理工学院App
    Inventor 2的能力和功能，而且有助于激发想法，培养创新思维，并在您开始下一章的移动应用制作过程中帮助您设定视觉目标。
- en: 'This chapter covers the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了以下主题：
- en: What is MIT App Inventor 2 and why you should learn to use it?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是麻省理工学院App Inventor 2，以及为什么您应该学习使用它？
- en: Becoming a mobile app developer
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成为移动应用开发者
- en: Discovering the possibilities of MIT App Inventor 2
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现麻省理工学院App Inventor 2的可能性
- en: What is MIT App Inventor 2?
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是麻省理工学院App Inventor 2？
- en: MIT App Inventor 2 is a free, drag-and-drop, blocks-based visual programming
    language that enables people, regardless of their coding experience, to create
    mobile apps for Android devices. In 2008, iPhones and Android phones had just
    hit the market. MIT professor Hal Abelson had the idea to create an easy-to-use
    programming language to make mobile apps that would harness the power of the emerging
    smartphone technology. Equipped with fast processors, large memory storage, and
    sensors, smartphones were enabling people to monitor and interact with their environment
    like never before. Abelson's goal was to democratize the mobile app development
    process by making it easy for anyone to create mobile apps that were meaningful
    and important to them. While on sabbatical at Google in Mountain View, CA, Abelson
    worked with Engineer Mark Friedman and many of other developers to create App
    Inventor (yes, it was originally called Google App Inventor).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: MIT App Inventor 2 是一种免费、拖放式、基于积木的视觉编程语言，它使人们无论编程经验如何，都能为 Android 设备创建移动应用。在
    2008 年，iPhone 和 Android 手机刚刚进入市场。麻省理工学院教授 Hal Abelson 有了一个想法，即创建一种易于使用的编程语言，以便制作能够利用新兴智能手机技术的移动应用。配备快速处理器、大容量存储和传感器，智能手机使人们能够以前所未有的方式监控和交互他们的环境。Abelson
    的目标是使移动应用开发过程民主化，让任何人都能轻松创建对他们有意义且重要的移动应用。在加利福尼亚州山景城的谷歌公司休假期间，Abelson 与工程师 Mark
    Friedman 以及其他许多开发者一起创建了 App Inventor（是的，它最初被称为 Google App Inventor）。
- en: In 2011, Abelson brought App Inventor to MIT and, together with the Media Lab
    and the **CSAIL** (Computer Science and Artificial Intelligence Lab), created
    the Center for Mobile Learning. In December 2013, Abelson and his team of developers
    launched MIT App Inventor 2 (from here on referred to as MIT App Inventor), an
    even easier to use web-based application version featuring an Integrated Development
    Environment (IDE). IDE means that you as you build your mobile app online, you
    can see it come to life on a connected mobile device. All you need is a computer
    (Mac or PC), an Internet connection (or a USB connection), a Google account, and
    an Android device (phone or tablet). But, if you don't have an Android device,
    don't worry! You can still create apps with the onscreen emulator and utilize
    the live development mode.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在 2011 年，Abelson 将 App Inventor 带到了麻省理工学院，并与媒体实验室和 **CSAIL**（计算机科学与人工智能实验室）一起创建了移动学习中心。在
    2013 年 12 月，Abelson 和他的开发团队推出了 MIT App Inventor 2（从现在起简称为 MIT App Inventor），这是一个功能更强大的基于网络的集成开发环境（IDE）版本。IDE
    意味着当你在线构建移动应用时，你可以在连接的移动设备上看到它变得生动起来。你所需要的只是一台电脑（Mac 或 PC）、互联网连接（或 USB 连接）、一个谷歌账户和一个
    Android 设备（手机或平板电脑）。但是，如果你没有 Android 设备，不要担心！你仍然可以使用屏幕上的模拟器创建应用并利用实时开发模式。
- en: The MIT App Inventor ([http://appinventor.mit.edu/](http://appinventor.mit.edu/))
    interface includes two main screens, a Designer Screen, which is a graphical user
    interface (GUI) where you can create the look and feel of the app (choosing the
    components you want the app to include), and the Blocks Editor, where you can
    add behavior to the app by coding it with colorful blocks. Users build apps by
    dragging components and blocks from the menu bars onto a workspaces (called Viewers)
    and a connected Android device (or emulator) displays the progress in real time.
    All the apps are saved on the MIT server; once completed, they can be can be shared
    on the MIT App Inventor Gallery, submitted to app contests (such as MIT App of
    the Month), or uploaded to the Google Play Store (or other app marketplaces) for
    sharing or selling.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: MIT App Inventor ([http://appinventor.mit.edu/](http://appinventor.mit.edu/))
    的界面包括两个主要屏幕，一个是设计屏幕，这是一个图形用户界面（GUI），你可以在这里创建应用的外观和感觉（选择你希望应用包含的组件），另一个是积木编辑器，你可以通过用彩色积木进行编码来为应用添加行为。用户通过从菜单栏拖动组件和积木到工作空间（称为查看器）和连接的
    Android 设备（或模拟器）上，实时显示进度。所有应用都保存在麻省理工学院服务器上；一旦完成，它们可以在 MIT App Inventor 画廊中共享，提交到应用竞赛（如
    MIT App of the Month），或者上传到 Google Play 商店（或其他应用市场）进行共享或销售。
- en: To date, MIT App Inventor has empowered millions of people to become creators
    of technology by learning to be mobile app developers. And now, you will become
    one of them!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，MIT App Inventor 已经使数百万人通过学习成为移动应用开发者，从而成为技术创造者。现在，你将成为其中的一员！
- en: Understanding your role as a mobile app developer
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解你在移动应用开发者中的角色
- en: Since you are reading this book, it is safe to assume that not only do you regularly
    use mobile apps, but on occasion, you have also had the thought, "I wish there
    were an app for that!" Now, with the help of MIT App Inventor and this guidebook
    to mobile app development, you will soon be able to say, "I can create an app
    for that!"
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 既然你在阅读这本书，那么可以合理假设你不仅经常使用移动应用，而且偶尔也会产生这样的想法：“真希望有款应用能做这个！”现在，借助MIT App Inventor和这本移动应用开发指南，你很快就能说：“我可以为这个创建一个应用！”
- en: While embracing your new role as a mobile app developer, you will not just be
    learning how to code; you will learn an array of other valuable skills. You will
    learn to think differently. Every time you open an app, you will start looking
    at it from the developer's perspective rather than just as a user. You will start
    noticing what functions are logical and simple and which are complicated and unintuitive.
    You will learn to get inspiration from your environment. What type of app could
    make the attendance process at my club/class/meeting more streamlined or efficient?
    What app idea could help solve the inaccurate inventory problem at the gym? You
    will learn to become a data gatherer without even realizing it. When people make
    comments about apps, your ears will perk up and you will take note. You will start
    asking questions like, why do you prefer Waze over Google Maps?
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在接受你作为移动应用开发者的新角色时，你将不仅学习如何编码；你还将学习一系列其他有价值的技能。你将学会以不同的方式思考。每次你打开一个应用，你都会从开发者的角度去审视它，而不仅仅是作为一个用户。你会开始注意到哪些功能是逻辑简单，哪些是复杂不直观。你将学会从你的环境中获取灵感。什么样的应用可以使我的俱乐部/课程/会议的出勤过程更加流畅或高效？什么样的应用想法可以帮助解决健身房中库存不准确的问题？你将学会在不经意间成为一个数据收集者。当人们评论应用时，你的耳朵会竖起来，你会记下这些评论。你将开始提出类似的问题，比如，为什么你更喜欢Waze而不是谷歌地图？
- en: You will learn to become a problem solver. You will learn to think logically
    so that you can tell the computer in a step-by-step manner how to perform an operation.
    Any software developer will confirm that programming is an iterative process.
    It's a continual cycle of coding, troubleshooting, and debugging. Trial and error
    will become second nature, as will taking a step back to figure out why something
    that just worked a minute ago now seems broken. And, you will learn to assume
    the role of a designer. It is no longer accurate to merely depict programmers
    holed up by themselves at a computer, creating white text-based code on black
    screens. Developers of mobile apps are also designers who think about and create
    attractive and intuitive user interfaces (UIs). Much of the design work happens
    not at the computer; it includes conversations with potential users, involves
    pens, paper, and post-it notes, and uses storyboards or sketches. Only once you
    have your app designed on paper do you sit down at the computer to begin coding.
    And then, you will not find the traditional black and white interface, as the
    MIT App Inventor platform is interactive and full of colorful blocks that snap
    together.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你将学会成为一个问题解决者。你将学会逻辑思考，以便能够以逐步的方式告诉计算机如何执行操作。任何软件开发者都会证实编程是一个迭代的过程。它是一个不断循环的编码、故障排除和调试的过程。试错将变成第二天性，同样，退一步思考为什么刚才还正常的东西现在看起来出了问题。而且，你将学会扮演设计师的角色。再也不能准确地说程序员只是独自坐在电脑前，在黑色屏幕上创建基于白色文本的代码了。移动应用的开发者也是设计师，他们思考并创建吸引人且直观的用户界面（UI）。大部分的设计工作并不在电脑上进行；它包括与潜在用户的对话，涉及钢笔、纸张和便利贴，并使用故事板或草图。只有在你将你的应用在纸上设计好之后，你才会坐在电脑前开始编码。然后，你不会找到传统的黑白界面，因为MIT
    App Inventor平台是交互式的，充满了可以拼接在一起的多彩积木。
- en: Brainstorming app ideas
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 脑暴想法应用
- en: Chances are you already have an idea for a mobile app. If not, how can you think
    of one? The best way to start brainstorming app ideas is by starting with what
    you know. Which app do you wish existed? Which app would you and your friends,
    coworkers, or family members use, need, or like? Which problem in your community,
    network, or circle of friends could be solved with a digital solution? Maybe,
    you loan out books to friends, but don't have a system to keep track of who borrowed
    what. Maybe, you want to do a clothing swap with people who are your size, so
    you want to post pictures of the items that you have available for trade and you
    want to view othe listed items in your size. Maybe, you have a favorite app that
    you use all the time, but you wish it had just one other feature. Maybe, when
    you meet your friends in a public place, it's hard to know whether they're nearby
    without a lot of texting back and forth, so you want to create an app that shows
    everyone's location on one screen. The possibilities are endless!
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 很可能你已经有一个移动应用的想法。如果没有，你怎么会想到一个？开始头脑风暴应用想法的最好方式是从你所知道的事情开始。你希望存在哪个应用？你和你朋友、同事或家人会使用、需要或喜欢哪个应用？你社区、网络或朋友圈中的哪个问题可以用数字解决方案来解决？也许，你借书给朋友，但没有一个系统来跟踪谁借了什么。也许，你想和你尺寸相同的人交换衣服，所以你想发布你可用于交换的物品的照片，并查看你尺寸的列表中的其他物品。也许，你有一个你经常使用的最喜欢的应用，但你希望它有另一个功能。也许，当你在一个公共场所遇到朋友时，如果没有大量的短信往来，很难知道他们是否在附近，所以你想创建一个可以在一个屏幕上显示每个人位置的应用。可能性是无限的！
- en: The key to successful brainstorming is to write down all of your ideas no matter
    how wild they are and then talk to people about them to get feedback. Input from
    others is an essential part of the research needed to ensure that your app idea
    becomes a successful app that people will want, use, and/or buy. On a recent business
    trip, we had an idea for a travel app because we always seem to forget at least
    one essential item. Over breakfast at the hotel, we discussed the app idea with
    a couple of colleagues and received amazing insights that we hadn't thought of,
    such as a reminder notification to fill any prescriptions well before the trip
    and a weather component, so we could be sure to pack appropriate clothes for each
    destination. The more people you talk to, the more market research you will conduct
    and the more defined the overall app's concept will be.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 成功头脑风暴的关键是写下你所有的想法，无论它们多么疯狂，然后与人交谈以获取反馈。他人的意见是确保你的应用想法成为人们愿意使用、购买的应用所需的研究的重要组成部分。在最近的一次商务旅行中，我们有一个旅行应用的想法，因为我们似乎总是忘记至少一件重要物品。在酒店的早餐时，我们与几位同事讨论了应用想法，并收到了一些我们没有想到的惊人见解，例如在旅行前很久就提醒填写任何处方，以及一个天气组件，这样我们就可以确保为每个目的地打包合适的衣服。你交谈的人越多，你进行的市场研究就越多，整体应用的概念就会越明确。
- en: The Design Thinking process
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计思维过程
- en: 'Design Thinking (more information about Design Thinking can be found at [http://dschool.stanford.edu](http://dschool.stanford.edu))
    is a user-centered process for creative problem solving. While not developed specifically
    for mobile app development, the Design Thinking process is particularly effective
    when applied to mobile app development. We recommend using the following design
    phases:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 设计思维（更多关于设计思维的信息可以在[http://dschool.stanford.edu](http://dschool.stanford.edu)找到）是一个以用户为中心的创造性问题解决过程。虽然设计思维过程并非专门为移动应用开发而设计，但当应用于移动应用开发时，它特别有效。我们建议使用以下设计阶段：
- en: '![The Design Thinking process](img/00002.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![设计思维过程](img/00002.jpeg)'
- en: Most likely, you are not creating an app that you alone will use, so you must
    discover what potential users need, want, or prefer in an app.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 很可能，你不会创建一个只有你自己会使用的应用，因此你必须发现潜在用户在应用中需要、想要或偏好的东西。
- en: Empathize
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 同理心
- en: Your first goal is to understand the people who would be using your app. Thus,
    this phase is called, Empathize. You can easily conduct research through interviews
    by asking an array of potential users what types of apps they currently use, what
    app features they like or dislike, what apps they wish existed, and if they would
    use an app like the one you plan on making. Interviews can provide valuable feedback
    and be a source of inspiration for new ideas.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你的第一个目标是理解将使用你的应用的人。因此，这个阶段被称为同理心。你可以通过采访一系列潜在用户，询问他们目前使用哪些类型的应用，他们喜欢或不喜欢哪些应用功能，他们希望存在哪些应用，以及他们是否会使用你计划制作的应用来轻松地进行研究。采访可以提供宝贵的反馈，并成为新想法的灵感来源。
- en: For example, if you plan to create a book club app that coordinates many people's
    calendars so that you can schedule a book club discussion during a time when everyone
    is available, ask book club members what features they would like to see in the
    app. Will there be an RSVP or a cancel button? Will there be directions to the
    location? What are the transportation or parking options? Will there be a link
    to Amazon to buy or download the next month's book? How can the app help members
    decide on which book to read next? Since the meetings are potlucks, is there an
    option to include what food or drink each member will bring? What is a quick and
    efficient way to contact all the members? Through this data gathering stage, you
    may discover a wealth of new features for your app that you had not previously
    thought of, or you may get a confirmation that you are indeed on the right track.
    Understanding what potential users want is an essential part of the app building
    process, from the very beginning of concept creation all the way until the final
    stage of deployment.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你计划创建一个协调多人日历的读书俱乐部应用程序，以便在大家都有空的时间内安排读书俱乐部讨论，你可以询问读书俱乐部成员他们希望在应用程序中看到哪些功能。是否会有一个确认参加或取消的按钮？是否会有前往地点的指示？有哪些交通或停车选项？是否会有链接到亚马逊购买或下载下个月书籍的功能？应用程序如何帮助成员决定下一本要读的书？由于会议是拼盘餐，是否有选项包括每位成员将带来什么食物或饮料？有什么快速有效的方式联系所有成员？通过这个数据收集阶段，你可能会发现许多你之前未曾想到的新功能，或者你可能会得到一个确认，即你确实走在正确的轨道上。了解潜在用户的需求是应用程序构建过程中的一个重要部分，从概念创建的最初阶段一直到部署的最后阶段。
- en: Define
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义
- en: Once you've gathered research data, what do you do with that information and
    how do you fold it into your design? In the **Define** phase, you will synthesize
    the data you've collected to create a clearer picture of what your app will do,
    how it will function, and the purpose it will serve. You may have collected pages
    and pages of ideas and comments from your interviews. What themes or patterns
    emerge when reviewing them? What ideas seem the most salient? What app functions
    were people most excited about? Reviewing user feedback will help you structure
    and streamline your app concept so that it is clear and specific in purpose and
    function. This stage of flushing out ideas so the best ones emerge will also help
    you create accurate visuals in the next phase.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你收集了研究数据，你将如何处理这些信息以及如何将其融入你的设计？在**定义**阶段，你将综合你所收集的数据，以创建一个更清晰的图像，说明你的应用程序将做什么，它将如何运行，以及它将服务的目的。你可能已经收集了来自访谈的页页想法和评论。在回顾它们时，哪些主题或模式出现？哪些想法看起来最突出？人们最兴奋的是哪些应用程序功能？审查用户反馈将帮助你构建和简化你的应用程序概念，使其目的和功能清晰具体。这个阶段将想法梳理出来，以便最好的想法浮现出来，也将帮助你创建下一阶段准确的视觉元素。
- en: Ideate
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 想象
- en: Given all of the input you need and want from your potential users, what solutions
    can your app offer? Now, it is time for the **Ideate** phase to create an experience
    map or storyboard with pen, paper, and post-its to delineate all of the app's
    functionalities. Each piece of paper will represent one screen and display the
    user interface (UI) designated for that screen. This process usually requires
    a lot of revisions and may produce numerous versions of the app, which you will
    want to keep, as they may be helpful down the line when creating updates. We find
    it helpful to put all of the drawings up on a wall so that you can visualize the
    whole app map and its sequencing. This is also the time to include design features
    that you like or find appealing. Remember, all of the apps you see in marketplaces
    started the exact same way, with an idea. Inspiration for one can come at any
    time and from any experience. We recommend dedicating a notebook exclusively for
    ideas, so you can jot notes when you get inspired or see an app with a look and
    feel that you like. This will be a valuable resource for you as you continue down
    the road of app making. As with any design process, this **Ideate** stage takes
    time. This is a good thing because you want time for your ideas to simmer and
    percolate. Taking a break and coming back to your sketches with fresh eyes usually
    offers new perspectives , ideas and clarity.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到你从潜在用户那里需要和想要的所有输入，你的应用可以提供哪些解决方案？现在，是时候进入**创意**阶段，用笔、纸和便利贴来创建一个体验地图或故事板，以界定应用的所有功能。每张纸代表一个屏幕，并显示为该屏幕指定的用户界面（UI）。这个过程通常需要很多修订，可能会产生多个应用版本，你希望保留它们，因为它们在创建更新时可能会有所帮助。我们发现将所有图纸都贴在墙上很有帮助，这样你可以可视化整个应用地图及其顺序。这也是你加入你喜欢的或觉得吸引人的设计功能的时候。记住，市场上所有的应用都是以同样的方式开始的，从一个想法开始。一个想法的灵感可能在任何时候、任何经历中产生。我们建议专门为想法准备一个笔记本，这样你就可以在受到启发或看到你喜欢的界面和感觉的应用时记下笔记。这将是你继续应用制作道路上的宝贵资源。与任何设计过程一样，这个**创意**阶段需要时间。这是好事，因为你想给你的想法留出时间慢慢酝酿和发酵。休息一下，用新的眼光回到你的草图上通常能提供新的视角、想法和清晰度。
- en: Prototype
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原型
- en: Now that you've reached the **Prototype** phase, it is time to sit down at the
    computer and build your app. This may be daunting at first because you are just
    learning how to use MIT App Inventor, but the step-by-step guides in this book
    will walk you through each stage of app development. The provided tutorials will
    teach you about the various MIT App Inventor components, what they do, and how
    to add behavior to them by snapping blocks together. Once you become familiar
    with component functions and get the hang of coding with blocks, you will be able
    to transfer this knowledge to create your own app. Since you will have already
    done all of the phases of the the Design Thinking process in this chapter and
    laid the groundwork for your app, you will be able to particularly concentrate
    on the components you will need to build your app.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经进入了**原型**阶段，是时候坐在电脑前构建你的应用了。一开始这可能会让你感到有些 daunting，因为你正在学习如何使用MIT App Inventor，但本书中的逐步指南会带你走过应用开发的每个阶段。提供的教程将教会你关于各种MIT
    App Inventor组件的知识，它们的功能，以及如何通过拼接积木来为它们添加行为。一旦你熟悉了组件功能并掌握了使用积木编码的技巧，你就能将这项知识应用到创建自己的应用中。由于你已经在本章中完成了设计思维过程的全部阶段，并为你的应用奠定了基础，因此你将能够特别专注于构建应用所需的组件。
- en: Test
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试
- en: When you get to the point where you think your app is done, think again! **Test**
    your app with a small group of users before offering it to the world in an app
    marketplace. These alpha and beta testers will help you discover bugs or if things
    are not working as they should. Learning to troubleshoot is often a frustrating
    process; but by this stage, you will have refined your skills as a problem solver,
    and you will have more ideas on how to fix bugs. Also, [Chapter 8](part0055_split_000.html#1KEEU2-9c0b907946184095a315b26c8a9b12bc
    "Chapter 8. Expanding Your Mobile App Development Skills"), *Expanding Your Mobile
    App Development Skills*, of is devoted to tools to expand your app development
    skills. And while the **Test** phase seems like the final one, you will discover
    that it is really another beginning! The Design Thinking process is really a cyclical
    one, as there is always room for edits, refinement, and of course, version 2.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当您认为自己应用程序完成时，再想想！在将应用程序推向应用程序市场之前，先**测试**一下您的小组用户。这些alpha和beta测试者将帮助您发现错误或问题是否按预期工作。学会故障排除通常是一个令人沮丧的过程；但到这一阶段，您将已经磨练了您的问题解决技能，并且您将有更多关于如何修复错误的想法。此外，[第8章](part0055_split_000.html#1KEEU2-9c0b907946184095a315b26c8a9b12bc
    "第8章。扩展您的移动应用程序开发技能")，“扩展您的移动应用程序开发技能”，专门介绍了扩展您的应用程序开发技能的工具。而且，尽管**测试**阶段看起来像是最后的阶段，但您会发现它实际上是一个新的开始！设计思维过程实际上是一个循环的，因为总有改进、精炼和当然，版本2的空间。
- en: If you get stuck at any time, there are many resources on the MIT App Inventor
    websites at, [http://appinventor.mit.edu/](http://appinventor.mit.edu/) and on
    [http://www.appinventor.org/](http://www.appinventor.org/) to help you. In addition
    to tutorials, there is an MIT App Inventor Gallery where you can view apps along
    with the source codes that other people have created and shared. If an app has
    features that you'd like to include in your app but you don't know how to code
    yet, you can download the app, look at the blocks, and teach yourself how to code
    them! Also, there is a community forum online where you can ask questions and
    learn from more experienced users.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在任何时候遇到困难，可以在MIT App Inventor网站上找到许多资源，网址为[http://appinventor.mit.edu/](http://appinventor.mit.edu/)和[http://www.appinventor.org/](http://www.appinventor.org/)，以帮助您。除了教程外，还有一个MIT
    App Inventor画廊，您可以在这里查看其他人们创建和分享的应用程序及其源代码。如果您想在自己的应用程序中包含某些功能，但还不知道如何编码，您可以下载该应用程序，查看积木，并自学如何编码它们！此外，还有一个在线社区论坛，您可以在那里提问并向经验更丰富的用户学习。
- en: Computational thinking
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计算思维
- en: 'In becoming a mobile app developer, you will be learning many valuable roles:
    brainstormer observer, researcher, data interpreter, synthesizer, design architect,
    strategist, creative thinker, and last, but not least, coder. Part of becoming
    a mobile app developer involves learning to think like a computer, that is, being
    able to tell the computer what you want it to do so that it performs the specific
    operation. Computers are not intuitive; they don''t know what you mean or interpret
    what you say. By programming or writing a code, you give the computer clear step-by-step
    logical instructions to make it do something that you want it to do, such as retrieve
    data, display information, or open another application. But sometimes, even when
    you think you are being clear and logical, the computer does not respond as you
    intended. As coding is an iterative process, there are a lot of rounds of trying
    something to see if it works, and then when it doesn''t, trying something else.
    The more you fail, the closer you will get to finding a successful path. Learning
    to troubleshoot, debug a program, or think of yet another *solution* comes with
    the willingness to be open, think creatively, and try and try again. You will
    soon discover that by becoming a coder, you are also honing your skills as a problem
    solver.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在成为移动应用程序开发者时，您将学习许多有价值的角色：头脑风暴者、观察者、研究者、数据解释者、综合者、设计架构师、策略家、创造性思维者，最后但同样重要的是，程序员。成为移动应用程序开发者的一部分是学习像计算机一样思考，即能够告诉计算机您想要它做什么，以便它执行特定的操作。计算机并不直观；它们不知道您的意思或解释您的话。通过编程或编写代码，您为计算机提供清晰的、一步一步的逻辑指令，使其执行您想要它执行的操作，例如检索数据、显示信息或打开另一个应用程序。但是有时，即使您认为自己很清晰和逻辑，计算机也不会按您期望的方式响应。由于编码是一个迭代的过程，有很多次尝试看看是否有效，然后当它不起作用时，再尝试其他方法。失败得越多，您就越接近找到成功的路径。学会故障排除、调试程序或想出另一种*解决方案*伴随着愿意开放、创造性思考和不断尝试。您很快会发现，通过成为程序员，您也在磨练自己的问题解决技能。
- en: Best practices to design apps
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设计应用程序的最佳实践
- en: Since there is an abundance of Android apps that are available, you can easily
    research design principles.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 由于可用的Android应用数量众多，你可以轻松地研究设计原则。
- en: Pay attention to all the features of the UIs. For example, look at 10 different
    chess game, solitaire, or weather apps. You will see a wide variety of UIs and
    start learning how different developers approach the exact same app. Which ones
    are easy to navigate and use? What distinguishes one as more appealing than another?
    Which home screens provide the best overview of an app's set of features? How
    are menus and drawers displayed? How easy is it to return to the previous screen?
    How do you navigate to the home screen? How are text elements highlighted when
    in use? How are screens mapped out? Where can you find instructions? Where do
    you find help? Pay attention to cues, such as what colors, animations, or pop-up
    messaging occur, to let you know that X is happening.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 注意UI的所有功能。例如，看看10个不同的棋类游戏、单人纸牌游戏或天气应用。你会看到各种各样的UI，并开始了解不同的开发者如何处理完全相同的应用。哪些应用易于导航和使用？什么让一个应用比另一个更有吸引力？哪些主屏幕提供了应用功能的最佳概览？菜单和抽屉是如何显示的？返回上一屏幕有多容易？如何导航到主屏幕？使用时文本元素是如何高亮的？屏幕是如何布局的？你可以在哪里找到说明？你可以在哪里找到帮助？注意提示，例如什么颜色、动画或弹出消息发生，让你知道X正在发生。
- en: '*Great design is simple.* Often, the tendency is to want your app to do it
    all. You''ve received tons of feedback from your interviews and you want to incorporate
    all of the brilliant ideas into your app. Since this is your first app-making
    experience with MIT App Inventor, we recommend you to choose the core features
    that are necessary, and make them clear and easy to use. If needed, you can always
    layer more complex features in the future versions. Think about your own app usage.
    Most of us use apps very quickly or intermittently (unless we are on a long subway
    ride, playing a game on our phone or reading a digital book). Rarely do you use
    all of the features of an app at any given time. Most often, you use an app for
    a specific purpose and then you''re done. Keep your app simple.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*优秀的设计是简洁的*。通常，人们倾向于希望自己的应用能做所有的事情。你从面试中收到了大量的反馈，并希望将所有这些精彩的想法融入到你的应用中。由于这是你第一次使用MIT
    App Inventor制作应用，我们建议你选择必要的核心功能，并使它们清晰易用。如果需要，你可以在未来的版本中始终添加更复杂的功能。考虑一下你自己的应用使用情况。我们大多数人使用应用都非常快或断断续续的（除非我们在乘坐长途地铁，玩手机游戏或阅读电子书）。你很少在任何时候使用应用的所有功能。大多数情况下，你使用应用完成特定目的后就会结束。保持你的应用简单。'
- en: Iterate, iterate, and iterate. Designing, like coding, requires the ability
    to be open to experimentation. And fortunately, App Inventor facilitates this
    process with instant feedback through IDE. Try a component, add behavior (blocks),
    and see what happens on your connected device. Add a different behavior; see what
    happens on your connected device. Add colors, arrangements, and fonts; see what
    happens on your connected device. Do you get the drill? Design involves a lot
    of trials, errors, and failures, which is ultimately a good thing because it gets
    you going in a different direction. You may have your heart set on a design idea
    only to discover that, once you have tried it out, you don't like it that much.
    Don't be discouraged! This is the time to investigate other options. Try this,
    that, and the other. Expand your creative scope through several rounds of playing
    and then testing.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 重复迭代，重复迭代。设计，就像编码一样，需要具备接受实验的能力。幸运的是，App Inventor通过IDE提供即时反馈，简化了这一过程。尝试一个组件，添加行为（积木），然后查看你的连接设备上发生了什么。添加不同的行为；查看你的连接设备上发生了什么。添加颜色、布局和字体；查看你的连接设备上发生了什么。你明白这个流程了吗？设计涉及大量的试验、错误和失败，这最终是一件好事，因为它能让你朝不同的方向前进。你可能对某个设计想法情有独钟，但一旦尝试过后，你可能并不那么喜欢它。不要气馁！这是时候去探索其他选项了。尝试这个，尝试那个，然后测试。通过几轮的玩耍和测试，扩展你的创意范围。
- en: App designing, like any artistic endeavor, takes time. Try not to rush the creative
    process. Indeed, MIT App Inventor makes it easy to make mobile apps, but to craft
    a well-designed app that looks appealing and works seamlessly requires the investment
    of time, passion, and creativity. Take breaks often, spend time outdoors, play
    a game or engage your mind in another project so that when you return to your
    app, you will approach it with fresh eyes, energy, thoughts, and inspiration.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序设计，就像任何艺术追求一样，需要时间。尽量不让创意过程匆匆而过。确实，麻省理工学院App Inventor使制作移动应用程序变得容易，但要制作一个设计精美、外观吸引人且无缝工作的应用程序，需要投入时间、激情和创造力。经常休息，花时间在户外，玩一个游戏或投身于另一个项目，这样当您回到您的应用程序时，您将以全新的视角、精力、思想和灵感来对待它。
- en: MIT App Inventor – purpose and potential
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MIT App Inventor – 目的和潜力
- en: While making apps with MIT App Inventor, there is much more going on than just
    learning to code. The mission of MIT App Inventor is to democratize coding so
    that everyone, regardless of age, schooling, or profession, has the opportunity
    to create technology. Coaches, players, teachers, students, doctors, patients,
    conductors, cellists, pilots, or passengers can all make mobile apps that are
    important to them and that make their lives happier, better, or more productive.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用MIT App Inventor制作应用程序时，发生的事情远不止学习编码。MIT App Inventor的使命是使编码民主化，让每个人，无论年龄、教育背景或职业，都有机会创造技术。教练、运动员、教师、学生、医生、病人、指挥家、大提琴家、飞行员或乘客都可以制作对他们来说重要的移动应用程序，使他们的生活更快乐、更好或更有效率。
- en: As a digital solution, your app may have originally been intended to solve a
    problem that you observed or experienced. But once you share it in an app marketplace,
    it could impact people you don't even know and may never meet. MIT App Inventor
    makes it possible for you to expand your scope of influence from your immediate
    local community to a worldwide scale. You can bring others joy and laughter with
    a simple game, you can help college-bound seniors study for a standardized test,
    or you can provide a tool that teaches travelers common phrases in other languages.
    Contributing positively to society is one awesome way to use your new rockstar
    MIT App Inventor skills.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一种数字解决方案，您的应用程序最初可能旨在解决您观察到或经历的问题。但一旦您在应用程序市场中分享它，它可能会影响到您甚至不知道的人，也许永远都不会见面。麻省理工学院App
    Inventor使您能够将您的影响范围从您所在的本地社区扩展到全球规模。您可以用一个简单的游戏带给他人快乐和笑声，您可以帮助即将进入大学的高中生准备标准化考试，或者您可以为旅行者提供教授其他语言常用短语的工具。为社会做出积极贡献是使用您新获得的MIT
    App Inventor摇滚明星技能的一种了不起的方式。
- en: As you begin creating apps and see the impact they have on others, you may broaden
    the scope of what you think is possible for yourself. Have you thought about becoming
    a social entrepreneur? Will people pay for the technology you have created? Does
    your app have the growth potential to serve new and different users? How can you
    expand your business acumen to learn how to build and market successful mobile
    apps? Even though you will be starting off with small and simple apps, always
    remember to dream big in what you do and who you are.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当您开始创建应用程序并看到它们对他人产生的影响时，您可能会扩大您认为对自己可能的事情的范围。您想过成为社会企业家吗？人们会为您创建的技术付费吗？您的应用程序是否有增长潜力，以服务新的和不同的用户？您如何扩大您的商业洞察力，学习如何构建和营销成功的移动应用程序？尽管您将从一个简单的小应用程序开始，但请始终记住，在您所做的事情和您是谁上都要有远大的梦想。
- en: While MIT App Inventor offers an easy and approachable way to learn about coding
    and software development, it may indeed also serve as an on-ramp for further computer
    science education. Once you see the skill growth potential, such as how creating
    technology can positively impact others or that you can sell your digital solutions,
    you may indeed become interested in expanding your knowledge of technology further
    by delving into other software languages or science learning opportunities, such
    as maker-spaces or hackathons.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然MIT App Inventor提供了一种简单易学的方式来了解编码和软件开发，但它确实也可以作为进一步计算机科学教育的入门途径。一旦您看到技能增长潜力，比如创造技术如何积极影响他人，或者您可以出售您的数字解决方案，您可能会对通过深入研究其他软件语言或科学学习机会（如创客空间或黑客马拉松）来进一步扩展您的技术知识产生兴趣。
- en: Discovering the possibilities of MIT App Inventor
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发现MIT App Inventor的可能性
- en: MIT App Inventor empowers anyone regardless of age or coding experience to transform
    an app idea into a prototype and ultimately into a full-fledged mobile application.
    What will your app do? As you begin your app-making journey, you may wonder about
    what types of apps could you possibly create with App Inventor? Since the apps
    you make will be shared or sold for use on an Android smartphone or tablet, you
    can create apps that access the full functionality of those devices. Your apps
    could do things such as speak, take photos (or selfies), make phone calls, text,
    translate SMS messages, Tweet, play music or videos, use GPS (maps or other websites),
    scan bar codes, set timers (alarms or reminders), control robots, launch others
    apps, track your movement, and so on. Given the array of the abilities of Android
    devices, the possibilities seem endless!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: MIT App Inventor使任何年龄或编程经验的人都能将应用想法转化为原型，最终转化为完整的移动应用。你的应用将做什么？当你开始应用制作之旅时，你可能想知道你能用App
    Inventor创建哪些类型的应用？由于你制作的应用将被用于在Android智能手机或平板电脑上共享或销售，你可以创建访问这些设备全部功能的应用。你的应用可以执行诸如说话、拍照（或自拍）、打电话、发短信、翻译短信、推文、播放音乐或视频、使用GPS（地图或其他网站）、扫描条形码、设置计时器（闹钟或提醒）、控制机器人、启动其他应用、跟踪你的移动等活动。鉴于Android设备的众多功能，可能性似乎是无限的！
- en: MIT App Inventor examples
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MIT App Inventor示例
- en: Before beginning to learn MIT App Inventor, we think it is helpful to review
    some examples MIT App Inventor apps so that you have an idea ahead of time of
    a range of possibilities. As you start learning MIT App Inventor, you can begin
    by making simple apps; but in the back of your mind, remember this array of app
    examples, as they can serve goals or be an inspiration to help you unlock your
    creativity and designing skills. Think of it this way if you want to become a
    watercolor painter, but have never painted before, you would look at many watercolor
    paintings made by professionals or people with more experience than you to get
    inspired, to have a visual of what is possible, and to learn how the paintings
    were created.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始学习MIT App Inventor之前，我们认为回顾一些MIT App Inventor应用的示例是有帮助的，这样你就可以提前了解一系列的可能性。当你开始学习MIT
    App Inventor时，你可以从制作简单的应用开始；但别忘了这些应用示例，因为它们可以成为目标或灵感，帮助你激发创造力和设计技能。如果你想要成为一名水彩画家，但从未画过画，你会查看许多专业画家或比你经验更丰富的人制作的水彩画，以获得灵感，了解可能性的视觉，并学习画作是如何创作的。
- en: The following examples are a mix of beginning, intermediate, and advanced MIT
    App Inventor apps. Some were created by individuals, who were inspired to make
    a specific app, while others were created by groups of people for a project or
    as a contest submission. One thing all of these apps have in common is that before
    the app developers spent hours and hours perfecting their UIs and creating blocks
    of code, they were just like you, starting out with little or no previous coding
    experience. All of the skills you develop in this book through basic and intermediate
    app-making will serve as a solid foundation for you to build upon to be able to
    create more complex, sophisticated apps in the future. The introductory tutorials
    will teach you the MIT App Inventor basics and equip you to tackle app creation
    from scratch.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例是MIT App Inventor初学者、中级和高级应用的混合体。有些是由个人创建的，他们受到启发制作了特定的应用，而另一些则是由一群人为项目或作为竞赛提交而创建的。所有这些应用共同的一点是，在应用开发者花费数小时完善他们的用户界面和创建代码块之前，他们就像你一样，从几乎没有编程经验开始。在这本书中通过基本和中级应用制作所发展的所有技能，都将为你提供一个坚实的基础，以便你能够构建更复杂、更高级的应用。入门教程将教你MIT
    App Inventor的基础知识，并使你能够从头开始进行应用制作。
- en: Stopwatch and Timer
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 秒表和计时器
- en: 'Jari Pohjasmäki from Finland developed the following useful and simple *Stopwatch
    and Timer* app:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 来自芬兰的Jari Pohjasmäki开发了以下有用且简单的*秒表和计时器*应用：
- en: '![Stopwatch and Timer](img/00003.jpeg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![秒表和计时器](img/00003.jpeg)'
- en: 'Components used: Button, Label, TextBox, Image, ListPicker, Arrangements, Clock,
    and Notifier'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 所用组件：按钮、标签、文本框、图片、列表选择器、布局、时钟和通知器
- en: Yahtzee
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Yahtzee
- en: This app mimics the classic game of *Yahtzee*, where the object of the game
    is to score points by rolling five dice. The dice can be rolled up to three times
    in a turn and the game will consist of 13 rounds. Each player scores their roll
    in one of the 13 categories. Once a category has been used, it cannot be used
    again. Rolling a *Yahtzee* is five-of-a-kind and scores 50 points; the highest
    of any category. Whoever scores most points will win!
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 此应用模仿了经典的*Yahtzee*游戏，游戏的目标是通过掷五枚骰子来得分。在回合中，骰子可以掷到三次，游戏将包括13轮。每位玩家将他们的掷骰子得分记录在13个类别中的一个。一旦某个类别被使用，就不能再次使用。掷出一个*Yahtzee*（五子同花）得50分，是所有类别中最高的。得分最高的人将获胜！
- en: 'The following screenshots show the total gameplay points for different roles
    of the dice:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了不同骰子角色的总游戏得分：
- en: '![Yahtzee](img/00004.jpeg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![Yahtzee](img/00004.jpeg)'
- en: 'Components used: Button, Label, Notifier, and Alignments'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的组件：按钮、标签、通知器和对齐
- en: BYJ3S
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: BYJ3S
- en: 'Vicenta Albeldo and Jesus Gil created *BYJS3*, a digital pet game. This app
    allows you to play with, feed, and bathe your very own virtual pet. The following
    screenshots show the incorporated hand-drawn images that the developers have animated:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 维森塔·阿尔贝尔多和耶稣·吉尔创建了数字宠物游戏*BYJS3*。此应用允许你与、喂养和洗澡你自己的虚拟宠物。以下截图显示了开发者所动画的手绘图像：
- en: '![BYJ3S](img/00005.jpeg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![BYJ3S](img/00005.jpeg)'
- en: 'Components used: Clock, TinyDB, Image, Alignments, Canvas, and Sound'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的组件：时钟、TinyDB、图像、对齐、画布和声音
- en: Loops
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Loops
- en: 'Developed by Andrea Zaffardi from Italy, *Loops* won the MIT App of the Month
    contest in June 2015\. It is a puzzle game that requires the player to rotate
    the pipes to form a closed loop before time runs out. There are 100 levels of
    gameplay. The following screenshots show the game in the various stages:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 由意大利的安德烈亚·扎法迪开发，*Loops*在2015年6月的MIT App of the Month比赛中获胜。这是一款需要玩家在时间耗尽前旋转管道以形成闭合环路的益智游戏。游戏有100个难度级别。以下截图显示了游戏的不同阶段：
- en: '![Loops](img/00006.jpeg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![Loops](img/00006.jpeg)'
- en: 'Components used: Image, Player, Clock, Sounds, TinyDB, Button, Label, Slider,
    and Alignments'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的组件：图像、玩家、时钟、声音、TinyDB、按钮、标签、滑块和对齐
- en: Quartet
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Quartet
- en: Dr. Arun Mehta from India created *Quartet* for his niece, who loves to dance,
    but hates math. He wanted to show her how math can convert movement into things,
    such as graphics and music. With a wave of the phone, the app plays music with
    as many as four instruments (piano, pan flute, strings, and tin drums) while displaying
    animated graphics. Music starts and stops with a simple screen touch. A button
    displays a list of instruments for the user to choose among. If just one instrument
    is selected, the app will play all of individual keys of that instrument. Moving
    the phone in different patterns will create new music!
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 来自印度的阿伦·梅塔博士为他喜欢跳舞却讨厌数学的侄女创建了名为*Quartet*的应用。他想向她展示数学如何将运动转化为图形和音乐等事物。只需轻轻挥动手机，应用就会播放最多四种乐器（钢琴、排箫、弦乐和锡鼓）的音乐，同时显示动画图形。音乐可以通过简单的屏幕触摸来开始和停止。一个按钮显示供用户选择的乐器列表。如果只选择了一种乐器，应用将播放该乐器所有单个键的音。将手机以不同的模式移动将创造出新的音乐！
- en: 'The following screenshots show visuals as the app plays music:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了应用播放音乐时的视觉效果：
- en: '![Quartet](img/00007.jpeg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![Quartet](img/00007.jpeg)'
- en: 'Components used: Accelerometer, Canvas, Ball, ImageSprite, Button, Label, Sound,
    Player, Alignments, and Animation'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的组件：加速度计、画布、球、图像精灵、按钮、标签、声音、玩家、对齐和动画
- en: Brain Reaction Accelerator
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Brain Reaction Accelerator
- en: 'Created by Meghraj Singh of India, *Brain Reaction Accelerator* is a puzzle
    app that provides brain teasers to be solved within a time frame. There are five
    games to choose from, including **Refocus**, **True Color**, **Quick Pick**, **Sum
    It Up**, and **Expression Puzzle**. Compete against your best score or among global
    users. The following screenshots show a sequence from registering to choosing
    and playing a game:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 由印度的梅格拉杰·辛格创建的*Brain Reaction Accelerator*是一款益智应用，提供在时间限制内解决的谜题。有五种游戏可供选择，包括**Refocus**、**True
    Color**、**Quick Pick**、**Sum It Up**和**Expression Puzzle**。与你的最佳得分或全球用户竞争。以下截图显示了从注册到选择和玩游戏的过程：
- en: '![Brain Reaction Accelerator](img/00008.jpeg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![Brain Reaction Accelerator](img/00008.jpeg)'
- en: 'Components used: Button, Label, Alignments, ListPicker, TextField, Canvas,
    ImageSprite'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的组件：按钮、标签、对齐、列表选择器、文本字段、画布、图像精灵
- en: ConstHelp – Contractor Tools
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ConstHelp – Contractor Tools
- en: 'Created by Derek Drew from the United States, *Construction Calculator* is
    a tool for people on building sites. It performs unit conversions, assists with
    project management, provides a to-do list keeper, and measures distances. It has
    an autodialing feature for calling customers or vendors, but includes autotexting
    for safety while driving to or from a site. The following screenshots show the
    home screen, a screen to calculate volume, and a location screen:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 由来自美国的Derek Drew创建，*Construction Calculator* 是为建筑工地人员设计的工具。它执行单位转换，协助项目管理，提供待办事项列表管理器，并测量距离。它具有自动拨号功能，用于拨打客户或供应商的电话，但在开车前往或离开工地时包含自动文本功能以确保安全。以下截图显示了主屏幕、计算体积的屏幕和位置屏幕：
- en: '![ConstHelp – Contractor Tools](img/00009.jpeg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![ConstHelp – Contractor Tools](img/00009.jpeg)'
- en: 'Components used: Button, Label, WebViewer, LocationSensor, Alignments, SMS
    Messaging, ListPicker, and TextField'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 使用组件：按钮、标签、WebViewer、位置传感器、对齐方式、短信消息、列表选择器和文本字段
- en: UMATI
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: UMATI
- en: 'In the spring of 2015, MIT students Carolina Morgan, Fei Xu, Marcel Williams,
    and Rida Qadri created the mobile app *UMATI* for the urban planning course *11.S938:
    Crowd Sourced City—Social Media, Technology, and Planning Processes*. The class
    enabled students to work with actual planning and advocacy organizations to develop
    digital technology solutions for planning problems. Matatus bus routes in Nairobi
    were not standardized. They were often created and changed by the whim of private
    drivers or as a result of traffic conditions and it was difficult to know which
    buses traveled which routes and where the buses stopped. The MIT Civic Design
    Lab, the University of Nairobi, the Center for Sustainable Urban Development,
    and GroupShot helped to create maps using GPS, but the challenge that the MIT
    students tackled was keeping the maps accurate and current. Their solution used
    the MIT App Inventor to create *UMATI*, a crowd-sourced app, to track riders''
    routes and stops. They incentivize riders to collect data by offering them tokens
    (called MaTokens) that give discounts at local businesses. The following screenshots
    show the home screen and the Track Me screen:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '2015年春季，麻省理工学院的Carolina Morgan、Fei Xu、Marcel Williams和Rida Qadri为学生设计课程 *11.S938:
    群众参与城市——社交媒体、技术和规划流程* 创建了移动应用程序 *UMATI*。该课程使学生能够与实际的规划和倡导组织合作，为规划问题开发数字技术解决方案。内罗毕的Matatus公交线路没有标准化。它们通常由私人司机根据个人喜好或交通状况随意创建和更改，很难知道哪些公交车行驶哪些路线以及公交车停靠的位置。麻省理工学院公民设计实验室、内罗毕大学、可持续城市发展中心和GroupShot帮助使用GPS创建地图，但麻省理工学院学生面临的挑战是保持地图的准确性和时效性。他们的解决方案使用MIT
    App Inventor创建 *UMATI*，一个众包应用程序，以追踪乘客的路线和停靠点。他们通过提供代币（称为MaTokens）来激励乘客收集数据，这些代币可以在当地商家享受折扣。以下截图显示了主屏幕和“追踪我”屏幕：'
- en: '![UMATI](img/00010.jpeg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![UMATI](img/00010.jpeg)'
- en: 'Components used: Button, Clock, Notifier, Image, Label, Location Sensor, ActivityStarter,
    FusiontablesControls, and Alignments'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 使用组件：按钮、时钟、通知器、图像、标签、位置传感器、活动启动器、FusiontablesControls和对齐方式
- en: Ez School Bus Locator
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ez School Bus Locator
- en: 'Created by Arjun Santhosh Kumar, an eighth grader from Chennai, India, *Ez
    School Bus Locator* is a location-tracking app that allows schools, parents, and
    students to monitor the location of school buses through voice activation or a
    key tap. Students scan a QR code upon entering and exiting the bus, so parents
    can track their children''s routes to and from school. Automated SMS messaging
    keeps parents informed. The following screenshots show the home screen and two
    views of a location-tracking screen:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 由来自印度钦奈的八年级学生阿琼·桑托什·库马尔创建，*Ez School Bus Locator* 是一个位置追踪应用程序，允许学校、家长和学生通过语音激活或按键来监控校车的位置。学生在上下车时扫描二维码，这样家长就可以追踪孩子的上学和放学的路线。自动短信消息使家长保持知情。以下截图显示了主屏幕和位置追踪屏幕的两个视图：
- en: '![Ez School Bus Locator](img/00011.jpeg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![Ez School Bus Locator](img/00011.jpeg)'
- en: 'Components used: SMS messaging, GPS, map, QR Code, Button, Image, and Alignments'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用组件：短信消息、GPS、地图、二维码、按钮、图像和对齐方式
- en: Youth Radio
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 青少年广播
- en: This is an app that enables podcast listeners to rate radio shows and offer
    feedback.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个允许播客听众对广播节目进行评分并提供反馈的应用程序。
- en: Youth Radio is a non-profit organization based in Oakland, CA. Youth Radio programs
    empower young people to create media content by teaching them broadcast journalism
    and technology skills. Many of the podcasts that the students create are aired
    on National Public Radio across the United States. In an effort to interact with
    their listeners, develop relevant content, and get feedback, Youth Radio students
    created a mobile app with MIT App Inventor 2, enabling listeners to rate a radio
    show, add comments, and offer suggestions for future topics.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 青年广播电台是一家位于加利福尼亚州奥克兰的非营利组织。青年广播电台的项目通过教授广播新闻和科技技能，赋能年轻人创作媒体内容。学生们创建的许多播客在美国全国公共广播电台播出。为了与听众互动、开发相关内容并获得反馈，青年广播电台的学生们使用
    MIT App Inventor 2 开发了一个移动应用程序，使听众能够对广播节目进行评分、添加评论以及提出未来主题的建议。
- en: 'The following screenshots show the different ways that listeners can interact
    with Youth Radio:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了听众与青年广播电台互动的不同方式：
- en: '![Youth Radio](img/00012.jpeg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![Youth Radio](img/00012.jpeg)'
- en: 'Components used: Button, Clock, Notifier, Image, Camera, TinyDB, Player, Sharing,
    Label, Location Sensor, FusiontablesControls, Alignments, and MediaStore'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 所用组件：按钮、时钟、通知器、图像、相机、TinyDB、播放器、分享、标签、位置传感器、FusiontablesControls、对齐和媒体存储
- en: Rover 800 Remote
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Rover 800 Remote
- en: 'Rover 800 Remote app is an MIT App Inventor example of the Internet of Things.
    Paul Clements from the UK built a Bluetooth controller for his car that, with
    the help of microcontroller (sensor), can control the door locks, trunk release,
    fuel flap release, horn, and lights. It also remembers the car''s address (if
    available), so if the cell phone housing the app is inadvertently locked in the
    car along with the keys, a text message sent from another phone can unlock the
    car. This app could be modified for a wide range of vehicles. The following screenshots
    show the home screen, the registration screen, and the overview screen:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Rover 800 Remote 应用程序是物联网的 MIT App Inventor 示例。来自英国的保罗·克莱门茨（Paul Clements）为他的汽车构建了一个蓝牙控制器，借助微控制器（传感器），可以控制车门锁、行李箱释放、燃油盖释放、喇叭和灯光。它还记住汽车的位置（如果可用），因此如果装有应用程序的手机不小心与钥匙一起锁在车内，另一部手机发送的短信可以解锁汽车。此应用程序可以修改用于各种车辆。以下截图显示了主屏幕、注册屏幕和概览屏幕：
- en: '![Rover 800 Remote](img/00013.jpeg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![Rover 800 Remote](img/00013.jpeg)'
- en: 'Components used: Bluetooth, List Picker, Button, Label, Image, and Alignments'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 所用组件：蓝牙、列表选择器、按钮、标签、图像和对齐
- en: Summary
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: While the bulk of this book centers on learning to code with MIT App Inventor,
    this particular chapter highlights the many other learning outcomes gained from
    engaging in the mobile app development process. Taking an app concept and building
    it out into an actual mobile app is both a concrete and a creative process. Attention
    to detail and iteration is vital for both code and design to work effectively
    and synergistically. Whether you're creating a game to play with your friend,
    an app to promote philanthropy involvement on campus, or an app to kickstart a
    recycling program in your neighborhood, the Design Thinking process is as much
    a part of app development as coding. Skills such as brainstorming, researching,
    interviewing, synthesizing, ideating, storyboarding, designing, troubleshooting,
    problem solving, and testing are not only integral to app building, but are also
    transferrable to other disciplines, helping to unlock creativity and flow in any
    endeavor.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这本书的大部分内容集中在学习使用 MIT App Inventor 编码上，但这一特定章节突出了参与移动应用程序开发过程中获得的许多其他学习成果。将应用程序概念转化为实际移动应用程序是一个具体且富有创造性的过程。对细节的关注和迭代对于代码和设计的有效协同工作至关重要。无论你是为与朋友一起玩的游戏、在校园内推广慈善参与的应用程序，还是在你所在的社区启动回收计划的应用程序，设计思维过程都是应用程序开发的一部分，就像编码一样。如头脑风暴、研究、访谈、综合、构思、故事板、设计、故障排除、问题解决和测试等技能不仅对构建应用程序至关重要，而且可以转移到其他学科，有助于在任何事业中激发创造力和流畅性。
- en: Now that you've been introduced to MIT App Inventor and your new role as an
    app designer and developer, the next step will be to learn how to set up MIT App
    Inventor. Let's get rolling!
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了 MIT App Inventor 以及你作为应用程序设计师和开发者的新角色，下一步将是学习如何设置 MIT App Inventor。让我们开始吧！
