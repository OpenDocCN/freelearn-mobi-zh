["```swift\nprivate int tapped = 0;\npublic override void ViewDidLoad()\n{\n    base.ViewDidLoad();\n    tapGesture.AddTarget(this, new Selector(\"screenTapped\"));\n    View.AddGestureRecognizer(tapGesture);\n}\n[Export(\"screenTapped\")]public void SingleTap(UIGestureRecognizer s)\n{\n    tapped++;\n    lblCounter.Text = tapped.ToString();\n}\n```", "```swift\nUITapGestureRecognizer t'pGesture = new UITapGestureRecognizer()\n{\n    NumberOfTapsRequired = 1\n};\n```", "```swift\npublic override void ViewDidLoad()\n{\n    base.ViewDidLoad();\n    uiImageView.Image =UIImage.FromFile(\"graphics/image.jpg\")Scale(new SizeF(160f, 160f);\n    pinchGesture.AddTarget(this, new Selector(\"screenTapped\"));\n    uiImageView.AddGestureRecognizer(pinchGesture);\n}\n[Export(\"screenTapped\")]public void SingleTap(UIGestureRecognizer s)\n{\n    UIPinchGestureRecognizer pinch = (UIPinchGestureRecognizer)s;\n    float scale = 0f;\n    PointF location;\n    switch(s.State)\n    {\n        case UIGestureRecognizerState.Began:\n            Console.WriteLine(\"Pinch begun\");\n            location = s.LocationInView(s.View);\n            break;\n         case UIGestureRecognizerState.Changed:\n             Console.WriteLine(\"Pinch value changed\");\n             scale = pinch.Scale;\n             uiImageView.Image = UIImageFromFile(\"graphics/image.jpg\")Scale(new SizeF(160f, 160f), scale);\n             break;\n         case UIGestureRecognizerState.Cancelled:\n             Console.WriteLine(\"Pinch cancelled\");\n             uiImageView.Image = UIImageFromFile(\"graphics/image.jpg\")Scale(new SizeF(160f, 160f));\n             scale = 0f;\n             break;\n         case UIGestureRecognizerState.Recognized:\n             Console.WriteLine(\"Pinch recognized\");\n             break;\n    }\n}\n```", "```swift\npublic class myDragImage : UIImageView \n{\n    private PointF myLoc, myStartLoc;\n    private bool TouchedOnce = false;\n\n    public myDragImage (RectangleF frame)\n    {\n        this.Frame = frame;\n        myStartLoc = this.Frame.Location;\n    }\n    public override void TouchesBegan(NSSet touches, UIEvent e)\n    {\n        myLoc = Frame.Location;\n\n        var touch = (UITouch)e.TouchesForView(this).AnyObject;\n        var bounds = Bounds;\n\n        myStartLoc = touch.LocationInView(this);\n        Frame = new RectangleF(Location,bounds.Size);\n    }\n    public override void TouchesMoved(NSSet touches, UIEvent e)\n    {\n        var bounds = Bounds;\n        var touch = (UITouch)e.TouchesForView(this).AnyObject;\n\n        myLoc.X += touch.LocationInView(this).X - myStartLoc.X;\n        myLoc.Y += touch.LocationInView(this).Y - myStartLoc.Y;\n\n        Frame = new RectangleF(myLoc, bounds.Size);\n        TouchedOnce = true;\n    }\n\n    public override void TouchesEnded(NSSet touches, UIEvent e)\n    {\n        myStartLoc = myLoc;\n    }\n}\n```"]