- en: Setting Up the Basic Structure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Typically, before I write any code when working on a project, I like to set
    up my storyboard. This allows me to focus on coding without having to go back
    and forth from storyboard to code. In this book, we will do some of our layout
    in code in order to show you how to do that. But first, as I mentioned earlier,
    my preference is to set up as much as I can inside of storyboard.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating a Tab Bar Controller
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tab bar buttons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Launch screens
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Navigation controllers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the last chapter, we created our project, and now we are going to continue
    with that by creating a Tab Bar Controller from scratch. Although there is a Tab
    Bar Controller template that has everything you need, I find that starting from
    scratch is an excellent way to learn. Also, I find that it is easier to start
    to clean, rather than fix or update the template. However, you may want to utilize
    the template to begin your project in the future. Let's start setting up our app.
  prefs: []
  type: TYPE_NORMAL
- en: Starting from scratch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will be creating all of our files from scratch, so we will delete the existing
    files in our project and recreate them in proceeding chapters. The reason for
    this is so you can become comfortable with a project and understand how it was
    set up.
  prefs: []
  type: TYPE_NORMAL
- en: 'To delete the `ViewController.swift` file, you do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the `ViewController.swift` file in the Navigator panel:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/73b05c88-307f-4c4d-8fce-239d950a6703.png)'
  prefs: []
  type: TYPE_IMG
- en: 'With the file selected, hit the *Delete/Backspace* key. You will get the following
    message:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4f517dee-fc8e-45ca-a609-70bf5ccaa4a0.png)'
  prefs: []
  type: TYPE_IMG
- en: Select Move to Trash.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now we can continue to the setup of the storyboard.
  prefs: []
  type: TYPE_NORMAL
- en: Storyboard setup
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s get familiar with the UI setup. In order to update your `Main.storyboard`,
    do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the `Main.storyboard` file in the Navigator panel:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7cd91f5e-e68e-4082-9f86-ac52a0c58e26.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In this storyboard file, select View Controller scene in the Outline view:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2a600ac4-d3fd-492a-b964-24e235d91ecd.png)'
  prefs: []
  type: TYPE_IMG
- en: With the scene selected, you are going to press the *Delete/Backspace* key,
    and now your `Main.storyboard` file will be empty.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Then, in your Utilities panel, in the bottom pane, you will see the Library
    selector bar. In the bar, select the object library:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9b3c69e8-c3d9-4f3e-8aab-e6c83e0aedcf.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, you should pull up on the Library selector bar in order to view more
    of the object library:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/423ae421-25c4-41f4-990b-02a85a10ef24.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Find the Tab Bar Controller:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4c966e2a-83a7-4418-bde3-da9f1d754a72.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, drag the Tab Bar Controller out onto the canvas:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cdb0f7bc-839e-4545-b340-09125fcb7dc9.png)'
  prefs: []
  type: TYPE_IMG
- en: We now have our Tab Bar Controller, which will only have two tabs.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will get our app assets set up so that we can give our tabs image icons.
  prefs: []
  type: TYPE_NORMAL
- en: Adding our app assets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s add images into our project:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the `Assets.xcassets` folder in the Navigator panel:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4e0b1003-8749-43cb-94c8-a4d8caeea3d3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Hit the *Delete/Backspace* button, and you will get the following message:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1fb067bd-d9fe-4560-89d8-dc6c9bf5f590.png)'
  prefs: []
  type: TYPE_IMG
- en: Select Move to Trash.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the project `assets` folder that you downloaded from Packt''s website
    or GitHub. Open `Chapter_07`. Drag the `Assets.xcassets` folder into your project
    in the Navigator panel:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1f4d6927-9f50-4e7c-9295-62a6de08dba7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'When you drop the folder, you will get the following message:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8d7c244d-b20c-460e-8ff4-2ab84a88a1e7.png)'
  prefs: []
  type: TYPE_IMG
- en: Make sure that both Copy items if needed and Create groups are selected. Then,
    hit Finish.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you open the `Assets.xcassets` folder, you will now see all the assets for
    your entire project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1d4e4a82-328c-439b-a913-631ad3093edc.png)'
  prefs: []
  type: TYPE_IMG
- en: When you explore the assets, you will notice that we will be using both PNGs
    and PDFs.
  prefs: []
  type: TYPE_NORMAL
- en: Using PDFs allows us to support multiple device resolutions with only one image.
    Therefore, Xcode can handle supplying assets for all resolutions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Select `Main.storyboard` again, and, in the Outline view, you will select both
    disclosure arrows for `Item 1 Scene` and `Item 2 Scene`, in order to have them
    face downwards:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7f7e1cd8-b72d-415b-bebb-3efbc5774030.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, select both disclosure arrows for Item 1 under `Item 1 Scene` and Item
    2 under `Item 2 Scene`. Both should be downward-facing:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/598e9eda-c133-48fd-8d4b-7902880e8210.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Select Item 1 with the blue star to the left of it, and then select the Attributes
    inspector in the Utilities panel:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00d8eba1-51aa-4a84-94b2-324c8d4c05fc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the panel, use the following values to update your first tab icons:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the Tab Bar Item, enter the following details:'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Badge: Leave this field blank'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'System Item: Select Custom from the dropdown list'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Selected Image: icon-explore-on'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Title Position: Select Default Position from the dropdown list'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In the Bar Item, enter the following details:'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Title: Type `Explore` in this field'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Image: icon-explore-off'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Tag: Enter `0` in this field'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Enabled: This checkbox should be checked'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now, select Item 2 with the blue star to the left of it in the Outline view,
    and the Attributes inspector should already be open:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/66c5581c-7a6e-4a3a-aaa1-b4f4505a359e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Add the following into the panel:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the Tab Bar Item, enter the following details:'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Badge: Leave this field blank'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'System Item: Select Custom from the dropdown list'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Selected Image: icon-map-on'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Title Position: Select Default Position from the dropdown list'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: In the Bar Item, enter the following details
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Title**: Type `Map` in this field'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Image**: icon-map-off'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tag**: Enter `0` in this field'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enabled**: This checkbox should be checked'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now, let''s run the project by hitting the play button (or use *cmd* + *R*)
    in order to see where we are:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0f9e7a3b-aca7-464d-9320-5ebf37520f09.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As you may have noticed, this screen does not look like an app. Since we are
    building a Tab Bar Controller from scratch, we need to add an entry point. Close
    the simulator, and continue with the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select `Main.storyboard` again in the Outline view, and make sure that the
    disclosure arrow is down for the `Tab Bar Controller Scene`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/03c672a4-0002-4c41-9d51-a0d04df6cdc6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Select the `Tab Bar Controller` under the `Tab Bar Controller Scene`, and,
    in the Utilities panel, make sure that the Attributes inspector is selected:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/275b7ea5-46e8-4680-9235-dd97535963de.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, under the View Controller section, you will need to check the box for
    Is Initial View Controller:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2bca73b3-bb17-4a61-8646-4b954f17f837.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After you set the initial View Controller, there will be an arrow now pointing
    to the Tab Bar Controller. This arrow signifies the entry point of our app:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/163a8e86-521b-434b-9beb-b27ec4243e86.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s run the project again by hitting the play button (or use *cmd* + *R*):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/42469012-6a8e-4600-87a6-0de57286f4e1.png)'
  prefs: []
  type: TYPE_IMG
- en: Perfect! Now, with our basic structure established, we can start adding more
    specific elements to our views.
  prefs: []
  type: TYPE_NORMAL
- en: Storyboards
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we do that, let's update `LaunchScreen.storyboard`. This storyboard is
    used when our app first launches.
  prefs: []
  type: TYPE_NORMAL
- en: Creating our launch screen
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Launch screens can be created using images, but that would mean that you would
    have to create images for every device and device orientation. Using the `LaunchScreen.storyboard`
    gives us the ability to create just one asset for all devices and orientations:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the `LaunchScreen.storyboard` file, and, in the Outline view, make sure
    that the disclosure arrows for `View Controller Scene` and then `View Controller`
    are facing downwards. Then, select `View` under `View Controller`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5e28b77a-deef-4c0f-ba5c-fb7b7cd5f93e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the Utilities panel, select the Attributes inspector, and click on the white
    Background bar:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/eb81b9d1-a385-4f3a-9830-d48bf750c3ba.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, you will see a Colors panel appear. Select the second tab, which is called
    the **Color Slider**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/aedadccc-7d56-4661-8590-f1c87dcbeae4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Under RGB Sliders, Hex Color #, update the value from `FFFFFF` to `4A4A4A`.
    This should change your background color from white to a dark grey:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4dfcc3d9-de23-40c4-9914-9c4bc2e2489f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You might have to select the background color a second time. If so, just select
    the Background bar in the Attributes inspector again, which should change the
    Hex Color # back to `FFFFFF`. Then, just change it again to `4A4A4A`. You now
    can close the Color panel, and you should see the background color update in your
    Standard Editor panel:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8ccd9910-9f24-4330-92c3-bd62b6915e7d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, we need to bring the app logo onto the screen:'
  prefs: []
  type: TYPE_NORMAL
- en: 'While still in `LaunchScreen.storyboard`, select Media Library under the Library
    selector bar in the Utilities panel:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6555e29c-0e96-4eda-abde-a078f97a2246.png)'
  prefs: []
  type: TYPE_IMG
- en: The Media Library allows us to access our image assets, and it will place them
    inside of a `UIImageView` for us.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the filter, at the bottom of the Library pane, type `detail-logo`. Once
    that appears, drag and drop the logo onto the `LaunchScreen.storyboard`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6d314f1f-5651-41d6-9c85-c4392d83fa4f.png)'
  prefs: []
  type: TYPE_IMG
- en: There might be a bug in Xcode and, therefore, sometimes, when you drag the logo
    out, the width and height will not be set, and you will need to manually enter
    the width and height.
  prefs: []
  type: TYPE_NORMAL
- en: 'If your logo does not drag out to size, then do this step: with the logo selected,
    open the Size inspector in the Utilities panel, and set the width and height to
    the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Width**: `220`'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Height**: `112`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/55eca239-65ac-4a7c-8406-eab214bb8c6b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We want our *Let''s Eat* logo to appear in the center of the screen. In order
    for our logo to appear in the center for all devices, we need to apply auto layout.
    Select `detail-logo`, and then select the Pin icon near the Filter bar:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/03ff2481-296b-41a9-825a-af35f1f57d42.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, select the Align icon (shown in the preceding image), which is to the
    left of the Pin icon, and check the following boxes that appear:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Horizontally in container
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: Vertically in container
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Then, click on Add 2 Constraints.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When you are done, you will see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/606802d6-7221-4c15-b54e-c54e785837f4.png)'
  prefs: []
  type: TYPE_IMG
- en: Our launch screen is now set up for all devices. If you run the project again,
    you will now see your launch screen with the *Let's Eat* logo and new background
    color.
  prefs: []
  type: TYPE_NORMAL
- en: Let's move onto adding detail to our Explore tab, since this is the first thing
    a user will see after the app launches.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a Navigation Controller
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We first need to add a Navigation Controller to our Explore tab. This will allow
    us to do a few things, such as adding a button into the title bar of the navigation
    in order to present our cities list.
  prefs: []
  type: TYPE_NORMAL
- en: 'Select `Main.storyboard`, and, in the Outline view, select `Explore` with the
    blue star to the left of it, under `Item 1` in the `Explore Scene`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/56f2be3b-3485-47ca-b8c3-733ba8527a14.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, navigate to Editor | Embed In | Navigation Controller:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9c84f2b3-1613-42c8-b89d-2839c6571c51.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, our View Controller has a Navigation Controller:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/dd680d1b-3737-4f47-b559-0f02757cd903.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s run the project by hitting the Play button (or use *cmd* + *R*):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a37b8d57-7000-4539-8638-4c366d89a485.png)'
  prefs: []
  type: TYPE_IMG
- en: Repeat steps 1 to 4 under Adding a Navigation Controller above for the Map tab.
    Now that we have added both Navigation Controllers, in the next chapter, we will
    continue to create other View Controllers.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Storyboarding is one of the things I enjoy doing. It is quick and easy to set
    up your UI with storyboards. Being able to drag and drop what you need onto the
    canvas is such an efficient method of developing app storyboards. There are times
    when you will need to code, but being able to work on things without having to
    write any code is a wonderful capability. My preference is to use storyboards
    as much as possible, but there are many developers who prefer to do it in code.
    If you come from another programming language, try to keep an open mind and really
    learn storyboarding.
  prefs: []
  type: TYPE_NORMAL
- en: When you work on a project that uses storyboards, you can get a high-level overview
    of the project. When everything is written in code, it takes more time to get
    a basic idea of how the app is structured, and its overall flow. Again, there
    are people who love to code their UI, and we will do some of that in this book.
    My main point is that you have to find what works for you. This book leans more
    toward the storyboard side versus the coding side of setting up your UI.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will continue setting up our UI, and get familiar with
    more of the UI elements that you have seen in many iOS apps.
  prefs: []
  type: TYPE_NORMAL
