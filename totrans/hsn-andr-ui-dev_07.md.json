["```kt\nprivate final ImageView categoryIcon;\nprivate final TextView description;\nprivate final TextView amount;\nprivate final TextView timestamp;\n```", "```kt\nprivate final DateFormat dateFormat;\n```", "```kt\npublic ClaimItemViewHolder(final View claimItemCard) {\n    super(claimItemCard);\n    this.categoryIcon = claimItemCard.findViewById(R.id.item_category);\n    this.description = claimItemCard.findViewById(R.id.item_description);\n    this.amount = claimItemCard.findViewById(R.id.item_amount);\n    this.timestamp = claimItemCard.findViewById(R.id.item_timestamp);\n```", "```kt\nthis.dateFormat = DateFormat.getDateInstance(DateFormat.LONG);\n```", "```kt\npublic Drawable getCategoryIcon(final Category category) {\n    final Resources resources = itemView.getResources();\n    switch (category) {\n        case ACCOMMODATION:\n            return resources.getDrawable(R.drawable.ic_hotel_black);\n        case FOOD:\n            return resources.getDrawable(R.drawable.ic_food_black);\n        case TRANSPORT:\n            return resources.getDrawable(R.drawable.ic_transport_black);\n        case ENTERTAINMENT:\n            return resources.getDrawable(R.drawable.ic_entertainment_black);\n        case BUSINESS:\n            return resources.getDrawable(R.drawable.ic_business_black);\n        case OTHER:\n        default:\n            return resources.getDrawable(R.drawable.ic_other_black);\n    }\n}\n```", "```kt\npublic String formatAmount(final double amount) {\n    return amount == 0\n            ? \"\"\n            : amount == (int) amount\n            ? Integer.toString((int) amount)\n           : String.format(\"%.2f\", amount);\n}\n```", "```kt\npublic void setClaimItem(final ClaimItem item) {\n    categoryIcon.setImageDrawable(getCategoryIcon(item.getCategory()));\n    description.setText(item.getDescription());\n    amount.setText(formatAmount(item.getAmount()));\n    timestamp.setText(dateFormat.format(item.getTimestamp()));\n}\n```", "```kt\nprivate final Context context;\n\npublic ItemPresenter(final Context context) {\n    this.context = context;\n}\n```", "```kt\npublic String formatAmount(final double amount) {\n    return amount == 0\n            ? \"\"\n            : amount == (int) amount\n            ? Integer.toString((int) amount)\n            : String.format(\"%.2f\", amount);\n}\n```", "```kt\npublic Drawable getCategoryIcon(final Category category) {\n    final Resources resources = context.getResources();\n    switch (category) {\n        case ACCOMMODATION:\n            return resources.getDrawable(R.drawable.ic_hotel_black);\n        case FOOD:\n            return resources.getDrawable(R.drawable.ic_food_black);\n        case TRANSPORT:\n            return resources.getDrawable(R.drawable.ic_transport_black);\n        case ENTERTAINMENT:\n            return resources.getDrawable(R.drawable.ic_entertainment_black);\n        case BUSINESS:\n            return resources.getDrawable(R.drawable.ic_business_black);\n        case OTHER:\n        default:\n            return resources.getDrawable(R.drawable.ic_other_black);\n    }\n}\n```", "```kt\nprivate DateFormat dateFormat;\npublic String formatDate(final Date date) {\n    if (dateFormat == null) {\n        dateFormat = DateFormat.getDateInstance(DateFormat.LONG);\n    }\n\n    return dateFormat.format(date);\n}\n```", "```kt\n<layout \n\n    >\n```", "```kt\n<data>\n    <variable name=\"presenter\" type=\"com.packtpub.claim.ui.presenters.ItemPresenter\" />\n    <variable name=\"item\" type=\"com.packtpub.claim.model.ClaimItem\" />\n</data>\n```", "```kt\n<ImageView\n    android:id=\"@+id/category_icon\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginBottom=\"8dp\"\n    android:layout_marginStart=\"8dp\"\n    android:layout_marginTop=\"8dp\"\n    app:imageDrawable=\"@{presenter.getCategoryIcon(item.category)}\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintStart_toStartOf=\"parent\"\n    app:layout_constraintTop_toTopOf=\"parent\" />\n```", "```kt\n<TextView\n    android:id=\"@+id/item_amount\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginBottom=\"8dp\"\n    android:layout_marginEnd=\"8dp\"\n    android:layout_marginTop=\"8dp\"\n    android:text=\"@{presenter.formatAmount(item.amount)}\"\n    android:textAppearance=\"@style/TextAppearance.AppCompat.Medium\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintEnd_toEndOf=\"parent\"\n    app:layout_constraintTop_toTopOf=\"parent\"\n    tools:text=\"150\" />\n```", "```kt\n<TextView\n    android:id=\"@+id/item_description\"\n    android:layout_width=\"0dp\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginEnd=\"8dp\"\n    android:layout_marginStart=\"16dp\"\n    android:layout_marginTop=\"8dp\"\n    android:text=\"@{item.description}\"\n    android:textAppearance=\"@style/TextAppearance.AppCompat.Medium\"\n    app:layout_constraintEnd_toStartOf=\"@+id/item_amount\"\n    app:layout_constraintStart_toEndOf=\"@+id/category_icon\"\n    app:layout_constraintTop_toTopOf=\"parent\"\n    tools:text=\"Airport Shuttle\" />\n```", "```kt\n<TextView\n    android:id=\"@+id/item_timestamp\"\n    android:layout_width=\"0dp\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginBottom=\"8dp\"\n    android:layout_marginEnd=\"8dp\"\n    android:text=\"@{presenter.formatDate(item.timestamp)}\"\n    android:textAppearance=\"@style/TextAppearance.AppCompat.Small\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintEnd_toStartOf=\"@+id/item_amount\"\n    app:layout_constraintStart_toStartOf=\"@+id/item_description\"\n    app:layout_constraintTop_toBottomOf=\"@+id/item_description\"\n    tools:text=\"16-December-2017\" />\n```", "```kt\npublic class DataBoundViewHolder<P, I> extends RecyclerView.ViewHolder {\n```", "```kt\nprivate final ViewDataBinding binding;\n```", "```kt\npublic DataBoundViewHolder(final ViewDataBinding binding, final P presenter) {\n    super(binding.getRoot());\n    this.binding = binding;\n    this.binding.setVariable(BR.presenter, presenter);\n}\n```", "```kt\npublic void setItem(final I item) {\n    binding.setVariable(BR.item, item);\n}\n\npublic void setPresenter(final P presenter) {\n    binding.setVariable(BR.presenter, presenter);\n}\n```", "```kt\npublic boolean setVariable(int variableId, @Nullable Object variable) {\n    boolean variableSet = true;\n    if (BR.item == variableId) {\n        setItem((com.packtpub.claim.model.ClaimItem) variable);\n    }\n    else if (BR.presenter == variableId) {\n        setPresenter((ItemPresenter) variable);\n    }\n    else {\n        variableSet = false;\n    }\n    return variableSet;\n}\n```", "```kt\npublic class ClaimItemAdapter\n       extends RecyclerView.Adapter<DataBoundViewHolder<ItemPresenter, ClaimItem>> {\n```", "```kt\nprivate final LayoutInflater layoutInflater;\n```", "```kt\nprivate final ItemPresenter itemPresenter;\n```", "```kt\nprivate List<ClaimItem> items = Collections.emptyList();\n```", "```kt\npublic ClaimItemAdapter(\n        final Context context,\n        final LifecycleOwner owner,\n        final LiveData<List<ClaimItem>> liveItems) {\n\n    this.layoutInflater = LayoutInflater.from(context);\n    this.itemPresenter = new ItemPresenter(context);\n```", "```kt\nliveItems.observe(owner, new Observer<List<ClaimItem>>() {\n    public void onChanged(final List<ClaimItem> claimItems) {\n        ClaimItemAdapter.this.items = (claimItems != null)\n ? claimItems \n : Collections.<ClaimItem>emptyList();\n ClaimItemAdapter.this.notifyDataSetChanged();\n    }\n});\n```", "```kt\npublic DataBoundViewHolder<ItemPresenter, ClaimItem> onCreateViewHolder(\n        final ViewGroup parent,\n        final int viewType) {\n\n    return new DataBoundViewHolder<>(\n            DataBindingUtil.inflate(\n layoutInflater,\n R.layout.card_claim_item,\n parent,\n false\n ),\n            itemPresenter\n    );\n}\n```", "```kt\npublic void onBindViewHolder(\n        final DataBoundViewHolder<ItemPresenter, ClaimItem> holder,\n        final int position) {\n\n    holder.setItem(items.get(position));\n}\n```", "```kt\npublic int getItemCount() {\n    return items.size();\n}\n```", "```kt\nprivate RecyclerView.Adapter<?> claimItemsAdapter;\n\npublic RecyclerView.Adapter<?> getClaimItemsAdapter() {\n    if (claimItemsAdapter == null) {\n        claimItemsAdapter = new ClaimItemAdapter(\n                this, this,\n                database.claimItemDao().selectAll()\n        );\n    }\n\n    return claimItemsAdapter;\n}\n```", "```kt\n<android.support.v7.widget.RecyclerView\n    app:adapter=\"@{presenter.claimItemsAdapter}\"\n    app:layoutManager=\"android.support.v7.widget.LinearLayoutManager\"\n    android:id=\"@+id/claim_items\"\n    android:clipChildren=\"false\"\n    android:layout_marginTop=\"@dimen/grid_spacer1\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n```", "```kt\n<FrameLayout \n\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\"com.packtpub.claim.OverviewActivity\">\n\n</FrameLayout>\n```", "```kt\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:clipToPadding=\"false\"\n    android:orientation=\"vertical\"\n    android:paddingTop=\"@dimen/grid_spacer1\"\n    android:paddingBottom=\"@dimen/grid_spacer1\">\n</LinearLayout>\n```", "```kt\n<fragment\n    class=\"com.packtpub.claim.ui.AllowanceOverviewFragment\"\n    android:id=\"@+id/allowance_overview\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" />\n```", "```kt\n<android.support.v7.widget.RecyclerView\n    android:id=\"@+id/claim_items\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_marginTop=\"@dimen/grid_spacer1\"\n    android:clipToPadding=\"false\"\n android:paddingLeft=\"@dimen/grid_spacer1\"\n android:paddingRight=\"@dimen/grid_spacer1\"\n    app:layoutManager=\"android.support.v7.widget.LinearLayoutManager\" />\n```", "```kt\npublic class OverviewActivity\n        extends AppCompatActivity {\n```", "```kt\nprotected void onCreate(final Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_overview);\n\n    final RecyclerView claimItems = findViewById(R.id.claim_items);\n    claimItems.setAdapter(new ClaimItemAdapter(\n // both the Context, and LifecycleOwner are the OverviewActivity\n this, this,\n ClaimApplication.getClaimDatabase().claimItemDao().selectAll()\n ));\n}\n```", "```kt\n<activity\n    android:name=\".CaptureClaimActivity\"\n    android:label=\"@string/title_activity_capture_claim\"\n    android:theme=\"@style/AppTheme.NoActionBar\" />\n<activity\n    android:name=\".OverviewActivity\"\n    android:windowSoftInputMode=\"stateHidden\">\n    <intent-filter>\n <action android:name=\"android.intent.action.MAIN\" />\n <category android:name=\"android.intent.category.LAUNCHER\" />\n </intent-filter>\n</activity>\n```", "```kt\npublic Runnable createClaimItemTask(final ClaimItem claimItem) {\n    return new Runnable() {\n        @Override\n        public void run() {\n        }\n    };\n}\n```", "```kt\nbeginTransaction();\ntry {\n    final long claimId = claimItemDao().insert(claimItem);\n    claimItem.id = claimId;\n\n    for (final Attachment attachment : claimItem.getAttachments()) {\n        attachment.claimItemId = claimId;\n        attachment.id = attachmentDao().insert(attachment);\n    }\n    setTransactionSuccessful();\n} finally {\n    endTransaction();\n}\n```", "```kt\npublic boolean isValid() {\n    return !TextUtils.isEmpty(description)\n            && amount > 0\n            && timestamp != null\n            && category != null;\n}\n```", "```kt\n<path\n    android:fillColor=\"#FFFFFFFF\"\n    android:pathData=\"M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>\n```", "```kt\n<android.support.design.widget.FloatingActionButton\n\n    tools:context=\"com.packtpub.claim.ui.NewClaimItemFloatingActionButtonFragment\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    app:fabSize=\"normal\"\n    app:srcCompat=\"@drawable/ic_add_white_24dp\" />\n```", "```kt\npublic class NewClaimItemFloatingActionButtonFragment\n        extends Fragment\n        implements View.OnClickListener {\n```", "```kt\nprivate static final int REQUEST_CODE_CREATE_CLAIM_ITEM = 100;\n```", "```kt\n@Override\npublic View onCreateView(\n        final LayoutInflater inflater,\n        final ViewGroup container,\n        final Bundle savedInstanceState) {\n\n    final View button = inflater.inflate(\n            R.layout.fragment_new_claim_item_floating_action_button,\n            container,\n            false\n    );\n\n    button.setOnClickListener(this);\n    return button;\n}\n```", "```kt\n@Override public void onClick(final View view) {\n    startActivityForResult(\n            new Intent(getContext(), CaptureClaimActivity.class),\n            REQUEST_CODE_CREATE_CLAIM_ITEM);\n}\n```", "```kt\npublic void onActivityResult(\n        final int requestCode,\n        final int resultCode,\n        final Intent data) {\n\n    if (requestCode != REQUEST_CODE_CREATE_CLAIM_ITEM\n            || resultCode != Activity.RESULT_OK\n            || data == null) {\n        return;\n    }\n\n    final ClaimItem claimItem = data.getParcelableExtra(\n            CaptureClaimActivity.EXTRA_CLAIM_ITEM\n    );\n\n    if (claimItem.isValid()) {\n final ClaimDatabase database = ClaimApplication.getClaimDatabase();\n AsyncTask.SERIAL_EXECUTOR.execute(\n database.createClaimItemTask(claimItem)\n );\n }\n}\n```", "```kt\n<fragment\n        class=\"com.packtpub.claim.ui.NewClaimItemFloatingActionButtonFragment\"\n    android:id=\"@+id/new_claim_item\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"bottom|end\"\n    android:layout_margin=\"@dimen/fab_margin\" />\n```", "```kt\npublic final ObservableField<SpendingStats> spendingStats = new ObservableField<>();\npublic final ObservableInt allowance = new ObservableInt();\nprivate final UpdateSpendingStatsCommand updateSpendStatsCommand =\n                  new UpdateSpendingStatsCommand();\n```", "```kt\nprivate class UpdateSpendingStatsCommand extends ActionCommand<List<ClaimItem>, SpendingStats> {\n```", "```kt\npublic SpendingStats onBackground(final List<ClaimItem> items) throws Exception {\n    final Pair<Date, Date> today = getToday();\n    final Pair<Date, Date> thisWeek = getThisWeek();\n\n    double spentTotal = 0;\n    double spentToday = 0;\n    double spentThisWeek = 0;\n\n    for (int i = 0; i < items.size(); i++) {\n        final ClaimItem item = items.get(i);\n        spentTotal += item.getAmount();\n\n        if (item.getTimestamp().compareTo(thisWeek.first) >= 0\n                && item.getTimestamp().compareTo(thisWeek.second) <= 0) {\n\n            spentThisWeek += item.getAmount();\n        }\n\n        if (item.getTimestamp().compareTo(today.first) >= 0\n                && item.getTimestamp().compareTo(today.second) <= 0) {\n\n            spentToday += item.getAmount();\n        }\n    }\n\n    // for stats we round everything to integers\n    return new SpendingStats(\n            (int) spentTotal,\n            (int) spentToday,\n            (int) spentThisWeek\n    );\n}\n```", "```kt\npublic AllowanceOverviewPresenter(\n        final LifecycleOwner lifecycleOwner,\n        final int allowance) {\n\n    ClaimApplication.getClaimDatabase()\n            .claimItemDao()\n            .selectAll()\n            .observe(lifecycleOwner, new Observer<List<ClaimItem>>() {\n                @Override\n                public void onChanged(final List<ClaimItem> claimItems) {\n                    updateSpendStatsCommand.exec(claimItems);\n                }\n            });\n\n    this.allowance.set(allowance);\n}\n```", "```kt\npublic void updateAllowance(final CharSequence newAllowance) {\n    try {\n        allowance.set(Integer.parseInt(newAllowance.toString()));\n    } catch (final RuntimeException ex) {\n        //ignore\n        allowance.set(0);\n    }\n}\n```", "```kt\nprivate FragmentAllowanceOverviewBinding binding;\nprivate SharedPreferences preferences;\n```", "```kt\n@Override\npublic void onCreate(final Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    this.preferences = getContext().getSharedPreferences(\n            \"Allowance\",\n            Context.MODE_PRIVATE\n    );\n}\n```", "```kt\n@Override\npublic View onCreateView(\n        final LayoutInflater inflater,\n        final ViewGroup container,\n        final Bundle savedInstanceState) {\n\n    this.binding = DataBindingUtil.inflate(\n            inflater,\n            R.layout.fragment_allowance_overview,\n            container,\n            false\n    );\n\n    this.binding.setPresenter(new AllowanceOverviewPresenter(\n            this,\n            preferences.getInt(\"allowancePerDay\", 150)\n    ));\n\n    return this.binding.getRoot();\n}\n```", "```kt\n@Override\npublic void onDestroy() {\n    super.onDestroy();\n    preferences.edit()\n            .putInt(\"allowancePerDay\", this.binding.getPresenter().allowance.get())\n            .apply();\n}\n```"]