["```swift\n[[UINavigationBar appearance] setBarTintColor:[UIColor colorWithRed:200.0//255 green:0.0/255 blue:23.0/255 alpha:1.0f]];\n[[UINavigationBar appearance] setTitleTextAttributes: @{NSForegroundColorAttributeName: [UIColor whiteColor],\n                                                            NSFontAttributeName: [UIFont fontWithName:@\"HelveticaNeue\" size:19.0f] }];\n\n[[UINavigationBar appearance] setTintColor:[UIColor whiteColor]];\n\n[[UIBarButtonItem appearance] setTitleTextAttributes:@{NSFontAttributeName:[UIFont fontWithName:@\"HelveticaNeue-Light\" size:18.0f]} forState:UIControlStateNormal];\n```", "```swift\nbottomBarBG.backgroundColor = [UIColor colorWithRed:200.0/255 green:0.0/255 blue:23.0/255 alpha:0.7f];\n```", "```swift\n// Set this in every view controller so that the back button displays back instead of the root view controller name\nself.navigationItem.backBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@\" \" style:UIBarButtonItemStylePlain target:nil action:nil];\n```", "```swift\n#import <UIKit/UIKit.h>\n#import \"AddNewViewController.h\"\n#import \"MyFoodsViewController.h\"\n\n#define ADD_NEW_VIEW_CONTROLLER @\"AddNew\"\n```", "```swift\n- (IBAction)addNewPressed:(UIButton *)sender {\n\n// Present the addNewFoodViewController\nAddNewViewController *vc = [self.storyboard instantiateViewControllerWithIdentifier: ADD_NEW_VIEW_CONTROLLER ];\"];\nUINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:vc];\n\n[self.navigationController presentViewController:nav animated:YES completion:nil];\n\n}\n```", "```swift\n// Add our bar button items\n    UIBarButtonItem *cancelButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemCancel target:self action:@selector(cancelButtonPressed:)];\n    UIBarButtonItem *saveButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemSave target:self action:@selector(saveButtonPressed:)];\n\n// Assign the bar buttons to the navigation controller\n[self.navigationItem setLeftBarButtonItem:cancelButton];\n[self.navigationItem setRightBarButtonItem:saveButton];\n```", "```swift\n- (void)cancelButtonPressed:(UIButton *)sender {\n\n    // Dismiss the view\n    [self.presentingViewController dismissViewControllerAnimated:YES completion:nil];\n\n}\n\n- (void)saveButtonPressed:(UIButton *)sender {\n\n}\n```", "```swift\n@interface AddNewViewController : UIViewController <UITextFieldDelegate, UIActionSheetDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate>\n```", "```swift\n// Add a border around our image view\n[self.placeholderImageView.layer setBorderWidth:6.0f];\n[self.placeholderImageView.layer setBorderColor:[UIColor colorWithRed:129.0/255.0 green:129.0/255.0 blue:130.0/255.0 alpha:1.0].CGColor];\n\nUITapGestureRecognizer *imageViewTapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(imageViewTapped:)];\n[imageViewTapGesture setNumberOfTapsRequired:1];];\n\n[self.placeholderImageView setUserInteractionEnabled:YES];\n[self.placeholderImageView addGestureRecognizer:imageViewTapGesture];\n```", "```swift\n#pragma mark - User Interaction Methods\n\n- (void)imageViewTapped:(id)sender {\n\n    [[[UIActionSheet alloc] initWithTitle:nil\n                                 delegate:self\n                        cancelButtonTitle:@\"Cancel\"\n                   destructiveButtonTitle:nil\n                        otherButtonTitles:@\"Take Picture\", @\"Choose From Library\", nil]\n     showInView:self.view];\n\n}\n```", "```swift\n#pragma mark - Action Sheet Delegate\n\n-(void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex {\n\n    if (buttonIndex == actionSheet.cancelButtonIndex) {\n        return;\n    }\n\n    if (buttonIndex == 0 && [UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) {\n        // Take Picture Selected\n        UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];\n        imagePicker.delegate = self;\n        imagePicker.allowsEditing = YES;\n        [imagePicker setSourceType:UIImagePickerControllerSourceTypeCamera];\n\n        [self.navigationController presentViewController:imagePicker animated:YES completion:nil];\n\n    }\n\n    if (buttonIndex == 1) {\n        // Choose Photo From Library\n        UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];\n        imagePicker.delegate = self;\n        imagePicker.allowsEditing = YES;\n        [imagePicker setSourceType:UIImagePickerControllerSourceTypePhotoLibrary];\n\n        [self.navigationController presentViewController:imagePicker animated:YES completion:nil];\n\n    }\n\n}\n```", "```swift\n#pragma mark - UIImagePicker Delegate\n\n-(void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info {\n\n    UIImage *pic;\n\n    //Grab the stored image\n    if ([info objectForKey:UIImagePickerControllerEditedImage]) {\n        pic = [info objectForKey:UIImagePickerControllerEditedImage];\n\n    [self.finalImageView setImage:pic];\n    [self.placeholderImageView setHidden:YES];\n\n    }\n\n    [self.presentingViewController dismissViewControllerAnimated:YES completion:nil];\n\n}\n```", "```swift\n#pragma mark - Text Field Delegate\n\n- (BOOL)textFieldShouldReturn:(UITextField *)textField {\n\n    [textField resignFirstResponder];\n    return NO;\n}\n```", "```swift\n#pragma mark - Date Helper Method\n\n-(NSString*)stringForCurrentDateTime\n{\n    NSDateFormatter *format = [[NSDateFormatter alloc] init];\n    [format setDateFormat:@\"yyyyMMddHHmmss\"];\n\n    NSDate *now = [NSDate date];\n    NSString *dateString = [format stringFromDate:now];\n\n    return dateString;\n}\n```", "```swift\n- (void)saveButtonPressed:(UIButton *)sender {\n\n// Check if the image and title have been saved\n// If so, save the image to the documents directory and dismiss the view\n\n    if (self.finalImageView.image && self.nameTextField.text.length > 0) {\n        // Image and name have been set, so we can save\n\n    } else {\n\n        [[[UIAlertView alloc] initWithTitle:@\"Missing Data\"\n                                    message:@\"A title and image are both required to save.\"\n                                   delegate:nil\n                          cancelButtonTitle:@\"Ok\"\n                          otherButtonTitles:nil]\n         show];\n\n    }\n\n}\n```", "```swift\n// get paths from root direcory and the main documents directory\n    NSArray *paths = NSSearchPathForDirectoriesInDomains (NSDocumentDirectory, NSUserDomainMask, YES);\n    NSString *documentsPath = [paths firstObject];\n\n// Set up and save our image to the documents directory\n    NSString *imagePath = [documentsPath stringByAppendingPathComponent:[NSString stringWithFormat:@\"image-%@\", [self stringFromCurrentDateTime]]];\n\n    NSData* data = UIImagePNGRepresentation(self.finalImageView.image);\n    [data writeToFile:imagePath atomically:YES];\n```", "```swift\n// Get the path to our Data/plist file and where we will be saving our images\nNSString *plistPath = [documentsPath stringByAppendingPathComponent:@\"Data.plist\"];\n\n// Forward reference of our array\nNSMutableArray *plistDataArray;\n\n// Call the file manager to check if the file exists\nNSFileManager *defaultManager = [NSFileManager defaultManager];\nif ([defaultManager fileExistsAtPath:plistPath])\n{\n    // Assign the data\n    // Get the current data from the plist file if it exists\n    plistDataArray = [NSMutableArray arrayWithContentsOfFile:plistPath];\n\n}\nelse\n{\n    //create empty file\n    NSMutableArray *array = [NSMutableArray array];\n    [array writeToFile:plistPath atomically:YES];\n    plistDataArray = [NSMutableArray arrayWithContentsOfFile:plistPath];\n\n}\n```", "```swift\n// Create a new food item\nNSMutableDictionary *foodItem = [[NSMutableDictionary alloc] init];\n[foodItem setValue:self.nameTextField.text forKey:@\"name\"];\n[foodItem setValue:imagePath forKey:@\"image_filepath\"];\n[foodItem setValue:[NSDate date] forKey:@\"date\"];\n\n[plistDataArray addObject:foodItem];\n[plistDataArray writeToFile:plistPath atomically:YES];\n\n[self dismissViewControllerAnimated:YES completion:nil];\n```"]