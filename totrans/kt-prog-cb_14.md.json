["```kt\ntar xvzf apache-tomcat-8.0.9.tar.gz\n```", "```kt\nmv apache-tomcat-8.0.9 /opt/tomcat\n```", "```kt\njava -version\n```", "```kt\nsudo apt-get install openjdk-7-jdk\n```", "```kt\nexport JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64\nexport CATALINA_HOME=/opt/tomcat\n```", "```kt\n. ~/.bashrc\n```", "```kt\n$CATALINA_HOME/bin/startup.sh\n```", "```kt\nUsing CATALINA_BASE: /opt/tomcat\nUsing CATALINA_HOME: /opt/tomcat\nUsing CATALINA_TMPDIR: /opt/tomcat/temp\nUsing JRE_HOME: /usr/lib/jvm/java-7-openjdk-amd64/\nUsing CLASSPATH: /opt/tomcat/bin/bootstrap.jar:/opt/tomcat/bin/tomcat-juli.jar\nTomcat started.\n```", "```kt\ngradle war\n```", "```kt\nbuildscript {\n    ext.kotlin_version = '1.1.60' // Required for Kotlin integration\n    ext.spring_boot_version = '1.5.4.RELEASE'\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\" // Required for Kotlin integration\n        classpath \"org.jetbrains.kotlin:kotlin-allopen:$kotlin_version\" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin\n        classpath \"org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version\"\n    }\n}\n\napply plugin: 'kotlin' // Required for Kotlin integration\napply plugin: \"kotlin-spring\" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin\napply plugin: 'org.springframework.boot'\n\njar {\n    baseName = 'gs-rest-service'\n    version = '0.1.0'\n}\nsourceSets {\n    main.java.srcDirs += 'src/main/kotlin'\n}\n\nrepositories {\n    jcenter()\n}\n\ndependencies {\n    compile \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\" // Required for Kotlin integration\n    compile 'org.springframework.boot:spring-boot-starter-web'\n    testCompile('org.springframework.boot:spring-boot-starter-test')\n}\n```", "```kt\n** WARNING ** : Your ApplicationContext is unlikely to start due to a `@ComponentScan` of the default package.\n```", "```kt\n@SpringBootApplication\nopen class App {\n}\n\nfun main(args: Array<String>) {\n    SpringApplication.run(App::class.*java*, *args)\n}\n```", "```kt\nStarted AppKt in 5.875 seconds (JVM running for 6.445)\n```", "```kt\npackage college\n\nclass Student() {\n    lateinit var roll_number: String\n    lateinit var name: String\n    constructor(\n            roll_number: String,\n            name: String): this() {\n        this.roll_number = roll_number\n        this.name = name\n    }\n}\n```", "```kt\n@Component\nclass StudentDatabase {\n    private val students = mutableListOf<Student>()\n}\n```", "```kt\n@PostConstruct\nprivate fun init() {\n    students.add(Student(\"2013001\",\"Aanand Shekhar Roy\"))\n    students.add(Student(\"2013165\",\"Rashi Karanpuria\"))\n}\n```", "```kt\nfun getStudents()=students\n```", "```kt\nfun addStudent(student: Student): Boolean {\n    students.add(student)\n    return true\n}\n```", "```kt\n@RestController\nclass StudentController {\n    @Autowired\n    private lateinit var database: StudentDatabase\n}\n```", "```kt\n@RequestMapping(\"\", method = arrayOf(RequestMethod.GET))\nfun students() = database.getStudents()\n```", "```kt\npackage college\n\nimport org.springframework.beans.factory.annotation.Autowired\nimport org.springframework.web.bind.annotation.RequestMapping\nimport org.springframework.web.bind.annotation.RequestMethod\nimport org.springframework.web.bind.annotation.RestController\n\n@RestController\nclass StudentController {\n    @Autowired\n    private lateinit var database: StudentDatabase\n    @RequestMapping(\"\", method = arrayOf(RequestMethod.GET))\n    fun students() = database.getStudents()\n}\n```", "```kt\n@GetMapping(\"/student/{roll_number}\")\nfun studentWithRollNumber( @PathVariable(\"roll_number\")  roll_number:String) =\n    database.getStudentWithRollNumber(roll_number)\n```", "```kt\n{\"roll_number\":\"2013001\",\"name\":\"Aanand Shekhar Roy\"}\n```", "```kt\n@RequestMapping(\"/add\", method = arrayOf(RequestMethod.POST))\nfun addStudent(@RequestBody student: Student) =\n        if (database.addStudent(student)) student\n        else throw Exception(\"Something went wrong\")\n```", "```kt\n./gradlew clean bootRepackage\n```", "```kt\njava -jar build/libs/gs-rest-service-0.1.0.jar \n```", "```kt\nStarted AppKt in 4.858 seconds (JVM running for 5.548)\n```", "```kt\npackage college\n\nimport org.springframework.boot.SpringApplication\nimport org.springframework.boot.autoconfigure.SpringBootApplication\n\n@SpringBootApplication\nclass Application\nfun main(args: Array<String>) {\n    SpringApplication.run(Application::class.java, *args)\n}\n\n```", "```kt\n./gradlew bootRun\n```", "```kt\n./gradlew clean bootRepackage\n```", "```kt\njava -jar build/libs/gs-rest-service-0.1.0.jar \n```"]