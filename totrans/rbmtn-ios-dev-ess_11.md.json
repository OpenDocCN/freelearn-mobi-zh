["```swift\n$motion create TeaCupMotion\n\n```", "```swift\n    $:.unshift(\"/Library/RubyMotion/lib\")\n    require 'motion/project'\n    require 'bundler'\n    Bundler.require\n\n    ```", "```swift\n    source \"https://rubygems.org\"\n    gem \"teacup\"\n\n    ```", "```swift\n    bundle install\n\n    ```", "```swift\n    class AppDelegate\n      def application(application, didFinishLaunchingWithOptions:launchOptions)\n        @window = UIWindow.alloc.initWithFrame(UIScreen.mainScreen.bounds)\n        myNavController = RootController.alloc.init\n\n        @window.rootViewController = UINavigationController.alloc.initWithRootViewController(myNavController)\n        @window.rootViewController.wantsFullScreenLayout = true\n        @window.makeKeyAndVisible\n        true\n      end\n    end\n    ```", "```swift\nTeacup::Stylesheet.new(:style) do\n\n  style :your_layout,\n    landscape: true\n\n  style UILabel,\n    textColor: UIColor.blueColor\n  style :label,\n    text: 'Awesome',\n    backgroundColor: UIColor.whiteColor,\n    top: 10,\n    left: 100,\n    width: 100,\n    height: 20\n\nend\n```", "```swift\n    Teacup::Stylesheet.new(:style) do\n    â€¦\n    end\n    ```", "```swift\n      style :your_layout,\n        landscape: true\n    ```", "```swift\n      style UILabel,\n        textColor: UIColor.blueColor\n    ```", "```swift\n    style :label,\n      text: 'Awesome',\n      backgroundColor: UIColor.whiteColor,\n      top: 10,\n      left: 100,\n      width: 100,\n      height: 20\n    ```", "```swift\n    class RootController < UIViewController\n\n      stylesheet :style\n\n      layout :your_layout do\n        @label1 = subview(UILabel, :label)\n\n      end\n\n      def shouldAutorotateToInterfaceOrientation(orientation)\n        autorotateToOrientation(orientation)\n      end\n\n    end\n    ```", "```swift\n    $rake\n\n    ```", "```swift\n        style :label,\n        text: 'Awesome',\n        backgroundColor: UIColor.whiteColor,\n        top: 10,\n        left: 100,\n        width: 100,\n        height: 20,\n     landscape: {\n     backgroundColor: UIColor.redColor,\n     }\n\n    ```", "```swift\n      style UITextField,                # Defining styles based on view\n    class instead\n      textColor: UIColor.redColor\n\n      style :field,\n      left:   10,\n      top:    10,\n      width:  200,\n      height: 30,\n      landscape: {\n        width: 360  # make it wide in landscape view\n      }\n\n      style :search, extends: :field,\n      backgroundColor: UIColor.whiteColor,\n      left: 20,\n      top: 70,\n      placeholder: 'Search Box'     \n      style :search_new, extends: :field,\n      backgroundColor: UIColor.redColor,\n      left: 20,\n      top: 110,\n      placeholder: 'Search Box'\n    ```", "```swift\n      layout :your_layout do\n        @label1 = subview(UILabel, :label)\n        @search = subview(UITextField, :search)\n        @one_more_search = subview(UITextField, :search_new)\n\n      end\n    ```", "```swift\n    $rake\n\n    ```", "```swift\nBW::HTTP.get(\"https://twitter.com/rubymotion\") do |response|\n  p response.body.to_str\nend\n```", "```swift\nBW::Device.camera.front.picture(media_types: [:movie, :image]) do |result|\n  image_view = UIImageView.alloc.initWithImage(result[:original_image])\nend\n```", "```swift\n    $motion create UseBubbleWrap\n\n    ```", "```swift\n    require 'bundler'\n    Bundler.require\n    ```", "```swift\n    source :rubygems\n    gem 'bubble-wrap'\n    ```", "```swift\n    $bundle install\n\n    ```", "```swift\n    $rake\n\n    ```", "```swift\n    (main)> App.name\n    => \"UseBubbleWrap\"\n\n    (main)> App.identifier\n    => \"com.yourcompany.UseBubbleWrap\"\n\n    (main)> App.documents_path\n    => \"/Users/abhishek/Library/Application Support/iPhone Simulator/6.1/Applications/3CF89A96-F390-4A7D-89B8-2F0E7B54A38A/Documents\"\n\n    (main)> App.resources_path\n    => \"/Users/abhishek/Library/Application Support/iPhone Simulator/6.1/Applications/3CF89A96-F390-4A7D-89B8-2F0E7B54A38A/UseBubbleWrap.app\"\n\n    (main)> App.frame\n    => #<CGRect origin=#<CGPoint x=0.0 y=20.0> size=#<CGSize width=320.0 height=460.0>>\n    (main)> App.states\n    => {}\n\n    (main)> App.shared\n    => #<UIApplication:0x9530920>\n\n    (main)> App.current_locale\n    => #<__NSCFLocale:0x966a040>\n    (main)> App.alert(\"This is nice!!\")\n    => #<UIAlertView:0xa8433f0>\n\n    (main)>  App.run_after(0.5) {  p \"It's #{Time.now}\"   }\n    => #<__NSCFTimer:0x93760c0>\n    (main)> \"It's 2013-05-10 18:47:34 +0530\"\n\n    ```", "```swift\n    $rake\n    (main)> Device.iphone?\n    => true\n\n    (main)> Device.ipad? \n    => false\n\n    (main)> Device.front_camera?\n    \"This method (front_camera?) is DEPRECATED. Transition to using Device.camera.front?\"\n    => false\n\n    (main)>  Device.screen.width\n    => 320.0\n\n    (main)> Device.screen.height\n    => 480.0\n\n    (main)> Device.orientation\n    => :portrait\n\n    ```", "```swift\n    $motion create AddressBook_example\n\n    ```", "```swift\n    source :rubygems\n    gem 'bubble-wrap'\n    gem 'motion-addressbook'\n    ```", "```swift\n    $bundle install\n\n    ```", "```swift\n    def viewDidLoad\n        view.backgroundColor = UIColor.underPageBackgroundColor\n        load_button\n        load_labels\n      end\n\n      def load_button\n\n        @phonebook_button = UIButton.buttonWithType(UIButtonTypeRoundedRect)\n        @phonebook_button.frame = [[50, 20], [200, 50]]\n        @phonebook_button.setTitle(\"Click from Contacts\", forState:UIControlStateNormal)\n        @phonebook_button.addTarget(self, action: :addressbook_access, forControlEvents:UIControlEventTouchUpInside)\n        view.addSubview(@phonebook_button)\n\n      end\n\n      def load_labels\n\n        @first_name = UILabel.new\n        @first_name.text = 'First Name'\n        @first_name.frame = [[100,100],[150,50]]\n\n        @last_name = UILabel.new\n        @last_name.text = 'Last Name'\n        @last_name.frame = [[100,160],[150,50]]\n\n        @organization = UILabel.new\n        @organization.text = 'Organization'\n        @organization.frame = [[100,220],[150,50]]\n\n        view.addSubview(@first_name)\n        view.addSubview(@last_name)\n        view.addSubview(@organization)\n      end\n    ```", "```swift\n    class AppDelegate\n      def application(application, didFinishLaunchingWithOptions:launchOptions)\n\n      @window = UIWindow.alloc.initWithFrame(UIScreen.mainScreen.bounds)\n      @window.rootViewController = AddressbookController.alloc.init\n      @window.makeKeyAndVisible\n\n        true\n      end\n    end\n    ```", "```swift\n    $rake\n\n    ```", "```swift\n      def addressbook_access\n\n        AddressBook.pick { |person|\n          if person\n             first_name = person.attributes[:first_name]\n             last_name = person.attributes[:last_name]\n             org = person.attributes[:organization]\n             @first_name.text = first_name\n             @last_name.text = last_name\n             @organization.text = org\n\n          else\n            # write some cancel code\n          end\n        }\n\n      end\n    ```", "```swift\n    $rake\n\n    ```", "```swift\n    AddressBook::Person.new\n    #<AddressBook::Person:0xc360bc0 @address_book=nil @ab_person=nil @attributes={}>\n    ```", "```swift\n    AddressBook::Person.all\n    [#<AddressBook::Person:0x9d78c80 @address_book=#<__NSCFType:0xc0db6d0> @ab_person=#<__NSCFType:0x9d77ea0> @attributes={:first_name=>\"Abhishek\", :last_name=>\"Nalwaya\", :organization=>\"Fun Inc.\"}>, #<AddressBook::Person:0x78f0a20 @address_book=#<__NSCFType:0xc0db6d0> @ab_person=#<__NSCFType:0x9d78520> @attributes={:first_name=>\"Akshat\", :last_name=>\"Paul\", :organization=>\"PacktPub\"}>, #<AddressBook::Person:0x78a5eb0 @address_book=#<__NSCFType:0xc0db6d0> @ab_person=#<__NSCFType:0x9d788b0> @attributes={:first_name=>\"Laurent\", :last_name=>\"Sansonetti\", :organization=>\"HipByte\"}>, #<AddressBook::Person:0x78c06e0 @address_book=#<__NSCFType:0xc0db6d0> @ab_person=#<__NSCFType:0x9d78700> @attributes={:first_name=>\"Manu\", :last_name=>\"Singhal\", :organization=>\"Ruby Inc\"}>]\n    ```", "```swift\n    AddressBook::Person.find_all_by_organization('HipByte')\n    ```", "```swift\n    AddressBook::Person.where(:email => 'akshatpaul@abc.com', :organization => 'Fun Inc')\n    ```", "```swift\n    AddressBook::Person.create(:first_name => 'Shi', :last_name => 'Foo', :email => shi@foo.com')\n    ```", "```swift\n     $sudo gem install cocoapods\n\n    ```", "```swift\n     $pod setup\n\n    ```", "```swift\n    $sudo gem install motion-cocoapods\n\n    ```", "```swift\nMotion::Project::App.setup do |app|\n  app.pods do\n    dependency 'Reachability'\n  end\nend\n```"]