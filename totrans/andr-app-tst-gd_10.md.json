["```java\n$ sudo apt-get install git-core gnupg flex bison gperf libsdl-dev \\\nlibesd0-dev libwxgtk2.6-dev build-essential zip curl libncurses5-dev \\\nzlib1g-dev $ sudo apt-get install gcc-multilib g++-multilib libc6-dev-i386 \\\nlib32ncurses5-dev ia32-libs x11proto-core-dev libx11-dev \\\nlib32readline5-dev lib32z-dev\n\n```", "```java\n$ sudo update-java-alternatives -s java-6-sun\n\n```", "```java\n$ curl http://android.git.kernel.org/repo > ~/bin/repo\n$ chmod a+x ~/bin/repo\n\n```", "```java\n$ mkdir ~/android/android-2.3\n$ cd ~/android/android-2.3\n$ repo init -u git://android.git.kernel.org/platform/manifest.git\n\n```", "```java\n$ repo sync\n\n```", "```java\n~/android/android-2.3$ source build/envsetup.sh\n\n```", "```java\n~/android/android-2.3$ lunch\n\n```", "```java\n~/android/android-2.3$ export EMMA_INSTRUMENT=true\n\n```", "```java\n~/android/android-2.3$ make -j4\n\n```", "```java\n~/android/android-2.3/development/samples$ ln -s ~/workspace/TemperatureConverter .\n~/android/android-2.3/development/samples$ ln -s ~/workspace/TemperatureConverterTest .\n\n```", "```java\nLOCAL_PATH:= $(call my-dir)\ninclude $(CLEAR_VARS)\nLOCAL_MODULE_TAGS := samples\n# Only compile source java files in this apk.\nLOCAL_SRC_FILES := $(call all-java-files-under, src)\nLOCAL_PACKAGE_NAME := TemperatureConverter\nLOCAL_SDK_VERSION := current\ninclude $(BUILD_PACKAGE)\n\n```", "```java\nmm ()\n{\nif [ -f build/core/envsetup.mk -a -f Makefile ]; then\nmake $@;\nelse\nT=$(gettop);\nlocal M=$(findmakefile);\nlocal M=`echo $M|sed 's:'$T'/::'`;\nif [ ! \"$T\" ]; then\necho \"Couldn't locate the top of the tree. Try setting TOP.\";\nelse\nif [ ! \"$M\" ]; then\necho \"Couldn't locate a makefile from the current directory.\";\nelse\nONE_SHOT_MAKEFILE=$M make -C $T all_modules $@;\nfi;\nfi;\nfi\n}\n\n```", "```java\n~/android/android-2.3/development/samples/TemperatureConverter$ EMMA_INSTRUMENT=true mm\n\n```", "```java\nLOCAL_PATH:= $(call my-dir)\ninclude $(CLEAR_VARS)\n# We only want this apk build for tests.\nLOCAL_MODULE_TAGS := tests\nLOCAL_JAVA_LIBRARIES := android.test.runner\nLOCAL_STATIC_JAVA_LIBRARIES := easymock hamcrest-core \\\nhamcrest-integration hamcrest-library\n# Include all test java files.\nLOCAL_SRC_FILES := $(call all-java-files-under, src)\nLOCAL_PACKAGE_NAME := TemperatureConverterTest\nLOCAL_INSTRUMENTATION_FOR := TemperatureConverter\nLOCAL_SDK_VERSION := current\ninclude $(BUILD_PACKAGE)\nLOCAL_PREBUILT_STATIC_JAVA_LIBRARIES := \\\neasymock:libs/easymock-2.5.2.jar \\\nhamcrest-core:libs/hamcrest-core-1.2-android.jar \\\nhamcrest-integration:libs/hamcrest-integration-1.2-android.jar \\\nhamcrest-library:libs/hamcrest-library-1.2-android.jar\ninclude $(BUILD_MULTI_PREBUILT)\n\n```", "```java\n~/android/android-2.3/development/samples/TemperatureConverterTest \\ $ EMMA_INSTRUMENT=true mm\n\n```", "```java\n~/android/android-2.3$ ./out/host/linux-x86/bin/emulator -sdcard ~/tmp/sdcard.img -partition-size 256\n\n```", "```java\n~/android/android-2.3$ adb remount\n\n```", "```java\n~/android/android-2.3/development/samples/TemperatureConverterTest$ adb sync\n\n```", "```java\n~/android/android-2.3$ adb shell am instrument -e coverage 'true' \\ -w com.example.aatg.tc.test/android.test.InstrumentationTestRunner\n\n```", "```java\n~/android/android-2.3$ mkdir -p out/emma/tc\n~/android/android-2.3$ cd out/emma/tc\n\n```", "```java\n~/android/android-2.3/out/emma/tc$ adb pull /data/data/com.example.aatg.tc/files/coverage.ec coverage.ec\n\n```", "```java\n~/android/android-2.3/out/emma/tc$ cp ~/android/android-2.3/out/target/common/obj/APPS/TemperatureConverter_intermediates/coverage.em .# not the dot (.) at the end\n\n```", "```java\n~/android/android-2.3/out/emma/tc$ firefox coverage/index.html\n\n```", "```java\npublic TemperatureConverter {\n…\nprivate TemperatureConverter() {\n}\n...\n}\n\n```", "```java\n/** Called when the activity is first created. */\n@Override\npublic void onCreate(Bundle savedInstanceState) {\nsuper.onCreate(savedInstanceState);\nsetContentView(R.layout.main);\nif ( savedInstanceState != null ) { Log.d(TAG, \"Should restore state from \" + savedInstanceState);\n}\n…\n\n```", "```java\npackage com.example.aatg.tc.test;\nimport com.example.aatg.tc.TemperatureConverterActivity;\nimport com.example.aatg.tc.TemperatureConverterApplication;\nimport android.app.Instrumentation;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.test.ActivityUnitTestCase;\npublic class TemperatureConverterActivityUnitTests extends\nActivityUnitTestCase<TemperatureConverterActivity> {\npublic TemperatureConverterActivityUnitTests(String name) {\nsuper(TemperatureConverterActivity.class);\nsetName(name);\n}\nprotected void setUp() throws Exception {\nsuper.setUp(); mStartIntent = new Intent(Intent.ACTION_MAIN);\nmInstrumentation = getInstrumentation();\nsetApplication(new TemperatureConverterApplication());\n}\nprotected void tearDown() throws Exception {\nsuper.tearDown();\n}\n// other tests not displayed here … public final void testOnCreateBundle() {\nBundle savedInstanceState = new Bundle();\nsavedInstanceState.putString(\"dummy\", \"dummy\");\nsetApplication(new TemperatureConverterApplication());\nIntent intent = new Intent(mInstrumentation.getTargetContext(), TemperatureConverterActivity.class);\nstartActivity(intent, savedInstanceState, null);\nTemperatureConverterActivity activity = getActivity();\nassertNotNull(activity);\n}\n}\n\n```", "```java\ntry {\nfinal double temp = Double.parseDouble(str);\nfinal double result = (mOp == OP.C2F) ?\nTemperatureConverter.celsiusToFahrenheit(temp) :\nTemperatureConverter.fahrenheitToCelsius(temp);\nfinal String resultString = String.format(\"%.2f\", result);\nmDest.setNumber(result);\nmDest.setSelection(resultString.length());\n} catch (NumberFormatException e) {\n// WARNING\n// this is generated while a number is entered,\n// for example just a '-'\n// so we don't want to show the error } catch (InvalidTemperatureException e) {\nmSource.setError(\"ERROR: \" + e.getLocalizedMessage());\n}\n\n```", "```java\npublic void testInvalidTemperatureInCelsius() throws Throwable {\nrunTestOnUiThread(new Runnable() {\n@Override\npublic void run() {\nmCelsius.clear();\nmCelsius.requestFocus();\n}\n});\n// temp less than ABSOLUTE_ZERO_C\nassertNull(mCelsius.getError());\nsendKeys(\"MINUS 3 8 0\");\nassertNotNull(mCelsius.getError());\n}\n\n```", "```java\npublic final void testPrivateConstructor() throws\nSecurityException, NoSuchMethodException,\nIllegalArgumentException, InstantiationException,\nIllegalAccessException, InvocationTargetException {\nConstructor<TemperatureConverter> ctor =\nTemperatureConverter.class.getDeclaredConstructor();\nctor.setAccessible(true);\nTemperatureConverter tc = ctor.newInstance((Object[])null);\nassertNotNull(tc);\n}\n\n```", "```java\npublic final void testOnCreateOptionsMenu() {\nfinal Instrumentation instrumentation = getInstrumentation();\nfinal ActivityMonitor preferencesMon = instrumentation.addMonitor( \"com.example.aatg.tc.TemperatureConverterPreferences\", null, false);\nassertTrue(instrumentation.invokeMenuActionSync( mActivity, TemperatureConverterActivity. MENU_ID_PREFERENCES, 0));\nfinal Activity preferences = preferencesMon.waitForActivityWithTimeout(3000);\nassertNotNull(preferences);\npreferences.finish();\n}\n\n```", "```java\n$ ant coverage\n\n```", "```java\nBuildfile: <path/to>/TemperatureConverterTest/build.xml\n[setup] Android SDK Tools Revision 11\n[setup] Project Target: Android 2.3.1\n...\n-set-coverage-classpath:\n-install-instrumented:\n...\n-package-with-emma:\n...\n-install-with-emma:\n...\ncoverage:\n[echo] Running tests ...\n[exec]\n[exec] com.example.aatg.tc.test.EditNumberTests:.......\n[exec] com.example.aatg.tc.test. TemperatureConverterActivityTests:...............\n[exec] com.example.aatg.tc.test. TemperatureConverterActivityUnitTest:...\n[exec] com.example.aatg.tc.test. TemperatureConverterApplicationTests:....\n[exec] com.example.aatg.tc.test.TemperatureConverterTests:.......\n[exec] com.example.aatg.tc.test.robotium. TemperatureConverterActivityTests:..\n[exec] Test results for InstrumentationTestRunner=..........................\n[exec] Time: 61.931\n[exec]\n[exec] OK (38 tests)\n[exec]\n[exec]\n[exec] Generated code coverage data to /data/data/com.example.aatg.tc/files/coverage.ec\n[echo] Downloading coverage file into project directory...\n[exec] 14 KB/s (751 bytes in 0.050s)\n[echo] Extracting coverage report...\n... [echo] Saving the report file in <path/to>/ TemperatureConverterTest/coverage/coverage.html\nBUILD SUCCESSFUL\nTotal time: 1 minute 31 seconds\n\n```", "```java\npackage com.example.aatg.tc.test.robotium;\nimport android.test.ActivityInstrumentationTestCase2;\nimport com.example.aatg.tc.TemperatureConverterActivity; import com.jayway.android.robotium.solo.Solo;\n/**\n* @author diego\n*\n*/\npublic class TemperatureConverterActivityTests extends\nActivityInstrumentationTestCase2<TemperatureConverterActivity> { private Solo mSolo;\nprivate TemperatureConverterActivity mActivity;\n/**\n* @param name\n*/\npublic TemperatureConverterActivityTests(String name) {\nsuper(TemperatureConverterActivity.class);\nsetName(name);\n}\n/* (non-Javadoc)\n* @see android.test.ActivityInstrumentationTestCase2#setUp()\n*/\nprotected void setUp() throws Exception {\nsuper.setUp();\nmActivity = getActivity(); mSolo = new Solo(getInstrumentation(), mActivity);\n}\ntestFahrenheitToCelsiusConversion() testabout/* (non-Javadoc)\n* @see android.test.ActivityInstrumentationTestCase2#tearDown()\n*/\nprotected void tearDown() throws Exception {\ntry { mSolo.finalize();\n}\ncatch (Throwable ex) {\nex.printStackTrace();\n}\nmActivity.finish();\nsuper.tearDown();\n}\n}\n\n```", "```java\npublic final void testFahrenheitToCelsiusConversion() {\nmSolo.clearEditText(CELSIUS);\nmSolo.clearEditText(FAHRENHEIT);\nfinal double f = 32.5d;\nmSolo.clickOnEditText(FAHRENHEIT);\nmSolo.enterText(FAHRENHEIT, Double.toString(f));\nmSolo.clickOnEditText(CELSIUS);\nfinal double expectedC = TemperatureConverter.fahrenheitToCelsius(f);\nfinal double actualC = Double.parseDouble(mSolo.getEditText(CELSIUS). getText().toString());\nfinal double delta = Math.abs(expectedC - actualC);\nfinal String msg = \"\" + f + \"F -> \" + expectedC + \"C but was \" + actualC + \"C (delta \" + delta + \")\";\nassertTrue(msg, delta < 0.005);\n}\n\n```", "```java\nprivate static final int CELSIUS = 0;\nprivate static final int FAHRENHEIT = 1;\n\n```", "```java\npublic final void testOnCreateOptionsMenu() {\nfinal int decimalPlaces = 5;\nfinal String numberRE = \"^[0-9]+$\";\nmSolo.sendKey(Solo.MENU);\nmSolo.clickOnText(\"Preferences\");\nmSolo.clickOnText(\"Decimal places\");\nassertTrue(mSolo.searchText(numberRE));\nmSolo.clearEditText(DECIMAL_PLACES);\nassertFalse(mSolo.searchText(numberRE));\nmSolo.enterText(DECIMAL_PLACES, Integer.toString(decimalPlaces));\nmSolo.clickOnButton(\"OK\");\nmSolo.goBack();\nmSolo.sendKey(Solo.MENU);\nmSolo.clickOnText(\"Preferences\");\nmSolo.clickOnText(\"Decimal places\");\nassertTrue(mSolo.searchText(numberRE));\nassertEquals(decimalPlaces, Integer.parseInt( mSolo.getEditText(DECIMAL_PLACES). getText().toString()));\n}\n\n```", "```java\nprivate static final int DECIMAL_PLACES = 2;\n\n```", "```java\npackage com.example.aatg.tc.test;\nimport static org.junit.Assert.*;\nimport java.util.HashMap;\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport com.example.aatg.tc.TemperatureConverter;\npublic class TemperatureConverterTests {\nprivate static final HashMap<Double, Double> conversionTableDouble =\nnew HashMap<Double, Double>();\nstatic {\n// initialize (c, f) pairs\nconversionTableDouble.put(0.0, 32.0);\nconversionTableDouble.put(100.0, 212.0);\nconversionTableDouble.put(-1.0, 30.20);\nconversionTableDouble.put(-100.0, -148.0);\nconversionTableDouble.put(32.0, 89.60);\nconversionTableDouble.put(-40.0, -40.0);\nconversionTableDouble.put(-273.0, -459.40);\n}\n\n```", "```java\n@Before\npublic void setUp() throws Exception {\n}\n@After\npublic void tearDown() throws Exception {\n}\n/**\n* Test method for {@link com.example.aatg.tc. TemperatureConverter#fahrenheitToCelsius(double)}.\n*/ @Test\npublic void testFahrenheitToCelsius() {\nfor (double c: conversionTableDouble.keySet()) {\nfinal double f = conversionTableDouble.get(c);\nfinal double ca = TemperatureConverter.fahrenheitToCelsius(f);\nfinal double delta = Math.abs(ca - c);\nfinal String msg = \"\" + f + \"F -> \" + c + \"C but is \" + ca + \" (delta \" + delta + \")\";\nassertTrue(msg, delta < 0.0001);\n}\n}\n/**\n* Test method for {@link com.example.aatg.tc. TemperatureConverter#celsiusToFahrenheit(double)}.\n*/ @Test\npublic void testCelsiusToFahrenheit() {\nfor (double c: conversionTableDouble.keySet()) {\nfinal double f = conversionTableDouble.get(c);\nfinal double fa = TemperatureConverter.celsiusToFahrenheit(c);\nfinal double delta = Math.abs(fa - f);\nfinal String msg = \"\" + c + \"C -> \" + f + \"F but is \" + fa + \" (delta \" + delta + \")\";\nassertTrue(msg, delta < 0.0001);\n}\n}\n\n```", "```java\n @Test\npublic final void testExceptionForLessThanAbsoluteZeroF() {\ntry {\nfinal double c = TemperatureConverter.fahrenheitToCelsius( TemperatureConverter.ABSOLUTE_ZERO_F-1);\nfail(\"Less than absolute zero F not detected\");\n}\ncatch (InvalidTemperatureException ex) {\n// do nothing\n}\n} @Test\npublic final void testExceptionForLessThanAbsoluteZeroC() {\ntry {\nfinal double f = TemperatureConverter.celsiusToFahrenheit( TemperatureConverter.ABSOLUTE_ZERO_C-1);\nfail(\"Less than absolute zero C not detected\");\n}\ncatch (RuntimeException ex) {\n// do nothing\n}\n}\n}\n\n```", "```java\npackage com.example.aatg.tc.test;\nimport static org.junit.Assert.assertNotNull;\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport android.app.Application;\nimport android.content.Intent;\nimport com.example.aatg.tc.TemperatureConverterActivity;\nimport com.example.aatg.tc.TemperatureConverterApplication;\npublic class TemperatureConverterActivityUnitTests { @Before\npublic void setUp() throws Exception {\n} @After\npublic void tearDown() throws Exception {\n} @Test\npublic final void testApplication() {\nApplication application = new TemperatureConverterApplication();\nassertNotNull(application);\n}\n}\n\n```", "```java\npackage com.example.aatg.tc.test;\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertNotNull;\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport com.example.aatg.tc.EditNumber;\nimport com.xtremelabs.robolectric.RobolectricTestRunner; @RunWith(RobolectricTestRunner.class)\npublic class EditNumberTests {\nprivate static final double DELTA = 0.00001d;\nprivate EditNumber mEditNumber;\n\n```", "```java\n@Before\npublic void setUp() throws Exception { mEditNumber = new EditNumber(null);\nmEditNumber.setFocusable(true);\n}\n@After\npublic void tearDown() throws Exception {\n}\n@Test\npublic final void testPreconditions() {\nassertNotNull(mEditNumber);\n}\n/**\n* Test method for {@link com.example.aatg.tc.EditNumber# EditNumber(android.content.Context, AttributeSet attrs, int defStyle)}.\n*/\n@Test\npublic final void testEditNumberContextAttributeSetInt() {\nfinal EditNumber e = new EditNumber(null, null, -1);\nassertNotNull(e);\n}\n\n```", "```java\n/**\n* Test method for {@link com.example.aatg.tc.EditNumber#clear()}.\n*/\n@Test\npublic final void testClear() {\nfinal String value = \"123.45\";\nmEditNumber.setText(value);\nmEditNumber.clear();\nString expectedString = \"\";\nString actualString = mEditNumber.getText().toString();\nassertEquals(expectedString, actualString);\n}\n/**\n* Test method for {@link com.example.aatg.tc.EditNumber# setNumber(double)}.\n*/\n@Test\npublic final void testSetNumber() {\nmEditNumber.setNumber(123.45);\nfinal String expected = \"123.45\";\nfinal String actual = mEditNumber.getText().toString();\nassertEquals(expected, actual);\n}\n/**\n* Test method for {@link com.example.aatg.tc.EditNumber# getNumber()}.\n*/\n@Test\npublic final void testGetNumber() {\nmEditNumber.setNumber(123.45);\nfinal double expected = 123.45;\nfinal double actual = mEditNumber.getNumber(); assertEquals(expected, actual, DELTA);\n}\n}\n\n```", "```java\n$ cd ~/workspace/TemperatureConverterJVMTests\n$ ln -s ../TemperatureConverter/AndroidManifest.xml\n$ ln -s ../TemperatureConverter/res . # note the dot at the end\n\n```"]