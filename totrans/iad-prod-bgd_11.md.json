["```swift\n    UIImageView *imageView;\n\n    ```", "```swift\n    @property(nonatomic, strong) IBOutlet UIImageView *imageView;\n\n    ```", "```swift\n    @synthesize imageView;\n\n    ```", "```swift\n    CGPoint bannerOrigin = CGPointMake(CGRectGetMinX(frame), CGRectGetMaxY(frame));\n    CGPoint fallbackBannerOrigin = CGPointMake(CGRectGetMinX(frame), CGRectGetMaxY(frame));\n\n    ```", "```swift\n    else {\n    fallbackBannerOrigin.y -= imageView.bounds.size.height;\n    }\n\n    ```", "```swift\n    imageView.frame = CGRectMake(imageView.bounds.origin.x, fallbackBannerOrigin.y, imageView.frame.size.width, imageView.frame.size.height);\n\n    ```", "```swift\n    -(void) adjustBannerVisibility\n    {\n    CGRect frame = self.view.bounds;\n    CGPoint bannerOrigin = CGPointMake(CGRectGetMinX(frame), CGRectGetMaxY(frame));\n    CGPoint fallbackBannerOrigin = CGPointMake(CGRectGetMinX(frame), CGRectGetMaxY(frame));\n    // check if the banner is loaded\n    if (bannerView.bannerLoaded) {\n    // bring banner into view\n    bannerOrigin.y -= bannerView.bounds.size.height;\n    }\n    else {\n    fallbackBannerOrigin.y -= imageView.bounds.size.height;\n    }\n    // Animate the frames view\n    [UIView animateWithDuration:2.0f\n    animations:^{\n    bannerView.frame = CGRectMake(bannerView.bounds.origin.x, bannerOrigin.y, bannerView.frame.size.width, bannerView.frame.size.height);\n    imageView.frame = CGRectMake(imageView.bounds.origin.x, fallbackBannerOrigin.y, imageView.frame.size.width, imageView.frame.size.height);\n    }];\n    }\n\n    ```"]