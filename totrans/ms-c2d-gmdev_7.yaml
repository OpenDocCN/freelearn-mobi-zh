- en: Chapter 7. Reaching Our Destination
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章. 达成目标
- en: 'This chapter will be pretty light compared to the last few, as this game is
    ready to be finalized for release by now. We''ll be going over some steps of finalization
    within the project, as well as stuff to do within iTunes Connect before you submit
    the game to be reviewed by Apple. Specifically, we''ll cover the following topics
    in this relatively short chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 与前几章相比，本章内容将相对较少，因为这款游戏现在已经准备好发布。我们将讨论项目中的最终化步骤，以及在你将游戏提交给苹果审核之前在iTunes Connect中需要做的事情。具体来说，我们将在本章相对简短的篇幅中涵盖以下主题：
- en: Adding a default image
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加默认图像
- en: Icons
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图标
- en: Analytics
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析
- en: Preparing the App on iTunes Connect
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在iTunes Connect上准备应用
- en: Releasing the game and steps after it
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布游戏及其后续步骤
- en: For this chapter, we'll be using the `Chapter 7` project, as it has some bug
    fixes as well as some other polish elements added. It's recommended that you open
    this project before continuing.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，我们将使用`Chapter 7`项目，因为它包含一些错误修复以及一些其他润色元素。建议你在继续之前打开此项目。
- en: Tip
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: At the time of writing this book, Cocos2d version 3.4 does not support native
    iPhone 6 or 6 Plus. So unfortunately, the art will look blurry as Apple scales
    up the iPhone 5 screen to match the iPhone 6 or 6 Plus resolutions. If you're
    determined to make native resolutions work, you can refer to a thread at [http://forum.cocos2d-swift.org/t/iphone-6-ios-resolutions-and-assets/15062/68](http://forum.cocos2d-swift.org/t/iphone-6-ios-resolutions-and-assets/15062/68).
    It describes using the iPad Retina version 6 assets when running version 6 Plus,
    and the iPhone Retina assets when running.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，Cocos2d版本3.4不支持原生iPhone 6或6 Plus。因此，不幸的是，当苹果将iPhone 5屏幕放大以匹配iPhone 6或6
    Plus的分辨率时，艺术作品将看起来有些模糊。如果你决心让原生分辨率工作，你可以参考[http://forum.cocos2d-swift.org/t/iphone-6-ios-resolutions-and-assets/15062/68](http://forum.cocos2d-swift.org/t/iphone-6-ios-resolutions-and-assets/15062/68)上的一个帖子。它描述了在运行6
    Plus版本时使用iPad Retina版本6的资产，在运行时使用iPhone Retina资产。
- en: Adding a default image
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加默认图像
- en: Now, we only need to create the launch images for every iPad and every pre-6
    iPhone. Also, we're going to do a sort of hackish workaround that will make the
    iPhone 6 or 6 Plus graphics slightly better (though still not native), while at
    the same time making the iPhone 5 look better and worse at the same time (depending
    on how you look at it).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们只需要为每一款iPad和每一款预6代iPhone创建启动图像。此外，我们还将进行一种类似黑客式的解决方案，这将使iPhone 6或6 Plus的图形略好一些（尽管仍然不是原生），同时使iPhone
    5的外观在某种程度上同时变得更好和更差（取决于你如何看待它）。
- en: First, in the `Icon` folder of the project, delete the existing `Default` images,
    moving them to the trash rather than just removing the references.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在项目的`Icon`文件夹中，删除现有的`Default`图像，将它们移动到回收站而不是仅仅删除引用。
- en: There should be a folder called `Default Images` included in the project files,
    where you'll have each of the files needed for the project. Drag these files into
    the Xcode project (making sure you have the **Copy** checkbox checked).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 项目文件中应包含一个名为`Default Images`的文件夹，其中包含项目所需的每个文件。将这些文件拖入Xcode项目（确保勾选了**复制**复选框）。
- en: Because we don't have many devices that need native default images, we're just
    going to skip asset catalogs for now. If you want to use them, you can, but it's
    not required (nor is there any real benefit) when you have the default images
    properly named, as we have here.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们没有许多需要原生默认图像的设备，我们现在将跳过资产目录。如果你想使用它们，当然可以，但当你有正确命名的默认图像，就像我们这里一样，这不是必需的（也没有任何真正的益处）。
- en: Adding the loading screen
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加加载屏幕
- en: Although the default images are the first thing the user will see, we still
    want a smooth transition from the initial image to our game, instead of it just
    suddenly changing. So, we're going to create a transition scene just for the purpose
    of sliding the game view into position.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然默认图像是用户首先看到的，但我们仍然希望从初始图像到我们的游戏有一个平滑的过渡，而不是它突然改变。因此，我们将创建一个仅用于将游戏视图滑入位置的过渡场景。
- en: First, create a new class—a subclass of `CCScene`—and call it `LoadingScene`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个新的类——一个`CCScene`的子类——并将其命名为`LoadingScene`。
- en: 'Then, add the `scene` method to the `LoadingScene.h` file:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将`scene`方法添加到`LoadingScene.h`文件中：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, replace your `LoadingScene.m` file with the following code:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，用以下代码替换你的`LoadingScene.m`文件：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Understand that we want to transition to `MainScene`, so we have to import it.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 理解我们想要过渡到`MainScene`，因此我们必须导入它。
- en: Also notice the `CCProgressNode` object. This will be a ring that will simulate
    loading. Since our game loads relatively fast without the need for a true loading
    bar or other sort of progress measurement, we don't want our users getting confused
    when they see the same image for a few seconds on end. So, we add a `CCProgressNode`
    object that lets them know "Hey, something's happening!"
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意`CCProgressNode`对象。这将是一个模拟加载的环形。由于我们的游戏加载相对较快，无需真正的加载条或其他类型的进度测量，我们不希望用户在连续几秒钟看到相同的图像时感到困惑。因此，我们添加了一个`CCProgressNode`对象，让他们知道“嘿，有事情发生了！”
- en: It's fairly self-explanatory when you look at the code. The midpoint is essentially
    like the anchor point on other `CCNode` objects. If you want a bar instead of
    a circle, just change the type. Everything else should be the same.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当您查看代码时，这相当直观。中点本质上就像其他`CCNode`对象上的锚点。如果您想要一个条形而不是圆形，只需更改类型。其他所有内容都应该保持不变。
- en: Switching to LoadingScene from MainScene
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从主场景切换到加载场景
- en: 'Finally, to make it all happen, we just need to add the import statement for
    `LoadingScene.h` to the `AppDelegate.m` file:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了让这一切发生，我们只需要将`LoadingScene.h`的导入语句添加到`AppDelegate.m`文件中：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, at the bottom of your `startScene` method, look for the following line:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在您的`startScene`方法底部，查找以下行：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Replace it with this new line of code that will go into the `LoadingScene`
    object we just created:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 用以下新代码替换它，这将进入我们刚刚创建的`LoadingScene`对象：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If you run the game at this point, you'll see the initial default image load,
    then after a second or two the progress ring will appear, and finally, the loading
    screen will go up and off screen, and drag the `MainScene` along with it.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您此时运行游戏，您将看到初始默认图像加载，然后在一两秒后进度环出现，最后，加载屏幕将消失并拖动`MainScene`一起消失。
- en: Now that we have handled our initial launch, let's set up the icons.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经处理了初始启动，让我们设置图标。
- en: Icons
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图标
- en: The default icon that SpriteBuilder provided us was convenient for testing but
    it's time we set ourselves apart and create our own icon.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: SpriteBuilder为我们提供的默认图标方便了测试，但现在是时候让我们与众不同，创建我们自己的图标。
- en: Tip
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: To use the template we'll be talking about in the next section, you'll need
    Photoshop. If you have a design team, you likely have it somewhere. If you don't
    have Photoshop, you can get a free trial version from its website.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用下一节中将要讨论的模板，您需要Photoshop。如果您有设计团队，您可能已经拥有它。如果您没有Photoshop，您可以从其网站获取免费试用版。
- en: Template
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模板
- en: There are about 10 to 15 different app icon sizes, depending on which devices
    you plan to support and which iOS versions you're supporting. It would be a pain
    to manually update all of these sizes if you change your icon. Thankfully, it's
    easier than ever to create the required app icon sizes with a template that was
    created by Michael Flarup.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您计划支持的设备和iOS版本，大约有10到15种不同的应用程序图标大小。如果您更改图标，手动更新所有这些大小将是一件痛苦的事情。幸运的是，使用由Michael
    Flarup创建的模板创建所需的图标大小比以往任何时候都要容易。
- en: You can download the template from [www.appicontemplate.com](http://www.appicontemplate.com).
    Once it is downloaded, you can open it from Photoshop and begin using it. Once
    you're ready, you just have to run the action included in the download and it
    will generate the files for you.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.appicontemplate.com](http://www.appicontemplate.com)下载模板。下载完成后，您可以从Photoshop中打开它并开始使用。准备好后，只需运行下载中包含的动作，它就会为您生成文件。
- en: There's also a very good video on how to use the template, so in the spirit
    of not repeating things twice, the how-to won't be shown here.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 还有关于如何使用模板的非常好的视频，所以本着不重复的原则，这里不会展示如何使用。
- en: Adding the icons to the project
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将图标添加到项目中
- en: First, we want to get rid of the old icons, as we don't want any interference
    or accidental appearance on someone's device. So just delete the old icons.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们希望移除旧图标，因为我们不希望有任何干扰或意外出现在某人的设备上。所以只需删除旧图标。
- en: 'Once you have your new icons created (or if you wish to use the icons included
    in this project), simply drag the files into Xcode, making sure that the **Copy**
    checkbox is checked. This is also shown in the following screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您创建了新的图标（或者如果您希望使用本项目包含的图标），只需将文件拖入Xcode中，确保勾选**复制**复选框。这也在下面的屏幕截图中有展示：
- en: '![Adding the icons to the project](img/image00284.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![将图标添加到项目中](img/image00284.jpeg)'
- en: Right now, the project isn't going to use the new icons, so we need to assign
    the icon file to be used for each size with asset catalogs.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，项目不会使用新的图标，因此我们需要为每个尺寸分配用于资产目录的图标文件。
- en: Asset catalog
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资产目录
- en: We're going to use an asset catalog for our icons. Ideally, we should use them
    for our launch images as well, but since we're not supporting any crazy device
    sizes or orientations, it's just not necessary at the moment.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用资产目录来存储我们的图标。理想情况下，我们也应该将它们用于启动图像，但由于我们目前不支持任何疯狂的设备尺寸或方向，所以目前并不必要。
- en: With icons, however, it's just a lot easier to create the asset catalog, then
    drag and drop your icons into the appropriate place based on which iOS versions
    you wish to support.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，对于图标来说，创建资产目录然后根据你希望支持的iOS版本将图标拖放到适当的位置要容易得多。
- en: So first, you need to create the asset catalog in Xcode by going to the project's
    general settings and clicking on the **Use Asset Catalog** button.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，首先，你需要通过访问项目的常规设置并点击**使用资产目录**按钮在Xcode中创建资产目录。
- en: 'If the asset catalog already exists, simply click on the arrow to the right
    of the drop-down box to navigate to that asset catalog. This is also shown in
    the following screenshot for your reference:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果资产目录已经存在，只需点击下拉框右侧的箭头导航到该资产目录。以下截图也展示了这一过程供您参考：
- en: '![Asset catalog](img/image00285.jpeg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![资产目录](img/image00285.jpeg)'
- en: Then, with the catalog created, simply drag the images into the appropriate
    place based on what dimensions they need to be. The following screenshot is a
    rough representation of what they should be, but make sure you drag the correct
    images, or else Xcode will throw a warning that you're giving it an incorrectly
    sized image. Thankfully, the template we use gives us a good name for our images,
    so we can quickly see which icon is of what size.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在创建完目录后，只需根据它们所需的尺寸将图片拖放到适当的位置。以下截图是它们应该是什么样子的粗略表示，但请确保拖动正确的图片，否则Xcode会发出警告，指出你提供了错误尺寸的图片。幸运的是，我们使用的模板为我们提供了良好的图片名称，因此我们可以快速查看哪个图标是什么尺寸的。
- en: '![Asset catalog](img/image00286.jpeg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![资产目录](img/image00286.jpeg)'
- en: Notice that we aren't supporting **iOS 6.1 and prior** sizes. Although you may
    think it's just a couple of icon sizes, if you're truly willing to support iOS
    6 and older versions, you must run your app on a device running an older device
    to make sure that nothing crashes.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们不支持**iOS 6.1及以下**的尺寸。虽然你可能认为这只是几个图标尺寸的问题，但如果你真正愿意支持iOS 6和更早的版本，你必须在一个运行旧设备的设备上运行你的应用，以确保没有任何崩溃。
- en: Anyway, once you've added your images to the asset catalog, clean up the project,
    and rerun it. You'll see the **Update** icon as expected. That's it!
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，一旦你将图片添加到资产目录中，清理项目并重新运行。你会看到预期的**更新**图标。就这样了！
- en: Analytics and user data
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析和用户数据
- en: One final thing to do before we submit our app is to set up some quick analytics
    tools to determine the way our users play our game. We're going to use an API
    called **Flurry**. If you haven't heard of it before or you have but never used
    it, it's fine, as the following section will take you through the setup process.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们提交应用之前，还有一件最后的事情要做，那就是设置一些快速分析工具来确定用户如何玩游戏。我们将使用一个名为**Flurry**的API。如果你之前没有听说过它，或者听说过但从未使用过，没关系，接下来的部分将带你完成设置过程。
- en: 'Flurry is nice for three main reasons:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Flurry有三大优点：
- en: Simplicity in setting up and using
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置和使用简单
- en: Detailed analytics available
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可用的详细分析
- en: It's free! Who can argue with that?
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是免费的！谁会反对呢？
- en: So let's go for it, starting with the signup process.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 那我们就开始吧，从注册过程开始。
- en: Signing up for Flurry
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 注册Flurry
- en: Go to [http://www.flurry.com/](http://www.flurry.com/), and in the top-right
    corner, click on **Sign Up**. Fill in the information it asks for, and then click
    on **Sign Up**.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 前往[http://www.flurry.com/](http://www.flurry.com/)，然后在右上角点击**注册**。填写所需信息，然后点击**注册**。
- en: After that, it'll ask you which platform you wish to track analytics for. Here,
    since we're making an app for iPhone and iPad (a universal app for iOS), we'll
    select iPhone. If the app were only available on iPad, you would have selected
    the iPad version.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，它会询问你希望跟踪哪个平台的分析。在这里，因为我们正在为iPhone和iPad（iOS的通用应用）制作应用，我们将选择iPhone。如果应用仅在iPad上可用，你将选择iPad版本。
- en: We then add the name of the app and choose which category the app falls under.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接着添加应用的名称，并选择应用所属的类别。
- en: Once that's ready, click on **Create App** at the bottom, and Flurry will ask
    you to verify your e-mail. Once you click on the link in your e-mail (or copy
    the code that they send and paste it in the verification box they provide), you'll
    be directed to a screen letting you know that the process was a success. Then
    you should be given an API key.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 准备就绪后，单击底部的 **创建应用**，Flurry 将要求您验证您的电子邮件。一旦您点击电子邮件中的链接（或复制他们发送的代码并将其粘贴到他们提供的验证框中），您将被引导到一个屏幕，告知您过程已成功。然后您应该会得到一个
    API 密钥。
- en: Tip
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Remember to either copy this API key somewhere or leave the web page open, as
    we'll need this later when we actually begin our session tracking.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住将此 API 密钥复制到某个地方或保持网页打开，因为我们稍后开始会话跟踪时需要它。
- en: After the successful setup, you should see a link to download the SDK. Download
    the SDK (ZIP file), and wait until it finishes. It may take a minute or so.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功设置后，您应该会看到一个下载 SDK 的链接。下载 SDK（ZIP 文件），并等待其完成。这可能需要一两分钟。
- en: '![Signing up for Flurry](img/image00287.jpeg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![注册 Flurry](img/image00287.jpeg)'
- en: Once the SDK is downloaded and unzipped, we're ready to add Flurry to our project.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 SDK 下载并解压，我们就可以将 Flurry 添加到我们的项目中。
- en: Adding Flurry to your project
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 Flurry 添加到您的项目中
- en: Since the Flurry API should be included with all the other libraries, in the
    downloaded SDK, you should see a `Flurry` folder. Drag that entire folder into
    the `libs` folder of Xcode (making sure that the copy checkbox is checked).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Flurry API 应该与所有其他库一起包含，在下载的 SDK 中，你应该会看到一个 `Flurry` 文件夹。将整个文件夹拖到 Xcode 的
    `libs` 文件夹中（确保勾选了复制复选框）。
- en: '![Adding Flurry to your project](img/image00288.jpeg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![将 Flurry 添加到您的项目中](img/image00288.jpeg)'
- en: Then, we'll want to make sure that the proper frameworks are included in our
    project so that Flurry can do its things properly. So, in the **Build Phases**
    of our project, we're going to add a few frameworks. Simply click on the **+**
    button under the **Link Binary with Libraries** section.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要确保我们的项目中包含适当的框架，以便 Flurry 正确地执行其功能。因此，在我们的项目 **构建阶段** 中，我们将添加一些框架。只需在
    **链接二进制与库** 部分的 **+** 按钮下单击即可。
- en: '![Adding Flurry to your project](img/image00289.jpeg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![将 Flurry 添加到您的项目中](img/image00289.jpeg)'
- en: 'Then search for and add the following frameworks:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，搜索并添加以下框架：
- en: '`Security.framework`'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Security.framework`'
- en: '`SystemConfiguration.framework`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SystemConfiguration.framework`'
- en: '`CFNetwork.framework`'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CFNetwork.framework`'
- en: 'Finally, the library has been included in our project, and we can import the
    Flurry header to our `AppDelegate.m` file, and start our tracking session in the
    `application:didFinishLaunchingWithOptions` method:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，库已经被包含到我们的项目中，我们可以在 `AppDelegate.m` 文件中导入 Flurry 头文件，并在 `application:didFinishLaunchingWithOptions`
    方法中开始跟踪会话：
- en: '[PRE5]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note that the `API_KEY_HERE` string should be your actual API key from when
    the app was first created, so feel free to copy that at this point.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`API_KEY_HERE` 字符串应该是您在首次创建应用时获取的实际 API 密钥，因此现在您可以随意复制它。
- en: There's also debugging information for you when you're first starting out (or
    any time, really). Ideally, you should disable this on release, but for now, it's
    helpful to see what's happening when testing.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 当您刚开始（或实际上任何时候）进行调试时，您也会有一些调试信息。理想情况下，您应该在发布时禁用这些信息，但现在，在测试时查看正在发生的事情是有帮助的。
- en: Logging events
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 记录事件
- en: Events are the bread and butter of Flurry. They're essentially a limitless way
    of tracking your own custom events. Instead of keeping predefined functions or
    events, you have to simply pass the event name (simply a string) that you wish
    to track, and Flurry handles the rest for you.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 事件是 Flurry 的核心。它们基本上是一种无限的方式来跟踪您自己的自定义事件。您不需要保留预定义的函数或事件，只需简单地传递您希望跟踪的事件名称（只是一个字符串），Flurry
    会为您处理其余部分。
- en: As an example, let's say we want to track how many times our users start the
    game. Since we often visit the `MainScene`, we don't want a false positive being
    tracked. That being said, let's log the event only when they move a unit (but
    only on the first move, when `numTurnsSurvived` is equal to `1`).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们想跟踪用户启动游戏多少次。由于我们经常访问 `MainScene`，我们不希望跟踪到错误的信息。因此，只有在他们移动一个单位时（但仅当 `numTurnsSurvived`
    等于 `1` 时）才记录事件。
- en: 'Open `MainScene.m`, and in the `moveUnit` function, add the following code
    to the top of the method that will log the `started_game` event for the current
    session:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 `MainScene.m` 文件，在 `moveUnit` 函数中，将以下代码添加到方法顶部，该方法将记录当前会话的 `started_game`
    事件：
- en: '[PRE6]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Another example might be when a user finishes the tutorial. So in `MainScene.m`,
    in our `advanceTutorial` method, let''s add an event for the case of our users
    finishing the tutorial:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子可能是当用户完成教程时。所以，在`MainScene.m`中，在我们的`advanceTutorial`方法中，让我们为用户完成教程的情况添加一个事件：
- en: '[PRE7]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: And it's that easy to add event tracking! You can have an unlimited amount of
    differently named events, up to 300 unique events can be tracked per session (so
    make use of as many as you can that are relevant to your app/game), and there's
    no limit to how many times a given event can be tracked.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 添加事件跟踪竟然这么简单！你可以拥有无限数量的不同名称的事件，每个会话最多可以跟踪300个独特的事件（所以请尽可能多地使用与你的应用/游戏相关的），并且对特定事件跟踪的次数没有限制。
- en: Tip
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: There's also event logging with parameters, such as whether the user is registered
    or not, what device they're using, whether they're using a specific setting or
    not, and so on. Any string can be a parameter. You can read more about parameters
    within the Flurry API at [https://developer.yahoo.com/flurry/docs/analytics/gettingstarted/events/ios/](https://developer.yahoo.com/flurry/docs/analytics/gettingstarted/events/ios/).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有带有参数的事件记录，例如用户是否注册，他们使用的是哪种设备，他们是否使用了特定的设置，等等。任何字符串都可以作为参数。你可以在Flurry API中了解更多关于参数的信息，请参阅[https://developer.yahoo.com/flurry/docs/analytics/gettingstarted/events/ios/](https://developer.yahoo.com/flurry/docs/analytics/gettingstarted/events/ios/)。
- en: Flurry will automatically submit any session data when you're done using the
    app. Although that sounds rather ambiguous, it essentially sends data when the
    **Home** button is pressed.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成使用应用时，Flurry会自动提交任何会话数据。虽然这听起来有些含糊不清，但本质上是在按下**主页**按钮时发送数据。
- en: That being said, if you're testing it, make sure your events are being logged
    correctly by Flurry using Xcode, and do not hit the **Stop** button before hitting
    the **Home** button on your device (or the simulator). The data may never be sent
    and you might spend hours or even days wondering why nothing seems to be working,
    when you actually never gave Flurry a chance to send the information.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，如果你正在测试，请确保Flurry使用Xcode正确记录了你的事件，并且在按下设备上的**主页**按钮（或模拟器）之前不要点击**停止**按钮。数据可能永远不会发送，你可能会花费数小时甚至数天
    wondering why nothing seems to be working, when you actually never gave Flurry
    a chance to send the information.
- en: Now that we have our events being logged and sent to the Flurry servers, let's
    actually track and analyze our data.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的事件已经被记录并发送到Flurry服务器，让我们实际跟踪和分析我们的数据。
- en: Tracking and visualizing the data
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跟踪和可视化数据
- en: 'Thankfully, Flurry doesn''t just grab our raw data, but actually creates useful
    analytics for us, so we don''t have to do any analytics on the data ourselves.
    If you want to see, for example, how many people start a game every day, or how
    many people complete a game by surviving for more than 20 turns, you can easily
    see such data on their website. Here is a screenshot of what Flurry might look
    like after a few weeks of use:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，Flurry不仅抓取我们的原始数据，而且还为我们创建了有用的分析，所以我们不需要自己进行数据分析。例如，如果你想查看每天有多少人开始玩游戏，或者有多少人通过存活超过20回合来完成游戏，你可以在他们的网站上轻松查看此类数据。以下是使用Flurry几周后的截图：![Tracking
    and visualizing the data](img/image00290.jpeg)
- en: '![Tracking and visualizing the data](img/image00290.jpeg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![Tracking and visualizing the data](img/image00290.jpeg)'
- en: Note that it takes approximately 15 to 45 minutes for an event to appear in
    your Flurry event dashboard (not the data, but the event name). If, after a few
    hours, you're still not seeing the event listed in your dashboard, try again,
    but make sure you properly exit the app this time. This means pressing the **Home**
    button before stopping the app in Xcode so that Flurry can detect that event and
    send the data.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，事件出现在你的Flurry事件仪表板（不是数据，而是事件名称）上大约需要15到45分钟。如果在几小时后你仍然没有在仪表板中看到事件列表，请再次尝试，但这次请确保你正确地退出了应用。这意味着在Xcode中停止应用之前先按下**主页**按钮，以便Flurry可以检测到该事件并发送数据。
- en: Also, Flurry isn't displayed in real time, so any actual data that gets sent
    to them is processed, and it may not appear for at least 24 hours. When testing,
    if you find yourself wondering where the data is, just wait for a day or two.
    Then it should start showing up. If it doesn't, make sure you're seeing the proper
    debug log messages in Xcode.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Flurry不会实时显示，所以发送给他们的任何实际数据都会被处理，并且至少需要24小时才能显示。在测试时，如果你发现自己想知道数据在哪里，只需等待一两天。然后它应该开始显示。如果它没有显示，请确保你在Xcode中看到了正确的调试日志消息。
- en: Tip
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you ever get lost using Flurry, want further explanation, or just want to
    know more about the advanced features of Flurry, you can look at their *Get Started*
    guide on their website at [https://developer.yahoo.com/flurry/#get-started](https://developer.yahoo.com/flurry/#get-started).
    It's fairly comprehensive.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在使用Flurry时迷路了，需要进一步解释，或者只是想了解更多关于Flurry高级功能的信息，你可以在他们的网站上查看*入门*指南，网址为[https://developer.yahoo.com/flurry/#get-started](https://developer.yahoo.com/flurry/#get-started)。它相当全面。
- en: If you're interested in alternatives to Flurry, you can look into iOS Analytics
    by doing a quick search, as well as by checking out [http://www.apptamin.com/blog/app-analytics-tools/](http://www.apptamin.com/blog/app-analytics-tools/),
    which shows (and covers in detail) various other analytics tools.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你感兴趣的是Flurry的替代品，你可以通过快速搜索iOS Analytics，以及查看[http://www.apptamin.com/blog/app-analytics-tools/](http://www.apptamin.com/blog/app-analytics-tools/)来了解，它展示了（并详细介绍了）各种其他分析工具。
- en: Preparing the app on iTunes Connect
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在iTunes Connect上准备应用
- en: Now that we have everything ready, let's go ahead and get iTunes Connect ([https://itunesconnect.apple.com](https://itunesconnect.apple.com))
    ready so that we can submit this game to be reviewed by Apple. This section assumes
    you already have a developer account and an app in iTunes Connect.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好了所有东西，让我们继续准备iTunes Connect ([https://itunesconnect.apple.com](https://itunesconnect.apple.com))，以便我们可以提交这个游戏供苹果审核。本节假设你已经有一个开发者账号并且在iTunes
    Connect中有一个应用。
- en: Tip
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you don't have a developer account, this is a good time to get it. If you're
    don't know how to get it, read [Chapter 1](part0014.xhtml "Chapter 1. Refreshing
    Your Cocos2d Knowledge"), *Refreshing Our Cocos2d Knowledge*. If you do have a
    developer account, but haven't created the App in iTunes Connect yet, go back
    to the *Game Center* section of [Chapter 6](part0049.xhtml "Chapter 6. Tidying
    Up and Polishing"), *Tidying Up and Polishing*. There, you will see the step-by-step
    way to create an app in iTunes Connect. Once you've done that, you'll be ready
    to continue from here.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有开发者账号，现在是获取账号的好时机。如果你不知道如何获取，请阅读[第1章](part0014.xhtml "第1章. 刷新你的Cocos2d知识")，*刷新我们的Cocos2d知识*。如果你已经有了开发者账号，但还没有在iTunes
    Connect中创建应用，请回到[第6章](part0049.xhtml "第6章. 整理和润色")的*游戏中心*部分，*整理和润色*。在那里，你会看到在iTunes
    Connect中创建应用的逐步方法。一旦完成，你就可以从这里继续了。
- en: For the most part, iTunes Connect is fairly self-explanatory. However, we'll
    quickly see what each section is and what you need to enter.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大部分内容，iTunes Connect是相当直观的。然而，我们将快速了解每个部分的内容以及你需要输入的信息。
- en: '![Preparing the app on iTunes Connect](img/image00291.jpeg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![在iTunes Connect上准备应用](img/image00291.jpeg)'
- en: When you open your app in iTunes Connect, you'll see many sections at the top,
    as well as a section for the screenshots and the video preview. It's required
    that you include screenshots for every device you support. Since we're going to
    support all devices, it's best to add screenshots (and maybe a quick 30-second
    video) for each device.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在iTunes Connect中打开你的应用时，你会在顶部看到许多部分，以及截图和视频预览的部分。必须为每个你支持的平台包含截图。由于我们将支持所有设备，因此最好为每个设备添加截图（也许还可以添加一个简短的30秒视频）。
- en: Ideally, you should take your own screenshots for each device, which is why
    none are included in the project's files (maximum five screenshots per device
    can be added).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，你应该为每个设备拍摄自己的截图，这就是为什么项目文件中没有包含截图（每个设备最多可以添加五个截图）。
- en: '![Preparing the app on iTunes Connect](img/image00292.jpeg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![在iTunes Connect上准备应用](img/image00292.jpeg)'
- en: Below the screenshots, you'll see the app's display name in the App Store, a
    description (4,000-character limit) of the app that will be visible in the App
    Store, keywords that people can enter in order to find your app/game on the App
    Store, and a link to your website for users who want to learn more about you.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在截图下方，你会看到App Store中的应用显示名称，一个描述（4000字符限制）的应用描述，用户可以在App Store中输入以找到你的应用/游戏，以及一个链接到你的网站，供想要了解更多关于你的用户访问。
- en: 'The keywords are comma delimited, and have a maximum of 100 characters. So,
    for example, the following are a few terms that could be used to describe this
    game. This string is 28 characters long:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 关键词以逗号分隔，且最多100个字符。例如，以下是一些可以用来描述这个游戏的术语。这个字符串长度为28个字符：
- en: '`cube,square,grid,number,math`'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`cube,square,grid,number,math`'
- en: If you need help determining the length of your keywords, you can just search
    for a string length counter, and generally, any one will do the job.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要帮助确定关键词的长度，你只需搜索字符串长度计数器，通常任何一个都可以完成这项工作。
- en: '![Preparing the app on iTunes Connect](img/image00293.jpeg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![在iTunes Connect上准备应用](img/image00293.jpeg)'
- en: Next is the App's icon (this has to be 1024 x 1024, and in PNG or JPG format)—which
    will be displayed throughout the App Store—the version number, the categories
    it will appear under, and so on. An example of copyright information could be
    KeitGames 2015 (just imagine a little copyright symbol next to it when filling
    this part).
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是应用的图标（这必须是1024 x 1024像素，并且是PNG或JPG格式），它将在整个App Store中显示——版本号、它将出现在哪些类别下等等。版权信息的例子可以是KeitGames
    2015（想象一下在填写这部分时旁边有一个版权符号）。
- en: One thing to note is the **Ratings** section. Here, although it's subtle, you
    must click on the **Edit** button to go through the process of self-rating your
    app to determine what minimum age group the app is appropriate for. In our case,
    it's going to end up being 4+.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的一点是**评分**部分。在这里，尽管它很微妙，但你必须点击**编辑**按钮，通过自我评分的过程来确定应用适合的最小年龄组。在我们的案例中，它将是4+。
- en: Also, after you submit a build to iTunes, it will go through a processing phase
    that lasts a few minutes. After that, in the **Builds** section, you can select
    which build you want to submit for the particular version of the app.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在你提交构建到iTunes后，它将进入一个持续几分钟的处理阶段。之后，在**构建**部分，你可以选择你想要提交给应用特定版本的构建。
- en: '![Preparing the app on iTunes Connect](img/image00294.jpeg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![在iTunes Connect上准备应用](img/image00294.jpeg)'
- en: Next, we have the Game Center section. This is separate from the **Game Center**
    tab at the top of the screen because, even though you may have a working leaderboard
    set up and working within your test build, unless you enable **Game Center** here
    and select which leaderboard you want to add, it won't show up on the released
    version.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是游戏中心部分。这部分与屏幕顶部的**游戏中心**标签页是分开的，因为尽管你可能已经设置了一个正常工作的排行榜并在测试构建中工作，除非你在这里启用**游戏中心**并选择你想要添加的排行榜，否则它不会出现在发布版本中。
- en: You can also provide a demo account if your app or game requires a login for
    it to work, as well as submit any notes you may have for the person reviewing
    your app.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的应用或游戏需要登录才能工作，你也可以提供演示账户，以及提交你可能有的任何关于审查你应用的笔记。
- en: Finally, If we select **Automatically release this version**, then whenever
    the app is approved by Apple, it will immediately begin processing for the App
    Store. It will then show up that day or the next (or whatever date in the future
    you have set in the **Pricing** section at the top). Suppose you choose **Manually
    release this version**. Then even if the app is approved by Apple, it will not
    begin processing (and thus will not be available for download, even after the
    set release date) until you click on **Release This Version**.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果我们选择**自动发布此版本**，那么每当应用被苹果公司批准时，它将立即开始为App Store处理。它将在当天或第二天（或你设置在顶部**定价**部分中的任何未来日期）显示。假设你选择**手动发布此版本**。那么即使应用被苹果公司批准，它也不会开始处理（因此即使在设定的发布日期之后，也无法下载），直到你点击**发布此版本**。
- en: With all of the relevant information filled out, we can actually go through
    the process of creating a build and submitting it to Apple.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在填写了所有相关信息后，我们实际上可以开始创建构建并将其提交给苹果公司。
- en: Releasing the game and steps after it
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布游戏及其后续步骤
- en: This is the part when the excitement really builds, and you say to yourself
    "It's time."
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是真正的兴奋时刻，你会对自己说“是时候了。”
- en: But seriously, it's an exciting moment when your game is finally ready for release
    and you're sending it to be reviewed by Apple with the plan that it gets into
    the hands of possibly millions of people.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 但说真的，当你的游戏终于准备好发布，你将其发送给苹果公司进行审查，并计划让可能数百万的人接触到它时，这是一个激动人心的时刻。
- en: The first thing to do when releasing a game is to create an archived file of
    your app that you can upload to the Apple servers. To do this, simply go to **Product**
    | **Archive** (if it's grayed out, change your device type from one of the simulators
    to a device, even if you don't have a device plugged in).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 发布游戏的第一件事是创建一个可以上传到苹果服务器的应用归档文件。为此，只需转到**产品** | **归档**（如果变灰，请将设备类型从模拟器更改为设备，即使你没有连接设备）。
- en: 'After the archiving is complete, a screen that looks like what is shown in
    the following screenshot will open (if it doesn''t, you can go to **Window** |
    **Organizer**):'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 归档完成后，将打开一个类似于以下截图所示的屏幕（如果未打开，你可以转到**窗口** | **组织者**）：
- en: '![Releasing the game and steps after it](img/image00295.jpeg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![发布游戏及其后续步骤](img/image00295.jpeg)'
- en: From here, click on **Export**. Choose **Save for iOS App Deployment** and click
    on **Next**.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，点击 **导出**。选择 **保存为iOS应用部署** 并点击 **下一步**。
- en: 'Log in if you aren''t logged in already, and it will take you to a screen that
    looks something like this:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未登录，请登录，然后它会带您到一个类似这样的屏幕：
- en: Tip
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If it says it can't find an app with a matching bundle ID, just click on **Try
    Again**. It should find it the second time.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它说找不到与捆绑ID匹配的应用，只需点击 **重试**。第二次应该能找到它。
- en: '![Releasing the game and steps after it](img/image00296.jpeg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![发布游戏及其后续步骤](img/image00296.jpeg)'
- en: Click on **Export**, and then save it somewhere you can find later (such as
    the Desktop).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **导出**，然后将其保存到您可以稍后找到的地方（例如桌面）。
- en: Now open the **Application Loader** by going to **Xcode** | **Open Developer
    Tool** | **Application Loader**. Sign in and choose **Deliver Your App**.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 现在通过前往 **Xcode** | **打开开发者工具** | **应用加载器** 来打开 **应用加载器**。登录并选择 **交付您的应用**。
- en: '![Releasing the game and steps after it](img/image00297.jpeg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![发布游戏及其后续步骤](img/image00297.jpeg)'
- en: 'Now navigate to wherever you exported your IPA file, and open it. It will read
    the data, and the screen looks something like this:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，导航到您导出的IPA文件所在的任何位置，并打开它。它将读取数据，屏幕看起来类似于这样：
- en: '![Releasing the game and steps after it](img/image00298.jpeg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![发布游戏及其后续步骤](img/image00298.jpeg)'
- en: When you click on **Next**, it will go through the process of verifying that
    all your icons are added properly and the default images exist, and anything else
    ensuring the app matches up with the information you provided.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 当您点击 **下一步** 时，它将验证所有图标是否已正确添加，默认图像是否存在，以及确保应用与您提供的信息相匹配的其他任何内容。
- en: If there are any errors, warnings, or issues that come up, chances are high
    that you're not the only person facing that issue. A quick Google search never
    hurt anyone.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出现任何错误、警告或问题，您可能不是唯一遇到该问题的人。快速进行谷歌搜索从未伤害过任何人。
- en: Once the verification process is done, it will upload the app to Apple's servers.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成验证过程，它将把应用上传到苹果的服务器。
- en: Tip
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Note that this does not mean the app is "submitted" for review. It's just uploaded
    so that you can select it from iTunes Connect when you're ready. Even if it says
    something about being e-mailed when it's in review, that's not true (which is
    odd).
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这并不意味着应用已经“提交”以供审查。它只是上传了，以便您在准备好时可以从iTunes Connect中选择它。即使它说在审查时会被电子邮件通知，这也是不正确的（这很奇怪）。
- en: Now head back to iTunes Connect after waiting a few minutes, and you should
    see a **+** button next to the **Builds** section. When you click on it, you should
    be able to select the recently uploaded build.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 等待几分钟之后，现在返回到iTunes Connect，您应该在 **构建** 部分旁边看到一个 **+** 按钮。当您点击它时，您应该能够选择最近上传的构建。
- en: '![Releasing the game and steps after it](img/image00299.jpeg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![发布游戏及其后续步骤](img/image00299.jpeg)'
- en: Click on **Save** at the top. Then click on **Submit for Review**. Then complete
    the required questionnaire about what your app includes (in our case, none of
    them). Then click on **Submit**.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在顶部点击 **保存**。然后点击 **提交以供审查**。然后完成关于您的应用包含内容的必填问卷（在我们的案例中，没有任何内容）。然后点击 **提交**。
- en: We're on our way!
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在路上！
- en: Tip
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: A faster way to validate and submit your apps to the App Store is without using
    the Application Loader. Instead of clicking on **Export**, you can click on either
    **Validate** or **Submit**, and the same process will take place.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更快的方法是无需使用应用加载器来验证和提交您的应用到App Store。您不需要点击 **导出**，而是可以点击 **验证** 或 **提交**，然后执行相同的流程。
- en: After submission
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提交后
- en: Now that your app's status is **Waiting for Review**, it's best to make use
    of your time by either preparing for an update (because in theory, you could be
    constantly pushing updates, and as soon as one gets accepted, you push another)
    or marketing your game to the public.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您的应用状态为 **等待审查**，最好利用您的时间，要么准备更新（因为理论上，您可以不断推送更新，一旦一个被接受，就推送另一个）要么向公众推广您的游戏。
- en: 'Ideally, you''ve been doing all of this early on: blogging about your progress,
    posting about it on social media, telling your friends and family about the game
    you''re creating, and so on. But if you haven''t, no worries! The next few sections
    will guide you through this process.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，您一直在早期就做这些事情：记录您的进度，在社交媒体上发布，告诉您的朋友和家人您正在创建的游戏，等等。但如果没有，没关系！接下来的几个部分将引导您完成这个过程。
- en: Beta testers and the target market
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试人员和目标市场
- en: If you don't have people playing your game and alpha or beta testing it yet,
    now's probably the best time to do it. You should try to get an array of players
    with different skill sets to see how different users interact with your game so
    that you can try to eliminate the confusion with as many people as possible.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有人玩你的游戏，也没有进行alpha或beta测试，现在可能是做这件事的最佳时机。你应该尝试吸引不同技能水平的玩家，看看不同用户如何与你游戏互动，这样你就可以尽可能多地消除混乱。
- en: Also, if you're wondering, "What kind of people should I look for to test my
    game?" you need to consider who your ideal player is. If you're making a kids'
    game, try to get kids (or maybe even their parents) to play your game. If the
    genre is tower defense, try to find people who just love tower defense games so
    that they can give you great feedback.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果你想知道，“我应该寻找什么样的人来测试我的游戏？”你需要考虑你的理想玩家是谁。如果你在制作儿童游戏，试着让儿童（或者甚至他们的父母）玩你的游戏。如果游戏类型是塔防，试着找到那些非常喜欢塔防游戏的人，这样他们就可以给你提供很好的反馈。
- en: If you're interested in beta testing with people who aren't in your vicinity,
    consider Apple's TestFlight integration. At first, TestFlight was a standalone
    product, but now Apple has included it within iTunes Connect (you might have seen
    it if you went under the **Prerelease** tab). Essentially, you can invite people
    to use your app/game just by getting their e-mail. You upload a build in the same
    way you submitted it, except that you have to add the build to the prerelease,
    and after a review process, Apple allows the testers to download and play the
    game.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你感兴趣的是与不在你附近的人进行beta测试，请考虑苹果的TestFlight集成。最初，TestFlight是一个独立的产品，但现在苹果已经将其包含在iTunes
    Connect中（如果你点击了**预发布**标签，你可能已经看到了它）。基本上，你可以通过获取他们的电子邮件来邀请人们使用你的应用程序/游戏。你以提交的方式上传构建版本，除了你必须将构建版本添加到预发布中，经过审查过程后，苹果允许测试者下载并玩游戏。
- en: But having beta testers and figuring out your target audience is only step 1\.
    Step 2 involves getting your game into the hands of many people.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 但拥有beta测试者和确定你的目标受众只是第一步。第二步涉及将你的游戏交给很多人。
- en: App review sites
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用程序评论网站
- en: One of the keys to making your game a success is getting it into the hands of
    other people, especially people who write blogs or articles that are reviews of
    games other people have made. If a game is amazing, you'll see it all over the
    place, and maybe even Apple takes notice and features it under the **Featured**
    section of their App Store.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 使你的游戏成功的关键之一是将游戏交给其他人，特别是那些写博客或文章的人，这些文章是其他人制作的游戏的评论。如果一个游戏很棒，你会在各个地方看到它，也许苹果也会注意到，并在他们App
    Store的**特色**部分推荐它。
- en: 'If you e-mail any developer (who isn''t in a prominent company) and ask them
    how Apple featured them, the response is generally the same: "We had no idea that
    it was going to happen. We just asked some websites to review our game, and then
    all of a sudden, we were featured on the App Store for the week!"'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你给任何开发者（他们不在知名公司）发电子邮件并询问苹果是如何介绍他们的，通常得到的回答都是一样的：“我们根本不知道会发生这样的事情。我们只是让一些网站评论我们的游戏，然后突然之间，我们的游戏就在App
    Store上被推荐了一周！”
- en: That being said, there's a giant list of app review websites at [https://maniacdev.com/2012/05/ios-app-review-sites](https://maniacdev.com/2012/05/ios-app-review-sites),
    so that you don't have to find them yourself.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，有一个巨大的应用程序评论网站列表在[https://maniacdev.com/2012/05/ios-app-review-sites](https://maniacdev.com/2012/05/ios-app-review-sites)，这样你就不必自己寻找它们。
- en: Although the URL says "2012," it has been updated as recently as August 2014,
    at the time of writing this book. The websites are sorted by Alexa ranking, which
    places the most viewed site at the top of the list (and the least viewed at the
    bottom).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管URL显示“2012”，但在撰写本书时，它已经被更新到2014年8月，网站按Alexa排名排序，将浏览量最大的网站放在列表顶部（浏览量最小的放在底部）。
- en: Apple gives you 100 promo codes for every version you submit to the App Store.
    Use these codes when pitching/submitting your game to these sites.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果为每个提交到App Store的版本提供100个促销代码。在向这些网站推广/提交你的游戏时使用这些代码。
- en: Tip
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Note that it's not likely that your game will make it to a site like *Mashable*
    or *TechCrunch* right away without already being a big hit, so to make better
    use of the promo codes, it might be a better option to start lower on the list
    and work your way up, instead of down.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果你的游戏还没有成为像*Mashable*或*TechCrunch*这样的网站的热门，那么在没有成为大热门的情况下，直接进入这些网站的可能性不大，所以为了更好地利用促销代码，从列表的较低位置开始，逐步上升可能是一个更好的选择，而不是下降。
- en: Other sources of information
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他信息来源
- en: There's a website known as *PixelProspector*. They have a ton of resources,
    links, guides, and more when it comes to game development (especially when it
    comes to indie games, which is most likely what you like if you're reading this
    book). Even if you're part of a reputed studio, this is still a great source for
    information (especially their relatively new **Marketing** section). Check it
    out at [http://www.pixelprospector.com/indie-resources/](http://www.pixelprospector.com/indie-resources/).
    You'll probably find something useful.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个名为*PixelProspector*的网站。在游戏开发方面（尤其是独立游戏，如果你在读这本书，这很可能是你喜欢的），他们拥有大量的资源、链接、指南等。即使你是知名工作室的一员，这也是一个获取信息的好来源（特别是他们相对较新的**营销**部分）。你可以在这里查看[http://www.pixelprospector.com/indie-resources/](http://www.pixelprospector.com/indie-resources/)。你可能会找到一些有用的东西。
- en: Summary
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned how to create a default image for your app, properly
    set up the icons (along with using the asset catalog), add analytics to your app
    via Flurry, set up everything on iTunes Connect, release your app, and plan what
    to do afterwards.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何为你的应用创建默认图片，正确设置图标（包括使用资源库），通过Flurry向应用添加分析，在iTunes Connect上设置一切，发布你的应用，并规划发布后的行动。
- en: In the next chapter, we'll cover Apple's newest language, called **Swift**.
    We'll see a nongame example as well as a small game using Cocos2d's Swift version.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍苹果公司最新的编程语言，称为**Swift**。我们将看到一个非游戏示例，以及一个使用Cocos2d Swift版本的简单游戏。
