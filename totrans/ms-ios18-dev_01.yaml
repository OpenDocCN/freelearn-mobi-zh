- en: <st c="0">1</st>
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">1</st>
- en: <st c="2">What’s New in iOS 18</st>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="2">iOS 18 新增功能</st>
- en: <st c="22">Apple introduced iOS 18 in WWDC 2024 as part of its annual developer’s
    conference, alongside macOS, tvOS, iPadOS, watchOS,</st> <st c="146">and visionOS.</st>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22">苹果在 2024 年的 WWDC 上推出了 iOS 18，作为其年度开发者大会的一部分，与 macOS、tvOS、iPadOS、watchOS
    和 visionOS 一起。</st>
- en: <st c="159">Utilizing our app’s latest features and capabilities in each major
    OS release gives us a competitive advantage.</st> <st c="272">Here are the reasons
    why Apple chose to improve particular domains in the SDK – market research or
    technology trends are good enough reasons to adopt</st> <st c="422">new technologies.</st>
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="159">利用我们应用在每个主要操作系统版本中的最新特性和功能，使我们获得竞争优势。</st> <st c="272">以下是苹果选择在
    SDK 中改进特定领域的原因——市场研究或技术趋势是采用新技术的充分理由。</st>
- en: <st c="439">However, to understand iOS 18 improvements, we first must understand
    the background for this version – that’s one of this</st> <st c="562">chapter’s
    goals.</st>
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="439">然而，要理解 iOS 18 的改进之处，我们首先必须了解这个版本背后的背景——这是本章的一个目标。</st>
- en: <st c="578">In this chapter, we will cover the</st> <st c="614">following topics:</st>
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="578">在本章中，我们将涵盖以下主题：</st> <st c="614">：</st>
- en: <st c="631">Understanding iOS</st> <st c="650">18 background</st>
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="631">理解 iOS</st> <st c="650">18 背景</st>
- en: <st c="663">Exploring</st> <st c="674">Swift Testing</st>
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="663">探索</st> <st c="674">Swift 测试</st>
- en: <st c="687">Learning about the new Swift</st> <st c="717">Data improvements</st>
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="687">了解新的 Swift</st> <st c="717">数据改进</st>
- en: <st c="734">Trying the new</st> <st c="750">zoom transition</st>
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="734">尝试新的</st> <st c="750">缩放过渡效果</st>
- en: <st c="765">Adding a floating tab bar to our</st> <st c="799">iPad apps</st>
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="765">在我们的</st> <st c="799">iPad 应用中添加浮动标签栏</st>
- en: <st c="808">Having more control over scroll views</st> <st c="847">in SwiftUI</st>
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="808">在 SwiftUI 中对滚动视图有更多控制</st> <st c="847"></st>
- en: <st c="857">Changing the text</st> <st c="876">rendering behavior</st>
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="857">更改文本渲染行为</st>
- en: <st c="894">Positioning sub-views from</st> <st c="922">another view</st>
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="894">从另一个视图定位子视图</st>
- en: <st c="934">Entering the</st> <st c="948">AI revolution</st>
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="934">进入</st> <st c="948">人工智能革命</st>
- en: <st c="961">If that sounds like an exciting chapter, you are not wrong.</st>
    <st c="1022">Let’s start by understanding the background of</st> <st c="1069">iOS
    18.</st>
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="961">如果这听起来像是一个令人兴奋的章节，您并没有错。</st> <st c="1022">让我们先了解</st> <st c="1069">iOS
    18 的背景。</st>
- en: <st c="1076">Technical requirements</st>
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="1076">技术要求</st>
- en: <st c="1099">For this chapter, it’s essential to download Xcode version 16.0
    or higher from the</st> <st c="1183">App Store.</st>
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1099">对于本章，从 App Store 下载 Xcode 版本 16.0 或更高版本是必不可少的。</st>
- en: <st c="1193">Ensure that you’re operating on the most recent version of macOS
    (Ventura or newer).</st> <st c="1279">Just search for Xcode in the App Store,
    choose the latest version, and proceed with the download.</st> <st c="1377">Open
    Xcode and complete any further setup instructions that appear.</st> <st c="1445">After
    Xcode is completely up and running, you</st> <st c="1491">can begin.</st>
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1193">确保您正在使用最新的 macOS 版本（Ventura 或更高版本）。</st> <st c="1279">只需在 App Store
    中搜索 Xcode，选择最新版本，然后继续下载。</st> <st c="1377">打开 Xcode 并完成出现的任何进一步设置说明。</st> <st
    c="1445">在 Xcode 完全运行后，您</st> <st c="1491">就可以开始了。</st>
- en: <st c="1501">This chapter includes many code examples, and can be found in the
    following</st> <st c="1578">GitHub repository:</st>
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1501">本章包含许多代码示例，可以在以下</st> <st c="1578">GitHub 仓库中找到：</st>
- en: '[<st c="1596">https://github.com/PacktPublishing/Mastering-iOS-18-Development/tree/main/Chapter%201</st>](https://github.com/PacktPublishing/Mastering-iOS-18-Development/tree/main/Chapter%201)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[<st c="1596">https://github.com/PacktPublishing/Mastering-iOS-18-Development/tree/main/Chapter%201</st>](https://github.com/PacktPublishing/Mastering-iOS-18-Development/tree/main/Chapter%201)'
- en: <st c="1682">Understanding iOS 18 background</st>
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="1682">理解 iOS 18 背景</st>
- en: <st c="1714">Releasing a major iOS version is always a big deal, even if it’s
    the 18</st><st c="1786">th</st> <st c="1789">already.</st> <st c="1799">Let’s
    try to analyze the iOS SDK before</st> <st c="1839">iOS 18:</st>
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1714">发布一个主要的 iOS 版本总是一件大事，即使它是第 18</st><st c="1786">个</st> <st c="1789">版本。</st>
    <st c="1799">让我们在 iOS 18 之前尝试分析 iOS SDK：</st>
- en: '**<st c="1846">SwiftUI</st>** <st c="1854">is becoming more mature</st> <st
    c="1878">and capable.</st> <st c="1892">However, some features, such as complex
    animations or transitions, gesture handling, navigation, and drawing, remain challenging
    to implement</st> <st c="2034">using SwiftUI.</st>'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="1846">SwiftUI</st>** <st c="1854">正在变得更加成熟和强大。</st> <st c="1878">然而，一些功能，如复杂的动画或过渡、手势处理、导航和绘图，仍然使用
    SwiftUI 实现起来具有挑战性</st> <st c="2034">。</st>'
- en: '**<st c="2048">Core Data</st>** <st c="2058">is the go-to framework for most
    iOS developers</st> <st c="2105">as a solution for storing</st> <st c="2132">data
    persistently.</st>'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="2048">Core Data</st>** <st c="2058">是大多数 iOS 开发者作为存储</st> <st c="2105">持久数据的解决方案的首选框架。</st>'
- en: <st c="2150">While</st> **<st c="2157">XCTest</st>** <st c="2163">is considered
    a robust</st> <st c="2186">and convenient testing framework, it lacks features
    that are commonly available on other platforms, such as parameterized testing
    and better</st> <st c="2328">testing organization.</st>
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="2150">虽然</st> **<st c="2157">XCTest</st>** <st c="2163">被认为是一个强大且方便的测试框架，但它缺乏在其他平台上常见的功能，例如参数化测试和更好的</st>
    <st c="2328">测试组织。</st>
- en: '**<st c="2349">WidgetKit</st>**<st c="2359">’s popularity proves that the ability</st>
    <st c="2397">to show information at a glance is crucial in</st> <st c="2444">today’s
    world.</st>'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="2349">WidgetKit</st>**<st c="2359">的流行证明了在当今世界，能够一目了然地展示信息的能力至关重要。</st>'
- en: <st c="2458">No one can argue that this list is important.</st> <st c="2505">However,
    one critical topic that Apple didn’t focus on until WWDC 2024 is</st> <st c="2579">artificial
    intelligence.</st>
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2458">没有人会否认这个列表的重要性。</st> <st c="2505">然而，一个苹果直到 WWDC 2024 才开始关注的至关重要的话题是</st>
    <st c="2579">人工智能。</st>
- en: <st c="2603">The rise of OpenAI’s ChatGPT, followed by thousands of machine
    learning and AI tools, put Apple in a weird situation.</st> <st c="2722">This
    is not the first time Apple has left behind some temporary trend, but this time
    it was different.</st> <st c="2825">AI’s potential influence on humanity indicates
    that this is not a regular trend or technology evolution; it is practically a
    revolution that will change</st> <st c="2978">the world.</st>
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2603">OpenAI 的 ChatGPT 的兴起，随后是数千种机器学习和 AI 工具，使苹果陷入了一个尴尬的境地。</st> <st
    c="2722">这不是苹果第一次落后于一些暂时性的趋势，但这一次情况不同。</st> <st c="2825">AI 对人类潜在的影响表明，这不仅仅是一个常规趋势或技术演变；实际上，这是一场将改变</st>
    <st c="2978">世界的革命。</st>
- en: <st c="2988">The question is, where is Apple with its set of platforms and technologies?</st>
    <st c="3065">Does it have an answer to the</st> <st c="3095">AI revolution?</st>
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2988">问题是，苹果在它的一系列平台和技术方面处于什么位置？</st> <st c="3065">它对 AI 革命有什么答案吗？</st>
- en: <st c="3109">Before diving into that question, let’s first review the new features
    and frameworks introduced in iOS 18 and explore how the latest version tackles
    some of the key challenges we face in iOS development.</st> <st c="3314">Don’t
    worry, though – we’ll cover the AI revolution in the final section and throughout
    the book.</st> <st c="3412">Now, let’s discuss a new framework –</st> <st c="3449">Swift
    Testing.</st>
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3109">在深入探讨那个问题之前，让我们首先回顾一下 iOS 18 中引入的新特性和框架，并探讨最新版本如何应对我们在 iOS 开发中面临的一些关键挑战。</st>
    <st c="3314">不过，不用担心——我们将在最后一节和整本书中涵盖 AI 革命。</st> <st c="3412">现在，让我们讨论一个新的框架——</st>
    <st c="3449">Swift 测试。</st>
- en: <st c="3463">Introducing Swift Testing</st>
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="3463">介绍 Swift 测试</st>
- en: <st c="3489">Swift Testing is a new framework</st> <st c="3522">with a new and
    refreshing approach to testing.</st> <st c="3570">Swift Testing contains modern
    features such as macros, which work with structs instead of classes and can tag
    tests and</st> <st c="3690">test suites.</st>
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3489">Swift 测试框架</st> <st c="3522">采用了一种新颖且令人耳目一新的测试方法。</st> <st c="3570">Swift
    测试框架包含现代特性，如宏，这些宏与结构体而不是类一起工作，并且可以标记测试和</st> <st c="3690">测试套件。</st>
- en: <st c="3702">Swift Testing is supposed to replace XCTest, which was introduced
    in 2013 as part of Xcode 5\.</st> <st c="3797">XCTest belongs to older times when
    Objective-C was the dominant language.</st> <st c="3871">However, Swift took over,
    and Apple understood that iOS developers needed a modern</st> <st c="3954">testing
    framework.</st>
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3702">Swift 测试框架旨在取代 2013 年作为 Xcode 5 部分引入的 XCTest。</st> <st c="3797">XCTest
    属于 Objective-C 为主流语言的旧时代。</st> <st c="3871">然而，Swift 取代了 Objective-C，苹果意识到 iOS
    开发者需要一个现代化的</st> <st c="3954">测试框架。</st>
- en: <st c="3972">Here’s a simple</st> <st c="3989">test function:</st>
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3972">这是一个简单的</st> <st c="3989">测试函数：</st>
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: <st c="4309">We can see how simple it is to write a test function in Swift Testing.</st>
    <st c="4381">Notice the preceding Swift macro, which configures and tags the function
    as critical in addition to providing the</st> <st c="4495">test description.</st>
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4309">我们可以看到在 Swift Testing 中编写测试函数是多么简单。</st> <st c="4381">注意前面的 Swift
    宏，它除了提供测试描述外，还配置并标记了函数为关键。</st>
- en: <st c="4512">If your app doesn’t have a test function, Swift Testing</st> <st
    c="4568">is a great way to start (to read more about Swift Testing, go to</st>
    [*<st c="4634">Chapter 14</st>*](B21795_14.xhtml#_idTextAnchor430)<st c="4644">).</st>
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4512">如果你的应用没有测试函数，Swift Testing</st> <st c="4568">是一个很好的开始方式（要了解更多关于
    Swift Testing 的信息，请参阅</st> [*<st c="4634">第 14 章</st>*](B21795_14.xhtml#_idTextAnchor430)<st
    c="4644">）。</st>
- en: <st c="4647">Now, let’s discuss another new framework that handles our</st>
    <st c="4706">persistent store.</st>
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4647">现在，让我们讨论另一个处理我们</st> <st c="4706">持久存储</st>的新框架。</st>
- en: <st c="4723">Introducing Swift Data Improvements</st>
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="4723">介绍 Swift 数据改进</st>
- en: <st c="4759">Swift Data was introduced</st> <st c="4785">in WWDC 2023 as part
    of iOS 17, and its goal was to replace the old but popular Core</st> <st c="4871">Data
    framework.</st>
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4759">Swift Data 是在 WWDC 2023 作为 iOS 17 的一部分引入的，其目标是取代旧但流行的 Core</st>
    <st c="4785">Data 框架。</st>
- en: <st c="4886">Swift Data provides a modern API based on Swift, which can help
    reduce friction when working with persistent stores.</st> <st c="5004">One of
    the trends we see in Apple development tools is moving away from GUI to code-based
    tools.</st> <st c="5101">A good example is SwiftUI – even though it is possible
    to drag and drop components to build a user interface, the primary way to do this
    is in code.</st> <st c="5250">The same goes for App Intents and Swift Package
    Managers.</st> <st c="5308">The data layer goes through the same concept – in
    Swift Data, we don’t have any data model editor, so we build our data model using</st>
    <st c="5440">only code.</st>
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4886">Swift Data 提供了一个基于 Swift 的现代 API，可以帮助减少与持久存储工作时的摩擦。</st> <st c="5004">我们在
    Apple 开发工具中看到的一个趋势是，从 GUI 转向基于代码的工具。</st> <st c="5101">一个很好的例子是 SwiftUI – 尽管可以拖放组件来构建用户界面，但主要的实现方式是代码。</st>
    <st c="5250">App Intents 和 Swift Package Managers 也是如此。</st> <st c="5308">数据层也遵循同样的概念
    – 在 Swift Data 中，我们没有数据模型编辑器，所以我们使用</st> <st c="5440">仅代码来构建数据模型。</st>
- en: <st c="5450">For example, here’s how to create a data model for a</st> `<st
    c="5504">Book</st>` <st c="5508">entity:</st>
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5450">例如，这是为</st> `<st c="5504">Book</st>` <st c="5508">实体创建数据模型的方法：</st>
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: <st c="5599">At first glance, it seems like a regular</st> `<st c="5641">Book</st>`
    <st c="5645">class – and it is!</st> <st c="5665">This time, we added the</st>
    `<st c="5689">@Model</st>` <st c="5695">macro, which does all</st> <st c="5718">that
    magic.</st>
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5599">乍一看，这似乎是一个普通的</st> `<st c="5641">Book</st>` <st c="5645">类 – 确实如此！</st>
    <st c="5665">这次，我们添加了</st> `<st c="5689">@Model</st>` <st c="5695">宏，它完成了所有的魔法。</st>
- en: <st c="5729">When Swift Data was introduced, it already had many features, such
    as relationships and deletion rules.</st> <st c="5834">Despite that, many developers
    felt that the framework wasn’t mature enough to replace</st> <st c="5920">Core
    Data.</st>
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5729">当 Swift Data 介绍时，它已经拥有许多功能，例如关系和删除规则。</st> <st c="5834">尽管如此，许多开发者认为这个框架还不够成熟，无法取代</st>
    <st c="5920">Core Data。</st>
- en: <st c="5930">In iOS 18, Apple added</st> <st c="5953">some features to Swift
    Data that, if it is not already there, will bring it closer to where it</st> <st
    c="6049">should be.</st>
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5930">在 iOS 18 中，Apple 为 Swift Data 添加了一些功能，如果它还没有，这将使其更接近它</st> <st
    c="6049">应该达到的地方。</st>
- en: <st c="6059">Unique value</st>
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="6059">唯一值</st>
- en: <st c="6072">The first and maybe most important</st> <st c="6107">new feature</st>
    <st c="6119">in iOS 18 is the ability to construct a</st> **<st c="6160">unique
    value</st>** <st c="6172">for the model based on</st> <st c="6196">its attributes:</st>
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6072">iOS 18 的第一个也许是最重要的</st> <st c="6107">新特性</st> <st c="6119">是能够根据</st>
    **<st c="6160">模型属性</st>** <st c="6172">构建一个</st> **<st c="6160">唯一值</st>** <st
    c="6172">：</st>
- en: '[PRE2]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'final class CSVStoreConfiguration: DataStoreConfiguration {'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 'final class CSVStoreConfiguration: DataStoreConfiguration {'
- en: typealias Store = CSVDataStore
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: typealias Store = CSVDataStore
- en: 'var name: String'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'var name: String'
- en: 'var schema: Schema? var fileURL: URL'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'var schema: Schema? var fileURL: URL'
- en: 'init(name: String, schema: Schema? = nil, fileURL: URL)'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'init(name: String, schema: Schema? = nil, fileURL: URL)'
- en: '{'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: self.name = name
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.name = name
- en: self.schema = schema
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.schema = schema
- en: self.fileURL = fileURL
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.fileURL = fileURL
- en: '}'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: 'static func == (lhs: CSVStoreConfiguration, rhs:'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'static func == (lhs: CSVStoreConfiguration, rhs:'
- en: CSVStoreConfiguration) -> Bool {
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: CSVStoreConfiguration) -> Bool {
- en: return lhs.name == rhs.name
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: return lhs.name == rhs.name
- en: '}'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: 'func hash(into hasher: inout Hasher) {'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'func hash(into hasher: inout Hasher) {'
- en: hasher.combine(name)
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: hasher.combine(name)
- en: '}'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE3]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'final class <st c="8350">CSVDataStore</st>: DataStore {'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '最终类 <st c="8350">CSV数据存储</st>: 数据存储 {'
- en: typealias Configuration = <st c="8403">CSVStoreConfiguration</st> typealias
    Snapshot = DefaultSnapshot
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: typealias 配置 = <st c="8403">CSV存储配置</st> typealias 快照 = 默认快照
- en: 'var configuration: <st c="8481">CSVStoreConfiguration</st> var name: String'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'var 配置: <st c="8481">CSV存储配置</st> var 名称: String'
- en: 'var schema: Schema'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'var 架构: 架构'
- en: 'var identifier: String'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'var 标识符: String'
- en: 'required init(_ configuration: CSVStoreConfiguration,'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '必须初始化(_ 配置: CSV存储配置,'
- en: 'migrationPlan: (any SchemaMigrationPlan.Type)?)'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '迁移计划: (任何 SchemaMigrationPlan 类型)?)'
- en: throws {
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 抛出 {
- en: self.configuration = configuration
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.configuration = configuration
- en: self.name = configuration.name
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.name = configuration.name
- en: self.schema = configuration.schema! self.identifier =
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.schema = configuration.schema! self.identifier =
- en: configuration.fileURL.lastPathComponent
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 配置文件URL的最后路径组件
- en: '}'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE4]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'func fetch<T>(_ request: DataStoreFetchRequest<T>)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 'func 获取<T>(_ 请求: 数据存储获取请求<T>)'
- en: throws -> DataStoreFetchResult<T, DefaultSnapshot>
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 抛出 -> 数据存储获取结果<T，默认快照>
- en: 'where T : PersistentModel {'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'where T : 持久模型 {'
- en: let predicate = request.descriptor.predicate
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: let 判断 = 请求描述符判断
- en: 'return DataStoreFetchResult(descriptor:'
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '返回 数据存储获取结果(描述符:'
- en: 'request.descriptor, fetchedSnapshots: [],'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '请求描述符，获取快照: [],'
- en: 'relatedSnapshots: [:])'
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '相关快照: [:])'
- en: . // perform fetch operations
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: . // 执行获取操作
- en: '}'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: 'func save(_ request:'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'func 保存(_ 请求:'
- en: DataStoreSaveChangesRequest<DefaultSnapshot>)
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据存储保存更改请求<默认快照>)
- en: throws -> DataStoreSaveChangesResult<DefaultSnapshot>
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 抛出 -> 数据存储保存更改结果<默认快照>
- en: '{'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '{'
- en: 'var remappedIdentifiers = [PersistentIdentifier:'
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'var remappedIdentifiers = [持久标识符:'
- en: PersistentIdentifier]()
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 持久标识符]()
- en: for snapshot in request.inserted {
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于请求插入的快照 {
- en: // insert new items
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: // 插入新项目
- en: '}'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: for snapshot in request.updated {
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于请求更新的快照 {
- en: // update existing items
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: // 更新现有项目
- en: '}'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: for snapshot in request.deleted {
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于请求删除的快照 {
- en: // delete items
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: // 删除项目
- en: '}'
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: return
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回
- en: 'DataStoreSaveChangesResult<DefaultSnapshot>(for:'
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '数据存储保存更改结果<默认快照>(for:'
- en: self.identifier,
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.identifier,
- en: 'remappedIdentifiers: remappedIdentifiers)'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'remappedIdentifiers: remappedIdentifiers)'
- en: '}'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE5]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '<st c="11285">@Namespace() var namespace</st> var body: some View {'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="11285">@Namespace() var 命名空间</st> var body: some View {'
- en: NavigationStack {
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: NavigationStack {
- en: ScrollView {
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: ScrollView {
- en: 'LazyVGrid(columns: ['
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'LazyVGrid(columns: ['
- en: 'GridItem(.adaptive(minimum: 150)) ]) {'
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '网格项(.自适应(minimum: 150)) ]) {'
- en: ForEach(Album.albums) { album in
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于专辑专辑 {专辑 in
- en: NavigationLink {
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: NavigationLink {
- en: Image(album.imageName)
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Image(album.imageName)
- en: '.resizable() <st c="11512">.navigationTransition(.zoom(sourceID: album.id,
    in:</st>'
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: .可调整大小() <st c="11512">.导航过渡(.缩放(sourceID:专辑ID，在：</st>
- en: '<st c="11563">namespace))</st> } label: {'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="11563">命名空间)</st> } 标签: {'
- en: Image(album.imageName)
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Image(album.imageName)
- en: .resizable()
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: .可调整大小()
- en: .scaledToFit()
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: .scaledToFit()
- en: '.frame(minWidth: 0,'
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '.frame(minWidth: 0,'
- en: 'maxWidth: .infinity)'
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '最大宽度: .infinity)'
- en: '.frame(height: 150)'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '.frame(height: 150)'
- en: .cornerRadius(8.0)
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: .cornerRadius(8.0)
- en: '} <st c="11720">.matchedTransitionSource(id:</st>'
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '} <st c="11720">.matchedTransitionSource(id:</st>'
- en: '<st c="11748">album.id, in: namespace)</st> }'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11748">专辑ID，在：命名空间中</st> }
- en: '}'
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: .padding()
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: .padding()
- en: '}'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE6]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'struct ContentView: View {'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '结构体 ContentView: View {'
- en: 'var body: some View {'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'var body: some View {'
- en: TabView {
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: TabView {
- en: 'Tab("Home", systemImage: "house.fill") {  }'
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Tab("主页",系统图像:"house.fill") {  }
- en: 'Tab("Profile", systemImage:'
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Tab("个人资料",系统图像:'
- en: '"person.crop.circle") { }'
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"person.crop.circle") { }'
- en: 'Tab("Settings", systemImage: "gear") { }'
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Tab("设置",系统图像:"gear") { }
- en: '}'
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: .tint(.red) <st c="14402">.tabViewStyle(.sidebarAdaptable)</st> }
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: .tint(.red) <st c="14402">.tabViewStyle(.sidebarAdaptable)</st> }
- en: '}'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE7]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: ScrollViewReader { proxy in
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: ScrollViewReader {代理 in
- en: ScrollView {
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: ScrollView {
- en: 'VStack(alignment: .leading, spacing: 16) {'
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'VStack(alignment: .leading, spacing: 16) {'
- en: ForEach(albums) { album in
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: ForEach(albums) {专辑 in
- en: 'ExtractedView(album: album)'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提取视图(album:专辑)
- en: .id(album.id)
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: .id(album.id)
- en: '}'
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '.overlay(alignment: .bottom) {'
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '.overlay(alignment: .bottom) {'
- en: if showScrollToTop {
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果显示滚动到顶部 {
- en: Button("Scroll to top") {
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Button("滚动到顶部") {
- en: proxy.scrollTo(albums[0].id,
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 代理滚动到(albums[0].id,
- en: 'anchor: .top)'
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '锚点: .top)'
- en: '}'
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: .buttonStyle(.borderedProminent)
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: .buttonStyle(.borderedProminent)
- en: '}'
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '} <st c="17458">.onScrollGeometryChange(for: Bool.self) {</st>'
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '} <st c="17458">.onScrollGeometryChange(for: Bool.self) {</st>'
- en: <st c="17499">geometry in</st>
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17499">几何形状在</st>
- en: <st c="17511">geometry.contentOffset.y <</st>
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17511">几何内容偏移量.y <</st>
- en: <st c="17538">geometry.contentInsets.bottom + 300</st>
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17538">几何内容内边距底部 + 300</st>
- en: '<st c="17574">} action: { oldValue, newValue in</st>'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17574">} 动作：{旧值，新值 in</st>
- en: <st c="17608">withAnimation {</st>
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17608">withAnimation {</st>
- en: <st c="17624">showScrollToTop = !newValue</st>
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17624">显示滚动到顶部 = !newValue</st>
- en: <st c="17652">}</st>
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17652">}</st>
- en: <st c="17654">}</st> }
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17654">}</st> }
- en: '[PRE8]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: ForEach(albums) { album in
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 对于专辑 {专辑 in
- en: 'ExtractedView(album: album)'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'ExtractedView(album: album)'
- en: .id(album.id)
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: .id(album.id)
- en: '.<st c="19395">onScrollVisibilityChange(threshold: 0.9) {</st>'
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '.<st c="19395">onScrollVisibilityChange(threshold: 0.9) {</st>'
- en: <st c="19438">visible in</st>
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19438">visible in</st>
- en: <st c="19449">if visible {</st>
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19449">if visible {</st>
- en: <st c="19462">print("\(album.title) appears")</st>
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19462">print("\(album.title) appears")</st>
- en: <st c="19494">}</st>
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19494">}</st>
- en: <st c="19496">}</st> }
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19496">}</st> }
- en: '[PRE9]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '<st c="21400">struct CustomTextRenderer: TextRenderer {</st>'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="21400">struct CustomTextRenderer: TextRenderer {</st>'
- en: '<st c="21442">func draw(layout: Text.Layout, in ctx: inout</st>'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="21442">func draw(layout: Text.Layout, in ctx: inout</st>'
- en: <st c="21487">GraphicsContext) {</st>
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21487">GraphicsContext) {</st>
- en: <st c="21506">for (index, line) in layout.enumerated() {</st>
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21506">for (index, line) in layout.enumerated() {</st>
- en: <st c="21549">ctx.opacity = Double(index + 1) * 0.1</st>
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21549">ctx.opacity = Double(index + 1) * 0.1</st>
- en: '<st c="21587">ctx.rotate(by: Angle(degrees: Double(index) *</st>'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="21587">ctx.rotate(by: Angle(degrees: Double(index) *</st>'
- en: <st c="21633">1))</st>
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21633">1))</st>
- en: <st c="21637">ctx.draw(line)</st>
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21637">ctx.draw(line)</st>
- en: <st c="21652">}</st>
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21652">}</st>
- en: <st c="21654">}</st>
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21654">}</st>
- en: '<st c="21656">}</st> struct ContentView: View {'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="21656">}</st> struct ContentView: View {'
- en: 'var body: some View {'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'var body: some View {'
- en: Text("Great new features come to texts in SwiftUI")
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Text("SwiftUI中的文本新增了众多新特性")
- en: '.font(.system(size: 60)) <st c="21784">.textRenderer(CustomTextRenderer())</st>
    }'
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '.font(.system(size: 60)) <st c="21784">.textRenderer(CustomTextRenderer())</st>
    }'
- en: '}'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE10]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'struct NewsView: View {'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 'struct NewsView: View {'
- en: 'var body: some View {'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'var body: some View {'
- en: 'Text("Major Breakthrough in Renewable Energy: New Solar Panel Technology Promises
    30% Efficiency Increase")'
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Text("可再生能源领域取得重大突破：新型太阳能电池技术承诺提高30%的效率")
- en: 'Text("lobal Markets React to Sudden Interest Rate Hike: Stocks Tumble Across
    the Board")'
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Text("全球市场对突然加息作出反应：股市全面下跌")
- en: 'Text("Historic Peace Agreement Reached: Leaders Sign Pact to End Decades-Long
    Conflict")'
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Text("历史性的和平协议达成：领导人签署协议结束长达数十年的冲突")
- en: 'Text("Innovative AI Tool Revolutionizes Healthcare: Doctors Embrace Machine
    Learning for Diagnosis")'
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Text("创新人工智能工具革新医疗保健：医生拥抱机器学习进行诊断")
- en: 'Text("Natural Disaster Strikes: Massive Earthquake Hits Coastal City, Rescue
    Efforts Underway")'
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Text("自然灾害袭击：沿海城市发生大规模地震，救援行动正在进行")
- en: '}'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE11]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'struct ContentView: View {'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 'struct ContentView: View {'
- en: 'var body: some View {'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'var body: some View {'
- en: ScrollView {
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: ScrollView {
- en: VStack {
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: VStack {
- en: Text("Latest headlines")
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Text("最新头条")
- en: .font(.title)
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: .font(.title)
- en: '<st c="24170">Group(subviews: NewsView()) { collection in</st> if let firstHeadline
    = collection.first'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="24170">Group(subviews: NewsView()) { collection in</st> if let firstHeadline
    = collection.first'
- en: '{'
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '{'
- en: firstHeadline
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: firstHeadline
- en: .font(.title2)
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: .font(.title2)
- en: Spacer()
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Spacer()
- en: '}'
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: ForEach(collection.dropFirst()) {
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: ForEach(collection.dropFirst()) {
- en: newsItem in
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: newsItem in
- en: newsItem
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: newsItem
- en: .font(.headline)
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: .font(.headline)
- en: Spacer()
  id: totrans-229
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Spacer()
- en: '}'
  id: totrans-230
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-231
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-232
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: .padding()
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: .padding()
- en: '}'
  id: totrans-234
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE12]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Group(subviews: NewsView()) { collection in'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 'Group(subviews: NewsView()) { collection in'
- en: '[PRE13]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
