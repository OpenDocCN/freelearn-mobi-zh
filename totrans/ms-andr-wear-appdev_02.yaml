- en: Chapter 2.  Setting up the Development Environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '|   | *"Give me six hours to chop down a tree and I will spend the first four
    sharpening the axe."* |   |'
  prefs: []
  type: TYPE_TB
- en: '|   | --*Abraham Lincoln* |'
  prefs: []
  type: TYPE_TB
- en: In this chapter, we will discuss the steps, topics, and process involved in
    setting up a development environment using the Android Studio. If you have done
    Android application development using Android Studio, some of the items discussed
    here might already be familiar to you. However, there are some Android Wear platform-specific
    items that may be of interest to you.
  prefs: []
  type: TYPE_NORMAL
- en: Android Studio
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Android Studio **Integrated Development Environment** (**IDE**) is based on
    the **IntelliJ IDEA** platform. If you have done Java development using IntelliJ
    IDEA platform, you'll feel at home working with Android Studio IDE.
  prefs: []
  type: TYPE_NORMAL
- en: Android Studio platform comes bundled with all the necessary tools and libraries
    needed for Android application development. If this is the first time you are
    setting up Android Studio on your development system, make sure that you have
    satisfied all the requirements before installation. Refer to the Android developer
    site ([http://developer.android.com/sdk/index.html#Requirements](http://developer.android.com/sdk/index.html#Requirements))
    to check the items needed for the operating system of your choice.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that you need at least JDK version 7 installed on your machine for Android
    Studio to work. You can verify your JDK version by typing the following commands
    in the Terminal window:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Android Studio](img/image00129.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: If your system does not meet that requirement, upgrade it using the method that
    is specific to your operating system.
  prefs: []
  type: TYPE_NORMAL
- en: Installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Android Studio platform includes Android Studio IDE, SDK Tools, Google
    API Libraries, and system images needed for Android application development:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installation](img/image00130.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Visit the [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html) page
    to download Android Studio for your corresponding operating system and follow
    the installation instructions.
  prefs: []
  type: TYPE_NORMAL
- en: Git and GitHub
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Git is a distributed version control system that is used widely for open source
    projects. We'll be using Git for sample code and sample projects as we go along
    the way.
  prefs: []
  type: TYPE_NORMAL
- en: 'Make sure that you have Git installed on your system by typing the following
    command in a Terminal window:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Git and GitHub](img/image00131.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: If you don't have it installed, download and install it by visiting, [https://git-scm.com/downloads](https://git-scm.com/downloads)
    link for your corresponding operating system.
  prefs: []
  type: TYPE_NORMAL
- en: If you are working on Mac OS El Capitan or Yosemite, or Linux distributions
    such as Ubuntu, Kubuntu, or Mint, the chances are you already have Git installed.
  prefs: []
  type: TYPE_NORMAL
- en: GitHub ([http://github.com](http://github.com)) is a free and popular hosting
    service for Git-based open source projects. They make checking out and contributing
    to open source projects easier than ever. Sign up with GitHub for a free account
    if you don't have an account already.
  prefs: []
  type: TYPE_NORMAL
- en: We'll be using GitHub to check out various sample projects related to Android
    Wear and also for sample code for applications developed for this book. We don't
    need to be an expert on Git for Android application development, but we do need
    to be familiar with the basic usage of Git commands to work with the project.
  prefs: []
  type: TYPE_NORMAL
- en: Android Studio comes by default with Git and GitHub integration. It helps to
    import sample code from Google's GitHub repository and helps you learn by checking
    out various application code samples.
  prefs: []
  type: TYPE_NORMAL
- en: Gradle
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Android application development uses Gradle ([http://gradle.org/](http://gradle.org/)) as
    the build system. It is used to build, test, run, and package the apps for running
    and testing Android applications.
  prefs: []
  type: TYPE_NORMAL
- en: Gradle is declarative and uses *convention over configuration* for build settings
    and configurations. It manages all the library dependencies for compiling and
    building code artifacts.
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately, Android Studio abstracts most of the common Gradle tasks and operations
    needed for development. However, there may be some cases where having some extra
    knowledge about Gradle would be very helpful. We won't be digging into Gradle
    now, we'll be discussing it as and when needed during the course of our journey.
  prefs: []
  type: TYPE_NORMAL
- en: Android SDK packages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you install Android Studio, it doesn't include all the Android SDK packages
    that are needed for development. The Android SDK separates tools, platforms, and
    other components and libraries into packages that can be downloaded, as needed
    using the Android SDK Manager. Before we start creating an application, we need
    to add some required packages into the Android SDK.
  prefs: []
  type: TYPE_NORMAL
- en: 'Launch SDK Manager from Android Studio, **Tools** | **Android** | **SDK Manager**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Android SDK packages](img/image00132.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Let's quickly go over a few items in the preceding screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, the Android SDK's location is `/opt/android-sdk` on my machine.
    It may very well be different on your machine depending on what you selected during
    the Android Studio installation. The important point to note is that the Android
    SDK is installed in a different location than Android Studio's path (`/Applications/Android\
    Studio.app/`).
  prefs: []
  type: TYPE_NORMAL
- en: This is considered a good practice because the Android SDK installation can
    be unaffected depending on a new installation or upgrade of Android Studio or
    vice versa.
  prefs: []
  type: TYPE_NORMAL
- en: On the **SDK Platforms** tab, select some recent Android SDK versions such as
    Android versions 6.0, 5.1.1, and 5.0.1.
  prefs: []
  type: TYPE_NORMAL
- en: Depending on the Android versions you are planning on supporting in your wearable
    apps, you can select other older Android versions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Checking the **Show Package Details** option in the bottom right will show
    all the packages that will be installed for a given Android SDK version:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Android SDK packages](img/image00133.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: To be on the safe side, select all the packages. As you may have noticed already,
    Android Wear ARM and Intel system images are included in the package selection.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, when you click on the **SDK Tools** tab*, *make sure the following items
    are selected:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Android SDK Build Tools**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Android SDK Tools 24.4.1** (latest version)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Android SDK Platform-Tools**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Android Support Repository, rev 25** (latest version)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Android Support Library, rev 23.1.1** (latest version)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Google Play services, rev 29** (latest version)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Google Repository, rev 24** (latest version)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Intel X86 Emulator Accelerator (HAXM installer), rev 6.0.1** (latest version)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Documentation for Android SDK** (optional)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The SDK window will look like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Android SDK packages](img/image00134.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Do not change anything in the **SDK Update Sites** tab. Keep the update sites
    as it was configured by default.
  prefs: []
  type: TYPE_NORMAL
- en: Click on **OK** button. It will take some time to download and install all the
    components and packages selected.
  prefs: []
  type: TYPE_NORMAL
- en: Android Virtual Devices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Android Virtual Devices** (**AVD**) will enable us to test the code using
    Android emulators. It lets us pick and choose various Android system target versions
    and form factors needed for testing.'
  prefs: []
  type: TYPE_NORMAL
- en: Launch Android Virtual Device manager from **Tools** | **Android** | **AVD Manager**.
  prefs: []
  type: TYPE_NORMAL
- en: 'From the **AVD Manager** window, click on the **Create New Virtual Device**
    button in the bottom left and proceed to the next screen and select the **Wear**
    category:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Android Virtual Devices](img/image00135.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Select **Marshmallow** API Level **23 on x86** and leave everything else as
    the default settings, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Android Virtual Devices](img/image00136.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that the current latest Android version is Marshmallow of API level 23
    at the time of writing. It may or may not be the latest version while you are
    reading this chapter. Feel free to select the latest version that is available
    during that time. Also, if you'd like to support or test in earlier Android versions,
    feel free to do so on that screen.
  prefs: []
  type: TYPE_NORMAL
- en: 'The configuration window will appear after clicking the **Next** button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Android Virtual Devices](img/image00137.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'After the virtual device is selected successfully, you should see that listed
    on the **Android Virtual Devices** list, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Android Virtual Devices](img/image00138.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Although it's not a requirement to use real Android Wear device during development,
    sometimes it may be convenient and faster developing it in a real physical device.
    But for the sake of this book, we'll be primarily covering developing and testing
    using Android emulators.
  prefs: []
  type: TYPE_NORMAL
- en: Let's build a skeleton application
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since we have all the components and configurations needed for building a wearable
    app, let's build a skeleton app and test out what we have so far.
  prefs: []
  type: TYPE_NORMAL
- en: 'From Android Studio''s **Quick Start** menu, click on the **Import an Android
    code sample** option:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Let''s build a skeleton application](img/image00139.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Select **Skeleton Wearable App** from the **Wearable** category:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Let''s build a skeleton application](img/image00140.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Click **Next** and select your preferred project location.
  prefs: []
  type: TYPE_NORMAL
- en: 'As you can see, the skeleton project is cloned from Google''s sample code repository
    from GitHub:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Let''s build a skeleton application](img/image00141.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Clicking on the **Finish** button will pull the source code, and Android Studio
    will compile and build the code and get it ready for execution.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot indicates that the Gradle build has finished successfully
    without any errors. Click on the green play button as shown in the following screenshot
    to run the configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Let''s build a skeleton application](img/image00142.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'When the app starts running, Android Studio will prompt us to select the deployment
    targets. We can select the emulator we created earlier and click **OK**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Let''s build a skeleton application](img/image00143.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'After the code compiles and is uploaded to the emulator, the main activity
    of the Skeleton App will be launched as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Let''s build a skeleton application](img/image00144.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Clicking on the **SHOW NOTIFICATION** tab will show the notification:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Let''s build a skeleton application](img/image00145.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Clicking on **START TIMER** tab will start the timer and run it for 5 seconds,
    and clicking on **FINISH ACTIVITY** will close the activity and take the emulator
    to the home screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Let''s build a skeleton application](img/image00146.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We discussed the process involved in setting up the Android Studio development
    environment by covering the installation instructions, requirements, SDK tools,
    packages, and other components needed for Android Wear development.
  prefs: []
  type: TYPE_NORMAL
- en: We also checked out the source code for a skeleton wearable app from Google's
    sample code repository and successfully ran and tested it on the Android device
    emulator.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we'll be working on a real-world Android Wear application
    from scratch with all the configuration and setup we have created so far.
  prefs: []
  type: TYPE_NORMAL
