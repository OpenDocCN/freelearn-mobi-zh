- en: SiriKit
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SiriKit
- en: Last year, Apple announced the addition of a new framework called **SiriKit**.
    This framework allows developers to leverage Siri in their apps. For the last
    year, SiriKit has been slowly adopted by developers. This year, Apple added even
    more supported domains. In this chapter, we are going to add SiriKit support to
    our app.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 去年，苹果公司宣布新增了一个名为**SiriKit**的新框架。这个框架允许开发者在其应用中利用Siri的功能。在过去的一年里，SiriKit已被开发者逐渐采用。今年，苹果公司增加了更多受支持的领域。在本章中，我们将为我们的应用添加SiriKit支持。
- en: My original goal was to have Siri set up restaurant reservations, but unfortunately,
    Apple software requires this feature to be done using MapKit. Using MapKit is
    not the real issue, though. The real issue is that you have to work with Apple
    to get this set up so that we cannot make restaurant reservations. If you are
    working on an app that needs this feature, then you need to contact Apple support.
    In this chapter, we are going to set up the framework so that we have the ability
    to request money from someone. The setup for SiriKit is quite similar, so once
    you are comfortable doing this chapter, you should not have a problem working
    through the others. Please note that to use SiriKit, you must have a developer
    license to run Siri on your device.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我最初的目标是让Siri设置餐厅预订，但不幸的是，苹果软件要求使用MapKit来完成此功能。使用MapKit并不是真正的问题。真正的问题是，你必须与苹果公司合作才能设置此功能，因此我们无法进行餐厅预订。如果你正在开发需要此功能的应用，那么你需要联系苹果支持。在本章中，我们将设置框架，以便我们能够请求从某人那里获得资金。SiriKit的设置相当类似，所以一旦你熟悉了这一章，你应该不会在处理其他章节时遇到问题。请注意，要使用SiriKit，您必须在设备上拥有开发者许可证才能运行Siri。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖以下主题：
- en: Understanding SiriKit
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解SiriKit
- en: Working with SiriKit extensions
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与SiriKit扩展一起工作
- en: Working with SiriKit UI extensions
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与SiriKit UI扩展一起工作
- en: Understanding SiriKit
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解SiriKit
- en: 'We first need to understand how Siri interacts with our app before we get started. Have
    a look at how it works through this diagram:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，我们首先需要了解Siri如何与我们的应用交互。通过以下图表查看其工作原理：
- en: '![](img/1a37fc7d-2d68-4cbf-88f3-5e627f694aaf.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1a37fc7d-2d68-4cbf-88f3-5e627f694aaf.png)'
- en: A user interacts with Siri to compose a request. Siri takes the request and
    looks through the intents for the requesting app. If the app is not found, Siri
    lets you know. If the app is found, but cannot do what was requested, Siri will
    notify you that the request cannot be done at this time. If the intent can be
    handled by the app, it will pass the information to your app. Your app does what
    it needs to do with that information and reports back to Siri. If the app needs
    further information, it lets Siri know what to request until the app has everything
    it needs or the user cancels the request.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 用户通过与Siri交互来提出请求。Siri接收请求并查找请求应用的意图。如果找不到应用，Siri会通知你。如果找到了应用，但无法完成请求，Siri会通知你请求目前无法完成。如果意图可以被应用处理，它将信息传递给您的应用。您的应用使用这些信息完成所需操作，并向Siri报告。如果应用需要更多信息，它会让Siri知道需要请求什么，直到应用拥有所需的所有信息或用户取消请求。
- en: Supported intents
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 支持的意图
- en: 'As of iOS 11, Apple currently supports the following intents:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 截至iOS 11，苹果目前支持以下意图：
- en: VoIP Calling (initiate calls and search the user's call history)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VoIP通话（发起通话并搜索用户的通话记录）
- en: Messaging (send messages and search the user's received messages)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消息（发送消息并搜索用户的收件箱消息）
- en: Payments (send payments between users or pay bills)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支付（在用户之间发送支付或支付账单）
- en: Lists and notes (create and manage notes and to-do list items)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表和笔记（创建和管理笔记和待办事项列表项）
- en: Visual Codes (convey contact and payment information using Quick Response (QR)
    codes)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视觉代码（使用快速响应（QR）码传达联系和支付信息）
- en: Photos (search for and display photos)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 照片（搜索并显示照片）
- en: Workouts (start, end, and manage fitness routines)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 锻炼（开始、结束和管理健身计划）
- en: Ride booking (book rides and report their status)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预订行程（预订行程并报告其状态）
- en: Car commands (manage vehicle door locks and get the vehicle's status)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 车辆命令（管理车辆门锁和获取车辆状态）
- en: CarPlay (interact with a vehicle's CarPlay system)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CarPlay（与车辆的CarPlay系统交互）
- en: Restaurant reservations (create and manage restaurant reservations with help
    from the *Maps* app)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 餐厅预订（借助*地图*应用创建和管理餐厅预订）
- en: This API requires you to work with Apple Maps before your app can use it. For
    information on how to get started, go to [http://mapsconnect.apple.com](http://mapsconnect.apple.com).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此API要求你在应用可以使用它之前与Apple Maps一起工作。有关如何开始的信息，请访问[http://mapsconnect.apple.com](http://mapsconnect.apple.com)。
- en: We are going to use the Payment intent, which allows us to send payments between
    users or pay bills. When we are done, we can just say *Hey Siri! Send $100 to
    Jason Clayton for dinner last night using LetsEat*. We can hook this up to any
    banking system, but at the moment, we have everything else set up for this. Let's
    get started.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用支付意图，它允许我们在用户之间发送支付或支付账单。完成之后，我们可以说 *嘿 Siri！昨晚用 LetsEat 给 Jason Clayton
    发送 100 美元*。我们可以将其连接到任何银行系统，但目前我们已经为这个设置了所有其他内容。让我们开始吧。
- en: Enable Siri capabilities
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用 Siri 功能
- en: 'The first thing we need to do is enable SiriKit:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是启用 SiriKit：
- en: 'In Xcode, go to your app and select the LetsEat target:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Xcode 中，转到你的应用并选择 `LetsEat` 目标：
- en: '![](img/e2fa805d-b167-4957-b7d9-db485ff042f5.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e2fa805d-b167-4957-b7d9-db485ff042f5.png)'
- en: 'Next, click on the Capabilities tab:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击功能选项卡：
- en: '![](img/dc643328-48ea-4c9c-ba38-22da0f50743b.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dc643328-48ea-4c9c-ba38-22da0f50743b.png)'
- en: 'Then, hit the switch for Siri to switch it to ON:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，按一下开关以激活Siri：
- en: '![](img/3b32341e-041c-4b65-9c62-2927de84aca4.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3b32341e-041c-4b65-9c62-2927de84aca4.png)'
- en: 'You should see the following when you are done:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后你应该会看到以下内容：
- en: '![](img/46567912-929b-42e5-86f6-3dabdff93f17.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/46567912-929b-42e5-86f6-3dabdff93f17.png)'
- en: You need a working developer account to do the following steps. Otherwise, you
    will see errors when trying to follow along. Next, we need to add a new target
    to our project. At the bottom of the TARGETS section, you should see a + button.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要一个有效的开发者账户来完成以下步骤。否则，在尝试跟随时你会看到错误。接下来，我们需要为我们的项目添加一个新的目标。在 TARGETS 部分的底部，你应该会看到一个
    + 按钮。
- en: '![](img/f521c703-fd52-4903-b2fc-90280d2a87a0.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f521c703-fd52-4903-b2fc-90280d2a87a0.png)'
- en: 'Click the + button, and you will see the following screen:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 + 按钮，你会看到以下屏幕：
- en: '![](img/e050088d-d35f-43da-9047-4666b05bf056.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e050088d-d35f-43da-9047-4666b05bf056.png)'
- en: Next, select Intents Extension under the iOS tab. Then hit Next.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在 iOS 选项卡下选择 Intents 扩展。然后点击下一步。
- en: 'In the Options screen that appears, there are some fields to fill out or choose.
    Add the following to the Options screen and then hit Next:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的选项屏幕中，有一些字段需要填写或选择。将以下内容添加到选项屏幕，然后点击下一步：
- en: 'Product Name: `MakePayment`'
  id: totrans-42
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品名称：`MakePayment`
- en: 'Team: Must have a team'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队：必须有团队
- en: 'Organization Name: Your name/company name'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组织名称：你的名字/公司名称
- en: 'Organization Identifier: Your domain name in reverse order'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组织标识符：你的域名反向顺序
- en: 'Language: `Swift`'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语言：`Swift`
- en: 'Include UI Extension: Checked'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含 UI 扩展：勾选
- en: 'Project: `LetsEat`'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目：`LetsEat`
- en: 'Embed in Application: `LetsEat`'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嵌入到应用程序：`LetsEat`
- en: 'This is how it should look:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是它应该看起来的样子：
- en: '![](img/3b02e56e-ff3b-401c-95bb-94cd998b5838.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3b02e56e-ff3b-401c-95bb-94cd998b5838.png)'
- en: 'When you have finished, we will have two extensions added to our project: the
    `MakePayment` and `MakePaymentUI` extensions. These extensions are what we will
    use to add SiriKit to your project. We need to edit these extensions so that they
    can accept payments:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成时，我们将向我们的项目添加两个扩展：`MakePayment` 和 `MakePaymentUI` 扩展。这些扩展就是我们用来将 SiriKit
    添加到项目的工具。我们需要编辑这些扩展，以便它们可以接受支付：
- en: Open the `MakePayment` folder and select the `Info.plist` file.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `MakePayment` 文件夹并选择 `Info.plist` 文件。
- en: 'Open all of the disclosure arrows under `NSExtension`. When they are all open,
    you should see the following:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 展开所有 `NSExtension` 下的展开箭头。当它们全部展开时，你应该会看到以下内容：
- en: '![](img/8e6d5710-8066-42e4-98a9-26433f351371.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8e6d5710-8066-42e4-98a9-26433f351371.png)'
- en: Currently, the app is set up to use the Send Message intent, and we want to
    use the Send Payment intent.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，应用已设置为使用发送消息意图，而我们想使用发送支付意图。
- en: 'Under `IntentsSupported`, delete `Item 1 (INSearchForMessagesIntent)` and `Item
    2 (INSetMessageAttributeIntent)`:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `IntentsSupported` 下删除 `项目 1 (INSearchForMessagesIntent)` 和 `项目 2 (INSetMessageAttributeIntent)`：
- en: '![](img/52e6fb1e-f237-42cd-912d-51a69366c45e.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/52e6fb1e-f237-42cd-912d-51a69366c45e.png)'
- en: Now, for `Item 0`, change `INSendMessageIntent` to `INSendPaymentIntent`.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，对于 `项目 0`，将 `INSendMessageIntent` 更改为 `INSendPaymentIntent`。
- en: 'Under `IntentsRestrictedWhileLocked`, add `INSendPaymentIntent` by clicking
    the + button:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `IntentsRestrictedWhileLocked` 下，通过点击 + 按钮添加 `INSendPaymentIntent`：
- en: '![](img/acecb8b6-1cd9-464b-94d3-d92fc5779b4d.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/acecb8b6-1cd9-464b-94d3-d92fc5779b4d.png)'
- en: 'When finished, you should see the following:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，你应该会看到以下内容：
- en: '![](img/78099d80-c50d-45f5-b7aa-75fe1026938c.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/78099d80-c50d-45f5-b7aa-75fe1026938c.png)'
- en: 'Next, open up `Info.plist` under the `MakePaymentUI` folder, open all the disclosure
    arrows under `NSExtension`, and change `INSendMessageIntent` under `IntentsSupported`
    to `INSendPaymentIntent`:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在 `MakePaymentUI` 文件夹下打开 `Info.plist`，展开 `NSExtension` 下的所有展开箭头，并将 `IntentsSupported`
    下的 `INSendMessageIntent` 更改为 `INSendPaymentIntent`：
- en: '![](img/84c8e407-a9dd-43ea-bd16-36d928c48a4c.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/84c8e407-a9dd-43ea-bd16-36d928c48a4c.png)'
- en: We have finished setting up our plist. Whenever we access something, we always
    have to ask permission, just like we did earlier when we accessed the user's photos.
    In the `Info.plist` file of the *LetsEat* app, we need to update our plist to
    let users know that we need access for Siri and our reason. Add the `NSSiriUsageDescription`
    key.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了我们的plist设置。每次我们访问某个东西时，我们总是必须请求权限，就像我们之前访问用户照片时做的那样。在`*LetsEat*`应用的`Info.plist`文件中，我们需要更新我们的plist，让用户知道我们需要访问Siri以及我们的原因。添加`NSSiriUsageDescription`键。
- en: 'For the key value, enter anything you want as an alert that the user sees.
    In the following example, the value is set as `This app uses Siri to send payments.`:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 对于键值，输入任何你想要的作为用户看到的提示。在以下示例中，值被设置为`This app uses Siri to send payments.`：
- en: '![](img/54f226f0-d50f-4920-a5be-a7511a6674b2.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/54f226f0-d50f-4920-a5be-a7511a6674b2.png)'
- en: 'Now, inside of your `AppDelete`, add the following import after `import UIKit`:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在你的`AppDelete`中，在`import UIKit`之后添加以下导入：
- en: '[PRE0]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, after `setupDefaultColors()`, add the following method:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在`setupDefaultColors()`之后，添加以下方法：
- en: '[PRE1]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then, in your `-application:didFinishLaunchingWithOptions:` under `setupDefaultColors()`,
    add `requestSiriPermissions()`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在你的`-application:didFinishLaunchingWithOptions:`方法下的`setupDefaultColors()`中，添加`requestSiriPermissions()`。
- en: Adding this asks the user for permission to use Siri. Now, if you are going
    to use this in a real app, I would say that you should add a Settings section
    where users can use a switch to turn Siri on or off. You do not want to force
    users to use something without really giving them a reason. In iOS, once you ask
    a user for permission and they decline, they have to go into the Settings section.
    If you want to ask, then it is better to have another dialog box that asks for
    permission; if they say yes, then run the request, and if the users say no, then
    you do nothing. This way you do not have to force your users to go to the phone
    settings to turn this feature on. Now that we have our permissions set up, we
    need to create users that we can send money to.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 添加这个会请求用户允许使用Siri。现在，如果你打算在真实的应用中使用这个功能，我会说你应该添加一个设置部分，用户可以使用开关来打开或关闭Siri。你不想强迫用户使用某物而不真正给他们一个理由。在iOS中，一旦你请求用户权限并且他们拒绝，他们必须进入设置部分。如果你想请求，那么最好有一个另一个对话框来请求权限；如果他们同意，那么运行请求，如果用户说不同意，那么你什么都不做。这样你就不必强迫你的用户去手机设置中打开这个功能。现在我们已经设置了权限，我们需要创建可以发送金钱的用户。
- en: Creating users
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建用户
- en: 'When using SiriKit, it needs to have an `INPerson` object. An `INPerson` object
    is used by Siri to send users things—money in our case. Let''s create this new
    file:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用SiriKit时，它需要一个`INPerson`对象。`INPerson`对象被Siri用来发送用户东西——在我们的例子中是金钱。让我们创建这个新文件：
- en: Right-click the `Misc` folder and select New File.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击`Misc`文件夹并选择新建文件。
- en: Inside of the Choose a template for your new file screen, select iOS at the
    top, and then Swift. Then, hit Next.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选择新文件模板的屏幕上，顶部选择iOS，然后选择Swift。然后，点击下一步。
- en: Save the file as `RestaurantContact`.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为`RestaurantContact`。
- en: Click Create.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击创建。
- en: 'Add the following code to this file:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到该文件中：
- en: '[PRE2]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here, we are creating contacts that we can use to ask Siri to send money. We
    have set up three people to accept money at this time: Jason Clayton, Joshua Clayton,
    and Teena Harris. When we request with Siri, these are the names that it looks
    for to see if the person exists. If the name is not in this list, Siri lets you
    know that the name is not found. This list can have any name you wish to have,
    so if you want to change the names to something else, you can do that now. Just
    make sure that when we get to the requesting section, you change the name there
    as well. Our `inPerson()` method is just formatting into a format that SiriKit
    needs to be able to read the object. We now need to add code that runs when the
    send payment intent is invoked.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们正在创建可以用来请求Siri发送金钱的联系人。我们已设置三个人来接受金钱：Jason Clayton，Joshua Clayton和Teena
    Harris。当我们用Siri请求时，这些是它查找的名称，以查看该人是否存在。如果名字不在列表中，Siri会告诉你名字未找到。这个列表可以有任何你想要的名称，所以如果你想将名字改为其他东西，现在可以这么做。只需确保当我们到达请求部分时，你也要在那里更改名字。我们的`inPerson()`方法只是将格式化为SiriKit需要读取的对象的格式。我们现在需要添加在发送支付意图被调用时运行的代码。
- en: Updating our intent handler
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新我们的意图处理器
- en: 'We can now finally add our code that runs when the Send Payment intent is invoked.
    Open the `IntentHandler` class inside of the `MakePayment` extension folder. After
    the import intents line deletes everything else from this file, add the following
    code:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以最终添加在发送支付意图被调用时运行的代码。打开`MakePayment`扩展文件夹中的`IntentHandler`类。在删除此文件中除导入意图行之外的所有内容后，添加以下代码：
- en: '[PRE3]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Here, we are creating a custom intent handler. When the intent is to send payment,
    we want to run our `SendMoneyIntent` class. We need to create this file next.
    In the same file direction under the `IntentHandler` class, add the following:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们正在创建一个自定义意图处理器。当意图是发送支付时，我们想要运行我们的`SendMoneyIntent`类。我们需要创建这个文件。在`IntentHandler`类相同的文件路径下，添加以下内容：
- en: '[PRE4]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In this class, the `handle()` method responds to a `SendPaymentIntent`. We
    are printing the person''s display name and amount. We pass a completion block
    here, but in real production code, you would run whatever API you are using to
    verify the payment. Add the following inside of the `SendMoney` intent under the
    `handle()` method:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个类中，`handle()`方法响应`SendPaymentIntent`。我们正在打印人员的显示名称和金额。我们在这里传递一个完成块，但在实际生产代码中，你会运行你正在使用的任何API来验证支付。在`handle()`方法下`SendMoney`意图内添加以下内容：
- en: '[PRE5]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In this method, we are getting the payee information and checking to see if
    the person matches within our contacts. We are looping through the contacts and
    looking for a match. When completed, we return the result to Siri. If the user
    is not found, then Siri will tell you that the person is not found. If Siri finds
    the person, then `PaymentIntent` continues. Lastly, inside of the `IntentViewController`,
    update the `desiredSize` variable to the following:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方法中，我们正在获取收款人信息并检查是否在联系人中找到匹配的人。我们正在遍历联系人并寻找匹配项。完成后，我们将结果返回给Siri。如果找不到用户，Siri会告诉你找不到这个人。如果Siri找到了这个人，那么`PaymentIntent`继续。最后，在`IntentViewController`中，更新`desiredSize`变量为以下：
- en: '[PRE6]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Here, we are setting the size of the UI to a `height` of `150`. Let's look at
    how we can test this.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们正在设置UI的大小为`高度`为`150`。让我们看看我们如何测试这一点。
- en: Testing Siri
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试Siri
- en: 'We can test Siri on a device or in the simulator. If you want to test on a
    device, just change the target to the `MakePayment` target and plug in your iOS
    11 device. If you want to test this in the simulator, we need to do the following:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在设备或模拟器上测试Siri。如果你想测试在设备上，只需将目标更改为`MakePayment`目标，并连接你的iOS 11设备。如果你想在这个模拟器中测试，我们需要做以下操作：
- en: First, go to `Settings` in the iPhone Simulator.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，前往iPhone模拟器的`Settings`。
- en: Next, select Siri.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择Siri。
- en: Click the switch to enable Press Home for Siri.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击开关以启用按Home键唤醒Siri。
- en: Select Enable Siri.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择启用Siri。
- en: 'Now, you have two options. You can run the app and Siri in the simulator. At
    this point, you can say `Send $100 to Jason Clayton for dinner last night using
    LetsEat` (or you use the name of whomever you added to the contacts we created
    earlier). Option two is that you can enter text that you want to display each
    time. To set up this text, every time you run the app, select the `MakePayment`
    scheme:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你有两个选择。你可以在模拟器中运行应用和Siri。在这个时候，你可以说“Send $100 to Jason Clayton for dinner
    last night using LetsEat”（或者你使用之前创建的联系人中添加的任何人的名字）。第二个选择是你可以输入你想要每次显示的文本。要设置此文本，每次运行应用时，选择`MakePayment`方案：
- en: '![](img/3fd2a5d1-2938-4db6-96ea-a1fb45c2cd85.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3fd2a5d1-2938-4db6-96ea-a1fb45c2cd85.png)'
- en: 'Then, hit the Scheme dropdown again and select Edit Scheme...:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，再次点击方案下拉菜单并选择编辑方案...：
- en: '![](img/1ae0c8df-1391-496c-9610-4892a7e60063.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1ae0c8df-1391-496c-9610-4892a7e60063.png)'
- en: 'Then, under Siri Intent Query, put in the desired text, such as `Send $100
    to Jason Clayton for dinner last night using LetsEat`, and then hit Close:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在Siri Intent Query下输入所需的文本，例如`Send $100 to Jason Clayton for dinner last
    night using LetsEat`，然后点击关闭：
- en: '![](img/01c10095-2700-4278-9dc6-89a21b60cb8d.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/01c10095-2700-4278-9dc6-89a21b60cb8d.png)'
- en: 'Remember that we have the `MakePayment` scheme. Run the `MakePayment` scheme,
    and the first thing that will happen is that Siri will first ask you for permission:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 记住我们有一个`MakePayment`方案。运行`MakePayment`方案，首先会发生的事情是Siri会首先要求你给予权限：
- en: '![](img/b8d1c211-3657-49fe-bb29-6a411f1032cb.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b8d1c211-3657-49fe-bb29-6a411f1032cb.png)'
- en: 'When you accept, Siri will show you your request and ask if you accept it:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你接受时，Siri会显示你的请求并询问你是否接受：
- en: '![](img/aaedc26a-1953-4e09-9b45-44e120ba8815.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/aaedc26a-1953-4e09-9b45-44e120ba8815.png)'
- en: 'When you accept, you will see that your money''s been sent. In our example,
    we are not actually sending money, so this step will always goes through:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 当你接受时，你会看到你的钱已经发送。在我们的例子中，我们实际上并没有发送钱，所以这个步骤总是会通过：
- en: '![](img/76f6b2b7-6949-498b-995f-640438a04c03.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/76f6b2b7-6949-498b-995f-640438a04c03.png)'
- en: 'Note that the reason Siri is asking for permission is that we are running Siri
    first instead of the app. If we ran the app, we would get the following:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Siri请求权限的原因是我们首先运行的是Siri而不是应用。如果我们运行的是应用，我们会得到以下内容：
- en: '![](img/a9f2d029-071e-4e91-9ce6-2164e825bda3.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a9f2d029-071e-4e91-9ce6-2164e825bda3.png)'
- en: We are now done. We did not do anything with our UI, but you can add anything
    you want to your UI, such as a logo, a view or display to show to the payee, or
    whatever you decide. Have fun with it and make it your own.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经完成了。我们没有对我们的用户界面（UI）做任何事情，但你可以在你的UI中添加任何你想要的东西，比如一个标志、一个视图或显示给收款人的显示内容，或者你决定的其他任何内容。享受这个过程，让它成为你自己的。
- en: Summary
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we looked at how to integrate Siri into our app. Even though
    Siri is limited to specific intents, we can still find unique ways to use it,
    such as using it for messaging, notes, and lists. The overall setup for each intent
    is the same—the only difference is what you do once the intent hits your app.
    In the next chapter, we will look at how to distribute our app to others for testing,
    as well as how to submit our app to the App Store.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了如何将Siri集成到我们的应用中。尽管Siri仅限于特定的意图，我们仍然可以找到独特的方式来使用它，例如用于消息、笔记和列表。每个意图的整体设置都是相同的——唯一的区别是你一旦意图触达你的应用后所做的事情。在下一章中，我们将探讨如何将我们的应用分发给他人进行测试，以及如何将我们的应用提交到App
    Store。
