- en: '*Chapter 10*: Building Your User Interface'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第10章*：构建您的用户界面'
- en: In the previous chapter, you created a new Xcode project, added a tab bar to
    your app that allowed the user to select between the `Assets.xcassets` file that
    contains resources for your app, and modified the **Launch** screen of your app
    with a custom color and icon. When your app is launched, you should see the **Launch**
    screen briefly. After that, the **Explore** screen is displayed, but it is currently
    blank.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，您创建了一个新的Xcode项目，向您的应用添加了一个标签栏，允许用户在包含您的应用资源的`Assets.xcassets`文件和修改应用的自定义颜色和图标之间进行选择。当您的应用启动时，您应该会看到**启动**屏幕短暂显示。之后，**探索**屏幕将显示，但目前它是空的。
- en: As you saw in the app tour in [*Chapter 9*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133),
    *Setting Up the User Interface*, the **Explore** screen should display a collection
    view showing a list of cuisines in collection view cells and a collection view
    section header containing a **LOCATION** button. Tapping the **LOCATION** button
    should display a **Locations** screen containing a list of locations.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在[*第9章*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133)的“设置用户界面”应用浏览中看到的那样，**探索**屏幕应显示一个集合视图，显示一系列在集合视图单元格中的菜系，以及包含一个**位置**按钮的集合视图部分标题。点击**位置**按钮应显示一个包含位置列表的**位置**屏幕。
- en: In this chapter, you will make the **Explore** screen display a **collection
    view** containing 20 empty **collection view cells**, as well as a **collection
    view section header** containing a button that will display a view representing
    the **Locations** screen when tapped. You'll also configure a **Cancel** button
    to dismiss this view and return you to the **Explore** screen.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将使**探索**屏幕显示一个包含20个空**集合视图单元格**的**集合视图**，以及一个包含一个按钮的**集合视图部分标题**，当点击该按钮时，将显示表示**位置**屏幕的视图。您还将配置一个**取消**按钮来关闭此视图并返回到**探索**屏幕。
- en: You'll be adding a small amount of code to your app, but don't worry too much
    about this—you'll learn more about it in the next part of this book.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在您的应用中添加少量代码，但不必过于担心这一点——您将在本书的下一部分了解更多关于它的内容。
- en: By the end of this chapter, you'll have learned how to add view controllers
    to a storyboard scene, link outlets in view controllers to scenes, set up collection
    view cells and collection view section headers, and present a view controller
    modally.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将学会如何将视图控制器添加到故事板场景中，将视图控制器中的出口链接到场景，设置集合视图单元格和集合视图部分标题，以及以模态方式呈现视图控制器。
- en: 'In this chapter, you''ll cover the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将涵盖以下主题：
- en: Adding a collection view to the **Explore** screen
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**探索**屏幕中添加集合视图
- en: Connecting storyboard elements to outlets in a view controller
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将故事板元素连接到视图控制器中的出口
- en: Configuring data source methods for the collection view
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置集合视图的数据源方法
- en: Adding a collection view section header to the collection view
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向集合视图中添加集合视图部分标题
- en: Configuring storyboard element sizes
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置故事板元素大小
- en: Presenting a view modally
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以模态方式呈现视图
- en: Technical requirements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will continue working on the `LetsEat` project that you created in the previous
    chapter.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您将继续在上一章中创建的`LetsEat`项目中工作。
- en: 'The completed Xcode project for this chapter is in the `Chapter10` folder of
    the code bundle for this book, which can be downloaded here:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本章完成的Xcode项目位于本书代码包的`Chapter10`文件夹中，可在此处下载：
- en: '[https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition](https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition](https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition)'
- en: 'Check out the following video to see the code in action:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频以查看代码的实际效果：
- en: '[https://bit.ly/3kjIKFQ](https://bit.ly/3kjIKFQ)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://bit.ly/3kjIKFQ](https://bit.ly/3kjIKFQ)'
- en: Let's start by adding a collection view to the **Explore** scene, which will
    eventually display the list of cuisines and the **LOCATION** button.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从向**探索**场景添加集合视图开始，这将最终显示菜系列表和**位置**按钮。
- en: Adding a collection view to the Explore screen
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在探索屏幕中添加集合视图
- en: A collection view is an instance of the `UICollectionView` class. Like a spreadsheet
    program, it displays a grid of cells. Each cell in a collection view is a collection
    view cell, which is an instance of the `UICollectionViewCell` class. You'll start
    by adding a collection view to the view controller scene for the `Main` storyboard
    file, then you'll add Auto Layout constraints to make it fill the screen.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 收集视图是`UICollectionView`类的实例。类似于电子表格程序，它显示一个单元格网格。收集视图中的每个单元格都是一个收集视图单元格，它是`UICollectionViewCell`类的实例。您将首先将收集视图添加到`Main`故事板文件的视图控制器场景中，然后添加自动布局约束使其填满屏幕。
- en: Important Information
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 重要信息
- en: For more information on Auto Layout and how to use it, go to [https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/](https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 有关自动布局及其使用方法的更多信息，请访问[https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/](https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/)。
- en: 'Open the `LetsEat` project you created in the previous chapter and run the
    app to make sure everything still works as it should, then follow these steps:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 打开上一章中创建的“LetsEat”项目并运行应用程序，以确保一切仍然按预期工作，然后按照以下步骤操作：
- en: 'Click the `Main` storyboard file in the Project navigator, and click the Library
    button:![Figure 10.1: Toolbar with the Library button shown'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击“Main”故事板文件，然后点击“库”按钮：![图 10.1：显示库按钮的工具栏
- en: '](img/Figure_10.01_B17469.jpg)'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片 10.01_B17469.jpg](img/Figure_10.01_B17469.jpg)'
- en: 'Figure 10.1: Toolbar with the Library button shown'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.1：显示库按钮的工具栏
- en: 'The library will appear. Make sure the Objects button is selected, then type
    `collec` in the filter field. A **Collection View** object will appear as one
    of the results. Drag it to the middle of the view of the **View Controller Scene**
    for the **Explore** screen:![Figure 10.2: Library with Collection View object
    selected'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 程序库将出现。确保已选择“对象”按钮，然后在过滤器字段中输入`collec`。一个**收集视图**对象将作为结果之一出现。将其拖动到**探索**屏幕的**视图控制器场景**视图的中间：![图
    10.2：已选择收集视图对象的程序库
- en: '](img/Figure_10.02_B17469.jpg)'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片 10.02_B17469.jpg](img/Figure_10.02_B17469.jpg)'
- en: 'Figure 10.2: Library with Collection View object selected'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.2：已选择收集视图对象的程序库
- en: The collection view (containing a single prototype cell) has been added, but
    it only takes up a small part of the screen. As shown in the app tour in the previous
    chapter, it should fill the screen.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已添加收集视图（包含一个原型单元格），但它只占据了屏幕的一小部分。如前一章的应用程序游览中所示，它应该填满屏幕。
- en: 'You will use the **Auto Layout Add New Constraints** button to bind the edges
    of the collection view to the edges of its enclosing view. Make sure the collection
    view is selected. Click the Auto Layout Add New Constraints button:![Figure 10.3:
    View controller scene with collection view selected'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将使用“自动布局添加新约束”按钮将收集视图的边缘绑定到其包含视图的边缘。确保已选择收集视图。点击“自动布局添加新约束”按钮：![图 10.3：已选择收集视图的视图控制器场景
- en: '](img/Figure_10.03_B17469.jpg)'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片 10.03_B17469.jpg](img/Figure_10.03_B17469.jpg)'
- en: 'Figure 10.3: View controller scene with collection view selected'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.3：已选择收集视图的视图控制器场景
- en: Type `0` in the top, left, right, and bottom edge constraint fields and click
    all the pale red struts. Make sure all the struts have turned bright red. Click
    the `0`, binding the collection view's edges to those of the enclosing view. Now
    the collection view will fill the screen, regardless of device and orientation.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部、左侧、右侧和底部边缘约束字段中输入`0`，然后点击所有浅红色支柱。确保所有支柱都已变为亮红色。点击`0`，将收集视图的边缘绑定到包含视图的边缘。现在，收集视图将填满屏幕，无论设备类型和方向如何。
- en: 'Verify that all four sides of the collection view are now bound to the edges
    of the screen as shown:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认收集视图的四面现在都已绑定到屏幕的边缘，如图所示：
- en: '![Figure 10.5: View controller scene with collection view filling the screen'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.5：已填满屏幕的收集视图的视图控制器场景'
- en: '](img/Figure_10.05_B17469.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 10.05_B17469.jpg](img/Figure_10.05_B17469.jpg)'
- en: 'Figure 10.5: View controller scene with collection view filling the screen'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.5：已填满屏幕的收集视图的视图控制器场景
- en: You have added a collection view to the view of the view controller scene for
    the **Explore** screen, and used Auto Layout constraints to make it fill the screen,
    but the **Explore** screen will still be blank when you run the app.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您已将收集视图添加到**探索**屏幕的视图控制器场景视图中，并使用自动布局约束使其填满屏幕，但运行应用程序时**探索**屏幕仍然为空。
- en: In the next section, you will add a `ExploreViewController` class, and you'll
    connect outlets in this class to the UI elements in the `ExploreViewController`
    class to control what is displayed by the **Explore** screen.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，你将添加一个`ExploreViewController`类，并将在这个类中连接出口到`ExploreViewController`类中的UI元素，以控制**Explore**屏幕显示的内容。
- en: Connecting storyboard elements to outlets in a view controller
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将故事板元素连接到视图控制器中的出口
- en: You've added a collection view to the `UIViewController` subclass in that file,
    and connect UI elements in the `UIViewController` subclass.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经在该文件中的`UIViewController`子类中添加了一个集合视图，并将UI元素连接到`UIViewController`子类。
- en: Important Information
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 重要信息
- en: The Model-View-Controller design pattern and collection view controllers will
    be explained in more detail in [*Chapter 13*](B17469_13_Final_VK_ePub.xhtml#_idTextAnchor194),
    *Getting Started with MVC and Collection Views*.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第13章*](B17469_13_Final_VK_ePub.xhtml#_idTextAnchor194)“开始使用MVC和集合视图”中，将更详细地解释模型-视图-控制器设计模式和集合视图控制器。
- en: Let's start by adding a Cocoa Touch Class file to your project so you can declare
    and define a `UIViewController` subclass in the next section.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先向项目中添加一个Cocoa Touch类文件，这样你就可以在下一节中声明和定义一个`UIViewController`子类。
- en: Adding a Cocoa Touch Class file to your project
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向项目中添加Cocoa Touch类文件
- en: '**Cocoa Touch** is the application development environment for building apps
    for iOS, iPadOS, watchOS, and tvOS. A Cocoa Touch Class file makes it easy for
    you to implement any Cocoa Touch class or subclass. It contains boilerplate code
    based on the superclass that you specified when you create it. You''ll add a Cocoa
    Touch Class file to your project in this section.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cocoa Touch**是用于构建iOS、iPadOS、watchOS和tvOS应用的开发环境。Cocoa Touch类文件使你能够轻松实现任何Cocoa
    Touch类或子类。它包含基于你在创建时指定的超类的样板代码。你将在本节中将Cocoa Touch类文件添加到你的项目中。'
- en: 'First, you will make a new `Explore` group in your project to keep things organized.
    Next, you will create and add a Cocoa Touch Class file, `ExploreViewController`,
    to this group. You''ll declare and define a subclass of the `UIViewController`
    class named `ExploreViewController` in this file and make an instance of this
    class the view controller for the **Explore** screen. You''ll add properties and
    methods to this class to manage the collection view that you added in the previous
    section. Follow these steps:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你将在项目中创建一个新的`Explore`组以保持事物有序。接下来，你将创建并添加一个名为`ExploreViewController`的Cocoa
    Touch类文件到这个组。你将在该文件中声明和定义一个名为`ExploreViewController`的`UIViewController`类子类，并将这个类的实例设置为**Explore**屏幕的视图控制器。你将向这个类添加属性和方法来管理你在上一节中添加的集合视图。按照以下步骤操作：
- en: Right-click on the `LetsEat` group in the Project navigator and choose **New
    Group**.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中右键点击`LetsEat`组，然后选择**新建组**。
- en: 'The name of the group will be highlighted. Change it to `Explore` and press
    *Return* on the keyboard when you''re done:![Figure 10.6: Project navigator with
    Explore group selected'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '组的名称将被突出显示。完成更改后，按键盘上的*Return*键：![Figure 10.6: 已选择Explore组的项目导航器'
- en: '](img/Figure_10.06_B17469.jpg)'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_10.06_B17469.jpg]'
- en: 'Figure 10.6: Project navigator with Explore group selected'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.6：已选择Explore组的项目导航器
- en: If you make a mistake, press *Return* once more. This makes the field editable
    so that you can make changes to the name.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你犯了错误，请再按一次*Return*键。这将使字段可编辑，以便你可以更改名称。
- en: Right-click on the `Explore` group in the Project navigator and choose **New
    File...**.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中右键点击`Explore`组，然后选择**新建文件...**。
- en: '**iOS** should already be selected. Choose **Cocoa Touch Class** and click
    **Next**:![Figure 10.7: Choose a template for your new file screen'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**iOS**应该已经选中。选择**Cocoa Touch Class**并点击**下一步**：![Figure 10.7: 选择新文件的模板屏幕'
- en: '](img/Figure_10.07_B17469.jpg)'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_10.07_B17469.jpg]'
- en: 'Figure 10.7: Choose a template for your new file screen'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.7：选择新文件的模板屏幕
- en: 'The **Choose options for your new file** screen will appear:![Figure 10.8:
    Choose options for your new file screen'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**选择新文件选项**屏幕将出现：![Figure 10.8: 选择新文件选项屏幕'
- en: '](img/Figure_10.08_B17469.jpg)'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_10.08_B17469.jpg]'
- en: 'Figure 10.8: Choose options for your new file screen'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.8：选择新文件选项屏幕
- en: Enter the following in the `ExploreViewController`
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`ExploreViewController`中输入以下内容
- en: '`UIViewController`'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`UIViewController`'
- en: Click **Next**.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击**下一步**。
- en: Click `ExploreViewController` file has been added to the project inside the
    `Explore` folder in the Project navigator. Review the code in the Editor area.
    Note that `ExploreViewController` is a subclass of `UIViewController`, which means
    it inherits properties and methods from the `UIViewController` class. There is
    one method, `viewDidLoad()`, inside the class definition, but it won't be used
    right now.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`ExploreViewController`文件已添加到项目中的`Explore`文件夹内的项目导航器中。在编辑区域中查看代码。注意，`ExploreViewController`是`UIViewController`的子类，这意味着它从`UIViewController`类继承属性和方法。在类定义中有一个方法，即`viewDidLoad()`，但现在不会使用它。
- en: 'Remove the commented code after the `viewDidLoad()` class from the `ExploreViewController`
    file so that it looks like this:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`ExploreViewController`文件中的`viewDidLoad()`类之后删除注释代码，使其看起来像这样：
- en: '![Figure 10.9: Editing area showing ExploreViewController.swift''s contents'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.9：显示ExploreViewController.swift内容的编辑区域'
- en: '](img/Figure_10.09_B17469.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.09_B17469.jpg)'
- en: 'Figure 10.9: Editing area showing ExploreViewController.swift''s contents'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.9：显示ExploreViewController.swift内容的编辑区域
- en: You have just added the `ExploreViewController` file containing the `ExploreViewController`
    class declaration and definition to your app.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚将包含`ExploreViewController`类声明和定义的`ExploreViewController`文件添加到你的应用程序中。
- en: The next step is to assign the `ExploreViewController` class as the identity
    of the view controller for the **Explore** screen and assign an **outlet** for
    the collection view that you added to the view controller scene earlier. You'll
    see how this is done in the next section.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将`ExploreViewController`类分配为**探索**屏幕的视图控制器身份，并为之前添加到视图控制器场景中的集合视图分配一个**出口**。你将在下一节中看到如何完成这个操作。
- en: Connecting storyboard elements to the view controller
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将故事板元素连接到视图控制器
- en: Let's review where you are now. In the `Main` storyboard file, you have a view
    controller scene for the `ExploreViewController` file, you have code that declares
    and defines the `ExploreViewController` class.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下你现在所在的位置。在`Main`故事板文件中，你有一个`ExploreViewController`文件的视图控制器场景，你有一个声明和定义`ExploreViewController`类的代码。
- en: 'You need to assign the `ExploreViewController` class as the identity for the
    `ExploreViewController` class the view controller for the **Explore** screen when
    you run your app and enable you to manage what is displayed by the collection
    view. Follow these steps:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行应用程序并启用你管理集合视图显示时，你需要将`ExploreViewController`类分配为`Explore`屏幕视图控制器的身份。按照以下步骤操作：
- en: 'Click on the `Main` storyboard file in the Project navigator. Make sure the
    **View Controller Scene** for the **Explore** screen is selected. Click the **View
    Controller** icon in the document outline and click on the Identity inspector
    button:![Figure 10.10: Identity inspector selected'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击`Main`故事板文件。确保已选择**探索**屏幕的**视图控制器场景**。在文档大纲中点击**视图控制器**图标，然后点击标识符检查器按钮：![图10.10：已选择标识符检查器
- en: '](img/Figure_10.10_B17469.jpg)'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_10.10_B17469.jpg)'
- en: 'Figure 10.10: Identity inspector selected'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.10：已选择标识符检查器
- en: 'Under `ExploreViewController`:![Figure 10.11: Identity inspector with Class
    set to ExploreViewController'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`ExploreViewController`下：![图10.11：将类设置为ExploreViewController的标识符检查器
- en: '](img/Figure_10.11_B17469.jpg)'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_10.11_B17469.jpg)'
- en: 'Figure 10.11: Identity inspector with Class set to ExploreViewController'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.11：将类设置为ExploreViewController的标识符检查器
- en: This creates an instance of `ExploreViewController` as the view controller for
    this scene when you run the app. Note that the scene name has changed from **View
    Controller Scene** to **Explore View Controller Scene**.
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你运行应用程序时，这会创建一个`ExploreViewController`实例作为该场景的视图控制器。请注意，场景名称已从**视图控制器场景**更改为**探索视图控制器场景**。
- en: Now let's create the outlet for the collection view.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在让我们为集合视图创建出口。
- en: 'Click the Navigator and Inspector buttons to hide the Navigator and Inspector
    areas so you have more room to work:![Figure 10.12: Toolbar showing Navigator
    and Inspector buttons'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击导航器和检查器按钮以隐藏导航器和检查器区域，以便你有更多空间工作：![图10.12：显示导航器和检查器按钮的工具栏
- en: '](img/Figure_10.12_B17469.jpg)'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_10.12_B17469.jpg)'
- en: 'Figure 10.12: Toolbar showing Navigator and Inspector buttons'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.12：显示导航器和检查器按钮的工具栏
- en: 'Click the Adjust Editor Options button:![Figure 10.13: Adjust Editor Options
    button'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击调整编辑器选项按钮：![图10.13：调整编辑器选项按钮
- en: '](img/Figure_10.13_B17469.jpg)'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_10.13_B17469.jpg)'
- en: 'Figure 10.13: Adjust Editor Options button'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.13：调整编辑器选项按钮
- en: 'Choose **Assistant** from the pop-up menu:![Figure 10.14: Adjust Editor Options
    menu with Assistant selected'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从弹出菜单中选择**助手**：![图10.14：选择“助手”调整编辑选项菜单
- en: '](img/Figure_10.14_B17469.jpg)'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_10.14_B17469.jpg)'
- en: 'Figure 10.14: Adjust Editor Options menu with Assistant selected'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.14：选择“助手”调整编辑选项菜单
- en: This will display any Swift files associated with this scene in an assistant
    editor.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将在辅助编辑器中显示与此场景关联的任何Swift文件。
- en: 'As you can see, the `Main` storyboard file''s content appears on the left and
    the `ExploreViewController` class definition appears on the right-hand side of
    the Editor area. Look at the bar just above the code. Verify that `ExploreViewController.swift`
    is selected:![Figure 10.15: Bar showing ExploreViewController.swift selected'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如您所见，`Main`故事板文件的内容显示在编辑区域左侧，而`ExploreViewController`类定义显示在右侧。查看代码上方的小条形图。验证`ExploreViewController.swift`是否已选择：![图10.15：显示已选择`ExploreViewController.swift`的条形图
- en: '](img/Figure_10.15_B17469.jpg)'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_10.15_B17469.jpg)'
- en: 'Figure 10.15: Bar showing ExploreViewController.swift selected'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.15：显示已选择`ExploreViewController.swift`的条形图
- en: If you don't see `ExploreViewController.swift` selected, click the bar and select
    `ExploreViewController.swift` from the pop-up menu.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您没有看到已选择`ExploreViewController.swift`，请单击条形图，并从弹出菜单中选择`ExploreViewController.swift`。
- en: 'To connect the collection view in the `ExploreViewController` class, *Ctrl*
    + *Drag* from the collection view to the `ExploreViewController` file, just below
    the class name declaration:![Figure 10.16: Editing area'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要连接`ExploreViewController`类中的集合视图，*Ctrl* + *拖动*从集合视图到类名声明下方`ExploreViewController`文件：![图10.16：编辑区域
- en: '](img/Figure_10.16_B17469.jpg)'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_10.16_B17469.jpg)'
- en: 'Figure 10.16: Editing area'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.16：编辑区域
- en: 'A small pop-up dialog box will appear. Type the name of the outlet, `collectionView`,
    into the **Name** text field, set **Storage** to **Strong**, and click **Connect**:![Figure
    10.17: Pop-up dialog box for outlet creation'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会弹出一个小的弹出对话框。在**名称**文本框中输入出口名称`collectionView`，将**存储**设置为**强**，然后单击**连接**：![图10.17：创建出口的弹出对话框
- en: '](img/Figure_10.17_B17469.jpg)'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_10.17_B17469.jpg)'
- en: 'Figure 10.17: Pop-up dialog box for outlet creation'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.17：创建出口的弹出对话框
- en: 'Verify that the code that creates the `collectionView` outlet has been automatically
    added to the `ExploreViewController` file. Note the `IBOutlet` keyword, which
    indicates that `collectionView` is an outlet. After you have done so, click the
    **x** to close the assistant editor window:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证创建`collectionView`出口的代码是否已自动添加到`ExploreViewController`文件中。注意`IBOutlet`关键字，它表示`collectionView`是一个出口。完成此操作后，单击**x**关闭助手编辑器窗口：
- en: '![Figure 10.18: Editing area showing collectionView outlet'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.18：显示collectionView出口的编辑区域'
- en: '](img/Figure_10.18_B17469.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_10.18_B17469.jpg)'
- en: 'Figure 10.18: Editing area showing collectionView outlet'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.18：显示collectionView出口的编辑区域
- en: The `ExploreViewController` class now has an outlet, `collectionView`, for the
    collection view in the `ExploreViewController` instance can manage what the collection
    view displays.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，`ExploreViewController`类有一个出口，`collectionView`，用于在`ExploreViewController`实例中管理集合视图显示的内容。
- en: 'It is common to make mistakes when using *Ctrl + Drag* to drag from an element
    in a storyboard scene to a Cocoa Touch Class file. If you make a mistake while
    doing so, this may cause a crash to occur when the app is launched. To check if
    there are any errors in the connection between the collection view and `ExploreViewController`
    class, follow these steps:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用*Ctrl + 拖动*从故事板场景中的元素拖动到Cocoa Touch类文件时，容易出现错误。如果在这样做时出错，这可能会导致应用程序启动时崩溃。要检查集合视图和`ExploreViewController`类之间的连接是否存在错误，请按照以下步骤操作：
- en: Click the Navigator and Inspector buttons to display the Navigator and Inspector
    areas.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击导航器和检查器按钮以显示导航器和检查器区域。
- en: With `collectionView` outlet connected to the collection view in the **Outlets**
    section.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**出口**部分，将`collectionView`出口连接到集合视图。
- en: 'If you see a tiny error icon, click on the **x** to break the connection:![Figure
    10.20: Connections inspector showing collectionView outlet'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您看到一个微小的错误图标，请单击**x**断开连接：![图10.20：显示collectionView出口的连接检查器
- en: '](img/Figure_10.20_B17469.jpg)'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_10.20_B17469.jpg)'
- en: 'Figure 10.20: Connections inspector showing collectionView outlet'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.20：显示collectionView出口的连接检查器
- en: 'Under **Outlets**, drag from the **collectionView** outlet back to the collection
    view to re-establish the connection:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**出口**下，将`collectionView`出口从**collectionView**拖动回来以重新建立连接：
- en: '![Figure 10.21: Editing area showing collection view to be connected'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.21：显示要连接的收集视图的编辑区域'
- en: '](img/Figure_10.21_B17469.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.21_B17469.jpg)'
- en: 'Figure 10.21: Editing area showing collection view to be connected'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.21：显示要连接的收集视图的编辑区域
- en: At this point, you've assigned the `ExploreViewController` class as the identity
    for the `ExploreViewController` class for the collection view.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经将 `ExploreViewController` 类分配为收集视图的 `ExploreViewController` 类的身份。
- en: In order to display collection view cells on screen, you will need to implement
    data source methods for the collection view by adding some code to the `ExploreViewController`
    class. You will do this in the next section.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在屏幕上显示收集视图单元格，你需要通过在 `ExploreViewController` 类中添加一些代码来实现收集视图的数据源方法。你将在下一节中这样做。
- en: Configuring data source methods for the collection view
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置用于收集视图的数据源方法
- en: When your app is running, an instance of the `ExploreViewController` class acts
    as the view controller for the `UICollectionViewDataSource`, for this purpose.
    All you need to do is connect the collection view's `dataSource` outlet to the
    `ExploreViewController` class and implement the required methods of this protocol.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的应用运行时，`ExploreViewController` 类的一个实例充当 `UICollectionViewDataSource` 的视图控制器，为此目的。你所需要做的就是将收集视图的
    `dataSource` 输出口连接到 `ExploreViewController` 类，并实现该协议的所需方法。
- en: The collection view also needs to know what to do if the user taps on a collection
    view cell. Again, the view controller for the collection view is responsible,
    and Apple has created the `UICollectionViewDelegate` protocol for this purpose.
    You will connect the collection view's `delegate` outlet to the `ExploreViewController`
    class, but you won't be implementing any methods from this protocol yet.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 收集视图还需要知道如果用户点击收集视图单元格时应该做什么。同样，收集视图的视图控制器负责此事，苹果为此创建了 `UICollectionViewDelegate`
    协议。你将连接收集视图的 `delegate` 输出口到 `ExploreViewController` 类，但你现在不会实现该协议的任何方法。
- en: Tip
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Protocols are covered in [*Chapter 8*](B17469_08_Final_VK_ePub.xhtml#_idTextAnchor123)*,
    Protocols, Extensions, and Error Handling*.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 协议在 [*第8章*](B17469_08_Final_VK_ePub.xhtml#_idTextAnchor123)*，协议、扩展和错误处理* 中有所介绍。
- en: You will need to type in a small amount of code in this chapter. Don't worry
    about what it means; you'll learn more about collection view controllers and their
    associated protocols in [*Chapter 13*](B17469_13_Final_VK_ePub.xhtml#_idTextAnchor194)*,
    Getting Started with MVC and Collection Views*.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要在本章中输入一小段代码。不用担心它的含义；你将在 [*第13章*](B17469_13_Final_VK_ePub.xhtml#_idTextAnchor194)*，MVC
    和收集视图入门* 中了解更多关于收集视图控制器及其相关协议的内容。
- en: In the next section, you'll use the Connections inspector to assign the collection
    view's `dataSource` and `delegate` outlets to the `ExploreViewController` class.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，你将使用连接检查器将收集视图的 `dataSource` 和 `delegate` 输出口分配给 `ExploreViewController`
    类。
- en: Setting the delegate and data source properties of the collection view
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置收集视图的委托和数据源属性
- en: 'An instance of the `ExploreViewController` class will provide the data that
    the collection view will display, as well as the methods that will be executed
    when the user interacts with the collection view. You need to connect the collection
    view''s `dataSource` and `delegate` properties to outlets in the `ExploreViewController`
    class for this to work. Follow these steps:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`ExploreViewController` 类的一个实例将提供收集视图将显示的数据，以及用户与收集视图交互时将执行的方法。你需要将收集视图的 `dataSource`
    和 `delegate` 属性连接到 `ExploreViewController` 类的输出口，以便实现这一点。按照以下步骤操作：'
- en: Click the Navigator and Inspector buttons to display the Navigator and Inspector
    areas again if you haven't done so already.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你还没有这样做，点击导航器和检查器按钮以再次显示导航器和检查器区域。
- en: 'The `Main` storyboard file should still be selected. Click the `dataSource`
    and `delegate` outlets. Drag from each empty circle to the **ExploreViewController**
    icon in the document outline:![Figure 10.22: Connections Inspector selected'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应该仍然选择 `Main` 故事板文件。点击 `dataSource` 和 `delegate` 输出口。从每个空圆圈拖动到文档大纲中的 **ExploreViewController**
    图标：![图10.22：连接检查器已选择
- en: '](img/Figure_10.22_B17469.jpg)'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_10.22_B17469.jpg)'
- en: 'Figure 10.22: Connections Inspector selected'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.22：连接检查器已选择
- en: 'Verify the `dataSource` and `delegate` properties of the collection view have
    been connected to outlets in the `ExploreViewController` class:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证收集视图的 `dataSource` 和 `delegate` 属性是否已连接到 `ExploreViewController` 类的输出口：
- en: '![Figure 10.23: Connections Inspector with dataSource and delegate outlets
    set'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 10.23: 连接检查器已设置数据源和代理输出'
- en: '](img/Figure_10.23_B17469.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_10.23_B17469.jpg]'
- en: 'Figure 10.23: Connections Inspector with dataSource and delegate outlets set'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 'Figure 10.23: 连接检查器已设置数据源和代理输出'
- en: In the next section, you will add some code to make the `ExploreViewController`
    class conform to the `UICollectionViewDataSource` protocol, and configure the
    collection view to display 20 collection view cells when you run your app.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，您将添加一些代码使 `ExploreViewController` 类遵守 `UICollectionViewDataSource` 协议，并在运行您的应用程序时配置集合视图以显示
    20 个集合视图单元格。
- en: Adopting the UICollectionViewDataSource and UICollectionViewDelegate protocols
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 采用 `UICollectionViewDataSource` 和 `UICollectionViewDelegate` 协议
- en: 'So far, you''ve made the `ExploreViewController` class the data source and
    delegate for the collection view. The next step is to make it adopt the `UICollectionViewDataSource`
    and `UICollectionViewDelegate` protocols and implement any required methods. You''ll
    also change the color of the collection view cells to make them visible on screen.
    Follow these steps:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已使 `ExploreViewController` 类成为集合视图的数据源和代理。下一步是使其采用 `UICollectionViewDataSource`
    和 `UICollectionViewDelegate` 协议并实现任何必需的方法。您还将更改集合视图单元格的颜色，以便在屏幕上可见。按照以下步骤操作：
- en: 'Click **Collection View Cell** in the document outline. This represents the
    collection view cells that the collection view will display. Make sure the Attributes
    inspector is selected:![Figure 10.24: Attributes inspector selected'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在文档大纲中点击 **Collection View Cell**。这代表集合视图将显示的集合视图单元格。确保属性检查器已选中：![Figure 10.24:
    属性检查器已选中'
- en: '](img/Figure_10.24_B17469.jpg)'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![Figure_10.24_B17469.jpg]'
- en: 'Figure 10.24: Attributes inspector selected'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Figure 10.24: 属性检查器已选中'
- en: 'Under `exploreCell` and press Return. The name `Light Gray Color` so that you
    can see them when you run the app:![Figure 10.25: Attributes inspector with identity
    and background color set'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在 `exploreCell` 下按 Return 键。将名称设置为 `Light Gray Color` 以便在运行应用程序时可以看到它们：![Figure
    10.25: 属性检查器已设置身份和背景颜色'
- en: '](img/Figure_10.25_B17469.jpg)'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![Figure_10.25_B17469.jpg]'
- en: 'Figure 10.25: Attributes inspector with identity and background color set'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Figure 10.25: 属性检查器已设置身份和背景颜色'
- en: 'Click on the `ExploreViewController` file in the Project navigator. Type in
    the following code after the class declaration to make the `ExploreViewController`
    class adopt the `UICollectionViewDataSource` and `UICollectionViewDelegate` protocols:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击 `ExploreViewController` 文件。在类声明之后输入以下代码，使 `ExploreViewController`
    类采用 `UICollectionViewDataSource` 和 `UICollectionViewDelegate` 协议：
- en: '[PRE0]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After a few seconds, an error will appear. Click on it to display an error message.
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 几秒钟后，将出现一个错误。点击它以显示错误信息。
- en: The error message says that `UICollectionViewDataSource` protocol to make `ExploreViewController`
    conform to it. Click `ExploreViewController` class.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误信息表示需要使 `ExploreViewController` 类遵守 `UICollectionViewDataSource` 协议。点击 `ExploreViewController`
    类。
- en: 'Verify the stubs for the two required methods for the `UICollectionViewDataSource`
    protocol have been automatically inserted into the `ExploreViewController` file
    as shown:![Figure 10.26: Editing area showing UICollectionViewDataSource method
    stubs'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '验证 `UICollectionViewDataSource` 协议的两个必需方法的存根是否已自动插入到 `ExploreViewController`
    文件中，如图所示：![Figure 10.26: 显示 `UICollectionViewDataSource` 方法存根的编辑区域'
- en: '](img/Figure_10.26_B17469.jpg)'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![Figure_10.26_B17469.jpg]'
- en: 'Figure 10.26: Editing area showing UICollectionViewDataSource method stubs'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Figure 10.26: 显示 `UICollectionViewDataSource` 方法存根的编辑区域'
- en: The first method tells the collection view how many cells to display, while
    the second method tells the collection view what to display in each collection
    view cell.
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第一种方法告诉集合视图显示多少个单元格，而第二种方法告诉集合视图在每个集合视图单元格中显示什么。
- en: 'Replace the `code` text in the first method with `20` (the `return` keyword
    is optional if it''s just a single line of code). This tells the collection view
    to display 20 cells:![Figure 10.27: Editing area showing code to display 20 cells'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '将第一个方法中的 `code` 文本替换为 `20`（如果只是一行代码，则 `return` 关键字是可选的）。这告诉集合视图显示 20 个单元格：![Figure
    10.27: 显示 20 个单元格的代码编辑区域'
- en: '](img/Figure_10.27_B17469.jpg)'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![Figure_10.27_B17469.jpg]'
- en: 'Figure 10.27: Editing area showing code to display 20 cells'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Figure 10.27: 显示 20 个单元格的代码编辑区域'
- en: 'Replace the `code` text in the second method with the following code:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将第二个方法中的 `code` 文本替换为以下代码：
- en: '[PRE1]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Don't worry about what this means for now as you'll learn more about collection
    views in [*Chapter 13*](B17469_13_Final_VK_ePub.xhtml#_idTextAnchor194), *Getting
    Started with MVC and Collection Views*.
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不要担心这对你意味着什么，因为你将在 [*第 13 章*](B17469_13_Final_VK_ePub.xhtml#_idTextAnchor194)
    “开始使用 MVC 和集合视图” 中学习更多关于集合视图的内容。
- en: 'Build and run your app. You should see the simulator display a grid of 20 light
    gray collection view cells as shown:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 构建并运行你的应用。你应该看到模拟器显示一个由 20 个浅灰色集合视图单元格组成的网格，如下所示：
- en: '![Figure 10.28: iOS Simulator showing 20 collection view cells'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.28：iOS 模拟器显示 20 个集合视图单元格'
- en: '](img/Figure_10.28_B17469.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.28_B17469.jpg)'
- en: 'Figure 10.28: iOS Simulator showing 20 collection view cells'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.28：iOS 模拟器显示 20 个集合视图单元格
- en: As you saw in the app tour in [*Chapter 9*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133),
    *Setting Up the User Interface*, there should be a **LOCATION** button at the
    top right of this screen. You will enable the section header for the collection
    view to house this button in the next section.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如你在 [*第 9 章*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133) “设置用户界面” 的应用游览中看到的，屏幕右上角应该有一个**位置**按钮。你将在下一节中启用集合视图的部分标题以容纳此按钮。
- en: Adding a section header to the collection view
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向集合视图中添加部分标题
- en: 'A collection view can be configured with a section header and a section footer.
    Both of them are instances of the `UICollectionReusableView` class. You''ll enable
    the section header for the collection view in the **Explore** screen, so you''ll
    have a place to put the **LOCATION** button. Follow these steps:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 集合视图可以配置部分标题和部分页脚。它们都是 `UICollectionReusableView` 类的实例。你将在 **探索** 屏幕中启用集合视图的部分标题，因此你将有一个放置
    **位置** 按钮的地方。按照以下步骤操作：
- en: 'Click the `Main` storyboard file in the Project navigator and click the **Collection
    View** in the document outline. Click the Attributes inspector button. Under **Collection
    View**, tick the checkbox for **Section Header**:![Figure 10.29: Attributes inspector
    with Section Header checkbox ticked'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击 `Main` 故事板文件，然后在文档大纲中点击 **集合视图**。点击属性检查器按钮。在 **集合视图** 下，勾选 **部分标题**
    复选框：![图 10.29：属性检查器中已勾选部分标题复选框
- en: '](img/Figure_10.29_B17469.jpg)'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_10.29_B17469.jpg)'
- en: 'Figure 10.29: Attributes inspector with Section Header checkbox ticked'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.29：属性检查器中已勾选部分标题复选框
- en: This enables the section header for the collection view.
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将启用集合视图的部分标题。
- en: 'Note that `header` and press *Return* when you''re done:![Figure 10.30: Attributes
    inspector with Identifier set to header'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意在完成时按 `header` 并按 *Return*：![图 10.30：属性检查器中标识符设置为 header
- en: '](img/Figure_10.30_B17469.jpg)'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_10.30_B17469.jpg)'
- en: 'Figure 10.30: Attributes inspector with Identifier set to header'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.30：属性检查器中标识符设置为 header
- en: 'Click on the `ExploreViewController` file in the Project navigator. Just before
    the data source methods, type in the following code:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击 `ExploreViewController` 文件。在数据源方法之前，输入以下代码：
- en: '[PRE2]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This method returns the instance of `UICollectionReusableView` with the identifier
    `header` that you just configured, which will be displayed onscreen.
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此方法返回具有 `header` 标识符的 `UICollectionReusableView` 实例，你刚刚已配置，它将在屏幕上显示。
- en: 'Build and run your app. You should see the collection view section header as
    a white space between the collection view cells and the navigation bar:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 构建并运行你的应用。你应该看到集合视图部分标题作为集合视图单元格和导航栏之间的空白区域：
- en: '![Figure 10.31: iOS Simulator showing collection view section header'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.31：iOS 模拟器显示集合视图部分标题'
- en: '](img/Figure_10.31_B17469.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.31_B17469.jpg)'
- en: 'Figure 10.31: iOS Simulator showing collection view section header'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.31：iOS 模拟器显示集合视图部分标题
- en: Before you add the **LOCATION** button, you'll need to increase the collection
    view section header's height and the collection view cell size to make them match
    the **Explore** screen shown in the app tour (refer to [*Chapter 9*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133),
    *Setting Up the User Interface*). You will set the cell size and the header height
    using the **Size inspector** in the next section.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在你添加 **位置** 按钮之前，你需要增加集合视图部分标题的高度和集合视图单元格的大小，以使它们与在应用游览中显示的 **探索** 屏幕相匹配（参考
    [*第 9 章*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133) “设置用户界面”）。你将在下一节中使用
    **大小检查器** 设置单元格大小和标题高度。
- en: Configuring storyboard element sizes
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置故事板元素大小
- en: 'The Size inspector is used to change the size of storyboard elements. You will
    use it to change the size of the collection view cell and collection view section
    header to make them match the **Explore** screen that was shown in the app tour
    in [*Chapter 9*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133), *Setting Up
    the User Interface*. Follow these steps:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 大小检查器用于更改故事板元素的大小。您将使用它来更改集合视图单元格和集合视图分区标题的大小，以使它们与在[*第9章*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133)中应用导游中显示的**探索**屏幕相匹配，*设置用户界面*。请按照以下步骤操作：
- en: 'Click the `Main` storyboard file in the Project navigator and click the **Collection
    View** in the document outline. Click the Size inspector button:![Figure 10.32:
    Size inspector selected'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中单击`Main`故事板文件，然后在文档大纲中单击**集合视图**。单击大小检查器按钮：![图10.32：大小检查器被选中
- en: '](img/Figure_10.32_B17469.jpg)'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_10.32_B17469.jpg)'
- en: 'Figure 10.32: Size inspector selected'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.32：大小检查器被选中
- en: 'The collection view size settings will be displayed in the Size inspector as
    shown:![Figure 10.33: Size inspector showing size settings for the collection
    view'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 集合视图大小设置将在大小检查器中显示，如图所示：![图10.33：大小检查器显示集合视图的大小设置
- en: '](img/Figure_10.33_B17469.jpg)'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_10.33_B17469.jpg)'
- en: 'Figure 10.33: Size inspector showing size settings for the collection view'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.33：大小检查器显示集合视图的大小设置
- en: 'Configure the collection view size settings, as follows:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置集合视图大小设置，如下所示：
- en: '`177` and `177`.'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`177`和`177`。'
- en: '`0` and `100`.'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`0`和`100`。'
- en: '`0` and `7`.'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`0`和`7`。'
- en: '`7`.'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`7`。'
- en: Remember to press *Return* after changing each value.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在更改每个值后，请记住按*Return*键。
- en: The units that are used in the Size inspector are points. Each point may refer
    to one or more pixels on the device screen. For the iPhone SE (2nd generation),
    the screen is 375 points wide and 667 points high, although the actual screen
    resolution is 750 x 1,334 pixels.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 大小检查器中使用的单位是点。每个点可能代表设备屏幕上的一个或多个像素。对于iPhone SE（第二代），屏幕宽度为375点，高度为667点，尽管实际屏幕分辨率为750
    x 1,334像素。
- en: '**Cell Size** determines the size of the collection view cell. **Header Size**
    determines the size of the collection view section header. **Min Spacing** determines
    the space between cells. **Section Insets** determines the space between the section
    containing the cells to the sides of the enclosing view. These settings are specific
    to the iPhone SE (2nd generation). In [*Chapter 22*](B17469_22_Final_VK_ePub.xhtml#_idTextAnchor431),
    *Getting Started with Mac Catalyst*, you will calculate the optimum cell size
    based on the dimensions of the device screen.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '**单元格大小**确定集合视图单元格的大小。**标题大小**确定集合视图分区标题的大小。**最小间距**确定单元格之间的空间。**分区内边距**确定包含单元格的分区与包围视图的侧边之间的空间。这些设置特定于iPhone
    SE（第二代）。在[*第22章*](B17469_22_Final_VK_ePub.xhtml#_idTextAnchor431)中，*使用Mac Catalyst入门*，您将根据设备屏幕的尺寸计算最佳单元格大小。'
- en: 'Build and run your app, and you should see the **Explore** screen display 20
    collection view cells and a collection view section header:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 构建并运行您的应用，您应该看到**探索**屏幕显示20个集合视图单元格和一个集合视图分区标题：
- en: '![Figure 10.34: iOS simulator showing resized collection view cells and section
    header'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.34：iOS模拟器显示调整大小的集合视图单元格和分区标题'
- en: '](img/Figure_10.34_B17469.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.34_B17469.jpg)'
- en: 'Figure 10.34: iOS simulator showing resized collection view cells and section
    header'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.34：iOS模拟器显示调整大小的集合视图单元格和分区标题
- en: Note that although there is no data in the cells and no button in the header,
    it looks similar to the **Explore** screen that was shown in the app tour in [*Chapter
    9*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133)*, Setting Up the User Interface*.
    You will configure the cells to display data in the next part of this book. For
    now, let's add a button to the collection view section header, which will be used
    later to display the **Locations** screen.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，尽管单元格中没有数据，标题中没有按钮，但它看起来与应用导游中在[*第9章*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133)*设置用户界面*中显示的**探索**屏幕相似。您将在本书的下一部分配置单元格以显示数据。现在，让我们向集合视图分区标题添加一个按钮，该按钮将用于稍后显示**位置**屏幕。
- en: Presenting a view modally
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以模态方式呈现视图
- en: In this section, you will add a button to the collection view section header.
    When tapped, this button will display a view showing the **Locations** screen.
    This view will be from a new view controller scene embedded in a navigation controller,
    which you will add to the project. The view will be presented modally, which means
    you won't be able to do anything else until it is dismissed. To dismiss it, you'll
    add a **Cancel** button to the view's navigation bar. You'll also add a **Done**
    button, but you'll only implement its functionality in [*Chapter 17*](B17469_17_Final_VK_ePub.xhtml#_idTextAnchor248)*,
    Getting Started with JSON Files*.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将向集合视图部分标题添加一个按钮。当点击时，此按钮将显示一个视图，显示**位置**屏幕。此视图将来自一个嵌入在导航控制器中的新视图控制器场景，您将将其添加到项目中。视图将以模态方式显示，这意味着在它被关闭之前，您将无法执行任何其他操作。要关闭它，您将在视图的导航栏中添加一个**取消**按钮。您还将添加一个**完成**按钮，但您将在[*第17章*](B17469_17_Final_VK_ePub.xhtml#_idTextAnchor248)“开始使用JSON文件”中实现其功能。
- en: Let's start by adding a button from the library to the collection view section
    header.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从向集合视图标题添加库中的按钮开始。
- en: Adding a button to the collection view header
  id: totrans-206
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向集合视图标题添加按钮
- en: 'As shown in the app tour in [*Chapter 9*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133),
    *Setting Up the User Interface*, there is a **LOCATION** button at the top right-hand
    side of the screen. You''ll add a button to represent the **LOCATION** button
    in the collection view section header. Follow these steps:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 如[*第9章*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133)“设置用户界面”中的应用程序导游所示，屏幕右上角有一个**位置**按钮。您将在集合视图部分标题中添加一个按钮来表示**位置**按钮。按照以下步骤操作：
- en: 'Click the `Main` storyboard file in the Project navigator. Make sure the **Explore
    View Controller Scene** is selected. Click the Library button to display the library:![Figure
    10.35: Toolbar with Library button shown'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中单击`Main`故事板文件。确保已选择**探索视图控制器场景**。单击库按钮以显示库：![图10.35：显示库按钮的工具栏
- en: '](img/Figure_10.35_B17469.jpg)'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_10.35_B17469.jpg]'
- en: 'Figure 10.35: Toolbar with Library button shown'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.35：显示库按钮的工具栏
- en: 'Type `button` in the filter field. A **Button** object will appear in the results.
    Drag the button to the collection view section header:![Figure 10.36: Library
    with Button object selected'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在过滤器字段中输入`button`。一个**按钮**对象将在结果中显示。将按钮拖动到集合视图部分标题：![图10.36：选择按钮对象的库
- en: '](img/Figure_10.36_B17469.jpg)'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_10.36_B17469.jpg]'
- en: 'Figure 10.36: Library with Button object selected'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.36：选择按钮对象的库
- en: 'Position the button to the right-hand side of the collection view section header:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将按钮放置在集合视图部分标题的右侧：
- en: '![Figure 10.37: Collection view section header with button added'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.37：添加了按钮的集合视图部分标题'
- en: '](img/Figure_10.37_B17469.jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_10.37_B17469.jpg]'
- en: 'Figure 10.37: Collection view section header with button added'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.37：添加了按钮的集合视图部分标题
- en: Its exact placement isn't important right now as you will customize the button's
    position in [*Chapter 12*](B17469_12_Final_VK_ePub.xhtml#_idTextAnchor182), *Modifying
    and Configuring Cells*.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 目前它的确切位置并不重要，因为您将在[*第12章*](B17469_12_Final_VK_ePub.xhtml#_idTextAnchor182)“修改和配置单元格”中自定义按钮的位置。
- en: You now have a button in your collection view section header. Next, you will
    add a view controller scene to represent the **Locations** screen that will appear
    when the button is tapped.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在在您的集合视图部分标题中有一个按钮。接下来，您将添加一个视图控制器场景来表示当按钮被点击时出现的**位置**屏幕。
- en: Adding a new view controller scene
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加新的视图控制器场景
- en: 'As shown in the app tour in [*Chapter 9*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133),
    *Setting Up the User Interface*, when you tap the **LOCATION** button, a list
    of locations will appear in the **Locations** screen. You''ll add a new view controller
    scene to your project to represent this screen. Follow these steps:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 如[*第9章*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133)“设置用户界面”中的应用程序导游所示，当您点击**位置**按钮时，**位置**屏幕将显示一系列位置。您将向项目中添加一个新的视图控制器场景来表示此屏幕。按照以下步骤操作：
- en: 'Click the Library button to display the library and type `view con` in the
    filter field. A **View Controller** object will be among the search results. Drag
    the **View Controller** object onto the storyboard:![Figure 10.38: Library with
    View Controller object selected'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击库按钮以显示库，并在过滤器字段中输入`view con`。**视图控制器**对象将在搜索结果中。将**视图控制器**对象拖放到故事板中：![图10.38：选择视图控制器对象的库
- en: '](img/Figure_10.38_B17469.jpg)'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_10.38_B17469.jpg]'
- en: 'Figure 10.38: Library with View Controller object selected'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.38：选择视图控制器对象的库
- en: 'Position it to the right of the **Explore View Controller Scene**:![Figure
    10.39: Editing area showing view controller scene next to Explore View Controller
    Scene'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其放置在**探索视图控制器场景**的右侧：![Figure 10.39：显示视图控制器场景与探索视图控制器场景并排的编辑区域
- en: '](img/Figure_10.39_B17469.jpg)'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_10.39_B17469.jpg]'
- en: 'Figure 10.39: Editing area showing view controller scene next to Explore View
    Controller Scene'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.39：显示视图控制器场景与探索视图控制器场景并排的编辑区域
- en: 'The newly added view controller scene should already be selected. In the document
    outline, click on the **View Controller** icon for this scene:![Figure 10.40:
    Document outline with View Controller selected'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新增的视图控制器场景应该已经选中。在文档大纲中，点击此场景的**视图控制器**图标：![Figure 10.40：选择视图控制器的文档大纲
- en: '](img/Figure_10.40_B17469.jpg)'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_10.40_B17469.jpg]'
- en: 'Figure 10.40: Document outline with View Controller selected'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.40：选择视图控制器的文档大纲
- en: You will need space for the **Cancel** and **Done** buttons, so you will embed
    this view controller scene in a navigation controller to provide a navigation
    bar where the buttons can be placed. Choose **Embed In** | **Navigation Controller**
    from the **Editor** menu.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要为**取消**和**完成**按钮腾出空间，因此您将在此视图控制器场景中嵌入导航控制器，以提供一个可以放置按钮的导航栏。从**编辑器**菜单中选择**嵌入**
    | **导航控制器**。
- en: 'A navigation controller scene will appear to the left of the view controller
    scene:![Figure 10.41: Editing area showing view controller scene embedded in a
    navigation controller'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航控制器场景将出现在视图控制器场景的左侧：![Figure 10.41：显示嵌入在导航控制器中的视图控制器场景的编辑区域
- en: '](img/Figure_10.41_B17469.jpg)'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_10.41_B17469.jpg]'
- en: 'Figure 10.41: Editing area showing view controller scene embedded in a navigation
    controller'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.41：显示嵌入在导航控制器中的视图控制器场景的编辑区域
- en: '*Ctrl* + *Drag* from the button to the navigation controller scene:![Figure
    10.42: Editing area showing button in Explore View Controller Scene'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**Ctrl** + **拖动**从按钮到导航控制器场景：![Figure 10.42：显示探索视图控制器场景中的按钮
- en: '](img/Figure_10.42_B17469.jpg)'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_10.42_B17469.jpg]'
- en: 'Figure 10.42: Editing area showing button in Explore View Controller Scene'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.42：显示探索视图控制器场景中的按钮
- en: 'The Segue pop-up menu will appear. Choose **Present Modally**:![Figure 10.43:
    Segue pop-up menu with Present Modally selected'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会出现切换弹出菜单。选择**以模态方式呈现**：![Figure 10.43：选择“以模态方式呈现”的切换弹出菜单
- en: '](img/Figure_10.43_B17469.jpg)'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_10.43_B17469.jpg]'
- en: 'Figure 10.43: Segue pop-up menu with Present Modally selected'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.43：选择“以模态方式呈现”的切换弹出菜单
- en: This makes the view controller's view slide up from the bottom of the screen
    when the button is tapped. You won't be able to interact with any other view until
    this view is dismissed.
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这样，当按钮被点击时，视图控制器视图会从屏幕底部向上滑动。在此视图关闭之前，您将无法与其他视图进行交互。
- en: 'Verify that a segue has linked the **Explore View Controller Scene** and the
    navigation controller scene together:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证是否有一个切换将**探索视图控制器场景**和导航控制器场景连接在一起：
- en: '![Figure 10.44: Editing area showing segue between Explore View Controller
    Scene'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 10.44：显示探索视图控制器场景之间切换的编辑区域'
- en: and navigation controller scene
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 和导航控制器场景
- en: '](img/Figure_10.44_B17469.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_10.44_B17469.jpg]'
- en: 'Figure 10.44: Editing area showing segue between Explore View Controller Scene
    and navigation controller scene'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.44：显示探索视图控制器场景和导航控制器场景之间切换的编辑区域
- en: 'Build and run your app. If you click the button, the new view controller''s
    view should slide up from the bottom of the screen:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 构建并运行您的应用程序。如果您点击按钮，新的视图控制器视图应该从屏幕底部向上滑动：
- en: '![Figure 10.45: iOS simulator showing Explore and Locations screens'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 10.45：iOS 模拟器显示探索和位置屏幕'
- en: '](img/Figure_10.45_B17469.jpg)'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_10.45_B17469.jpg]'
- en: 'Figure 10.45: iOS simulator showing Explore and Locations screens'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.45：iOS 模拟器显示探索和位置屏幕
- en: At the moment, you can't dismiss this view. In the next section, you will add
    a **Cancel** button to the navigation bar and program it to dismiss the view.
    You'll also add a **Done** button, but you won't program it yet.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，您无法关闭此视图。在下一节中，您将在导航栏中添加一个**取消**按钮，并编程使其关闭视图。您还会添加一个**完成**按钮，但暂时不会对其进行编程。
- en: Adding Cancel and Done buttons to the navigation bar
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向导航栏添加取消和完成按钮
- en: 'One of the benefits of embedding a view controller in a navigation controller
    is the navigation bar at the top of the screen. You can place buttons on its left-
    and right-hand sides. Follow these steps to add the **Cancel** and **Done** buttons
    to the navigation bar:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 将视图控制器嵌入导航控制器的一个好处是屏幕顶部的导航栏。你可以在其左右两侧放置按钮。按照以下步骤将**取消**和**完成**按钮添加到导航栏：
- en: 'Click the **Navigation Item** for the **View Controller Scene** in the document
    outline. Click the Library button:![Figure 10.46: Toolbar with Library button
    shown'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在文档大纲中点击**视图控制器场景**的**导航项**。点击库按钮：![Figure 10.46: 工具栏显示库按钮'
- en: '](img/Figure_10.46_B17469.jpg)'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![Figure_10.46_B17469.jpg]'
- en: 'Figure 10.46: Toolbar with Library button shown'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Figure 10.46: 显示库按钮的工具栏'
- en: 'Type `bar b` into the filter field and drag two **Bar Button Item** objects
    to each side of the navigation bar:![Figure 10.47: Library with Bar Button Item
    objects selected'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在过滤器字段中输入`bar b`，并将两个**栏按钮项**对象拖到导航栏的两侧：![Figure_10.47: 库中选择了栏按钮项对象'
- en: '](img/Figure_10.47_B17469.jpg)'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![Figure_10.47_B17469.jpg]'
- en: 'Figure 10.47: Library with Bar Button Item objects selected'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Figure 10.47: 库中选择了栏按钮项对象'
- en: 'Click the **Item** button on the right:![Figure 10.48: View controller scene
    with right button selected'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '点击右侧的**项目**按钮：![Figure_10.48: 选择右侧按钮的视图控制器场景'
- en: '](img/Figure_10.48_B17469.jpg)'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![Figure_10.48_B17469.jpg]'
- en: 'Figure 10.48: View controller scene with right button selected'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Figure 10.48: 选择右侧按钮的视图控制器场景'
- en: 'Click the Attributes inspector button. Under **Bar Button Item**, choose **Done**
    from the **System Item** menu:![Figure 10.49: Attributes inspector with System
    Item set to Done'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '点击属性检查器按钮。在**栏按钮项**下，从**系统项**菜单中选择**完成**：![Figure_10.49: 属性检查器，将系统项设置为完成'
- en: '](img/Figure_10.49_B17469.jpg)'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![Figure_10.49_B17469.jpg]'
- en: 'Figure 10.49: Attributes inspector with System Item set to Done'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Figure 10.49: 属性检查器，将系统项设置为完成'
- en: Click the `viewControllers`, that holds an array of view controllers. When you
    click the button in the `viewControllers` array and its view appears from the
    bottom of the screen, covering the **Explore** screen.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`viewControllers`，它包含一个视图控制器数组。当你点击`viewControllers`数组中的按钮，其视图从屏幕底部出现，覆盖**探索**屏幕。
- en: 'To dismiss the view, you will link the `ExploreViewController` class which
    will be executed when the `ExploreViewController` file and add the following method
    at the bottom of the file, just before the last curly brace:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要关闭视图，你需要链接`ExploreViewController`类，当`ExploreViewController`文件执行时，在文件底部，紧接最后一个花括号之前添加以下方法：
- en: '[PRE3]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Click on the `Main` storyboard file in the Project navigator. *Ctrl + Drag*
    from the **Cancel** button to the scene exit icon (the third icon) and choose
    **unwindLocationCancelWithSegue:** from the pop-up menu:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目导航器中点击`Main`故事板文件。*Ctrl + 拖动*从**取消**按钮到场景退出图标（第三个图标），并从弹出菜单中选择**unwindLocationCancelWithSegue:**：
- en: '![Figure 10.51: View controller scene showing Cancel button action being set'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_10.51: 显示取消按钮动作设置的视图控制器场景'
- en: '](img/Figure_10.51_B17469.jpg)'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_10.51_B17469.jpg]'
- en: 'Figure 10.51: View controller scene showing Cancel button action being set'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 'Figure 10.51: 显示取消按钮动作设置的视图控制器场景'
- en: When your app is running, clicking the `viewControllers` array, making the view
    that is presented modally go away and executes the `unwindLocationCancel(segue:)`
    method. Note that this method doesn't do anything.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的应用运行时，点击`viewControllers`数组，使模态显示的视图消失，并执行`unwindLocationCancel(segue:)`方法。注意，此方法不执行任何操作。
- en: 'Build and run your app and click the button in the section header of the **Explore**
    screen. The new view will appear onscreen. When you click the **Cancel** button,
    the new view disappears:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 构建并运行你的应用，点击**探索**屏幕部分标题中的按钮。新视图将出现在屏幕上。当你点击**取消**按钮时，新视图消失：
- en: '![Figure 10.52: iOS Simulator showing Explore and Locations screens'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_10.52: iOS 模拟器显示探索和位置屏幕'
- en: '](img/Figure_10.52_B17469.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_10.52_B17469.jpg]'
- en: 'Figure 10.52: iOS Simulator showing Explore and Locations screens'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 'Figure 10.52: iOS 模拟器显示探索和位置屏幕'
- en: Congratulations! You've completed the basic structure for the **Explore** screen.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经完成了**探索**屏幕的基本结构。
- en: Summary
  id: totrans-279
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you added a collection view to the `Main` storyboard file and
    added a new file, `ExploreViewController`, which contains the implementation of
    the `ExploreViewController` class. You made the `ExploreViewController` class
    the view controller for the scene containing the collection view. Then, you modified
    the `ExploreViewController` class to have an outlet for the collection view in
    the storyboard, and made it the data source and delegate for the collection view.
    You added a collection view section header to the collection view and set the
    size for the collection view cells and collection view section header. Finally,
    you added a button to display a second view and configured a **Cancel** button
    to dismiss it.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你向`Main`故事板文件中添加了一个集合视图，并添加了一个新文件`ExploreViewController`，其中包含了`ExploreViewController`类的实现。你将`ExploreViewController`类设置为包含集合视图的场景的视图控制器。然后，你修改了`ExploreViewController`类，使其在故事板中具有集合视图的输出，并使其成为集合视图的数据源和代理。你向集合视图中添加了一个集合视图部分标题，并设置了集合视图单元格和集合视图部分标题的大小。最后，你添加了一个按钮以显示第二个视图，并配置了一个**取消**按钮来关闭它。
- en: At this point, you should be fairly proficient in using Interface Builder to
    add views and view controllers to a storyboard scene, link view controller outlets
    to UI elements in storyboards, set up collection view cells and section headers,
    and present views modally. This will be very useful when you're designing the
    user interface for your own apps.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你应该已经相当熟练地使用Interface Builder向故事板场景中添加视图和视图控制器，将视图控制器输出链接到故事板中的UI元素，设置集合视图单元格和部分标题，以及以模态方式显示视图。当你为自己的应用程序设计用户界面时，这将非常有用。
- en: In the next chapter, you'll configure the new view controller to display a table
    view, implement the remaining screens of your app, and implement a map view for
    the **Map** screen.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将配置新的视图控制器以显示表格视图，实现应用程序的剩余屏幕，并为**地图**屏幕实现一个地图视图。
