- en: Chapter 2. Using iCloud and the Storage APIs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章 使用iCloud和存储API
- en: In this chapter, we will be introducing the features of iCloud and their storage
    APIs. These allow you to develop your application to write and store user documents
    in a common and central location, with the ability to access those items from
    all of your computers and iOS devices.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍iCloud的功能及其存储API。这些API允许您开发应用程序，以便在公共和中央位置编写和存储用户文档，并能够从所有电脑和iOS设备访问这些项目。
- en: Making a user's document available using iCloud, means that a user can view
    or edit those documents directly from any device, without the need of having to
    sync or transfer those files. Storing documents in a user's iCloud account provides
    an added layer of security for that user. Even if the user loses their device,
    the documents can easily be retrieved from the device, provided that they are
    contained within iCloud storage.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 通过iCloud使用户的文档可用意味着用户可以直接从任何设备查看或编辑这些文档，无需同步或传输这些文件。在用户的iCloud账户中存储文档为用户提供了一个额外的安全层。即使用户丢失了设备，只要文档包含在iCloud存储中，就可以轻松检索。
- en: Through the use of the iCloud storage APIs, you can make your applications capable
    enough to store user documents and key-value data, allowing this information,
    and any changes to it, to be pushed to all of your iOS devices all at the same
    time. By using iCloud, you can create some excellent applications, by adding some
    great compelling functionality.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用iCloud存储API，您可以使您的应用程序足够强大，能够存储用户文档和键值数据，允许这些信息及其更改同时推送到所有iOS设备。通过使用iCloud，您可以创建一些优秀的应用程序，添加一些令人信服的功能。
- en: 'In this chapter, we will:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: Take advantage of iCloud storage
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 充分利用iCloud存储
- en: Back up our data using iCloud backup
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用iCloud备份备份我们的数据
- en: Store documents within iCloud storage
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在iCloud存储中存储文档
- en: Search for documents within the Cloud
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在云端搜索文档
- en: Handle file-version conflicts
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理文件版本冲突
- en: Move and store documents to iCloud storage
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将文档移动和存储到iCloud存储
- en: Configure and set up provisioning profiles ready for iCloud storage.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置和设置准备就绪的iCloud存储配置文件。
- en: Let's get started.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: Comparing Apple iCloud and Google Docs
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较苹果iCloud和Google Docs
- en: When Apple announced their new cloud-based file management system called iCloud,
    it allowed you to backup your files to the Cloud, and synchronize your data between
    multiple devices.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当苹果公司宣布他们新的基于云的文件管理系统iCloud时，它允许您将文件备份到云端，并在多台设备之间同步数据。
- en: Devices, such as the iPad and iPhone, can automatically backup files, such as
    photos, music, and documents to iCloud, and have these synchronize with your other
    Apple devices.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例如iPad和iPhone等设备可以自动备份文件，如照片、音乐和文档到iCloud，并使这些文件与您的其他苹果设备同步。
- en: One of the significant differences you will notice between iCloud and Google
    Docs, is that, iCloud is meant only for Apple devices, such as the iPhone, iPod
    Touch and iPad.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您会在iCloud和Google Docs之间注意到的一个显著差异是，iCloud仅适用于苹果设备，如iPhone、iPod Touch和iPad。
- en: iCloud works by storing all of your music, photos, documents, books, and so
    on, and automatically pushing them out to all of your other devices, wirelessly.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: iCloud通过存储您所有的音乐、照片、文档、书籍等，并自动将它们无线推送到您的其他设备。
- en: Any documents that are stored within iCloud can be accessed and viewed from
    any device that is connected to the Internet. At this stage, iCloud does not offer
    a way to share the documents with other users.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 任何存储在iCloud中的文档都可以从任何连接到互联网的设备访问和查看。目前，iCloud还没有提供与其他用户共享文档的方式。
- en: On the other hand, Google Docs is a free document management service from Google
    that allows you to create, edit, and manage various types of documents in the
    Cloud. This is all handled within an easy-to-use interface to manage your documents,
    each organized under labels that are equivalent to folders. Unlike iCloud, you
    are able to access these documents within the Cloud from any computer, tablet,
    or even using your iPhone and iPad.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，Google Docs是谷歌提供的免费文档管理服务，允许您在云端创建、编辑和管理各种类型的文档。所有这些都在易于使用的界面中处理，以管理您的文档，每个文档都组织在相当于文件夹的标签下。与iCloud不同，您可以从任何电脑、平板电脑，甚至使用iPhone和iPad访问这些文档在云端的副本。
- en: Google Docs currently supports and stores the following file types within the
    Cloud. These can be later accessed from anywhere on the web.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Google Docs目前支持并存储以下文件类型在云端。这些文件可以在网络上的任何地方访问。
- en: Documents
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档
- en: Spreadsheets
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子表格
- en: Presentations
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 演示文稿
- en: '**Drawings:** This is a new addition to the Google Docs family.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**绘图**：这是Google Docs家族的新增功能。'
- en: iCloud and Google Docs both offer free storage, but come with some limitations.
    iCloud comes with a total limit of 5GB per account; additional space can be purchased
    should you require it.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: iCloud和Google Docs都提供免费存储空间，但也有一些限制。iCloud每个账户的总存储限制为5GB；如果需要，可以购买额外的空间。
- en: Google Docs is also free, but comes with restrictions and limitations, based
    on the total number of documents that you can store and the length/content of
    each document.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Google Docs也是免费的，但有一些限制和限制，这些限制基于你可以存储的文档总数以及每个文档的长度/内容。
- en: Unlike iCloud, Google Docs provides you with a way of sharing your documents
    with other users.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 与iCloud不同，Google Docs为你提供了一种与其他用户共享文档的方式。
- en: You have the flexibility of sharing and setting user rights to your documents.
    You have the ability to make a document publicly available on the Internet with
    view only access, or allow selected people to edit.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以灵活地共享和设置文档的用户权限。你有能力使一个文档在互联网上公开可用，仅提供查看权限，或者允许选定的人进行编辑。
- en: Storing and using documents in iCloud
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在iCloud中存储和使用文档
- en: Storing documents within the Cloud provides you with a common central location
    for easy access to those documents. Any updates that are made to the document
    can then be delivered to every iOS device or computer, as long as they are using
    the same Apple ID used to upload those documents.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在云中存储文档为你提供了一个共同的中心位置，便于访问这些文档。对文档所做的任何更新都可以发送到每个使用相同Apple ID上传这些文档的iOS设备或计算机。
- en: When a document is uploaded to iCloud, it is not moved there immediately. The
    document must first be moved out of the application sandbox into a local system-managed
    directory, where it can be monitored by the iCloud service.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当文档上传到iCloud时，它不会立即移动到那里。文档必须首先从应用程序沙盒移动到本地系统管理的目录中，这样iCloud服务就可以对其进行监控。
- en: Once this process has completed, the file is transferred to iCloud and then
    distributed out to the user's other iOS devices as soon as possible. While the
    files are stored within iCloud storage, any changes that are made on one device
    are initially stored locally and then immediately pushed out to iCloud, using
    a local daemon service.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦这个过程完成，文件就会传输到iCloud，然后尽快分发到用户的其他iOS设备上。当文件存储在iCloud存储中时，任何在一个设备上所做的更改最初都会在本地存储，然后立即通过本地守护进程服务推送到iCloud。
- en: This is to prevent file conflicts from happening at the same time; this is handled
    by the **File** coordinator, which mediates changes made between the application
    and the local daemon service that is responsible for facilitating the transfer
    of the document to-and-from the iCloud service.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这是为了防止文件冲突同时发生；这由**文件**协调器处理，它协调应用程序和负责将文档传输到iCloud服务之间的本地守护进程服务所做的更改。
- en: The file coordinator acts much like a locking mechanism for the document, thus
    preventing your application and the daemon service from applying modifications
    to the document simultaneously.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 文件协调器在文档中起到类似锁定机制的作用，从而防止你的应用程序和守护进程服务同时应用修改到文档上。
- en: Note
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Whenever your application stores documents to iCloud, it must specify one or
    more containers in which those documents, contents will be stored, by including
    the key value entry `com.apple.developer.ubiquity-container-identifiers` within
    your applications, entitlements file. This is covered in the section *Requesting
    entitlements for iCloud storage*.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你的应用程序将文档存储到iCloud时，它必须指定一个或多个容器，这些文档和内容将存储在这些容器中，通过在你的应用程序权限文件中包含键值条目`com.apple.developer.ubiquity-container-identifiers`来实现。这在本节*请求iCloud存储权限*中有详细说明。
- en: The following screenshot shows the process when changes are made on one device,
    and having those changes stored locally before being pushed back out to the iCloud
    service using a local daemon process.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了在一个设备上做出更改的过程，以及在这些更改在通过本地守护进程过程推回到iCloud服务之前先在本地存储。
- en: '![Storing and using documents in iCloud](img/2267EXP_02_01.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![在iCloud中存储和使用文档](img/2267EXP_02_01.jpg)'
- en: 'From an implementation perspective, the easiest way to provide your applications
    with the ability to manage documents stored within iCloud, would be to use the
    `UIDocument` class. This class handles everything that is required to read and
    write files that are stored within iCloud. It can:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 从实现的角度来看，为您的应用程序提供管理存储在iCloud中的文档的能力，最简单的方法是使用`UIDocument`类。这个类处理了读取和写入存储在iCloud中的文件所需的所有操作。它可以：
- en: Handle the creation and use of the file coordinators to modify the document
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理文件协调器的创建和使用来修改文档
- en: Seamlessly detect changes that are received from other devices
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无缝检测从其他设备接收到的更改
- en: Handle any potential conflicts that arise when two devices manage to update
    the same file in conflicting ways
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理当两个设备以冲突的方式更新同一文件时可能出现的任何潜在冲突
- en: Prevent large number of conflicting changes from occurring at the same time
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防止大量冲突的更改同时发生
- en: We will take a look at storing documents within iCloud, when we start to create
    our example application in our section on *Creating an iCloudExample Application*.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在*创建iCloudExample应用程序*部分开始创建示例应用程序时，我们将探讨在iCloud中存储文档。
- en: Storing key-value data in iCloud
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在iCloud中存储键值数据
- en: Storing data within iCloud provides you with a means of making your applications
    share data between other copies of the same data running on other computers and
    other iOS devices.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在iCloud中存储数据为您提供了使您的应用程序能够在其他计算机和其他iOS设备上运行的同数据副本之间共享数据的方法。
- en: The class that allows you to do this is called the `NSUbiquitousKeyValueStore`.
    This class provides you with the ability to share small amounts of data between
    your devices.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 允许您执行此操作的类称为`NSUbiquitousKeyValueStore`。这个类为您提供了在您的设备之间共享少量数据的能力。
- en: The `NSUserDefaults` class, provides you with a programmatic interface for interacting
    with the system defaults that allows an application to customize its behavior
    to match a user's preferences. For example, you can set up your application to
    specify how often documents are automatically saved. This class allows you to
    save your details to a variety of data types, that is, numbers, strings, dates,
    arrays and so on, before retrieving the data for use at a later time.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`NSUserDefaults`类提供了一个程序接口，用于与系统默认值交互，允许应用程序根据用户的偏好定制其行为。例如，您可以设置应用程序以指定文档自动保存的频率。这个类允许您在稍后使用数据之前，将详细信息保存到各种数据类型中，即数字、字符串、日期、数组等等。'
- en: The main difference between the `NSUserDefaults` and the `NSUbiquitousKeyValueStore`,
    is that the `NSUserDefaults` class writes the data to the user's iCloud storage,
    so that it can be retrieved by the application running on a different iOS device
    or computer.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`NSUserDefaults`类与`NSUbiquitousKeyValueStore`类的主要区别在于，`NSUserDefaults`类将数据写入用户的iCloud存储，这样就可以被运行在不同iOS设备或计算机上的应用程序检索。'
- en: 'The following code snippet shows how to set up the cloud, so that you are able
    to write the data to the user''s iCloud storage:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段展示了如何设置云存储，以便您能够将数据写入用户的iCloud存储：
- en: '[PRE0]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When using the `NSUbiquitousKeyValueStore` class, you must ensure that an entry
    to the `com.apple.developer.ubiquity-kvstore-identifier` entitlement is added
    to your project entitlements file. This is covered in the section *Requesting
    entitlements for iCloud storage*.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`NSUbiquitousKeyValueStore`类时，您必须确保将`com.apple.developer.ubiquity-kvstore-identifier`权限添加到您的项目权限文件中。这在本节*请求iCloud存储权限*中有详细说明。
- en: The amount of space available for a single key-value store is limited to 64KB;
    any data that is written to a single key-value within your container must not
    exceed 4KB in size. This is so that you can store small amounts of data about
    your application, but it is not advisable to use it to store user documents or
    large amounts of data.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 单个键值存储可用的空间限制为64KB；写入容器中单个键值的数据大小不得超过4KB。这样，您可以存储有关应用程序的小量数据，但建议不要用它来存储用户文档或大量数据。
- en: For example, you may have an application that might store the current version
    number, and the name of the screen or document that the user was viewing. That
    way, if the user opens the application on another device, the version of your
    application on that device can open the same screen or document as the previous
    device.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可能有一个应用程序，可能会存储当前版本号和用户正在查看的屏幕或文档的名称。这样，如果用户在另一台设备上打开应用程序，该设备上的应用程序版本可以打开与之前设备相同的屏幕或文档。
- en: Requesting entitlements for iCloud storage
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 请求iCloud存储权限
- en: In order to protect the data your application creates, a number of specific
    entitlements need to be created at build-time in order to use iCloud storage.
    You will need to ensure that you have selected the option to enable iCloud for
    your application's App ID.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保护应用程序创建的数据，需要在构建时创建一些特定的权限，以便使用iCloud存储。您需要确保已选择启用应用程序App ID的iCloud选项。
- en: You will need to either create a new App ID from within the iOS provisioning
    portal located at [https://developer.apple.com/devcenter/ios/index.action#](http://https://developer.apple.com/devcenter/ios/index.action#).
    Or, if you are using an existing ID, this must not be a wildcard one, that is,
    `com.yourcompany.*`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要从位于[https://developer.apple.com/devcenter/ios/index.action#](http://https://developer.apple.com/devcenter/ios/index.action#)的iOS配置文件门户内创建一个新的App
    ID。或者，如果您正在使用现有的ID，则该ID不能是通配符ID，即`com.yourcompany.*`。
- en: 'To enable iCloud services for your App ID, follow these simple steps:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要为您的App ID启用iCloud服务，请按照以下简单步骤操作：
- en: First, set up your provisioning profile for use with iCloud, by simply checking
    the **Enable for iCloud** checkbox from the **Configure App ID** screen.![Requesting
    entitlements for iCloud storage](img/2267EXP_02_02.jpg)
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，通过在**配置App ID**屏幕中勾选**启用iCloud**复选框来设置用于iCloud的配置文件。![请求iCloud存储权限](img/2267EXP_02_02.jpg)
- en: Next, you will be presented with a pop-up dialog box, explaining that any new
    provisioning profiles that you create using the chosen App ID will be enabled
    for iCloud services.![Requesting entitlements for iCloud storage](img/2267EXP_02_03.jpg)
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您将看到一个弹出对话框，解释您使用所选App ID创建的任何新配置文件都将启用iCloud服务。![请求iCloud存储权限](img/2267EXP_02_03.jpg)
- en: Once you have clicked on the **OK** button, the pop-up dialog box will disappear,
    and you will be returned back to the **Configure App ID** screen, and the **Enable
    for iCloud Enabled** button will be set to green, as shown in the following screenshot:![Requesting
    entitlements for iCloud storage](img/2267EXP_02_04.jpg)
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您点击了**确定**按钮，弹出对话框将消失，您将返回到**配置App ID**屏幕，并且**启用iCloud**按钮将变为绿色，如图所示：![请求iCloud存储权限](img/2267EXP_02_04.jpg)
- en: Click on the **Done** button to close this screen.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**按钮以关闭此屏幕。
- en: Next, from the **Provisioning** tab, download your **Development and Distribution
    Provisioning Profiles**.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从**配置**选项卡，下载您的**开发和分发配置文件**。
- en: Next, from the **ProjectNavigator** window, click on your project, then click
    on the **Targets** section, and then on the **Summary** page.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从**项目导航器**窗口，点击您的项目，然后点击**目标**部分，然后点击**摘要**页面。
- en: Scroll down till you get to the **Entitlements** section, and check the **Enable
    Entitlements** checkbox. This will add a file called **iCloudExample.entitlements**
    to your project.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到**权限**部分，勾选**启用权限**复选框。这将向您的项目添加一个名为**iCloudExample.entitlements**的文件。
- en: '![Requesting entitlements for iCloud storage](img/2267EXP_02_05.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![请求iCloud存储权限](img/2267EXP_02_05.jpg)'
- en: When you add entitlements to your project, they are bound directly to your applications
    provisioning profile that are used to separate your application's documents and
    data repositories from that of other applications that you create. There are two
    entitlements that an application can request, depending on which iCloud features
    it is required to use. These are explained in the following table.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 当您向项目添加权限时，它们会直接绑定到用于将您的应用程序文档和数据存储库与其他应用程序区分开来的应用程序配置文件。根据应用程序需要使用的iCloud功能，应用程序可以请求两种权限。这些权限在以下表格中解释。
- en: '| **Entitlement** | **Description** |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| **权限** | **描述** |'
- en: '| --- | --- |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `com.apple.developer.ubiquity-container-identifiers` | Use this to request
    the iCloud document storage entitlement.The value of this key is an array of container-identifier
    strings (the first string in the array must not contain any wildcard characters).
    |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `com.apple.developer.ubiquity-container-identifiers` | 使用此权限请求iCloud文档存储权限。此键的值是一个容器标识符字符串数组（数组中的第一个字符串不得包含任何通配符字符）。|'
- en: '| `com.apple.developer.ubiquity-kvstore-identifier` | Use this to request the
    iCloud key-value data store entitlement. The value of this key is a single container
    identifier string. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `com.apple.developer.ubiquity-kvstore-identifier` | 使用此权限请求iCloud键值数据存储权限。此键的值是一个单个容器标识符字符串。|'
- en: When you specify the container identifier string, this must be in the form`<TEAMID>.<CUSTOM_STRING>`,
    where`<TEAMID>` is the unique ten-character identifier associated with your development
    team. The`<CUSTOM_STRING>` identifier is a reverse-DNS string that identifies
    the container for storing your application's documents.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当你指定容器标识符字符串时，它必须采用`<TEAMID>.<CUSTOM_STRING>`的形式，其中`<TEAMID>`是与你的开发团队关联的唯一十位字符标识符。`<CUSTOM_STRING>`标识符是一个反向DNS字符串，用于标识存储你的应用程序文档的容器。
- en: This string does not necessarily need to be your application's bundle identifier,
    but can be anything that makes sense to you, or your development team.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 此字符串不一定需要是你的应用程序的捆绑标识符，但可以是对你或你的开发团队有意义的任何内容。
- en: Note
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To locate your unique identifier associated with your development team, log
    in to the Apple developer connection website, and then go to the **Member Center**
    page ([http://developer.apple.com/membercenter](http://developer.apple.com/membercenter)).
    From the **Member Center** home page, select the **Your Account** tab, and then
    select **Organization Profile** from the column on the left of that tab. Your
    team's identifier is in the **Company/Organization ID** field.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到与你的开发团队关联的唯一标识符，请登录到苹果开发者连接网站，然后转到**会员中心**页面([http://developer.apple.com/membercenter](http://developer.apple.com/membercenter))。从**会员中心**主页，选择**您的账户**选项卡，然后从该选项卡的左侧列中选择**组织概要**。你的团队标识符位于**公司/组织ID**字段中。
- en: Applications using iCloud document storage can specify multiple containers for
    storing documents and data. The value of the `com.apple.developer.ubiquity-container-identifiers`
    key is an array of strings. The first string in this array must be the main container
    identifier to associate with your application.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用iCloud文档存储的应用程序可以指定多个容器来存储文档和数据。`com.apple.developer.ubiquity-container-identifiers`键的值是一个字符串数组。此数组中的第一个字符串必须是与你的应用程序关联的主要容器标识符。
- en: The following code snippet shows the XML from the `iCloudExample` entitlements
    file that requests the keys for an iPhone application. It can read and write its
    own documents, which are stored in the container directory, identified as shown
    in the highlighted code sections.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段显示了`iCloudExample`权限文件的XML，该文件请求iPhone应用程序的密钥。它可以读取和写入其自己的文档，这些文档存储在容器目录中，如高亮代码部分所示。
- en: '[PRE1]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The following screenshot displays the property list view within the project
    navigator of the `iCloudExample.Entitlements` entitlements file.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了`iCloudExample.Entitlements`权限文件在项目导航器中的属性列表视图。
- en: '![Requesting entitlements for iCloud storage](img/2267EXP_02_06.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![请求iCloud存储的权限](img/2267EXP_02_06.jpg)'
- en: 'The **TEAMID** value (as shown in the previous screenshot), can be obtained
    from the **Account Summary** page of your **Developer Account** and using the
    **Individual ID**, as shown in the following screenshot:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**TEAMID**值（如前一张截图所示），可以从你的**开发者账户**的**账户摘要**页面和**个人ID**获取，如下一个截图所示：'
- en: '![Requesting entitlements for iCloud storage](img/2267EXP_02_07.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![请求iCloud存储的权限](img/2267EXP_02_07.jpg)'
- en: Note
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The strings you specify in your entitlements property-list file are also the
    strings you pass to the `URLForUbiquityContainerIdentifier:` method, when requesting
    the location of a directory in the user's iCloud storage.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你在entitlements属性列表文件中指定的字符串也是你传递给`URLForUbiquityContainerIdentifier:`方法以请求用户iCloud存储中目录位置的字符串。
- en: iCloud backup
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iCloud备份
- en: When using backups with iCloud, users have the ability to choose to have their
    applications and data backed up directly to their iCloud account. This makes it
    easier to restore applications to their most recent state at a later time. Choosing
    to have data backed up to iCloud, will make it easier for a user to reinstall
    their data to any new or existing iOS device.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用iCloud备份时，用户可以选择将他们的应用程序和数据直接备份到他们的iCloud账户。这使得在以后的时间恢复应用程序到最近的状态变得更容易。选择将数据备份到iCloud，将使用户更容易将数据重新安装到任何新的或现有的iOS设备上。
- en: iCloud determines what files get backed up, and is based on the location where
    these files are kept, normally within the applications, home directory. Other
    areas that are backed up would be everything contained within the user's documents
    directory, as well as the contents of your applications library. When developing
    iCloud applications, and minimizing the amount of data stored in the user's iCloud
    account, you are encouraged to put more files in the `Library/Caches` directory,
    especially if those files can be easily re-created or obtained in another way.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: iCloud会确定哪些文件需要备份，这基于文件存储的位置，通常在应用程序或主目录内。其他需要备份的区域包括用户文档目录内的所有内容，以及应用程序库的内容。在开发iCloud应用程序时，为了最小化存储在用户iCloud账户中的数据量，建议将更多文件放在`Library/Caches`目录中，尤其是那些可以轻松重新创建或以其他方式获取的文件。
- en: 'In order to have your data backed-up to iCloud, you will need to activate this
    on all of your iOS devices. This can be achieved by following these simple steps:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将您的数据备份到iCloud，您需要在所有iOS设备上激活此功能。这可以通过以下简单步骤实现：
- en: From the **Settings** pane within your device, select **iCloud**. This is shown
    in the following screenshot:![iCloud backup](img/2267EXP_02_08.jpg)
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从设备中的**设置**面板选择**iCloud**。这如图所示：![iCloud备份](img/2267EXP_02_08.jpg)
- en: Next, sign-in with your **AppleID** and **Password**, and then click on the
    **Sign In** button as shown in this screenshot.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用您的**AppleID**和**密码**登录，然后点击如图所示的**登录**按钮。
- en: You will need to agree to the iCloud terms and conditions, and then click on
    the **Agree** button to close the pop up dialog box.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要同意iCloud的条款和条件，然后点击**同意**按钮关闭弹出对话框。
- en: In the next screenshot, you have the option to decide which items you would
    like to backup to iCloud.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个屏幕截图中，您可以选择您想要备份到iCloud的项。
- en: Next, click on the **Storage & Backup** option to proceed to the next screen:![iCloud
    backup](img/2267EXP_02_09.jpg)
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击**存储与备份**选项进入下一屏幕：![iCloud备份](img/2267EXP_02_09.jpg)
- en: Next, set the **Back Up to iCloud** option to **ON**, from under the **Backup**
    sections pane. This will automatically backup all of your camera photos, documents,
    and settings to iCloud.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将**备份到iCloud**选项从**备份**部分设置为**开启**。这将自动将所有相机照片、文档和设置备份到iCloud。
- en: Note
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Setting this option to **ON** will prevent iTunes from backing up your details,
    as your iOS device will handle this.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 将此选项设置为**开启**将防止iTunes备份您的详细信息，因为您的iOS设备将处理这项工作。
- en: '![iCloud backup](img/2267EXP_02_10.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![iCloud备份](img/2267EXP_02_10.jpg)'
- en: When using the iCloud storage APIs from within your applications, any documents
    that your application stores explicitly in iCloud are not backed up with your
    application; this is because these will already be stored within your iCloud account,
    and therefore do not need to be backed up separately.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 当在应用程序中使用iCloud存储API时，任何应用程序明确存储在iCloud中的文档都不会与应用程序一起备份；这是因为这些文件已经存储在您的iCloud账户中，因此不需要单独备份。
- en: Note
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'For information on how to store documents within iCloud, refer to the section
    *Storing and using documents in iCloud*. To determine which directories are backed
    up, check out the **iOS Application Programming Guide** at: [http://developer.apple.com/library/ios/#documentation/iphone/conceptual/iphoneosprogrammingguide/Introduction/Introduction.html](http://developer.apple.com/library/ios/#documentation/iphone/conceptual/iphoneosprogrammingguide/Introduction/Introduction.html).'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 关于如何在iCloud中存储文档的信息，请参阅*在iCloud中存储和使用文档*部分。要确定哪些目录被备份，请查看[iOS应用程序编程指南](http://developer.apple.com/library/ios/#documentation/iphone/conceptual/iphoneosprogrammingguide/Introduction/Introduction.html)。
- en: Creating the iCloudExample application
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建iCloudExample应用程序
- en: Before we can proceed to create our `iCloudExample` application, we must first
    launch the Xcode development environment.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们创建`iCloudExample`应用程序之前，我们必须首先启动Xcode开发环境。
- en: Launch Xcode from the `/Developer/Applications` folder.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`/Developer/Applications`文件夹启动Xcode。
- en: Select the **Single View Application** template to use from the **Project**
    template dialog box.![Creating the iCloudExample application](img/2267EXP_02_11.jpg)
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**项目**模板对话框中选择**单视图应用程序**模板来使用。![创建iCloudExample应用程序](img/2267EXP_02_11.jpg)
- en: Then, click on the **Next** button to proceed to the next step in the Wizard.
    This will allow you to enter in the **Product Name** and your **Company Identifier**.![Creating
    the iCloudExample application](img/2267EXP_02_12.jpg)
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击**下一步**按钮继续到向导的下一个步骤。这将允许你输入**产品名称**和你的**公司标识符**。![创建iCloudExample应用程序](img/2267EXP_02_12.jpg)
- en: Enter in `iCloudExample` for the **Product Name**, and ensure that you have
    selected **iPhone** from the **Device Family** drop-down box.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**产品名称**输入为`iCloudExample`，并确保你已经从**设备家族**下拉框中选择了**iPhone**。
- en: Click on the **Next** button to proceed to the final step in the wizard.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**按钮继续到向导的最后一步。
- en: Choose the folder location where you would like to save your project.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你想要保存项目的文件夹位置。
- en: Click on the **Create** button to save your project at the location specified
    in *step 6*.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**按钮，将你的项目保存到*步骤6*中指定的位置。
- en: Once your project has been created, you will be presented with the Xcode development
    interface, along with the project files that the template created for you, within
    the **Project Navigator** window.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的项目创建完成，你将在**项目导航器**窗口中看到Xcode开发界面，以及模板为你创建的项目文件。
- en: 'Our next step is to start building our user interface to obtain the Cloud URL,
    store keys, and documents within the Cloud, and look how to retrieve information
    from the Cloud:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来的步骤是开始构建我们的用户界面以获取云URL，在云中存储密钥和文档，并了解如何从云中检索信息：
- en: Select the `iCloudExampleViewController.xib` file from within theiCloudExample
    folder within the **Project Navigator** window.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**项目导航器**窗口中，从`iCloudExample`文件夹中选择`iCloudExampleViewController.xib`文件。
- en: From the **Object Library**, select-and-drag a (`UIButton`) button control,
    onto the view.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**对象库**中选择并拖动一个(`UIButton`)按钮控制，到视图中。
- en: Modify the **Object Attributes** of the button control, and set the title to
    read **Geti Cloud URL**.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改按钮控制的**对象属性**，并将标题设置为**获取iCloud URL**。
- en: Select-and-drag a (`UILabel`) label control, onto the view, and place it directly
    under the **Get iCloud URL** button.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择并拖动一个(`UILabel`)标签控制到视图中，并将其放置在**获取iCloud URL**按钮下方。
- en: Modify the **Object Attributes** of the label control, and set the **Text**
    property to read **iCloud URL:**.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改标签控制的**对象属性**，并将**文本**属性设置为**iCloud URL:**。
- en: Repeat the previous steps to add the buttons and labels for the **Store to iCloud,
    DocPath, Read from iCloud**, and **Item Value**.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 重复之前的步骤添加**存储到iCloud、DocPath、从iCloud读取**和**项目值**的按钮和标签。
- en: If you have followed everything correctly, your view should look like the next
    screenshot. Feel free to adjust yours accordingly.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你一切操作正确，你的视图应该看起来像下一个截图。请随意根据需要进行调整。
- en: '![Creating the iCloudExample application](img/2267EXP_02_13.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![创建iCloudExample应用程序](img/2267EXP_02_13.jpg)'
- en: 'Now that we have created a user interface, you will need to bind up the controls
    to create the necessary events, and then follow these steps:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了一个用户界面，你需要将控件绑定起来以创建必要的事件，然后按照以下步骤操作：
- en: 'Open the `iCloudExampleViewController.h` interface file, located within the
    `iCloudExample` folder of your project, and add the following code:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开位于你项目`iCloudExample`文件夹中的`iCloudExampleViewController.h`接口文件，并添加以下代码：
- en: '[PRE2]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Open our `iCloudExampleViewController.m` implementation file, located within
    the `iCloudExample` folder of your project, and add the following highlighted
    code:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开位于你项目`iCloudExample`文件夹中的`iCloudExampleViewController.m`实现文件，并添加以下高亮代码：
- en: '[PRE3]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If we don't declare these, we will receive compiler-warning messages, which
    can result in unexpected results occurring in your application, or even make your
    application terminate unexpectedly.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们不声明这些，我们将收到编译器警告信息，这可能导致你的应用程序出现意外的结果，甚至可能导致应用程序意外终止。
- en: Next, we need to declare the method that will connect to the iCloud service,
    using our `TEAMID` and the bundle identifier, and retrieve the iCloud URL. Enter
    in the following code snippet.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要声明一个将连接到iCloud服务的方法，使用我们的`TEAMID`和捆绑标识符，并检索iCloud URL。输入以下代码片段。
- en: '[PRE4]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: When this button is executed, it will display the URL from your iCloud service,
    based on your TEAMID and bundle identifier.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当这个按钮被执行时，它将显示基于你的TEAMID和捆绑标识符的iCloud服务URL。
- en: '`file://localhost/private/var/mobile/Library/Mobile%20Documents/TEAMID~com~yourcompany~iCloudExample/`'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`file://localhost/private/var/mobile/Library/Mobile%20Documents/TEAMID~com~yourcompany~iCloudExample/`'
- en: 'Next, we need to implement our method that will be used to store a document
    into our iCloud sandbox. Enter in the following code snippet :'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要实现一个方法，该方法将用于将文档存储到我们的iCloud沙盒中。输入以下代码片段：
- en: '[PRE5]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: When this button is executed, this will display the path to the documents folder,
    located within the iCloud application sandbox:`/var/mobile/Applications/6BF2CE1F-C184-43FA-8D00-E4D476F8A538/Documents/iCloudExample.doc`.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当此按钮执行时，它将显示位于iCloud应用程序沙盒中的文档文件夹的路径：`/var/mobile/Applications/6BF2CE1F-C184-43FA-8D00-E4D476F8A538/Documents/iCloudExample.doc`。
- en: Next, if you open the **Organizer** window, by selecting **Window|Organizer**,
    you will notice that our `iCloudExample.doc` has been added to our application
    sandbox.![Creating the iCloudExample application](img/2267EXP_02_14.jpg)
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，如果您通过选择**窗口**|**组织者**打开**组织者**窗口，您会注意到我们的`iCloudExample.doc`已经被添加到我们的应用程序沙盒中。![创建iCloudExample应用程序](img/2267EXP_02_14.jpg)
- en: Next, we need to implement our method that will be used to add and retrieve
    key-value with our iCloud repository.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要实现一个方法，该方法将用于在我们的iCloud存储库中添加和检索键值。
- en: '[PRE6]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'When this button is executed, this will display the key entry value for our
    **Favorite Author** key-value data, located within the iCloud application sandbox:
    **Favorite Author = John Grisham**.'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当此按钮执行时，它将显示位于iCloud应用程序沙盒中的**Favorite Author**键值数据的键入值：**Favorite Author =
    John Grisham**。
- en: 'We are now ready to build and compile our `iCloudExample` application. The
    following screenshot shows the output when each of the buttons is pressed:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以构建和编译我们的`iCloudExample`应用程序。以下截图显示了按下每个按钮时的输出：
- en: '![Creating the iCloudExample application](img/2267EXP_02_15.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![创建iCloudExample应用程序](img/2267EXP_02_15.jpg)'
- en: So there you have it, we have successfully created a simple, yet powerful application
    that can communicate with iCloud to store documents and key-value data, and retrieve
    the data from the Cloud.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经成功创建了一个简单而强大的应用程序，它可以与iCloud通信来存储文档和键值数据，并从云中检索数据。
- en: Moving a document to iCloud storage
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将文档移动到iCloud存储
- en: When moving documents to iCloud, you have the ability to create additional subdirectories
    from within the container directory to manage your files.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 当将文档移动到iCloud时，您可以在容器目录内创建额外的子目录来管理您的文件。
- en: From a development point of view, it is recommended that when adding your documents
    to iCloud, you should create a `Documents` subdirectory and use that directory
    for storing user documents. Within iCloud, the contents of the `Documents` directory
    are made visible to the user so that individual documents can be deleted, whereas,
    everything outside of the `Documents` directory is grouped together, and treated
    as a single entity that a user can keep or delete.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 从开发的角度来看，建议在将文档添加到iCloud时，您应该创建一个`Documents`子目录，并使用该目录来存储用户文档。在iCloud中，`Documents`目录的内容对用户可见，因此可以删除单个文档，而`Documents`目录之外的所有内容则被组合在一起，作为一个用户可以保留或删除的单个实体。
- en: The following code snippet creates and saves the file locally within your application
    sandbox first, before moving the file to the specified destination within iCloud.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段首先在您的应用程序沙盒中创建并保存文件，然后再将文件移动到iCloud中指定的目标位置。
- en: '[PRE7]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In this code snippet, we create an `NSURL` object that specifies the destination
    of the file within the user's iCloud storage. We then make a call to the `URLForUbiquityContainerIdentifier:`
    method of the `NSFileManager` classto get the root URL for the directory, and
    then append any additional directory and filenames to that URL. Finally, we call
    the `setUbiquitous:itemAtURL:destinationURL:error:` method of `NSFileManager`,
    to move the file to the specified destination in iCloud.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在此代码片段中，我们创建了一个`NSURL`对象，该对象指定了文件在用户iCloud存储中的目标位置。然后我们调用`NSFileManager`类的`URLForUbiquityContainerIdentifier:`方法来获取目录的根URL，然后向该URL追加任何额外的目录和文件名。最后，我们调用`NSFileManager`的`setUbiquitous:itemAtURL:destinationURL:error:`方法，将文件移动到iCloud中指定的目标位置。
- en: iCloud storage APIs
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iCloud存储API
- en: The iCloud storage APIs let your application write user documents and data to
    a central location, and access those items from all of a user's computers and
    iOS devices.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: iCloud存储API允许您的应用程序将用户文档和数据写入中央位置，并从用户的全部计算机和iOS设备访问这些项目。
- en: Tip
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Making a user's documents ubiquitous using iCloud, means that a user can view
    or edit those documents from any device without having to sync or transfer files
    explicitly.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 使用iCloud使用户的文档无处不在，这意味着用户可以从任何设备查看或编辑这些文档，而无需显式同步或传输文件。
- en: 'Storing documents in a user''s iCloud account provides a layer of security
    for that user. If the user happens to lose their device, any documents that were
    saved on it can easily be recovered if they are contained within iCloud storage.
    There are two ways to utilize iCloud storage, each with its own significant purpose.
    These are explained in the following table:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在用户的iCloud账户中存储文档为用户提供了一层安全保障。如果用户不幸丢失了设备，如果这些文档包含在iCloud存储中，它们可以很容易地恢复。有两种方式可以利用iCloud存储，每种方式都有其重要的用途。以下表格中解释了这些用途：
- en: '| **Storage type** | **Description** |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| **存储类型** | **描述** |'
- en: '| --- | --- |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| iCloud document storage | Use this feature to store user documents and data
    in the user''s iCloud account. Refer to the section *Storing and using documents
    in iCloud*, located within this chapter. |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| iCloud文档存储 | 使用此功能将用户文档和数据存储在用户的iCloud账户中。请参阅本章中位于“在iCloud中存储和使用文档”部分的章节。
    |'
- en: '| iCloud key-value data storage | Use this feature to share small amounts of
    data among instances of your application. Refer to the section *Storing Key-Value
    data in iCloud*, located within this chapter. |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| iCloud键值数据存储 | 使用此功能在应用程序的实例之间共享少量数据。请参阅本章中位于“在iCloud中存储键值数据”部分的章节。 |'
- en: Most applications that you create will use the iCloud document storage to share
    documents from a user's iCloud account. This will provide the ability to share
    documents across multiple devices, and manage documents from a given device.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数你创建的应用程序都将使用iCloud文档存储来共享用户iCloud账户中的文档。这将提供跨多设备共享文档和管理特定设备上文档的能力。
- en: When using the iCloud key-value data store, this is not something that a user
    will see, as this is handled your application and shares only small amounts of
    information; this information is used only by the application. An example of this
    would be that you can store the time the user logged in to your application, or
    what screen they are currently viewing.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用iCloud键值数据存储时，用户不会看到这一点，因为这由你的应用程序处理，并且只共享少量信息；这些信息仅由应用程序使用。例如，你可以存储用户登录你的应用程序的时间，或者他们当前正在查看的屏幕。
- en: The following screenshot shows the process involved when creating information
    within local iCloud storage, within your application's sandbox.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了在应用程序沙盒中创建本地iCloud存储信息的过程。
- en: '![iCloud storage APIs](img/2267EXP_02_16.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![iCloud存储API](img/2267EXP_02_16.jpg)'
- en: Note
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more information on how to go about storing and using documents within iCloud,
    refer to the section *Storing and using documents in iCloud*, located within this
    chapter.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 关于如何在iCloud中存储和使用文档的更多信息，请参阅本章中位于“在iCloud中存储和使用文档”部分的章节。
- en: Searching for documents in iCloud
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在iCloud中搜索文档
- en: There may be times when you need to check to see if a document exists at a location
    within the Cloud, prior to modifying the document. An example would be, say you
    wanted to check if a document existed prior to opening it within your application.
    If you don't perform a check and try to open this, you will receive an error.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，在修改文档之前，你可能需要检查云中某个位置的文档是否存在。例如，如果你想在应用程序中打开文档之前检查该文档是否存在，如果不进行检查而尝试打开，你将收到一个错误。
- en: Another case could be that you need to remove a file from your iCloud repository;
    you would still need to perform a check to ensure that the document indeed exists
    prior to attempting to remove this file, otherwise you will receive an improperly
    handled error, resulting in your application crashing.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种情况可能是你需要从你的iCloud存储库中删除一个文件；在尝试删除此文件之前，你仍然需要执行检查以确保该文档确实存在，否则你将收到一个处理不当的错误，导致你的应用程序崩溃。
- en: To achieve any of these case scenarios, you will need to search the iCloud repository
    using the `NSMetadataQuery` object. Searching through the iCloud repository is
    a guaranteed way to locate documents, both in a user's iCloud storage and from
    within your application sandbox.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现任何这些案例场景，你需要使用`NSMetadataQuery`对象搜索iCloud存储库。通过iCloud存储库进行搜索是确保在用户的iCloud存储和你的应用程序沙盒中找到文档的可靠方法。
- en: You should always use query objects instead of saving URLs persistently, because
    the user can delete files from iCloud storage when your application is not running.
    Using a query to search is the only way to ensure an accurate list of documents.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该始终使用查询对象而不是持久保存URL，因为当你的应用程序未运行时，用户可以删除iCloud存储中的文件。使用查询进行搜索是确保准确文档列表的唯一方法。
- en: '[PRE8]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The following code snippet displays the associated `processQuery` method of
    the `NSNotification` class, and shows how we can perform and handle comparisons
    for each of the various `NSMetadataQuery` notification methods.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段显示了`NSNotification`类的关联`processQuery`方法，并展示了我们如何为每个不同的`NSMetadataQuery`通知方法执行和处理比较。
- en: '[PRE9]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In iOS 5.0, the `NSMetadataQuery` class supports several search scopes for your
    documents. This is shown in the following table.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在iOS 5.0中，`NSMetadataQuery`类支持几个用于文档的搜索作用域。如下表所示。
- en: '| **NSMetadataQueryclass methods** | **Description** |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| **NSMetadataQuery类方法** | **描述** |'
- en: '| --- | --- |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `NSMetadataQueryUbiquitousDocumentsScope` | Use this feature to search for
    documents in iCloud that reside inside a documents directory (for any given container
    directory, put documents that the user is allowed to access inside a documents
    subdirectory). |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| `NSMetadataQueryUbiquitousDocumentsScope` | 使用此功能在iCloud中搜索位于文档目录内的文档（对于任何给定的容器目录，将用户允许访问的文档放在文档子目录中）。
    |'
- en: '| `NSMetadataQueryUbiquitousDataScope` | Use this feature to search for documents
    in iCloud that reside anywhere other than in a documents directory (for any given
    container directory, use this scope to store user-related data files that your
    application needs to share, but are not files you want the user to manipulate
    directly). |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| `NSMetadataQueryUbiquitousDataScope` | 使用此功能在iCloud中搜索位于除文档目录之外的任何位置的文档（对于任何给定的容器目录，使用此作用域来存储您的应用程序需要共享但不想让用户直接操作的用户相关数据文件）。
    |'
- en: Working with documents in iCloud
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在iCloud中处理文档
- en: When your application needs to read or write a document in iCloud, it must do
    so in a coordinated manner. Your application might not be the only application
    trying to manipulate the local file at any given moment. The daemon that transfers
    the document to and from iCloud also needs to monitor the file periodically. To
    prevent your application from interfering with the daemon (and vice versa), iOS
    provides a coordinated locking mechanism that works with the files and directories
    you target for iCloud storage.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的应用程序需要读取或写入iCloud中的文档时，它必须以协调的方式进行。您的应用程序可能不是唯一试图在任何给定时刻操作本地文件的应用程序。将文档传输到和从iCloud的守护进程也需要定期监控文件。为了防止您的应用程序干扰守护进程（反之亦然），iOS提供了一个与您针对iCloud存储目标文件和目录协同工作的锁定机制。
- en: At the heart of the iCloud locking mechanism are file coordinators and file
    presenters.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: iCloud锁定机制的核心是文件协调器和文件展示者。
- en: The file coordinator
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文件协调器
- en: Whenever you need to read and write a file, you do so using a file coordinator,
    which is an instance of the `NSFileCoordinator` class. The job of a file coordinator
    is to coordinate the reads and writes performed by your application and the sync
    daemon on the same document. For example, your application and the daemon may
    both read the document at the same time, but only one may write to the file at
    any single time.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 每次您需要读取和写入文件时，您都应使用文件协调器，它是`NSFileCoordinator`类的一个实例。文件协调器的任务是协调应用程序和同步守护进程在相同文档上执行的读取和写入操作。例如，您的应用程序和守护进程可能同时读取文档，但任何时候只能有一个写入文件。
- en: Also, if one process is reading the document, the other process is prevented
    from writing to the document, until the earlier process is finished reading the
    document.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果一个进程正在读取文档，则另一个进程将被阻止向文档写入，直到先前的进程完成读取文档。
- en: The file presenter
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文件展示者
- en: In addition to coordinating operations, file coordinators also work with file
    presenters to notify applications when changes are about to occur. A file presenter
    is any object that conforms to the `NSFilePresenter` protocol, and takes responsibility
    for managing a specific file (or directory of files) in an application.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 除了协调操作外，文件协调器还与文件展示者合作，通知应用程序何时将要发生更改。文件展示者是指任何遵循`NSFilePresenter`协议的对象，并负责管理应用程序中特定文件（或文件目录）。
- en: The job of a file presenter is to protect the integrity of its own data structures.
    It does this by listening for messages from other file coordinators and using
    those messages to update its internal data structures. In most cases, a file presenter
    may not have to do anything. However, if a file coordinator declares that it is
    about to move a file to a new URL, the file presenter would need to replace its
    old URL with the new one provided to it by the file coordinator.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 文件展示者的工作是保护其自身数据结构的完整性。它是通过监听来自其他文件协调器的消息并使用这些消息来更新其内部数据结构来做到这一点的。在大多数情况下，文件展示者可能不需要做任何事情。然而，如果一个文件协调器声明它即将将文件移动到新的URL，文件展示者就需要用文件协调器提供给它的新URL替换其旧的URL。
- en: Handling file-version conflicts
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理文件版本冲突
- en: Handling version conflicts of files is a common issue in software development.
    With iCloud, we need to be able to handle this when multiple instances of your
    application are running on multiple devices, and both try to modify the same document.
    This will result in a conflict when both devices try to upload the changes made
    to the file at the same time.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 处理文件版本冲突是软件开发中常见的问题。使用iCloud时，我们需要能够在多个设备上运行多个应用程序实例时处理这种情况，并且它们都尝试修改同一文档。当两个设备同时尝试上传对文件的更改时，这将导致冲突。
- en: At this point, iCloud will end up with two different versions of the same file,
    and has to decide what to do with them. Its solution is to make the most recently
    modified file the current file, and to mark any other versions of the file as
    conflict versions.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 到这一点，iCloud将会有同一文件的两种不同版本，并必须决定如何处理它们。它的解决方案是将最近修改的文件作为当前文件，并将任何其他版本的文件标记为冲突版本。
- en: To avoid loss of changes made to those documents, your application will need
    to prompt the user to choose the appropriate course of action to take. For example,
    you might let the user choose which version of the file to keep, or you might
    offer to save the older version under a new name.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免丢失对那些文档所做的更改，您的应用程序将需要提示用户选择适当的操作步骤。例如，您可能让用户选择保留文件的哪个版本，或者您可能提供将旧版本保存为新名称的选项。
- en: You would need to determine the current files, version, using the `currentVersionOfItemAtURL:`
    class method, and then obtain an array of the conflicted versions, by using the
    class method call to `unresolvedConflictVersionsOfItemAtURL:`.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要确定当前文件和版本，使用`currentVersionOfItemAtURL:`类方法，然后通过调用`unresolvedConflictVersionsOfItemAtURL:`类方法来获取冲突版本的数组。
- en: 'For each conflicted file version, you will need to perform the appropriate
    cause of action to resolve the conflict, by using any of these actions, listed
    as follows:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个冲突的文件版本，您需要执行适当的操作来解决冲突，可以通过以下列出的任何操作来实现：
- en: Merge the conflicted versions with the current file automatically, if this is
    practical to do so.
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动将冲突版本与当前文件合并，如果这样做是可行的。
- en: Choose to ignore the conflicted versions, which will result in data being lost
    in those files.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择忽略冲突版本，这将导致那些文件中的数据丢失。
- en: Prompt the user to select the appropriate course of action, and decide which
    of the versions that they should indeed keep. This should always be your last
    course of action.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提示用户选择适当的操作步骤，并决定他们确实应该保留哪个版本。这应该是您的最后一步行动。
- en: Using iCloud storage responsibly
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 负责任地使用iCloud存储
- en: 'Applications that take advantage of iCloud storage features should act responsibly
    when storing data. The space available in each user''s account is limited and
    is shared by all applications. In addition, users can see how much space is consumed
    by a given application, and choose to delete documents and data associated with
    that particular application. For these reasons, it is in your application''s interest
    to be responsible about what files you store. Here are some tips to help you manage
    documents appropriately:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 利用iCloud存储功能的程序在存储数据时应负责任。每个用户账户中可用的空间是有限的，并且由所有应用程序共享。此外，用户可以看到特定应用程序消耗了多少空间，并可以选择删除与该特定应用程序关联的文档和数据。出于这些原因，您的应用程序在管理文件时应负责任。以下是一些帮助您适当管理文档的建议：
- en: Rather than storing all documents, let a user choose which documents to store
    in an iCloud account. If a user creates a large number of documents, storing all
    of those documents in iCloud could overwhelm that user's available space. Providing
    a way for a user to designate which documents to store in iCloud, gives that user
    more flexibility in deciding how best to use the available space.
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 而不是存储所有文档，让用户选择他们想要存储在iCloud账户中的文档。如果用户创建了大量的文档，将所有这些文档存储在iCloud中可能会耗尽用户的可用空间。为用户提供一种指定要存储在iCloud中的文档的方式，可以让用户在决定如何最好地使用可用空间时拥有更多的灵活性。
- en: Remember that deleting a document removes it from a user's iCloud account and
    from all of that user's computers and devices. Make sure that users are aware
    of this fact and confirm any delete operations. For your application to remove
    the local copy of a document, and then download a fresh copy from iCloud, use
    the `evictUbiquitousItemAtURL:error:` method of `NSFileManager`.
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记住，删除文档会将其从用户的iCloud账户以及所有该用户的计算机和设备中删除。确保用户知道这一点，并确认任何删除操作。为了使你的应用程序删除文档的本地副本，然后从iCloud下载一个新的副本，请使用`NSFileManager`的`evictUbiquitousItemAtURL:error:`方法。
- en: When storing documents in iCloud, place them in a documents directory whenever
    possible. Documents inside a documents directory can be deleted individually by
    the user to free up space. However, everything outside that directory is treated
    as data, and must be deleted all at once.
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当在iCloud中存储文档时，尽可能将它们放在文档目录中。用户可以单独删除文档目录中的文档以释放空间。然而，该目录之外的所有内容都被视为数据，必须一次性删除。
- en: Never store caches or other files that are private to your application in a
    user's iCloud storage. A user's iCloud account should only be used for storing
    user data and content.
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 永远不要在用户的iCloud存储中存储你的应用程序专有的缓存或其他文件。用户的iCloud账户应仅用于存储用户数据和内容。
- en: Treat files in iCloud the same way you treat all other files in your application
    sandbox. The time at which to save a file should be driven by the need of your
    application, and the need to preserve the user's data. You should not change your
    application to save files more or less frequently for iCloud. iCloud automatically
    optimizes its transfers to the server to ensure the best possible performance.
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以对待你应用程序沙盒中所有其他文件的方式对待iCloud中的文件。保存文件的时间应由你应用程序的需求以及保留用户数据的需求来驱动。你不应该改变你的应用程序以更频繁或更少地保存文件到iCloud。iCloud会自动优化其到服务器的传输，以确保最佳性能。
- en: iCloud secures your content by encrypting it using SSL, when it is being sent
    over the internet. This results in your content being stored in encrypted format,
    and uses secure tokens for authentication.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 当内容通过互联网发送时，iCloud通过使用SSL对其进行加密来保护你的内容。这导致你的内容以加密格式存储，并使用安全令牌进行身份验证。
- en: Note
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more information on how to go about storing and using documents within iCloud,
    refer to the section *Storing and using documents in iCloud*, located within this
    chapter.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 关于如何在iCloud中存储和使用文档的更多信息，请参阅本章中位于“在iCloud中存储和使用文档”部分的说明。
- en: Summary
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about the benefits of using iCloud, and how to access
    them through their storage APIs. We looked at how we can incorporate iCloud features
    within our code, how to store and retrieve key-value data, and how to store documents
    within a folder inside our application sandbox.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了使用iCloud的好处，以及如何通过它们的存储API来访问它们。我们探讨了如何在我们的代码中集成iCloud功能，如何存储和检索键值数据，以及如何在应用程序沙盒内的文件夹中存储文档。
- en: We also learned about the process involved in how to search and locate a document
    within an iCloud repository, as well as learned to handle and avoid file-version
    conflicts when multiple copies of the same file are being updated on more than
    one device, and then being submitted to the iCloud repository.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还学习了如何在iCloud存储库中搜索和定位文档的过程，以及如何处理和避免在多个设备上更新同一文件的多个副本时提交到iCloud存储库所遇到的文件版本冲突。
- en: In the next chapter, we will learn about the new debugging features of OpenGL
    ES, and how this new debugger in Xcode allows you to track-down issues specific
    to OpenGL ES directly within your code, right from within the IDE.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习OpenGL ES的新调试功能，以及这个新的Xcode调试器如何允许你直接在IDE中跟踪OpenGL ES代码中的特定问题。
