["```swift\n    cd <code_directory>/CH06_code/MTWebService/MTWebService\n\n    ```", "```swift\n    xsp4\n    Listening on address: 0.0.0.0\n    Root directory: /Users/dtavlikos/projects/CH06_code/MTWebService/ MTWebService\n    Listening on port: 8080 (non-secure)\n    Hit Return to stop the server. \n\n    ```", "```swift\n    this.buttonFetchData.TouchUpInside += delegate {\n    using (MTTestWebService webService = new MTTestWebService()){\n    this.lblMessage.Text = webService.GetMessage (\"Hello Web Service!\");\n    }\n    } ;\n\n    ```", "```swift\n    using WebServiceApp.mtWebService;\n\n    ```", "```swift\nthis.lblMessage.Text = webService.GetMessage (\"Hello Web Service!\");\n\n```", "```swift\n    this.buttonInvoke.TouchUpInside += delegate {\n    int a = 5;\n    int b = 12;\n    MTTestWebService webService = new MTTestWebService ();\n    webService.MultiplyNumbersCompleted += MultiplyNumbers_CompletedHandler;\n    webService.MultiplyNumbersAsync (a, b);\n    UIApplication.SharedApplication. NetworkActivityIndicatorVisible = true;\n    this.lblMessage.Text = String.Format ( \"Multiplying {0} by {1}\", a, b);\n    } ;\n\n    ```", "```swift\n    private void MultiplyNumbers_CompletedHandler ( object sender, MultiplyNumbersCompletedEventArgs args){\n    UIApplication.SharedApplication. NetworkActivityIndicatorVisible = false;\n    this.InvokeOnMainThread (delegate {\n    this.lblMessage.Text = String.Format ( \"Multiplication result: {0}\", args.Result);\n    } );\n    }\n\n    ```", "```swift\nUIApplication.SharedApplication.NetworkActivityIndicatorVisible = true;\n\n```", "```swift\nif (null != args.Error){\n// Something went wrong, handle appropriately.\n}\n\n```", "```swift\ncd <code_directory>/CH06_code/ WcfService/WcfService\n./start_wcfservice.sh\n\n```", "```swift\n    \"c:\\Program Files\\Microsoft SDKs\\Silverlight\\v3.0\\Tools\\slsvcutil /noconfig http://192.168.1.18:8080/WcfService.svc?wsdl\" \n\n    ```", "```swift\n    this.buttonFetchData.TouchUpInside += delegate( object sender, EventArgs e) {\n    WcfTestServiceClient client = new WcfTestServiceClient ( new BasicHttpBinding (), new EndpointAddress ( \"http://192.168.1.18:8080/WcfTestService.svc\"));\n    client.GetBookInfoCompleted += WcfTestServiceClient_GetBookInfoCompleted;\n    client.GetBookInfoAsync ();\n    UIApplication.SharedApplication. NetworkActivityIndicatorVisible = true;\n    } ;\n\n    ```", "```swift\n    private void WcfTestServiceClient_GetBookInfoCompleted ( object sender, GetBookInfoCompletedEventArgs e){\n    this.InvokeOnMainThread (delegate {\n    UIApplication.SharedApplication. NetworkActivityIndicatorVisible = false;\n    this.labelResult.Text = String.Format (\"Book title: {0}\\nAuthor: {1}\", e.Result.Title, e.Result.Name);\n    } );\n    }\n\n    ```", "```swift\nclient.GetBookInfoCompleted += WcfTestServiceClient_GetBookInfoCompleted;\nclient.GetBookInfoAsync ();\n\n```", "```swift\nthis.labelResult.Text = String.Format ( \"Book title: {0}\\nAuthor: {1}\", e.Result.Title, e.Result.Name);\n\n```", "```swift\n    using System.Json;\n    using System.Net;\n    using System.IO;\n\n    ```", "```swift\n    private JsonValue GetJsonObject (){\n    string responseString = string.Empty;\n    Uri uri = new Uri (\"http://192.168.1.18:8080/mtjson.txt\");\n    HttpWebRequest request = new HttpWebRequest (uri);\n    request.Method = \"GET\";\n    HttpWebResponse response = request.GetResponse () as HttpWebResponse;\n    using (StreamReader sr = new StreamReader(response.GetResponseStream())) {\n    responseString = sr.ReadToEnd ();\n    }\n    response.Close ();\n    return JsonValue.Parse (responseString);\n    }\n\n    ```", "```swift\n    JsonValue json = this.GetJsonObject ();\n    this.labelResponse.Text = String.Format (\"File name: {0}\\n Description: {1}\", json [\"filename\"], json [\"description\"]);\n\n    ```", "```swift\n{\n\"filename\":\"mtjson.txt\",\n\"description\":\"a sample json object\"\n}\n\n```", "```swift\nHttpWebRequest request = new HttpWebRequest (uri);\nrequest.Method = \"GET\";\n\n```", "```swift\nHttpWebResponse response = request.GetResponse () as HttpWebResponse;\nusing (StreamReader sr = new StreamReader(response.GetResponseStream())) {\nresponseString = sr.ReadToEnd ();\n}\n\n```", "```swift\nreturn JsonValue.Parse (responseString);\n\n```", "```swift\nthis.labelResponse.Text = String.Format (\"File name: {0}\\nDescription: {1}\", json [\"filename\"], json [\"description\"]);\n\n```", "```swift\n//json[0], json[1] etc...\n\n```", "```swift\nJsonObject obj = new JsonObject (new KeyValuePair<string, JsonValue> (\"filename\", JsonValue.Parse (\"\\\"mtjson.txt\\\"\")), new KeyValuePair<string, JsonValue>(\"description\", JsonValue.Parse(\"\\\"a sample json object\\\"\")));\n\n```"]