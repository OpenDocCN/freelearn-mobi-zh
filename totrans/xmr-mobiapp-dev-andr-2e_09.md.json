["```java\nLocationManager locMgr;\n. . .\nlocMgr = (LocationManager) GetSystemService (Context.LocationService);\n```", "```java\nCriteria criteria = new Criteria();\ncriteria.Accuracy = Accuracy.NoRequirement;\ncriteria.PowerRequirement = Power.NoRequirement;\n```", "```java\nlocMgr.RequestSingleUpdate (criteria, this, null);\n```", "```java\nvoid OnLocationChanged (Location location);\nvoid OnProviderDisabled (string provider);\nvoid OnProviderEnabled (string provider);\nvoid OnStatusChanged (string provider, Availability status, Bundle extras);\n```", "```java\n    LocationManager locMgr;\n    ...\n    public override View OnCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)\n    {\n      View view = inflater.Inflate(Resource.Layout.POIListFragment, container, false);\n      progressBar = view.FindViewById&lt;ProgressBar&gt; (Resource.Id.progressBar);\n      SetHasOptionsMenu (true);\n      locMgr = (LocationManager) Activity.GetSystemService (Context.LocationService);\n      return view;\n    }\n    ```", "```java\n    public class POIListFragment: ListFragment, ILocationListener\n    {\n      ...\n    }\n    ```", "```java\n    public override void OnResume ()\n    {\n      base.OnResume ();\n      DownloadPoisListAsync ();\n       Criteria criteria = new Criteria ();\n      criteria.Accuracy = Accuracy.NoRequirement;\n      criteria.PowerRequirement = Power.NoRequirement;\n      string provider = locMgr.GetBestProvider (criteria, true);\n      locMgr.RequestLocationUpdates (provider, 2000, 100, this);\n    }\n    ```", "```java\n    protected override void OnPause ()\n    {\n      base.OnPause ();\n      locMgr.RemoveUpdates (this);\n    }\n    ```", "```java\n    public Location CurrentLocation { get; set; }\n    ```", "```java\n    public void OnLocationChanged (Location location)\n    {\n    (this.ListAdapter as POIListViewAdapter).CurrentLocation = location;this.ListView.InvalidateViews ();     \n    }\n    ```", "```java\n    var distanceTextView = view.FindViewById&lt;TextView&gt; (Resource.Id.distanceTextView);\n    if ((CurrentLocation != null) &amp;&amp; (poi.Latitude.HasValue) &amp;&amp; (poi.Longitude.HasValue)) {\n      Location poiLocation = new Location (\"\");\n      poiLocation.Latitude = poi.Latitude.Value;\n      poiLocation.Longitude = poi.Longitude.Value;\n      float distance = CurrentLocation.DistanceTo (poiLocation) * 0.000621371F;\n      distanceTextView.Text = String.Format(\"{0:0,0.00}  miles\", distance);\n    }\n    else {\n      distanceTextView.Text = \"??\";\n    }\n    ```", "```java\n    .. . &lt;/TableLayout&gt; \n    &lt;LinearLayout\n             p1:orientation=\"horizontal\"\n             p1:layout_width=\"wrap_content\"\n             p1:layout_height=\"wrap_content\"\n             p1:layout_gravity=\"center_horizontal\"\n             p1:minWidth=\"25px\"\n             p1:minHeight=\"25px\"\n             p1:layout_marginTop=\"10dp\"\n             p1:layout_marginBottom=\"10dp\"&gt;\n             &lt;ImageButton\n               p1:src=\"img/ic_locate\"\n               p1:layout_width=\"wrap_content\"\n               p1:layout_height=\"wrap_content\"\n               p1:id=\"@+id/locationImageButton\" /&gt;\n             &lt;ImageButton\n               p1:src=\"img/ic_map\"\n               p1:layout_width=\"wrap_content\"\n               p1:layout_height=\"wrap_content\"\n               p1:id=\"@+id/mapImageButton\" /&gt;\n    &lt;/LinearLayout&gt;\n    ```", "```java\n    locMgr = (LocationManager) Activity.GetSystemService (Context.LocationService);\n    ```", "```java\n    _locationImageButton = FindViewById&lt;ImageButton&gt;\n             (Resource.Id.locationImageButton);\n           _locationImageButton.Click += GetLocationClicked;\n    ```", "```java\n    protected void GetLocationClicked(object sender, EventArgs   e)\n           {\n             Criteria criteria = new Criteria();\n             criteria.Accuracy = Accuracy.NoRequirement;\n             criteria.PowerRequirement = Power.NoRequirement;\n             locMgr.RequestSingleUpdate (criteria, this, null);\n           }\n    ```", "```java\n    public void OnLocationChanged (Location location)\n           {\n             _latEditText.Text = location.Latitude.ToString();\n             _longEditText.Text = location.Longitude.ToString ();\n           }\n    ```", "```java\n    public void OnLocationChanged (Location location)\n    {\n        _latEditText.Text = location.Latitude.ToString();\n        _longEditText.Text = location.Longitude.ToString ();\n        Geocoder geocdr = new Geocoder(activity);\n        IList&lt;Address&gt; addresses = geocdr.GetFromLocation (location.Latitude, location.Longitude, 5);\n        if (addresses.Any()) {\n            UpdateAddressFields (addresses.First ());\n        } \n    }\n    ```", "```java\nprotected void UpdateAddressFields(Address addr)\n{\n    if (String.IsNullOrEmpty(_nameEditText.Text))\n        _nameEditText.Text = addr.FeatureName;\n    if (String.IsNullOrEmpty(_addrEditText.Text)) \n    {\n      for (int i = 0; i &lt; addr.MaxAddressLineIndex; i++) {\n        if (!String.IsNullOrEmpty(_addrEditText.Text))\n              _addrEditText.Text += System.Environment.NewLine;\n        _addrEditText.Text += addr.GetAddressLine (i);\n      }\n    } \n}\n```", "```java\n    public class ProgressDialogFragment : DialogFragment\n    {\n      public override Dialog OnCreateDialog (Android.OS.Bundle savedInstanceState)\n      {\n        Cancelable = false;\n        ProgressDialog _progressDialog = new ProgressDialog (Activity);\n        _progressDialog.SetMessage (\"Getting location...\");\n        _progressDialog.Indeterminate = true;\n        _progressDialog.SetProgressStyle (ProgressDialogStyle.Spinner);\n        return _progressDialog;\n      }\n    }\n    ```", "```java\n    FragmentTransaction ft = FragmentManager.BeginTransaction();\n    var dialogFragment = new ProgressDialogFragment ();\n    dialogFragment.Show(ft, \"progress_dialog\");\n    ```", "```java\n    FragmentTransaction ft = FragmentManager.BeginTransaction();\n    ProgressDialogFragment dialogFragment = (ProgressDialogFragment) FragmentManager.FindFragmentByTag(\"progress_dialog\");\n    if (dialogFragment != null) {\n      ft.Remove (dialogFragment).Commit();\n    }\n    ```", "```java\nAndroid.Net.Uri geoUri;\nif (String.IsNullOrEmpty (_addrEditText.Text)) {\n  geoUri = Android.Net.Uri.Parse (String.Format(\"geo:{0},{1}\", _poi.Latitude, _poi.Longitude));\n}\nelse {\n  geoUri = Android.Net.Uri.Parse (String.Format(\"geo:0,0?q={0}\", _addrEditText.Text));\n}\nIntent mapIntent = new Intent (Intent.ActionView, geoUri);\n```", "```java\nPackageManager packageManager = Activity.PackageManager;\nIList&lt;ResolveInfo&gt; activities = packageManager.QueryIntentActivities(mapIntent, 0);\nif (activities.Count == 0) {\n  Toast.MakeText (activity, \"No map app available.\", ToastLength.Short).Show ();\n} \nelse\n{\n  StartActivity (mapIntent);\n}\n```", "```java\nprotected void MapClicked(object sender, EventArgs   e){\n  Android.Net.Uri geoUri;\n  if (String.IsNullOrEmpty (_addrEditText.Text)) {\n    geoUri = Android.Net.Uri.Parse (String.Format(\"geo:{0},{1}\", _poi.Latitude, _poi.Longitude));\n  }\n  else {\n    geoUri = Android.Net.Uri.Parse (String.Format(\"geo:0,0?q={0}\", _addrEditText.Text));\n  }\n  Intent mapIntent = new Intent (Intent.ActionView, geoUri);\n   PackageManager packageManager = Activity.PackageManager;\n  IList&lt;ResolveInfo&gt; activities = packageManager.QueryIntentActivities(mapIntent, 0);\n  if (activities.Count == 0) {\n    Toast.MakeText (activity, \"No map app available.\", ToastLength.Short).Show ();\n  } \n  else\n  {\n    StartActivity (mapIntent);\n  }\n}\n```"]