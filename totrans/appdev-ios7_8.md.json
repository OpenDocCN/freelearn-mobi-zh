["```swift\nUIDynamicAnimator* animator;\nUIGravityBehavior* gravity;\n```", "```swift\nanimator = [[UIDynamicAnimator alloc] initWithReferenceView:self.view];\ngravity = [[UIGravityBehavior alloc] initWithItems:@[self.foodImageView]];\n    [animator addBehavior:gravity];\n```", "```swift\ngravity.magnitude = 0.1f;\n```", "```swift\ngravity.magnitude = 10.0f;\n```", "```swift\nUICollisionBehavior *collision;\n```", "```swift\ncollision = [[UICollisionBehavior alloc] initWithItems:@[self.foodImageView]];\ncollision.translatesReferenceBoundsIntoBoundary = YES;\n\n[animator addBehavior:collision];\n```", "```swift\ncollision = [[UICollisionBehavior alloc] initWithItems:@[self.foodImageView, self.foodDateLabel]];\n```", "```swift\ncollision = [[UICollisionBehavior alloc] initWithItems:@[self.foodImageView, self.foodDateLabel]];\n```", "```swift\n// Add a boundary to the top edge\nCGPoint topEdge = CGPointMake(self.foodDateLabel.frame.origin.x + self.foodDateLabel.frame.size.width, self.foodDateLabel.frame.origin.y);\n[collision addBoundaryWithIdentifier:@\"barrier\" fromPoint:self.foodDateLabel.frame.origin toPoint:topEdge];\n```", "```swift\nUIDynamicItemBehavior* itemBehaviour = [[UIDynamicItemBehavior alloc] initWithItems:@[self.foodImageView]];\nitemBehaviour.elasticity = 0.6;\n[animator addBehavior:itemBehaviour];\n```", "```swift\n@interface FoodDetailViewController : UIViewController <UICollisionBehaviorDelegate>\n```", "```swift\ncollision.collisionDelegate = self;\n```", "```swift\n- (void)collisionBehavior:(UICollisionBehavior *)behavior beganContactForItem:(id<UIDynamicItem>)item withBoundaryIdentifier:(id<NSCopying>)identifier atPoint:(CGPoint)p {\n\n    NSLog(@\"Boundary contact occurred - %@\", identifier);\n\n}\n```", "```swift\n- (void)collisionBehavior:(UICollisionBehavior *)behavior beganContactForItem:(id<UIDynamicItem>)item withBoundaryIdentifier:(id<NSCopying>)identifier atPoint:(CGPoint)p {\n\n    if ([(NSString *)identifier isEqualToString:@\"barrier\"]) {\n        // The barrier was collided with\n        [UIView animateWithDuration:0.3f animations:^{\n\n            self.foodImageView.alpha = 0.0f;\n\n        }];\n    }\n\n}\n```", "```swift\nBOOL firstBounce;\n```", "```swift\n- (void)collisionBehavior:(UICollisionBehavior *)behavior beganContactForItem:(id<UIDynamicItem>)item withBoundaryIdentifier:(id<NSCopying>)identifier atPoint:(CGPoint)p {\n\n    if (!firstBounce) {\n\n        firstBounce = YES;\n\n        UIView* square = [[UIView alloc] initWithFrame:CGRectMake(self.view.bounds.size.width / 2 - 50, 400, 100, 100)];\n        square.backgroundColor = [UIColor greenColor];\n        [self.view addSubview:square];\n\n        [collision addItem:square];\n        [gravity addItem:square];\n\n        UIAttachmentBehavior* attach = [[UIAttachmentBehavior alloc] initWithItem:self.foodImageView attachedToItem:square];\n        [animator addBehavior:attach];\n\n    }\n\n}\n```", "```swift\nUISnapBehavior *snapBehaviour = [[UISnapBehavior alloc] initWithItem:self.foodImageView snapToPoint:CGPointMake(160, 202)];\nsnapBehaviour.damping = 0.65f;\n[animator addBehavior:snapBehaviour];\n```", "```swift\nUIInterpolatingMotionEffect *horizontalMotionEffect = [[UIInterpolatingMotionEffect alloc] initWithKeyPath:@\"center.x\" type:UIInterpolatingMotionEffectTypeTiltAlongHorizontalAxis];\n\nhorizontalMotionEffect.minimumRelativeValue = @(-30);\nhorizontalMotionEffect.maximumRelativeValue = @(30);\n\n[self.foodImageView addMotionEffect:horizontalMotionEffect];\n[self.foodNameLabel addMotionEffect:horizontalMotionEffect];\n[self.foodDateLabel addMotionEffect:horizontalMotionEffect];\n```", "```swift\nUIInterpolatingMotionEffect *horizontalMotionEffect = [[UIInterpolatingMotionEffect alloc] initWithKeyPath:@\"center.x\" type:UIInterpolatingMotionEffectTypeTiltAlongHorizontalAxis];\n\n    horizontalMotionEffect.minimumRelativeValue = @(-30);\n    horizontalMotionEffect.maximumRelativeValue = @(30);\n\n    UIInterpolatingMotionEffect *verticalMotionEffect = [[UIInterpolatingMotionEffect alloc] initWithKeyPath:@\"center.y\" type:UIInterpolatingMotionEffectTypeTiltAlongVerticalAxis];\n\n    verticalMotionEffect.minimumRelativeValue = @(-30);\n    verticalMotionEffect.maximumRelativeValue = @(30);\n\n    UIMotionEffectGroup *group = [UIMotionEffectGroup new];\n\n    group.motionEffects = @[horizontalMotionEffect, verticalMotionEffect];\n\n    [self.foodImageView addMotionEffect:group];\n    [self.foodNameLabel addMotionEffect:group];\n    [self.foodDateLabel addMotionEffect:group];\n```"]