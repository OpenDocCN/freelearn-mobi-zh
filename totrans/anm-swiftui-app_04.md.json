["```swift\nZStack {\n            Rectangle()\n                .frame(width: 345, height: 345)\n                .cornerRadius(10)\n            Image(\"woodGrain\")\n                .resizable().frame(width: 325, height: 325)\n                .shadow(color: .white, radius: 3, x: 0, y: 0)\n        }\n```", "```swift\n.previewLayout(.sizeThatFits).padding()\n```", "```swift\n    @State private var rotateRecord = false\n    @State private var moveArm = false\n    @State private var duration = 0.0\n\n    var animateForever: Animation {\n        Animation.linear(duration: duration)\n            .repeatForever(autoreverses: false)\n    }\n```", "```swift\nZStack {\nImage(\"record\").resizable()\n               .frame(width: 280, height: 280)\n               .rotationEffect(Angle(degrees: rotateRecord ?                  360.0 : 0.0))\n               .animation(animateForever.delay(1.5), value:                  rotateRecord)\n }\n```", "```swift\nstruct RecordButtonArmView_Previews: PreviewProvider {\n    static var previews: some View {\n        RecordButtonArmView()\n            .previewLayout(.sizeThatFits).padding()\n    }\n}\n```", "```swift\n//Arm\n            Image(\"playerArm\").resizable()\n                .aspectRatio(contentMode: .fit)\n                .frame(width: 150, height: 150)\n                .shadow(color: .gray, radius: 2, x: 0, y: 0)\n                .rotationEffect(Angle.degrees(-35), anchor:                   .topTrailing)\n                .rotationEffect(Angle.degrees(moveArm ? 8 : 0),                   anchor: .topTrailing)\n                .animation(Animation.linear(duration: 2),value:                   moveArm)\n                .offset(x: 75, y: -30)\n```", "```swift\n                 //Button\n                Button(action: {\n                    rotateRecord.toggle()\n                    if rotateRecord {\n                        duration = 0.8\n                        moveArm = true\n                    } else {\n                        duration = 0.0\n                        moveArm = false\n\\                    }\n                }) {\n                    HStack() {\n                        if !rotateRecord {\n                            Text(\"Play\").bold().                              foregroundColor(Color.black)\n                            Image(systemName: \"play.circle.                              fill\").foregroundColor(Color.                              black)\n                        } else {\n                            Text(\"Stop\").bold().                              foregroundColor(Color.black)\n                            Image(systemName: \"stop.fill\").                              foregroundColor(Color.red)\n                        }\n                    }\n                    .padding(.horizontal, 10)\n                    .padding(.vertical, 5)\n                    .background(Capsule().strokeBorder(Color.                      black, lineWidth: 2.00))\n                }.offset(x: -105, y: 135)\n```", "```swift\nimport AVFoundation\n```", "```swift\nvar audioPlayer: AVAudioPlayer?\n```", "```swift\nfunc playSound(sound: String, type: String) {\n    if let path = Bundle.main.path(forResource: sound, ofType: type) {\n        do {\n            audioPlayer = try AVAudioPlayer(contentsOf:               URL(fileURLWithPath: path))\n            audioPlayer?.play()\n        } catch {\n            print(\"Could not find and play the sound file\")\n        }\n    }\n}\n```", "```swift\nstruct ContentView : View {\n    var body: some View {\n        ZStack {\n            //MARK: - ADD THE GRADIENT BACKGROUND\n            RadialGradient(gradient: Gradient(colors: [.white,              .black]), center: .center, startRadius: 20,              endRadius: 600)\n                .scaleEffect(1.2)\n                //.ignoresSafeArea()\n            //MARK: - ADD THE RECORD PLAYER BOX\n            RecordPlayerBox()\n\n            //MARK: - ADD THE RECORD, THE BUTTON, AND THE ARM\n                RecordButtonArmView()\n        }\n    }\n}\n```", "```swift\nplaySound(sound: \"music\", type: \"m4a\")\n```", "```swift\naudioPlayer?.stop()\n```"]