- en: Chapter 12. What's Next? – Resources, Advice, and the Next Steps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At this point, we have covered a lot in the book. Swift is not a small topic
    and app development itself is orders of magnitude bigger than that. We learned
    most of Swift but it would not have been practical to cover every little feature
    of the language and Swift is still a new and evolving language. You are never
    going to be able to keep everything you''ve learned in your memory without being
    able to refer to it later. You can always refer back to this book but Apple''s
    documentation can be a great reference too. Beyond that, if you truly want to
    become a proficient Swift developer, you can ensure your success by always learning
    and evolving. It is extremely hard to do that in a vacuum. The best way to ensure
    that you are keeping up with the times is to follow and participate in the community
    around whatever topics interest you the most. In this chapter, we will go over
    how to use Apple''s documentation and some suggestions on where you can find and
    participate in the Swift, iOS, and OS X developer community. More specifically,
    in this chapter we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Apple's documentation
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Forums and blogs
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prominent figures
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Podcasts
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apple's documentation
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Apple puts a lot of time and effort into maintaining its documentation. This
    documentation can often be a very valuable tool to determine how you are expected
    to interact with their frameworks.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'Xcode actually integrates with the documentation quite well. One of the main
    ways you can look at the documentation is within the **Quick Help** inspector.
    You can display it by navigating to **View** | **Utilities** | **Show Quick Help
    Inspector** from the main menu. This inspector shows you the documentation of
    whatever piece of code you currently have your cursor on. If that particular class,
    method, or function is a part of Apple''s frameworks, you will get some quick
    help with regards to it, as shown in the following screenshot:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '![Apple''s documentation](img/B05103_12_01.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
- en: Here the cursor is on `UICollectionView`, so the **Quick Help** inspector gives
    us the high-level information about it.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also look at the documentation in its own window if you need more information
    or want to do more exploring. You can open up this window at any time by navigating
    to **Help** | **Documentation and API Reference** and you can search for any topic
    you want. However, you can also jump right to a specific piece of code''s documentation
    by holding the *Option* key and double-clicking on it. For example, if you were
    to hold the *Option* key and double-click on `isSourceTypeAvailable`, you would
    get the following full documentation window:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '![Apple''s documentation](img/B05103_12_02.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
- en: This window acts very similar to the Web. You can navigate through the documentation
    by clicking on any of the links or searching for a completely unrelated topic.
    You can also jump to specific parts of a documentation page using the outline
    view on the left-hand side of the screen.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: This documentation is particularly useful when you already have a sense of what
    parts of the framework you need to use for a particular task. You can then use
    this documentation to figure out the specifics of how to properly use that part
    of the framework. As you get better acquainted with Apple's frameworks, this will
    become more useful, because it is relatively easy to remember what parts of the
    framework you use for all of the common tasks, but it is far more difficult and
    often impractical to remember exactly how they work. However, sometimes the documentation
    is not enough. The next place you should look for answers is online.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Forums and blogs
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Whenever you have a problem or question while programming, odds are almost guaranteed
    that someone else has already run into it and the odds are also very good that
    someone has already written about it somewhere. Before you jump right to asking
    a question on a forum, I strongly recommend that you do your own searching. First
    of all, you want to save the valuable time of the community members. If they are
    constantly answering the same questions over and over again, they are dedicating
    a lot less time to truly new questions. Second, you will often find that you discover
    the answer for yourself in the process of formulating your thoughts, on how to
    search for it. Lastly, you will become much better at searching for programming
    related problems as you practice it more. Forums are usually going to be very
    slow compared to finding your own answer and obviously time is money.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: 'Most of the time when you use a search engine to look up a problem; you will
    find two main types of resources with answers: blog posts and forums.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Blog posts
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Similar to books, blog posts are fantastic for larger, higher-level considerations.
    You may search for something, such as: "ways to permanently store information,"
    and you will probably find many blog posts talking about the different ways you
    can do that. Blog posts are generally better for this because they can discuss
    the nuances of different solutions and they aren''t restricted to target a small
    problem.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Blog posts can also be great for extremely in-depth and nuanced problems. For
    example, there are some major and complicated repercussions of our move from 32-bit
    to 64-bit processors. Truly understanding the underlying problem will be far more
    valuable for you in moving forward than finding a quick solution for your immediate
    problem; if you can't find a book, blog posts are ideal to give you that kind
    of understanding.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Forums
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Forms are incredible at giving you very quick solutions to very specific problems.
    The most common forums are probably [http://stackoverflow.com/](http://stackoverflow.com/)
    and [forums.developer.apple.com](http://forums.developer.apple.com). On sites
    like these, there are very dedicated communities of people answering and asking
    questions. The Apple developer forum even has Apple employees answering questions.
    Asking good questions is just as important as answering questions well. These
    sites act not only as a way to get an answer to a new question but as living documentation
    for people searching for an answer in the future. A well-framed question is going
    to be more easily answered and more easily found by a search engine.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: 'Stack Overflow has a great documentation on what makes good questions and answers,
    but generally they should have the following characteristics:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Be specific and clear about what you are asking for.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make it easy for other people to reproduce the problem on their own systems.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Be respectful of any answerer's time by putting as much effort as you can into
    the question up front.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The last point is the most important one. You want to phrase your questions
    to allow someone with more knowledge than you to hone in on the exact problem
    instead of wasting time on things you could figure out on your own. This will
    often mean describing all of the things you have tried already and what roadblocks
    you hit. The clearer you make it that you have put real effort into solving the
    problem yourself, the better reception you will get from the community and also
    better answers. I cannot even count all the times that I have figured out the
    solution to a problem while I was writing up a question on a forum. This type
    of solution is going to be far more memorable and long lasting than a solution
    that someone else gives you.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: Prominent figures
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The more experienced you get at programming with a specific language and/or
    framework, the more likely you are to get stuck in a pattern of solving problems
    the same ways over and over again. Odds are that other people have figured out
    better ways to solve the same problem and someone, somewhere, is talking about
    it. You have to at least observe the community, even if you are not participating
    in it yourself.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: One of the best ways to follow the community is to follow the prominent figures
    in it. For example, for Swift, it is a great idea to follow Chris Lattner, the
    original creator of Swift. While numerous people now develop Swift, he spent more
    than a year as the sole developer and continues to run the Developer Tools department
    at Apple. You can follow him on Twitter `@clattner_llvm` and it can also be useful
    to follow his activity on Apple's Developer forums at [https://devforums.apple.com/people/ChrisLattner](https://devforums.apple.com/people/ChrisLattner).
    You can click on the **Email Updates** button to get emails about his activity.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Other than Chris Lattner, there are many other valuable people to pay attention
    to but only you can decide who is valuable to you. Pay attention to the names
    you are seeing a lot within the community and find out if they have blogs, podcasts,
    or any other places you can keep up with what they are saying.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 除了Chris Lattner之外，还有很多其他有价值的人值得关注，但只有你自己能决定谁对你有价值。注意你在社区中看到很多名字的人，并找出他们是否有博客、播客或任何其他你可以了解他们观点的地方。
- en: Podcasts
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 播客
- en: 'If you are not familiar with podcasts, they are an incredibly valuable way
    of keeping up with virtually any topic in a relatively passive manner. They are
    essentially on-demand radio shows that you can subscribe to. You can listen to
    them whenever you want like when driving, doing housework, or working out. That
    is why they are particularly valuable: they can turn relatively dull situations
    into fantastic learning opportunities.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不太熟悉播客，它们是一种非常宝贵的方式，以相对被动的方式跟上几乎所有话题。它们本质上是可以订阅的按需广播节目，你可以随时收听，比如在开车、做家务或锻炼时。这就是为什么它们特别有价值：它们可以把相对无聊的情况变成极好的学习机会。
- en: Apple has a podcast app built right into iOS that you can use or there are also
    numerous other podcast apps on the app store that I recommend you check out. Most
    of these apps include discovery mechanisms that make it easier to find new podcasts
    and many podcasts will also talk about other podcasts they recommend.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果在iOS中内置了播客应用，你可以使用它，或者应用商店中还有许多其他播客应用，我建议你检查一下。这些应用中的大多数都包括发现机制，这使得找到新的播客更容易，许多播客也会谈论他们推荐的播客。
- en: 'It is hard to recommend specific podcasts because most development podcasts
    do not last particularly long. It takes a lot of time and energy to produce a
    podcast, so many people do it for a while and take long breaks or decide to stop
    after a while. However, because of the on-demand nature of podcasts, it can still
    be very valuable to go back and listen to old episodes of podcasts. Three podcasts
    that are great to get you started are:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐具体的播客比较困难，因为大多数开发播客的持续时间并不长。制作播客需要花费大量的时间和精力，所以很多人只是做了一段时间，然后长时间休息或决定在某段时间后停止。然而，由于播客的按需性质，回过头去听旧的播客集仍然非常有价值。以下是一些很好的播客，可以帮助你开始：
- en: '**Core intuition**: Great podcast from prominent developers Daniel Jalkut and
    Manton Reece about general development topics.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**核心直觉**：来自知名开发者Daniel Jalkut和Manton Reece关于一般开发主题的优秀播客。'
- en: '**Accidental tech podcast**: General, Apple oriented tech discussion from big
    names in the industry including Marco Arment: a very inspirational developer for
    me.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**意外科技播客**：由行业大腕包括Marco Arment（对我而言是一位非常鼓舞人心的开发者）在内的苹果相关科技讨论。'
- en: '**Under the radar**: A nice and concise podcast that is always 30 minutes or
    less but often contains valuable nuggets of information centered around independent
    Apple development. It is hosted by Marco Arment and David Smith, another inspirational
    developer.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**低调播客**：一个简洁且内容丰富的播客，总是30分钟或更短，但经常包含围绕独立苹果开发的宝贵信息片段。它由Marco Arment和David Smith主持，另一位鼓舞人心的开发者。'
- en: Some podcasts are so valuable and entertaining that you will want to listen
    to every episode. Others are great for picking and choosing episodes that seem
    interesting and relevant to you. Whatever you do, I recommend you don't miss out
    on this free and easy opportunity to keep up with the development community.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '有些播客非常有价值和有趣，你会想听每一集。有些播客非常适合挑选和选择对你来说有趣和相关的集数。无论你做什么，我建议你不要错过这个免费且容易的机会，以跟上开发社区的发展。 '
- en: Summary
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: The short length of this chapter is in stark contrast to its importance. If
    there is one thing I could leave you with after reading this book, it is that
    the best developers know how to seek out and find solutions for themselves from
    the many sources available to us. Sometimes those solutions are in books like
    this one; other times they are in documentation, blog posts, forums, podcasts,
    or even conversations with other people. The developer that can not only find
    these solutions, but also integrate and truly understand them is going to be incredibly
    valuable for the rest of their career. However, if you feel overwhelmed at the
    beginning, do not fret because we all started there. Focus your energy on one
    problem at a time and don't settle for a solution that just seems to work. Make
    sure that you understand every solution you put in place and you will quickly,
    without even realizing it, become an incredibly proficient developer.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的篇幅虽短，但其重要性却十分显著。如果在阅读完这本书后我能给你留下什么，那就是最好的开发者知道如何从我们可利用的众多来源中寻求并找到自己的解决方案。有时这些解决方案就在像这样的书中；有时则存在于文档、博客文章、论坛、播客，甚至是与其他人的对话中。那些不仅能找到这些解决方案，还能将它们整合并真正理解的开发者，将在他们整个职业生涯中变得极其宝贵。然而，如果你在开始时感到不知所措，请不要担心，因为我们都从那里开始。一次专注于一个问题，不要满足于看似可行的解决方案。确保你理解你实施的每一个解决方案，你将很快，甚至可能没有意识到，成为一个极其熟练的开发者。
