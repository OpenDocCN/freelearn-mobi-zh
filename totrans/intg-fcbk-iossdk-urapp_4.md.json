["```swift\nimport \"LBFacebookViewController.h\"\n#import &lt;FacebookSDK/FacebookSDK.h&gt;\n\n@interface LBFacebookViewController () &lt;FBLoginViewDelegate, FBFriendPickerDelegate, UIAlertViewDelegate&gt;\n @property (weak, nonatomic) IBOutlet FBLoginView *fbLoginView;\n @property (weak, nonatomic) IBOutlet FBProfilePictureView *profilePictureView;\n @property (weak, nonatomic) IBOutlet UILabel *nameLabel;\n @property (weak, nonatomic) IBOutlet UILabel *emailLabel;\n @end\n```", "```swift\n// delegate called after the application has received\n// the user information from Facebook platform\n- (void)loginViewFetchedUserInfo:(FBLoginView *)loginView user:(id&lt;FBGraphUser&gt;)user\n{\n  [self.profilePictureView setProfileID:user.id];\n  self.nameLabel.text = user.name;\n}\n```", "```swift\n// delegate to handle the logged out mode\n- (void)loginViewShowingLoggedOutUser:(FBLoginView *)loginView\n{\n  [self.profilePictureView setProfileID:nil];\n  self.nameLabel.text = @\"Name\";\n}\n```", "```swift\n- (void)viewDidLoad\n{\n  [super viewDidLoad];\n\n  [self.fbLoginView setDelegate:self];\n\n  // setting email read permission\n  NSArray *readPermissions = [NSArray arrayWithObject:@\"email\"];\n  [self.fbLoginView setReadPermissions:readPermissions];\n}\n```", "```swift\n// delegate called after the application has received\n// the user information from Facebook platform\n- (void)loginViewFetchedUserInfo:(FBLoginView *)loginView user:(id&lt;FBGraphUser&gt;)user\n{\n  [self.profilePictureView setProfileID:user.id];\n  self.nameLabel.text = user.name;\n\n  if ([user objectForKey:@\"email\"]) {\n    self.emailLabel.text = [user objectForKey:@\"email\"];\n  }\n\n}\n // delegate to handle the logged out mode\n- (void)loginViewShowingLoggedOutUser:(FBLoginView *)loginView\n{\n  [self.profilePictureView setProfileID:nil];\n  self.nameLabel.text = @\"Name\";\n  self.emailLabel.text = @\"Email\";\n}\n```", "```swift\n- (IBAction)onFriendsClick:(id)sender {\n\n}\n```", "```swift\n@interface LBFacebookViewController () &lt;FBLoginViewDelegate, FBFriendPickerDelegate&gt;\n @property (weak, nonatomic) IBOutlet FBLoginView *fbLoginView;\n@property (weak, nonatomic) IBOutlet FBProfilePictureView *profilePictureView;\n@property (weak, nonatomic) IBOutlet UILabel *nameLabel;\n@property (weak, nonatomic) IBOutlet UILabel *emailLabel;\n@property (weak, nonatomic) IBOutlet UIButton *friendPickerButton;\n@property (strong, nonatomic) FBFriendPickerViewController *friendPickerViewController;\n @end\n```", "```swift\n#pragma mark - FBFriendPickerViewController\n- (IBAction)onFriendsClick:(id)sender {\n  if (self.friendPickerViewController == nil) {\n    self.friendPickerViewController = [[FBFriendPickerViewController alloc] init];\n    self.friendPickerViewController.title = @\"Pick a Friend\";\n    [self.friendPickerViewController setDelegate:self];\n  }\n\n  [self.friendPickerViewController loadData];\n  [self.friendPickerViewController clearSelection];\n\n  [self presentViewController:self.friendPickerViewControlleranimated:YES completion:^{\n    NSLog(@\"Friends list ready\");\n  }];\n}\n```", "```swift\n#pragma mark - FBFriendPickerViewController delegate\n- (void)facebookViewControllerDoneWasPressed:(id)sender {\n  [self dismissViewControllerAnimated:YES completion:^{\n    NSLog(@\"Friend Picker Done Button Clicked\");\n  }];\n}\n - (void)facebookViewControllerCancelWasPressed:(id)sender {\n  [self dismissViewControllerAnimated:YES completion:^{\n    NSLog(@\"Friend Picker Cancel Button Clicked\");\n  }];\n}\n```", "```swift\n#import &lt;FacebookSDK/FacebookSDK.h&gt;\n@interface LBFriendPickerViewController : FBFriendPickerViewController\n // Keep track of user's search query\n@property (strong, nonatomic) NSString *searchText;\n @end\n```", "```swift\n@interface LBFriendPickerViewController () &lt;UISearchBarDelegate&gt;\n @property (weak, nonatomic) UISearchBar *searchBar;\n @end\n```", "```swift\n- (id)init\n{\n  self = [super init];\n  if (self) {\n    self.searchBar = nil;\n  }\n  return self;\n}\n```", "```swift\n- (void)viewDidLoad\n{\n  [super viewDidLoad];\n  [self addSearchBarToFriendPickerView];\n}\n```", "```swift\n- (void)addSearchBarToFriendPickerView\n{\n  if (self.searchBar == nil) {\n    CGFloat searchBarHeight = 44.0;\n    self.searchBar = [[UISearchBar alloc]initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width,searchBarHeight)];\n    self.searchBar.autoresizingMask =self.searchBar.autoresizingMask |UIViewAutoresizingFlexibleWidth;\n    self.searchBar.delegate = self;\n    self.searchBar.showsCancelButton = YES;\n\n    // Adding the searchBar to the current view and resize thefriends' list table view\n    [self.canvasView addSubview:self.searchBar];\n    CGRect newFrame = self.view.bounds;\n    newFrame.size.height -= searchBarHeight;\n    newFrame.origin.y = searchBarHeight;\n    self.tableView.frame = newFrame;\n  }\n}\n```", "```swift\n- (void)handleSearch: (UISearchBar *)searchBar {\n  [NSObject cancelPreviousPerformRequestsWithTarget:selfselector:@selector(handleRealSearch:) object:searchBar];\n\n  [self performSelector:@selector(handleRealSearch:)withObject:searchBar afterDelay:0.5f];\n}\n - (void)handleRealSearch:(UISearchBar *)searchBar\n{\n  self.searchText = searchBar.text;\n  [self updateView];\n}\n```", "```swift\n- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText\n{\n    [self handleSearch:searchBar];\n}\n```", "```swift\n- (void)searchBarSearchButtonClicked:(UISearchBar*)searchBar\n{\n  [self handleSearch:searchBar];\n  [searchBar resignFirstResponder];\n}\n```", "```swift\n- (void)searchBarCancelButtonClicked:(UISearchBar *) searchBar {\n  self.searchBar.text = @\"\";\n  [self handleSearch:searchBar];\n  [searchBar resignFirstResponder];\n}\n```", "```swift\n- (void)clearSelection\n{\n  [super clearSelection];\n  self.searchText = nil;\n  self.searchBar.text = @\"\";\n}\n```", "```swift\n@property (strong, nonatomic) LBFriendPickerViewController *friendPickerViewController;\n self.friendPickerViewController = [[LBFriendPickerViewController alloc] init];\n```", "```swift\n- (BOOL)friendPickerViewController:(FBFriendPickerViewController *)friendPicker shouldIncludeUser:(id&lt;FBGraphUser&gt;)user\n{\n  NSString *searchText =self.friendPickerViewController.searchText;\n  if (searchText &amp;&amp; ![searchText isEqualToString:@\"\"]) {\n    NSRange result = [user.namerangeOfString:searchTextoptions:NSCaseInsensitiveSearch];\n    if (result.location != NSNotFound) {\n    return YES;\n  } else {\n    return NO;\n  }\n} else {\n  return YES;\n}\nreturn YES;\n}\n```"]