- en: Saving Reviews
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存评论
- en: We are just about done with our app. In this chapter, we will finally start
    saving reviews and photos into Core Data. We will then learn how to pull data
    from Core Data and display them in our app. A lot of the setup is already done
    for us and most of what we are doing is calling methods we created earlier in
    the book.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们几乎完成了我们的应用。在本章中，我们最终将开始将评论和照片保存到Core Data中。然后我们将学习如何从Core Data中检索数据并在我们的应用中显示它们。大部分的设置已经为我们完成，我们大部分的工作是调用我们在本书早期创建的方法。
- en: 'In this chapter, you will learn how to:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何：
- en: Save items to Core Data
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将项目保存到Core Data
- en: Fetch items from Core Data
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从Core Data中检索项目
- en: Display items from Core Data into a Table View
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Core Data中的项目显示到表格视图中
- en: Saving reviews
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存评论
- en: 'First, we will start with saving reviews into Core Data. Open up `ReviewFormViewController.swift`
    and above the `@IBOutlets` add the following variable:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将从保存评论到Core Data开始。打开`ReviewFormViewController.swift`并在`@IBOutlets`上方添加以下变量：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, delete everything inside your `onSavedTapped(:)` method and then add
    the following:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，删除`onSavedTapped(:)`方法内部的所有内容，然后添加以下内容：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This code is all we need to do to save an item into Core Data using our `CoreDataManager`.
    To display reviews for a particular restaurant, we need to save all reviews with
    a restaurant identifier. Then, when we go to a certain restaurant, we will use
    the restaurant identifier to search Core Data to see if there are any saved reviews.
    We pass this identifier using a segue.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们使用`CoreDataManager`将项目保存到Core Data所需的所有代码。为了显示特定餐厅的评论，我们需要保存所有带有餐厅标识符的评论。然后，当我们访问某个餐厅时，我们将使用餐厅标识符来搜索Core
    Data以查看是否有已保存的评论。我们通过转场传递此标识符。
- en: Open `RestaurantDetail.storyboard` and select the segue we are using to go to
    the `ReviewForm`.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`RestaurantDetail.storyboard`并选择我们用来跳转到`ReviewForm`的转场。
- en: In the Attributes inspector of the Utilities panel, update Identifier under
    Storyboard Segue to say `showReview`. Then, hit *Enter*.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在实用工具面板的属性检查器中，更新Storyboard Segue下的标识符为`showReview`。然后按*Enter*。
- en: 'Next, we need to make sure that, when a user creates a review, we pass `restaurantID`
    to the Review Form View Controller. We need to update our `RestaurantItem` so
    it has an ID. Open `RestaurantItem` after var `imageURL:String?` and add the following:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要确保，当用户创建评论时，我们将`restaurantID`传递给评论表单视图控制器。我们需要更新我们的`RestaurantItem`使其具有一个ID。在`imageURL:String?`变量之后打开`RestaurantItem`并添加以下内容：
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, inside the enum `CodingKeys:String` add the new case:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在枚举`CodingKeys:String`中添加新的情况：
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Open `RestaurantDetailViewController.swift` and add this method after the `viewDidLoad()`
    method (ignore the errors for now):'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`RestaurantDetailViewController.swift`并在`viewDidLoad()`方法之后添加此方法（现在忽略错误）：
- en: '[PRE4]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `prepare()` method inside the `RestaurantDetailViewController` will check
    for the `showReview` segue identifier. If successful, it will call the `showReview()`
    method, which will take you to the Reviews list.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`RestaurantDetailViewController`中的`prepare()`方法将检查`showReview`转场标识符。如果成功，它将调用`showReview()`方法，这将带你到评论列表。'
- en: 'Next, add the following method above the `createRating()` method inside the
    private extension:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在`createRating()`方法内部私有的扩展上方添加以下方法：
- en: '[PRE5]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: While we are cleaning up, move the `initialize()` method into the `private`
    extension.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们在清理时，将`initialize()`方法移动到`private`扩展中。
- en: 'Next, open `ReviewFormViewController`; let''s create a `private` extension
    and move`onSaveTapped(_:)` into it. Then, delete everything inside the method
    and update the method with the following:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，打开`ReviewFormViewController`；让我们创建一个`private`扩展并将`onSaveTapped(_:)`方法移动到其中。然后删除方法内部的所有内容，并使用以下内容更新方法：
- en: '[PRE6]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Let's make sure we are passing the `restaurantID` by adding a `print` statement
    inside `ReviewFormViewController`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过在`ReviewFormViewController`中添加一个`print`语句来确保我们正在传递`restaurantID`。
- en: 'Inside the `-viewDidLoad()` method, add the following `print` statement:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`-viewDidLoad()`方法中，添加以下`print`语句：
- en: '[PRE7]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Let's build and run the project by hitting the Play button (or use ⌘ + *R*).
    You should now be able to see `restaurantID` in the console. You can create a
    review and, after you save the review, you are brought back to the restaurant
    detail view, but we are still missing displaying our reviews in restaurant details.
    We will work on this later in this chapter. Before we do that, let's look at how
    we can save photos into Core Data.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过点击播放按钮（或使用⌘ + *R*）来构建和运行项目。你现在应该在控制台中看到`restaurantID`。你可以创建一个评论，在保存评论后，你将被带回到餐厅详情视图，但我们仍然缺少在餐厅详情中显示我们的评论。我们将在本章的后面处理这个问题。在我们这样做之前，让我们看看我们如何将照片保存到Core
    Data中。
- en: Saving photos
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存照片
- en: 'Saving reviews was pretty simple and there is essentially no difference in
    saving photos. Our code will be pretty similar to what we did with reviews. Open
    the `PhotoFilterViewController`, delete everything inside the `checkSavedPhoto()`
    method, and update it with the following:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 保存评论相当简单，本质上保存照片没有太大区别。我们的代码将与处理评论时所做的非常相似。打开 `PhotoFilterViewController`，删除
    `checkSavedPhoto()` 方法内的所有内容，并用以下内容更新它：
- en: '[PRE8]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This method will make sure that we have an image and then save it to Core Data
    with its restaurant ID. We need to add a method for when Save is tapped. Add the
    following method inside the private extension:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法将确保我们有一个图像，并将其与其餐厅 ID 一起保存到 Core Data。我们需要为保存时添加一个方法。在私有扩展内添加以下方法：
- en: '[PRE9]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now, when a user taps the Save button, this will make sure that an image is
    saved; if so, it will save the data to Core Data. Before we can save, we need
    to pass the restaurant identifier to the PhotoFilterViewController.swift.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当用户点击“保存”按钮时，这将确保保存一张图片；如果是这样，它将数据保存到 Core Data。在我们能够保存之前，我们需要将餐厅标识符传递给 `PhotoFilterViewController.swift`。
- en: Open RestaurantDetail.storyboard and select the segue we are using to go to
    the Photo Filter View.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `RestaurantDetail.storyboard` 并选择我们用来跳转到照片滤镜视图的 segue。
- en: In the Attributes inspector of the Utilities panel, update Identifier under
    Storyboard Segue to say `showPhotoFilter`. Then, hit *Enter*.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在实用工具面板的属性检查器中，更新 Storyboard Segue 下的 Identifier 为“showPhotoFilter”。然后，按 *Enter*。
- en: 'Finally, open the `Segue.swift` file in the `Misc` folder under the `Common`
    folder and verify that the following `case` statement is included; if not, add
    it:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，打开位于 `Common` 文件夹下的 `Misc` 文件夹中的 `Segue.swift` 文件，并验证是否包含以下 `case` 语句；如果没有，请添加它：
- en: '[PRE10]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Inside the `RestaurantDetailViewController.swift`, update your `prepare` method
    with the following:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `RestaurantDetailViewController.swift` 内，用以下内容更新你的 `prepare` 方法：
- en: '[PRE11]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Next, add the following method after the `showReview()` method inside your
    `private` method:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在 `showReview()` 方法内部添加以下方法：
- en: '[PRE12]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: We are passing the restaurant identifier to our photos and we now have our photos
    saved in Core Data. After you save a photo, you are brought back to the restaurant
    detail view but next we need to display the photos in our Detail section.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在将餐厅标识符传递给我们的照片，并且现在我们的照片已保存在 Core Data 中。在您保存照片后，您将被带回到餐厅详情视图，但接下来我们需要在详情部分显示这些照片。
- en: 'We are missing one last thing. The photo review and review sections need to
    pull data from the database for it to be displayed. We need to create a class
    for each one, so let''s start by adding this class now:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还缺少最后一件事。照片评论和评论部分需要从数据库中提取数据才能显示。我们需要为每个部分创建一个类，所以让我们现在开始添加这个类：
- en: Create a new folder called `Reviews`.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `Reviews` 的新文件夹。
- en: Now, right-click the folder and select New File.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，右键点击文件夹并选择“新建文件”。
- en: Inside the Choose a template for your new file screen, select iOS at the top
    and then Cocoa Touch Class. Then, hit Next.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选择新文件模板的屏幕上，顶部选择 iOS，然后选择 Cocoa Touch Class。然后，点击“下一步”。
- en: 'In the options screen that appears, add the following:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的选项屏幕中，添加以下内容：
- en: 'New file:'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 新文件：
- en: 'Class: `ReviewsViewController`'
  id: totrans-51
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类：`ReviewsViewController`
- en: 'Subclass: `UIViewController`'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子类：`UIViewController`
- en: 'Also create XIB: Unchecked'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还创建 XIB：未选中
- en: 'Language: `Swift`'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语言：`Swift`
- en: 'Hit Next and then Create. When the file opens, replace everything with the
    following code:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“下一步”然后创建。当文件打开时，将所有内容替换为以下代码：
- en: '[PRE13]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Next, let''s add our `private` extension by adding the following:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们通过添加以下内容来添加我们的 `private` 扩展：
- en: '[PRE14]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: We are doing the basic setup that we did before. Our `checkReviews()` method
    is a bit different, because we are first checking to see if there are any reviews
    at all.  If there are not, we display a message that says `There are currently
    no reviews. If there are, we do not display anything.`
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在做之前的基本设置。我们的 `checkReviews()` 方法略有不同，因为我们首先检查是否有任何评论。如果没有，我们显示一条消息说“目前没有评论”。如果有，我们不显示任何内容。
- en: 'Next, let''s add our Collection View extensions by adding the following to
    our data source:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们通过向我们的数据源添加以下内容来添加我们的集合视图扩展：
- en: '[PRE15]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Next, let''s add our Collection View extensions by adding the following to
    our layout:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们通过向我们的布局添加以下内容来添加我们的集合视图扩展：
- en: '[PRE16]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Next, for our Collection View to work, we need to create our cell and an extension
    of this class:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为了让我们的集合视图工作，我们需要创建我们的单元格和这个类的扩展：
- en: '![](img/71ab0552-80b5-4466-a98f-479fd5617c2b.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/71ab0552-80b5-4466-a98f-479fd5617c2b.png)'
- en: Right-click the `Review` folder and select New File.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击 `Review` 文件夹并选择“新建文件”。
- en: Inside the Choose a template for your new file screen, select iOS at the top
    and then Cocoa Touch Class. Then, hit Next.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选择新文件模板的屏幕中，顶部选择iOS，然后选择Cocoa Touch类。然后，点击下一步。
- en: 'In the options screen that appears, add the following:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的选项屏幕中，添加以下内容：
- en: 'New file:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 新文件：
- en: 'Class: `ReviewCell`'
  id: totrans-70
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类：`ReviewCell`
- en: 'Subclass: `UICollectionViewCell`'
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子类：`UICollectionViewCell`
- en: 'Also create XIB: Unchecked'
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 也创建XIB：未勾选
- en: 'Language: `Swift`'
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语言：`Swift`
- en: Click Next and then Create.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击下一步然后创建。
- en: 'In this new file, add the following code:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个新文件中，添加以下代码：
- en: '[PRE17]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Save the file and open up `RestaurantDetail.storyboard`.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并打开`RestaurantDetail.storyboard`。
- en: Locate the `Container` that we created for `Reviews` and select the cell inside
    the Collection View. Select the View Controller and in the Identity inspector
    and under Custom Class set Class to ReviewsViewController.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位为我们为`Reviews`创建的`Container`，并选择集合视图中的单元格。选择视图控制器，在身份检查器下，在自定义类中设置类为ReviewsViewController。
- en: Then hit *Enter*.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后按*Enter*。
- en: Now, in the Utilities panel, under the Size inspector, update the Size to Custom.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在实用工具面板中，在大小检查器下，将大小更新为自定义。
- en: Next, set Width to `350` and Height to `200`.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将宽度设置为`350`，高度设置为`200`。
- en: Under the Attributes inspector, set the Identifier to `reviewCell` and the background
    color to `#F2F2F2`. You can add this color to your Color set.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在属性检查器下，设置标识符为`reviewCell`和背景颜色为`#F2F2F2`。您可以将此颜色添加到您的颜色集中。
- en: Then under Identity inspector, update the class to `ReviewCell`.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在身份检查器下，将类更新为`ReviewCell`。
- en: Select the Collection View, and in the Identity inspector click and drag from
    dataSource and delegate to the View Controller.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择集合视图，并在身份检查器中点击并拖动dataSource和delegate到视图控制器。
- en: Setting up the cell UI
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置单元格UI
- en: 'Now, let''s get all of our UI elements into the `reviewCell` (the example shown
    earlier):'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将所有的UI元素放入`reviewCell`（前面显示的示例）中：
- en: In the object library of the Utilities panel, type label in the filter field.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在实用工具面板的对象库中，在过滤器字段中输入label。
- en: Then, drag out four Labels into the Cell.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，将四个标签拖放到单元格中。
- en: 'Select one of the Labels and, in the Size inspector, update the following values:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个标签，并在大小检查器中更新以下值：
- en: 'X: `8`'
  id: totrans-90
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: X：`8`
- en: 'Y: `5`'
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Y：`5`
- en: 'Width: `116`'
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 宽度：`116`
- en: 'Height: `5`'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高度：`5`
- en: Then, select the Attributes inspector in the Utilities panel; update the Font
    to Avenir Next Condensed Demi Bold and set the Size to `16`**.**
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在实用工具面板中选择属性检查器；将字体更新为Avenir Next Condensed Demi Bold并将大小设置为`16`**。**
- en: 'Select another label and update the following values in the Size inspector:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择另一个标签，并在大小检查器中更新以下值：
- en: 'X: `245`'
  id: totrans-96
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: X：`245`
- en: 'Y: `5`'
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Y：`5`
- en: 'Width: `97`'
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 宽度：`97`
- en: 'Height: `21`'
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高度：`21`
- en: Then, select the Attributes inspector in the Utilities panel; update the Font
    to Avenir Next Condensed Medium, set the Size to `16`, and set Color to LetsEat
    Light Grey**.**
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在实用工具面板中选择属性检查器；将字体更新为Avenir Next Condensed Medium，将大小设置为`16`，并将颜色设置为LetsEat
    Light Grey**。**
- en: 'Select another label and update the following values in the Size inspector:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择另一个标签，并在大小检查器中更新以下值：
- en: 'X: `245.5`'
  id: totrans-102
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: X：`245.5`
- en: 'Y: `21`'
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Y：`21`
- en: 'Width: `97`'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 宽度：`97`
- en: 'Height: `21`'
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高度：`21`
- en: Then, select the Attributes inspector in the Utilities panel; update the Font
    to Avenir Next Condensed Medium, set the Size to `16`, and set color to LetsEat
    Light Grey.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在实用工具面板中选择属性检查器；将字体更新为Avenir Next Condensed Medium，将大小设置为`16`，并将颜色设置为LetsEat
    Light Grey。
- en: 'Select the last label and update the following values in the Size inspector:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择最后一个标签，并在大小检查器中更新以下值：
- en: 'X: `8`'
  id: totrans-108
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: X：`8`
- en: 'Y: `54`'
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Y：`54`
- en: 'Width: `334`'
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 宽度：`334`
- en: 'Height: `137`'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高度：`137`
- en: Then, select the Attributes inspector in the Utilities panel; update the Font
    to Avenir Next Condensed Regular and set the Size to `16`**.** Now, set Lines
    to `6`.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在实用工具面板中选择属性检查器；将字体更新为Avenir Next Condensed Regular并将大小设置为`16`**。**现在，将行数设置为`6`。
- en: We are done with setting up our cell, but we just need to add Auto Layout to
    our cells.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了单元格的设置，但我们只需要为我们的单元格添加自动布局。
- en: Adding Auto Layout
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加自动布局
- en: 'If we do not add Auto Layout to our cells, they will not look correct; so,
    let''s do that now:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们不向我们的单元格添加自动布局，它们看起来将不正确；所以，我们现在就做：
- en: Open `RestaurantDetail.storyboard`.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`RestaurantDetail.storyboard`。
- en: 'Next, select the Container View, the one used for reviews, and then the Pin
    icon. Enter the following values:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择用于评论的容器视图，然后选择固定图标。输入以下值：
- en: 'Top: `0`'
  id: totrans-118
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶部：`0`
- en: 'Right: `0`'
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 右：`0`
- en: 'Bottom: `0`'
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 底部：`0`
- en: 'Left: `0`'
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 左：`0`
- en: 'Constrain to margins: Unchecked'
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制到边距：未勾选
- en: Click Add 4 Constraints.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击添加4个约束。
- en: 'Now, select the Collection View, the one used for reviews, and then the Pin
    icon. Enter the following values:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，选择用于评论的集合视图，然后选择固定图标。输入以下值：
- en: 'Top: `0`'
  id: totrans-125
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶部：`0`
- en: 'Right: `0`'
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 右侧：`0`
- en: 'Bottom: `` `0` ``'
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 底部：`` `0` ``
- en: 'Left: `0`'
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 左侧：`0`
- en: 'Constrain to margins: Unchecked'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制到边距：未勾选
- en: Click Add 4 Constraints.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击添加4个约束。
- en: 'Build and run your project and add a couple of reviews; you should now see
    reviews appearing in your restaurant details:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 构建并运行你的项目，添加几条评论；现在你应该能在餐厅详情中看到评论出现：
- en: '![](img/ce8f522a-02b5-4e7b-ac02-0d46badfc75b.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ce8f522a-02b5-4e7b-ac02-0d46badfc75b.png)'
- en: We have two more things I would like to update before the end of this chapter. 
    Now that we are saving reviews, we have an overall rating for restaurants. Let's
    add this next.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束前，我还有两件事要更新。现在我们已经开始保存评论，我们有了餐厅的整体评分。让我们添加这个功能。
- en: Adding an overall rating
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加整体评分
- en: 'To add an overall rating, we need to pull all of the reviews from Core Data,
    add them all together, and get an average. Let''s add a new method to our Core
    Data manager to handle this. Please add the following inside `CoreDataManager.swift`:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加整体评分，我们需要从Core Data中提取所有评论，将它们全部相加，并得到平均值。让我们在我们的Core Data管理器中添加一个新的方法来处理这个功能。请在`CoreDataManager.swift`中添加以下内容：
- en: '[PRE18]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In this method, we fetch all of the reviews for a restaurant by their ID. 
    Then, we use the `reduce` method to add them all together, and then finally we
    calculate the average. Now let''s use this newly created method.  Open up `RestaurantDetailViewController.swift`.
    Under our `selectedRestaurant` variable add the following:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方法中，我们通过ID获取餐厅的所有评论。然后，我们使用`reduce`方法将它们全部相加，然后最终计算平均值。现在让我们使用这个新创建的方法。打开`RestaurantDetailViewController.swift`。在我们的`selectedRestaurant`变量下添加以下内容：
- en: '[PRE19]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Next, under the `createRating()` method, we just set our rating to `3.5` stars. 
    Update this method to the following:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在`createRating()`方法下，我们只是将评分设置为`3.5`星。更新此方法如下：
- en: '[PRE20]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now our method is checking to make sure we have a restaurant ID.  If we do,
    then we set the rating for `ratingView`. We also update the overall label to display
    the average. Build and run your project and you should now see a rating for restaurants
    that have them:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的方法正在检查我们是否有一个餐厅ID。如果我们有，那么我们就为`ratingView`设置评分。我们还更新了整体标签以显示平均值。构建并运行你的项目，你应该现在能看到有评分的餐厅：
- en: '![](img/89a808cd-0ccd-4b77-8969-9980b561c0e6.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/89a808cd-0ccd-4b77-8969-9980b561c0e6.png)'
- en: We are finished with this chapter, but there is one section left that we did
    not do and that's Photo Reviews. Your challenge is to add photo reviews and get
    them displayed in the Collection View.  We covered everything in the chapter,
    and all of the code is the same.  If you get stuck, feel free to use the project
    files in the next chapter.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了这一章，但还有一个部分我们没有做，那就是照片评论。你的挑战是添加照片评论并在集合视图中显示它们。我们已经在本章中涵盖了所有内容，所有的代码都是相同的。如果你遇到困难，请随时使用下一章中的项目文件。
- en: Summary
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We covered a lot in this chapter and we've now finished building our main app's
    primary functionality. Our app is starting to take shape. We were able to create
    a Core Data model and can now save reviews to the Core Data. We also can display
    all the reviews for a restaurant or pull out the last review and display it.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章中涵盖了大量的内容，并且现在已经完成了我们主要应用程序的主要功能。我们的应用程序开始成形。我们能够创建一个Core Data模型，现在可以保存评论到Core
    Data中。我们还可以显示餐厅的所有评论或提取最后一条评论并显示它。
- en: In the next chapter, we will work on putting the final touches to our app to
    make it more of a universal app. Once we do that, our main app is finished and
    we can focus on adding some cool features, such as an iMessage app, notifications,
    and 3D Touch.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将对应用程序进行最后的润色，使其成为一个更通用的应用程序。一旦我们完成这个工作，我们的主要应用程序就完成了，我们可以专注于添加一些酷炫的功能，例如iMessage应用程序、通知和3D
    Touch。
