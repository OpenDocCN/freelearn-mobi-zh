["```swift\n    override func viewWillAppear(_ animated: Bool) { \n       super.viewWillAppear(animated)\n       navigationController?.setNavigationBarHidden(true, \n       animated: false)\n    }\n    ```", "```swift\n    override func awakeFromNib() {\n       super.awakeFromNib() \n       exploreImageView.layer.cornerRadius = 9 \n       exploreImageView.layer.masksToBounds = true\n    } \n    ```", "```swift\n    private extension AppDelegate {\n       func initialize() {\n          setupDefaultColors()\n       }\n       func setupDefaultColors() { \n          UITabBar.appearance().tintColor = .systemRed\n          UITabBarItem.appearance().\n          setTitleTextAttributes(\n          [NSAttributedString.Key.foregroundColor: \n          UIColor.systemRed], for: \n          UIControl.State.selected)\n          UINavigationBar.appearance().tintColor = \n          .systemRed \n       }\n    }\n    ```", "```swift\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions:[UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n       initialize()\n       return true\n    }\n    ```", "```swift\n    import UIKit\n    enum Device {\n       static var isPhone: Bool {\n    UIDevice.current.userInterfaceIdiom == \n          .phone\n       }\n       static var isPad: Bool {\n    UIDevice.current.userInterfaceIdiom == \n          .pad\n       }\n    }\n    ```", "```swift\n    func initialize() { \n       manager.fetch() \n       setupCollectionView() is not declared or defined yet. You'll do that next.\n    ```", "```swift\n    func setupCollectionView() {\n       let flow = UICollectionViewFlowLayout()\n       flow.sectionInset = UIEdgeInsets(top: 7, left: 7, \n       bottom: 7, right: 7)\n       flow.minimumInteritemSpacing = 0\n       flow.minimumLineSpacing = 7\n       collectionView.collectionViewLayout = flow\n    }\n    ```", "```swift\n    extension ExploreViewController: UICollectionViewDelegateFlowLayout {\n       func collectionView(_ collectionView: \n       UICollectionView, layout collectionViewLayout: \n       UICollectionViewLayout, sizeForItemAt indexPath: \n       IndexPath) -> CGSize {\n          var columns: CGFloat = 2 \n          if Device.isPad ||\n          (traitCollection.horizontalSizeClass !=  \n          .compact) {\n             columns = 3\n          } \n          let viewWidth = collectionView.frame.size.width\n          let inset = 7.0 \n          let contentWidth = viewWidth - inset * \n          (columns + 1)\n          let cellWidth = contentWidth / columns\n          let cellHeight = cellWidth\n          return CGSize(width: cellWidth, height: \n          cellHeight)\n       }\n       func collectionView(_ collectionView: \n       UICollectionView, layout collectionViewLayout: \n       UICollectionViewLayout, \n       referenceSizeForHeaderInSection section: Int) -> \n       CGSize {\n          return CGSize(width: collectionView.frame.width,\n          height: 100)\n       }\n    }\n    ```", "```swift\n    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {\n    ```", "```swift\n    var columns: CGFloat = 2\n    ```", "```swift\n    if Device.isPad || (traitCollection.horizontalSizeClass != .compact) {\n    ```", "```swift\n    columns = 3\n    ```", "```swift\n    let viewWidth = collectionView.frame.size.width\n    ```", "```swift\n    let inset = 7.0\n    let contentWidth = viewWidth - inset * (columns + 1)\n    ```", "```swift\n    let cellWidth = contentWidth / columns \n    ```", "```swift\n    let cellHeight = cellWidth\n    ```", "```swift\n    return CGSize(width: cellWidth, height: cellHeight)\n    }\n    ```", "```swift\nfunc collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, referenceSizeForHeaderInSection section: Int) -> CGSize { \n```", "```swift\nreturn CGSize(width: collectionView.frame.width, height: 100)\n```", "```swift\n    func initialize() { \n       createData() \n       setupTitle() \n       setupCollectionView()\n    }\n    ```", "```swift\n    func setupCollectionView() {\n       let flow = UICollectionViewFlowLayout()\n       flow.sectionInset = UIEdgeInsets(top: 7, left: 7, \n       bottom: 7, right: 7)\n       flow.minimumInteritemSpacing = 0\n       flow.minimumLineSpacing = 7\n       collectionView.collectionViewLayout = flow\n    }\n    ```", "```swift\n    extension RestaurantListViewController: \n    UICollectionViewDelegateFlowLayout {\n       func collectionView(_ collectionView: \n       UICollectionView, layout collectionViewLayout: \n       UICollectionViewLayout, sizeForItemAt indexPath: \n       IndexPath) -> CGSize {\n          var columns: CGFloat = 0 \n          if Device.isPad { \n             columns = 3\n          } else {\n             columns = \n             traitCollection.horizontalSizeClass \n             == .compact ? 1 : 2 \n          }\n          let viewWidth = collectionView.frame.size.width \n          let inset = 7.0\n          let contentWidth = viewWidth - inset * \n          (columns + 1)\n          let cellWidth = contentWidth / columns\n          let cellHeight = 312.0\n          return CGSize(width: cellWidth, height: \n          cellHeight)\n       }\n    }\n    ```", "```swift\n    override func viewDidAppear(_ animated: Bool) {\n       super.viewDidAppear(animated)\n       initialize()\n    }\n    ```"]