["```swift\nmodule ( \"HUD\", package.seeall )\nfunction HUD:initialize ()\n    self.viewport = MOAIViewport.new ()\n```", "```swift\n        viewport:setSize ( SCREEN_RESOLUTION_X, SCREEN_RESOLUTION_Y )\n    ```", "```swift\n       viewport:setScale  (SCREEN_RESOLUTION_X, -SCREEN_RESOLUTION_Y )\n    ```", "```swift\n        viewport:setOffset ( -1, 1 )\n    ```", "```swift\n        self.layer = MOAILayer2D.new ()\n        self.layer:setViewport ( self.viewport )\n        -- Now we need to render the layer.\n        local renderTable = MOAIRenderMgr.getRenderTable ()\n        table.insert ( renderTable, self.layer )\n        MOAIRenderMgr.setRenderTable ( renderTable )\n    end\n    ```", "```swift\n        hudFont ={\n            type = RESOURCE_TYPE_FONT,\n            fileName = 'fonts/tuffy.ttf',\n        glyphs = \n        \"abcdefghijklmnopqrstuvwxyzABCDEFGHI\n        JKLMNOPQRSTUVWXYZ0123456789,.?!\",\n        fontSize = 26,\n        dpi = 160\n      }\n    ```", "```swift\n    function HUD:initializeDebugHud ()\n        self.font = MOAIFont.new ()\n        self.font = ResourceManager:get ( \"hudFont\" )\n    ```", "```swift\n        self.leftRightIndicator = self:newDebugTextBox ( 30, {10, 10, 100, 50} )\n        self.positionIndicator = self:newDebugTextBox ( 30, {10, 50, 200, 100} )\n    end\n    ```", "```swift\n        function HUD:newDebugTextBox ( size, rectangle )\n            local textBox = MOAITextBox.new ()\n        ```", "```swift\n            textBox:setFont ( self.font )\n        ```", "```swift\n            textBox:setTextSize ( size )\n        ```", "```swift\n            textBox:setRect ( unpack(rectangle) )\n        ```", "```swift\n            layer:insertProp ( textBox )\n        ```", "```swift\n            return textBox\n        end\n        ```", "```swift\nfunction HUD:update ()\n    local x, y = Character.prop:getScl ()\n```", "```swift\n        if x > 0 then\n            self.leftRightIndicator:setString ( \"Left\" )\n        else\n            self.leftRightIndicator:setString ( \"Right\" )\n        end\n    ```", "```swift\n        x, y = Character.physics.body:getPosition ()\n        self.positionIndicator:setString (\"(\" .. \n        math.floor(x) .. \", \" .. \n        math.floor(y) .. \")\")\n    end\n    ```"]