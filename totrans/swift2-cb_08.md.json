["```swift\n    #import <Foundation/Foundation.h>\n\n    @interface Car : NSObject{\n        float fare;\n    }\n\n    @property (assign) float distance;\n    @property (assign) int pax;\n\n    -(id) init;\n    -(id) initWithFare:(float) fare;\n    -(float) getFare;\n\n    @end\n    ```", "```swift\n    #import \"Car.h\"\n\n    @implementation Car\n    -(id) init{\n        self = [super init];\n        if(self){\n            self->fare = 0.2;\n            self.pax = 4;\n            self.distance = 0;\n        }\n        return self;\n    }\n\n    -(id) initWithFare:(float) fare{\n        self = [super init];\n        if(self){\n            self->fare = fare;\n            self.pax = 4;\n            self.distance = 0;\n        }\n        return self;\n    }\n\n    -(float) getFare{\n        return self->fare;\n    }\n    @end\n    ```", "```swift\n    @interface ViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>{\n        NSArray * vehicles;\n        IBOutlet UITableView *tableView;\n    }\n    @end\n    ```", "```swift\n    #import \"Car.h\"\n    ```", "```swift\n    - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{\n        return [vehicles count];\n    }\n\n    - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{\n        UITableViewCell * cell;\n        cell = [self->tableView dequeueReusableCellWithIdentifier:@\"vehiclecell\"];\n        if(cell == nil) {\n            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@\"vehiclecell\"];\n        }\n        Car * currentCar = [self->vehicles objectAtIndex:indexPath.row];\n        cell.textLabel.text = [NSString stringWithFormat:@\"Distance %.0f, pax: %d, fare: %.2f\", currentCar.distance * 1000, currentCar.pax, [currentCar getFare] ];\n        return cell;\n    }\n    ```", "```swift\n    - (void)viewDidLoad {\n        [super viewDidLoad];\n        Car * car1 = [[Car alloc] init];\n        car1.distance = 1.2;\n        Car * car2 = [[Car alloc] init];\n        car2.distance = 0.5;\n        Car * car3 = [[Car alloc] init];\n        car3.distance = 5;\n        Car * car4 = [[Car alloc] initWithFare:0.25];\n        car4.distance = 4;\n        vehicles = @[car1, car2, car3, car4];\n        [self->tableView reloadData];\n    }\n    ```", "```swift\n    - (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{\n        Car * currentCar = [self->vehicles objectAtIndex:indexPath.row];\n        // let's suppose that the current traffic allows us to drive at 50 km/h\n        float time = currentCar.distance / 50.0 * 60.0;\n        [[[UIAlertView alloc] initWithTitle:@\"Car booked\" message:[NSString stringWithFormat:@\"The car will arrive in %.0f minutes\", time] delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles: nil] show];\n    }\n    ```", "```swift\n    #import \"Car.h\"\n    ```", "```swift\n    @property (strong) UIImage * image;\n    ```", "```swift\n    #import <UIKit/UIKit.h>\n    ```", "```swift\n    self.image = [UIImage imageNamed:@\"car.png\"];\n    ```", "```swift\n    class Van: Car {\n        var capacity:Int;\n\n        override init(){\n            self.capacity = 10\n            super.init()\n            self.image = UIImage(named: \"van.png\")\n        }\n\n        override init(fare: Float){\n            self.capacity = 10\n            super.init(fare: fare)\n            self.image = UIImage(named: \"van.png\")\n        }\n\n    }\n    ```", "```swift\n    - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{\n        UITableViewCell * cell;\n        cell = [self->tableView dequeueReusableCellWithIdentifier:@\"vehiclecell\"];\n        if(cell == nil) {\n            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:@\"vehiclecell\"];\n        cell.textLabel.numberOfLines = 1;\n        }\n        Car * currentCar = self->vehicles[indexPath.row];\n\n        cell.textLabel.text = [NSString stringWithFormat:@\"Distance %.3f meters\", currentCar.distance];\n        NSString * detailText = detailText = [NSString stringWithFormat:@\"Pax: %d Fare: %.2f\", currentCar.pax, [currentCar getFare] ];\n        if ([currentCar isKindOfClass:[Van class]]) {\n            detailText = [NSString stringWithFormat:@\"%@, Volume: %ld\",detailText, (long)[(Van*)currentCar capacity]];\n        }\n        cell.detailTextLabel.text = detailText;\n        cell.imageView.image = currentCar.image;\n        return cell;\n    }\n    ```", "```swift\n    #import \"Chapter_8_Vehicles-Swift.h\"\n    ```", "```swift\n    - (void)viewDidLoad {\n        [super viewDidLoad];\n        Car * car1 = [[Car alloc] init];\n        car1.distance = 1.2;\n        Car * car2 = [[Car alloc] init];\n        car2.distance = 0.5;\n        Car * car3 = [[Car alloc] init];\n        car3.distance = 5;\n        Car * car4 = [[Car alloc] initWithFare:0.25];\n        car4.distance = 4;\n     Van * van = [[Van alloc] initWithFare:0.32];\n     van.distance = 3.8;\n        vehicles = @[car1, car2, car3, car4, van];\n        [self->tableView reloadData];\n    }\n    ```", "```swift\n    class Setup {\n        class func generate() -> [Car]{\n            var result = [Car]()\n            for distance in [1.2, 0.5, 5.0] {\n                var car = Car()\n                car.distance = Float(distance)\n                result.append(car)\n            }\n            var car = Car()\n            car.distance = 4\n            var van = Van()\n            van.distance = 3.8\n            result += [car, van]\n            return result\n        }\n    }\n    ```", "```swift\n    - (void)viewDidLoad {\n        [super viewDidLoad];\n        vehicles = [Setup generate];\n        [self->tableView reloadData];\n    }\n    ```", "```swift\n    import UIKit\n    ```", "```swift\n    class MainViewController:UIViewController,UITableViewDataSource, UITableViewDelegate {\n    ```", "```swift\n        private var vehicles = [Car]()\n        @IBOutlet var tableView:UITableView!\n    ```", "```swift\n        func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int{\n            return vehicles.count\n        }\n\n        func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell{\n            var cell:UITableViewCell? = self.tableView.dequeueReusableCellWithIdentifier(\"vehiclecell\")\n            if cell == nil {\n                cell = UITableViewCell(style: .Subtitle, reuseIdentifier: \"vehiclecell\")\n            }\n            var currentCar = self.vehicles[indexPath.row]\n            cell!.textLabel?.numberOfLines = 1\n            cell!.textLabel?.text = \"Distance \\(currentCar.distance * 1000) meters\"\n            var detailText = \"Pax: \\(currentCar.pax) Fare: \\(currentCar.fare)\"\n            if  currentCar is Van{\n                detailText += \", Volume: \\( (currentCar as Van).capacity)\"\n            }\n            cell!.detailTextLabel?.text = detailText\n            cell!.imageView?.image = currentCar.image\n            return cell!\n        }\n    ```", "```swift\n        func tableView(tableView: UITableView, willSelectRowAtIndexPath indexPath: NSIndexPath) -> NSIndexPath? {\n            var currentCar = self.vehicles[indexPath.row]\n            var time = currentCar.distance / 50.0 * 60.0\n            UIAlertView(title: \"Car booked\", message: \"The car will arrive in \\(time) minutes\", delegate: nil, cancelButtonTitle: \"OK\").show()\n            return indexPath\n        }\n    ```", "```swift\n        override func viewDidLoad() {\n            super.viewDidLoad()\n            vehicles = Setup.generate()\n            self.tableView.reloadData()\n        }\n    } // end of class\n    ```", "```swift\n    class ApplicationDelegate: UIResponder, UIApplicationDelegate {\n        var window: UIWindow?\n\n        func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n            print(\"didFinishLaunchingWithOptions\")\n            return true\n        }\n\n        func applicationWillResignActive(application: UIApplication) {\n            print(\"applicationWillResignActive\")\n        }\n\n        func applicationDidEnterBackground(application: UIApplication) {\n            print(\"applicationDidEnterBackground\")\n        }\n\n        func applicationWillEnterForeground(application: UIApplication) {\n            print(\"applicationWillEnterForeground\")\n        }\n\n        func applicationDidBecomeActive(application: UIApplication) {\n            print(\"applicationDidBecomeActive\")\n        }\n\n        func applicationWillTerminate(application: UIApplication) {\n            print(\"applicationWillTerminate\")\n        }\n    }\n    ```", "```swift\n    #import \"Chapter_8_Vehicles-Swift.h\"\n    ```", "```swift\n    int main(int argc, char * argv[]) {\n        @autoreleasepool {\n            return UIApplicationMain(argc, argv, nil, NSStringFromClass([ApplicationDelegate class]));\n        }\n    }\n    ```", "```swift\n    @IBDesignable public class CVGradientView: UIView {\n    ```", "```swift\n        @IBInspectable public var color1: UIColor = UIColor.redColor() {\n            didSet{\n                refresh()\n            }\n        }\n        @IBInspectable public var color2: UIColor = UIColor.blackColor(){\n            didSet{\n                refresh()\n            }\n        }\n        @IBInspectable public var roundCorners: CGFloat = 1.0 {\n            didSet{\n                refresh()\n            }\n        }\n        @IBInspectable public var horizontal: Bool = false {\n            didSet{\n                refresh()\n            }\n        }\n    ```", "```swift\n        private func refresh(){\n            let colors:Array = [color1.CGColor, color2.CGColor]\n            gradientLayer.colors = colors\n            gradientLayer.cornerRadius = roundCorners\n            if (horizontal){\n                gradientLayer.endPoint = CGPoint(x: 1, y: 0)\n            }else{\n                gradientLayer.endPoint = CGPoint(x: 0, y: 1)\n            }\n            self.setNeedsDisplay()\n        }\n    ```", "```swift\n        var gradientLayer: CAGradientLayer {\n            return layer as CAGradientLayer\n        }  \n        override public class func layerClass()->AnyClass{\n            return CAGradientLayer.self\n        }\n    ```", "```swift\n        override init(frame: CGRect) {\n            super.init(frame: frame)\n            refresh()\n        }\n\n        required public init(coder aDecoder: NSCoder) {\n            super.init(coder: aDecoder)\n            refresh()\n        }\n    }\n    ```", "```swift\n    import CustomViewsFramework\n    ```", "```swift\n        override func viewDidLoad() {\n            super.viewDidLoad()\n            (self.view as CVGradientView).color1 = UIColor.blueColor()\n            (self.view as CVGradientView).color2 = UIColor.purpleColor()\n        }\n    ```"]