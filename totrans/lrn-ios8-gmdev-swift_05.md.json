["```swift\nvar enemyNode:SKSpriteNode = SKSpriteNode(imageNamed: \"enemy_1\")\n```", "```swift\nlet textureAtlas = SKTextureAtlas(named: \"enemyAnim.atlas\")\nvar textureArray:[SKTexture] = []\n\nfor(var i: Int = 1; i <= 4; i++){\n\n    textureArray.append(textureAtlas.textureNamed(\"enemy_\\(i)\"))\n\n}\n\nlet animation = SKAction.animateWithTextures(textureArray, timePerFrame: 0.2)\nlet animate = SKAction.repeatActionForever(animation)        \n\nenemyNode.runAction(animate)\n```", "```swift\nlet heroAtlas = heroAnim()\nlet heroIdleAnimArray = heroAtlas.hero_Idle_()\nlet animaiton = SKAction.animateWithTextures(heroIdleAnimArray, timePerFrame: 0.2)\nlet animate = SKAction.repeatActionForever(animaiton)\nhero.runAction(animate)\n```", "```swift\n// Sprite definitions for 'heroAnim'\n// Generated with TexturePacker 3.6.0\n//\n// http://www.codeandweb.com/texturepacker\n// ---------------------------------------\n\nimport SpriteKit\n\nclass heroAnim {\n\n    // sprite names\n    let HERO_IDLE_1 = \"hero_Idle_1\"\n    let HERO_IDLE_2 = \"hero_Idle_2\"\n    let HERO_IDLE_3 = \"hero_Idle_3\"\n    let HERO_IDLE_4 = \"hero_Idle_4\"\n\n    // load texture atlas\n    let textureAtlas = SKTextureAtlas(named: \"heroAnim\")\n\n    // individual texture objects\n    func hero_Idle_1() -> SKTexture { return textureAtlas.textureNamed(HERO_IDLE_1) }\n    func hero_Idle_2() -> SKTexture { return textureAtlas.textureNamed(HERO_IDLE_2) }\n    func hero_Idle_3() -> SKTexture { return textureAtlas.textureNamed(HERO_IDLE_3) }\n    func hero_Idle_4() -> SKTexture { return textureAtlas.textureNamed(HERO_IDLE_4) }\n\n    // texture arrays for animations\n    func hero_Idle_() -> [SKTexture] {\n        return [\n            hero_Idle_1(),\n            hero_Idle_2(),\n            hero_Idle_3(),\n            hero_Idle_4()\n        ]\n    }\n\n}\n```", "```swift\nlet explosionParticle = SKEmitterNode(fileNamed: \"explosionParticle\")\n\nexplosionParticle.position = CGPoint(x: hero.position.x + hero.size.width/2 + 10, y: hero.position.y - 5)\n\nself.addChild(explosionParticle)   \n```", "```swift\nself.addChild(explosionParticle)   \nexplosionParticle.advanceSimulationTime(0.25)\n\n```", "```swift\nlet explosionParticle = SKEmitterNode()\nexplosionParticle.particleTexture = SKTexture(imageNamed: \"smoke\")\nexplosionParticle.particleBirthRate = 65.5\nexplosionParticle.numParticlesToEmit = 12\nexplosionParticle.particleLifetime = 8.841\nexplosionParticle.particleLifetimeRange = 16\nexplosionParticle.particlePositionRange = CGVector(dx:5.0, dy: 9.0)\nexplosionParticle.emissionAngle = 0\nexplosionParticle.emissionAngleRange = 360\nexplosionParticle.particleSpeed = 48\nexplosionParticle.particleSpeedRange = 90\nexplosionParticle.xAcceleration = 0\nexplosionParticle.yAcceleration = 0\nexplosionParticle.particleAlpha = 1.0\nexplosionParticle.particleAlphaRange = 0.2\nexplosionParticle.particleAlphaSpeed = -1.0\nexplosionParticle.particleScale = 0.25\nexplosionParticle.particleScaleRange = 0.125\nexplosionParticle.particleScaleSpeed = -0.125\nexplosionParticle.particleRotation = 60\nexplosionParticle.particleRotationRange = 60\nexplosionParticle.particleRotationSpeed = 5.0\nexplosionParticle.particleColorBlendFactor = 1.0\nexplosionParticle.particleColorBlendFactorRange = 0\nexplosionParticle.particleColorBlendFactorSpeed = 0\nexplosionParticle.particleColor = UIColor(red: 0.455, green: 0.784, blue: 0.835, alpha: 1.0)\nexplosionParticle.particleBlendMode = SKBlendMode.Alpha\n\nexplosionParticle.position = CGPoint(x: hero.position.x + hero.size.width/2 + 10,\n            y: hero.position.y - 5);\nself.addChild(explosionParticle)\n\nexplosionParticle.advanceSimulationTime(0.25)\n```"]