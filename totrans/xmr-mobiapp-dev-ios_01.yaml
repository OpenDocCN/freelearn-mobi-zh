- en: Chapter 1. Installing the Xamarin Product Range for Android and iOS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Xamarin product range covers iOS, OS X, and Android development. This enables
    the **.NET** Framework development on devices that do not natively support it
    via the respected and mature Mono framework.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Installing Xamarin.iOS, Xamarin.Android, and Xamarin Studio
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up a Windows machine to develop apps for iOS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Xamarin.iOS and Xamarin.Android
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Installing Xamarin for Windows and OS X is a very similar and simple process.
    Before you download, you will need to ensure that your computer has the following
    requirements as the minimum specifications:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Windows | Mac |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Windows 7 or Windows 8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visual Studio 2010 or 2012
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: OS X Lion or Mountain Lion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xcode v4.6 or above
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: For both, the general rule is the more memory you have the better. You also
    need to have a live network connection.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the software
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The website is able to check the operating system you are using and, when you
    select download, the correct version for your operating system will be downloaded.
  prefs: []
  type: TYPE_NORMAL
- en: You will need to give Xamarin some basic information before you are allowed
    to download the evaluation copy. The evaluation will allow you to develop and
    deploy apps for 30 days, after which you will need to purchase a copy. If you
    have placed any apps on the Apple store or Google Play, they will no longer function.
  prefs: []
  type: TYPE_NORMAL
- en: On a PC, double-click on the `XamarinInstaller.exe` file (Windows 8 users should
    run this file as an administrator). For Mac users, double-click on the installer.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the software
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Depending on your network connection, this can take anywhere up to an hour
    as each package is downloaded in turns and then installed. The installation process
    is automatic, and anything required for the software to work is installed with
    the exception of **Xcode**—it is simple to check whether you have this installed
    on your Mac: click on the `Applications` directory and look near the bottom for
    the icon. If it''s not there, go to the App Store and type in `Xcode`. The download
    is free. Unless you have a reason to change the defaults, accept the default setup
    options by clicking on **Next** each time an option is presented.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing the software](img/00003.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Enabling Visual Studio to build and run iOS applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For Windows to create, build, and deploy iOS applications, it must be connected
    to a Mac somewhere on a network. The Mac must also have Xamarin.iOS installed.
    This is a two-part process.
  prefs: []
  type: TYPE_NORMAL
- en: On the Mac
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Click on the Apple icon and select **System Preferences**.![On the Mac](img/00004.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then you need to select the **Security & Privacy** preference option.![On the
    Mac](img/00005.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then the firewall will need to be switched off. While this is not normally a
    good idea, a majority of internal networks have a sufficiently good firewall at
    any router. If you are not happy with this, leave the setting—you just won't be
    able to run or develop for iOS under Windows.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the PC
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When Xamarin.iOS for Visual Studio is installed, it also installs a small listener
    service called **Bonjour**. When you try to create an iOS application, Bonjour
    will attempt to automatically find a Mac on your network. This may fail, and if
    it does you will see the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![On the PC](img/00006.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: You don't need to worry about the error. Click on **Dismiss**. You will be presented
    with a window that allows you to enter the IP address of your Mac.
  prefs: []
  type: TYPE_NORMAL
- en: '![On the PC](img/00007.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'In this example, the IP address from the Mac on my network has the address
    shown in the preceding screenshot. When you click on **OK**, Bonjour will attempt
    to attach to Mac. If it is successful, you will be presented with the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![On the PC](img/00008.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: As soon as you see the window shown in the preceding screenshot on your screen,
    you are nearly there. The next step is to click on the host machine (highlighted
    in the preceding screenshot) and click on **Connect**. Once done, you're set up
    on the PC to develop for iOS under Windows.
  prefs: []
  type: TYPE_NORMAL
- en: All of the tools for development (like the Simulator—a simulated iOS device)
    can be either on one of the iPhone or iPad ranges).
  prefs: []
  type: TYPE_NORMAL
- en: If the Bonjour service was unable to automatically determine the Mac, you may
    need to manually set up the service. This can be performed very easily.
  prefs: []
  type: TYPE_NORMAL
- en: 'Assuming you''re on Windows 7, the following steps will help you set up the
    Bonjour service:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Start** button and select **Control Panel**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the **Control Panel**, click on **Administrative Tools** and from there select
    **Services**. You will be presented with a window, as shown in the following screenshot:![On
    the PC](img/00009.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure that the status is **Started** and the startup type is **Automatic**.
    (This will start the Bonjour service when Windows is restarted.)![Note](img/00001.gif)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: When using a PC to develop iOS applications, ensure that both the PC and Mac
    are running the same version of Xamarin.iOS—if they are out of step, you will
    need to install a newer version of Xamarin.iOS on the device that is out of step.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Note](img/00001.gif)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Installing additional code for Android development
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is different under iOS and PC but the end effect is the same.
  prefs: []
  type: TYPE_NORMAL
- en: When Xamarin.Android is installed on either platform, the compiler and the minimal
    set of the **Android Software Developers Kit** (**SDK**) is installed. This will
    let you get going with the development but not allow you to target a range of
    devices. It is, therefore, important to install the SDK for other versions of
    the Android operating system. This is preformed using the **Android SDK** **Manager**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing additional code for Android development](img/00010.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: To access **SDK Manager** on a PC, select **Start** and on the **All Programs**
    menu there is a menu option called **Android SDK Tools** under which is the **Android
    SDK Manager**. Select the **SDK Manager** and you will be presented with a new
    window that allows you to select the SDK you want.
  prefs: []
  type: TYPE_NORMAL
- en: For iOS users
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A part of the installation process on a Mac installs the **Xamarin IDE** (**Integrated
    Development Environment**)—Xamarin Studio. This is similar in many ways to Visual
    Studio and performs a very similar job.
  prefs: []
  type: TYPE_NORMAL
- en: '![For iOS users](img/00011.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: To access the SDK Manager on Xamarin Studio, select **Tools** followed by **Open
    Android SDK Manager**.
  prefs: []
  type: TYPE_NORMAL
- en: In both cases, you will be presented with the following screenshot from the
    SDK Manager. It is simplest to select all the SDKs and click on the **Install
    packages...** button to start the process. Depending on your network connection
    speed, this process may take a while.
  prefs: []
  type: TYPE_NORMAL
- en: '![For iOS users](img/00012.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: That's it—you're set up on both a Mac and PC to create amazing applications
    for Android and iOS. Your development environments are set up. For the rest of
    this book, though, I will concentrate solely on the development of iOS applications
    and leave Android to the companion book.
  prefs: []
  type: TYPE_NORMAL
