- en: Chapter 5. Spawning Enemies, Coins, and Power-ups
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章：生成敌人、硬币和增强
- en: One of the most enjoyable and creative aspects of game development is building
    the game world for your players to explore. Our young project is starting to resemble
    a playable game after adding the controls; the next step is to build more content.
    We will create additional classes for new enemies, collectible coins, and special
    power-ups that give Pierre Penguin a boost as he navigates the perils of our world.
    We can then develop a system to spawn increasingly difficult patterns of these
    game objects as the player advances.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏开发中最有趣和最具创造性的方面之一是为玩家构建可探索的游戏世界。我们的年轻项目在添加控制后开始像可玩游戏一样，下一步是构建更多内容。我们将为新的敌人、可收集的硬币和给予皮埃尔企鹅额外能量的特殊增强创建额外的类。然后我们可以开发一个系统，随着玩家的进步，逐渐生成越来越困难的这些游戏对象的模式。
- en: 'The topics in this chapter include:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包括以下主题：
- en: Adding the power-up star
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加增强星
- en: A new enemy – the mad fly
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新敌人——疯狂飞虫
- en: Another terror – bats!
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一个恐怖——蝙蝠！
- en: The spooky ghost
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可怕的幽灵
- en: Guarding the ground with the blade
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用刀守护地面
- en: Adding coins
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加硬币
- en: Testing the new game objects
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试新游戏对象
- en: Introducing the cast
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍角色阵容
- en: 'Strap on your hard hat, we are going to be writing a lot of code in this chapter.
    Stick with it! The results are well worth the effort. Meet the new cast of characters
    we will be introducing in this chapter:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 穿上你的安全帽，我们将在本章中编写大量的代码。坚持下去！结果绝对值得努力。来看看本章我们将介绍的新角色阵容：
- en: '![Introducing the cast](img/4532_05_01.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![介绍角色阵容](img/4532_05_01.jpg)'
- en: Adding the power-up star
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加增强星
- en: 'Many of my favorite games grant temporary invulnerability when the player picks
    up a star. We will add a hyperactive star power-up to our game. Meet our star:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 许多我最喜欢的游戏在玩家捡起星星时都会赋予玩家临时无敌能力。我们将为我们的游戏添加一个高度活跃的增强星。来看看我们的星星：
- en: '![Adding the power-up star](img/4532_05_03.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![添加增强星](img/4532_05_03.jpg)'
- en: Locating the art assets
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定位艺术资源
- en: You can find the art assets for power-up stars and coins inside the `goods.atlas`
    texture atlas in the `Coins` and `Powerups` folder of the assets bundle. Add the
    `goods.atlas` texture atlas to your project now.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在资产包的`Coins`和`Powerups`文件夹中的`goods.atlas`纹理图集中找到增强星和硬币的艺术资源。现在将`goods.atlas`纹理图集添加到您的项目中。
- en: Adding the Star class
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加Star类
- en: Once the art is in place, you can create a new Swift file named `Star.swift`
    in your project; we will continue to organize classes into distinct files. The
    `Star` class will be similar to the `Bee` class we created earlier; it will inherit
    from `SKSpriteNode` and adhere to our `GameSprite` protocol. The star will add
    a lot of power to the player, so we will also give it a special `SKAction`-based
    zany animation to make it stand out.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦艺术资源到位，您可以在项目中创建一个名为`Star.swift`的新Swift文件；我们将继续将类组织到不同的文件中。`Star`类将与之前创建的`Bee`类相似；它将继承自`SKSpriteNode`并遵循我们的`GameSprite`协议。星星将为玩家带来很多力量，因此我们还将给它一个基于`SKAction`的特殊疯狂动画，使其脱颖而出。
- en: 'To create the `Star` class, add the following code in your `Star.swift` file:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建`Star`类，请在您的`Star.swift`文件中添加以下代码：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Great! You should be familiar with most of this code at this point, since it
    is so similar to some of the other classes we have made. Let''s continue by adding
    another new character: a grumpy fly.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！您应该已经熟悉了大部分代码，因为它与我们之前创建的一些类非常相似。让我们继续添加另一个新角色：一只烦躁的飞虫。
- en: Adding a new enemy – the mad fly
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加一个新敌人——疯狂飞虫
- en: 'Pierre Penguin will need to dodge more than just bees to accomplish his goal.
    We will add a few new enemies in this chapter, starting with the `MadFly` class.
    The mad fly is quite grumpy, as you can see:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 皮埃尔企鹅要实现他的目标，不仅需要躲避蜜蜂。在本章中，我们将添加一些新的敌人，首先是`MadFly`类。疯狂飞虫相当烦躁，正如你所见：
- en: '![Adding a new enemy – the mad fly](img/4532_05_04.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![添加一个新敌人——疯狂飞虫](img/4532_05_04.jpg)'
- en: Locating the enemy assets
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定位敌人资源
- en: You can find all of the art for our new enemies in the `Enemies` folder of the
    asset bundle, in the `enemies.atlas` texture atlas. Add this texture atlas to
    your project now.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在资产包的`Enemies`文件夹中的`enemies.atlas`纹理图集中找到我们新敌人的所有艺术资源。现在将这个纹理图集添加到您的项目中。
- en: Adding the MadFly class
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加MadFly类
- en: '`MadFly` is another straightforward class; it looks a lot like the `Bee` code.
    Create a new Swift file named `MadFly.swift` and enter this code:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`MadFly`是一个简单的类；它看起来很像`Bee`代码。创建一个名为`MadFly.swift`的新Swift文件，并输入以下代码：'
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Congratulations, you have successfully implemented the mad fly. No time to celebrate
    – onward to the bats!
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，你已经成功实现了疯狂飞行的敌人。没有时间庆祝——继续前进，迎接蝙蝠！
- en: Another terror – bats!
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另一个恐怖——蝙蝠！
- en: 'We are getting into quite a rhythm with creating new classes. Now, we will
    add a bat to swarm with the bees. The bat is small, but has a very sharp fang:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在创建新类方面已经进入了一种相当有节奏的状态。现在，我们将添加一只蝙蝠来与蜜蜂一起群飞。蝙蝠体型小，但有一对非常锋利的獠牙：
- en: '![Another terror – bats!](img/4532_05_05.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![另一个恐怖——蝙蝠！](img/4532_05_05.jpg)'
- en: Adding the Bat class
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加`Bat`类
- en: 'To add the `Bat` class, create a file named `Bat.swift` and add this code:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加`Bat`类，创建一个名为`Bat.swift`的文件，并添加以下代码：
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now that you have created the `Bat` class, there are two more enemies to add.
    We will add the `Ghost` class next.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经创建了`Bat`类，还有两个敌人需要添加。我们将在下一个步骤中添加`Ghost`类。
- en: The spooky ghost
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可怕的幽灵
- en: 'We will complement the bat with another spooky enemy: the Ghost as seen here:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将用另一个可怕的敌人来补充蝙蝠：如这里所示的幽灵：
- en: '![The spooky ghost](img/4532_05_06.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![可怕的幽灵](img/4532_05_06.jpg)'
- en: Instead of animating through multiple frames, we will use actions to animate
    the ghost's single frame.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会通过多个帧进行动画，而是使用动作来动画幽灵的单帧。
- en: Adding the Ghost class
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加`Ghost`类
- en: 'As with the other classes, create a new file in your project, `Ghost.swift`,
    and then add the following code:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他类一样，在你的项目中创建一个名为`Ghost.swift`的新文件，然后添加以下代码：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Perfect. Our ghost is ready for action. We have added a lot of flying enemies
    to chase Pierre Penguin through the sky. We need a ground-based enemy that will
    prevent the player from taking an easy path just above the ground. Next, we will
    add the `Blade` class.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 完美。我们的幽灵准备就绪，可以行动了。我们已经添加了许多飞行敌人来追逐皮埃尔企鹅穿越天空。我们需要一个地面敌人，它可以阻止玩家在地面以上轻易地前进。接下来，我们将添加`Blade`类。
- en: Guarding the ground – adding the blade
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 守护地面——添加刀片
- en: 'The `Blade` class will keep Pierre from flying too low. This enemy class will
    be similar to the others we have created, with one exception: we will generate
    a physics body based on the texture. The physics body circles that we have been
    using are much faster computationally and are usually sufficient to describe the
    shapes of our enemies; the `Blade` class requires a more complicated physics body,
    given its half-circle shape and bumpy edges:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`Blade`类将阻止皮埃尔飞得太低。这个敌人类将与其他我们创建的类相似，只有一个例外：我们将基于纹理生成一个物理体。我们一直在使用的物理体圆形在计算上更快，通常足以描述我们敌人的形状；`Blade`类需要一个更复杂的物理体，考虑到它的半圆形形状和凹凸边缘：'
- en: '![Guarding the ground – adding the blade](img/4532_05_07.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![守护地面——添加刀片](img/4532_05_07.jpg)'
- en: Adding the Blade class
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加`Blade`类
- en: 'To add the `Blade` class, create a new file named `Blade.swift` and add the
    following code:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加`Blade`类，创建一个名为`Blade.swift`的新文件，并添加以下代码：
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Congratulations, the `Blade` class was the last enemy we needed to add to our
    game. This process may seem repetitive – you have written a lot of boilerplate
    code – but separating our enemies into their own classes allows each enemy to
    implement unique logic and behavior. The benefits of this structure will become
    apparent as your games increase in complexity.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，`Blade`类是我们游戏中需要添加的最后一个敌人。这个过程可能看起来很重复——你已经写了很多样板代码——但将我们的敌人分成各自的类可以让每个敌人实现独特的逻辑和行为。随着你的游戏变得越来越复杂，这种结构的优势将变得明显。
- en: Next, we add the class for our coins.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们添加金币的类。
- en: Adding the coins
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加金币
- en: 'Coins are more fun if there are two value variations. We will create:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有两种价值变化，金币会更有趣。我们将创建：
- en: A bronze coin, worth one coin.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一枚铜币，价值一枚。
- en: A gold coin, worth five coins.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一枚金币，价值五枚。
- en: 'The two coins will be distinguishable by their color on the screen and the
    denomination text on the coin, as seen here:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 两个金币将通过屏幕上的颜色和硬币上的面额文字来区分，如下所示：
- en: '![Adding the coins](img/4532_05_08.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![添加金币](img/4532_05_08.jpg)'
- en: Creating the coin classes
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建金币类
- en: 'We only need a single `Coin` class to create both denominations. Everything
    in the `Coin` class should look very familiar at this point. To create the `Coin`
    class, add a new file named `Coin.swift` and then enter the following code:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要一个`Coin`类来创建两种面额。到目前为止，`Coin`类中的所有内容都应该非常熟悉。要创建`Coin`类，添加一个名为`Coin.swift`的新文件，然后输入以下代码：
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Great work – we have successfully added all of the new game objects we need
    for our final game!
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 干得好——我们已经成功添加了所有需要的游戏对象，为我们的最终游戏做好了准备！
- en: Organizing the project navigator
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组织项目导航器
- en: 'You may notice that these new classes cluttered the project navigator. This
    is a good time to clean up the navigator. Right-click the project in the project
    navigator and select **Sort By Type**, as shown in this screenshot:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到这些新类使项目导航器变得杂乱。这是清理导航器的好时机。在项目导航器中右键单击项目，并选择**按类型排序**，如图所示：
- en: '![Organizing the project navigator](img/4532_05_09.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![组织项目导航器](img/4532_05_09.jpg)'
- en: Your project navigator will segment itself by file type and sort into alphabetical
    order. This makes it much easier to find files as you need them.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你的项目导航器将根据文件类型进行分段，并按字母顺序排序。这使得在需要时查找文件变得容易得多。
- en: Testing the new game objects
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试新游戏对象
- en: 'It is time to see our hard work in action. We will now add one instance of
    each of our new classes to the game. Note that we will remove this testing code
    after we are done; you may want to leave yourself a comment or extra space for
    easy removal. Open `GameScene.swift` and locate the six lines that spawn the existing
    bees. Add this code after the bee lines:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候看到我们的辛勤工作付诸实践了。我们现在将向游戏中添加我们每个新类的一个实例。注意，我们在完成后将移除这个测试代码；你可能想给自己留下注释或额外的空间以便于移除。打开`GameScene.swift`并定位到生成现有蜜蜂的六行代码。在蜜蜂行之后添加此代码：
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: You may also wish to comment out the `Player` class line that moves Pierre forward,
    so the camera does not quickly move past your new game objects. Just make sure
    to uncomment it when you are done.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还希望注释掉移动皮埃尔前进的`Player`类行，这样摄像机就不会快速移动过你的新游戏对象。只是确保你在完成后取消注释。
- en: 'Once you are ready, run the project. You should see the entire family, as shown
    in this screenshot:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你准备好了，运行项目。你应该看到整个家族，如图所示：
- en: '![Testing the new game objects](img/4532_05_10.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![测试新游戏对象](img/4532_05_10.jpg)'
- en: Terrific work! All of our code has paid off and we have a large cast of characters
    ready for action.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 了不起的工作！我们所有的代码都得到了回报，我们有一大批角色准备行动。
- en: Checkpoint 5-A
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查点5-A
- en: 'To download my project to this point, browse to this URL:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 下载到这一点的项目，请访问此URL：
- en: '[http://www.thinkingswiftly.com/game-development-with-swift/chapter-5](http://www.thinkingswiftly.com/game-development-with-swift/chapter-5)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.thinkingswiftly.com/game-development-with-swift/chapter-5](http://www.thinkingswiftly.com/game-development-with-swift/chapter-5)'
- en: Preparing for endless flight
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备无限飞行
- en: In [Chapter 6](ch06.html "Chapter 6. Generating a Never-Ending World"), *Generating
    a Never-Ending World*, we will build a never-ending level by spawning tactical
    obstacle courses full of these new game objects. We need to clear out all of our
    test objects to get ready for this new level spawning system. Once you are ready,
    remove the spawning test code we just added to the `GameScene` class. Also, remove
    the six lines that we have been using to spawn the three bees from previous chapters.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第6章](ch06.html "第6章. 生成无限世界")《生成无限世界》中，我们将通过生成充满这些新游戏对象的战术障碍课程来构建一个无限关卡。我们需要清除所有测试对象，为这个新的关卡生成系统做好准备。一旦你准备好了，从`GameScene`类中移除我们刚刚添加的生成测试代码。同时，移除我们之前章节中用来生成三只蜜蜂的六行代码。
- en: 'When you are finished, your `GameScene` class''s `didMoveToView` function should
    look like this:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成时，你的`GameScene`类的`didMoveToView`函数应该看起来像这样：
- en: '[PRE7]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'When you run the project, you should only see Pierre and the ground, as shown
    here:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行项目时，你应该只看到皮埃尔和地面，如图所示：
- en: '![Preparing for endless flight](img/4532_05_02.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![准备无限飞行](img/4532_05_02.jpg)'
- en: We are now ready to build our level.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在准备好构建我们的关卡。
- en: Summary
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: You added the complete cast of characters to our game in this chapter. Look
    back at all that you accomplished; you added the power-up star, the bronze and
    gold coins, a spooky ghost, the mad fly, bats, and a blade. You tested all of
    the new classes and then removed the test code so that the project is ready for
    the level generation system we will put in place in the next chapter.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你在本章中为我们游戏添加了完整的角色阵容。回顾一下你所取得的成就；你添加了能量星、铜币和金币、一个幽灵、疯狂的小飞虫、蝙蝠和一把刀。你测试了所有的新类，然后移除了测试代码，以便项目为我们在下一章中将要放置的关卡生成系统做好准备。
- en: We spent a lot of effort building each new class. The world will come alive
    and reward our hard work in [Chapter 6](ch06.html "Chapter 6. Generating a Never-Ending
    World"), *Generating a Never-Ending World*.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在构建每个新类上投入了大量的努力。在[第6章](ch06.html "第6章. 生成无限世界")《生成无限世界》中，世界将变得生动起来，并回报我们的辛勤工作。
