["```kt\ntarget 'flyng' do \n  use_frameworks! \n  pod 'Fabric' \n  pod 'Crashlytics'   \n  pod 'Cartography'   \n  pod 'Parse' \n  pod 'ParseFacebookUtilsV4' \n  pod 'ParseLiveQuery'  \n  pod 'JSQMessagesViewController' \n  pod 'QuickBlox' \n\n```", "```kt\nimport UIKit \nprotocol RepositoryProtocol { \n    func authenticate (handler: RepositoryResultDelegate, request: AuthenticateRequest) \n    ... \n    func getProfile (handler: RepositoryResultDelegate, request: GetMyProfileRequest) \n    func getCategories (handler: RepositoryResultDelegate, request: GetCategoriesRequest) \n    func getCandidates (handler: RepositoryResultDelegate, request: GetCandidatesRequest) \n    func getMatchList (handler:RepositoryResultDelegate , request: GetMatchListRequest) \n    func pushMessage (handler: RepositoryResultDelegate, request: PushRequest)  \n    ... \n} \n```", "```kt\n func getCandidates (handler: RepositoryResultDelegate, request: GetCandidatesRequest){  \n  let params =   \n  [ \n            \"myId\": request.profileId, \n            \"fromAge\": myProfile.CriteriaAgeFrom, \n            \"toAge\" : myProfile.CriteriaAgeTo, \n            \"gender\" : myProfile.CriteriaGender, \n            \"maxDistance\" : myProfile.CriteriaMaxDistance, \n            \"category\": request.categoryId, \n            \"skip\": request.skip, \n            \"limit\" : request.limit \n     ] \n     PFCloud.callFunctionInBackground(\"getCandidates\", withParameters:    \n  params as [NSObject : AnyObject], block: { (object, error) in \n    ... \n```", "```kt\nfunc application(application: UIApplication,           \n     didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {         \n        ...         \n        Fabric.with([Answers.self, Crashlytics.self]) \n```", "```kt\nAnalyticsUtil.logEvent(AnalyticsUtil.eventSignupFacebook) \n\nstatic func logEvent(event: String){ \n   ... \n   Answers.logCustomEventWithName(event, customAttributes: nil) \n} \n```"]