["```swift\n#import <sys/utsname.h>\n```", "```swift\nNSString* deviceName()\n{\n    struct utsname systemInfo;\n    uname(&systemInfo);\n\n    return [NSString stringWithCString:systemInfo.machine\n                              encoding:NSUTF8StringEncoding];\n}\n```", "```swift\nNSLog(deviceName());\n```", "```swift\n if ([deviceName()  isEqual: @\"x86_64\"]) \n{\n  rainEmitter.particleBirthRate = 150;\n}\n```", "```swift\nif ([deviceName()  isEqual: @\"x86_64\"]) \n{\n  fireEmitter.particleBirthRate = 100;\n}\n```", "```swift\nif ([deviceName()  isEqual: @\"x86_64\"]) {//ios sim\n                rainEmitter.particleBirthRate = 1500;\n            }\n            else if ([deviceName()  isEqual: @\"iPhone4,1\"]) {//4s\n                rainEmitter.particleBirthRate = 1000;\n            }\n            else if ([deviceName()  isEqual: @\"iPad3,4\"]) {//4th gen ipad\n                rainEmitter.particleBirthRate = 1000;\n            }\n            else if ([deviceName()  isEqual: @\"iPad2,5\"]) {//ipad mini\n                rainEmitter.particleBirthRate = 1000;\n            }\n            else if ([deviceName()  isEqual: @\"iPad4,1\"]) {//ipad air\n                rainEmitter.particleBirthRate = 1200;\n            }\n            else if ([deviceName()  isEqual: @\"iPad4,2\"]) {//ipad air cellular\n                rainEmitter.particleBirthRate = 1200;\n            }\n            else if ([deviceName()  isEqual: @\"iPad4,4\"]) {//ipad mini w. retina\n                rainEmitter.particleBirthRate = 1300;\n            }\n            else if ([deviceName()  isEqual: @\"iPad4,5\"]) {//ipad mini w. retina cellular\n                rainEmitter.particleBirthRate = 1300;\n            }\n            else if ([deviceName()  isEqual: @\"iPhone5,1\"]) {//iphone 5 at&t/canada\n                rainEmitter.particleBirthRate = 1200;\n            }\n            else if ([deviceName()  isEqual: @\"iPhone5,2\"]) {//iphone 5 world-wide\n                rainEmitter.particleBirthRate = 1200;\n            }\n            else if ([deviceName()  isEqual: @\"iPhone5,3\"]) {//iphone 5c gsm\n                rainEmitter.particleBirthRate = 1300;\n            }\n            else if ([deviceName()  isEqual: @\"iPhone5,4\"]) {//iphone 5c china/global\n                rainEmitter.particleBirthRate = 1300;\n            }\n\n            else if ([deviceName()  isEqual: @\"iPhone6,1\"]) {//iphone 5s gsm\n                rainEmitter.particleBirthRate = 1500;\n            }\n            else if ([deviceName()  isEqual: @\"iPhone6,2\"]) {//iphone 5s china/global\n                rainEmitter.particleBirthRate = 1500;\n            }\n            else if ([deviceName()  isEqual: @\"iPhone7,1\"]) {//iphone 6 plus\n               rainEmitter.particleBirthRate = 2500;\n           }\n            else if ([deviceName()  isEqual: @\"iPhone7,1\"]) {//iphone 6\n               rainEmitter.particleBirthRate = 2500;\n           }\n```", "```swift\n- (void)updateWithTimeSinceLastUpdate:(CFTimeInterval)timeSinceLast {\n\n    self.lastSpawnTimeInterval += timeSinceLast;\n    if (self.lastSpawnTimeInterval > 2) {\n        self.lastSpawnTimeInterval = 0;\n        [self addSquiggy];\n\n    }\n}\n```", "```swift\n-(void)scanForDevice {\n\nmyCentralManager = [[CBCentralManager alloc] initWithDelegate:self queue:nil options:nil]; //this creates the Bluetooth Manager\n\n[myCentralManager scanForPeripheralsWithServices:nil options:nil];\n//this will scan for a broadcasting device\n}\n\n- (void)centralManager:(CBCentralManager *)central\n     didDiscoverPeripheral:(CBPeripheral *)peripheral\n     advertisementData:(NSDictionary *)advertisementData\n     RSSI:(NSNumber *)RSSI {       \n// Connect to the newly discovered device\n\n      // Stop scanning for devices\n      [myCentralManager stopScan];\n    }\n```", "```swift\n//This will Unsubscribe you from a characteristic value\n[peripheral setNotifyValue:NO forCharacteristic:interestingCharacteristic];\n\n// Disconnect from the device\n[myCentralManager cancelPeripheralConnection:peripheral];\n```", "```swift\n- (void)applicationWillResignActive:(UIApplication *)application {\n\n}\n```", "```swift\n- (void)applicationDidEnterBackground:(UIApplication *)application {\n\n}\n```", "```swift\n- (void)applicationWillEnterForeground:(UIApplication *)application {\n    // Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.\n}\n```", "```swift\n- (void)applicationDidBecomeActive:(UIApplication *)application {\n    // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.\n}\n```"]