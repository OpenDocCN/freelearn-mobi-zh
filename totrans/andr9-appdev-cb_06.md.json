["```kt\n<uses-permission android:name=\"com.android.launcher.permission.INSTALL_SHORTCUT\" />\n```", "```kt\n<Button\n    android:id=\"@+id/button\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Create Shortcut\"\n    android:onClick=\"createShortcut\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintLeft_toLeftOf=\"parent\"\n    app:layout_constraintRight_toRightOf=\"parent\"\n    app:layout_constraintTop_toTopOf=\"parent\" />\n```", "```kt\npublic void createShortcut(View view) {\n    Intent shortcutIntent = new Intent(this, MainActivity.class);\n    shortcutIntent.setAction(Intent.ACTION_MAIN);\n    Intent intent = new Intent();\n    intent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);\n    intent.putExtra(Intent.EXTRA_SHORTCUT_NAME, getString(R.string.app_name));\n    intent.putExtra(Intent.EXTRA_SHORTCUT_ICON_RESOURCE,\n            Intent.ShortcutIconResource.fromContext(this, R.mipmap.ic_launcher));\n    intent.setAction(\"com.android.launcher.action.INSTALL_SHORTCUT\");\n    sendBroadcast(intent);\n}\n```", "```kt\n<uses-permission android:name=\"com.android.launcher.permission.UNINSTALL_SHORTCUT\" />\n```", "```kt\ncom.android.launcher.action.UNINSTALL_SHORTCUT \n```", "```kt\n<receiver android:name=\".HomescreenWidgetProvider\" >\n    <intent-filter>\n        <action android:name=\"android.appwidget.action.APPWIDGET_UPDATE\" />\n    </intent-filter>\n    <meta-data android:name=\"android.appwidget.provider\"\n        android:resource=\"@xml/appwidget_info\" />\n</receiver>\n```", "```kt\n<appwidget-provider xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:minWidth=\"40dp\"\n    android:minHeight=\"40dp\"\n    android:updatePeriodMillis=\"0\"\n    android:initialLayout=\"@layout/widget\"\n    android:resizeMode=\"none\"\n    android:widgetCategory=\"home_screen\">\n</appwidget-provider>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n    <AnalogClock\n        android:id=\"@+id/analogClock\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerVertical=\"true\"\n        android:layout_centerHorizontal=\"true\" />\n</RelativeLayout>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<appwidget-provider xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:minWidth=\"40dp\"\n    android:minHeight=\"40dp\"\n    android:updatePeriodMillis=\"0\"\n    android:initialLayout=\"@layout/widget\"\n    android:resizeMode=\"none\"\n    android:widgetCategory=\"home_screen\">\n</appwidget-provider>\n```", "```kt\n@Override\npublic void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {\n    super.onUpdate(context, appWidgetManager, appWidgetIds);\n\n    for (int count=0; count<appWidgetIds.length; count++) {\n        RemoteViews appWidgetLayout = new\n                RemoteViews(context.getPackageName(),\n                R.layout.widget);\n        Intent intent = new Intent(context, MainActivity.class);\n        PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent, 0);\n        appWidgetLayout.setOnClickPendingIntent(R.id.analogClock, pendingIntent);\n        appWidgetManager.updateAppWidget(appWidgetIds[count], appWidgetLayout);\n    }\n}\n```", "```kt\n<receiver android:name=\".HomescreenWidgetProvider\" >\n    <intent-filter>\n        <action android:name=\"android.appwidget.action.APPWIDGET_UPDATE\" />\n    </intent-filter>\n    <meta-data android:name=\"android.appwidget.provider\"\n        android:resource=\"@xml/appwidget_info\" />\n</receiver>\n```", "```kt\n<meta-data android:name=\"android.appwidget.provider\" \n\n    android:resource=\"@xml/appwidget_info\" />\n```", "```kt\n<activity android:name=\".AppWidgetConfigureActivity\">\n    <intent-filter>\n        <action android:name=\"android.appwidget.action.APPWIDGET_CONFIGURE\"/>\n    </intent-filter>\n</activity>\n```", "```kt\nandroid:configure=\"com.packtpub.appwidget.AppWidgetConfigureActivity\"\n```", "```kt\n<string name=\"search_title\">Search</string>\n<string name=\"search_hint\">Enter text to search</string>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n    <item android:id=\"@+id/menu_search\"\n        android:title=\"@string/search_title\"\n        android:icon=\"@android:drawable/ic_menu_search\"\n        app:showAsAction=\"collapseActionView|ifRoom\"\n        app:actionViewClass=\"android.support.v7.widget.SearchView\" />\n</menu>\n```", "```kt\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    MenuInflater inflater = getMenuInflater();\n    inflater.inflate(R.menu.menu_search, menu);\n    SearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);\n    MenuItem searchItem = menu.findItem(R.id.menu_search);\n    SearchView searchView = (SearchView) searchItem.getActionView();\n    searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));\n    return true;\n}\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<searchable xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:label=\"@string/app_name\"\n    android:hint=\"@string/search_hint\" />\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" >\n    <TextView\n        android:id=\"@+id/textViewSearchResult\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\" />\n</RelativeLayout> \n```", "```kt\nTextView mTextViewSearchResult; \n```", "```kt\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_search_result);\n    mTextViewSearchResult = findViewById(R.id.textViewSearchResult);\n    if (Intent.ACTION_SEARCH.equals(getIntent().getAction())) {\n        handleSearch(getIntent().getStringExtra(SearchManager.QUERY));\n    }\n}\n```", "```kt\nprivate void handleSearch(String searchQuery) {\n    mTextViewSearchResult.setText(searchQuery);\n}\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.packtpub.searchview\">\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\">\n        <meta-data android:name=\"android.app.default_searchable\"\n            android:value=\".SearchResultActivity\" />\n        <activity android:name=\".MainActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity android:name=\".SearchResultActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.SEARCH\" />\n            </intent-filter>\n            <meta-data android:name=\"android.app.searchable\"\n                android:resource=\"@xml/searchable\" />\n        </activity>\n    </application>\n</manifest>\n```", "```kt\n<meta-data android:name=\"android.app.default_searchable\"\n    android:value=\".SearchResultActivity\" />\n```", "```kt\n<meta-data android:name=\"android.app.searchable\"\n    android:resource=\"@xml/searchable\" />\n```", "```kt\n<intent-filter>\n    <action android:name=\"android.intent.action.SEARCH\" />\n</intent-filter>\n```", "```kt\nif (Intent.ACTION_SEARCH.equals(getIntent().getAction())) {\n    handleSearch(getIntent().getStringExtra(SearchManager.QUERY));\n}\n```", "```kt\nprivate void hideSystemUi() {\n    getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_IMMERSIVE |\n            View.SYSTEM_UI_FLAG_FULLSCREEN |\n            View.SYSTEM_UI_FLAG_LAYOUT_STABLE |\n            View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION |\n            View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN |\n            View.SYSTEM_UI_FLAG_HIDE_NAVIGATION);\n}\n```", "```kt\nprivate void showSystemUI() {\n    getWindow().getDecorView().setSystemUiVisibility(\n            View.SYSTEM_UI_FLAG_LAYOUT_STABLE |\n            View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION |\n            View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);\n}\n```", "```kt\nprivate GestureDetectorCompat mGestureDetector;\n```", "```kt\nprivate class GestureListener extends GestureDetector.SimpleOnGestureListener {\n    @Override\n    public boolean onDown(MotionEvent event) {\n        return true;\n    }\n    @Override\n    public boolean onFling(MotionEvent event1, MotionEvent event2, \n                           float velocityX, float velocityY) {\n        return true;\n    }\n    @Override\n    public boolean onSingleTapUp(MotionEvent e) {\n        if (getSupportActionBar()!= null && getSupportActionBar().isShowing()) {\n            hideSystemUi();\n        } else {\n            showSystemUI();\n        }\n        return true;\n    }\n}\n```", "```kt\n@Override\npublic boolean onTouchEvent(MotionEvent event) {\n    mGestureDetector.onTouchEvent(event);\n    return super.onTouchEvent(event);\n}\n```", "```kt\nmGestureDetector = new GestureDetectorCompat(this, new GestureListener());\nhideSystemUi();\n```", "```kt\ngetWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LOW_PROFILE); \n```", "```kt\ngetWindow().getDecorView().setSystemUiVisibility(0); \n```", "```kt\ngetActionBar().hide(); \n\ngetActionBar().show(); \n```", "```kt\n<item name=\"android:windowActionBarOverlay\">true</item> \n```", "```kt\nTheme.Holo.NoActionBar.TranslucentDecor \n\nTheme.Holo.Light.NoActionBar.TranslucentDecor \n```", "```kt\n<item name=\"android:windowTranslucentNavigation\">true</item> \n\n<item name=\"android:windowTranslucentStatus\">true</item> \n```"]