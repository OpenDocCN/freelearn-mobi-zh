["```kt\n    using System.Collections.Generic; /* List */\n    using Unity.Services.Analytics; /* AnalyticsService, ConsentCheckException */\n    using Unity.Services.Core; /* UnityServices */\n    using UnityEngine;\n    public class AnalyticsManager : MonoBehaviour\n    {\n        // Start is called before the first frame update\n        async void Start()\n        {\n            try\n            {\n                await UnityServices.InitializeAsync();\n                List<string> consentIdentifiers = await\n                    AnalyticsService.Instance\n                        .CheckForRequiredConsents();\n            }\n            catch (ConsentCheckException)\n            {\n                /* Something went wrong */\n            }\n        }\n    }\n    ```", "```kt\n    using Unity.Services.Analytics; /* AnalyticsService */\n    ```", "```kt\n    /// <summary>\n    /// Will turn our pause menu on or off\n    /// </summary>\n    /// <param name=\"isPaused\">is the game currently paused</param>\n    public void SetPauseMenu(bool isPaused)\n    {\n        paused = isPaused;\n        /* If the game is paused, timeScale is 0,\n           otherwise 1 */\n        Time.timeScale = (paused) ? 0 : 1;\n        pauseMenu.SetActive(paused);\n        onScreenControls.SetActive(!paused);\n        /* Send custom gamePaused event */\n        if (paused && (AnalyticsService.Instance != null))\n        {\n            AnalyticsService.Instance.CustomData(\n                \"gamePaused\");\n            AnalyticsService.Instance.Flush();\n        }\n    }\n    ```", "```kt\n    using Unity.Services.Analytics; /* AnalyticsService */\n    using System.Collections.Generic; /* Dictionary */\n    ```", "```kt\n    private void OnCollisionEnter(Collision collision)\n    {\n        var go = collision.gameObject;\n        var playerBehaviour =\n            go.GetComponent<PlayerBehaviour>();\n        // First check if we collided with the player\n        if (playerBehaviour)\n        {\n            // Destroy the player\n            //Destroy(collision.gameObject);\n            // Destroy (Hide) the player\n            player = go;\n            player.SetActive(false);\n            /* If Unity Analytics doesn't exist will throw\n               an exception */\n            try\n            {\n                /* Define Custom Parameters */\n                var eventData = new Dictionary<string,\n                    object>\n                {\n                    { \"score\", playerBehaviour.Score }\n                };\n                AnalyticsService.Instance.CustomData(\"game\n                    Over\", eventData);\n                AnalyticsService.Instance.Flush();\n            }\n            catch(ServicesInitializationException e)\n            {\n                /* Displays the exception but doesn't\n                   break * the game */\n                Debug.LogWarning(e.Message);\n            }\n            /* Call the function ResetGame after waitTime\n               has passed */\n            Invoke(\"ResetGame\", waitTime);\n        }\n    }\n    ```", "```kt\n    SELECT EVENT_JSON:score::FLOAT\n    FROM EVENTS\n    WHERE EVENT_NAME = 'gameOver'\n    ```", "```kt\nSELECT EVENT_JSON\nFROM EVENTS\nWHERE EVENT_NAME = 'gameOver'\n```", "```kt\n\"{\n  \"\"clientVersion\"\": \"\"0.1\"\",\n  \"\"collectInsertedTimestamp\"\": \"\"2022-12-23\n    05:36:22.379\"\",\n  \"\"eventDate\"\": \"\"2022-12-23 00:00:00.000\"\",\n  \"\"eventID\"\": 3072590187314819072,\n  \"\"eventLevel\"\": 0,\n  \"\"eventName\"\": \"\"gameOver\"\",\n  \"\"eventTimestamp\"\": \"\"2022-12-23 14:36:19.072\"\",\n  \"\"eventUUID\"\": \"\"0d924683-5667-4455-b899-722bfeae93cd\"\",\n  \"\"gaUserAcquisitionChannel\"\": \"\"None\"\",\n  \"\"gaUserAgeGroup\"\": \"\"UNKNOWN\"\",\n  \"\"gaUserCountry\"\": \"\"KR\"\",\n  \"\"gaUserGender\"\": \"\"UNKNOWN\"\",\n  \"\"gaUserStartDate\"\": \"\"2022-07-28 00:00:00.000\"\",\n  \"\"mainEventID\"\": 3072590187314819072,\n  \"\"msSinceLastEvent\"\": 12124,\n  \"\"platform\"\": \"\"PC_CLIENT\"\",\n  \"\"score\"\": 6.51999473571777,\n  \"\"sessionID\"\": \"\"0ce65df8-9696-40e8-ae44-924417e0d406\"\",\n  \"\"timezoneOffset\"\": \"\"+0900\"\",\n  \"\"userCountry\"\": \"\"KR\"\",\n  \"\"userID\"\": \"\"21328f4689677b24baf59487ae951228\"\"\n}\"\n```"]