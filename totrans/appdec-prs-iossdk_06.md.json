["```swift\n- (void)signUp {\n    PFUser *user = [PFUser user];\n    user.username = @\"demo name\";\n    user.password = @\"demo pass\";\n    user.email = @\"demo@example.com\";\n\n    // other fields can be set just like with PFObject\n    [user setObject:@\"user display name\" forKey:@\"displayName\"];\n\n    [user signUpInBackgroundWithBlock:^(BOOL succeeded, NSError *error) {\n      if (!error) {\n          // Successfully signed up\n      } else {\n          NSString *errorString = [[error userInfo] objectForKey:@\"error\"];\n          // Show the errorString somewhere and let the user try again.\n      }\n    }];\n}\n```", "```swift\n[PFUser logInWithUsernameInBackground:@\"demoName\" password:@\"demopass\"\n  block:^(PFUser *user, NSError *error) {\n    if (user) {\n        // Successful login.\n    } else {\n        // The login failed. Check error to see why.\n    }\n}];\n```", "```swift\nPFUser *currentUser = [PFUser currentUser];\nif (currentUser) {\n    // do stuff with the user\n} else {\n    // show the signup or login screen\n}\n```", "```swift\n[PFUser logOut];\n```", "```swift\n[PFAnonymousUtils logInWithBlock:^(PFUser *user, NSError *error) {\n    if (error) {\n      NSLog(@\"Anonymous login failed.\");\n    } else {\n      NSLog(@\"Anonymous user logged in.\");\n    }\n}];\n```", "```swift\nif ([PFAnonymousUtils isLinkedWithUser:[PFUser currentUser]]) {\n    [self enableSignUpButton];\n} else {\n    [self enableLogOutButton];\n}\n```", "```swift\n[PFUser requestPasswordResetForEmailInBackground:@\"demo@example.com\"];\n```", "```swift\nPFQuery *query = [PFUser query];\n[query whereKey:@\"gender\" equalTo:@\"female\"]; // find all the women\nNSArray *girls = [query findObjects];\n```", "```swift\nThe following code will illustrate the security of the user on cloud.\nPFUser *user = [PFUser logInWithUsername:@\"my_username\" password:@\"my_password\"];\nuser.username = \"my_new_username\"; // attempt to change username\n[user save]; // This succeeds, since the user was authenticated on the device\n\n// Get the user from a non-authenticated method\nPFQuery *query = [PFUser query];\nPFUser *userAgain = (PFUser *)[query getObjectWithId:user.objectId];\n\nuserAgain.username = \"another_username\";\n\n// This will throw an exception, since the PFUser is not authenticated\n[userAgain save];\n```", "```swift\nPFObject *privateNote = [PFObject objectWithClassName:@\"Note\"];\n[privateNote setObject:@\"This note is private!\" forKey:@\"content\"];\nprivateNote.ACL = [PFACL ACLWithUser:[PFUser currentUser]];\n[privateNote saveInBackground];\n```", "```swift\nPFObject *groupMessage = [PFObject objectWithClassName:@\"Message\"];\nPFACL *groupACL = [PFACL ACL];\n\n// userList is an NSArray with the users we are sending this message to.\nfor (PFUser *user in userList) {\n    [groupACL setReadAccess:YES forUser:user];\n    [groupACL setWriteAccess:YES forUser:user];\n}\n\ngroupMessage.ACL = groupACL;\n[groupMessage saveInBackground];\n```", "```swift\nPFACL *defaultACL = [PFACL ACL];\n[defaultACL setPublicReadAccess:YES];\n[PFACL setDefaultACL:defaultACL withAccessForCurrentUser:YES];\n```", "```swift\n// By specifying no write privileges for the ACL, we can ensure the role cannot be altered.\nPFACL *roleACL = [PFACL ACL];\n[roleACL setPublicReadAccess:YES];\nPFRole *role = [PFRole roleWithName:@\"Administrator\" acl:roleACL];\n[role saveInBackground];\n```", "```swift\nPFRole *role = [PFRole roleWithName:roleName acl:roleACL];\nfor (PFUser *user in usersToAddToRole) {\n  [role.users addObject:user];\n}\nfor (PFRole *childRole in rolesToAddToRole) {\n  [role.roles addObject:childRole];\n}\n[role saveInBackground];\n```", "```swift\nPFObject *wallPost = [PFObject objectWithClassName:@\"WallPost\"];\nPFACL *postACL = [PFACL ACL];\n[postACL setWriteAccess:YES forRole:@\"Administrator\"];\nwallPost.ACL = postACL;\n[wallPost saveInBackground];\n```", "```swift\nPFRole *administrators = /* Your \"Administrators\" role */;\nPFRole *moderators = /* Your \"Moderators\" role */;\n[moderators.roles addObject:administrators];\n[moderators saveInBackground];\n```"]