- en: Chapter 4. Using Xcode Instruments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章 使用 Xcode Instruments
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍：
- en: Introducing Xcode Instruments
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 Xcode Instruments
- en: Tracing iOS applications
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跟踪 iOS 应用程序
- en: Running and profiling an iOS project
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行和配置 iOS 项目
- en: Detecting virtual memory faults
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测虚拟内存故障
- en: Detecting memory leaks
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测内存泄漏
- en: Handling runtime errors
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理运行时错误
- en: Handling compile-time errors
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理编译时错误
- en: Adding and configuring Instruments
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加和配置 Instruments
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In this chapter, we will focus on how to effectively use the Xcode Instruments
    within our applications to track down areas within our iOS applications that could
    be affecting the overall performance.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将专注于如何在我们的应用程序中有效使用 Xcode Instruments 来追踪可能影响整体性能的 iOS 应用程序中的区域。
- en: These types of issues could potentially cause an application to run slowly,
    or even crash on the user's iOS device. We will take a look at each of the different
    types of built-in Instruments, which come as part of the Instruments applications.
    We will also see how we can use the System Trace Instrument to help track down
    system calls, memory use, and threads within your code that may be affecting the
    application's overall performance.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这些类型的问题可能会导致应用程序运行缓慢，甚至在使用者的 iOS 设备上崩溃。我们将查看不同类型的内置 Instruments，这些 Instruments
    是 Instruments 应用程序的一部分。我们还将了解如何使用系统跟踪 Instruments 来帮助追踪代码中的系统调用、内存使用和线程，这些可能影响应用程序的整体性能。
- en: Introducing Xcode Instruments
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Xcode Instruments
- en: In this recipe, we will learn how we can use Instruments to help gather important
    information about the performance of your application.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将学习如何使用 Instruments 帮助收集有关应用程序性能的重要信息。
- en: Getting ready
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we will learn how to launch the Instruments application.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何启动 Instruments 应用程序。
- en: How to do it...
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To begin, follow these simple steps as outlined below:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，请按照以下简单步骤操作：
- en: Launch Xcode from the `/Developer/Applications` folder.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `/Developer/Applications` 文件夹启动 Xcode。
- en: Choose **Instruments** from the **Xcode** menu, located under the **Open Developer
    Tool** submenu as shown in the following screenshot:![How to do it...](img/3349_04_01.jpg)
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **Xcode** 菜单中选择 **Instruments**，位于 **打开开发者工具** 子菜单下，如以下截图所示：![如何操作...](img/3349_04_01.jpg)
- en: Select the **Activity Monitor** option from the list of available templates.![How
    to do it...](img/3349_04_02.jpg)
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从可用模板中选择 **活动监视器** 选项。![如何操作...](img/3349_04_02.jpg)
- en: Click on the **Choose** button to proceed to the next step in the wizard.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **选择** 按钮以继续向导的下一步。
- en: Next, choose **All Processes** from the drop-down menu as highlighted by the
    rectangle in the following screenshot:![How to do it...](img/3349_04_03.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从下拉菜单中选择 **所有进程**，如以下截图中的矩形所示：![如何操作...](img/3349_04_03.jpg)
- en: Click on the **Record** button to begin profiling and monitoring system processes.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **记录** 按钮开始分析和监控系统进程。
- en: How it works...
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In this recipe, we learned how easy it is to launch the Instruments application
    to profile an application. We learned how to use the **Activity Monitor** option
    to show how we can use this Instrument to monitor the overall CPU, memory, disk,
    and network activity of the current computer system.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们学习了如何轻松启动 Instruments 应用程序来分析应用程序。我们学习了如何使用 **活动监视器** 选项来展示我们如何使用此工具来监控当前计算机系统的整体
    CPU、内存、磁盘和网络活动。
- en: There's more…
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: Through the use of the Instruments application, you can gather information based
    on a variety of different types of data and view these side by side at the same
    time. This enables you to spot trends, which would be hard to spot otherwise,
    and this can be used to see code running by your program along with the corresponding
    memory usage.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 Instruments 应用程序，您可以根据各种不同类型的数据收集信息，并同时在同一时间查看这些信息。这使得您能够发现其他情况下难以发现的趋势，并且这可以用来查看程序运行的代码以及相应的内存使用情况。
- en: 'The following table provides a brief description of each feature within the
    Instruments application:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格提供了 Instruments 应用程序中每个功能的简要描述：
- en: '| Instruments feature | Description |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| Instruments 功能 | 描述 |'
- en: '| --- | --- |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Instruments pane | This pane lists all of the Instruments, which have been
    added for those that you want to profile against.New Instruments can be added
    by selecting and then dragging each one from the Instruments library into this
    pane. Items within this pane can also be deleted. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| 仪器面板 | 此面板列出了所有已添加的仪器，供您针对要分析的项目使用。可以通过选择并从仪器库中将每个仪器拖动到该面板中添加新仪器。此面板中的项目也可以被删除。|'
- en: '| Track pane | This pane displays a graphical summary of the data returned
    by the current Instruments. Each Instrument has its own track that provides a
    chart of the data that is collected by that Instrument. The information within
    this pane is read-only. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| 跟踪面板 | 此面板显示当前仪器返回数据的图形摘要。每个仪器都有自己的跟踪，提供该仪器收集的数据图表。此面板中的信息为只读。|'
- en: '| Detail pane | This pane shows the details of the data that has been collected
    by each of the Instruments. It displays the set of events gathered and used to
    create the graphical view within the track pane. Depending on the type of Instrument,
    information that is represented by this pane can be customized to represent the
    data differently. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 详细面板 | 此面板显示每个仪器收集的数据的详细信息。它显示收集并用于在跟踪面板内创建图形视图的事件集。根据仪器的类型，此面板表示的信息可以自定义以不同方式表示数据。|'
- en: '| Extended detail pane | This pane displays detailed information about the
    item that is currently selected in the detail pane. This pane displays the complete
    stack trace, timestamp, and other Instrument-specific data gathered for the given
    event. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 扩展详细面板 | 此面板显示当前在详细面板中选中的项目的详细信息。此面板显示完整的堆栈跟踪、时间戳以及其他为给定事件收集的特定于仪器的数据。|'
- en: '| Navigation bar | This pane shows you where you currently are and the steps
    you took to get there. It includes two menus: the active Instrument menu and the
    detail view menu. You can click on the entries within the navigation bar to select
    the active Instrument, and the level and type of information in the detail view.
    |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 导航栏 | 此面板显示您当前的位置以及您到达那里的步骤。它包括两个菜单：活动仪器菜单和详细视图菜单。您可以通过点击导航栏中的条目来选择活动仪器，以及详细视图中的级别和信息类型。|'
- en: 'The Instruments trace document toolbar allows you to add and control Instruments,
    open view, and configure the track pane as shown in the following screenshot:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 仪器跟踪文档工具栏允许您添加和控制仪器、打开视图以及配置跟踪面板，如下面的截图所示：
- en: '![There''s more…](img/3349_04_04.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多…](img/3349_04_04.jpg)'
- en: 'The following table provides an explanation for each of the different controls
    on the toolbar:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格为工具栏上每个不同控制项的解释：
- en: '| Toolbar item | Description |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 工具栏项 | 描述 |'
- en: '| --- | --- |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Pause / Resume button | This button pauses the gathering of trace data while
    a recording is in progress. When the pause button has been pressed within the
    track pane, it will show a gap in the trace data to highlight this. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 暂停/继续按钮 | 此按钮在记录过程中暂停跟踪数据的收集。当在跟踪面板中按下暂停按钮时，它将在跟踪数据中显示一个间隙，以突出显示这一点。|'
- en: '| The **Record** / Stop button | This button starts or stops the recording
    process. You use this button to begin gathering trace data for your application.
    |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| **记录**/停止按钮 | 此按钮开始或停止记录过程。您使用此按钮开始收集应用程序的跟踪数据。|'
- en: '| Loop button | This button enables you to set whether the recorder should
    loop during playback to repeat the recorded steps continuously. This can be useful
    if you want to gather multiple runs for a given set of steps. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| 循环按钮 | 此按钮允许您设置记录器在播放时是否应该循环，以连续重复记录的步骤。如果您想收集给定步骤集的多次运行，这可能很有用。|'
- en: '| **Target** | This button selects the trace target for the document. This
    is the process for which data is gathered. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| **目标** | 此按钮用于选择文档的跟踪目标。这是数据收集的过程。|'
- en: '| **Inspection Range** | This enables you to select the time range in the track
    pane. When this has been set, the Instrument displays only the data collected
    within the specified time period. Using the buttons with this control enables
    you to set the start and end points of the inspection range, and to clear the
    current range. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| **检查范围** | 此功能允许您在跟踪面板中选择时间范围。当设置完成后，仪器将仅显示指定时间期间收集的数据。使用此控制项的按钮可以设置检查范围的起始和结束点，并清除当前范围。|'
- en: '| Time / Run control | Shows the time elapsed by the current document trace.
    If the trace document contains multiple data runs associated with it, you can
    use the arrow controls to choose which run data you want to display in the track
    pane. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| 时间 / 运行控制 | 显示当前文档跟踪所经过的时间。如果跟踪文档包含与它关联的多个数据运行，您可以使用箭头控件选择您想在跟踪面板中显示的运行数据。
    |'
- en: '| The **View** control | Hides or shows the **Instruments** pane, **Detail**
    pane, and **Extended** **View** pane. These controls make it easier to only focus
    on the area in which you are interested in. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| **视图** 控制器 | 隐藏或显示 **Instruments** 面板、**详细** 面板和 **扩展** **视图** 面板。这些控件使您更容易只关注您感兴趣的区域。
    |'
- en: '| **Library** | Hides or shows the Instruments library window. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| **库** | 隐藏或显示 Instruments 库窗口。 |'
- en: '| **Search** | This option filters information within the **Detail** pane,
    based on a search term that you enter. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| **搜索** | 此选项根据您输入的搜索词过滤 **详细** 面板中的信息。 |'
- en: The Instruments application is now located inside the Xcode bundle located within
    the `/Developer/Applications` folder and can be launched through the Xcode development
    IDE.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Instruments 应用程序现在位于 `/Developer/Applications` 文件夹内的 Xcode 包中，可以通过 Xcode 开发
    IDE 启动。
- en: Note
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'For more information about using Instruments application to debug your applications,
    you can refer to the Apple developer documentation located at:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 有关使用 Instruments 应用程序调试应用程序的更多信息，您可以参考位于以下位置的 Apple 开发者文档：
- en: '[https://developer.apple.com/library/ios/#documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/Introduction/Introduction.html](https://developer.apple.com/library/ios/#documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/Introduction/Introduction.html)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/library/ios/#documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/Introduction/Introduction.html](https://developer.apple.com/library/ios/#documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/Introduction/Introduction.html)'
- en: See also
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Tracing iOS applications* recipe
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*跟踪 iOS 应用程序* 菜谱'
- en: The *Running and profiling a project* recipe
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*运行和性能分析项目* 菜谱'
- en: The *Adding and customizing views* recipe in [Chapter 2](ch02.html "Chapter 2. User
    Interfaces – Creating the UI"), *User Interfaces – Creating the App UI*
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*添加和自定义视图* 菜谱在 [第 2 章](ch02.html "第 2 章。用户界面 – 创建 UI")，*用户界面 – 创建应用 UI*'
- en: Tracing iOS applications
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪 iOS 应用程序
- en: In this recipe, we will learn how to open a project that will be used for profiling
    its performance.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将学习如何打开一个用于性能分析的项目。
- en: Getting ready
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we will start by opening our **TwitterExample** application
    that we created in our previous chapter.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将首先打开我们在上一章中创建的 **TwitterExample** 应用程序。
- en: How to do it...
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To begin tracing an application, follow the following outlined simple steps:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始跟踪应用程序，请按照以下概述的简单步骤操作：
- en: Launch Xcode from the `/Developer/Applications` folder.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `/Developer/Applications` 文件夹启动 Xcode。
- en: Navigate to **File** | **Open**, or alternatively press *Command* + *O*.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **文件** | **打开**，或者按 *Command* + *O*。
- en: Next, select the `TwitterExample.xcodeproj` file from within the dialog.![How
    to do it...](img/3349_04_05.jpg)
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，从对话框中选择 `TwitterExample.xcodeproj` 文件。![如何操作...](img/3349_04_05.jpg)
- en: Click on the **Open** button to continue and load your project into the Xcode
    workspace environment.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **打开** 按钮继续，并将您的项目加载到 Xcode 工作区环境中。
- en: How it works...
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we selected our `TwitterExample` application that we created
    in our previous chapter, which will be used to profile its performance using the
    Instruments application.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们选择了我们在上一章中创建的 `TwitterExample` 应用程序，它将被用于使用 Instruments 应用程序来分析其性能。
- en: In our next recipe, we will look at how we can use the System Trace Instrument
    to profile our application, to track down system calls, memory, and thread calls
    that may be affecting the overall performance of your iOS application.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们接下来的菜谱中，我们将探讨如何使用系统跟踪工具来性能分析我们的应用程序，以追踪可能影响您 iOS 应用程序整体性能的系统调用、内存和线程调用。
- en: See also
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *How to run and profile an iOS project* recipe
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*如何在第 2 章* 中运行和性能分析 iOS 项目 *菜谱'
- en: The *How to detect VM faults* recipe
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*如何检测虚拟机故障* 菜谱'
- en: Running and profiling an iOS project
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行和性能分析 iOS 项目
- en: In this recipe, we will learn how to use the System Trace Instrument to monitor
    performance of your applications.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将学习如何使用系统跟踪工具来监控您应用程序的性能。
- en: Getting ready
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we will learn how to run the Instruments application from within
    the Xcode environment in order to profile our `TwitterExample` application.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何在Xcode环境中运行Instruments应用程序以分析我们的`TwitterExample`应用程序。
- en: How to do it...
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To begin profiling our **TwitterExample**, follow the following outlined steps:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始分析我们的**TwitterExample**，请按照以下步骤操作：
- en: Select the **TwitterExample** option from the **Project Navigator** window.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**项目导航器**窗口中选择**TwitterExample**选项。
- en: Navigate to **Product** | **Build For** | **Profiling**, from the **Product**
    menu, or alternatively use the keyboard shortcut *Shift* + *Command* + *I*.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**产品**菜单中选择**为** | **配置文件**，或者使用键盘快捷键*Shift* + *Command* + *I*。
- en: Next, choose **Profile** from the **Product** menu to launch the Instruments
    application. Similarly, you can use the keyboard shortcut *Command* + *I*.![How
    to do it...](img/3349_04_06.jpg)
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从**产品**菜单中选择**配置文件**以启动Instruments应用程序。同样，您也可以使用键盘快捷键*Command* + *I*。![如何操作...](img/3349_04_06.jpg)
- en: Once this option has been selected, you will eventually see the **Instruments**
    application window display on your screen. This is shown in the following screenshot:![How
    to do it...](img/3349_04_07.jpg)
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦选择了此选项，您最终将在屏幕上看到**Instruments**应用程序窗口。以下截图显示了这一过程：![如何操作...](img/3349_04_07.jpg)
- en: Next, choose the **System Trace** option from the list of available templates.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从可用模板列表中选择**系统跟踪**选项。
- en: Click on the **Profile** button to start profiling our `TwitterExample` application.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**配置文件**按钮以开始分析我们的`TwitterExample`应用程序。
- en: Your application will then be analyzed, and each system call and thread that
    has been made to memory will be profiled. These also include **Virtual Memory**
    (**VM**) operations.
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您的应用程序将被分析，并对所有已对内存进行的系统调用和线程进行分析。这些也包括**虚拟内存**（**VM**）操作。
- en: '![How to do it...](img/3349_04_08.jpg)'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/3349_04_08.jpg)'
- en: After a number of seconds have passed, your trace information will be displayed,
    and this will contain information relating to the thread and system calls, and
    their duration that your application is currently making. Other information, such
    as VM faults, is also recorded as shown in the following screenshot:![How to do
    it...](img/3349_04_09.jpg)
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 经过几秒钟后，您的跟踪信息将显示出来，这将包含有关线程和系统调用及其持续时间的详细信息。其他信息，如VM故障，也如以下截图所示记录：![如何操作...](img/3349_04_09.jpg)
- en: You can choose to stop the application from profiling by clicking on the **Record**
    button, since the Instruments application has already done its full analysis.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择通过点击**记录**按钮停止应用程序的分析，因为Instruments应用程序已经完成了全面的分析。
- en: How it works...
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In this recipe, we learned how to run the Instruments application directly from
    within the Xcode development environment. We then saw how we can use the System
    Trace Instrument to profile our application that enables us to monitor system
    calls, threads, as well as virtual memory faults encountered by the Instruments
    application.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们学习了如何在Xcode开发环境中直接运行Instruments应用程序。然后我们看到了如何使用系统跟踪工具来分析我们的应用程序，这使我们能够监控Instruments应用程序遇到的系统调用、线程以及虚拟内存故障。
- en: There's more…
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Along with the System Trace Instrument, the Instruments application contains
    additional templates that you can use to profile your application against. The
    following table gives an overview of each of the templates that are available
    for iOS development:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 除了系统跟踪工具外，Instruments应用程序还包含其他模板，您可以使用这些模板来分析您的应用程序。以下表格概述了iOS开发中可用的每个模板：
- en: '| Template | Description |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 模板 | 描述 |'
- en: '| --- | --- |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `Blank` | Creates an empty trace document to which you can add your own combinations
    of Instruments. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| `空白` | 创建一个空白的跟踪文档，您可以添加自己的Instruments组合。|'
- en: '| `Time Profiler` | Performs low-overhead and time-based sampling of one or
    all processes. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| `时间分析器` | 对一个或所有进程进行低开销和时间采样。|'
- en: '| `System Trace` | Provides you with the ability to profile against different
    aspects of the operating system that could be affecting application''s performance.
    |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| `系统跟踪` | 提供您对可能影响应用程序性能的操作系统不同方面的分析能力。|'
- en: '| `Activity Monitor` | This monitors overall CPU, memory, disk, and network
    activity. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| `活动监视器` | 监控整体CPU、内存、磁盘和网络活动。|'
- en: '| `Automation` | Automates user interface tests within your application. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| `自动化` | 在您的应用程序内自动执行用户界面测试。|'
- en: '| `Energy Diagnostics` | Displays diagnostics information regarding the amount
    of energy being used on the device for GPU activity, display brightness, sleep/wake,
    Bluetooth, Wi-Fi, and GPS. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| `能源诊断` | 显示有关设备上用于GPU活动、显示亮度、睡眠/唤醒、蓝牙、Wi-Fi和GPS的能耗的诊断信息。|'
- en: '| `Network Connections` | With this Instrument, it''s possible to see how much
    data is flowing over each connection, for each application, as well as interesting
    statistics, such as round trip times and retransmission requests. You can use
    this information to help reduce network traffic and energy consumption. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| `网络连接` | 使用此工具，可以查看每个应用程序的每个连接上的数据流量，以及一些有趣的统计数据，如往返时间和重传请求。您可以使用这些信息帮助减少网络流量和能耗。|'
- en: '| `Allocations` | Monitors memory and object-allocation patterns within your
    program. |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| `分配` | 监控程序中的内存和对象分配模式。|'
- en: '| `Leaks` | Detects memory leaks within your application. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| `泄漏` | 检测应用程序中的内存泄漏。|'
- en: '| `Threads` | Analyzes thread state transitions within a process, including
    running and terminated threads, thread state, and associated back traces. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| `线程` | 分析进程内线程状态转换，包括运行和终止的线程、线程状态以及相关的回溯信息。|'
- en: '| `File Activity` | Monitors an application''s interaction with the filesystem.
    |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| `文件活动` | 监控应用程序与文件系统的交互。|'
- en: See also
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Running and profiling an iOS project* recipe
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行和配置iOS项目**食谱'
- en: The *Detecting Virtual Memory faults* recipe
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**检测虚拟内存故障**食谱'
- en: Detecting virtual memory faults
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测虚拟内存故障
- en: In this recipe, we will learn how to use the Activity Monitor Instrument to
    monitor performance of your operating system and computer's hard drive.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将学习如何使用活动监视器工具来监控操作系统和计算机硬盘的性能。
- en: Getting ready
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we will learn how to use the Instruments to check the virtual
    memory to see if thrashing (excessive paging) is occurring or if the VM size is
    growing excessively, indicating over-retained auto released objects.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何使用Instruments检查虚拟内存，以查看是否发生颠簸（过度分页）或虚拟内存大小过度增长，这表明过度保留的自动释放对象。
- en: How to do it...
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To begin, follow the following outlined simple steps:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，按照以下概述的简单步骤操作：
- en: Select the **TwitterExample** option from the **Project Navigator** window.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**项目导航器**窗口中选择**TwitterExample**选项。
- en: Navigate to **Product** | **Build For** | **Profiling**, from the **Product**
    menu, or alternatively using the keyboard shortcut *Shift* + *Command* + *I*.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过**产品** | **构建为** | **配置**从**产品**菜单导航，或者使用键盘快捷键*Shift* + *Command* + *I*。
- en: Next, choose **Profile** from the **Product** menu to launch the Instruments
    application. Similarly, you can use the keyboard shortcut *Command* + *I*.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从**产品**菜单中选择**配置**，以启动Instruments应用程序。同样，您也可以使用键盘快捷键*Command* + *I*。
- en: Next, choose the **Activity Monitor** optionfrom the list of available templates.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从可用模板列表中选择**活动监视器**选项。
- en: Click on the **Profile** button to start profiling our **TwitterExample** application.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**配置文件**按钮开始分析我们的**TwitterExample**应用程序。
- en: 'After a number of seconds have passed, your trace information will be displayed,
    and this will contain information relating to the overall CPU, memory, disk, and
    network activity used by your application as shown in the following screenshot:'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 经过几秒钟后，您的跟踪信息将显示出来，这将包含有关应用程序使用的整体CPU、内存、磁盘和网络活动信息，如下面的截图所示：
- en: '![How to do it...](img/3349_04_10.jpg)'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/3349_04_10.jpg)'
- en: You can choose to stop the application from profiling by clicking on the **Stop**
    button, since the Instruments application has already done its full analysis.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过点击**停止**按钮停止应用程序的分析，因为Instruments应用程序已经完成了全面的分析。
- en: How it works...
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we learned how to use the Activity Monitor Instruments component
    which enables us to check the virtual memory of the OS that can potentially cause
    the computer system to perform sluggishly. The previous screenshot displays information
    relating to the overall load which the system is currently undergoing, as well
    as the user applications performance and the total virtual memory that is currently
    being allocated to cache these operations.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们学习了如何使用活动监视器组件，该组件使我们能够检查可能导致计算机系统性能缓慢的操作系统虚拟内存。上一张截图显示了系统当前正在承受的整体负载信息，以及用户应用程序的性能和当前分配给缓存这些操作的总体虚拟内存。
- en: See also
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Running and profiling an iOS project* recipe
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*运行和配置iOS项目*的食谱'
- en: Detecting memory leaks
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测内存泄漏
- en: In this recipe, we will learn how to use the Leaks Instrument to check for memory
    leaks within an iOS application.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将学习如何使用Leak工具检查iOS应用程序中的内存泄漏。
- en: Getting ready
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we will learn how we can quickly determine when a memory leak
    occurs within our application.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何快速确定在我们的应用程序中何时发生内存泄漏。
- en: How to do it...
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To begin with creating a new Xcode project, follow these simple steps as outlined
    below:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始创建一个新的Xcode项目，请按照以下简单步骤进行：
- en: Launch Xcode from the `/Developer/Applications` folder.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`/Developer/Applications`文件夹中启动Xcode。
- en: Choose **Create a new Xcode project**, or navigate to **File** | **New Project**.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**创建一个新的Xcode项目**，或者导航到**文件** | **新建项目**。
- en: Select the **Single View Application** option from the list of available templates.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从可用模板列表中选择**单视图应用程序**选项。
- en: Click on the **Next** button to proceed to the next step in the wizard.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**按钮以继续向导的下一步。
- en: Next, enter in `MemoryLeaks` as the name for your project.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，输入`MemoryLeaks`作为你的项目名称。
- en: Select **iPhone** from under the **Devices** dropdown.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**设备**下拉菜单中选择**iPhone**。
- en: Ensure the **Use Storyboards** checkbox has not been ticked.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保未勾选**使用故事板**复选框。
- en: Ensure the **Use Automatic Reference Counting** checkbox has not been ticked.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保未勾选**使用自动引用计数**复选框。
- en: Ensure the **Include Unit Tests** checkbox has not been ticked.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保未勾选**包含单元测试**复选框。
- en: Click on the **Next** button to proceed to the next step in the wizard.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**按钮以继续向导的下一步。
- en: Specify where you would like to save your project, and click on the **Create**
    button to save your project at the location specified.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定你想要保存项目的地方，然后点击**创建**按钮以在指定位置保存项目。
- en: Our next step is to create the code functionality that will be responsible for
    allocating our string objects.
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们下一步是创建负责分配我们的字符串对象的代码功能。
- en: Open the `ViewController.m` file implementation file from the **Project Navigator**
    window.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**项目导航器**窗口中打开`ViewController.m`文件实现文件。
- en: 'Modify the `viewDidLoad` method as shown by the highlighted code sections in
    the following code snippet:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`viewDidLoad`方法，如下面的代码片段中突出显示的代码部分所示：
- en: '[PRE0]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Our next step is to start profiling our project that will help us check for
    memory leaks.
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们下一步是开始分析我们的项目，这将帮助我们检查内存泄漏。
- en: Navigate to **Product** | **Build For** | **Profiling**, from the **Product**
    menu, or alternatively using the keyboard shortcut *Shift* + *Command* + *I*.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**产品**菜单中选择**产品** | **为...构建** | **分析**，或者使用键盘快捷键*Shift* + *Command* + *I*。
- en: Then, choose **Profile** from the **Product** menu to launch the Instruments
    application. Similarly, you can use the keyboard shortcut *Command* + *I*.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，从**产品**菜单中选择**分析**以启动Instruments应用程序。同样，你也可以使用键盘快捷键*Command* + *I*。
- en: Next, choose the **Leaks** option from the list of available templates under
    the **Memory** section header.![How to do it...](img/3349_04_11.jpg)
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从**内存**部分标题下的可用模板列表中选择**Leak**选项。![如何操作...](img/3349_04_11.jpg)
- en: Click on the **Profile** button to start profiling our `MemoryLeaks` application.![How
    to do it...](img/3349_04_12.jpg)
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**分析**按钮以开始分析我们的`MemoryLeaks`应用程序。![如何操作...](img/3349_04_12.jpg)
- en: You can choose to stop the application from profiling by clicking on the **Stop**
    button, since the Instruments application has already done its full analysis.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以选择通过点击**停止**按钮停止应用程序的分析，因为Instruments应用程序已经完成了全面的分析。
- en: How it works...
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In this recipe, we created an application that included a piece of code that
    allocated 5000 strings inside a loop to demonstrate ways in which memory leaks
    can happen. The code allocates memory for each new string called `Status` each
    time it goes through the loop, and lets the pointer of each string that gets allocated
    go out of scope and never be released.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们创建了一个包含在循环中分配5000个字符串的代码片段的应用程序，以演示内存泄漏可能发生的方式。代码为每次通过循环时新创建的每个字符串`Status`分配内存，并让每个分配的字符串的指针超出作用域，永远不会被释放。
- en: You will notice that the memory that gets allocated never gets released, which
    is caused by the tight `for` loop starving the execution of `run` loop, causing
    your application to run slowly, potentially causing it to crash or simply hang.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到分配的内存从未被释放，这是由于紧密的`for`循环耗尽了`run`循环的执行，导致你的应用程序运行缓慢，可能引发崩溃或简单地挂起。
- en: The screenshot displays information relating to the memory currently allocated,
    as well as the user applications performance and the total virtual memory that
    is currently being allocated.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 截图显示了有关当前分配的内存的信息，以及用户应用程序的性能和当前正在分配的总虚拟内存。
- en: See also
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Running and profiling an IOS project* recipe
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*运行和配置IOS项目* 的食谱'
- en: The *Building the user interface for our application* recipe in [Chapter 1](ch01.html
    "Chapter 1. Getting and Installing the iOS SDK Development Tools"), *Getting and
    Installing the iOS SDK Development Tools*
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [第1章](ch01.html "第1章。获取和安装iOS SDK开发工具") 的 *构建我们应用程序的用户界面* 食谱中，*获取和安装iOS SDK开发工具*
- en: Handling runtime errors
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理运行时错误
- en: In this recipe, we will learn how to handle runtime errors within an iOS application.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们将学习如何在 iOS 应用程序中处理运行时错误。
- en: Getting ready
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we will learn how we can handle runtime errors and learn how
    we can improve error handling using the `@try…@catch…@finally` clauses to prevent
    our application from crashing.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习我们如何处理运行时错误，以及我们如何使用 `@try…@catch…@finally` 子句来改进错误处理，以防止我们的应用程序崩溃。
- en: How to do it...
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做这件事...
- en: 'To begin, follow the following simple steps as outlined:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，请按照以下简单步骤操作：
- en: Open the `MemoryLeaks.xcodeproj` project file.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `MemoryLeaks.xcodeproj` 项目文件。
- en: Open the `ViewController.m` implementation file from the **Project Navigator**
    window.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **项目导航器** 窗口中打开 `ViewController.m` 实现文件。
- en: 'Modify the `viewDidLoad` method as shown by the highlighted code sections in
    the following code snippet:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改 `viewDidLoad` 方法，如下面的代码片段中突出显示的代码部分所示：
- en: '[PRE1]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, create the `causeRuntimeError` method as shown in the following code
    snippet:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，创建 `causeRuntimeError` 方法，如下面的代码片段所示：
- en: '[PRE2]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Then, build and run the application by navigating to **Product** | **Run** from
    the **Product** menu, or alternatively pressing *Command* + *R*.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，通过导航到 **产品** | **运行** 从 **产品** 菜单，或按 *Command* + *R* 键来构建和运行应用程序。
- en: 'You will notice that once the program executes, an exception is raised and
    the code execution stops. The following screenshot shows the exception error details
    within the Xcode IDE:'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你会注意到一旦程序执行，就会抛出异常，代码执行停止。以下截图显示了 Xcode IDE 中的异常错误详细信息：
- en: '![How to do it...](img/3349_04_13.jpg)'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何做这件事...](img/3349_04_13.jpg)'
- en: How it works...
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we created a new method `causeRuntimeError` that allocated an
    array to hold the maximum capacity of 30 items. We then cycled through the loop
    and added the integer values from 0 to 29 into this array. Once, all items have
    been added, the loop exits and we then attempt to remove an item at the 31st position
    within the array.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们创建了一个新的方法 `causeRuntimeError`，它分配了一个数组以容纳最大容量为 30 项。然后我们遍历循环，并将从 0
    到 29 的整数值添加到这个数组中。一旦所有项目都已添加，循环退出，然后我们尝试从数组中移除第 31 个位置的项。
- en: Since we don't have an object stored at the 31st position within our array,
    this results in the code execution halting, causing the exception error information
    display as shown in the previous screenshot.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在数组中未存储第31个对象，这导致代码执行停止，如前一个截图所示，异常错误信息显示。
- en: Note
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'If you would like to find out more information on the `NSMutableArray` class,
    you can refer to the Apple developer documentation located at the following link:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要了解更多关于 `NSMutableArray` 类的信息，你可以参考以下链接中的 Apple 开发者文档：
- en: '[https://developer.apple.com/library/ios/#documentation/Cocoa/Reference/Foundation/Classes/NSmutableArray_Class/Reference/Reference.html](https://developer.apple.com/library/ios/#documentation/Cocoa/Reference/Foundation/Classes/NSmutableArray_Class/Reference/Reference.html)'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/library/ios/#documentation/Cocoa/Reference/Foundation/Classes/NSmutableArray_Class/Reference/Reference.html](https://developer.apple.com/library/ios/#documentation/Cocoa/Reference/Foundation/Classes/NSmutableArray_Class/Reference/Reference.html)'
- en: There's more...
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: Objective-C provides you with a fail-safe method that can help you handle exception
    errors that can prevent your application from falling over. Keep in mind, this
    will still cause an error, but the exception error would have been handled by
    your application, preventing your app from crashing, and allowing your code to
    continue executing.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: Objective-C 提供了一个安全的方法，可以帮助你处理可能防止你的应用程序崩溃的异常错误。请记住，这仍然会导致错误，但异常错误将被你的应用程序处理，防止你的应用程序崩溃，并允许你的代码继续执行。
- en: An exception is a special condition that interrupts the normal flow of program
    execution. There are a variety of reasons why an exception may be generated (exceptions
    are typically said to be raised or thrown), by hardware as well as software.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 异常是中断程序正常执行流程的特殊条件。异常可能由硬件和软件的多种原因生成（通常说异常是被引发或抛出的）。
- en: Examples include arithmetical errors such as division by zero, calling undefined
    instructions (such as attempting to invoke an unimplemented method), and attempting
    to access a collection element out of bounds.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 示例包括算术错误，如除以零、调用未定义的指令（如尝试调用未实现的方法）以及尝试访问超出范围的集合元素。
- en: 'Objective-C exception support involves four compiler directives: `@try`, `@catch`,
    `@throw`, and `@finally`, which are explained in the following table:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: Objective-C异常支持涉及四个编译器指令：`@try`、`@catch`、`@throw`和`@finally`，这些将在下表中解释：
- en: '| Objective-C exception handler | Description |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| Objective-C异常处理器 | 描述 |'
- en: '| --- | --- |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `@catch` | This code block contains exception-handling logic for exceptions
    thrown in a `@try {}` block. You can have multiple `@catch {}` blocks to catch
    different types of exception. |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| `@catch` | 这个代码块包含在`@try {}`块中抛出的异常的处理逻辑。你可以有多个`@catch {}`块来捕获不同类型的异常。|'
- en: '| `@throw` | This compiler directive allows you to throw an exception, which
    is essentially an Objective-C object. You typically use an `NSException` object,
    but you are not required to use it. |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| `@throw` | 这个编译器指令允许你抛出一个异常，本质上是一个Objective-C对象。你通常使用`NSException`对象，但不是必须使用它。|'
- en: '| `@finally` | This code block must be executed whether or not an exception
    is thrown and is done after the catch statement finishes. |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| `@finally` | 无论是否抛出异常，此代码块都必须执行，并在捕获语句完成后执行。|'
- en: 'Let''s take a look at how we can modify our `causeRuntimeError` method to take
    advantage of these compiler directives, and prevent our code from crashing:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何修改我们的`causeRuntimeError`方法以利用这些编译器指令，并防止我们的代码崩溃：
- en: 'Modify the `causeRuntimeError` method as shown by the highlighted code sections
    in the following code snippet:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`causeRuntimeError`方法，如下面的代码片段中突出显示的代码部分所示：
- en: '[PRE3]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Next, build and run the application by navigating to **Product** | **Run** from
    the **Product** menu, or alternatively pressing *Command* + *R*.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，通过导航到**产品** | **运行**从**产品**菜单，或者按*Command* + *R*来构建和运行应用程序。
- en: You will notice that once the program executes, the exception is raised and
    caught by the `@catch` code block, and the exception error message is logged to
    the console window, and the code execution continues normally.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到一旦程序执行，异常就会被`@catch`代码块捕获，并将异常错误信息记录到控制台窗口，然后代码执行继续正常。
- en: Note
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'If you would like to find out more information on Objective-C exception handling,
    you can refer to the Apple developer documentation located at the following link:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于Objective-C异常处理的信息，可以参考以下链接的Apple开发者文档：
- en: '[https://developer.apple.com/library/ios/#documentation/cocoa/conceptual/objectivec/Chapters/ocExceptionHandling.html](https://developer.apple.com/library/ios/#documentation/cocoa/conceptual/objectivec/Chapters/ocExceptionHandling.html)'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/library/ios/#documentation/cocoa/conceptual/objectivec/Chapters/ocExceptionHandling.html](https://developer.apple.com/library/ios/#documentation/cocoa/conceptual/objectivec/Chapters/ocExceptionHandling.html)'
- en: See also
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Running and profiling an iOS project* recipe
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*运行和性能分析iOS项目*配方'
- en: The *Building the user interface for our application* recipe in [Chapter 1](ch01.html
    "Chapter 1. Getting and Installing the iOS SDK Development Tools"), *Getting and
    Installing the iOS SDK Development Tools*
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为我们的应用程序构建用户界面](ch01.html "第一章：获取和安装iOS SDK开发工具")中的*构建用户界面*配方，*获取和安装iOS SDK开发工具*'
- en: Handling compile-time errors
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理编译时错误
- en: In this recipe, we will learn how to handle compile-time errors within an iOS
    application.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将学习如何在iOS应用程序中处理编译时错误。
- en: Getting ready
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we will learn about compile-time errors and how these can be
    corrected.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将了解编译时错误以及如何纠正这些错误。
- en: How to do it...
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To begin, follow these simple steps as outlined:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，按照以下简单步骤操作：
- en: Open the `MemoryLeaks.xcodeproj` project file.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`MemoryLeaks.xcodeproj`项目文件。
- en: Open the `ViewController.m` implementation file from the **Project Navigator**
    window.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**项目导航器**窗口打开`ViewController.m`实现文件。
- en: 'Modify the `viewDidLoad` method as shown by the highlighted code sections in
    the following code snippet:'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按照以下代码片段中高亮显示的代码部分修改`viewDidLoad`方法：
- en: '[PRE4]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next, create the `causeCompileTimeError` method as shown in the following code
    snippet below:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，创建`causeCompileTimeError`方法，如下面的代码片段所示：
- en: '[PRE5]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You will notice that the compiler notifies you that the nonexistent method could
    not be found. The screenshot below shows the compiler error details within the
    Xcode IDE.
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你会注意到编译器通知你找不到不存在的方法。下面的截图显示了Xcode IDE中的编译器错误详情。
- en: '![How to do it...](img/3349_04_14.jpg)'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何做...](img/3349_04_14.jpg)'
- en: How it works...
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we created a new method `causeCompiletimeError` that sets the
    background color of the view to blue. We use the `UIColor` class to set and specify
    the color that we would like the background color of our view to take on.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，我们创建了一个新的方法`causeCompiletimeError`，将视图的背景色设置为蓝色。我们使用`UIColor`类来设置和指定我们希望视图背景色采用的颜色。
- en: We received a compiler warning letting us know of the non-existent method that
    we used. These types of errors are most obvious and generally these come from
    typographical errors, but can be fixed easily using code auto-completion within
    Xcode.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 我们收到了一个编译器警告，告知我们使用了不存在的方法。这类错误最明显，通常这些错误来自打字错误，但可以使用Xcode中的代码自动完成轻松修复。
- en: 'The Objective-C compiler is case sensitive, which means that `UIcolor` and
    `UIColor` are treated differently. For example, in Objective-C, the compiler can
    understand the following line of code:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: Objective-C编译器是区分大小写的，这意味着`UIcolor`和`UIColor`被处理为不同的。例如，在Objective-C中，编译器可以理解以下代码行：
- en: '[PRE6]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'But, if you type in the following as we did in our method definition, the compiler
    warns you about a potential (but not definite) problem, because you''ve specified
    a language-specific syntax that it can''t recognize and therefore is not associated
    with the `UIColor` class:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果你像我们在方法定义中做的那样输入以下内容，编译器会警告你一个潜在的（但不是确定的）问题，因为你指定了一个它无法识别的语言特定语法，因此没有与`UIColor`类关联：
- en: '[PRE7]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'If you would like to find out more information on the `UIColor` class, you
    can refer to the Apple developer documentation located at the following link:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要了解更多关于`UIColor`类的信息，你可以参考以下链接中的Apple开发者文档：
- en: '[https://developer.apple.com/library/ios/#documentation/uikit/reference/UIColor_Class/Reference/Reference.html](https://developer.apple.com/library/ios/#documentation/uikit/reference/UIColor_Class/Reference/Reference.html)'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.apple.com/library/ios/#documentation/uikit/reference/UIColor_Class/Reference/Reference.html](https://developer.apple.com/library/ios/#documentation/uikit/reference/UIColor_Class/Reference/Reference.html)'
- en: See also
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: The *Running and profiling an iOS project* recipe
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*运行和剖析iOS项目*的配方'
- en: The *Building the user interface for our application* recipe in [Chapter 1](ch01.html
    "Chapter 1. Getting and Installing the iOS SDK Development Tools"), *Getting and
    Installing the iOS SDK Development Tools*
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](ch01.html "第1章. 获取和安装iOS SDK开发工具")中“为我们的应用程序构建用户界面”的配方，*获取和安装iOS SDK开发工具*'
- en: The *Adding and customizing views* recipe in [Chapter 2](ch02.html "Chapter 2. User
    Interfaces – Creating the UI"), *User Interfaces – Creating the UI*
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章. 用户界面 – 创建UI")中“添加和自定义视图”的配方，*用户界面 – 创建UI*'
- en: Adding and configuring Instruments
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加和配置Instruments
- en: The Instruments application comes with a wide range of built-in Instruments
    to make your job easier, by using them to gather data from one or more processes.
    Most of these Instruments require little configuration to use, and are simply
    added to your trace document to start gathering trace data. In this recipe, we
    will look at how we can add and configure Instruments into an existing trace document.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: Instruments应用程序包含一系列内置的Instruments，可以帮助你更轻松地工作，通过它们从一个或多个进程中收集数据。大多数这些Instruments使用时配置很少，只需将它们添加到你的跟踪文档中即可开始收集跟踪数据。在本配方中，我们将探讨如何将Instruments添加和配置到现有的跟踪文档中。
- en: Getting ready
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we will learn how to add and configure Instruments.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何添加和配置Instruments。
- en: How to do it...
  id: totrans-237
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To learn how to add and configure Instruments, follow the following steps outlined:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解如何添加和配置Instruments，请按照以下步骤操作：
- en: Open the `MemoryLeaks.xcodeproj` project file.
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`MemoryLeaks.xcodeproj`项目文件。
- en: Open the `ViewController.m` implementation file from the **Project Navigator**
    window.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**项目导航器**窗口打开`ViewController.m`实现文件。
- en: 'Modify the `viewDidLoad` method as shown in the following code snippet:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下代码片段修改`viewDidLoad`方法：
- en: '[PRE8]'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Navigate to **Product** | **Build For** | **Profiling**, from the **Product**
    menu, or alternatively use the keyboard shortcut *Shift* + *Command* + *I*.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**产品**菜单导航到**产品** | **构建为** | **分析**，或者使用键盘快捷键*Shift* + *Command* + *I*。
- en: Then, choose **Profile** from the **Product** menu to launch the Instruments
    application. Similarly, you can use the keyboard shortcut *Command* + *I*.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，从**产品**菜单中选择**分析**以启动仪器应用程序。同样，您可以使用键盘快捷键*Command* + *I*。
- en: Next, choose the **Blank** optionfrom the list of available templates under
    the **Memory** section header.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从**内存**部分下的可用模板列表中选择**空白**选项。
- en: Finally, click on the **Profile** button to begin profiling.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击**分析**按钮开始分析。
- en: The Instruments **Library** list displays all of the Instruments that you can
    use and add to your trace document. The library contains all of the built-in Instruments
    that come with the installation of Xcode 4, as well as any custom Instruments
    that you have already created.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: Instruments **库**列表显示您可以使用并添加到跟踪文档的所有仪器。库包含与Xcode 4安装一起提供的所有内置仪器，以及您已经创建的任何自定义仪器。
- en: 'To open the **Instruments** window, follow the following simple steps:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 要打开**仪器**窗口，请按照以下简单步骤操作：
- en: Click on the **Library** button from within your trace document window, or navigate
    to **Window** | **Library** from the menu bar. Alternatively, you can use the
    *Command* + *L* keyboard shortcut.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在跟踪文档窗口中点击**库**按钮，或者从菜单栏导航到**窗口** | **库**。或者，您可以使用*Command* + *L*键盘快捷键。
- en: Next, choose the **Memory** option from within the drop-down list as shown in
    the following screenshot:![How to do it...](img/3349_04_15.jpg)
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从下拉列表中选择**内存**选项，如图下截图所示：![如何操作...](img/3349_04_15.jpg)
- en: To add an Instrument, select the Instrument from the Instruments Library list,
    and then drag it either to the **Instruments** pane, or directly onto the **Track**
    pane of your trace document, as shown in the following screenshot:![How to do
    it...](img/3349_04_16.jpg)
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要添加仪器，从仪器库列表中选择仪器，然后将其拖动到**仪器**窗格，或者直接拖动到跟踪文档的**跟踪**窗格，如图下截图所示：![如何操作...](img/3349_04_16.jpg)
- en: Then, click on the **Record** button to start profiling the **MemoryLeaks**
    application.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击**记录**按钮开始分析**内存泄漏**应用程序。
- en: To configure an Instrument, select the Instrument from the **Instruments** pane
    and click on the Instruments inspector icon, which is located to the right of
    the Instrument as shown in the following screenshot:![How to do it...](img/3349_04_17.jpg)
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要配置仪器，从**仪器**窗格中选择仪器，然后点击位于仪器右侧的仪器检查器图标，如图下截图所示：![如何操作...](img/3349_04_17.jpg)
- en: To dismiss the Inspector, click on the close button highlighted by an **X**.
    You can similarly use the *Command* + *I* keys or navigate to **File** | **Get
    Info** to open and close this window.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要关闭检查员，点击由**X**标记的高亮关闭按钮。您同样可以使用*Command* + *I*键或导航到**文件** | **获取信息**来打开和关闭此窗口。
- en: How it works...
  id: totrans-255
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In this recipe, we learned how easy it is to add and configure Instruments within
    a trace document using the Instruments inspector. The options listed vary based
    on the type of Instrument that is being configured. Most Instruments contain options
    for configuring the contents of the track pane, while only a small handful contain
    additional functionality for determining what type of information is gathered
    by the Instrument.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在本菜谱中，我们学习了如何在跟踪文档中使用仪器检查器轻松添加和配置仪器。列出的选项根据正在配置的仪器类型而有所不同。大多数仪器包含配置跟踪窗格内容的选项，而只有少数仪器包含确定仪器收集的信息类型的附加功能。
- en: Depending on the type of Instrument that is being configured, they can be configured
    before, during, or after the data within your trace document has been recorded.
    The **Zoom** control can be found in most of the Inspector controls for those
    Instruments, which you configure. This feature controls the magnification of the
    trace data that is displayed within the **Track** pane, and adjusts the height
    of the Instrument within the **Track** pane.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 根据正在配置的仪器类型，它们可以在跟踪文档中的数据记录之前、期间或之后进行配置。**缩放**控件可以在您配置的大多数仪器检查器控件中找到。此功能控制显示在**跟踪**窗格中的跟踪数据的放大倍数，并调整仪器在**跟踪**窗格中的高度。
- en: See also
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Running and profiling an iOS project* recipe
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*运行和分析iOS项目*菜谱'
