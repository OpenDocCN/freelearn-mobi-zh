["```swift\nclass ClassRoom: NSObject{ \n    var roomNum: String \n\n    init(roomNum: String){ \n        self.roomNum = roomNum \n    } \n} \n\nlet classRoom = ClassRoom(roomNum: \"1-D1\") \nclassRoom.perform(#selector(setter: ClassRoom.roomNum), with: \"2-D3\")\n```", "```swift\nclass Employee: NSObject{ \n    var firstName: String \n    var lastName: String \n    var boss: Employee? \n\n    init(firstName: String, lastName: String, boss: Employee? = nil){ \n        self.firstName = firstName \n        self.lastName = lastName \n        self.boss = boss \n    } \n} \n\nlet bossMan = Employee(firstName: \"Jack\", lastName: \"Spark\") \nlet rocko = Employee(firstName: \"Rocky\", lastName: \"Jones\", boss: bossMan) \n\n```", "```swift\nrocko.value(forKeyPath: \"Employee.boss.firstName\") \n\n```", "```swift\n#keyPath(Employee.boss) // => boss \nrocko.value(forKeyPath: #keyPath(Employee.boss.firstName)) // => Jack \n\n```", "```swift\ntypedef NSString * MPPlatformIdentifier NS_EXTENSIBLE_STRING_ENUM; \nMPPlatformIdentifier const MPPlatformIdentifierIOS; \nMPPlatformIdentifier const MPPlatformIdentifierMacOS; \n\n```", "```swift\nstruct MPPlatformIdentifier : RawRepresentable { \n    typealias RawValue = String \n\n    init(rawValue: RawValue) \n    var rawValue: RawValue { get } \n\n    static var IOS: MPPlatformIdentifier { get } \n    static var macOS: MPPlatformIdentifier { get } \n} \n\n```", "```swift\ntypedef NSString * MPVersionEnum NS_STRING_ENUM; \nMPVersionEnum const MPVersionEnumV1; \nMPVersionEnum const MPVersionEnumV2; \nMPVersionEnum const MPVersionEnumV3; \n\n```", "```swift\nenum MPVersionEnum: String{ \n     case V1 \n     case V2 \n     case V3 \n} \n\n```", "```swift\n@property NSArray<MyClass *> * myClasses; \n@property NSDictionary<NSString *, MyClass *> * myClassDictionary; \n@property NSSet<MyClass *> *mySet; \n@property MyCollection<MyClass *> *myCollection; \n\n@interface MyCollection<__covariant ObjectType> : NSObject \n -(void) addItem:(ObjectType)item; \n@end\n```", "```swift\nvar myClasses: [MyClass] \nvar myClassDictionary:  [String : MyClass] \nvar mySet: Set<MyClass> \nvar myCollection: MyCollectionMyCollection Classfunc addItem(item: AnyObject!)\n```", "```swift\nvar myClasses: [MyClass] \nvar myClassDictionary:  [String : MyClass] \nvar mySet: Set<MyClass> \nvar myCollection: MyCollection<MyClass>  \nMyCollection Class \nfunc addItem(_ item: MyClass)\n```", "```swift\nMyPlatform* MyPlatformWithIdentifier(MPPlatformIdentifier identifier) CF_SWIFT_NAME(MyPlatform.init(identifier:)); \n\n```", "```swift\nextension MyPlatform { init(identifier: MPPlatformIdentifier) }\n```", "```swift\n//getter \nMPPlatformIdentifier MyPlatformGetIdentifier(MyPlatform *platform) CF_SWIFT_NAME(getter:MyPlatform.platformId(self:)); \n\n//setter \nVoid MyPlatformSetIdentifier(MyPlatform *platform, MPPlatformIdentifier identifier) CF_SWIFT_NAME(setter:MyPlatform.platformId(self:newValue:)); \n\n```", "```swift\nextension MyPlatform {  \nvar platformId: MPPlatformIdentifier { get set } \n} \n\n```", "```swift\n\nMPPlatformIdentifier MyPlatformRetreiveId(MyPlatform *platform, MPPlatformIdentifier identifier) CF_SWIFT_NAME(MyPlatform.retreiveId(self:identifier:)); \n\n```", "```swift\nextension MyPlatform { \n   func retreiveId(identifier: MPPlatformIdentifier) -> MPPlatformIdentifier \n}\n```", "```swift\nextern const MPPlatformIdentifier *MyPlatformTVOS CF_SWIFT_NAME(MyPlatform.tvOS); \n\n```", "```swift\nextension MyPlatform { static var tvOS: MPPlatformIdentifier } \n\n```"]