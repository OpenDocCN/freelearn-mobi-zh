["```swift\nnamespace MyFirstiPhoneProject{\npublic partial class MyFirstiPhoneProjectViewController : UIViewController{\npublic MyFirstiPhoneProjectViewController (string nibName, NSBundle bundle) : base (nibName, bundle){}\npublic override void DidReceiveMemoryWarning (){\n// Releases the view if it doesn't have a superview.\nbase.DidReceiveMemoryWarning ();\n// Release any cached data, images, and so on that aren't in use.\n}\npublic override void ViewDidLoad (){\nbase.ViewDidLoad ();\n//any additional setup after loading the view, typically from a nib.\n}\npublic override void ViewDidUnload (){\nbase.ViewDidUnload ();\n// Release any retained subviews of the main view.\n// e.g. myOutlet = null;\n}\npublic override bool ShouldAutorotateToInterfaceOrientation (UIInterfaceOrientation toInterfaceOrientation){\n// Return true for supported orientations\nreturn (toInterfaceOrientation != UIInterfaceOrientation.PortraitUpsideDown);\n}\n}\n}\n\n```", "```swift\nnamespace MyFirstiPhoneProject{\n[Register (\"MyFirstiPhoneProjectViewController\")]\npartial class MyFirstiPhoneProjectViewController{}\n}\n\n```", "```swift\nnamespace MyFirstiPhoneProject\n\n```", "```swift\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing MonoTouch.Foundation;\nusing MonoTouch.UIKit;\nnamespace MyFirstiPhoneProject{\n// The UIApplicationDelegate for the application. This class is responsible for launching the\n// User Interface of the application, as well as listening (and optionally responding) to application events from iOS.\n[Register (\"AppDelegate\")]\npublic partial class AppDelegate : UIApplicationDelegate{\n// class-level declarations\nUIWindow window;\nMyFirstiPhoneProjectViewController viewController;\n// This method is invoked when the application has loaded and is ready to run. In this\n// method, you should instantiate the window, load the UI into it, and then make the window visible.\n// You have 17 seconds to return from this method, or iOS will terminate your application.\npublic override bool FinishedLaunching (UIApplication app, NSDictionary options){\nwindow = new UIWindow (UIScreen.MainScreen.Bounds);\nviewController = new MyFirstiPhoneProjectViewController (\"MyFirstiPhoneProjectViewController\", null);\nwindow.RootViewController = viewController;\nwindow.MakeKeyAndVisible ();\nreturn true;\n}\n}\n}\n\n```", "```swift\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing MonoTouch.Foundation;\nusing MonoTouch.UIKit;\n\n```", "```swift\nUIWindow window;\nMyFirstiPhoneProjectViewController viewController;\npublic override bool FinishedLaunching (UIApplication app, NSDictionary options) {\n\n```", "```swift\nwindow = new UIWindow (UIScreen.MainScreen.Bounds);\n\n```", "```swift\nviewController = new MyFirstiPhoneProjectViewController (\"MyFirstiPhoneProjectViewController\", null);\nwindow.RootViewController = viewController;\n\n```", "```swift\nwindow.MakeKeyAndVisible ();\nreturn true;\n\n```", "```swift\nnamespace MyFirstiPhoneProject{\npublic class Application{\n// This is the main entry point of the application.\nstatic void Main (string[] args){\n// if you want to use a different Application Delegate class from \"AppDelegate\",\n// you can specify it here.\nUIApplication.Main (args, null, \"AppDelegate\");\n}\n}\n}\n\n```", "```swift\n// In a .NET application\nApplication.Run(new Form1());\n\n```", "```swift\n    // Create and hook a handler to our button's TouchUpInside event\n    // through its outlet\n    this.buttonTap.TouchUpInside += delegate( object sender, EventArgs e) {\n    this.labelStatus.Text = \"Button tapped!\";\n    };\n\n    ```", "```swift\n[Outlet]\nMonoTouch.UIKit.UILabel labelStatus { get; set; }\n[Outlet]\nMonoTouch.UIKit.UIButton buttonTap { get; set; }\n\n```", "```swift\n@property (retain, nonatomic) IBOutlet UIButton *buttonTap;\n\n```", "```swift\n[Outlet]\nUIButton ButtonTap { get; set; }\n\n```", "```swift\n    partial void OnButtonTap(NSObject sender){\n    this.labelStatus.Text = \"Button tapped!\";\n    }\n\n    ```", "```swift\n[Action (\"OnButtonTap:\")]\npartial void OnButtonTap (MonoTouch.Foundation.NSObject sender);\n\n```", "```swift\n    this.labelStatus.Text = \"Button tapped!\";\n\n    ```"]