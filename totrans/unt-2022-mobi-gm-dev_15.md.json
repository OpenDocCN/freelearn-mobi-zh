["```kt\n    using UnityEngine.XR.ARFoundation; /* ARRaycastManager */\n    using UnityEngine.XR.ARSubsystems; /* TrackableType */\n    ```", "```kt\n    /// <summary>\n    /// A reference to the Raycast Manager for being able\n    /// to perform raycasts\n    /// </summary>\n    ARRaycastManager raycastManager;\n    /// <summary>\n    /// A reference to the AR camera to know where to draw\n    /// raycasts from\n    /// </summary> Camera arCamera;\n    ```", "```kt\n    /// <summary>\n    /// Start is called before the first frame update.\n    /// Initialize our private variables\n    /// </summary>\n    void Start()\n    {\n        raycastManager = GameObject.FindObjectOfType\n            <ARRaycastManager>();\n        arCamera = GameObject.FindObjectOfType<Camera>();\n    }\n    ```", "```kt\n    /// <summary>\n    /// LateUpdate is called once per frame after all\n    /// Update functions have been called\n    /// </summary>\n    private void LateUpdate()\n    {\n        /* Figure out where the center of the screen is */\n        var viewportCenter = new Vector2(0.5f, 0.5f);\n        var screenCenter =\n           arCamera.ViewportToScreenPoint(viewportCenter);\n        /* Check if there is something in front of the\n           center of the screen and update the placement\n           indicator if needed */\n        UpdateIndicator(screenCenter);\n    }\n    ```", "```kt\n    /// <summary>\n    /// Will update the placement indicator's position and\n    /// rotation to be on the floor of any plane surface\n    /// </summary>\n    /// <param name=\"screenPosition\">A position in screen\n    /// space</param>\n    private void UpdateIndicator(Vector2 screenPosition)\n    {\n        var hits = new List<ARRaycastHit>();\n        raycastManager.Raycast(screenPosition,\n            hits, TrackableType.Planes);\n        /* If there is at least one hit position */\n        if (hits.Count > 0)\n        {\n            // Get the pose data\n            var placementPose = hits[0].pose;\n            var camForward = arCamera.transform.forward;\n            /* We want the object to be flat */\n            camForward.y = 0;\n            /* Scale the vector be have a size of 1 */\n            camForward = camForward.normalized;\n            /* Rotate to face in front of the camera */\n            placementPose.rotation =\n                Quaternion.LookRotation(camForward);\n            transform.SetPositionAndRotation\n                (placementPose.position,\n                    placementPose.rotation);\n        }\n    }\n    ```", "```kt\n            /* Rotate to face in front of the camera */\n            placementPose.rotation =\n                Quaternion.LookRotation(camForward);\n            /* Move the quad slightly above the floor to\n               avoid z-fighting */\n            var newPosition = placementPose.position;\n            newPosition.y += 0.001f;\n            transform.SetPositionAndRotation(newPosition,\n                placementPose.rotation);\n        }\n    }\n    ```", "```kt\n    [Tooltip(\"The object to spawn when the screen is tapped\")] public GameObject objectToSpawn;\n    ```", "```kt\n        /// <summary>\n        /// LateUpdate is called once per frame after all\n        /// Update functions have been called\n        /// </summary>\n        private void LateUpdate()\n        {\n            /* Figure out where the center of the screen\n               is */\n            var viewportCenter = new Vector2(0.5f, 0.5f);\n            var screenCenter =\n                arCamera.ViewportToScreenPoint(\n                    viewportCenter);\n            /* Check if there is something in front of the\n               center of the screen and update the\n               placement indicator if needed */\n            UpdateIndicator(screenCenter);\n            /* If we tap on the screen, spawn an object */\n            if (Input.GetMouseButtonDown(0))\n            {\n                /* Spawn the object above the floor to see\n                   it fall */\n                Vector3 objPos = transform.position +\n    Vector3.up;\n                if (objectToSpawn)\n                {\n                    Instantiate(objectToSpawn, objPos,\n                        transform.rotation);\n                }\n            }\n        }\n    ```"]