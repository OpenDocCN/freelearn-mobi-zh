- en: '*Chapter 8*: Building a Simple Detail View'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Often in iOS development, table views or collection views just give a brief
    summary of the presented items. To figure out all the details of the shown items,
    the user has to select an item so that they can be redirected to the details.
    In the details view, the user can often interact with the shown item.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: For example, in a mail app, the summary only shows the sender, the subject,
    and the first few lines of the mail. To read the complete mail and to answer it,
    the user has to open it in the details view.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will build the details view for our to-do items. The chapter
    is structured as follows:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Adding labels, a button, and a map
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Filling in the data
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Checking the to-do item
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We start by adding the user interface elements to the view.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The source code for this chapter is available here:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/PacktPublishing/Test-Driven-iOS-Development-with-Swift-Fourth-Edition/tree/main/chapter08](https://github.com/PacktPublishing/Test-Driven-iOS-Development-with-Swift-Fourth-Edition/tree/main/chapter08)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Adding labels, a button, and a map
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We have done this so often already that you might guess what we have to do
    first. That''s right, we need a test case class for our tests. Select the `ToDoItemDetailsViewControllerTests`.
    Make sure that it is added to the unit test target:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.1 – The test case needs to be added to the unit test target'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.01_B16497.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.1 – The test case needs to be added to the unit test target
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'Remove the two template tests in the created test case class and add `@testable
    import ToDo` below the existing import statement:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The details view needs some labels to show the information of the to-do item.
    Let''s start with the label for the title. Follow these steps:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following property for the system under test:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Xcode complains that it **Cannot find type 'ToDoItemDetailsViewController' in
    scope**.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the `ToDoItemDetailsViewController`. Make it a subclass of **UIViewController**:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.2 – Options for the view controller class'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.02_B16497.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.2 – Options for the view controller class
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Remove the template code inside the created class. Go back to `ToDoItemDetailsViewControllerTests`.
    Xcode should remove the error after a few seconds. If it doesn't, select the **Product**
    | **Build** menu item to compile the project.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now we have two choices. One, we could build the user interface in code as we
    did for the table view cells in the previous chapter. Two, we could use a storyboard
    for the user interface. To give you a broader picture in this book, we will use
    the storyboard for the user interface in this chapter.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `setUpWithError()` and the `tearDownWithError()` methods with the
    following implementation:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The parentheses around `(storyboard.instantiateViewController(withIdentifier:
    "ToDoItemDetailsViewController") as! ToDoItemDetailsViewController)` are needed
    to silence a warning produced by Xcode. Try and see what Xcode tells you do when
    you omit them.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`(storyboard.instantiateViewController(withIdentifier: "ToDoItemDetailsViewController")
    as! ToDoItemDetailsViewController)` 两边的括号是必要的，以消除 Xcode 生成的警告。尝试并看看当你省略它们时 Xcode
    会告诉你什么。'
- en: 'With the setup and the teardown methods in place, we can write the first test
    of that test case class:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置和清理方法就绪后，我们可以编写该测试用例类的第一个测试：
- en: '[PRE3]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This test is not finished yet but we have to pause here because the `titleLabel`
    property is missing.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这个测试尚未完成，但我们必须在这里暂停，因为 `titleLabel` 属性缺失。
- en: 'Add the property to `ToDoItemDetailsViewController`:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将属性添加到 `ToDoItemDetailsViewController`：
- en: '[PRE4]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now we can finish the test method:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以完成测试方法：
- en: '[PRE5]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Run all tests to confirm that this new test fails. This test fails in `setUpWithError()`.
    Click the red diamond in the failure message to see what the problem is:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行所有测试以确认新的测试失败。这个测试在 `setUpWithError()` 中失败。点击失败消息中的红色菱形以查看问题：
- en: '![Figure 8.3 – The storyboard doesn''t have a view controller with the identifier
    ''ToDoItemDetailsViewController'''
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.3 – 故事板中没有标识为 ''ToDoItemDetailsViewController'' 的视图控制器'
- en: '](img/Figure_8.03_B16497.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.03_B16497.jpg)'
- en: Figure 8.3 – The storyboard doesn't have a view controller with the identifier
    'ToDoItemDetailsViewController'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.3 – 故事板中没有标识为 'ToDoItemDetailsViewController' 的视图控制器
- en: Looking at the problem shown in *Figure 8.3*, we need to add a new scene for
    that view controller to the storyboard.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 观察图 8.3 中显示的问题，我们需要在故事板中为该视图控制器添加一个新的场景。
- en: 'Open the `Main.storyboard` file in the Interface Builder in Xcode and click
    the plus (**+**) button in the toolbar:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Xcode 的 Interface Builder 中打开 `Main.storyboard` 文件，并点击工具栏中的加号 (**+**) 按钮：
- en: '![Figure 8.4 – Open the library'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.4 – 打开库'
- en: '](img/Figure_8.04_B16497.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.04_B16497.jpg)'
- en: Figure 8.4 – Open the library
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.4 – 打开库
- en: 'Search for `view controller` and drag a **View Controller** object onto the
    storyboard. Open the **Identity** inspector by selecting the **View** | **Inspectors**
    | **Identity** menu item. Change **Class** and **Storyboard ID** to **ToDoItemDetailsViewController**:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索 `view controller` 并将一个 **View Controller** 对象拖放到故事板中。通过选择 **View** | **Inspectors**
    | **Identity** 菜单项打开 **Identity** 检查器。将 **Class** 和 **Storyboard ID** 更改为 **ToDoItemDetailsViewController**：
- en: '![Figure 8.5 – Changing the class and the storyboard ID of the scene'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.5 – 更改场景的类和故事板 ID'
- en: '](img/Figure_8.05_B16497.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.05_B16497.jpg)'
- en: Figure 8.5 – Changing the class and the storyboard ID of the scene
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.5 – 更改场景的类和故事板 ID
- en: Run the tests again. The new test still fails because the `titleLabel` property
    is `nil`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行测试。新的测试仍然失败，因为 `titleLabel` 属性是 `nil`。
- en: 'We need to add a label to the storyboard scene and connect it with `IBOutlet`.
    Open the library by selecting the `ToDoItemDetailsViewController`:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要在故事板场景中添加一个标签，并将其与 `IBOutlet` 连接。通过选择 `ToDoItemDetailsViewController` 打开库：
- en: '![Figure 8.6 – The added label on the To Do Item Details View Controller scene'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.6 – 在待办事项详情视图控制器场景中添加的标签'
- en: '](img/Figure_8.06_B16497.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.06_B16497.jpg)'
- en: Figure 8.6 – The added label on the To Do Item Details View Controller scene
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.6 – 在待办事项详情视图控制器场景中添加的标签
- en: Open the `ToDoItemsDetailsViewController` in the **Assistant** editor. If it
    opens another file, close Xcode and restart it.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Assistant** 编辑器中打开 `ToDoItemsDetailsViewController`。如果它打开了另一个文件，请关闭 Xcode
    并重新启动。
- en: 'Hold down the *Ctrl* key and drag a connection from the label in the storyboard
    to the `IBOutlet` property in the code:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 按住 *Ctrl* 键，从故事板中的标签拖动一个连接到代码中的 `IBOutlet` 属性：
- en: '![Figure 8.7 – Connect the label in the scene with the IBOutlet property'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.7 – 将场景中的标签与 IBOutlet 属性连接'
- en: '](img/Figure_8.07_B16497.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.07_B16497.jpg)'
- en: Figure 8.7 – Connect the label in the scene with the IBOutlet property
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.7 – 将场景中的标签与 IBOutlet 属性连接
- en: Run the tests again. All tests pass.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行测试。所有测试都通过。
- en: As we have hardly written any code, there is nothing to refactor.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们几乎没有编写任何代码，没有东西可以重构。
- en: 'In the same way, you can add the labels for the date, the location, and the
    description of the to-do item. We won''t show this here because it works exactly
    the same as adding the label for the title. Follow the steps again with a different
    name for the property. To get you started, here are the three tests for these
    three new labels:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 以同样的方式，你可以添加日期、位置和待办事项描述的标签。这里我们不会展示，因为它与添加标题标签的工作方式完全相同。使用不同的属性名再次按照步骤进行。为了帮助你开始，这里是为这三个新标签提供的三个测试：
- en: '[PRE6]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Add these tests one by one and make them pass. But make sure to only have one
    failing test at any time.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 逐个添加这些测试并使它们通过。但请确保任何时候只有一个失败的测试。
- en: 'Next, we need a map view to show the location of the to-do item if the location
    is set. Follow these steps to add it to the view:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要一个地图视图来显示待办事项的位置，如果设置了位置。按照以下步骤将其添加到视图中：
- en: 'Add the following test to `ToDoItemDetailsViewControllerTests`:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下测试添加到`ToDoItemDetailsViewControllerTests`中：
- en: '[PRE7]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Run the test to confirm that this new test fails.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 运行测试以确认这个新测试失败。
- en: 'Add the `MapKit` import to `ToDoItemDetailsViewController` and add an outlet
    for the `mapView` view:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`MapKit`导入添加到`ToDoItemDetailsViewController`中，并为`mapView`视图添加一个出口：
- en: '[PRE8]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Run the test again. It still fails, but this time because the `mapView` property
    is `nil`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行测试。这次仍然失败，但这次是因为`mapView`属性是`nil`。
- en: Open `Main.storyboard` and drag a `IBOutlet` property of the map view.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`Main.storyboard`并将地图视图的`IBOutlet`属性拖动出来。
- en: Run the tests to confirm that all tests now pass.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 运行测试以确认所有测试现在都通过。
- en: 'The last UI element we have to add to the view is the button to mark an item
    as **Done**. This works the same way as adding the labels previously. So again,
    this is left as an exercise for you. Here is the test to get you started:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最后要添加到视图中的UI元素是标记项目为**完成**的按钮。这与之前添加标签的方式相同。所以，这又是一个留给你的练习。以下是一个帮助你开始的测试：
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Make this test pass by adding a `UIButton` instance to the view controller.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 通过向视图控制器添加一个`UIButton`实例来使这个测试通过。
- en: 'Before we move on, you should take some time to make this user interface better.
    Move the elements and add layout constraints so that the user interface is more
    pleasing to the eye. When you''ve finished, your result could look similar to
    the following figure:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，你应该花些时间使这个用户界面更好。移动元素并添加布局约束，使用户界面更吸引人。当你完成时，你的结果可能看起来类似于以下图示：
- en: '![Figure 8.8 – The user interface for the details view'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.8 – 详情视图的用户界面'
- en: '](img/Figure_8.08_B16497.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_8.08_B16497.jpg)'
- en: Figure 8.8 – The user interface for the details view
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.8 – 详情视图的用户界面
- en: Now that we have the user interface for the details view, we can present the
    data of the to-do item when the details are pushed onto the screen. This is what
    we will implement in the following section.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了详情视图的用户界面，当详情被推送到屏幕上时，我们可以展示待办事项的数据。这就是我们在下一节将要实现的内容。
- en: Filling in the data
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 填充数据
- en: 'Follow these steps to update the user interface with the data from the to-do
    item:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤更新用户界面，使用待办事项的数据：
- en: 'We start with a new test. Add the following test method to `ToDoItemDetailsViewControllerTests`:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们从一个新的测试开始。将以下测试方法添加到`ToDoItemDetailsViewControllerTests`中：
- en: '[PRE10]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: At this point, we get an error from Xcode that **Value of type 'ToDoItemDetailsViewController'
    has no member 'toDoItem'**.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们从Xcode得到一个错误，**类型为'TodoItemDetailsViewController'的值没有成员'toDoItem'**。
- en: 'Go to `ToDoItemDetailsViewController` and add the `toDoItem` property:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往`ToDoItemDetailsViewController`并添加`toDoItem`属性：
- en: '[PRE11]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now we can finish writing the test by adding the `Assert` call:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以通过添加`Assert`调用来完成测试的编写：
- en: '[PRE12]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Run the tests to confirm that this new test fails.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 运行测试以确认这个新测试失败。
- en: 'Go back to the implementation code and replace the property declaration with
    the following:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回实现代码并将属性声明替换为以下内容：
- en: '[PRE13]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Run the tests again to confirm that all tests now pass.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行测试以确认所有测试现在都通过。
- en: 'The tests and the implementation for the other labels work in a similar way,
    and are left for you to do as an exercise. To get you started, here are the tests:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 测试和其他标签的实现方式类似，留给你们作为练习。为了帮助你开始，这里有一些测试：
- en: '[PRE14]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Make these tests pass one by one. Make sure that you never have more than one
    failing test.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 逐个使这些测试通过。确保你永远不会同时有一个失败的测试。
- en: 'The map view should show a map of the location of the to-do item when the to-do
    item contains a location with a coordinate. Follow these steps to add that feature:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 当待办事项包含一个坐标的位置时，地图视图应该显示待办事项的位置地图。按照以下步骤添加此功能：
- en: 'Add the following test to `ToDoItemDetailsViewControllerTests`:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下测试添加到`ToDoItemDetailsViewControllerTests`中：
- en: '[PRE15]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: With this test, we test if the center coordinate of the map view is set to the
    coordinate of the location of the to-do item.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个测试，我们测试地图视图的中心坐标是否设置为待办事项位置坐标。
- en: Run all tests to confirm that this new test fails.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 运行所有测试以确认这个新测试失败。
- en: 'To make this test pass, add the following code to the `didSet` handler of the
    `toDoItem` property in `ToDoItemDetailsViewController`:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使此测试通过，请将以下代码添加到`ToDoItemDetailsViewController`中`toDoItem`属性的`didSet`处理程序：
- en: '[PRE16]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Run the tests again to confirm that all tests now pass.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行测试以确认所有测试现在都通过。
- en: 'When the presented to-do item is already done, the **Done** button should be
    disabled. Follow these steps to implement this feature:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 当展示的任务项已经完成时，**完成**按钮应该被禁用。按照以下步骤实现此功能：
- en: 'Add the following test to `ToDoItemDetailsViewControllerTests`:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下测试添加到`ToDoItemDetailsViewControllerTests`：
- en: '[PRE17]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Run the tests to confirm that this new test fails.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 运行测试以确认这个新测试失败。
- en: 'To make this new test pass, add the following code to the `didSet` handler
    of the `toDoItem` property:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使这个新测试通过，请将以下代码添加到`toDoItem`属性的`didSet`处理程序：
- en: '[PRE18]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This code makes the test pass. Try it by running all tests. But this line of
    code is clearly wrong because it disables the **Done** button for all to-do items,
    even for those that are not done yet. To fix this bug, we need another test.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码使测试通过。通过运行所有测试来尝试它。但这一行代码显然是错误的，因为它禁用了所有待办事项的**完成**按钮，甚至对于那些尚未完成的待办事项也是如此。为了修复这个错误，我们需要另一个测试。
- en: 'Add the following test to `ToDoItemDetailsViewControllerTests`:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下测试添加到`ToDoItemDetailsViewControllerTests`：
- en: '[PRE19]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Run the tests. This new test fails.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 运行测试。这个新测试失败了。
- en: 'To make it pass, replace the `doneButton.isEnabled = false` line with the following
    code:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使其通过，将`doneButton.isEnabled = false`行替换为以下代码：
- en: '[PRE20]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Run all tests again to confirm that this code fixes the bug.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行所有测试以确认此代码修复了错误。
- en: Great! We are finished with updating the user interface with the information
    from the to-do item. In the following section, we will implement the functionality
    of the **Done** button.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！我们已经完成了使用任务项的信息更新用户界面。在下一节中，我们将实现**完成**按钮的功能。
- en: Checking the to-do item
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查任务项
- en: 'When the user of the app taps the **Done** button, our app has to tell the
    to-do item store to change the item''s status to **Done**. Follow these steps
    to implement that feature:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户点击**完成**按钮时，我们的应用程序必须告诉待办事项存储库将项目状态更改为**完成**。按照以下步骤实现此功能：
- en: 'Add the following test method to `ToDoItemDetailsViewControllerTests`:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下测试方法添加到`ToDoItemDetailsViewControllerTests`：
- en: '[PRE21]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '`ToDoItemDetailsViewController` doesn''t have a property for `toDoItemStore`.
    This means we have to pause writing this test and add this property first.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`ToDoItemDetailsViewController`没有`toDoItemStore`属性。这意味着我们必须暂停编写此测试，并首先添加此属性。'
- en: 'Go to `ToDoItemDetailsViewController` and add the `toDoItemStore` property:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往`ToDoItemDetailsViewController`并添加`toDoItemStore`属性：
- en: '[PRE22]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now we can finish the test:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以完成测试：
- en: '[PRE23]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'With the `sut.doneButton.sendActions(for: .touchUpInside)` call, we send the
    `.touchUpInside` action to the target of the `toDoItemStore` was called with the
    `toDoItem` variable of the system under test.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '通过`sut.doneButton.sendActions(for: .touchUpInside)`调用，我们向`toDoItemStore`的目标发送了`.touchUpInside`动作，该动作与系统正在测试的`toDoItem`变量一起调用。'
- en: 'To add an action to the `Main.storyboard` file and the `ToDoItemDetailsViewController.swift`
    file side by side. Hold down the *Ctrl* key and drag a connection from the **Done**
    button into the code:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将动作添加到`Main.storyboard`文件和`ToDoItemDetailsViewController.swift`文件旁边。按住*Ctrl*键，从**完成**按钮拖动连接到代码：
- en: '![Figure 8.9 – Drag a connection from the Done button to the code'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 8.9 – 从完成按钮拖动连接到代码'
- en: '](img/Figure_8.09_B18127.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_8.09_B18127.jpg)'
- en: Figure 8.9 – Drag a connection from the Done button to the code
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 8.9 – 从完成按钮拖动连接到代码
- en: 'Change `checkItem` in the **Name** field, and change **Type** to **UIButton**.
    Then click **Connect**:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**名称**字段中的`checkItem`更改为，并将**类型**更改为**UIButton**。然后点击**连接**：
- en: '![Figure 8.10 – Options for the button action'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 8.10 – 按钮动作选项'
- en: '](img/Figure_8.10_B16497.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_8.10_B16497.jpg)'
- en: Figure 8.10 – Options for the button action
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 8.10 – 按钮动作选项
- en: 'Next, change the action code to the following:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将动作代码更改为以下内容：
- en: '[PRE24]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Run all tests to confirm that this makes all tests pass again.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 运行所有测试以确认这使所有测试再次通过。
- en: When the item is checked as **Done**, the **Done** button should be disabled
    to show the user that this task is finished. You will implement this feature in
    the exercises for this chapter.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 当项目被标记为**完成**时，**完成**按钮应该被禁用以向用户显示此任务已完成。你将在本章的练习中实现此功能。
- en: Summary
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we built a simple detail view controller following test-driven
    development. We learned how to test a view controller that is set up using a storyboard.
    And finally, we figured out what we have to do to test the action of a button.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们遵循测试驱动开发（TDD）的原则构建了一个简单的详情视图控制器。我们学习了如何测试使用Storyboard设置的视图控制器。最后，我们弄清楚了测试按钮动作需要做什么。
- en: The skills you gained in this chapter will help you in writing tests for all
    kinds of user interfaces, even those that are more complicated. You are now able
    to test the presence and the interaction of user interface elements with the rest
    of the code.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中获得的技能将帮助你在编写各种用户界面的测试时有所帮助，即使是那些更复杂的界面。你现在能够测试用户界面元素的存在及其与代码其他部分的交互。
- en: In the next chapter, we will write tests for a view that is created using SwiftUI.
    For that task, we will have to add a third-party library from GitHub to our test
    target.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将为使用SwiftUI创建的视图编写测试。为此任务，我们需要将GitHub上的第三方库添加到我们的测试目标中。
- en: Exercises
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: When the user selects the **Done** button to show the task as finished, the
    **Done** button should be disabled to show the user that this action was successful.
    Implement this feature.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当用户选择**完成**按钮以显示任务已完成时，**完成**按钮应被禁用，以向用户显示此操作已成功执行。实现此功能。
- en: Change the code so that the map view is hidden when no coordinate is set in
    the to-do item.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改代码，以便在待办事项中没有设置坐标时隐藏地图视图。
