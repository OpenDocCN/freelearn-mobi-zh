["```kt\nIntent intent = new Intent(Intent.ACTION_DIAL); \nintent.setData(Uri.parse(\"tel:\" + number)); \nstartActivity(intent); \n```", "```kt\n<uses-permission android:name=\"android.permission.CALL_PHONE\"/>\n```", "```kt\n<Button\n    android:id=\"@+id/button\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Dial\"\n    android:onClick=\"dialPhone\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintLeft_toLeftOf=\"parent\"\n    app:layout_constraintRight_toRightOf=\"parent\"\n    app:layout_constraintTop_toTopOf=\"parent\" />\n```", "```kt\nprivate boolean checkPermission(String permission) {\n    int permissionCheck = ContextCompat.checkSelfPermission(this, permission);\n    return (permissionCheck == PackageManager.PERMISSION_GRANTED);\n}\n```", "```kt\npublic void dialPhone(View view){\n    if (checkPermission(Manifest.permission.CALL_PHONE)) {\n        Intent intent = new Intent(Intent.ACTION_CALL);\n        intent.setData(Uri.parse(\"tel:0123456789\"));\n        startActivity(intent);\n    } else {\n        ActivityCompat.requestPermissions(this, new String[] {Manifest.permission.CALL_PHONE},1);\n    }\n}\n```", "```kt\n<TextView\n    android:id=\"@+id/textView\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    app:layout_constraintLeft_toLeftOf=\"parent\"\n    app:layout_constraintTop_toTopOf=\"parent\" />\n```", "```kt\n<uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\n```", "```kt\nPhoneStateListener mPhoneStateListener = new PhoneStateListener() {\n    @Override\n    public void onCallStateChanged(int state, String number) {\n        String phoneState = number;\n        switch (state) {\n            case TelephonyManager.CALL_STATE_IDLE:\n                phoneState += \"CALL_STATE_IDLE\\n\";\n                break;\n            case TelephonyManager.CALL_STATE_RINGING:\n                phoneState += \"CALL_STATE_RINGING\\n\";\n                break;\n            case TelephonyManager.CALL_STATE_OFFHOOK:\n                phoneState += \"CALL_STATE_OFFHOOK\\n\";\n                break;\n        }\n        TextView textView = findViewById(R.id.textView);\n        textView.append(phoneState);\n    }\n};\n```", "```kt\nfinal TelephonyManager telephonyManager = \n        (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);\ntelephonyManager.listen(mPhoneStateListener, PhoneStateListener.LISTEN_CALL_STATE);\n```", "```kt\nfinal TelephonyManager telephonyManager =\n        (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);\ntelephonyManager.listen(mPhoneStateListener, PhoneStateListener.LISTEN_CALL_STATE);\n```", "```kt\ntelephonyManager.listen(mPhoneStateListener,PhoneStateListener.LISTEN_NONE); \n```", "```kt\n<uses-permission android:name=\"android.permission.SEND_SMS\"/>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout \n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" >\n    <EditText\n        android:id=\"@+id/editTextNumber\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:inputType=\"number\"\n        android:ems=\"10\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:hint=\"Number\"/>\n    <EditText\n        android:id=\"@+id/editTextMsg\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_below=\"@+id/editTextNumber\"\n        android:layout_centerHorizontal=\"true\"\n        android:hint=\"Message\"/>\n    <Button\n        android:id=\"@+id/buttonSend\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Send\"\n        android:layout_below=\"@+id/editTextMsg\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"send\"/>\n</RelativeLayout>\n```", "```kt\nfinal int SEND_SMS_PERMISSION_REQUEST_CODE=1; \nButton mButtonSend; \n```", "```kt\nmButtonSend = findViewById(R.id.buttonSend);\nmButtonSend.setEnabled(false);\n\nif (checkPermission(Manifest.permission.SEND_SMS)) {\n    mButtonSend.setEnabled(true);\n} else {\n    ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.SEND_SMS}, \n            SEND_SMS_PERMISSION_REQUEST_CODE);\n}\n```", "```kt\nprivate boolean checkPermission(String permission) {\n    int permissionCheck = ContextCompat.checkSelfPermission(this,permission);\n    return (permissionCheck == PackageManager.PERMISSION_GRANTED);\n}\n```", "```kt\n@Override\npublic void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {\n    switch (requestCode) {\n        case SEND_SMS_PERMISSION_REQUEST_CODE: {\n            if (grantResults.length > 0\n                    && grantResults[0] ==\n                    PackageManager.PERMISSION_GRANTED) {\n                mButtonSend.setEnabled(true);\n            }\n            return;\n        }\n    }\n}\n```", "```kt\npublic void send(View view) {\n    String phoneNumber = ((EditText)findViewById(R.id.editTextNumber)).getText().toString();\n    String msg = ((EditText)findViewById(R.id.editTextMsg)).getText().toString();\n\n    if (phoneNumber==null || phoneNumber.length()==0 || msg==null || msg.length()==0 ) {\n        return;\n    }\n\n    if (checkPermission(Manifest.permission.SEND_SMS)) {\n        SmsManager smsManager = SmsManager.getDefault();\n        smsManager.sendTextMessage(phoneNumber, null, msg, null, null);\n    } else {\n        Toast.makeText(MainActivity.this, \"No Permission\", Toast.LENGTH_SHORT).show();\n    }\n}\n```", "```kt\nSmsManager smsManager = SmsManager.getDefault(); \nsmsManager.sendTextMessage(phoneNumber, null, msg, null, null); \n```", "```kt\nArrayList<String> messages=smsManager.divideMessage(msg);\nsmsManager.sendMultipartTextMessage(phoneNumber, null, messages, null, null);\n```", "```kt\nsendTextMessage(String destinationAddress, String scAddress, String text, \n        PendingIntent sentIntent, PendingIntent deliveryIntent)\n```", "```kt\n<uses-permission android:name=\"android.permission.RECEIVE_SMS\" />\n```", "```kt\n<receiver android:name=\".SMSBroadcastReceiver\">\n    <intent-filter>\n        <action android:name=\"android.provider.Telephony.SMS_RECEIVED\"/>\n    </intent-filter>\n</receiver>\n```", "```kt\nprivate boolean checkPermission(String permission) {\n    int permissionCheck = ContextCompat.checkSelfPermission(this, permission);\n    return (permissionCheck == PackageManager.PERMISSION_GRANTED);\n}\n```", "```kt\nif (!checkPermission(Manifest.permission.RECEIVE_SMS)) {\n    ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.RECEIVE_SMS}, 0);\n}\n```", "```kt\npublic class SMSBroadcastReceiver extends BroadcastReceiver {\n    final String SMS_RECEIVED = \"android.provider.Telephony.SMS_RECEIVED\";\n\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        if (SMS_RECEIVED.equals(intent.getAction())) {\n            Bundle bundle = intent.getExtras();\n            if (bundle != null) {\n                Object[] pdus = (Object[]) bundle.get(\"pdus\");\n                String format = bundle.getString(\"format\");\n                final SmsMessage[] messages = new SmsMessage[pdus.length];\n                for (int i = 0; i < pdus.length; i++) {\n                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n                        messages[i] = SmsMessage.createFromPdu((byte[]) pdus[i], format);\n                    } else {\n                        messages[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);\n                    }\n                    Toast.makeText(context, messages[0].getMessageBody(), Toast.LENGTH_SHORT)\n                            .show();\n                }\n            }\n        }\n    }\n}\n```", "```kt\n<receiver android:name=\".SMSBroadcastReceiver\">\n    <intent-filter>\n        <action android:name=\"android.provider.Telephony.SMS_RECEIVED\"/>\n    </intent-filter>\n</receiver>\n```", "```kt\nif (SMS_RECEIVED.equals(intent.getAction())) {} \n```", "```kt\nmessages[i] = SmsMessage.createFromPdu((byte[]) pdus[i]); \n```", "```kt\n<intent-filter   android:priority=\"100\">   \n    <action android:name=\n           \"android.provider.Telephony.SMS_RECEIVED\" />   \n</intent-filter>   \n```", "```kt\n<uses-permission android:name=\"android.permission.READ_SMS\" /> \n```", "```kt\nCursor cursor = getContentResolver().query(\n        Uri.parse(\"content://sms/\"), null, null, null, null);\nwhile (cursor.moveToNext()) {\n    textView.append(\"From :\" + cursor.getString(1) + \" : \" + cursor.getString(11)+\"\\n\");\n}\n```", "```kt\nUri uri = Uri.parse(\"https://www.packtpub.com/\"); \nIntent intent = new Intent(Intent.ACTION_VIEW, uri); \nstartActivity(intent); \n```", "```kt\n<uses-permission android:name=\"android.permission.INTERNET\"/>\n```", "```kt\nWebView webview = new WebView(this);\nsetContentView(webview);\nwebview.loadUrl(\"https://www.packtpub.com/\");\n```", "```kt\nwebview.setWebViewClient(new WebViewClient()); \n```", "```kt\nprivate class mWebViewClient extends WebViewClient {\n    @Override\n    public boolean shouldOverrideUrlLoading(WebView view, String url) {\n        if (Uri.parse(url).getHost().equals(\"www.packtpub.com\")) {\n            return false;  //Don't override since it's the same host \n        } else {\n            return true; //Stop the navigation since it's a different \n            //site \n        }\n    }\n}\n```", "```kt\nwebview.setWebViewClient(new mWebViewClient());\n```", "```kt\nWebSettings webSettings = webview.getSettings(); \nwebSettings.setJavaScriptEnabled(true); \n```", "```kt\nwebSettings.setBuiltInZoomControls(true); \n```", "```kt\n<uses-permission android:name=\"android.permission.INTERNET\"/>\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" >\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"\" />\n    <Button\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Check\"\n        android:layout_centerInParent=\"true\"\n        android:onClick=\"getStatus\"/>\n</RelativeLayout>\n```", "```kt\nprivate boolean isOnline() {\n    ConnectivityManager connectivityManager = (ConnectivityManager)\n                    getSystemService(Context.CONNECTIVITY_SERVICE);\n    NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n    return (networkInfo != null && networkInfo.isConnected());\n}\n```", "```kt\npublic void getStatus(View view) {\n    TextView textView = findViewById(R.id.textView);\n    if (isOnline()) {\n        ConnectivityManager connectivityManager =\n                (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n        NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n        textView.setText(networkInfo.getTypeName());\n    } else {\n        textView.setText(\"Offline\");\n    }\n}\n```", "```kt\n<receiver android:name=\".MyBroadcastReceiver\"> \n    <intent-filter> \n        <action android:name=\"android.net.conn.CONNECTIVITY_CHANGE\" /> \n    </intent-filter> \n</receiver> \n```", "```kt\nregisterReceiver(mReceiver, new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION));\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\">\n    <EditText\n        android:id=\"@+id/editTextNumber\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:inputType=\"phone\"\n        android:ems=\"10\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:layout_marginTop=\"36dp\" />\n    <Button\n        android:id=\"@+id/buttonblock\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Block\"\n        android:layout_above=\"@+id/buttonUnblock\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"onClickBlock\"/>\n    <Button\n        android:id=\"@+id/buttonUnblock\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Block\"\n        android:layout_centerVertical=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"onClickUnblock\"/>\n    <Button\n        android:id=\"@+id/buttonIsBlocked\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"isBlocked\"\n        android:layout_below=\"@+id/buttonUnblock\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"onClickIsBlocked\"/>\n</RelativeLayout>\n```", "```kt\nprivate EditText mEditTextNumber;\n```", "```kt\nmEditTextNumber=findViewById(R.id.editTextNumber);\n```", "```kt\npublic void onClickBlock(View view) {\n    String number = mEditTextNumber.getText().toString();\n    if (number!=null && number.length()>0) {\n        blockNumber(number);\n    }\n}\npublic void onClickUnblock(View view) {\n    String number = mEditTextNumber.getText().toString();\n    if (number!=null && number.length()>0) {\n        unblockNumber(number);\n    }\n}\npublic void onClickIsBlocked(View view) {\n    String number = mEditTextNumber.getText().toString();\n    if (number!=null && number.length()>0) {\n        isBlocked(number);\n    }\n}\n```", "```kt\nprivate void blockNumber(String number) {\n    if (BlockedNumberContract.canCurrentUserBlockNumbers(this)) {\n        ContentValues values = new ContentValues();\n        values.put(BlockedNumberContract.BlockedNumbers.COLUMN_ORIGINAL_NUMBER, number);\n        getContentResolver().insert(BlockedNumberContract.BlockedNumbers.CONTENT_URI, values);\n    }\n}\n```", "```kt\nprivate void unblockNumber(String number) {\n    if (BlockedNumberContract.canCurrentUserBlockNumbers(this)) {\n        ContentValues values = new ContentValues();\n        values.put(BlockedNumberContract.BlockedNumbers.COLUMN_ORIGINAL_NUMBER, number);\n        Uri uri = getContentResolver()\n                .insert(BlockedNumberContract.BlockedNumbers.CONTENT_URI, values);\n        getContentResolver().delete(uri, null, null);\n    }\n}\n```", "```kt\npublic void isBlocked(String number) {\n    if (BlockedNumberContract.canCurrentUserBlockNumbers(this)) {\n        boolean blocked = BlockedNumberContract.isBlocked(this,number);\n        Toast.makeText(MainActivity.this, number + \"blocked: \" + blocked, \n                Toast.LENGTH_SHORT).show();\n    } else {\n        Toast.makeText(MainActivity.this, \"User cannot perform this operation\", \n                Toast.LENGTH_SHORT).show();\n    }\n}\n```", "```kt\nif (BlockedNumberContract.canCurrentUserBlockNumbers(this)) {\n```", "```kt\nboolean blocked = BlockedNumberContract.isBlocked(this,number);\n```", "```kt\nCursor cursor = getContentResolver().query(\n        BlockedNumberContract.BlockedNumbers.CONTENT_URI,\n        new String[]{BlockedNumberContract.BlockedNumbers.COLUMN_ID,\n                BlockedNumberContract.BlockedNumbers.COLUMN_ORIGINAL_NUMBER,\n                BlockedNumberContract.BlockedNumbers.COLUMN_E164_NUMBER},\n        null, null, null);\n```"]