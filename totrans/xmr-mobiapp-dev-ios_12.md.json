["```swift\nvar picker = new MediaPicker ();\nif (!picker.IsCameraAvailable)\n  Console.WriteLine (\"No camera!\");\nelse {\n  picker.TakePhotoAsync (new StoreCameraMediaOptions {\n    Name = \"test.jpg\",\n    Directory = \"MediaPickerSample\"\n  }).ContinueWith (t => {\n    if (t.IsCanceled) {\n      Console.WriteLine (\"User canceled\");\n      return;\n    }\n    Console.WriteLine (t.Result.Path);\n  }, TaskScheduler.FromCurrentSynchronizationContext());\n}\n```", "```swift\nvar myCamera = UIImagePickerControllerSourceType.Camera;\nif (UIImagePickerController.IsSourceTypeAvailable(myCamera))\n{\n  UIImagePickerController myCameraPicker = newUIImagePickerController();\n  myCameraPicker.SourceType = myCamera;\n  myCameraPicker.Delegate = new myImageDelegate(this);\n  PresentModalViewController(myCameraPicker, true);\n}\n```", "```swift\npublic class myImageDelegate : UIImagePickerControlDelegate\n{\n  private UIViewController myController;\n  public myImageDelegate(UIViewController control) {\n    myController = control;\n  }\n  public override void FinishedPickingMedia (UIImagePickerController thePicker, NSDictionary I) {\n    myController.DismissModalViewControllerAnimated(true);\n  }\n}\n```", "```swift\n  UIImage myImage = UIImage.FromFile(filename);\n  myImage.SaveToPhotoAlbum(delegate (UIImage image, NSError err) {\n    Console.WriteLine(\"Image saved fine\"); });\n```", "```swift\nvar iPhoneLocationManager = new Geolocator();\niPhoneLocationManager.DesiredAccuracy = 5;\niPhoneLocationManager.StartListening(1, 10);\niPhoneLocationManager.PositionChanged += (object sender,PositionEventArgs e) => {\n  double geoLocationLong = e.Position.Longitude;\n  double geoLocationLat = e.Position.Latitude;\n  iPhoneLocationManager.StopListening();\n};\n```", "```swift\nprivate TaskScheduler sched =TaskScheduler.FromCurrentSynchronizationContext();\nprivate CancellationTokenSource cancel;\ngeolocator.GetPositionAsync (timeout: 10000,cancelToken: cancel.Token, includeHeading: true).ContinueWith (t=> {\n  if (t.IsFaulted)\n    Console.WriteLine(\"Position faulted : {0}\".((GeolocationException)t.Exception.InnerException).Error);\n  else if (t.IsCanceled)\n    Console.WriteLine(\"Canceled\");\n      else {\n        Console.WriteLine(\"Timestamp {0}\",t.Result.Timestamp.ToString(\"G\"));\n        Console.WriteLine(\"La: {0}\", t.Result.Latitude.ToString(\"N4\"));\n        Console.WriteLine(\"Lo: {0}\", t.Result.Longitude.ToString(\"N4\"));}}, sched);\n```", "```swift\nprivate CLLocationManager locManager;\npublic override void ViewDidLoad() {\n  base.ViewDidLoad();\n  locManager = new CLLocationManager() {\n    DesiredAccuracy = CLLocation.AccuracyBest,\n  };\n}\n```", "```swift\nlocManager.Failed += (object sender, NSErrorEventArgs e) => {\n  UIAlertView alert = new UIAlertView() {\n    Title = \"Location manager failed\",\n    Message = string.Format(\"The following error was encountered –{0}\", e.Error.ToString())\n  }.Show();\n  locManager.StopMonitoring();};\n```", "```swift\nlocManager.LocationsUpdated += (object sender,CLLocationsUpdatedEventArgs e) => {\n  CLLocation[] locs = e.Locations;\n  Console.WriteLine(\"lat = {0},long = {1}\",locs[0].Coordinate.Latitude,locs[0].Coordinate.Longitude);\n};\n```", "```swift\nbool paused = false;\nlocManager.LocationUpdatesPaused += delegate {\n  if (!paused)\n    locManager.StopUpdatingLocation();\n  else\n    locManager.StartUpdatingLocation();\n  paused = !paused;\n};\n```", "```swift\nlocManager.StartUpdatingLocation();\n```", "```swift\nlocManager.StopUpdatingLocation();\n```", "```swift\nlocManager.UpdatedHeading += (object sender,CLHeadingUpdatedEventArgs e) => {\n  CLHeading heading = e.NewHeading.TrueHeading;Console.WriteLine(\"New heading : {0}\", heading.ToString());\n};\nlocManager.StartUpdatingHeading();\n```", "```swift\nprivate MKReverseGeocoder geoCoder;\ngeoCoder = new MKReverseGeocoder(locManager.Location.Coordinate);geoCoder.Delegate = new ReverseGeocoder(this);geoCoder.Start(); // geoCoder.Stop() stops the geoCoder\n```", "```swift\nprivate class ReverseGeocoder : MKReverseGeocoderDelegate {\n  UIViewController view;\n  public ReverseGeocoder(UIViewController myView) {\n    view = myView;\n  }\n\n  public override void FoundWithPlacemark(MKReverseGeocoder geocoder, MKPlacemark placemark) {\n    Console.WriteLine(\"Address\");\n    Console.WriteLine(\"{0}, {1}, {2}, {3}, {4}\",placemark.SubThoroughfare,placemark.Thoroughfare,placemark.Locality,placemark.AdministrativeArea,placemark.Country);\n  }\n}\n```", "```swift\nprivate void OnPositionChanged(object sender,PositionEventArgs e) {\n  double lng = e.Position.Longitude;\n  double lat = e.Position.Latitude;\n  CLLocation clloc = new CLLocation(lat, lng);\n  CLLocation oldLoc = new CLLocation(prevLat,prevLong);\n  CLGeocoder geoRevGeo = new CLGeocoder();\n  geoRevGeo.ReverseGeocodeLocation(clloc, GetAddressFromLoc);\n}\n\nprivate void GetAddressFromLoc(CLPlacemark[] place,NSError error) {\n  if (place.Length == 0) {\n    Console.WriteLine(\"Don't know where I am – help!\");\n    return;\n  }\n  else {\n    Console.WriteLine(\"Address\");\n    Console.WriteLine(\"{0}, {1}, {2}, {3}, {4}\",place.SubThoroughfare,place.Thoroughfare,placemark.Locality,placemark.AdministrativeArea,placemark.Country);}\n}\n```", "```swift\npublic override void ViewDidLoad() {\n  base.ViewDidLoad();mapViewer.ShowsUserLocation = mapViewer.ZoomEnabled = true;\n  mapViewer.MapType = MKMapType.Standard;\n  mapViewer.Region = new MKCoordinateRegion(\n    new CLLocationCoordinate2D(53.431, -2.956),\n    new MKCoordinateSpan(0.5, 0.5)\n  );mapViewer.ScrollEnabled = mapViewer.UserInteractionEnabled =true;\n}\n```", "```swift\nmapType.ValueChanged += delegate {\n  switch (mapType.SelectedSegment) {\n    case 0: mapViewer.MapType = MKMapType.Standard;\n            break;\n    case 1: mapViewer.MapType = MKMapType.Satellite;\n            break;\n    case 2: mapViewer.MapType = MKMapType.Hybrid;\n            break;\n  }\n};\n```", "```swift\nMKUserLocation loc = new MKUserLocation() {\n  Title = \"Anfield stadium\",\n  Coordinate = new CLLocationCoordinate2D(53.431, -2.956),\n  Subtitle = \"Home of Liverpool FC\",\n};mapViewer.AddAnnotationObject(loc);\n```", "```swift\nmapViewer.SetCenterCoordinate(loc.Coordinate, true);\n```", "```swift\nprivate void callNumber(string number) {\n  string phoneURLString = string.Format(\"tel:{0}\", number);\n  NSUrl phoneURL = new NSUrl(phoneURLString);\n  UIApplication.SharedApplication.OpenUrl(phoneURL);\n}\n```", "```swift\nprivate void sendTextMessage(string number, double myLat,double myLong) {\n  if (MFMessageComposeViewController.CanSendText) {\n    MFMessageComposeViewController message = newMFMessageComposeViewController();\n    message.MessageComposeDelegate = newCustomMessageComposeDelegate();\n    message.Recipients = new string[] { number };\n    message.Body = string.Format(\"Help! I am currently athttps://maps.google.com/maps?q={0},{1}&z=18 and needassistance\", myLat, myLong);\n    NavigationController.PresentModalViewController(message,true);\n  }\n}\npublic class CustomMessageComposeDelegate :MFMessageComposeViewControllerDelegate {\n  public override void  Finished(MFMessageComposeViewController controller,MessageComposeResult result) {\n      if (result == MessageComposeResult.Failed ||\n        result == MessageComposeResult.Cancelled) {\n        UIAlertView alert = new UIAlertView() {\n          Title=\"Message sending error\",\n          Message=\"Your message failed to send\"\n        }.Show();\n      }\n      controller.DismissViewController(true, null);\n  }\n}\n```", "```swift\nusing MonoTouch.SystemConfiguration;\nNetworkReachability reach = new NetworkReachability(\"www.bbc.co.uk\");\nNetworkReachabilityFlags flags = new NetworkReachabilityFlags();\nreach.TryGetFlags(out flags);\nConsole.WriteLine(\"Network flag = {0}\", flags.ToString());\n```", "```swift\nstring html = \"<html>\\n\";\nhtml += \"<title>Hello World</title>\\n\";\nhtml += \"<body>\\n\";\nhtml += \"<h1>Hello World!</h1>\\n\";\nhtml += \"</body>\\n\";\nhtml += \"</html>\";\n```", "```swift\nwebView.LoadHTMLString(string s, NSUrl baseurl);\n//The baseurl here would be null.\n```", "```swift\nvar documents = NSBundle.MainBundle.BundlePath;\nStringBuilder sb = new StringBuilder();\nsb.Append(File.ReadAllText(Path.Combine(documents,\"HTML/top.html\")));\n```", "```swift\nvar leagues = (from t in teams\n               from p in t.points\n               orderby p\n               select t).Take(4).ToList(); // takes top 4 only\nsb.Append(@\"<table width=100%>\");\nsb.Append(@\"<tr width=100%>\");\nsb.Append(@\"<td width=70%>Team name</td>\");\nsb.Append(@\"<td width=10%>Played</td>\");\nsb.Append(@\"<td width=10%>G Diff</td>\");\nsb.Append(@\"<td width=10%>Points</td>\");\nfor (int i = 0; i < 4; ++i) {\n  sb.Append(@\"<tr width=100%>\");\n  sb.Append(@\"<td width=30%>\" + teams[i].TeamName + \"</td>\");\n  sb.Append(@\"<td width=\"10\"%>\" + teams[i].TeamPlayed.ToString() +\"</td>\");\n  sb.Append(@\"<td width=\"10\"%>\" + teams[i].TeamGDiff.ToString() +\"</td>\");\n  sb.Append(@\"<td width=\"10\"%>\" + teams[i].TeamPts.ToString() +\"</td>\");\n  sb.Append(@\"</tr>\");\n}\nsb.Append(@\"</table>\");\nsb.Append(File.ReadAllText(Path.Combine(documents,\"HTML/bottom.html\")));\n```", "```swift\nwebView.LoadHTMLString(sb.ToString(), null);\n```", "```swift\nvar videoPlayer = new MPMoviePlayerController(NSUrl.FromString(\"http://www.youtube.com/watch?v=cVikZ8Oe_XA\"));\nvideoPlayer.Play();\n```", "```swift\nvar videoPlayer = new MPMoviePlayerController(NSUrl.FromFilename(\"myVideo.mp4\"));\nvideoPlayer.Play();\n```", "```swift\nUIImagePickerController ipcPicker = new UIImagePickerController()\n{\n  SourceType = UIImagePickerControllerSourceType.PhotoLibrary,\n  MediaTypes = new [] {\"public.movie\"},\n  Delegate = new ImagePickerDelegate(this)\n};\n```", "```swift\nvar camera = UIImagePickerControllerSourceType.Camera;\nUIImagePickerController ipcVideo = new UIImagePickerController()\n{\n    SourceType = camera,\n    MediaTypes = new [] {\"movies.public\"},\n    AllowEditing = true,\n    VideoQuality = UIImagePickerControllerQualityType.Medium,\n    Delegate = new ImagePickerDelegate(this)\n};\n```", "```swift\nUIVideo.SaveToPhotoAlbum(videoPath, delegate (string path,NSError error) {\n  Console.WriteLine(\"Video saved.\");\n});\n```", "```swift\nvar sound = SystemSound.FromFile(\"myAudio.caf\");\nsound.PlaySystemSound();\n```", "```swift\nsound.Vibrate.PlaySystemSound();\n```", "```swift\nvar fileToPlay = AVAudioPlayer.FromUrl(NSUrl.FromFilename(\"myAudio.mp3\"));\nfileToPlay.Play();\nfileToPlay.FinishedPlaying += delegate {\n  fileToPlay.Dispose(); // clean up\n};\n```", "```swift\nusing MonoTouch.MediaPlayer\nvar mpPlayer = new MPMusicPlayerController();\nmPlayer.Volume = 0.01f; // max volume – range 0 to 1\n```", "```swift\nvar settings = new NSObject[] {\n  NSNumber.FromFloat(22050.0f),\n  NSNumber.FromInt32((int)AudioFileType.WAVE),\n  NSNumber.FromInt32(2),\n  NSNumber.FromInt32((int)AVAudioQuality.Min)\n};\nvar keysToSettings = new NSObject[] {\n  AVAudioSettings.AVSampleRateKey,\n  AVAudioSettings.AVFormatKey,\n  AVAudioSettings.AVNumberOfChannelsKey,\n  AVAudioSettings.AVEncoderAudioQualityKey\n};\nvar dict = NSDictionary.FromObjectsAndKeys(settings,keysToSettings);\n```", "```swift\nvar docs = Environment.GetFolderPath(Environment.SpecialFolder.Personal);\nvar audio = NSUrl.FromFilename(Path.Combine(docs,\"testaudio.wav\");\nvar error = new NSError(); // catch the errors\n```", "```swift\nvar myRecorder = AVAudioRecorder.ToUrl(audio, dict, out error);\nmyRecorder.FinishedRecording += delegate {\n  Console.WriteLine(\"Audio file created\");\n  myRecorder.Dispose();\n};\nmyRecorder.RecordFor(10f);\n```"]