- en: Chapter 7. Distributing Your Social Application
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter we are going to review useful strategies to distribute and make
    our social application go viral.
  prefs: []
  type: TYPE_NORMAL
- en: We are going to promote our application on social channels; for example App
    Center. An important tool to keep in mind is the ability to send invitations to
    our friends on mobile devices through the Facebook iOS SDK.
  prefs: []
  type: TYPE_NORMAL
- en: Social channels
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Several channels are available to developers to distribute and promote their
    social application. We can use different strategies based on the type of application
    we are building. In this section we will focus on how to improve the visibility
    of our app through Facebook tools.
  prefs: []
  type: TYPE_NORMAL
- en: Feed and Timeline are two in-built tools our social application can use. In
    the previous chapter, we implemented features to publish status updates and new
    stories on a user's timeline.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter we are going to describe how to use the App Center to increase
    the visibility of our application. An important feature we can utilize is the
    ability to invite Facebook friends to our application.
  prefs: []
  type: TYPE_NORMAL
- en: App Center
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We already introduced the App Center in Chapter 1, *Introduction to the Facebook
    Platform*. In this section we are going to use it to expand our social application
    visibility.
  prefs: []
  type: TYPE_NORMAL
- en: The App Center is the main shop window for your application. As developers,
    we must take advantage of this important tool. Once our social application is
    available on the App Center, our audience has the potential to be over one billion
    users.
  prefs: []
  type: TYPE_NORMAL
- en: In order to have our application listed on the Facebook App Center, we will
    need to create the application page detail. This page detail will provide information
    on features that will make our application unique and appealing to the end user.
    Facebook reviews every page detail before the application is approved and listed
    in the App Center.
  prefs: []
  type: TYPE_NORMAL
- en: Let's start creating our application page detail from the Facebook App Dashboard.
  prefs: []
  type: TYPE_NORMAL
- en: For more details on this visit [https://developers.facebook.com/apps](https://developers.facebook.com/apps).
  prefs: []
  type: TYPE_NORMAL
- en: On the left side bar, select the application we are currently working on and
    click on the **Edit App** button.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/OxpNqWuI.jpg)'
  prefs: []
  type: TYPE_IMG
- en: App Dashboard Edit App
  prefs: []
  type: TYPE_NORMAL
- en: 'Select **App Details** on the left bar and you should be able to see something
    that resembles the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/PfcA2EDc.jpg)'
  prefs: []
  type: TYPE_IMG
- en: App details
  prefs: []
  type: TYPE_NORMAL
- en: 'When entering your application info, consider the following guidelines:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Description**: This is unique across the App Center'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Detailed Description**: This content should be more verbose than Description'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tagline**: This shouldn''t contain the **Display Name**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Privacy Policy URL**, **Terms of Service URL**, and **User Support Email/URL**:
    These are mandatory fields that need to be defined'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Through the App Details Dashboard you can customize the way your App Page Detail
    will look.
  prefs: []
  type: TYPE_NORMAL
- en: We need to be sure that the **Facebook Login** feature is enabled in order to
    see our social application on Facebook App Center. We will also enable **Deep
    Linking**, which will later be explained in the *Inviting friends* section in
    this chapter. In order to edit the application settings, we can click on the **Settings**
    link on the left side bar.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/A1IYTMl9.jpg)'
  prefs: []
  type: TYPE_IMG
- en: App Dashboard left side bar
  prefs: []
  type: TYPE_NORMAL
- en: 'Select **Native iOS App** as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/KrkT0hZB.jpg)'
  prefs: []
  type: TYPE_IMG
- en: iOS App Settings
  prefs: []
  type: TYPE_NORMAL
- en: When you enable iOS integration (**Facebook Login**/**Deep Linking**), you also
    need to define either iPhone App Store ID or iPad App Store ID.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have all the settings ready to go, we can go back to the App Detail
    Page Dashboard to take a look at the web preview. When we find the web preview
    acceptable, we can finally submit our Detail Page for review.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/XJjzD6jD.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Submit App Detail Page
  prefs: []
  type: TYPE_NORMAL
- en: We need to wait until our App Detail Page is approved before seeing it in the
    App Center.
  prefs: []
  type: TYPE_NORMAL
- en: Send to Mobile
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Send to Mobile feature was introduced to give users the ability to install
    mobile applications on their device while they are exploring Facebook Web Portal.
  prefs: []
  type: TYPE_NORMAL
- en: Send to Mobile is a new feature introduced by Facebook to facilitate the mobile
    application install flow. When users are browsing the App Center they are able
    to click on the **Send to Mobile** button. Once users click on that button they
    are logged in to Facebook Mobile through their mobile device, and Facebook will
    send an invitation to their device. By clicking on the notification, users will
    be redirected to the App Store or Google Play. This is possible through the **Deep
    Linking** setting.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cSEDS7w8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Send to Mobile
  prefs: []
  type: TYPE_NORMAL
- en: Inviting friends
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section we will describe a new application flow to invite our Facebook
    friends to use our new social application. In Chapter 3, *Connecting to a Facebook
    User Account*, we built `FBFriendPickerViewController` so that we could select
    multiple friends. In this section we are going to take advantage of that feature
    and build a Native and a Web Dialog to share a message with our friends.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to send App Invites, our Facebook Application needs to define the
    App on Facebook settings. Visit the Facebook App Dashboard and select our current
    application. Locate the App on Facebook section, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/BdAukWVe.jpg)'
  prefs: []
  type: TYPE_IMG
- en: App on Facebook Section
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the section and populate the necessary fields as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/CtiYJlAX.jpg)'
  prefs: []
  type: TYPE_IMG
- en: App on Facebook
  prefs: []
  type: TYPE_NORMAL
- en: 'If you don''t have a Canvas URL, please check out the following link in order
    to create one:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://developers.facebook.com/docs/appsonfacebook/tutorial/](https://developers.facebook.com/docs/appsonfacebook/tutorial/)'
  prefs: []
  type: TYPE_NORMAL
- en: The Canvas URL is necessary to send invites from our iOS application to our
    Facebook friends.
  prefs: []
  type: TYPE_NORMAL
- en: Now we can focus on coding the Invite feature in our social application.
  prefs: []
  type: TYPE_NORMAL
- en: Open Storyboard and select the Facebook Scene.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fBTESFOo.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Facebook Scene
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a new button underneath the Friends button, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/iGkgEgNk.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Facebook Scene with the Invite Friends button
  prefs: []
  type: TYPE_NORMAL
- en: 'Using **Utilities | Show Attribute Inspector** change the default button state
    to disabled by unchecking the **Enabled** checkbox. The following screenshot shows
    the Attribute Inspector Control Panel:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/IbIEf4x5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Control Panel—Enabled checkbox unchecked
  prefs: []
  type: TYPE_NORMAL
- en: 'Change the background color for **State Config** within the Button section
    under the Attribute section, as shown in the next screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/hqlSRZme.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Changing the background color
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the final result of tuning the button settings:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/CLyBhhRu.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Facebook Scene with disabled Invite Friends button
  prefs: []
  type: TYPE_NORMAL
- en: Open the Assistant Editor and verify the `LBFacebookViewController.m` file is
    open to your right.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/myd3JBEm.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Assistant Editor—LBFacebookViewController.m
  prefs: []
  type: TYPE_NORMAL
- en: Select the **Invite Friends** button and create a new action within `LBFacebookViewController`.
    This can be done by holding Control on your keyboard and dragging-and-dropping
    the blue arrow within the `.m` file. Name the new method `onInviteFriendsClick`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/VYJQQwAv.jpg)'
  prefs: []
  type: TYPE_IMG
- en: onInviteFriendsClick
  prefs: []
  type: TYPE_NORMAL
- en: 'The following snippet shows the code for the `onInviteFriends` method:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The preceding method invokes `sendAppInvite`. The `sendAppInvite` method will
    create the Web Dialog component that will allow users to select which friends
    to send the invite to.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The preceding code snippet shows the implementation for the `sendAppInvite`
    method. This method will instantiate a new web dialog component using the `FBWebDialogs`
    class. We used `FBWebDialogs` to post a new story on the user's Timeline in Chapter
    5, *Posting on Walls*.
  prefs: []
  type: TYPE_NORMAL
- en: The `presentRequestDialogModallyWithSession` class method will create a request
    dialog with the message and title information passed as parameters. Using the
    handler we can check whether the Web Dialog was completed or cancelled by the
    user. It can also check if the Facebook request succeeded or failed.
  prefs: []
  type: TYPE_NORMAL
- en: An important variable for the handler is `resultURL`. This provides information
    on the outcome of our request. Once we receive the response back from the Platform,
    we can parse the `resultURL` information using the `parseURLParams` helper to
    extract the new invite request ID.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'When we run the application, clicking on the Invite Friends button will create
    the new dialog as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/VH8cTeso.jpg)'
  prefs: []
  type: TYPE_IMG
- en: FBWebDialogs for sending invitations
  prefs: []
  type: TYPE_NORMAL
- en: The new dialog allows users to select friends from our Facebook list and use
    a search query to filter out the friends list displayed.
  prefs: []
  type: TYPE_NORMAL
- en: Once the users click on the **Send** button, the application will send a new
    request to the Facebook Platform to forward invites to selected friends. Facebook
    Platform will only show the invites to our friends if our Facebook Application
    has a Canvas URL value set.
  prefs: []
  type: TYPE_NORMAL
- en: After we send invites, our friends can open the invite on either the Facebook
    web or mobile app. We are interested in redirecting users to the App Store once
    they click on the Facebook Notification on their iOS devices.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cd3VmSm3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Facebook Notification
  prefs: []
  type: TYPE_NORMAL
- en: Once the user clicks on the Facebook notification, they will be redirected to
    the App Store to install our new social application.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter we learned a few ways to distribute our social application using
    the Facebook channels.
  prefs: []
  type: TYPE_NORMAL
- en: The main channel to distribute our social app is Facebook App Center. People
    will be able to discover our app based on categories or through the search functionalities.
  prefs: []
  type: TYPE_NORMAL
- en: The App Center also offers the ability to send a link to our mobile devices
    in order to install the application. So if we are surfing the App Center on the
    Facebook desktop version, we can send a text to our mobile number with the application
    link and directly install it.
  prefs: []
  type: TYPE_NORMAL
- en: Let's not forget about the most important resource we have on Facebook, our
    friends. We can easily create invites for them in order to share our social application.
  prefs: []
  type: TYPE_NORMAL
- en: These are just examples of how to promote our social application. We may use
    our own website, Twitter account, and any other tool that can give us more visibility.
  prefs: []
  type: TYPE_NORMAL
