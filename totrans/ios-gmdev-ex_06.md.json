["```swift\nfunc swipedRight(sender:UISwipeGestureRecognizer){\n  println(\"swiped right\")\n}\n\nfunc swipedLeft(sender:UISwipeGestureRecognizer){\n  println(\"swiped left\")\n}\n\nfunc swipedUp(sender:UISwipeGestureRecognizer){\n  println(\"swiped up\")\n}\n\nfunc swipedDown(sender:UISwipeGestureRecognizer){\n  println(\"swiped down\")\n}\n\noverride func didMoveToView(view: SKView) {\n\n  /* Setup your scene here */\n\n  let swipeRight:UISwipeGestureRecognizer = UISwipeGestureRecognizer(target: self, action: Selector(\"swipedRight:\"))\n  swipeRight.direction = .Right\n  swipeRight.numberOfTouchesRequired = 1\n  view.addGestureRecognizer(swipeRight)\n\n  let swipeLeft:UISwipeGestureRecognizer = UISwipeGestureRecognizer(target: self, action: Selector(\"swipedLeft:\"))\n  swipeLeft.direction = .Left\n  swipeRight.numberOfTouchesRequired = 1\n  view.addGestureRecognizer(swipeLeft)\n\n  let swipeUp:UISwipeGestureRecognizer = UISwipeGestureRecognizer(target: self, action: Selector(\"swipedUp:\"))\n  swipeUp.direction = .Up\n  swipeRight.numberOfTouchesRequired = 1\n  view.addGestureRecognizer(swipeUp)\n\n  let swipeDown:UISwipeGestureRecognizer = UISwipeGestureRecognizer(target: self, action: Selector(\"swipedDown:\"))\n  swipeDown.direction = .Down\n  swipeRight.numberOfTouchesRequired = 1\n  view.addGestureRecognizer(swipeDown)\n```", "```swift\nimport CoreMotion\n\nadd the following properties.\n\nvar airplane = SKSpriteNode()\nvar motionManager = CMMotionManager()\nvar destX:CGFloat = 0.0\n```", "```swift\noverride func didMoveToView(view: SKView) {\n    /* Setup your scene here */\n   // 1\n    airplane = SKSpriteNode(imageNamed: \"Airplane\")\n    airplane.position = CGPointMake(frame.size.width/2, frame.size.height/2)\n    self.addChild(airplane)\n      if motionManager.accelerometerAvailable == true\n{\n\n      // 2motionManager.startAccelerometerUpdatesToQueue\n(NSOperationQueue.currentQueue(), withHandler:{\n        data, error in\n          var currentX = self.airplane.position.x\n\n        // 3\n        if data.acceleration.x < 0 {\n        self.destX = currentX + CGFloat(data.acceleration.x * 100)\n        }\n        else if data.acceleration.x > 0 {\n        self.destX = currentX + CGFloat(data.acceleration.x * 100)\n        }\n      })\n      }\n  }\n```", "```swift\n    override func update(currentTime: CFTimeInterval) {\n        /* Called before each frame is rendered */\n        var action = SKAction.moveToX(destX, duration: 1)\n        self.airplane.runAction(action)\n    }\n    ```", "```swift\nfunc didBeginContact(contact: SKPhysicsContact)\n    {\n\n        var inOutActionWhenPlayerDied = SKAction.scaleBy(0.5, duration: 0.5)\n        var upActionWhenPlayerDied = SKAction.moveToY(self.player.size.height * 4, duration: 2)\n        var removeFromParent = SKAction.self.removeFromParent()\n\nself.player.runAction(SKAction.sequence(\n[inOutActionWhenPlayerDied,\ninOutActionWhenPlayerDied.reversedAction(),\nupActionWhenPlayerDied,removeFromParent]),\ngotoMenuScreen)\n\n    }\n```", "```swift\nfunc gotoMenuScreen()\n    {\n        self.player.removeFromParent()\n\n        let transitionEffect = SKTransition.doorsCloseHorizontalWithDuration(1.5)\n        menuSceneInstance = MenuScene(size: self.size , playbutton: \"Play\", background: \"BG\")\n        menuSceneInstance!.anchorPoint = CGPoint(x: 0.5, y: 0.5)\n        self.view?.presentScene(menuSceneInstance , transition:transitionEffect)\n\n    }\n```", "```swift\nvar btnJump:SKNode = SKSpriteNode(imageNamed: \"jump\")\n```", "```swift\nself.btnJump.position = CGPointMake(-(self.size.width/2.2),\n-(self.size.height/4))\n        self.addChild(btnJump)\n```", "```swift\n   override func didMoveToView(view: SKView)\n    {\n        self.physicsWorld.contactDelegate = self\n\n        // JUMP BUTTON POSITION SETTING AND ADDING ONTO THE SCREEN\n        self.btnJump.position = CGPointMake\n        (-(self.size.width/2.2), -(self.size.height/4))\n        self.addChild(btnJump)\n\n        addBackGround()\n        addRunningBar()\n        addPlayer()\n        addBlocks()\n        //addSpriteWithoutTexture()\n    }\n```", "```swift\nif self.btnJump.containsPoint(location)\n     {\n         println(\"tapped!\")\n         if self.onGround\n         {\n           self.velocityY = -18.0\n           self.onGround = false\n         }\n     }\n```", "```swift\noverride func touchesBegan(touches: NSSet, withEvent event: UIEvent) {\n        for touch: AnyObject in touches\n        {\n            let location = touch.locationInNode(self)\n            let node = self.nodeAtPoint(location)\n            if node.name == player.name\n            {\n                currentno++\n                //changeSpriteFromTextureAtlas()\n\n                if self.onGround\n                {\n                       self.velocityY = -18.0\n                       self.onGround = false\n                 }\n            }\n\n            // JUMP BUTTON ACTION\n            if self.btnJump.containsPoint(location)\n            {\n                println(\"tapped!\")\n                if self.onGround\n                {\n\n                    self.velocityY = -18.0\n                    self.onGround = false\n                }\n            }\n\n        }\n    }\n```"]