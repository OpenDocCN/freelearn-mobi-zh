- en: Chapter 10. Revisiting Our Game and More on iOS 9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Firstly, congratulations for overriding all the hurdles associated with the
    development of a game and making it to the last chapter. Now you are in a strong
    position to develop 2D games on your own, using the Sprite Kit game engine. In
    the previous chapter, we read about performance enhancements and added some extra
    functionality in our game, such as the scoring system, sounds, and player running
    animation.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we are going to finalize the game with a few final touches
    and discuss formidable bonus items that make your game super awesome. We will
    also read about integrating the game center to feed our game development experience
    to the fullest!
  prefs: []
  type: TYPE_NORMAL
- en: A recap on the development process of our Platformer game
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s recall the whole development process of our *Platformer* game by discussing
    each of the scenes constructed, starting from the main menu:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Main menu screen**: This is the first screen we see, once we start the game.
    We have four buttons on this screen. In the top left corner, you will see the
    **SCORE MENU** button, which will take you to the high scoreboard. In the top
    right corner, there is a button called **NODE MENU**, which will take you to the
    node menu screen. In the bottom left corner, there is a button called **SHADOW
    EFFECT**, which will display the shadow effect. Lastly, in the centre of the screen,
    is the **PLAY** button. On tapping this button, you will enter the game screen.![A
    recap on the development process of our Platformer game](img/4201_10_01.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Score menu screen**: This screen is the high scoreboard. You can see the
    high scorer''s name and score on this screen. In the bottom left corner of the
    screen is the **MAIN MENU** button, which will take you back to the main menu.![A
    recap on the development process of our Platformer game](img/4201_10_02.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Node menu screen**: This screen has various examples of nodes. You can see
    five different buttons called **SKCropNode**, **SKLightNode**, **SKEmitterNode**,
    **SKShapeNode**, and **SKVideoNode**. Along with these five buttons, there is
    a **BACK** button to take you back to the main menu screen. Each of the node buttons
    displays the respective example as the name of the button.![A recap on the development
    process of our Platformer game](img/4201_10_03.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SKCropNode screen**: This screen shows an example of `SKCropNode`. You can
    see the cropping of a node in this screen. Along with this, there is the **BACK**
    button to go back to the node menu screen.![A recap on the development process
    of our Platformer game](img/4201_10_04.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SKLightNode screen**: This screen shows an example of `SKLightNode`. You
    can see a light in the centre of the screen, which you can drag to see the changes
    in the shadow effect being created behind the images.![A recap on the development
    process of our Platformer game](img/4201_10_05.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SKEmitterNode screen**: This screen presents an example of `SKEmitterNode`.
    You can see emitted particles on this screen, and along with this, you can also
    note the change in the number of nodes and **fps** on the screen, due to the regular
    creation or destruction of the emitted particles.![A recap on the development
    process of our Platformer game](img/4201_10_06.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SKShapeNode screen**: This screen presents an example of `SKShapeNode`. You
    can see a shape in this screen, and as set before, by pressing the **BACK** button
    on the screen, you can go to the previous node menu screen.![A recap on the development
    process of our Platformer game](img/4201_10_07.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SKVideoNode screen**: This screen shows an example of **SKVideoNode**. You
    can see a video in the centre of the screen, and when you tap on the screen, it
    will start playing. You can press the **BACK** button to go to the previous screen.![A
    recap on the development process of our Platformer game](img/4201_10_08.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Shadow effect screen**: This screen shows the shadow effect. You can view
    the shadow effect running in the middle of the screen, and like the emitter node
    screen, you can note that the **fps** of this screen is changing due to the shadow
    effect.![A recap on the development process of our Platformer game](img/4201_10_09.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Game screen**: This is the game screen that has a **JUMP** and pause button.
    If the player hits any obstacle, the game terminates and the score list screen
    pops up.![A recap on the development process of our Platformer game](img/4201_10_10.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Score list screen**: This screen is displayed just after the game is over.
    It has a **Congratulations** note and a textbox for entering the name of the player.
    Once you have added the name of the player, you can tap on the **ADD PLAYER**
    button to save the name of the player.![A recap on the development process of
    our Platformer game](img/4201_10_11.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The preceding points briefly describe what each screen does and what elements
    are present on each screen.
  prefs: []
  type: TYPE_NORMAL
- en: Working further on the Platformer game
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'By now, we have worked on every essential aspect that is provided by Sprite
    Kit for game development. We have even integrated a scoring system, sound, and
    running animation to enhance the gaming experience. However, there is still room
    for further improvement; you can try out various effects and features, or just
    enhance the current features and make your game more exciting. Here are some ideas
    that you can, yourself, give a shot:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Obstacles**: Currently, we have only two types of obstacles; you can work
    on adding more obstacles in the game and make the gameplay a little more exciting.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Levels**: Currently, we have just three levels in the game, but you can work
    on adding more levels and make the game more challenging as the levels progress.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extra life**: If the player hits an obstacle, the player dies; you can work
    on giving an extra life to the player, and hence, increase the gameplay time too.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bonus points**: One more idea could be to add some bonus points when the
    player hits a special power-up. You can increase the score by an extra 100 or
    200 points when the player hits this bonus item.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sounds**: Our game currently has two sound effects: one is the background
    sound, and the other is the player''s death sound. You can add more sounds in
    the game, such as different music for the menu and gameplay. Apart from this,
    you can have separate music in the node menu screen, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These ideas are just a beginning; you can apply a whole lot of creativity to
    the game and make it the next super hit title around.
  prefs: []
  type: TYPE_NORMAL
- en: An introduction to Game Center
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Games on iOS and OS X platforms can utilize Apple's social gaming network called
    Game Center. Game players can compare scores on a leaderboard, track achievements,
    invite friends, or start a multiplayer game through auto-matching. The Game Center
    is a part of the Game Kit, which has two other functionalities apart from the
    Game Center.
  prefs: []
  type: TYPE_NORMAL
- en: The Game Center allows devices to connect to the Game Center service and exchange
    information. The Game Center also makes sure to add the information in the leaderboards
    and achievements. One can also play a multiplayer game using the Game Center service.
  prefs: []
  type: TYPE_NORMAL
- en: The advantages of Game Center in a game
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Game Center handles user authentication, friends, leaderboards, achievements,
    challenges, multiplayer, turn-based gaming, and invitations. In a way, it could
    be said that game center provides us with server services that are related to
    social interaction; something like its networking system. Some advantages of using
    the Game Center are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**No server side hassle**: With Game Center you don''t have to worry about
    setting up your own servers. You can use the servers of Game Center for most of
    the tasks required in a social game.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User authentication**: Game Center also helps in authenticating the user,
    so you don''t have to worry about duplicate IDs or any other such issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Friends**: You can play games with friends; players can interact with other
    players through an alias. Players can also set statuses, as well as mark other
    players with friends.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multiplayer games**: You can play multiplayer games via the Game Center.
    Players can invite their friends or be connected to anonymous players across the
    Game Center network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Turn-based gaming**: With this feature, you can have a turn-based network
    infrastructure. The match is played without all the players being connected to
    the Game Center simultaneously; the players play with each other via a turn-based
    method.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Leaderboards**: This allows the player to store the game scores at Game Center''s
    scoreboard. Each of the games will have a local and a network leaderboard, where
    you can compare your score with local and global players.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Achievements**: Players can achieve various goals or accomplishments in a
    game and unlock achievements to gain special bonuses.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Challenges**: This allows players to challenge other players and compete
    with them for a score or an achievement.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating Game Center in a game
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Integrating Game Center in games is not hard, and on a macro level, consists
    of two steps:'
  prefs: []
  type: TYPE_NORMAL
- en: One, is the implementation and integration of all of the Game Center's libraries
    that are required to be integrated in our game in Xcode.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The other step is to register the app on iTunes Connect, enable the Game Center
    support, and set up any leaderboard and achievements required in the game.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To integrate the Game Center in a Sprite Kit game, it is important to first
    have an Apple ID, so that you can register the game with Apple. Apart from having
    an Apple ID, it is also important to make some tweaks in the code and design to
    successfully incorporate the Game Center in your game. For example, you will have
    to do the sign-in (authentication) to the Game Center at game launch; if you wish
    to show leaderboards in the game, it is better to show them in the game itself,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's discuss both these steps in more detail.
  prefs: []
  type: TYPE_NORMAL
- en: Working with Xcode
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You have to perform activities, such as the creation or integration of an Apple
    ID, for the game to be developed and to enable the Game Center in the Xcode. Let''s
    have a look at the process:'
  prefs: []
  type: TYPE_NORMAL
- en: To add an Apple ID, first click on the **Xcode** menu, **Preferences** in your
    Xcode. The **Preferences** windows will appear. At the top of the **Preferences**
    window, there will be various tabs. Click on the **Accounts** tab.![Working with
    Xcode](img/4201_10_12.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, go to the bottom left corner of the window and click on the button with
    the **+** symbol to get a small menu having three options.![Working with Xcode](img/4201_10_13.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Out of the three options in the small menu, click on the add **Apple ID** option.
    In the window that pops up, enter your **Apple ID** and **Password** and click
    on the **Add** button.![Working with Xcode](img/4201_10_14.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now you will get a summary of your **Apple ID** in the **Accounts** tab.![Working
    with Xcode](img/4201_10_15.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, in the project navigator, click on the project target.![Working with Xcode](img/4201_10_16.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under the **General** tab in the **Identity** section, there will be a drop-down
    menu named **Team**. If you click on it, you will see the developer's name inside
    it. It will confirm that the Apple ID has been successfully integrated. Then,
    you have to click on it to make Xcode use your developer account. Xcode to create
    the App ID automatically.![Working with Xcode](img/4201_10_17.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, click on the **Capabilities** tab that is just next to **General**. In
    the list of all the provided capabilities, expand the **Game Center** one. Now,
    turn on the switch on the right-hand side of the list.![Working with Xcode](img/4201_10_18.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The first step of Game Center integration in the game is complete. We have enabled
    the Game Center in the game and also created an App ID to be used by iTunes Connect
    in the next step.
  prefs: []
  type: TYPE_NORMAL
- en: Working with iTunes Connect
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this step, we are going to create a record in the iTunes Connect for a new
    application, and then we will manage the Game Center part by creating leaderboards
    and achievements.
  prefs: []
  type: TYPE_NORMAL
- en: Go to iTunes Connect and use your developer credentials to sign in. Then click
    on the **My Apps** option, among all the options.![Working with iTunes Connect](img/4201_10_19.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, on the upper right corner, there is a **+** button to add a new iOS app.![Working
    with iTunes Connect](img/4201_10_20.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When you will click on the **New iOS App** button, you will get a popup window,
    asking for information regarding the new iOS app. The details asked are the **Company
    Name**, **Name** (app name), **Version**, **Primary Language**, **Bundle ID**,
    and **SKU**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Company Name** is the company''s or developer''s name (it cannot be changed
    later)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Next is the app name (**Name**), which cannot be longer than 255 characters
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Next is the **Primary Language** in the app, which you can choose from a drop-down
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The next option is the **Bundle ID**, which is a drop-down, and will be having
    a bundle ID of the app, present in Xcode
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: After that, you can add the **Version** number to be shown in the app store,
    and it should match the one used in Xcode
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, **SKU** is a unique ID for your app that is not visible on the app
    store
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Working with iTunes Connect](img/4201_10_21.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: After you click on **Create** in the **New iOS App** popup, you will reach a
    page where you'll have to fill in details such as description, pricing, rating,
    and other release related options. From the tabs, there will be an option called
    **Game Center**. Click on that button to reach the **Enable Game Center** page.![Working
    with iTunes Connect](img/4201_10_22.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As you just have a single game, click on **Enable for Single Game**, and then,
    Game Center will become enabled for our game.![Working with iTunes Connect](img/4201_10_23.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under that, there will be an option to add the leaderboard and achievements;
    you can add them as per your convenience.![Working with iTunes Connect](img/4201_10_24.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, we are through with the second step of the Game Center integration, which
    involves working with the iTunes Connect.
  prefs: []
  type: TYPE_NORMAL
- en: You have got a macro-level idea of what exactly has to be done to integrate
    the Game Center in a Sprite Kit game.
  prefs: []
  type: TYPE_NORMAL
- en: What's new in iOS 9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Apple announced iOS 9 in June 2015, and it will officially be released later
    this year. It is proposed to have some new features for the Sprite Kit framework.
    A few of them are mentioned in the following list:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Metal rendering support**: Metal provides lowest-overhead entry to the **Graphical
    Processing Unit** (**GPU**). This enables us to maximize the graphics and computational
    abilities of our apps and games. Metal has streamlined APIs, multi-threading support,
    and precompiled shaders, which help make our game or app superior in performance
    and efficiency.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Improved scene editor and new action editor**: The latest version of Xcode
    now has a much improved scene editor and a new action editor. This will help in
    designing scenes in Xcode in less time with less code work.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Camera nodes**: Camera node is an `SKCameraNode` object and helps in specifying
    a position in the scene from which the scene can be rendered. If we set the scene''s
    camera property to the camera node, then the scene is rendered using the camera
    node''s property. This makes it even easier to create 2D scrolling games, belt
    scrolling games, and so on. The camera node in the scene determines which part
    of the scene''s coordinate space should be visible in the view.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Positional audio**: We can add spatial audio effects with this feature. With
    this, the audio effects can track the position of the listener in a scene. An
    `SKAudioNode` object is used for the positional audio effect.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These features are a few of the important features launched by Apple for the
    Sprite Kit framework.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we discussed about our *Platformer* game and every aspect of
    it, starting from the first chapter of this book to the most recent one. We also
    discussed how you can apply new thoughts and ventures in this *Platformer* game
    and expand it further to make it the next big hit in the Apple app store. Lastly,
    we studied about Game Center and discussed in brief about its integration into
    a Sprite Kit game.
  prefs: []
  type: TYPE_NORMAL
- en: That being said, we are drawing the finishing line on our iOS game development
    book with the thought that a list of new games will storm the App Store, and this
    book will have been a great influence to the developers of those new platformer
    games. I am hoping to see some exciting titles from you guys. Good luck!
  prefs: []
  type: TYPE_NORMAL
