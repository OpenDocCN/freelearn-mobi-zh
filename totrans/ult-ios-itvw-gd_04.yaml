- en: '3'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Developer Branding
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Up to this point, we have discussed choosing our desired workplace and learned
    what the hiring process looks like. Now, I want to drill down a little about something
    not many developers pay attention to: developer branding.'
  prefs: []
  type: TYPE_NORMAL
- en: Developer branding refers to the way software developers present themselves
    and their work to the public. It can include elements such as a personal website,
    social media presence, and contributions to open source projects.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the importance of developing a brand
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contributing to the community
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Writing content
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Combining all and more
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding that every in-person interaction is important
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'By the end of the chapter, we will have the tools to start building our personal
    developer brand. First, let’s understand why it matters to our primary goal: passing
    the iOS interview.'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the importance of developing a brand
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book talks about iOS interviews, but that doesn’t mean it teaches us iOS
    development. Why? Because I assume that we already know iOS development; the problem
    is not our skill level but our ability to pass the hiring process.
  prefs: []
  type: TYPE_NORMAL
- en: But passing an iOS interview is more complicated than we think. It combines
    our iOS development knowledge, which needs to be comprehensive and extensive,
    and our familiarity with the hiring process. But there’s a new factor that can
    help us get our interview and the offer – and that’s our name, or in other words,
    our *brand*.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s dive into the meaning of a “brand”.
  prefs: []
  type: TYPE_NORMAL
- en: Learning what a brand is
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When we think of a brand, we usually imagine Apple, Google, or Coca Cola and
    we’re right! A brand is a product or service publicly distinguished from others.
    The product or the company achieves that by building a reputation, specializing
    in specific areas, and connecting feelings and thoughts to its name.
  prefs: []
  type: TYPE_NORMAL
- en: But – did you know that branding is not only for companies? In fact, it’s even
    not only for businesses. *We, as iOS developers, can build a brand and reputation
    of* *our own*.
  prefs: []
  type: TYPE_NORMAL
- en: But what does a “brand” mean? Are we a product?
  prefs: []
  type: TYPE_NORMAL
- en: In the modern labor market of iOS developers, we are considered to be products,
    and we need to sell and market ourselves just like any product. We also must brand
    ourselves to create demand, just like in any marketing process.
  prefs: []
  type: TYPE_NORMAL
- en: Usually, when we think of a brand, we imagine specific colors, fonts, or a unique
    logo. And that’s true – these are all visual representations of a brand. But this
    visual representation goes on top of a deeper layer underneath, and that layer
    contains much more than that. It includes values, history, contribution, quality,
    and specializations.
  prefs: []
  type: TYPE_NORMAL
- en: The Apple brand makes us imagine a superior user interface, a premium feel,
    and the “it just works” slogan. The Coca-Cola brand makes us imagine parties and
    freedom. If you spend more time thinking about it, you’ll find this is true for
    more brands.
  prefs: []
  type: TYPE_NORMAL
- en: And you know what? That’s where the concept of a “brand” meets us. Our goal
    is to bind specific attributes that set us apart from our name in the market of
    iOS developers. Once we do that, it can leverage our chances in the interview
    process.
  prefs: []
  type: TYPE_NORMAL
- en: Increasing our chances of passing the resume scanning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A strong brand can help us get an interview. Do you remember the **profile scanning**
    process we discussed in [*Chapter 1*](B18653_01.xhtml#_idTextAnchor014)? That’s
    where our developer’s name comes in handy. If we maintain our name and build it,
    chances are that the recruiter would be familiar with it. Bear in mind the *six
    to eight* seconds we’ve got for a first impression, and we can understand the
    importance of our reputation at this stage.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine going over a list of candidates and suddenly encountering a familiar
    name. In most cases, it will catch your eye, and you will spend more than the
    usual eight seconds reading their resume. So yes, the more time spent on our profile,
    the more chances we’ll get an invitation for a **screening interview**. This is
    how it works. And that also applies, of course, to the interview process itself
    up until the offer.
  prefs: []
  type: TYPE_NORMAL
- en: Increasing our chances of getting an offer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our brand influence doesn’t stop with getting an interview. It also helps us
    with the hiring process itself. During the hiring process, our name is part of
    the recruiting team’s internal discussions, and if we have a strong name, these
    discussions look different. Any way we look at it, it increases our chances of
    moving to the next stage in the process (or even skip several stages!) and getting
    an offer at last.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, the fact that we have a strong presence doesn’t mean we shouldn’t
    stay modest with a low profile. And that has nothing to do with branding or our
    skill. It is all about our personality and being a pleasant person to work with
    or be connected to.
  prefs: []
  type: TYPE_NORMAL
- en: 'Talking about connections leads us to my next point: networking.'
  prefs: []
  type: TYPE_NORMAL
- en: Expanding our network
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the side effects of strengthening our name is the *expansion of our professional
    network*. You know, some people don’t care about networking, either because they
    are not social in their personality or just want to focus on the job and nothing
    more. That is legit! But if we want to build a strong brand, our network is part
    of the bundle.
  prefs: []
  type: TYPE_NORMAL
- en: Networking means going to conferences and meetups. But it also implies participating
    in social media discussions and constantly creating content. These are all part
    of branding development, and that’s why it goes hand in hand.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we are (hopefully) convinced how important branding is, let’s understand
    how to build it.
  prefs: []
  type: TYPE_NORMAL
- en: So, where do we start?
  prefs: []
  type: TYPE_NORMAL
- en: How to start building your brand
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first and perhaps the primary rule is *focusing on what represents us as
    developers*. If we feel that being on a stage is not our style, we should find
    another lane. If writing **blog posts** makes us nervous and itchy, we might consider
    going in the **open source** direction. If we are not comfortable with what we’re
    doing, the chances we will last in the area are pretty low.
  prefs: []
  type: TYPE_NORMAL
- en: Building our name requires persistence and hard work. Without motivation and
    enjoyment, it will be difficult to achieve our goal.
  prefs: []
  type: TYPE_NORMAL
- en: Having said that, the second rule is that we *mustn’t stay in our comfort zone*.
    It may sound contradictory to the first rule, but I haven’t promised you a straightforward
    method. After all, life is complex.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, I will list some ideas of how we can develop our name, and
    I encourage you to at least *consider them as an option*. Experiencing them will
    be the best option.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s start with the basics: contributing to the community, and by that, to
    yourself.'
  prefs: []
  type: TYPE_NORMAL
- en: Contributing to the community
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I know that “contributing” sounds like a heavy task, but this field is so vast
    that you can also find your niche here. Contributing means not just participating
    in a project, but also helping other developers or sharing your achievements in
    coding.
  prefs: []
  type: TYPE_NORMAL
- en: One good thing about a contribution is the ability to share your solutions in
    the most practical way, which is *coding*.
  prefs: []
  type: TYPE_NORMAL
- en: We don’t need to come up with a new way to contribute, as there are many resources
    available to help us. In today’s age, there are numerous websites that host a
    large number of developers who share code, ask questions, and exchange ideas.
    One such website that you may be familiar with is **Stack Overflow**.
  prefs: []
  type: TYPE_NORMAL
- en: Being a star in Stack Overflow
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I’m not sure this book is the place to talk about what the **Stack Overflow**
    website is. But if you are unfamiliar with Stack Overflow, you probably haven’t
    been living on Earth in the past 15 years, so passing an iOS interview is the
    least of your problems.
  prefs: []
  type: TYPE_NORMAL
- en: 'But the big question is – what is your presence in Stack Overflow? Stack Overflow
    has four types of users:'
  prefs: []
  type: TYPE_NORMAL
- en: The first is the *passive reader*, which most developers conform to. In most
    cases, you are one of them. The passive reader reaches Stack Overflow by a search
    for a question in Google, but they never ask or answer a question because they
    are, well, passive.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The second profile is the *Asker*. The asker likes to ask questions but never
    answers or comments. As weird as it sounds, asking questions provides us with
    a rating, but more importantly, it exposes us to the community and opens new communication
    channels with other developers. The most important about asking a question is
    to do it right – duplicate questions will be removed or marked as spam. Also,
    we need to provide all details and code snippets and mark the correct tags.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To provide answers, we must actively enter Stack Overflow and search for questions
    or add comments. That is an entirely different use case for the site and leads
    us to the next user type.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *respondent* is the user type that bumps into a question and knows the solution,
    so they answer it. They don’t spend much time on the website but invest minimum
    effort to contribute. If we want to build our brand, we should be at least a respondent
    in Stack Overflow.
  prefs: []
  type: TYPE_NORMAL
- en: The last type is the *heavy contributor*. They enter Stack Overflow daily and
    search for questions to answer. This is a different type of user – they like to
    phrase solutions to complex problems, publish code snippets, and conduct discussions
    about best practices and mythology. It’s an excellent way to start our workday
    while going over questions in Stack Overflow, filtered by tags such as **iOS**,
    **Swift**, or **UIKit**. It is not an impossible mission to answer questions in
    Stack Overflow and gain a high reputation; it is just a matter of priorities and
    effort.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another lighter way to contribute is to comment on answers and questions. We
    use comments when we need clarifications, criticize a provided solution, or improve
    an answer or a question. These options open many new ways to be part of the discussions
    even though we don’t have the perfect answer to the question.
  prefs: []
  type: TYPE_NORMAL
- en: I mentioned all these types because to be a star, we should aim to be the fourth
    type. If we want to build our brand, contributing to the community using Stack
    Overflow is a great way to do that.
  prefs: []
  type: TYPE_NORMAL
- en: Once we get more ratings and experience in Stack Overflow, we can start contributing
    in new ways, such as editing questions or answers, flag questions, and even deleting
    them.
  prefs: []
  type: TYPE_NORMAL
- en: Contributing to Stack Overflow is a *win-win strategy* – you get to learn so
    much while getting noticed in the community.
  prefs: []
  type: TYPE_NORMAL
- en: Maintaining a public GitHub repository
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We had long discussions about having a great resume in [*Chapter 1*](B18653_01.xhtml#_idTextAnchor014).
    And while having a good resume is essential, we can complete our image as developers
    with an impressive **GitHub** repository. For example, when we talk about an architect,
    we expect to see his work. The same goes for a designer or a photographer. Why
    does it need to be a different case with **iOS** developers?
  prefs: []
  type: TYPE_NORMAL
- en: A GitHub repository is our code portfolio, our way to show what we are capable
    of. Pushing new updates, ideas, and libraries using social media can significantly
    influence how we look as iOS developers.
  prefs: []
  type: TYPE_NORMAL
- en: The big problem is – what do we need to put on our **public Git repository**?
    We can’t put our current project from work on it, can we?
  prefs: []
  type: TYPE_NORMAL
- en: Let’s break it down.
  prefs: []
  type: TYPE_NORMAL
- en: Sharing solutions using Swift Package or pods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We are iOS developers, and we’re good! It means that we’ve solved dozens, if
    not hundreds, of complex issues during our careers. Most likely, we are not the
    first that have encountered them. What if (just an idea, right?) we take one or
    some of our solutions and *share them with* *the world*?
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try to remember – did we have something unique that we were proud of?
    Did we build something in a way that can be used in a different project easily?
    If this is the case, we should create a public repository in our **GitHub** account
    and share it. The simplest way is using a **Swift Package** or a **pod**.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a side project
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Another option for a GitHub repository is creating a side project. Side projects
    allow us to show our code portfolio, how we build a project from scratch, and
    maintain it over time. Maintainance is one of the primary challenges with side
    projects. Here are some tips for maintaining our side project:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Many developers have ideas for side projects. Starting one is easy: set up
    a new repository, create a new project, and write some classes. The primary problem,
    well... is to finish these projects. And that’s the first tip with a side project.
    It is better to start a *modest* project but one that is practical to work on
    than an ambitious one that we never get to finish.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another thing to focus on is its *architecture rather than its functionality*.
    I’m not saying that our side project doesn’t need to function well, but we should
    remember its goal, and that’s showing what we can. If that’s the case, it needs
    to look good. Clean design patterns, good naming conventions, and single-responsibility
    principles are much more important than fixing one more bug.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The third tip is our *time management*. I know what it’s like to find a slot
    in our busy schedule to work on a side project. But do the math – 10 minutes a
    day sums up to five hours a month and 30 hours in half a year. We don’t have to
    quit our job or spend endless nights on a side project. We just need to manage
    our time better and have a long-term plan with realistic milestones.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: My last tip talks about *priorities in our work*. Trying to nail every minor
    issue that we bump into and striving for perfection won’t bring us to our goal
    and will just frustrate us. It is better to continually progress and leave leftover
    to-dos than be stuck on a non-issue. Remember that finishing a side project is
    much more important than making it perfect, especially from a mental point of
    view.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, a side project is a big deal for some of us. We need ideas, ambition, and
    time. But we don’t have to go that far, as there are other ways to show what we
    can.
  prefs: []
  type: TYPE_NORMAL
- en: Adding gists and showcase projects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: What is a binary tree search?
  prefs: []
  type: TYPE_NORMAL
- en: A binary tree search is a data structure consisting of nodes arranged in a hierarchical
    order, where each node has at most two children. It allows for efficient searching,
    insertion, and deletion of nodes by leveraging the property that the left subtree
    of a node contains only nodes with keys less than the node’s key, and the right
    subtree contains only nodes with keys greater than the node’s key. Although binary
    tree search isn’t in the scope of this chapter, this is a good opportunity to
    learn about it, implement it in Swift, and create a nice gist to share with the
    world.
  prefs: []
  type: TYPE_NORMAL
- en: A gist is a GitHub feature that allows us to share code snippets. Do we need
    to show how to use a **regular expression** to match an email address form? Great!
    A gist is perfect for that.
  prefs: []
  type: TYPE_NORMAL
- en: Remember that by writing code daily we perform innovative and sophisticated
    tasks. So, let’s take these ideas and create meaningful content. Once we have
    a lead for a written code snippet or a project, it is essential to add gists correctly.
    Like everything in life, focusing is the key to success.
  prefs: []
  type: TYPE_NORMAL
- en: How to focus on what matters
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let’s start with the obvious – this chapter is not a GitHub tutorial, and this
    book doesn’t explain how to develop an app to solve Swift algorithm problems.
    The main goal is to help you get an interview and pass it like a king. Having
    said that, we now understand how important it is to strive for a good-looking
    GitHub account.
  prefs: []
  type: TYPE_NORMAL
- en: As I said earlier, if our goal is branding, there’s a significant weight to
    how our GitHub looks like. Let’s break down what that means.
  prefs: []
  type: TYPE_NORMAL
- en: Making our README file look more interesting
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Let’s go back again to the resume scanning in the *Building our resume* section
    of [*Chapter 1*](B18653_01.xhtml#_idTextAnchor014) – remember that issue? We know
    that we have six to eight seconds for the recruiter to scan our portfolio and
    decide whether they keep on reading or move it to the trash. This six-to-eight-second
    rule also applies to code documentation scanning; not just resumes.
  prefs: []
  type: TYPE_NORMAL
- en: Every GitHub repository has a **README** file, which appears when you enter
    the repository on the web. Usually, it contains installation and usage instructions,
    but it always starts with explaining the project.
  prefs: []
  type: TYPE_NORMAL
- en: That explanation allows us to market our project and make it more interesting.
    Just like our personal summary description, we don’t start with what the code
    does but rather what problem it solves and why that problem is crucial.
  prefs: []
  type: TYPE_NORMAL
- en: Another way to make our project looks more attractive is by adding images or
    even a GIF animation (depending on the project type). Adding artwork catches the
    eye and makes the scanning more effective.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we have an excellent README file, let’s move to the main course: the
    code, which must be readable.'
  prefs: []
  type: TYPE_NORMAL
- en: Writing readable code
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Let’s list some tips for a readable code:'
  prefs: []
  type: TYPE_NORMAL
- en: Adding explicit *comments* that explain the reasons for our choices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choosing good *naming conventions* for classes and variables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using *design patterns* correctly and by the book (unless the book is ours,
    of course)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Writing **unit tests** that describe what the code does and its expectations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are some of the ways to make our code shine!
  prefs: []
  type: TYPE_NORMAL
- en: Remember that the developer who will review our code will not be the recruiter,
    but the hiring manager or the team tech lead. They know a thing or two about iOS
    development, so our code needs to look perfect and complete.
  prefs: []
  type: TYPE_NORMAL
- en: Completeness of our project
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: What about finishing our project before we make it public? That’s an important
    point. Don’t leave half-baked projects or even code snippets. It is better to
    finish a small project than to plan and not finish a big one. We discussed that
    previously, but when showing it to the world, it gets even more crucial.
  prefs: []
  type: TYPE_NORMAL
- en: A side project is a big deal. It takes time and effort, but it also gives us
    *points* when we build our brand.
  prefs: []
  type: TYPE_NORMAL
- en: If we want to work on a project but don’t want to start our own, there’s another
    way to do that, and maybe that’s more suitable for us.
  prefs: []
  type: TYPE_NORMAL
- en: Joining an open source project
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are many reasons why developers like contributing to an **open source**
    project. One of the top reasons is the *drive to change* a product we often use.
    Another reason is *empowering our skills*. We are not here to talk about how open
    source projects help us as developers but how contributing to an open source helps
    us build *our brand*.
  prefs: []
  type: TYPE_NORMAL
- en: We said earlier that a brand should reflect the developer we are or the style
    of the developer we want to be.
  prefs: []
  type: TYPE_NORMAL
- en: An open source project requires different skills (both soft and hard) than a
    personal side project, and contributing to an open source project brings these
    skills to the front. So, before we **fork** a Git repository and add new code,
    we must confirm that this work fits our personality.
  prefs: []
  type: TYPE_NORMAL
- en: Previously, I said that the most critical thing about building our brand is
    to make sure that whatever way we choose is suitable for us and the image we want
    to create. Enjoyment and fun play a significant role here! And contributing to
    an open source project can be frustrating at first. We must dive into an existing
    project, handle intensive communication with other developers, and get used to
    cruel pull requests rejected with insulting comments. Is this what we imagined
    when we planned on joining an open source project?
  prefs: []
  type: TYPE_NORMAL
- en: 'Many developers want to share their knowledge and lessons learned with the
    world, but open source projects don’t always fit their skill set. Fortunately,
    there is another way of achieving that: writing.'
  prefs: []
  type: TYPE_NORMAL
- en: Writing content
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another way of building a brand is content writing. **Blogs**, tutorials, or
    even books are all great examples of content writing that can leverage our developer
    brand.
  prefs: []
  type: TYPE_NORMAL
- en: The reason it has a significant influence on our brand is apparent, but content
    writing can help us pass the interview process in other ways as well, and it is
    considered a win-win solution. Let’s elaborate on that next.
  prefs: []
  type: TYPE_NORMAL
- en: Being experts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Reading a professional article is excellent for learning, but writing a professional
    article is another level of profundity.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine what is required from us when writing an article – research, coding,
    edge case covering, the ability the explain why things are done the way they are,
    and managing alternative discussions.
  prefs: []
  type: TYPE_NORMAL
- en: We understand now that writing an article is not really writing – it’s learning!
    It means being an expert in a specific field and covering it from all angles.
    The more blog posts we write, the more areas we cover, and that’s a fantastic
    starting point for our hiring process.
  prefs: []
  type: TYPE_NORMAL
- en: But knowledge coverage is not everything. It also provides us the capability
    to explain that knowledge, which leads us to my next point.
  prefs: []
  type: TYPE_NORMAL
- en: Improving wording and expression capabilities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another skill we get when writing content is the wording and self-expression
    ability. Content writing organizes our thoughts coherently, allowing us to list
    cons and pros, discuss alternatives and explain (for example) why we need to force
    wrap an **IBOutlet** and not make it optional.
  prefs: []
  type: TYPE_NORMAL
- en: The **self-expression capability** is crucial in interviews. Starting from the
    next chapter, we will learn how to answer questions, but mostly, we will learn
    that there are many questions without clear answers. In these cases, our ability
    to discuss or even debate these questions is essential.
  prefs: []
  type: TYPE_NORMAL
- en: Writing content creates discussions not only in interviews but also as a reaction
    to the blog post itself. So, here’s another benefit we have! Connections!
  prefs: []
  type: TYPE_NORMAL
- en: Increasing our network
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Remember when I said content writing is a “win-win” effort? Now, we see that
    it’s a gift that never stops giving.
  prefs: []
  type: TYPE_NORMAL
- en: After we publish our post, we will start getting responses from iOS developers
    worldwide. Each answer is a lead for a discussion thread, and that thread creates
    a new connection.
  prefs: []
  type: TYPE_NORMAL
- en: Also, each blog post brings new followers, which in turn adds more questions
    and creates new connections, so that process is even exponential!
  prefs: []
  type: TYPE_NORMAL
- en: An extensive network and a high number of followers can help us get our first
    interview during the interview process. I remember interviewing for a job where
    the interviewer was one of my followers, and he even used one of my blog posts
    to solve his problem. That illuminates the interview in a different light, doesn’t
    it?
  prefs: []
  type: TYPE_NORMAL
- en: 'The example I just gave also brings up another benefit: exposing our knowledge
    to the world.'
  prefs: []
  type: TYPE_NORMAL
- en: Making the world aware of our knowledge
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The mission of passing an interview is part of a competitive world where we
    need to “play the game”.
  prefs: []
  type: TYPE_NORMAL
- en: It’s not enough that we know how smart we are. We need others to see that as
    well. That may sound superficial, I know. But yes – that’s part of building a
    brand and marketing ourselves and our capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: The fourth benefit of sharing our knowledge is *exposing to the world what we
    know*, how we think, and our abilities to perform research in new and exciting
    fields. When we think of it, managing a blog or having our own book opens a window
    to our knowledge, our mindset, and our way of thinking. This might sound creepy
    initially, but it can significantly benefit applying for a job posting when we
    do it right.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s think about it for a second – our first and perhaps most challenging goal
    is passing the resume scanning stage, which we can only do if the reviewer thinks
    we are suitable for the role. For some reviewers, the fact that we have our iOS
    development knowledge laid bare acts as a certificate of what we are capable of.
    It’s a huge benefit, especially if the reviewer is also the hiring manager.
  prefs: []
  type: TYPE_NORMAL
- en: So, we can see we have several advantages of content writing, and it’s practically
    a win-win situation. But how does it fit with other ways we discussed earlier?
    We will see that in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Combining all and more
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You know, writing content is excellent and valuable to our brand development
    effort. But the real power comes when we use the content as an infrastructure
    for our brand and combine it with the other methods we mentioned, such as being
    active in GitHub and Stack Overflow.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if we write an article about a specific topic, we can *build upon
    it*. A GitHub repository explains our central idea, and by doing so, we earn another
    way to share our skills. We can then use our repository or article as a reference
    when answering a question in Stack Overflow and gain even more exposure.
  prefs: []
  type: TYPE_NORMAL
- en: But what can really make a big difference is upgrading that package to the extreme.
    Two great options that can make us stand out are *speaking at conferences* and
    *authoring a book*. I didn’t mention them before because, unlike the other options,
    being a public speaker or writing a book requires special skills, time, and resources.
  prefs: []
  type: TYPE_NORMAL
- en: Dreaming about standing on a stage or seeing our book on Amazon is thrilling
    and exciting. These two options can leverage our brand to new highs and open new
    doors in the industry.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before we summarize the chapter, I want to take us back to the ground and talk
    about the basics of the basics: in-person interactions.'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding that every in-person interaction is important
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [*Chapter 2*](B18653_02.xhtml#_idTextAnchor041), we discussed how important
    it is to leave a good impression in interviews. But the discussion was in the
    context of getting hired. We should remember that impressing people in person
    is not just essential for interviews, but also for creating our brand.
  prefs: []
  type: TYPE_NORMAL
- en: Open source contributions, Stack Overflow questions, blog followers, and more
    are all examples of places where we are *required to handle a certain number of
    interactions* with other developers.
  prefs: []
  type: TYPE_NORMAL
- en: Looking forward, these interactions also help us to shape our image in the industry.
    Sometimes, that single interaction is the only chance we’ve got to show who we
    are to other developers.
  prefs: []
  type: TYPE_NORMAL
- en: What is the impression that we leave behind? Like every industrial product,
    our name goes in front of us and is built upon thousands of talks, help sessions,
    and correspondences.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We just covered an exciting and unique topic! Developer branding is way beyond
    just Swift and UIKit practicing – it can also help us in our development career.
    But what’s more interesting is that its scope is very flexible. We can start with
    just a code snippet in Gist and move up until we’re speaking in public and writing
    books. We can choose where we want to be according to our resources and skills.
  prefs: []
  type: TYPE_NORMAL
- en: We’ve learned what a brand is, why contributing is part of it, how to maintain
    a GitHub repository, be a star in Stack Overflow, and produce our professional
    content.
  prefs: []
  type: TYPE_NORMAL
- en: By now, we should have the essential tools to start our branding development
    plan toward becoming a rising star in the iOS development community!
  prefs: []
  type: TYPE_NORMAL
- en: 'But one thing is missing: our ability to successfully pass the technical interview…
    (after all, this is why we are all here, right?). Fortunately, in our next chapter,
    we will discuss something we all enjoyed learning – Swift language and coding.
    The fun is just beginning.'
  prefs: []
  type: TYPE_NORMAL
