["```kt\n    using UnityEngine;\n    using UnityEngine.SceneManagement; // LoadScene\n    public class MainMenuBehaviour : MonoBehaviour\n    {\n        /// <summary>\n        /// Will load a new scene upon being called\n        /// </summary>\n        /// <param name=\"levelName\">The name of the level\n        /// we want to go to</param>\n        public void LoadLevel(string levelName)\n        {\n            SceneManager.LoadScene(levelName);\n        }\n    }\n    ```", "```kt\n    using UnityEngine;\n    using UnityEngine.SceneManagement; // SceneManager\n    public class PauseScreenBehaviour : MainMenuBehaviour\n    {\n        /// <summary>\n        /// If our game is currently paused\n        /// </summary>\n        public static bool paused;\n        [Tooltip(\"Reference to the pause menu object to\n            turn on/off\")]\n        public GameObject pauseMenu;\n        /// <summary>\n        /// Reloads our current level, effectively\n        /// \"restarting\" the game\n        /// </summary>\n        public void Restart()\n        {\n            SceneManager.LoadScene(SceneManager\n                .GetActiveScene().name);\n        }\n        /// <summary>\n        /// Will turn our pause menu on or off\n        /// </summary>\n        /// <param name=\"isPaused\"></param>\n        public void SetPauseMenu(bool isPaused)\n        {\n            paused = isPaused;\n            /* If the game is paused, timeScale is 0,\n               otherwise 1 */\n            Time.timeScale = (paused) ? 0 : 1;\n            pauseMenu.SetActive(paused);\n        }\n        void Start()\n        {\n            /* Must be reset in Start or else game will be\n               paused upon restart */\n            paused = false;\n        }\n    }\n    ```", "```kt\n    /// <summary>\n    /// FixedUpdate is a prime place to put physics\n    /// calculations happening over a period of time.\n    /// </summary>\n    void FixedUpdate()\n    {\n        /* If the game is paused, don't do anything */\n        if (PauseScreenBehaviour.paused)\n        {\n            return;\n        }\n        // Check if we're moving to the side\n        var horizontalSpeed = Input.GetAxis(\"Horizontal\")\n            * dodgeSpeed;\n        // Rest of the FixedUpdate function...\n    ```", "```kt\n    /// <summary>\n    /// Update is called once per frame\n    /// </summary>\n    private void Update()\n    {\n        /* Using Keyboard/Controller to toggle pause menu\n        */\n        if (Input.GetButtonDown(\"Cancel\"))\n        {\n            // Get the pause menu\n            var pauseBehaviour =\n                GameObject.FindObjectOfType\n                    <PauseScreenBehaviour>();\n    // Toggle the value\n            pauseBehaviour.SetPauseMenu\n                (!PauseScreenBehaviour.paused);\n        }\n        /* If the game is paused, don't do anything */\n        if (PauseScreenBehaviour.paused)\n        {\n            return;\n        }\n        /* Check if we are running either in the Unity\n           editor or in a standalone build.*/\n        #if UNITY_STANDALONE || UNITY_WEBPLAYER ||\n            UNITY_EDITOR\n        // Rest of the Update function…\n    ```"]