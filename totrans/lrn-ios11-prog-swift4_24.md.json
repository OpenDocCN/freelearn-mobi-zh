["```\nimport LetsEatDataKit\n```", "```\npublic class RestaurantItem\n```", "```\npublic class RestaurantItem: NSObject, MKAnnotation\npublic var name: String?\npublic var cuisines:[String] = []\npublic var latitude: Double?\npublic var longitude:Double?\npublic var address:String?\npublic var postalCode:String?\npublic var state:String?\npublic var imageURL:String?\npublic var restaurantID:Int?\npublic var title: String?\npublic var subtitle: String?\npublic var coordinate: CLLocationCoordinate2D\npublic enum CodingKeys: String, CodingKey\n```", "```\npublic struct RestaurantAPIManager\npublic static func loadJSON(file name:String) -> [[String:AnyObject]]\n```", "```\npublic class RestaurantDataManager\npublic func fetch(by location:String, withFilter:String=\"All\",  completionHandler:() -> Swift.Void)\npublic func numberOfItems() -> Int\npublic func restaurantItem(at index:IndexPath) -> RestaurantItem\n```", "```\npublic init() {}\n```", "```\nlet manager = RestaurantDataManager()\n```", "```\nimport LetsEatDataKit\n```", "```\n@IBOutlet var lblTitle:UILabel!\n@IBOutlet var lblCity:UILabel!\n@IBOutlet var lblCuisine:UILabel!\n```", "```\nlblTitle\nlblCity\nlblCuisine\n```", "```\n@IBOutlet var collectionView: UICollectionView!\nlet manager = RestaurantDataManager()\nvar selectedRestaurant:RestaurantItem?\n```", "```\nprivate extension MessagesViewController {\n    func setupCollectionView() {\n        let flow = UICollectionViewFlowLayout()\n        flow.sectionInset = UIEdgeInsets(top: 7, left: 7, bottom: 7, right: 7)\n        flow.minimumInteritemSpacing = 0\n        flow.minimumLineSpacing = 7\n        collectionView.collectionViewLayout = flow\n        collectionView.delegate = self\n        collectionView.dataSource = self\n    }\n}\n```", "```\nfunc initialize() {\n   setupCollectionView()\n   manager.fetch(by: \"Chicago\", completionHandler: {\n         self.collectionView.reloadData()\n   })\n}\n```", "```\noverride func viewDidLoad() {\n    super.viewDidLoad()\n    initialize()\n}\n```", "```\nextension MessagesViewController:UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout {\n}\n```", "```\nfunc numberOfSections(in collectionView: UICollectionView) -> Int {\n    return 1\n}\n\nfunc collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {\n    return manager.numberOfItems()\n}\n\nfunc collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {\n```", "```\n    let cell = collectionView.dequeueReusableCell(withReuseIdentifier: \"restaurantCell\", for: indexPath) as! RestaurantMessageCell\n    let item = manager.restaurantItem(at: indexPath)\n    if let name = item.name { cell.lblTitle.text = name }\n    if let address = item.address { cell.lblCity.text = address }\n    if let cuisine = item.subtitle { cell.lblCuisine.text = cuisine }\n    return cell\n}\n\nfunc collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {\n    let cellWidth = self.collectionView.frame.size.width - 14\n    return CGSize(width: cellWidth, height: 78)\n}\n\nfunc collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {\n    selectedRestaurant = manager.restaurantItem(at: indexPath)\n    guard let restaurant = selectedRestaurant else { return }\n    createMessage(with: restaurant)\n}\n```", "```\nfunc createMessage(with restaurant:RestaurantItem) {\n   if let conversation = activeConversation {\n         let layout = MSMessageTemplateLayout()\n         layout.image = UIImage(named: \"restaurant-detail\")\n         layout.caption = \"Table for 7, tonight at 10:00 PM\"\n         layout.imageTitle = restaurant.name\n         layout.imageSubtitle = restaurant.cuisine\n         let message = MSMessage()\n         message.layout = layout\n         message.url = URL(string: \"emptyURL\")\n         conversation.insert(message, completionHandler: { (error: Error?)  in\n               if error != nil {\n                     print(\"there was an error \\(error)\")\n               }\n               else {\n                     self.requestPresentationStyle(.compact)\n               }\n         })\n   }\n}\n```", "```\nfunc collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {\n   selectedRestaurant = manager.restaurantItem(at: indexPath)\n   guard let restaurant = selectedRestaurant else { return }\n   createMessage(with: restaurant)\n}\n```"]