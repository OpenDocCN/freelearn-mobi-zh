["```swift\nthis.View.AddSubview(this.subView);\n\n```", "```swift\n    UIButton buttonChangeColor;\n    private void CreateButton (){\n    RectangleF viewFrame = this.subView.Frame;\n    RectangleF buttonFrame = new RectangleF (10f, viewFrame.Bottom - 200f, viewFrame.Width - 20f, 50f);\n    this.buttonChangeColor = UIButton.FromType (UIButtonType.RoundedRect);\n    this.buttonChangeColor.Frame = buttonFrame;\n    this.buttonChangeColor.SetTitle (\"Tap to change view color\", UIControlState.Normal);\n    this.buttonChangeColor.SetTitle (\"Changing color...\", UIControlState.Highlighted);\n    this.buttonChangeColor.TouchUpInside += this.buttonChangeColor_TouchUpInside;\n    this.subView.AddSubview (this.buttonChangeColor);\n    }\n    bool isRed;\n    private void buttonChangeColor_TouchUpInside (object sender, EventArgs e){\n    if (this.isRed) {\n    this.subView.BackgroundColor = UIColor.LightGray;\n    this.isRed = false;\n    } else {\n    this.subView.BackgroundColor = UIColor.Red;\n    this.isRed = true;\n    }\n    }\n\n    ```", "```swift\n    this.CreateButton ();\n\n    ```", "```swift\n    // A button to change the view's background color\n    UIButton buttonChangeColor;\n\n    ```", "```swift\n    RectangleF viewFrame = this.subView.Frame;\n    RectangleF buttonFrame = new RectangleF (10f, viewFrame.Bottom - 200f, viewFrame.Width - 20f, 50f);\n\n    ```", "```swift\n    //Create the button.\n    this.buttonChangeColor = UIButton.FromType (UIButtonType.RoundedRect);\n    this.buttonChangeColor.Frame = buttonFrame;\n\n    ```", "```swift\n    // Set the button's titles\n    this.buttonChangeColor.SetTitle (\"Tap to change view color\", UIControlState.Normal);\n    this.buttonChangeColor.SetTitle (\"Changing color...\", UIControlState.Highlighted);\n\n    ```", "```swift\n    this.buttonChangeColor.TouchUpInside += this.buttonChangeColor_TouchUpInside;\n    this.subView.AddSubview (this.buttonChangeColor);\n\n    ```", "```swift\n    if (this.isRed) {\n\n    this.subView.BackgroundColor = UIColor.LightGray;\n    this.isRed = false;\n    } else {\n    this.subView.BackgroundColor = UIColor.Red;\n    this.isRed = true;\n    }\n\n    ```", "```swift\n    UILabel labelInfo;\n    private void CreateLabel (){\n    RectangleF viewFrame = this.subView.Frame;\n    RectangleF labelFrame = new RectangleF (10f, viewFrame.Y + 20f, viewFrame.Width - 20f, 100f);\n    this.labelInfo = new UILabel (labelFrame);\n    this.labelInfo.Lines = 3;\n    this.labelInfo.TextAlignment = UITextAlignment.Center;\n    this.labelInfo.BackgroundColor = UIColor.Clear;\n    this.labelInfo.TextColor = UIColor.White;\n    this.labelInfo.ShadowColor = UIColor.DarkGray;\n    this.labelInfo.ShadowOffset = new SizeF (1f, 1f);\n    this.labelInfo.Text = \"Tap the button below to change the background color.\" + \" Notice the button's title change while it is being tapped!\";\n    //this.labelInfo.AdjustsFontSizeToFitWidth = true;\n    this.subView.AddSubview (this.labelInfo);\n    }\n\n    ```", "```swift\n    this.CreateLabel();\n\n    ```", "```swift\n    // A label that displays some text\n    UILabel labelInfo;\n\n    ```", "```swift\n    //Create the appropriate rectangles for the label's frame\n    RectangleF viewFrame = this.subView.Frame;\n    RectangleF labelFrame = new RectangleF (10f, viewFrame.Y + 20f, viewFrame.Width - 20f, 100f);\n\n    ```", "```swift\n    //Create the label\n    this.labelInfo = new UILabel (labelFrame);\n    this.labelInfo.Lines = 3;\n    this.labelInfo.TextAlignment = UITextAlignment.Center;\n    this.labelInfo.BackgroundColor = UIColor.Clear;\n\n    ```", "```swift\n    // Set text color and shadow\n    this.labelInfo.TextColor = UIColor.White;\n    this.labelInfo.ShadowColor = UIColor.DarkGray;\n    this.labelInfo.ShadowOffset = new SizeF (1f, 1f);\n\n    ```", "```swift\n    // Set text to be displayed\n    this.labelInfo.Text = \"Tap the button below to change the background color.\" + \" Notice the button's title change while it is being tapped!\";\n\n    ```", "```swift\n    this.mainView.AddSubview (this.labelInfo);\n\n    ```", "```swift\n//this.labelInfo.AdjustsFontSizeToFitWidth = true;\n\n```", "```swift\nthis.labelInfo.Font = UIFont.FromName(\"Helvetica-Bold\", 17f);\n\n```", "```swift\n    public override ViewDidLoad(){\n    base.ViewDidLoad();\n    this.imageDisplay.ContentMode = UIViewContentMode.ScaleAspectFit;\n    this.imageDisplay.Image = UIImage.FromFile(\"Toroni.jpg\");\n    }\n\n    ```", "```swift\nthis.imageDisplay.Image = UIImage.FromFile(\"Toroni.jpg\");\n\n```", "```swift\nthis.imageDisplay = UIImage.FromBundle(\"Default\");\n\n```", "```swift\n    public override void ViewDidLoad (){\n    base.ViewDidLoad ();\n    this.buttonFinished.Enabled = false;\n    this.buttonFinished.TouchUpInside += delegate {\n    this.myTextView.ResignFirstResponder();\n    } ;\n    this.myTextView.Delegate = new MyTextViewDelegate(this);\n    }\n    Add the following nested class:\n    private class MyTextViewDelegate : UITextViewDelegate{\n    public MyTextViewDelegate (TextViewAppViewController parentController){\n    this.parentController = parentController;\n    }\n    private TextViewAppViewController parentController;\n    public override void EditingStarted (UITextView textView){\n    this.parentController.buttonFinished.Enabled = true;\n    }\n    public override void EditingEnded (UITextView textView){\n    this.parentController.buttonFinished.Enabled = false;\n    }\n    public override void Changed (UITextView textView){\n    Console.WriteLine (\"Text changed!\");\n    }\n    }//end void MyTextViewDelegate\n\n    ```", "```swift\nprivate class MyTextViewDelegate : UITextViewDelegate{\npublic MyTextViewDelegate (TextViewAppViewController parentController){\nthis.parentController = parentController;\n}\nprivate TextViewAppViewController parentController;\n\n```", "```swift\npublic override void EditingStarted (UITextView textView){\nthis.parentController.buttonFinished.Enabled = true;\n}\npublic override void EditingEnded (UITextView textView){\nthis.parentController.buttonFinished.Enabled = false;\n}\npublic override void Changed (UITextView textView){\nConsole.WriteLine (\"Text changed!\");\n}\n\n```", "```swift\nthis.buttonFinished.TouchUpInside += delegate {\nthis.myTextView.ResignFirstResponder ();\n};\n\n```", "```swift\nthis.myTextView.Delegate = new MyTextViewDelegate (this);\n\n```", "```swift\n    private NSObject kbdWillShow, kbdDidHide;\n    public override void ViewDidLoad(){\n    base.ViewDidLoad();\n    this.emailField.KeyboardType = UIKeyboardType.EmailAddress;\n    this.emailField.ReturnKeyType = UIReturnKeyType.Done;\n    this.kbdWillShow = NSNotificationCenter.DefaultCenter. AddObserver (UIKeyboard.WillShowNotification, delegate(NSNotification ntf) {\n    RectangleF kbdBounds = UIKeyboard.FrameEndFromNotification (ntf);\n    RectangleF textFrame = this.emailField.Frame;\n    textFrame.Y -= kbdBounds.Height;\n    this.emailField.Frame = textFrame;\n    } );\n    this.kbdDidHide = NSNotificationCenter.DefaultCenter.AddObserver (UIKeyboard.DidHideNotification, delegate(NSNotification ntf){\n    RectangleF kbdBounds = UIKeyboard.FrameEndFromNotification (ntf);\n    RectangleF textFrame = this.emailField.Frame;\n    textFrame.Y += kbdBounds.Height;\n    this.emailField.Frame = textFrame;\n    } );\n    this.emailField.ShouldReturn = delegate(UITextField textField) {\n    return textField.ResignFirstResponder ();\n    } ;\n    }\n\n    ```", "```swift\nthis.emailField.KeyboardType = UIKeyboardType.EmailAddress;\nthis.emailField.ReturnKeyType = UIReturnKeyType.Done;\n\n```", "```swift\n// Add observers for the keyboard\nthis.kbdWillShow = NSNotificationCenter.DefaultCenter.AddObserver (UIKeyboard.WillShowNotification, delegate(NSNotification ntf) {\n\n```", "```swift\n//Get the keyboard's bounds\nRectangleF kbdBounds = UIKeyboard.FrameEndNotification (ntf);\n\n```", "```swift\n// Get the text field's frame\nRectangleF textFrame = this.emailField.Frame;\n// Change the y position of the text field frame\ntextFrame.Y -= kbdBounds.Height;\n\n```", "```swift\nthis.emailField.Frame = textFrame;\n\n```", "```swift\nNSNotificationCenter.DefaultCenter.RemoveObserver (this.kbdWillShow);\nNSNotificationCenter.DefaultCenter.RemoveObserver (this.kbdDidHide);\n\n```", "```swift\n    using System.Drawing;\n    using System.Threading;\n\n    ```", "```swift\n    UILabel labelStatus;\n    UIButton buttonStartProgress;\n    UIProgressView progressView;\n    float incrementBy = 0f;\n\n    ```", "```swift\n    // Initialize the label\n    this.labelStatus = new UILabel (new RectangleF (60f, 60f, 200f, 50f));\n    this.labelStatus.AdjustsFontSizeToFitWidth = true;\n    // Initialize the button\n    this.buttonStartProgress = UIButton.FromType (UIButtonType.RoundedRect);\n    this.buttonStartProgress.Frame = new RectangleF (60f, 400f, 200f, 40f);\n    this.buttonStartProgress.SetTitle (\"Tap to start progress!\", UIControlState.Normal);\n    this.buttonStartProgress.TouchUpInside += delegate {\n    // Disable the button\n    this.buttonStartProgress.Enabled = false;\n    this.progressView.Progress = 0f;\n    // Start a progress\n    new Action (this.StartProgress).BeginInvoke (null, null);\n    } ;\n    // Initialize the progress view\n    this.progressView = new UIProgressView (new RectangleF (60f, 200f, 200f, 50f));\n    // Set the progress view's initial value\n    this.progressView.Progress = 0f;\n    // Set the progress increment value\n    // for 10 items\n    this.incrementBy = 1f / 10f;\n    this.View.AddSubview(this.labelStatus);\n    this.View.AddSubview(this.buttonStartProgress);\n    this.View.AddSubview(this.progressView);\n\n    ```", "```swift\n    private void StartProgress (){\n    while (this.progressView.Progress < 1){\n    Thread.Sleep (1000);\n    this.BeginInvokeOnMainThread (delegate {\n    // Advance the progress\n    this.progressView.Progress += this.incrementBy;\n    // Set the label text\n    this.labelStatus.Text = String.Format (\"Current value: {0}\", Math.Round ((double)this.progressView.Progress, 2));\n    if (this.progressView.Progress == 1){\n    this.labelStatus.Text = \"Progress completed!\";\n    this.buttonStartProgress.Enabled = true;\n    }\n    } );\n    }\n    }\n\n    ```", "```swift\nthis.progressView.Progress = 0f;\n\n```", "```swift\nthis.incrementBy = 1f / 10f;\n\n```", "```swift\nthis.buttonStartProgress.TouchUpInside += delegate {\n// Disable the button\nthis.buttonStartProgress.Enabled = false;\nthis.progressView.Progress = 0;\n// Start a progress\nnew Action (this.StartProgress).BeginInvoke (null, null);\n};\n\n```", "```swift\nthis.BeginInvokeOnMainThread (delegate {\n// Advance the progress\nthis.progressView.Progress += this.incrementBy;\n// Set the label text\nthis.labelStatus.Text = String.Format (\"Current value: {0}\", Math.Round ((double)this.progressView.Progress, 2));\nif (this.progressView.Progress == 1){\nthis.labelStatus.Text = \"Progress completed!\";\nthis.buttonStartProgress.Enabled = true;\n}\n});\n\n```", "```swift\n    // Image view\n    UIImageView imgView;\n    public override void ViewDidLoad(){\n    base.ViewDidLoad();\n    this.imgView = new UIImageView (UIImage.FromFile (\"Kastoria.jpg\"));\n    this.scrollContent.ContentSize = this.imgView.Image.Size;\n    this.scrollContent.ContentOffset = new PointF (200f, 50f);\n    this.scrollContent.PagingEnabled = true;\n    this.scrollContent.MinimumZoomScale = 0.5f;\n    this.scrollContent.MaximumZoomScale = 2f;\n    this.scrollContent.ViewForZoomingInScrollView = delegate(UIScrollView scroll) {\n    return this.imgView;\n    } ;\n    this.scrollContent.ZoomScale = 1f;\n    this.scrollContent.IndicatorStyle = UIScrollViewIndicatorStyle.White;\n    this.scrollContent.AddSubview (this.imgView);\n    }\n\n    ```", "```swift\nthis.scrollContent.ContentSize = this.imgView.Image.Size;\n\n```", "```swift\nthis.scrollContent.ContentOffset = new PointF (200f, 50f);\n\n```", "```swift\nthis.scrollContent.MinimumZoomScale = 0.5f;\nthis.scrollContent.MaximumZoomScale = 2f;\n\n```", "```swift\nthis.scrollContent.ViewForZoomingInScrollView = delegate(UIScrollView scroll) {\nreturn this.imgView;\n};this.scrollContent.ZoomScale = 1f;\n\n```", "```swift\nthis.scrollContent.IndicatorStyle = UIScrollViewIndicatorStyle.White;\n\n```", "```swift\n    UIImageView page1;\n    UIImageView page2;\n    UIImageView page3;\n    public override void ViewDidLoad(){\n    base.ViewDidLoad();\n    this.scrollView.DecelerationEnded += this.scrollView_DecelerationEnded;\n    this.pageControl.ValueChanged += this.pageControl_ValueChanged;\n    this.scrollView.Scrolled += delegate {\n    Console.WriteLine (\"Scrolled!\");\n    } ;\n    this.scrollView.PagingEnabled = true;\n    RectangleF pageFrame = this.scrollView.Frame;\n    this.scrollView.ContentSize = new SizeF (pageFrame.Width * 3, pageFrame.Height);\n    this.page1 = new UIImageView (pageFrame);\n    this.page1.ContentMode = UIViewContentMode.ScaleAspectFit;\n    this.page1.Image = UIImage.FromFile (\"Parga01.jpg\");\n    pageFrame.X += this.scrollView.Frame.Width;\n    this.page2 = new UIImageView (pageFrame);\n    this.page2.ContentMode = UIViewContentMode.ScaleAspectFit;\n    this.page2.Image = UIImage.FromFile (\"Parga02.jpg\");\n    pageFrame.X += this.scrollView.Frame.Width;\n    this.page3 = new UIImageView (pageFrame);\n    this.page3.ContentMode = UIViewContentMode.ScaleAspectFit;\n    this.page3.Image = UIImage.FromFile (\"Parga03.jpg\");\n    this.scrollView.AddSubview (this.page1);\n    this.scrollView.AddSubview (this.page2);\n    this.scrollView.AddSubview (this.page3);\n    }\n\n    ```", "```swift\n    private void scrollView_DecelerationEnded (object sender, EventArgs e){\n    float x1 = this.page1.Frame.X;\n    float x2 = this.page2.Frame.X;\n    float x = this.scrollView.ContentOffset.X;\n    if (x == x1){\n    this.pageControl.CurrentPage = 0;\n    } else if (x == x2){\n    this.pageControl.CurrentPage = 1;\n    } else{\n    this.pageControl.CurrentPage = 2;\n    }\n    }\n    private void pageControl_ValueChanged (object sender, EventArgs e){\n    PointF contentOffset = this.scrollView.ContentOffset;\n    switch (this.pageControl.CurrentPage){\n    case 0:\n    contentOffset.X = this.page1.Frame.X;\n    this.scrollView.SetContentOffset (contentOffset, true);\n    break;\n    case 1:\n    contentOffset.X = this.page2.Frame.X;\n    this.scrollView.SetContentOffset (contentOffset, true);\n    break;\n    case 2:\n    contentOffset.X = this.page3.Frame.X;\n    this.scrollView.SetContentOffset (contentOffset, true);\n    break;\n    default:\n    // do nothing\n    break;\n    }\n    }\n\n    ```", "```swift\nthis.scrollView.PagingEnabled = true;\n\n```", "```swift\nthis.page1 = new UIImageView (pageFrame);\n//…\npageFrame.X += this.scrollView.Frame.Width;\n//…\npageFrame.X += this.scrollView.Frame.Width;\n\n```", "```swift\nfloat x = this.scrollView.ContentOffset.X;\nif (x == x1) {\nthis.pageControl.CurrentPage = 0;\n// etc.\n\n```", "```swift\ncase 0:\ncontentOffset.X = this.page1.Frame.X;\nthis.scrollView.SetContentOffset (contentOffset, true);\nbreak;\n// etc.\n\n```", "```swift\n    public override void ViewDidLoad (){\n    base.ViewDidLoad ();\n    this.barSave.Clicked += delegate {\n    this.labelStatus.Text = \"Button Save tapped!\";\n    } ;\n    this.barReply.Clicked += delegate {\n    this.labelStatus.Text = \"Button Reply tapped!\";\n    } ;\n    }\n\n    ```", "```swift\nthis.barSave.Clicked += delegate {\nthis.labelStatus.Text = \"Button Save tapped!\";\n};\n\n```", "```swift\nUIBarButtonItem barSave = new UIBarButtonItem(UIBarButtonSystemItem.Save);\nUIBarButtonItem barReply = new UIBarButtonItem(UIBarButtonSystemItem.Reply);\nthis.toolBar.SetItems(new UIBarButtonItem[] { barSave, barReply }, true);\n\n```", "```swift\n    using System;\n    using MonoTouch.UIKit;\n    using MonoTouch.Foundation;\n    using System.Drawing;\n    namespace CustomViewApp{\n    [Register(\"MyView\")]\n    public class MyView : UIView{\n    private UILabel labelStatus;\n    public MyView (IntPtr handle) : base(handle){\n    this.Initialize ();\n    }\n    public MyView (RectangleF frame) : base(frame){\n    this.Initialize ();\n    }\n    private void Initialize (){\n    this.BackgroundColor = UIColor.LightGray;\n    this.labelStatus = new UILabel (new RectangleF (0f, 400f, this.Frame.Width, 60f));\n    this.labelStatus.TextAlignment = UITextAlignment.Center;\n    this.labelStatus.BackgroundColor = UIColor.DarkGray;\n    this.AddSubview (this.labelStatus);\n    }\n    public override void TouchesMoved (NSSet touches, UIEvent evt){\n    base.TouchesMoved (touches, evt);\n    UITouch touch = (UITouch)touches.AnyObject;\n    PointF touchLocation = touch.LocationInView (this);\n    this.labelStatus.Text = String.Format (\"X: {0} - Y: {1}\", touchLocation.X, touchLocation.Y);\n    }\n    }\n    }\n\n    ```", "```swift\n[Register(\"MyView\")]\npublic class MyView : UIView\n\n```", "```swift\npublic MyView (IntPtr handle) : base(handle) {}\n\n```", "```swift\npublic MyView (RectangleF frame) : base(frame) {}\n\n```", "```swift\nUITouch touch = (UITouch)touches.AnyObject;\n\n```", "```swift\nPointF touchLocation = touch.LocationInView (this);\n\n```", "```swift\nMyView myView = new MyView(new RectangleF(0f, 0f, 320f, 480f));\n\n```"]