["```swift\n    import UIKit\n    **import** **PlaygroundSupport** \n    ```", "```swift\n    class TableViewExampleController: UIViewController {\n    } \n    ```", "```swift\n    class TableViewExampleController: UIViewController {\n    **var****tableView****: UITableView?**\n    **var****journalEntries****: [[****String****]]** **=** **[**\n     **[****\"sun.max\"****,****\"12 Sept 2024\"****,****\"Nice weather today\"****],**\n     **[****\"cloud.rain\"****,****\"13 Sept 2024\"****,****\"Heavy rain today\"****],**\n     **[****\"cloud.sun\"****,****\"14 Sept 2024\"****,****\"It's cloudy out\"****]**\n     **]**\n    } \n    ```", "```swift\n    class TableViewExampleController: UIViewController**, UITableViewDataSource** { \n    ```", "```swift\n    class TableViewExampleController: UIViewController,\n    UITableViewDataSource {\n    **func****tableView****(****_****tableView****: UITableView,** \n    **numberOfRowsInSection** **section****:** **Int****) ->** **Int** **{**\n     **code**\n     **}**\n    **func****tableView****(****_****tableView****: UITableView,** **cellForRowAt**\n     **indexPath****: IndexPath) -> UITableViewCell  {**\n     **code**\n     **}**\n      var tableView: UITableView?\n      var journalEntries: [[String]] = [\n        [\"sun.max\",\"12 Sept 2024\",\"Nice weather today\"],\n        [\"cloud.rain\",\"13 Sept 2024\",\"Heavy rain today\"],\n        [\"cloud.sun\",\"14 Sept 2024\",\"It's cloudy out\"]\n      ]\n    } \n    ```", "```swift\n    class TableViewExampleController: UIViewController,\n    UITableViewDataSource {\n    **var****tableView****: UITableView?**\n    **var****journalEntries****: [[****String****]]** **=** **[**\n     **[****\"sun.max\"****,****\"12 Sept 2024\"****,****\"Nice weather today\"****],**\n     **[****\"cloud.rain\"****,****\"13 Sept 2024\"****,****\"Heavy rain today\"****],**\n     **[****\"cloud.sun\"****,****\"****14 Sept 2024\"****,****\"It's cloudy out\"****]**\n     **]**\n      func tableView(_ tableView: UITableView, \n      numberOfRowsInSection section: Int) -> Int { \n    ```", "```swift\n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n      **journalEntries****.count**\n    } \n    ```", "```swift\n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n    **let** **cell** **=** **tableView.dequeueReusableCell(withIdentifier:** \n     **\"cell\"****, for: indexPath)**\n    **let** **journalEntry** **=****journalEntries****[indexPath.row]**\n    **var** **content** **=** **cell.defaultContentConfiguration()**\n     **content.image** **=** **UIImage(systemName: journalEntry[****0****])**\n     **content.text** **=** **journalEntry[****1****]**\n     **content.secondaryText** **=** **journalEntry[****2****]**\n     **cell.contentConfiguration** **=** **content**\n    **return** **cell**\n    } \n    ```", "```swift\nlet cell = tableView.dequeueReusableCell(withIdentifier: \"cell\", for: indexPath) \n```", "```swift\nlet journalEntry = journalEntries[indexPath.row] \n```", "```swift\nvar content = cell.defaultContentConfiguration() \n```", "```swift\ncontent.image = UIImage(systemName: journalEntry[0])\ncontent.text = journalEntry[1]\ncontent.secondaryText = journalEntry[2]\ncell.contentConfiguration = content \n```", "```swift\nreturn cell \n```", "```swift\n    func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {\n      if editingStyle == .delete {\n        journalEntries.remove(at: indexPath.row)\n        tableView.reloadData()\n      }\n    } \n    ```", "```swift\n    class TableViewExampleController: UIViewController, UITableViewDataSource**, UITableViewDelegate** { \n    ```", "```swift\n    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n      let selectedJournalEntry = journalEntries[indexPath.row]\n      print(selectedJournalEntry)\n    } \n    ```", "```swift\n    class TableViewExampleController: UIViewController, UITableViewDataSource, UITableViewDelegate {\n      var tableView: UITableView?\n      var journalEntries: [[String]] = [\n        [\"sun.max\",\"12 Sept 2024\",\"Nice weather today\"],\n        [\"cloud.rain\",\"13 Sept 2024\",\"Heavy rain today\"],\n        [\"cloud.sun\",\"14 Sept 2024\",\"It's cloudy out\"]\n      ]\n      func tableView(_ tableView: UITableView, \n      numberOfRowsInSection section: Int) -> Int {\n        journalEntries.count\n      }\n      func tableView(_ tableView: UITableView, cellForRowAt \n      indexPath: IndexPath) -> UITableViewCell {\n        let cell = tableView.dequeueReusableCell(\n        withIdentifier: \"cell\", for: indexPath)\n        let journalEntry = journalEntries[indexPath.row]\n        var content = cell.defaultContentConfiguration()\n        content.image = UIImage(systemName: journalEntry[0])\n        content.text = journalEntry[1]\n        content.secondaryText = journalEntry[2]\n        cell.contentConfiguration = content\n        return cell\n      }\n      func tableView(_ tableView: UITableView, commit \n      editingStyle: UITableViewCell.EditingStyle, \n      forRowAt indexPath: IndexPath) {\n        if editingStyle == .delete {\n          journalEntries.remove(at: indexPath.row)\n          tableView.reloadData()\n        }\n      }\n      func tableView(_ tableView: UITableView, didSelectRowAt \n      indexPath: IndexPath) {\n        let selectedjournalEntry = \n        journalEntries[indexPath.row]\n        print(selectedjournalEntry)\n      }\n    } \n    ```", "```swift\n    func createTableView() {\n    } \n    ```", "```swift\n    tableView = UITableView(frame: CGRect(x: 0, y: 0, width: view.frame.width, height: view.frame.height)) \n    ```", "```swift\n    tableView?.dataSource = self\n    tableView?.delegate = self \n    ```", "```swift\n    tableView?.backgroundColor = .white \n    ```", "```swift\n    tableView?.register(UITableViewCell.self, forCellReuseIdentifier: \"cell\") \n    ```", "```swift\n    view.addSubview(tableView!) \n    ```", "```swift\n    func createTableView() {\n      tableView = UITableView(frame: CGRect(x: 0, y: 0, \n      width: view.frame.width, \n      height: view.frame.height))\n      tableView?.dataSource = self\n      tableView?.delegate = self\n      tableView?.backgroundColor = .white\n      tableView?.register(UITableViewCell.self, \n      forCellReuseIdentifier: \"cell\")\n      view.addSubview(tableView!)\n    } \n    ```", "```swift\noverride func viewDidLoad() {\n   super.viewDidLoad()\n   view.bounds = CGRect(x: 0, y: 0, width: 375, \n   height: 667)\n   createTableView()\n} \n```", "```swift\nimport UIKit\nimport PlaygroundSupport\nclass TableViewExampleController: UIViewController, UITableViewDataSource, UITableViewDelegate {   \n  var tableView: UITableView?\n  var journalEntries: [[String]] = [\n    [\"sun.max\",\"12 Sept 2024\",\"Nice weather today\"],\n    [\"cloud.rain\",\"13 Sept 2024\",\"Heavy rain today\"],\n    [\"cloud.sun\",\"14 Sept 2024\",\"It's cloudy out\"]\n  ]\n  override func viewDidLoad() {\n    super.viewDidLoad()\n    view.bounds = CGRect(x: 0, y: 0, width: 375, height: 667)\n    createTableView()\n  }\n  func createTableView() {\n    tableView = UITableView(frame: CGRect(x: 0, y: 0, \n    width: view.frame.width,\n    height: view.frame.height))\n    tableView?.dataSource = self\n    tableView?.delegate = self\n    tableView?.backgroundColor = .white\n    tableView?.register(UITableViewCell.self,   \n    forCellReuseIdentifier: \"cell\")\n    view.addSubview(tableView!)\n  }\n  func tableView(_ tableView: UITableView, \n  numberOfRowsInSection section: Int) -> Int {\n    journalEntries.count\n  }\n  func tableView(_ tableView: UITableView, cellForRowAt \n  indexPath: IndexPath) -> UITableViewCell {\n    let cell = tableView.dequeueReusableCell(withIdentifier: \n    \"cell\", for: indexPath)\n    let journalEntry = journalEntries[indexPath.row]\n    var content = cell.defaultContentConfiguration()\n    content.image = UIImage(systemName: journalEntry[0])\n    content.text = journalEntry[1]\n    content.secondaryText = journalEntry[2]\n    cell.contentConfiguration = content\n    return cell\n  }\n  func tableView(_ tableView: UITableView, commit editingStyle:\n  UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {\n    if editingStyle == .delete {\n      journalEntries.remove(at: indexPath.row)\n      tableView.reloadData()\n    }\n  }\n  func tableView(_ tableView: UITableView, didSelectRowAt \n  indexPath: IndexPath) {\n    let selectedjournalEntry = journalEntries[indexPath.row]\n    print(selectedjournalEntry)\n  }\n} \n```", "```swift\n    PlaygroundPage.current.liveView = TableViewExampleController() \n    ```"]