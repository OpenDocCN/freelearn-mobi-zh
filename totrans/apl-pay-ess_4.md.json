["```swift\n// client_app/merchantapp/ProductCard.m\n- (void)\npaymentAuthorizationViewController:\n   (PKPaymentAuthorizationViewController*)      controller\ndidAuthorizePayment:\n   (PKPayment*)                                 payment_info\ncompletion:\n   (void (^)(PKPaymentAuthorizationStatus))     payment_completion\n{\n [self process_ApplePay_payment_with_Stripe:payment_info\n completion:payment_completion];\n}\n```", "```swift\n// client_app/merchantapp/ProductCard.m\n- (void)\nprocess_ApplePay_payment_with_Stripe:\n   (PKPayment*)                                 payment_info \ncompletion:\n   (void (^)(PKPaymentAuthorizationStatus))     payment_completion\n{   \n [[STPAPIClient sharedClient]\n createTokenWithPayment: payment_info\n completion: ^\n   (STPToken* charge_token, NSError* error)\n   {\n      if (error)\n      {\n         NSLog(@\"error creating STPToken object\");\n         payment_completion(PKPaymentAuthorizationStatusFailure);\n      }\n      else\n [self backend_process_payment_info: payment_info\n gateway: @\"stripe\"\n charge_token: charge_token\n completion: payment_completion];\n   }];\n}\n```", "```swift\n// client_app/merchantapp/ProductCard.m\n- (void)\nbackend_process_payment_info:\n   (PKPayment*)                                  payment_info\ngateway:\n   (NSString*)                                   gateway\ncharge_token:\n   (id)                                          charge_token\ncompletion:\n   (void (^)(PKPaymentAuthorizationStatus))      payment_completion\n{\n   RestIO* rest_io= [RestIO sharedRestIO];\n   {\n      AppDelegate* app_delegate=\n         [UIApplication sharedApplication].delegate;\n      NSString* payment_charge_uri=\n         [NSString stringWithFormat:@\"%@%@\",\n            app_delegate.rest_io_host,\n            @\"/payment\"];\n\n      NSNumber* total_in_cents= (NSNumber*)\n      [_payment_request\n            .paymentSummaryItems\n             [_payment_request.paymentSummaryItems.count - 1]\n            .amount\n          decimalNumberByMultiplyingBy:\n             [NSDecimalNumber decimalNumberWithString: @\"100\"]\n      ];\n      NSString* currency= _payment_request.currencyCode;\n\n      NSString* contact_name=\n         [payment_info.shippingContact.name.givenName\n             stringByAppendingString:\n                [@\" \" stringByAppendingString:\n                   payment_info.shippingContact.name.familyName]];\n\n      // collect info required by order processing webapp\n NSDictionary* order_info_package_dictionary= @\n {\n @\"gateway\"     : gateway,\n @\"source\"      : ((STPToken*)charge_token).tokenId,\n @\"amount\"      : total_in_cents,\n @\"currency\"    : currency,\n @\"description\" : \n _payment_request.paymentSummaryItems[0].label,\n @\"shipping_contact\"     : contact_name,\n @\"shipping_email\"       :\n payment_info.shippingContact.emailAddress,\n @\"shipping_street\"      :\n payment_info.shippingContact.postalAddress.street,\n @\"shipping_city\"        :\n payment_info.shippingContact.postalAddress.city,\n @\"shipping_state\"       :\n payment_info.shippingContact.postalAddress.state,\n @\"shipping_zip\"         :\n payment_info.shippingContact.postalAddress.postalCode,\n @\"shipping_method_name\" :\n payment_info.shippingMethod.identifier\n };\n\n      NSData* order_info_package_json;\n      {\n NSError* error;\n order_info_package_json=\n [NSJSONSerialization\n dataWithJSONObject: order_info_package_dictionary\n options: NSJSONWritingPrettyPrinted \n error: &error];\n         NSAssert(!error, @\"error converting %@ to JSON\", error);\n      }\n\n      // send order information to order processing web app\n [rest_io postResourceAtURI: payment_charge_uri\n body: order_info_package_json\n completion: ^\n (NSURLResponse* response, NSData* data)\n      {\n         if (((NSHTTPURLResponse*)response).statusCode == 200)\n         {\n            NSDictionary* result;\n            {\n               NSError* error;\n               result=\n                  [NSJSONSerialization\n                     JSONObjectWithData: data\n                                options: 0\n                                  error: &error];\n               if (error)\n                  [NSException\n                      raise: @\"JSONDeserializationException\"\n                     format: @\"error deserializing JSON\"];\n            }\n            NSString* status= (NSString*)result[@\"status\"];\n            payment_completion(\n               [status isEqual: @\"succeeded\"]?\n                  PKPaymentAuthorizationStatusSuccess :\n                  PKPaymentAuthorizationStatusFailure\n            );\n         }\n         else\n            payment_completion(\n               PKPaymentAuthorizationStatusFailure);\n      }];\n   }\n}\n```", "```swift\n// server_app/red.js\n// payment middleware\nserver.post('/payment', function(request, response, next)\n{\n // 1\\. parse request\n   var order_info_package= JSON.parse(request.body);\n\n   // process charge token\n   if (order_info_package.gateway == 'stripe')\n   {\n // 2\\. charge payment card\n      var charge= stripe.charges.create\n      (\n         {\n            amount      : order_info_package.amount,\n            currency    : order_info_package.currency,\n            source      : order_info_package.source,\n            description : \n               'charge for ' + order_info_package.description\n         }, \n         function(error, charge)\n         {\n            var transaction_info= \n            {\n               id     : charge.id,\n               status : charge.status\n            }\n\n            if (error)\n               console.log('there's an error creating a charge: '\n                  + error);\n            else\n            {\n // 3.a update inventory\n               // ...\n\n // 3.b create order\n               var order= models.Order(\n               {\n                  date                 : new Date(),\n                  description          :\n                     order_info_package.description,\n                  shipping_email       :\n                     order_info_package.shipping_email,\n                  shipping_street      :\n                     order_info_package.shipping_street,\n                  shipping_city        :\n                     order_info_package.shipping_city,\n                  shipping_state       :\n                     order_info_package.shipping_state,\n                  shipping_zip         :\n                     order_info_package.shipping_zip,\n                  shipping_method_name :\n                     order_info_package.shipping_method_name,\n                  total_price          :\n                     order_info_package.amount,\n                  stripe_charge_id     : charge.id\n               });\n               order.save();\n\n               transaction_info.order_id= order._id;\n            }\n\n // 4\\. send transaction result to customer's device \n            response.send(transaction_info);\n         }\n      );\n   }\n   next();\n});\n```", "```swift\n// client_app/merchantapp/ProductCard.m\n- (void)\nbackend_process_payment_info:\n   (PKPayment*)                                  payment_info\ngateway:\n   (NSString*)                                   gateway\ncharge_token:\n   (id)                                          charge_token\ncompletion:\n   (void (^)(PKPaymentAuthorizationStatus))      payment_completion\n{\n   RestIO* rest_io= [RestIO sharedRestIO];\n   {\n      ...      \n      // send order information to order processing web app\n      [rest_io postResourceAtURI: payment_charge_uri\n                            body: order_info_package_json\n                      completion: ^\n (NSURLResponse* response, NSData* data)\n {\n if (((NSHTTPURLResponse*)response).statusCode == 200)\n {\n NSDictionary* result;\n {\n NSError* error;\n result=\n [NSJSONSerialization\n JSONObjectWithData: data\n options: 0\n error: &error];\n               if (error)\n                  [NSException\n                      raise: @\"JSONDeserializationException\"\n                     format: @\"error deserializing JSON\"];\n            }\n            NSString* status= (NSString*)result[@\"status\"];\n            payment_completion(\n               [status isEqual: @\"succeeded\"]?\n                  PKPaymentAuthorizationStatusSuccess :\n                  PKPaymentAuthorizationStatusFailure\n            );\n         }\n         else\n            payment_completion(\n               PKPaymentAuthorizationStatusFailure);\n      }];\n   }\n}\n```", "```swift\n// client_app/merchantapp/ProductCard.m\n- (void)\nbackend_process_payment_info:\n   (PKPayment*)                                  payment_info\ngateway:\n   (NSString*)                                   gateway\ncharge_token:\n   (id)                                          charge_token\ncompletion:\n   (void (^)(PKPaymentAuthorizationStatus))      payment_completion\n{\n   RestIO* rest_io= [RestIO sharedRestIO];\n   {\n      ...      \n      // send order information to order processing web app\n      [rest_io postResourceAtURI: payment_charge_uri\n                            body: order_info_package_json\n                      completion: ^\n      (NSURLResponse* response, NSData* data)\n      {\n         if (((NSHTTPURLResponse*)response).statusCode == 200)\n         {\n            NSDictionary* result;\n            {\n               NSError* error;\n               result=\n                  [NSJSONSerialization\n                     JSONObjectWithData: data\n                                options: 0\n                                  error: &error];\n               if (error)\n                  [NSException\n                      raise: @\"JSONDeserializationException\"\n                     format: @\"error deserializing JSON\"];\n            }\n NSString* status= (NSString*)result[@\"status\"];\n payment_completion(\n [status isEqual: @\"succeeded\"]?\n PKPaymentAuthorizationStatusSuccess :\n PKPaymentAuthorizationStatusFailure\n );\n }\n else\n payment_completion(\n PKPaymentAuthorizationStatusFailure);\n      }];\n   }\n}\n```", "```swift\n// client_app/merchantapp/ProductCard.m\n- (void) paymentAuthorizationViewControllerDidFinish:\n            (PKPaymentAuthorizationViewController*)\n                                                 controller\n{\n   [self dismissViewControllerAnimated:YES completion:nil];\n}\n```"]