- en: '*Chapter 1*: Getting Familiar with Xcode'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to *iOS 15 Programming for Beginners*. I hope you will find this a useful
    introduction to creating and publishing iOS 15 apps on the App Store.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you'll learn how to download and install **Xcode** on your
    Mac. You'll familiarize yourself with the different parts of the Xcode user interface,
    and you'll create your first **iOS app** and run it in the **iOS simulator**.
    You will then learn how to connect an **iOS device** to Xcode via USB so that
    you can run the app on it, how to add an **Apple ID** to Xcode so the necessary
    digital certificates can be created and installed on your device, and how to trust
    the certificate on your device. Finally, you will learn how to connect to your
    device over Wi-Fi, so you no longer need to plug and unplug your device every
    time you want to run an app.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this chapter, you will know how to create and run apps on the
    iOS simulator or an iOS device, which you will need to do when you build your
    own apps.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered:'
  prefs: []
  type: TYPE_NORMAL
- en: Downloading and installing Xcode from the App Store
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the Xcode user interface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running the app in the iOS simulator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using an iOS device for development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To do the exercises for this chapter, you will need the following:'
  prefs: []
  type: TYPE_NORMAL
- en: An Apple Mac computer running macOS 11 Big Sur or macOS 12 Monterey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An Apple ID (if you don't have one, you will create one in this chapter)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Optionally, an iOS device running iOS 15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Xcode project for this chapter is in the `Chapter01` folder of the code
    bundle for this book, which can be downloaded here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition](https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Check out the following video to see the code in action:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://bit.ly/3wqcqpG](https://bit.ly/3wqcqpG)'
  prefs: []
  type: TYPE_NORMAL
- en: You'll start by downloading Xcode, Apple's integrated development environment
    (IDE) for developing iOS apps from the App Store, in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: The size of the download is very large (11.7 GB at the time of writing) so it
    may take a while to download. Ensure that you have enough disk space prior to
    downloading.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading and installing Xcode from the App Store
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before you begin writing iOS apps, you need to download and install Xcode from
    the App Store. To do this, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Choose **App Store** from the **Apple** menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the search field in the top-right corner, type `Xcode` and press the *Return*
    key.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You should see **Xcode** in the search results. Click **Get** and click **Install**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you have an Apple ID, type it in the **Apple ID** text box. If you don''t
    have one, click the **Create Apple ID** button and follow the step-by-step instructions
    to create one:![Figure 1.1: Apple ID creation dialog box'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.01_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.1: Apple ID creation dialog box'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Important Information
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You can see more information on how to create an Apple ID using this link:
    [https://support.apple.com/en-us/HT204316#appstore](https://support.apple.com/en-us/HT204316#appstore).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Once Xcode has been installed, launch it. You should see the following **Welcome
    to Xcode** screen. Click **Create a new Xcode project** in the left-hand pane:![Figure
    1.2: Welcome to Xcode screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.02_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.2: Welcome to Xcode screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You will see the new project screen as follows. In the **Choose a template
    for your new project:** section, select **iOS**. Then choose **App** and click
    **Next**:![Figure 1.3: Choose a template for your new project screen'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.03_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.3: Choose a template for your new project screen'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You will see the `ExploringXcode` in the text field.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`com.yourname` for now. This is known as reverse domain name notation format,
    and is normally used here.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Interface**: The method used to create the user interface for your app. Set
    this to **Storyboard**.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Language**: The programming language to be used. Set this to **Swift**.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Leave the other settings as their default values and make sure all the checkboxes
    are unticked. Click **Next** when done.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You''ll see a **Save** dialog box. Choose a location to save your project,
    such as the **Desktop** or **Documents** folder, and click **Create**:![Figure
    1.5: Save dialog box'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.05_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.5: Save dialog box'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If you see a dialog box saying **No author information was supplied by the version
    control system**, click **Fix**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Important Information
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The reason why you see this dialog box is because the **Source Control** checkbox
    is ticked. Apple recommends that Source Control be turned on. Source Control is
    outside the scope of this book but if you wish to learn more about version control
    and Git, see this link: [https://git-scm.com/video/what-is-version-control](https://git-scm.com/video/what-is-version-control).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You will see the **Source Control** preference screen as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.6: Source Control preference screen'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.06_B17469.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.6: Source Control preference screen'
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter the following information:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Author Name:** – Your own name'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Author Email:** – Your email address'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Close the **Source Control** preference screen by clicking the red Close button
    in the top-left corner when done. The Xcode main window will appear.
  prefs: []
  type: TYPE_NORMAL
- en: Fantastic! You have now successfully downloaded and installed Xcode and created
    your first project. In the next section, you will learn about the Xcode user interface.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Xcode user interface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You''ve just created your first Xcode project! As you can see, the Xcode user
    interface is divided into several distinct parts, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.7: Xcode user interface'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.07_B17469.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.7: Xcode user interface'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at each part in more detail. The following descriptions correspond
    to the numbers shown in the preceding screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Toolbar (1)** – Used to build and run your apps, and view the progress of
    running tasks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Navigator area (2)** – Provides quick access to the various parts of your
    project. The **Project navigator** is displayed by default.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Editor area (3)** – Allows you to edit source code, user interfaces, and
    other resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Inspector area (4)** – Allows you to view and edit information about items
    selected in the Navigator area or Editor area.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Debug area (5)** – Contains the **debug bar**, the **variables view**, and
    the **Console**. The Debug area is toggled by typing *Shift + Command + Y*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Next, let''s examine the toolbar more closely. The left side of the toolbar
    is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.8: Xcode toolbar (left side)'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.08_B17469.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.8: Xcode toolbar (left side)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at each part in more detail. The following description corresponds
    to the numbers shown in the preceding screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Navigator button (1)** – Toggles the Navigator area on and off.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Stop button (2)** – Only appears next to the **Play** button when the app
    is running. Stops the currently running app.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Play button (3)** – Used to build and run your app.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scheme menu (4)** – Shows the specific scheme to build your project (**Exploring
    Xcode**) and the destination to run your app on (**iPhone SE (2nd generation**).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Schemes and destinations are distinct. Schemes specify the settings for building
    and running your project. Destinations specify installation locations for your
    app, and exist for physical devices and simulators.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Activity View (5)** - Displays the progress of running tasks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The right side of the toolbar is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.9: Xcode toolbar (right side)'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.09_B17469.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.9: Xcode toolbar (right side)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at each part in more detail. The following description corresponds
    to the numbers shown in the preceding screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Library button (1)** – Displays user interface elements, code snippets, and
    other resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Inspector button (2)** – Toggles the Inspector area on and off.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don't be overwhelmed by all the different parts, as you'll learn about them
    in more detail in later chapters. Now that you are familiar with the Xcode interface,
    you will run the app you just created in the iOS simulator, which displays a representation
    of your iOS device.
  prefs: []
  type: TYPE_NORMAL
- en: Running the app in the iOS simulator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The iOS simulator is installed when you install Xcode. It provides a simulated
    iOS device so that you can see what your app looks like and how it behaves, without
    needing a physical iOS device. It can model all the screen sizes and resolutions
    for both iPad and iPhone so you can test your app on multiple devices easily.
  prefs: []
  type: TYPE_NORMAL
- en: 'To run your app in the simulator, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the **Scheme** menu in the toolbar and you will see a list of simulators.
    Choose **iPhone SE (2nd** **generation)** from this menu:![Figure 1.10: Xcode
    Scheme menu with iPhone SE (2nd generation) selected'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.10_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.10: Xcode Scheme menu with iPhone SE (2nd generation) selected'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Play** button to install and run your app on the currently selected
    simulator. You can also use the *Command + R* keyboard shortcut.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you see the `username` and `password` of the Mac's administrator account,
    and click **Continue.**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The simulator will launch and show a representation of an iPhone SE (2nd generation).
    Your app displays a white screen, as you have not yet added anything to your project:![Figure
    1.11: iOS Simulator'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.11_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.11: iOS Simulator'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Switch back to Xcode and click on the **Stop** button (or press *Command* +
    *.*) to stop the currently running project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You have just created and run your first iOS app in the simulator! Great job!
  prefs: []
  type: TYPE_NORMAL
- en: If you look at the **Scheme** menu, you may wonder what the **No Devices** and
    **Build** sections are for. Let's a look at them in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Important Information
  prefs: []
  type: TYPE_NORMAL
- en: If you are using an M1 Mac you will see **My Mac (Designed for iPad)** instead
    of **No Devices** in the **Scheme** menu.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the No Devices and Build sections
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You learned how to choose a simulator in the **Scheme** menu to run your app
    in the previous section. In addition to the list of simulators, the **Scheme**
    menu also has **No Devices** and **Build** sections. These allow you to run apps
    on actual iOS devices, and prepare apps for submission to the App Store.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the **Scheme** menu in the toolbar to see the **No Devices** and **Build**
    sections at the top of the menu:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.12: Xcode Scheme menu with Any iOS Device (arm64) selected'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.12_B17469.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.12: Xcode Scheme menu with Any iOS Device (arm64) selected'
  prefs: []
  type: TYPE_NORMAL
- en: The **No Devices** section currently displays text stating **No devices connected
    to 'My Mac'...** , because you currently don't have any iOS devices connected
    to your computer. If you were to plug in an iOS device, it would appear in this
    section, and you would be able to run the apps you develop on it for testing.
    Running your apps on an actual device is recommended as the simulator will not
    accurately reflect the performance characteristics of an actual iOS device, and
    does not have some hardware features and software APIs that actual devices have.
  prefs: []
  type: TYPE_NORMAL
- en: The **Build** section has only one menu item, **Any iOS Device (arm64)**. This
    is used when you need to archive your app prior to submitting it to the App Store.
    You'll learn how to do this in [*Chapter 26*](B17469_26_Final_VK_ePub.xhtml#_idTextAnchor496)*,
    Testing and Submitting Your App to the App Store.*
  prefs: []
  type: TYPE_NORMAL
- en: Now let's see how to build and run your app on an actual iOS device. The vast
    majority of the instructions in this book do not require you to have an iOS device
    though, so if you don't have one, skip the next section and go straight to [*Chapter
    2*](B17469_02_Final_VK_ePub.xhtml#_idTextAnchor028)*, Simple Values and Types*.
  prefs: []
  type: TYPE_NORMAL
- en: Using an iOS device for development
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Although you'll be able to go through most of the exercises in this book using
    the simulator, it is recommended to build and test your apps on an actual iOS
    device, as the simulator will not be able to simulate some hardware components
    and software APIs.
  prefs: []
  type: TYPE_NORMAL
- en: Important Information
  prefs: []
  type: TYPE_NORMAL
- en: 'For a comprehensive look at all the differences between the Simulator and an
    actual device, see this link: [https://help.apple.com/simulator/mac/current/#/devb0244142d](https://help.apple.com/simulator/mac/current/#/devb0244142d).'
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to your device, you''ll need an Apple ID or a paid Apple Developer
    account to build and run your app on your device. You''ll use the same Apple ID
    that you used to download Xcode from the App Store for now. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Use the cable that came with your iOS device to connect your device to your
    Mac, and make sure the iOS device is unlocked.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can view connected devices by choosing **Window** | **Devices and Simulators**
    in the Xcode menu bar.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'In the **Scheme** menu, choose your device (**iPhone** in this case) as the
    run destination:![Figure 1.13: Xcode Scheme menu with actual iOS device selected'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.13_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.13: Xcode Scheme menu with actual iOS device selected'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Wait for Xcode to finish indexing and processing, which will take a while. Once
    complete, **Ready** will be displayed in the status window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the project by clicking the **Play** button (or use *Command + R*). You
    will get the following error: **Signing for "Exploring Xcode" requires a development
    team.**:![Figure 1.14: Xcode Signing & Capabilities pane'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.14_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.14: Xcode Signing & Capabilities pane'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This is because a digital certificate is required to run the app on an iOS device,
    and you need to add an Apple ID or paid Apple Developer account to Xcode so the
    digital certificate can be generated.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Important Information
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Using an Apple ID will allow you to test your app on an iOS device, but you
    will need a paid Apple Developer account to distribute apps on the App Store.
    You'll learn more about this in [*Chapter 26*](B17469_26_Final_VK_ePub.xhtml#_idTextAnchor496)*,
    Testing and Submitting Your App to the App Store*.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Important Information
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Certificates ensure that the only apps that run on your device are the ones
    you authorize. This helps to protect against malware. You can also learn more
    about them at this link: [https://help.apple.com/xcode/mac/current/#/dev60b6fbbc7](https://help.apple.com/xcode/mac/current/#/dev60b6fbbc7).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Click the **Add Account...** button:![Figure 1.15: Xcode Signing & Capabilities
    pane with Add Account... button selected'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.15_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.15: Xcode Signing & Capabilities pane with Add Account... button selected'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The Xcode **Preferences** window appears with the **Accounts** pane selected.
    Enter your **Apple ID** and click **Next**:![Figure 1.16: Apple ID creation dialog
    box'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.16_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.16: Apple ID sign in dialog box'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can also access Xcode preferences by choosing **Preferences** in the **Xcode**
    menu.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Enter your password when prompted. After a few minutes, the **Accounts** pane
    will display your account settings:![Figure 1.17: Accounts pane in Xcode preferences'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.17_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.17: Accounts pane in Xcode preferences'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Close the **Preferences** window when you're done by clicking the red Close
    button in the top-left corner.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In Xcode''s Editor area, click **Signing & Capabilities**. Make sure **Automatically
    manage signing** is ticked and **Personal Team** is selected from the **Team**
    pop-up menu:![Figure 1.18: Xcode Signing & Capabilities pane with account set'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.18_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.18: Xcode Signing & Capabilities pane with account set'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If you still see errors in this screen, try changing your `com.myname4352.ExploringXcode`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Everything should work now when you build and run, and your app will be installed
    on your iOS device. However, it will not launch and you will see the following
    message:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.19: Could not launch "ExploringXcode" dialog box'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.19_B17469.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.19: Could not launch "ExploringXcode" dialog box'
  prefs: []
  type: TYPE_NORMAL
- en: This means you need to trust the certificate that has been installed on your
    device. You'll learn how to do this in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Trusting the Developer App certificate on your iOS device
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A **Developer App certificate** is a special file that gets installed on your
    iOS device along with your app. Before your app can run, you need to trust it.
    Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'On your iOS device, tap **Settings** | **General** | **VPN & Device Management**:![Figure
    1.20: Device Management setting in iOS Settings'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.20_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.20: Device Management setting in iOS Settings'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Tap **Apple Development**:![Figure 1.21: Apple Development section in Device
    Management settings'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.21_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.21: Apple Development section in Device Management settings'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Tap **Trust "Apple Development: "**:![Figure 1.22: Trust button'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.22_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.22: Trust button'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Tap **Trust**:![Figure 1.23: Trust dialog box'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.23_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.23: Trust dialog box'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You should see the following text, which shows the app is now trusted:![Figure
    1.24: Apple Development section with trusted certificate'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.24_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.24: Apple Development section with trusted certificate'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Play** button in Xcode to build and run again. You'll see your app
    launch and run on your iOS device.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Congratulations! Note that you have to connect your iOS device to your Mac using
    the cable to build and run your app. You'll learn how to connect to your device
    over Wi-Fi in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting an iOS device wirelessly
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Unplugging and replugging your iOS device to your Mac gets pretty cumbersome
    after a while, so you''ll configure Xcode to connect to your iOS device over Wi-Fi
    now. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Make sure your iOS device is plugged into your Mac, and both the Mac and iOS
    device are on the same wireless network.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Choose **Window** | **Devices and Simulators** from the Xcode menu bar:![Figure
    1.25: Xcode Window menu with Devices and Simulators selected'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_1.25_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.25: Xcode Window menu with Devices and Simulators selected'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Click on the checkbox marked **Connect via network**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.26: Xcode Devices and Simulators Window with Connect via network
    checked'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.26_B17469.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.26: Xcode Devices and Simulators Window with Connect via network checked'
  prefs: []
  type: TYPE_NORMAL
- en: Awesome! Your iOS device is now connected wirelessly to Xcode, and you no longer
    need the USB cable to be connected to it.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned how to download and install Xcode on your Mac.
    You familiarized yourself with the different parts of the Xcode user interface.
    You created your first iOS app, selected a simulator, and built and ran the app.
    You learned what the **No Device** and **Generic iOS Device** menu items are for.
    This enables you to create and run iOS apps on your Mac without requiring an iOS
    device.
  prefs: []
  type: TYPE_NORMAL
- en: You learned how to connect an iOS device to Xcode via USB so that you can run
    the app on it. You added an Apple ID to Xcode so the necessary digital certificates
    can be created and installed on your device, and trusted the certificate on your
    device. This gives you the ability to run your apps on an actual device, so you
    can more accurately determine their performance, and make use of features not
    available in the iOS simulator.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, you learned how to connect to your device over Wi-Fi, so you no longer
    need to plug and unplug your device every time you want to run an app. This makes
    it much more convenient to build and test your apps on an iOS device as any new
    builds can be transferred immediately over the air.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you'll start exploring the Swift language using Swift Playgrounds,
    and learn how simple values and types are implemented in Swift.
  prefs: []
  type: TYPE_NORMAL
