["```swift\ninit?(rating: Int, title: String, body: String, photo: UIImage? = nil, latitude: Double? = nil, longitude: Double? = nil) {\n  if title.isEmpty || body.isEmpty || rating < 0 ||    rating > 5 {\n    return nil\n  }\n  self.date = Date()\n  self.rating = rating\n  self.title = title\n  self.body = body\n  self.photoData = photo?.jpegData(compressionQuality: 1.0)\n  self.latitude = latitude\n  self.longitude = longitude\n} \n```", "```swift\n    import Testing\n    **@testable****import** **JRNL**\n\n    struct JRNLTests {\n\n     **@Test****func****JournalEntryInitializationSucceeds****()** {\n        let zeroRatingJournalEntry = JournalEntry(rating: 0,    title: \"Zero\", body: \"Zero rating entry\")\n        #expect(zeroRatingJournalEntry != nil)\n\n        let positiveRatingJournalEntry = JournalEntry(    rating: 5, title: \"Highest\", body:     \"Highest rating entry\")\n        #expect(positiveRatingJournalEntry != nil)\n      }\n\n      @Test func JournalEntryInitializationFails() {\n        let entryTitleEmptyJournalEntry = JournalEntry(    rating: 3, title: \"\", body: \"No title\")\n        #expect(entryTitleEmptyJournalEntry == nil)\n\n        let entryBodyEmptyJournalEntry = JournalEntry(    rating: 3, title: \"No body\", body: \"\")\n        #expect(entryBodyEmptyJournalEntry == nil)\n\n        let negativeRatingJournalEntry = JournalEntry(    rating: -1, title: \"Negative\", body:     \"Negative rating entry\")\n        #expect(negativeRatingJournalEntry == nil)\n\n        let invalidRatingJournalEntry = JournalEntry(    rating: 6, title: \"Invalid\", body: \n        \"Invalid rating entry\")\n        #expect(invalidRatingJournalEntry == nil)\n      }\n    } \n    ```", "```swift\nimport Testing \n```", "```swift\n@testable import JRNL \n```", "```swift\n @Test func JournalEntryInitializationSucceeds() {\n    let zeroRatingJournalEntry = JournalEntry(rating: 0,    title: \"Zero\", body: \"Zero rating entry\")\n    #expect(zeroRatingJournalEntry != nil)\n\n    let positiveRatingJournalEntry = JournalEntry(    rating: 5, title: \"Highest\", body:     \"Highest rating entry\")\n    #expect(positiveRatingJournalEntry != nil)\n  } \n```", "```swift\n @Test func JournalEntryInitializationFails() {\n    let entryTitleEmptyJournalEntry = JournalEntry(    rating: 3, title: \"\", body: \"No title\")\n    #expect(entryTitleEmptyJournalEntry == nil)\n\n    let entryBodyEmptyJournalEntry = JournalEntry(    rating: 3, title: \"No body\", body: \"\")\n    #expect(entryBodyEmptyJournalEntry == nil)\n\n    let negativeRatingJournalEntry = JournalEntry(    rating: -1, title: \"Negative\", body:     \"Negative rating entry\")\n    #expect(negativeRatingJournalEntry == nil)\n\n    let invalidRatingJournalEntry = JournalEntry(\n    rating: 6, title: \"Invalid\", body:\n    \"Invalid rating entry\")\n    #expect(invalidRatingJournalEntry == nil)\n  } \n```"]