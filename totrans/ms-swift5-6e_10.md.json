["```swift\nclass Animal {\n    internal var landAnimal = false\n    internal var landAttack = false\n    internal var landMovement = false\n    internal var seaAnimal = false \n    internal var seaAttack = false \n    internal var seaMovement = false\n    internal var airAnimal = false\n    internal var airAttack = false\n    internal var airMovement = false\n    internal var hitPoints = 0\n} \n```", "```swift\ninit() { \n    landAnimal = false\n    landAttack = false\n    landMovement = false\n    airAnimal = false\n    airAttack = false\n    airMovement = false\n    seaAnimal = false\n    seaAttack = false\n    seaMovement = false\n    hitPoints = 0\n} \n```", "```swift\nfunc isLandAnimal() -> Bool { \n    return landAnimal\n}\nfunc canLandAttack() -> Bool { \n    return landAttack\n}\nfunc canLandMove() -> Bool { \n    return landMovement\n}\nfunc isSeaAnimal() -> Bool { \n    return seaAnimal\n}\nfunc canSeaAttack() -> Bool { \n    return seaAttack\n}\nfunc canSeaMove() -> Bool { \n    return seaMovement\n}\nfunc isAirAnimal() -> Bool { \n    return airAnimal\n}\nfunc canAirAttack() -> Bool { \n    return airAttack\n}\nfunc canAirMove() -> Bool { \n    return airMovement\n}\nfunc doLandAttack() {} \nfunc doLandMovement() {}\nfunc doSeaAttack() {} \nfunc doSeaMovement() {}\nfunc doAirAttack() {} \nfunc doAirMovement() {}\nfunc takeHit(amount: Int) { \n    hitPoints -= amount\n}\nfunc hitPointsRemaining() -> Int { \n    return hitPoints\n}\nfunc isAlive() -> Bool {\n    return hitPoints > 0 ? true : false\n} \n```", "```swift\nclass Lion: Animal { \n    override init() {\n        super.init() landAnimal = true\n        landAttack = true\n        landMovement = true\n        hitPoints = 20\n    }\n    override func doLandAttack() { \n        print(\"Lion Attack\")\n    }\n    override func doLandMovement() { \n        print(\"Lion Move\")\n    }\n}\nclass Alligator: Animal { \n    override init() {\n        super.init()\n        landAnimal = true\n        landAttack = true\n        landMovement = true\n        seaAnimal = true\n        seaAttack = true\n        seaMovement = true\n        hitPoints = 35\n    }\n    override func doLandAttack() { \n        print(\"Alligator Land Attack\")\n    }\n    override func doLandMovement() { \n        print(\"Alligator Land Move\")\n    }\n    override func doSeaAttack() { \n        print(\"Alligator Sea Attack\")\n    }\n    override func doSeaMovement() { \n        print(\"Alligator Sea Move\")\n    }\n} \n```", "```swift\nclass landAnimal: Animal { \n    override init() {\n        super.init()\n        landAnimal = true\n        airAttack = true\n        landMovement = true\n        hitPoints = 20\n    }\n    override func doLandAttack() { \n        print(\"Lion Attack\")\n    }\n    override func doLandMovement() { \n        print(\"Lion Move\")\n    }\n} \n```", "```swift\nvar animals = [Animal]()\nanimals.append(Alligator())\nanimals.append(Alligator())\nanimals.append(Lion())\nfor (index, animal) in animals.enumerated() { \n    if animal.isAirAnimal() {\n        print(\"Animal at \\(index) is Air\")\n    }\n    if animal.isLandAnimal() { \n        print(\"Animal at \\(index) is Land\")\n    }\n    if animal.isSeaAnimal() { \n        print(\"Animal at \\(index) is Sea\")\n    }\n} \n```", "```swift\nprotocol Name {\n    var firstName: String { get set }\n    var lastName: String { get set }\n}\nprotocol Age {\n    var age: Double { get set }\n}\nprotocol Fur {\n    var furColor: String { get set }\n}\nprotocol Hair {\n    var hairColor: String { get set }\n} \n```", "```swift\nprotocol Person: Name, Age, Hair { \n    var height: Double { get set }\n}\nprotocol Dog: Name, Age, Fur { \n    var breed: String { get set }\n} \n```", "```swift\nprotocol Occupation {\n    var occupationName: String { get set } \n    var yearlySalary:Double { get set }\n    var experienceYears: Double { get set }\n} \n```", "```swift\nstruct Programmer: Person, Occupation { \n    var firstName: String\n    var lastName: String \n    var age: Double\n    var hairColor: String \n    var height: Double\n    var occupationName: String \n    var yearlySalary: Double \n    var experienceYears: Double\n} \n```", "```swift\nprotocol Animal {\n    var hitPoints: Int { get set }\n} \n```", "```swift\nextension Animal {\n    mutating func takeHit(amount: Int) { \n        hitPoints -= amount\n    }\n    func hitPointsRemaining() -> Int { \n        return hitPoints\n    }\n    func isAlive() -> Bool {\n        return hitPoints > 0 ? true : false\n    }\n} \n```", "```swift\nprotocol LandAnimal: Animal { \n    var landAttack: Bool { get }\n    var landMovement: Bool { get }\n    func doLandAttack() \n    func doLandMovement()\n}\nprotocol SeaAnimal: Animal { \n    var seaAttack: Bool { get }\n    var seaMovement: Bool { get }\n    func doSeaAttack()\n    func doSeaMovement()\n}\nprotocol AirAnimal: Animal { \n    var airAttack: Bool { get }\n    var airMovement: Bool { get }\n    func doAirAttack()\n    func doAirMovement()\n} \n```", "```swift\nstruct Lion: LandAnimal { \n    var hitPoints = 20 \n    let landAttack = true\n    let landMovement = true\n    func doLandAttack() { \n        print(\"Lion Attack\")\n    }\n    func doLandMovement() { \n        print(\"Lion Move\")\n    }\n}\nstruct Alligator: LandAnimal, SeaAnimal { \n    var hitPoints = 35\n    let landAttack = true \n    let landMovement = true \n    let seaAttack = true \n    let seaMovement = true\n    func doLandAttack() { \n        print(\"Alligator Land Attack\")\n    }\n    func doLandMovement() { \n        print(\"Alligator Land Move\")\n    }\n    func doSeaAttack() { \n        print(\"Alligator Sea Attack\")\n    }\n    func doSeaMovement() { \n        print(\"Alligator Sea Move\")\n    }\n} \n```", "```swift\nvar animals = [Animal]()\nanimals.append(Alligator())\nanimals.append(Alligator())\nanimals.append(Lion())\nfor (index, animal) in animals.enumerated() { \n    if let _ = animal as? AirAnimal {\n        print(\"Animal at \\(index) is Air\")\n    }\n    if let _ = animal as? LandAnimal { \n        print(\"Animal at \\(index) is Land\")\n    }\n    if let _ = animal as? SeaAnimal { \n        print(\"Animal at \\(index) is Sea\")\n    }\n} \n```", "```swift\nfor (index, animal) in animals.enumerated() where animal is SeaAnimal { \n    print(\"Only Sea Animal: \\(index)\")\n} \n```"]