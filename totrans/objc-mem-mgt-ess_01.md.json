["```swift\nint main(int argc, char *argv[]) {\n\n  SomeObject *myOwnObject;\n  // myOwnObject is created in main\n   myOwnObject = [[SomeObject alloc] init];\n\n    // myOwnObject can be used by other objects\n  [anotherObject using:myOwnObject];\n\n    // but main is responsible for releasing it\n   [myOwnObject release];\n```", "```swift\nint main (int argc, char *argv[]) {\n\n  SomeObject *myOwnObject;\n  // myOwnObject is created in main\nmyOwnObject = [[SomeObject alloc] init];\n\n// myOwnObject can be used by other objects\nNSMutableArray *myArray;\n// add my object to myArray    \nmyArray = [[NSMutableArray alloc] initWithObjects:myOwnObject, nil];\n\n// main does not need myOwnObject any more\n[myOwnObject release];\n\n// but myOwnObject still is needed inside the array\n[anotherObj usingArray: myArray];\n```", "```swift\nint main(int argc, char *argv[]) {\n\n  SomeObject *myOwnObject;\n  // myOwnObject is created in main\n   myOwnObject = [[SomeObject alloc] init];\n  // myOwnObject has retain count equal to 1\n\n// myOwnObject can be used by other objects\nNSMutableArray *myArray;\n// add my object to myArray    \nmyArray = [[NSMutableArray alloc] initWithObjects:myOwnObject, nil];\n//inside myOwnObject got another retain message\n//and now its retain count equal 2\n\n// main does not need myOwnObject any more\n[myOwnObject release];\n// release decrements retain count\n// and now myOwnObject retain count now is 2-1 = 1\n\n// but myOwnObject still is needed inside the array\n[anotherObj usingArray: myArray];\n\n[myArray release];\n// on array destruction every object inside array gets release message\n\n//myOwnObject retain count decreases this time to 0 and myOwnObject will be deleted together with the array\n```", "```swift\nNSMutableString *str = [[NSMutableString alloc] initWithString:@\"Leaky\"];\n```", "```swift\n [myObject autorelease];\n```", "```swift\n   //for NSObject class \n  @interface NSObject <NSObject>\n```", "```swift\n   // for NSProxy class @interface NSProxy <NSObject>\n```", "```swift\n    @protocol MyOwnProtocol\n    - (void)myFunction;\n    @end\n```", "```swift\n    id<MyProtocol> myOwnObject;\n```", "```swift\n    [myOwnObject myFunction];\n```", "```swift\n    [myOwnObject description]; // no such method in the protocol\n```", "```swift\n    [myOwnObject isEqual: anotherObject];\n    // no such method in the protocol\n```", "```swift\n    @protocol MyOwnProtocol <NSObject>\n    - (void)myFunction;\n    @end\n```"]