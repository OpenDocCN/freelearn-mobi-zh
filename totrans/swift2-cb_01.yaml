- en: Chapter 1. Getting Started with Xcode and Swift
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章. 使用 Xcode 和 Swift 入门
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下食谱：
- en: Installing Xcode from the App Store
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 App Store 安装 Xcode
- en: Downloading the Xcode image
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载 Xcode 图像
- en: Starting a Swift project
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始一个 Swift 项目
- en: Using Swift project options
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Swift 项目选项
- en: Creating conditional code
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建条件代码
- en: Migrating an existing project to Swift 2.0
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将现有项目迁移到 Swift 2.0
- en: Adding a developer account
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加开发者账户
- en: Compiling from the command line
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从命令行编译
- en: Using Swift as an interpreter
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Swift 作为解释器使用
- en: Adding a control version system to an existing project
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向现有项目添加版本控制系统
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In this chapter, we will learn the basics of creating a project with Swift.
    Even if you have already created your own project, it is worth reading the recipes
    of this chapter. You will learn how to interact with Xcode, how to test your code
    from the command line, and at the end, we will review the basics of this language.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习使用 Swift 创建项目的基础知识。即使你已经创建了你的项目，阅读本章的食谱也是值得的。你将学习如何与 Xcode 交互，如何从命令行测试你的代码，最后，我们将回顾这门语言的基础知识。
- en: Before downloading Xcode, note that Swift requires Xcode 6.0 for Swift 1.0,
    and 1.2 or Xcode 7.0 for Swift 2.0 and 2.1\. We will be installing Xcode 7.0 (the
    latest version, as of this writing). To install version 7.0 of Xcode, you must
    have at least OS X Yosemite (OS X 10.10), so meet these requirements before installing
    it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在下载 Xcode 之前，请注意 Swift 需要 Xcode 6.0 来支持 Swift 1.0，以及 1.2 或 Xcode 7.0 来支持 Swift
    2.0 和 2.1。我们将安装 Xcode 7.0（截至本文写作时的最新版本）。要安装 Xcode 7.0 版本，你必须至少有 OS X Yosemite（OS
    X 10.10），所以在安装之前满足这些要求。
- en: Installing Xcode from the App Store
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 App Store 安装 Xcode
- en: The first way of installing Xcode is by downloading it from the App Store. The
    advantage of this method is that you will be warned about updates, and the system
    requirements will be checked before the download starts.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Xcode 的第一种方式是从 App Store 下载。这种方法的优势是，你会在下载开始之前收到更新警告，并且会检查系统要求。
- en: Getting ready
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To download any program from the App Store, you must have an Apple ID; it's
    free and it won't take long to set up.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要从 App Store 下载任何程序，你必须有一个 Apple ID；它是免费的，设置起来也不会花很长时间。
- en: How to do it…
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: To download Xcode from the App Store, just open **App Store** from your dock
    or your applications folder.![How to do it…](img/00002.jpeg)
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从 App Store 下载 Xcode，只需从你的 dock 或应用程序文件夹中打开 **App Store**。![如何操作…](img/00002.jpeg)
- en: The first time you open the App Store, it will ask you for your Apple ID details
    (e-mail and password). After opening this application, just search for `xcode`
    in the textbox, which is located on the upper-right corner of this application.![How
    to do it…](img/00003.jpeg)
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一次打开 App Store，它会要求你提供 Apple ID 详细信息（电子邮件和密码）。打开此应用程序后，只需在应用程序右上角的文本框中搜索 `xcode`。![如何操作…](img/00003.jpeg)
- en: Make sure that you are installing Xcode from the right vendor (Apple); sometimes
    we get results that lead us to think that they are what we want but they aren't.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你从正确的供应商（Apple）安装 Xcode；有时我们会得到一些结果，让我们认为它们是我们想要的，但事实并非如此。
- en: Once you have found the Xcode app, just click on the **Install** button, and
    the next step is to go for coffee, or you can call a friend, because Xcode is
    2.2 gigabytes, which means that it will take a while to download, so take a break
    now.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你找到了 Xcode 应用程序，只需点击 **安装** 按钮，下一步就是去喝杯咖啡，或者你可以叫一个朋友，因为 Xcode 有 2.2 个吉字节，这意味着下载需要一段时间，所以现在休息一下。
- en: To check whether Xcode has finished the installation, you just need to open
    the **Applications** folder or the Launchpad app, then have a look to see whether
    there is a progress bar under the Xcode icon.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检查 Xcode 是否已完成安装，你只需打开 **应用程序** 文件夹或启动盘应用程序，然后查看 Xcode 图标下是否有进度条。
- en: How it works…
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Like any other application that you will install from the App Store, you only
    need to open the App Store application, search for it, and install it.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 就像你将从 App Store 安装的其他任何应用程序一样，你只需要打开 App Store 应用程序，搜索它，然后安装它。
- en: There's more…
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: If you buy a new computer, you will see that Xcode will be offered to be installed
    onto your new machine. This is because Apple keeps track of the applications you've
    already installed.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你买了一台新电脑，你会看到 Xcode 会被推荐安装到你的新机器上。这是因为苹果会跟踪你已经安装的应用程序。
- en: Downloading the Xcode image
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载 Xcode 图像
- en: The second way of installing Xcode is by downloading an image from the Apple
    Developer Center; this step is not free, it's only available to members of the
    Apple Developer Program (which costs approximately $99 a year) or for people who
    work in companies that are members of this program.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Xcode 的第二种方式是下载来自 Apple 开发者中心的镜像；这一步骤不是免费的，仅限于 Apple 开发者计划的成员（每年大约 99 美元）或在该计划成员公司工作的人。
- en: Getting ready
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, you will need to have 2.2 gigabytes of free space besides the
    space stored by the installed Xcode, but I will assume that you won't have this
    problem.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个菜谱，你需要有 2.2 GB 的空闲空间，除了已安装的 Xcode 所占用的空间，但我假设你不会遇到这个问题。
- en: The advantage of downloading a DMG file is that you can save it onto a DVD as
    a backup (you never know when this version of Xcode will be removed from the App
    Store). Also, if you work in a team, it is very important to have every member
    working with the same Xcode version. In addition, if you want to install any beta
    version of Xcode, it will only be available through the Apple Developer Center.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 DMG 文件的优势在于你可以将其保存到 DVD 上作为备份（你永远不知道 Xcode 这个版本何时会被从 App Store 中移除）。此外，如果你在一个团队中工作，确保每个成员使用相同的
    Xcode 版本非常重要。另外，如果你想安装任何 Xcode 的测试版，它只能通过 Apple 开发者中心获取。
- en: How to do it…
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'To download the Xcode image, follow these steps:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载 Xcode 镜像，请按照以下步骤操作：
- en: 'The first step is to open your web browser; go to [http://developer.apple.com/xcode](http://developer.apple.com/xcode),
    then click the download button in the top-right corner of the web page. You will
    be brought to a new page with two download options: the latest beta build or a
    link to the Mac App Store. If you select to download the beta build, a login will
    be required. The download will begin immediately after logging in. Otherwise you
    can download the latest public build for free in the Mac App Store.'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是打开你的网页浏览器；访问 [http://developer.apple.com/xcode](http://developer.apple.com/xcode)，然后点击网页右上角的下载按钮。你将被带到一个新的页面，有两个下载选项：最新的测试版构建或指向
    Mac App Store 的链接。如果你选择下载测试版构建，需要登录。登录后，下载将立即开始。否则，你可以在 Mac App Store 中免费下载最新的公共构建。
- en: Tip
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can have multiple versions of Xcode on a single machine; specifically, the
    public release and any beta versions made available by Apple.
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以在一台机器上安装多个版本的 Xcode；具体来说，是公共发布版和苹果提供的任何测试版。
- en: After downloading the DMG file, double-click on it and drag the Xcode icon into
    your **Applications** folder. Remember that you need the administrator's permission
    to copy files into the **Applications** folder.![How to do it…](img/00004.jpeg)
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载 DMG 文件后，双击它，将 Xcode 图标拖到你的 **应用程序** 文件夹中。记住，你需要管理员权限才能将文件复制到 **应用程序** 文件夹中。![如何操作……](img/00004.jpeg)
- en: You can also install Xcode onto a different path such as your home directory,
    but I wouldn't recommend this if it's not necessary.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你也可以将 Xcode 安装到不同的路径，比如你的主目录，但如果不是必要的，我不建议这样做。
- en: Tip
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Don't search for "download Swift" on your search engine as there is another
    programming language that is also called **Swift**, which has nothing to do with
    Apple devices.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不要在搜索引擎中搜索“下载 Swift”，因为还有一种也叫 **Swift** 的编程语言，它与苹果设备无关。
- en: How it works…
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: The DMG file ensures that you can always have a backup of this Xcode version,
    so if for any reason you have problems with future versions of Xcode, you can
    install the previous version. It is also possible to have more than one Xcode
    version installed onto your computer.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: DMG 文件确保你可以始终拥有这个 Xcode 版本的备份，所以如果你未来版本的 Xcode 出现任何问题，你可以安装之前的版本。也可能在你的电脑上安装多个
    Xcode 版本。
- en: There's more…
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: The Apple Developer Center is a good website to get Xcode resources. Here, you
    can find videos, guides, code samples, and add-ons.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Apple 开发者中心是一个获取 Xcode 资源的好网站。在这里，你可以找到视频、指南、代码示例和附加组件。
- en: Starting a Swift project
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始 Swift 项目
- en: Usually, starting Swift is something that is very straightforward; however,
    it is good to know what is going on in every step.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，开始 Swift 是一件非常直接的事情；然而，了解每一步发生的事情是很好的。
- en: Getting ready
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before you start a project, make sure that you know your project name and in
    which folder it will be saved. Changing this kind of parameter can create problems
    after the project has been created. Once you have Xcode installed, you can open
    it from your application folder, from the Launch pad, or even from your dock if
    you have added Xcode onto it. As I'm a very lazy person, I prefer the latter;
    it's faster for me to have it on my dock.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在您开始项目之前，请确保您知道项目名称以及它将保存在哪个文件夹中。更改此类参数可能会在项目创建后造成问题。一旦您安装了Xcode，您可以从应用程序文件夹、启动台或甚至从您的坞站打开它，如果您已经将Xcode添加到坞站的话。由于我非常懒惰，我更喜欢后者；它对我来说更快，因为它在我的坞站上。
- en: How to do it…
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: The first time you open Xcode, it's possible that it will ask to install some
    additional packages, so do it. Some of these packages are important, depending
    on the type of application you are developing, and some of them are necessary
    to have access for some devices, mainly the newest ones.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当您第一次打开Xcode时，它可能会要求您安装一些额外的包，所以请这样做。这些包中的一些对于您正在开发的应用程序类型很重要，而其中一些对于访问某些设备（主要是最新设备）是必要的。
- en: Now, Xcode is asking you about the project you want to start or open. Check
    the option that says **Create a new Xcode project**.![How to do it…](img/00005.jpeg)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，Xcode正在询问您想要启动或打开的项目。请选择显示为**创建一个新的Xcode项目**的选项。[![如何操作…](img/00005.jpeg)]
- en: If, for any reason, this window is not shown to you, there is always the option
    to go to **File** (on the menu bar) | **New** | **Project**.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果由于任何原因，此窗口没有显示给您，您始终可以选择转到**文件**（在菜单栏上）| **新建** | **项目**。
- en: The next step is to choose the type of project that you want to develop. For
    this example, I will use a **Single View Application** for iOS, but I'll make
    comments if there is anything different on OS X applications or for another type
    of project.![How to do it…](img/00006.jpeg)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是选择您想要开发的项目类型。在这个例子中，我将使用iOS的**单视图应用程序**，但如果有任何不同之处，我会对OS X应用程序或其他类型的项目进行注释。[![如何操作…](img/00006.jpeg)]
- en: The next dialog will ask you for some project information, one example being
    the programming language that you want to use. In this example, we will use Swift.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下一个对话框将要求您提供一些项目信息，其中一个例子是您想要使用的编程语言。在这个例子中，我们将使用Swift。
- en: '![How to do it…](img/00007.jpeg)'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/00007.jpeg)'
- en: Choose Swift as the language and it will create the application with its delegate,
    with Swift code. Make sure that **Use Core Data** is unchecked to prevent having
    its code on the app delegate.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择Swift作为语言，它将使用其代理创建带有Swift代码的应用程序。请确保**使用Core Data**选项未被勾选，以防止其代码出现在应用代理中。
- en: You will also notice that Swift iOS applications now have no files called `main.m`,
    `main.mm`, or `main.swift`. OS X apps have a `main.swift` file, but it is smaller
    than the previous `main.m` file.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您还会注意到，Swift iOS应用程序现在没有名为`main.m`、`main.mm`或`main.swift`的文件。OS X应用程序有一个`main.swift`文件，但它比之前的`main.m`文件小。
- en: As you should already know, the product name is your application name, the organization
    name is the proprietary of this software, and the organization identifier is the
    reversed Internet domain, for example, `uk.co.packtpub` instead of `packtpub.co.uk`.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正如您应该已经知道的，产品名称是您的应用程序名称，组织名称是此软件的所有者，组织标识符是反向的互联网域名，例如，`uk.co.packtpub`而不是`packtpub.co.uk`。
- en: Note
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that now there is no checkbox for creating unit tests because, by default,
    it is created for you using XCTest. If you don't want it, just remove the group
    from your project. I wouldn't remove it, it usually doesn't hurt.
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意现在没有创建单元测试的复选框，因为默认情况下，它使用XCTest为您创建。如果您不想使用它，只需从您的项目中删除该组即可。我不会删除它，它通常不会造成伤害。
- en: Now, it's time to choose a folder to store our project. Remember that during
    the development, you can add files, which will be stored in different locations.
    I don't recommend this kind of practice, but if you have to do so, try to have
    your project close to these files.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，是时候选择一个文件夹来存储我们的项目了。记住，在开发过程中，您可以添加文件，这些文件将存储在不同的位置。我不推荐这种做法，但如果您必须这样做，尽量让您的项目靠近这些文件。
- en: I also recommend you to check the option to use a Git repository, except if
    you have a subversion repository, of course. Even if you are the only developer,
    it's important to have a version control system. Remember that we are humans,
    and sometimes we make mistakes and so have to go back.![How to do it…](img/00008.jpeg)
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我还建议您检查使用Git仓库的选项，除非您有子版本仓库，当然。即使您是唯一的开发者，拥有版本控制系统也很重要。请记住，我们是人类，有时我们会犯错误，因此需要回滚。![如何操作…](img/00008.jpeg)
- en: Once you have the project created, press the play button to see it working.
    If it's the first time you have installed Xcode, it will show you a dialog asking
    you to enable the developer mode. Click on the **Enable** button if you have the
    administrator password.![How to do it…](img/00009.jpeg)
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你创建了项目，按下播放按钮看看它是否在运行。如果你是第一次安装 Xcode，它将显示一个对话框要求你启用开发者模式。如果你有管理员密码，请点击 **启用**
    按钮![如何操作…](img/00009.jpeg)
- en: Ok! Now you have your project up and running.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好的！现在你的项目已经启动并运行。
- en: How it works…
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Creating a project is not something difficult; you only need to pay attention
    to some steps. Make sure that you have selected Swift as the main programming
    language; otherwise, you will see a lot of stuff with Objective-C.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个项目并不是什么困难的事情；你只需要注意一些步骤。确保你已经选择了 Swift 作为主要编程语言；否则，你会看到很多与 Objective-C 相关的内容。
- en: Pay attention to the folder where you will create your project. Xcode will create
    another folder with your project name, and inside of it, Xcode will create the
    project bundle, a folder with the source code. If you want to copy your project,
    make sure that you copy the folder that contains everything.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 注意你将创建项目的文件夹。Xcode 会为你创建一个以项目名称命名的另一个文件夹，并在其中，Xcode 会创建项目包，一个包含源代码的文件夹。如果你想复制你的项目，确保你复制包含所有内容的文件夹。
- en: There's more…
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: If you want to work on a team that has already started a project, you will probably
    clone the project using the **Check out an existing project** option. You will
    use a Git or a subversion repository and you will have your code synchronized
    with the other members of the team. Xcode offers us the basic tools to work with
    a **VCS** (**version** **control system**); these are enough for 80 percent of
    our tasks.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要在一个已经启动项目的团队中工作，你可能会使用 **检出现有项目** 选项来克隆项目。你将使用 Git 或子版本库，并将你的代码与其他团队成员同步。Xcode
    为我们提供了与 **VCS**（**版本** **控制系统**）一起工作的基本工具；这些工具足以完成我们80%的任务。
- en: Using the Swift project options
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Swift 项目选项
- en: Xcode projects come with lots of options. Here, we will know some of them, mainly
    the Swift-specific ones.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode 项目有很多选项。在这里，我们将了解其中的一些，主要是 Swift 特定的选项。
- en: Getting ready
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To perform this recipe, just create a new project, as shown in the previous
    recipe.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行这个菜谱，只需创建一个新的项目，如前一个菜谱所示。
- en: How to do it…
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Once you've created a project, click on the navigator project icon or press
    *command + 1* if you prefer a keyboard shortcut, then click on your project icon
    (the first icon). Now, click on **Build Settings**.![How to do it…](img/00010.jpeg)
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你创建了一个项目，点击导航器项目图标或如果你更喜欢键盘快捷键，按 *command + 1*，然后点击你的项目图标（第一个图标）。现在，点击 **构建设置**。![如何操作…](img/00010.jpeg)
- en: Look for **Embedded Content Contains Swift Code**; in this case, we will select
    **No**, but of course, if you know that there is any extra content created with
    Swift, you should select **Yes**.![How to do it…](img/00011.jpeg)
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找 **嵌入式内容包含 Swift 代码**；在这种情况下，我们将选择 **否**，但当然，如果你知道有任何使用 Swift 创建的额外内容，你应该选择
    **是**。![如何操作…](img/00011.jpeg)
- en: Go to the **General** tab and scroll down; you can see where you can add the
    embedded binaries.![How to do it…](img/00012.jpeg)
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 **通用** 选项卡并向下滚动；你可以看到你可以添加嵌入式二进制文件的地方。![如何操作…](img/00012.jpeg)
- en: Now, look for **Optimization Level**. Here is where you tell the compiler how
    much time it should expend trying to make your code faster or compress it. Usually,
    when we are developing (debug mode), we set for no optimization (-O0); however,
    when we are going to create the final product (release mode), we will usually
    set an optimization level such as Os, which means fastest and smallest.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，查找 **优化级别**。这里是你告诉编译器它应该花费多少时间来尝试使你的代码更快或压缩它的地方。通常，当我们开发（调试模式）时，我们设置为无优化（-O0）；然而，当我们准备创建最终产品（发布模式）时，我们通常会设置一个优化级别，例如
    Os，这意味着最快和最小。
- en: Note
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Sometimes, with Objective-C, when you used to set a high level of optimization,
    the debugger used to lose some of the variable values. I haven't seen this phenomenon
    with Swift yet, but it's good to have it in mind.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有时候，在使用 Objective-C 时，当你曾经设置过高级别的优化时，调试器会丢失一些变量值。我还没有在 Swift 中看到这种现象，但最好心中有数。
- en: Another important option is **Import paths**. This tells Swift where it should
    look for Swift modules. If you are linking your project with external libraries,
    you may need to specify where the `module.map` file is. If you have more than
    one path to search, you need to set them one per line. If you have different paths
    for debug and release, you can still use variables such as `$(CONFIGURATION)`
    or `$(TARGET)`.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 另一个重要的选项是**导入路径**。这告诉Swift在哪里查找Swift模块。如果你正在将你的项目与外部库链接，你可能需要指定`module.map`文件的位置。如果你有多个路径要搜索，你需要逐行设置它们。如果你为调试和发布有不同的路径，你仍然可以使用变量，例如`$(CONFIGURATION)`或`$(TARGET)`。
- en: Tip
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can use absolute or relative paths, but I would give preference to the relative
    ones.
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以使用绝对路径或相对路径，但我更倾向于相对路径。
- en: How it works…
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Changing settings is something that you have to do mainly when your project
    starts growing. There are some options that you set differently for debug and
    release configurations.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 更改设置主要是当你的项目开始增长时必须做的事情。有一些选项你为调试和发布配置设置了不同的值。
- en: There's more…
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'Xcode has a lot of configuration settings; showing all of them would be out
    of the scope of this book. I recommend that you at least look at some of them,
    mainly if you want to work with big projects. My main recommendation here is:
    do not change your settings without synchronizing with the other members of your
    team (mainly with the project manager). If you cause a conflict with the VCS,
    it could be hard work to fix it.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode有很多配置设置；展示所有这些设置超出了本书的范围。我建议你至少查看其中的一些，尤其是如果你想处理大型项目。在这里我的主要建议是：不要在没有与你的团队其他成员（主要是项目经理）同步的情况下更改你的设置。如果你与VCS发生冲突，修复它可能会很困难。
- en: Creating conditional code
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建条件代码
- en: Usually when we are developing, we have some cases where we would like to have
    different pieces of code according to our needs. For example, let's imagine that
    we would like to compare the performance of some functions written by us with
    some equivalent functions that were created on a third-party library. In this
    case, we can create some macros for using only our functions or for using only
    the third-party functions, allowing us to have the same application working in
    two different ways.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 通常在我们开发时，我们有一些情况，我们希望根据我们的需求有不同的代码片段。例如，让我们想象一下，我们想要比较我们编写的某些函数与在第三方库中创建的等效函数的性能。在这种情况下，我们可以创建一些宏，用于仅使用我们的函数或仅使用第三方函数，这样我们就可以让同一个应用程序以两种不同的方式工作。
- en: In this recipe, we will show you how to create a log according to a platform
    and we can also enable or disable it if the execution is being affected by the
    excess of logs.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将向你展示如何根据平台创建日志，我们还可以根据执行是否受到日志过多的影响来启用或禁用它。
- en: Getting ready
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a new project called `Chapter 1 Conditional Code`, as shown earlier,
    and let's code a little bit.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`Chapter 1 Conditional Code`的新项目，如之前所示，让我们编写一些代码。
- en: How to do it…
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: After creating a new project, let's create a new file by navigating to **File**
    | **New** | **File...**. Now, choose **Swift File** and name it `CustomLog.swift`.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建一个新的项目后，让我们通过导航到**文件** | **新建** | **文件...**来创建一个新的文件。现在，选择**Swift文件**并将其命名为`CustomLog.swift`。
- en: Tip
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Don't save your files on a different folder from the project; this will give
    you problems in the future.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不要将你的文件保存在与项目不同的文件夹中；这将来可能会给你带来问题。
- en: 'Now, add the following code:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，添加以下代码：
- en: '[PRE0]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, go to the `viewDidLoad` method of your view controller, and add a call
    for this function, like this:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，前往你的视图控制器的`viewDidLoad`方法，并添加对这个函数的调用，如下所示：
- en: '[PRE1]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Try clicking play now; what do you see? The answer is—nothing! The reason is
    that the compiler knows nothing about the macro `VERBOSE_LOG`, which means that
    this macro is interpreted as *false* and the only thing that is created is an
    empty function.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在尝试点击播放；你看到了什么？答案是——什么都没有！原因是编译器对宏`VERBOSE_LOG`一无所知，这意味着这个宏被解释为*false*，唯一创建的就是一个空函数。
- en: Now, go back to your project build settings, search for other swift flags, and
    add `-DVERBOSE_LOG`, as shown in the following screenshot:![How to do it…](img/00013.jpeg)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，回到你的项目构建设置，搜索其他Swift标志，并添加`-DVERBOSE_LOG`，如下面的截图所示：![如何做到这一点…](img/00013.jpeg)
- en: Click on play again and you will see the log message.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次点击播放，你会看到日志消息。
- en: How it works…
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'Currently, the Swift compiler has two defined macros: `os()` and `arch()`.
    The first one can receive OS X or iOS as arguments, and the second one can receive
    x86_64, arm, arm64, and i386\. Both macros will return a Boolean value. You can
    also create your own macro, defining it on your build settings.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，Swift 编译器定义了两个宏：`os()` 和 `arch()`。第一个可以接收 OS X 或 iOS 作为参数，第二个可以接收 x86_64、arm、arm64
    和 i386。这两个宏都将返回一个布尔值。您也可以创建自己的宏，在构建设置中定义它。
- en: The block that is evaluated as `true` will be compiled, and the other blocks
    will not be compiled; this way you can have code that calls OS-specific functions.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 被评估为 `true` 的块将被编译，其他块则不会编译；这样，您可以拥有调用 OS 特定功能的代码。
- en: Note
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: I would like to emphasize, mainly for those developers who are used to working
    with C projects, that the Apple documentation leaves a very clear message that
    Swift has no preprocessor; it only uses a trick on compilation time, so you can't
    use macros as we used to do on C or even on Objective-C. The only thing you can
    do is watch to see whether they are set or not.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我想强调，主要是针对那些习惯于使用 C 项目开发的开发者，苹果的文档明确指出 Swift 没有预处理器；它只在编译时使用一个技巧，因此您不能像在 C 或
    Objective-C 中那样使用宏。您唯一能做的就是查看它们是否已设置。
- en: There's more…
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: 'If you need to, you can use the operators `&&`, `||`, and `!` as shown here:
    `#if arch(arm64) && os(iOS)`, but you can''t use any kind of comparator operator
    such as `==`, `<`, and so on.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，您可以使用此处所示的运算符 `&&`、`||` 和 `!`：`#if arch(arm64) && os(iOS)`，但不能使用任何比较运算符，如
    `==`、`<` 等。
- en: If you are interested in knowing more options that you can add to other Swift
    flags, check out the *Compiling from the command line* recipe in this chapter.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解更多可以添加到其他 Swift 标志的选项，请查看本章中的 *从命令行编译* 菜谱。
- en: Migrating an existing project to Swift 2.0
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将现有项目迁移到 Swift 2.0
- en: If you have an existing project written in Swift 2.0 or below, Apple has provided
    some handy tools with Xcode 7 for you to migrate to Swift 2.0 with ease.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有一个用 Swift 2.0 或更低版本编写的现有项目，苹果已经为 Xcode 7 提供了一些方便的工具，帮助您轻松地将项目迁移到 Swift 2.0。
- en: Getting ready
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, you will need an existing Xcode project written in Swift 1.2
    or below.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个菜谱，您需要一个用 Swift 1.2 或更低版本编写的现有 Xcode 项目。
- en: How to do it…
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to migrate an existing project:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 按以下步骤迁移现有项目：
- en: Locate your existing Xcode project and open the `.xcodeproj` or `.xcworkspace`
    file to automatically open Xcode 7\. Once the project or workspace loads, Xcode
    will present you with the following message prompting you to convert to the latest
    Swift syntax:![How to do it…](img/00014.jpeg)
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位您的现有 Xcode 项目，并打开 `.xcodeproj` 或 `.xcworkspace` 文件以自动打开 Xcode 7。一旦项目或工作区加载，Xcode
    将显示以下消息，提示您转换为最新的 Swift 语法：![如何操作…](img/00014.jpeg)
- en: Click on **Convert** and you will be taken to a new screen. This screen displays
    some information about what the conversion process will look like. Select **Next**
    to continue.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**转换**，您将被带到一个新的屏幕。此屏幕显示有关转换过程的一些信息。选择**下一步**以继续。
- en: You will now be asked to select which targets to update to Swift 2.0\. This
    is very useful if you need to leave any targets in their current state. Review
    your list of targets and uncheck those that you do not want updated, and select
    **Next**.![How to do it…](img/00015.jpeg)
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在将被要求选择要更新到 Swift 2.0 的目标。如果您需要保留任何目标处于当前状态，这将非常有用。请审查您的目标列表，取消选中您不希望更新的目标，然后选择**下一步**。![如何操作…](img/00015.jpeg)
- en: You will be presented with a new screen, similar to the assistant editor, comparing
    the results after migration to the current state of your code. In the far left
    pane, you will see a list of all files that will receive a change and can manually
    select files to not make any changes.![How to do it…](img/00016.jpeg)
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到一个新屏幕，类似于辅助编辑器，比较迁移后的结果与您的代码当前状态。在左侧的远端面板中，您将看到一个将接受更改的所有文件的列表，并且可以手动选择不更改的文件。![如何操作…](img/00016.jpeg)
- en: Tip
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If there are any files you wish NOT to be migrated, simply uncheck them from
    the left pane list of files.
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果有任何文件您希望**不**迁移，只需从左侧文件列表中取消选中它们。
- en: Once you have verified or modified all changes, select **Save**. Xcode will
    update all changes and you will be ready to continue development with Swift 2.0.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您已验证或修改了所有更改，请选择**保存**。Xcode 将更新所有更改，您将准备好继续使用 Swift 2.0 进行开发。
- en: How it works…
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Apple has made Xcode extremely versatile in code migration. Thankfully, this
    takes most of the hassle out of migration to Swift 2.0 and allows you to get straight
    to writing more code. However, the migration process is not perfect and manual
    changes are likely required for complex projects.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果已经使Xcode在代码迁移方面非常灵活。幸运的是，这大多数都简化了迁移到Swift 2.0的过程，并允许你直接编写更多代码。然而，迁移过程并不完美，对于复杂的项目可能需要手动更改。
- en: There's more…
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: If for any reason the migration prompt did not automatically display itself,
    you can still start the process on your own. Navigate from the menu bar to **Edit**
    | **Convert** | **To Latest Swift Syntax**. You will be brought directly to step
    2 of this recipe.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于任何原因迁移提示没有自动显示，你仍然可以自己开始这个过程。从菜单栏导航到**编辑** | **转换** | **转换为最新Swift语法**。你将被直接带到这个菜谱的第2步。
- en: Adding a developer account
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加开发者账户
- en: Usually, Apple tries to make the developer's life easier by improving Xcode
    and creating tools, but there is an exception when we talk about certificates.
    If you want to test your app on a physical device (iPhone, iPad, or iPod), you
    need a certificate. If you would like to upload it onto the App Store, you also
    need this certificate.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，苹果公司通过改进Xcode和创建工具来让开发者的生活变得更简单，但在谈到证书时，有一个例外。如果你想在一个物理设备（iPhone、iPad或iPod）上测试你的应用，你需要一个证书。如果你想将其上传到App
    Store，你也需要这个证书。
- en: The idea of a certificate is to protect your code from malicious code or from
    being modified after being signed, but this idea has a price. To get a certificate,
    you will need to be enrolled on the Apple Developer Program.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 证书的想法是为了保护你的代码免受恶意代码或签名后的修改，但这种想法是有代价的。要获取证书，你需要注册苹果开发者计划。
- en: Getting ready
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will assume that if you continue with this recipe, you are already enrolled
    on this program. Let's recycle the previous project; open it, and let's start.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设如果你继续这个菜谱，你已经注册了这个计划。让我们回收之前的工程；打开它，然后开始。
- en: How to do it…
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Follow these steps to add an Apple developer account:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤添加苹果开发者账户：
- en: Once you've opened the project, click on the project navigator, then click on
    the combobox that shows our project, and select the target `Chapter 1` if it's
    not selected yet.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你打开了项目，点击项目导航器，然后点击显示我们项目的组合框，如果尚未选择，请选择目标`第1章`。
- en: Now, have a look at the option called **Team**. In the case of programming a
    Mac application, this combobox is enabled only if you select the signing option
    to Mac App Store or Developer ID.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，看看名为**团队**的选项。在编写Mac应用程序的情况下，这个组合框只有在选择将签名选项设置为Mac App Store或开发者ID时才会启用。
- en: Usually, the team option starts with **None** selected. Click over this combobox
    and select **Add Account**.![How to do it…](img/00017.jpeg)
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通常，团队选项开始时是**无**被选中的。点击这个组合框并选择**添加账户**。![如何做到这一点…](img/00017.jpeg)
- en: After selecting to add an account, Xcode will ask for your Apple Developer Program
    login data (e-mail and password). If you don't have it, you have the option to
    join the program.![How to do it…](img/00018.jpeg)
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选择添加账户后，Xcode将要求你提供苹果开发者计划的登录数据（电子邮件和密码）。如果你没有，你有选择加入该计划。![如何做到这一点…](img/00018.jpeg)
- en: Once you've added this, you are supposed to use your account and run your app.
    If you have a device attached to your Mac, you can go to the **Window** option
    on the menu bar and then you can select the **Devices** option.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦添加了这些，你应该使用你的账户并运行你的应用。如果你将设备连接到Mac，你可以转到菜单栏上的**窗口**选项，然后选择**设备**选项。
- en: Note
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Your device should appear on the dialog. Xcode could take a while to read the
    device's symbols. In the case of attaching this device for the first time, you
    will see that you will have to ask to change the status of this device to developer
    mode.
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你的设备应该会出现在对话框中。Xcode可能需要一段时间来读取设备的符号。在首次连接此设备的情况下，你会看到你需要请求更改此设备的状态为开发者模式。
- en: When you get the green light, it means that your device is ready to be used
    for development; now, go back to your project and change from the simulator to
    your device.![How to do it…](img/00019.jpeg)
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你得到绿灯时，这意味着你的设备已准备好用于开发；现在，回到你的项目，从模拟器切换到你的设备。![如何做到这一点…](img/00019.jpeg)
- en: If the device is enabled but not listed by Xcode, it could mean that you have
    to decrease the **iOS Deployment Target**, which can be found on the project setting,
    under the **Info** tab.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果设备已启用但未在Xcode中列出，这可能意味着你必须降低**iOS部署目标**，这可以在项目设置下的**信息**选项卡中找到。
- en: Tip
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Lowering the **iOS Deployment Target** to the minimum value is an idea very
    common among programmers to cover the maximum sort of devices. Doing this will
    prevent your development from using new features. Check out the features that
    you need first, and then change your **iOS Deployment Target**.
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将 **iOS部署目标** 降低到最小值是程序员中非常普遍的想法，以覆盖最大类型的设备。这样做将防止你的开发使用新功能。首先检查你需要的功能，然后更改你的
    **iOS部署目标**。
- en: How it works…
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Signing a code is something done for security; the main restriction is that
    you must be up to date with the Apple Developer Program. Apple allows up to 100
    devices per account.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 签署代码是为了安全考虑；主要限制是你必须与苹果开发者计划保持最新。苹果允许每个账户最多100个设备。
- en: There's more…
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Sometimes, the certificate causes us some headaches. Take care if it asks you
    to revoke your certificate; you may have to create a new one on the Apple Developer
    Center, and if you are working in a team, you may have to wait for the administrator's
    approval.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，证书会给我们带来一些头疼。如果它要求你撤销证书，你可能需要在苹果开发者中心创建一个新的，如果你在一个团队中工作，你可能需要等待管理员的批准。
- en: There are a few times that you need to change the code-signing option on the
    build settings; it happens mainly when you get code from another organization
    ID.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 有几次你需要更改构建设置中的代码签名选项；这通常发生在你从另一个组织ID获取代码时。
- en: Testing your code on a device is something that is very useful; it's where you
    can test the real user experience. Whenever you have some low-level code, such
    as assembly code or something written in C language that uses type sizes or byte
    orders, it's good to test your project on a device. Remember that Apple's devices
    have CPUs based on ARM and ARM64, which are different to the Intel CPU that is
    used on Mac computers.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在设备上测试你的代码是非常有用的；这是你可以测试真实用户体验的地方。无论何时你有某些低级代码，例如汇编代码或用C语言编写的使用类型大小或字节序的代码，在设备上测试你的项目都是好的。记住，苹果的设备基于ARM和ARM64的CPU，这与在Mac电脑上使用的Intel
    CPU不同。
- en: Compiling from the command line
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从命令行编译
- en: I know that nowadays a lot of users, and even developers, think that using the
    command line is something from the past. The reality is that, even today, a lot
    of tasks that can be done from the command line, mainly automations tasks such
    as continuous integration, must be done using the command line.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道现在很多用户，甚至开发者，认为使用命令行是过去的事情。现实是，即使今天，很多可以通过命令行完成的任务，主要是自动化任务，如持续集成，必须使用命令行来完成。
- en: This recipe will show you that it's not difficult, and better than this, you
    will have an increased understanding of the concept about what Xcode does behind
    the scenes.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这个菜谱将向你展示这并不困难，而且更好，你将更深入地理解Xcode幕后操作的概念。
- en: Tip
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you've never worked with a command line, I would suggest you read a book
    about it; *Linux Shell Scripting Cookbook*, *Packt Publishing*, is a good one
    in my opinion, even knowing that some commands are Linux-specific.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从未使用过命令行，我建议你读一本关于它的书；在我看来，*Linux Shell Scripting Cookbook*，*Packt Publishing*
    是一本很好的书，即使知道一些命令是Linux特定的。
- en: Getting ready
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Open a **Finder** window using the key combination *command* + *Shift* + *U*
    or open your **Launchpad** and click on the **Others** folder. Here, you can see
    an icon called **Terminal**, open it and you should see a window similar to the
    following one:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 使用键组合 *command* + *Shift* + *U* 打开一个 **Finder** 窗口，或者打开你的 **Launchpad** 并点击
    **其他** 文件夹。在这里，你可以看到一个名为 **终端** 的图标，打开它，你应该会看到一个类似于以下窗口的窗口：
- en: '![Getting ready](img/00020.jpeg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![准备中](img/00020.jpeg)'
- en: How to do it…
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Type `xcode-select -p`; this should give you one path, for example, `/Applications/Xcode.app/Contents/Developer`.
    If you don't have more Xcode versions installed in your machine, you shouldn't
    worry about the path; it will probably be right. If for any reason you have more
    than one Xcode installed on your machine, you will need to change it by typing
    `xcode-select -s /Applications/XCODE VERSION.app/Contents/Developer`.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `xcode-select -p`；这应该会给出一个路径，例如，`/Applications/Xcode.app/Contents/Developer`。如果你在机器上没有安装更多的Xcode版本，你不需要担心路径；它可能就是正确的。如果由于任何原因你在机器上安装了多个Xcode，你需要通过输入
    `xcode-select -s /Applications/XCODE VERSION.app/Contents/Developer` 来更改它。
- en: Tip
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Remember that switching Xcode is a task that can only be done by an administrator,
    and it will affect every user.
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 记住，切换Xcode是一项只能由管理员完成的任务，并且它将影响每个用户。
- en: 'Now, go to your project directory and type the following command:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，转到你的项目目录并输入以下命令：
- en: '[PRE2]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After this, you will see lots of commands on screen, but the most important
    message is the last one that should be `** BUILD SUCCEEDED **`; which means that
    the project was built without errors.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你会在屏幕上看到很多命令，但最重要的信息是最后一条，应该是 `** BUILD SUCCEEDED **`；这意味着项目构建没有错误。
- en: How it works…
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When you type a command, your system will look for this command using the paths
    specified by the `PATH` variable. You can check the directories included in your
    `PATH` variable by typing `echo $PATH`. By default, the directory `/usr/bin` is
    included.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 当你输入一个命令时，你的系统会使用 `PATH` 变量指定的路径来查找这个命令。你可以通过输入 `echo $PATH` 来检查包含在你的 `PATH`
    变量中的目录。默认情况下，目录 `/usr/bin` 被包含在内。
- en: This directory contains Xcode commands, such as `xcodebuild`. When you want
    to use commands from other Xcode versions, you need to use `xcode-select` to overwrite
    these files to use the ones according to the version you want.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 此目录包含 Xcode 命令，例如 `xcodebuild`。当你想要使用来自其他 Xcode 版本的命令时，你需要使用 `xcode-select`
    来覆盖这些文件以使用你想要的版本。
- en: Once you have set it, you can compile your project. As your project is a set
    of lots of files such as source codes, images, and so on, it would be hard work
    if we had to do every single action (compiling, copying files, code signing, and
    so on) one by one. This is the reason it's easier to ask Xcode to do it by itself
    using the command `xcodebuild`.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置好，你就可以编译你的项目。由于你的项目是一组很多文件，如源代码、图像等，如果我们必须逐个执行每个动作（编译、复制文件、代码签名等），这将是一项艰巨的工作。这就是为什么请求
    Xcode 使用 `xcodebuild` 命令自己执行它更容易的原因。
- en: The `xcodebuild` command has a lot of parameters, so you can specify the configuration
    to be Debug or Release, the target you want to compile, as well as many other
    options. Type `xcodebuild -help` to get a list of options.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`xcodebuild` 命令有很多参数，因此你可以指定配置为 Debug 或 Release，你想要编译的目标，以及许多其他选项。输入 `xcodebuild
    -help` 以获取选项列表。'
- en: Tip
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `-help` argument is very common on Xcode commands. Try to use it when you
    have any doubt.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`-help` 参数在 Xcode 命令中非常常见。当你有任何疑问时，尝试使用它。'
- en: There's more…
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Another good feature about the `xcodebuild` command is that it shows the commands
    that are being used with all its arguments. So, you can appreciate that when you
    compile an Objective-C project, Xcode uses the clang compiler, but when you have
    a Swift project, Xcode uses the `swiftc` command. Type `swiftc -help` with its
    full path to check its options and use them in the build options of other Swift
    flags.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 `xcodebuild` 命令的另一个优点是它显示了使用所有参数的命令。因此，当你编译 Objective-C 项目时，Xcode 使用 clang
    编译器，但当你有一个 Swift 项目时，Xcode 使用 `swiftc` 命令。输入 `swiftc -help` 并提供其完整路径以检查其选项，并在其他
    Swift 标志的构建选项中使用它们。
- en: Keep in mind that `xcodebuild` is going to look for a file called `project.pbxproj`,
    which is inside your `.xcodeproj` directory. This file contains information of
    every file, settings, and steps to create a project; in case of wrong syntax or
    wrong references, `xcodebuild` and the Xcode IDE won't compile the project at
    all. In addition to this fixing, this file could be hard work. Because of these
    reasons, I wouldn't change this file manually, and also, I would try to avoid
    conflict with the version control system.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，`xcodebuild` 将会寻找一个名为 `project.pbxproj` 的文件，该文件位于你的 `.xcodeproj` 目录内。此文件包含每个文件、设置和创建项目所需的步骤；如果出现语法错误或错误引用，`xcodebuild`
    和 Xcode IDE 将不会编译项目。除了这个修复之外，这个文件可能很费时。由于这些原因，我不会手动更改此文件，并且我也会尝试避免与版本控制系统发生冲突。
- en: Using Swift as an interpreter
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Swift 作为解释器
- en: Like some other script languages, you can use Swift with its interpreter on
    the command line. Sometimes it's very useful, mainly when you want to test code
    but you don't want to create a new playground.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 就像一些其他脚本语言一样，你可以在命令行上使用 Swift 和它的解释器。有时这非常有用，主要是在你想要测试代码但又不想创建一个新的游乐场时。
- en: Getting ready
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Open a terminal window as shown in the previous recipe.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个终端窗口，如前一个菜谱所示。
- en: How to do it…
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Follow these steps for using Swift as a command line interpreter:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤使用 Swift 作为命令行解释器：
- en: The first step is to find where the Swift command is; even if you have used
    the `xcode-select` command, it is possible that the Swift command is not accessible
    from your `PATH` variable. So, you can localize your Swift command using `find
    /Applications/Xcode.app -name swift -a -type f`. In my case, I got `/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift`.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是找到Swift命令的位置；即使你已经使用了`xcode-select`命令，Swift命令也可能无法通过你的`PATH`变量访问。因此，你可以使用`find
    /Applications/Xcode.app -name swift -a -type f`来定位你的Swift命令。在我的情况下，我得到了`/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift`。
- en: Note
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: However, current versions of Xcode have the Swift command at `/usr/bin`. If
    it is necessary, add this directory to your `PATH` variable with the command `export
    PATH="$PATH:/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/"`.
    At this moment, we can enter into the Swift interpreter just by typing `swift`.
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，当前版本的Xcode将Swift命令放在`/usr/bin`。如果需要，你可以使用命令`export PATH="$PATH:/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/"`将这个目录添加到你的`PATH`变量中。此时，我们只需输入`swift`就可以进入Swift解释器。
- en: If you want to use Swift from the command line, sometimes it's a good idea to
    have this `PATH` variable set permanently. To make this, we need to add the previous
    command into our `.profile` file, such as `echo 'export PATH="$PATH:/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/"
    ' >> $HOME/.profile && chmod +x $HOME/.profile`.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想要从命令行使用Swift，有时永久设置这个`PATH`变量是个好主意。为了做到这一点，我们需要将之前的命令添加到我们的`.profile`文件中，例如`echo
    'export PATH="$PATH:/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/"
    ' >> $HOME/.profile && chmod +x $HOME/.profile`。
- en: From now on, if you restart your computer, it won't be necessary to look for
    the Swift path and set the `PATH` environment variable again.
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从现在开始，如果你重新启动计算机，就无需再次查找Swift路径并设置`PATH`环境变量。
- en: 'Now, let''s enter into our Swift command line and type the following code:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们进入我们的Swift命令行，并输入以下代码：
- en: '[PRE3]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You will see a message showing the content of these variables after typing
    each of them. Now, type the following loop code:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会在输入每个变量后看到显示这些变量内容的消息。现在，输入以下循环代码：
- en: '[PRE4]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can see that we will receive the following result:'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以看到，我们将得到以下结果：
- en: '[PRE5]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As you can see, the last option failed because we can't divide by 0\. That's
    a fast way we can test some code using the command line. Most of the time, we
    will test using a playground, but sometimes using the command line is much faster.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如你所见，最后一个选项失败了，因为我们不能除以0。这是我们使用命令行测试一些代码的快速方法。大多数时候，我们会使用playground来测试，但有时使用命令行会更快。
- en: How it works…
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Calling the Swift command gives you the possibility to test your code or even
    use Swift as a scripting language. The thing to highlight here is that you need
    to know where your Swift command is; the command line helps you to find it.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 调用Swift命令给你提供了测试你的代码或甚至将Swift用作脚本语言的可能性。这里要强调的是，你需要知道你的Swift命令在哪里；命令行可以帮助你找到它。
- en: There's more…
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: Most of Swift's options and `swiftc` options are common; it means that if there
    is something that you would like to test before compiling, you can do it.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: Swift的大多数选项和`swiftc`选项都是通用的；这意味着如果你想在编译前测试某些内容，你可以这样做。
- en: Adding a control version system to an existing project
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将版本控制系统添加到现有项目
- en: It's very common starting a project without any version control, and with the
    passage of time, we change our idea and decide to add one.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有任何版本控制的情况下开始一个项目是非常常见的，随着时间的推移，我们改变了自己的想法，并决定添加一个。
- en: Unfortunately, Xcode doesn't give this option to us and we have to do it by
    hand. I hope this option will be added on Xcode soon.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，Xcode没有给我们这个选项，我们必须手动完成。我希望Xcode很快能添加这个选项。
- en: Getting ready
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To do this recipe, let's create an empty project called `Chapter1 Git`; however,
    this time, before we save the project, uncheck the option **Create Git CGRepository
    on**.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成这个菜谱，让我们创建一个名为`Chapter1 Git`的空项目；然而，这次，在我们保存项目之前，取消选择**在...创建Git CGRepository**选项。
- en: '![Getting ready](img/00021.jpeg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![准备中](img/00021.jpeg)'
- en: How to do it…
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps for creating a local repository on an existing project:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤在现有项目上创建本地仓库：
- en: Open the **Source Control** menu option from the menu bar.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从菜单栏中选择**源代码控制**菜单选项。
- en: Select **Create Working Copy** to create the local repository.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**创建工作副本**来创建本地仓库。
- en: Now, you can open your project and notice that Xcode already recognizes the
    VCS. If you want to be sure of it, modify a file, save it with *command* + *S*
    and check that you have the letter *M* on the right side of your file on the project
    navigator.![How to do it…](img/00022.jpeg)
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以打开你的项目，并注意到 Xcode 已经识别了版本控制系统。如果你想确保这一点，修改一个文件，使用 *command* + *S* 保存它，并检查在你的项目导航器中文件的右侧是否有字母
    *M*。![如何操作…](img/00022.jpeg)
- en: Once you are happy with your changes, you can deliver them by right-clicking
    on `AppDelegate.swift`, then going to the **Source Control** option and selecting
    the **Commit "AppDelegate.swift" …** option.![How to do it…](img/00023.jpeg)
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你对你的更改满意，你可以通过右键单击 `AppDelegate.swift`，然后转到 **源代码管理** 选项并选择 **提交 "AppDelegate.swift"
    …** 选项来交付它们。![如何操作…](img/00023.jpeg)
- en: Then, a dialog box asking for a description will appear; write about your modification
    as comment and click on **Commit 1 file**.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，将出现一个要求描述的对话框；将你的修改作为注释写下来，然后点击 **提交 1 个文件**。
- en: How it works…
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Unfortunately, if you forgot to add a Git repository to your project, Xcode
    won't provide any mechanism to add it to your project, so you have to add it by
    hand. Opening the command line allows you to use Git from the command line and
    Xcode detects that this feature has been added. Some versions of Xcode can only
    detect that the version control has been added when you open your project, so
    if you've done all the steps and Xcode hasn't detected it, try closing and opening
    Xcode again.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，如果你忘记将 Git 仓库添加到你的项目中，Xcode 不会提供任何机制来将其添加到你的项目中，因此你必须手动添加。打开命令行允许你从命令行使用
    Git，Xcode 会检测到这一功能已被添加。某些版本的 Xcode 只有在你打开项目时才能检测到版本控制已被添加，所以如果你已经完成了所有步骤但 Xcode
    没有检测到，请尝试关闭并重新打开 Xcode。
- en: Tip
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Xcode offers you some features to work with Git and SVN, but they are very limited.
    If you need more commands from your VCS, you can use them from the command line
    or use an external tool for it.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode 为你提供了一些与 Git 和 SVN 一起工作的功能，但它们非常有限。如果你需要更多来自你的版本控制系统的命令，你可以从命令行使用它们，或者使用外部工具。
- en: There's more…
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: Even if you are not going to work as part of a team, I recommend that you use
    a version control system. When developing with Swift or other languages, you sometimes
    need to rollback or compare the current code with previous versions of it, mainly
    when you have a new bug.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你不会作为团队的一部分工作，我也建议你使用版本控制系统。当使用 Swift 或其他语言进行开发时，你有时需要回滚或比较当前代码与之前的版本，主要是在你遇到新错误时。
- en: See also
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: If you would like to know more on this topic, check out the book *Git Version
    Control Cookbook*, *Packt Publishing*
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于这个主题的信息，请查看书籍 *Git 版本控制食谱*，*Packt 出版*
