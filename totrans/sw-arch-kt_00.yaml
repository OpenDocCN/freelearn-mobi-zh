- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to *Software Architecture with Kotlin*, a comprehensive guide designed
    to equip you with the knowledge and skills needed to build robust software systems
    using Kotlin. As the demand for efficient and scalable applications continues
    to grow, understanding architectural principles becomes indispensable for engineers
    and architects.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, we will break down a selection of software architecture styles
    into basic components by the first principle, so these components can be rearranged
    and combined to solve real-world problems. Each chapter focuses on specific areas,
    introducing key concepts, best practices, and real-world examples illustrating
    how to apply these principles in Kotlin.
  prefs: []
  type: TYPE_NORMAL
- en: Whether you are a seasoned engineer looking to deepen your understanding of
    software architecture or a newcomer eager to learn, this book provides practical
    insights that can be immediately applied. You will find hands-on exercises, code
    snippets, and case studies that will help you grasp complex ideas and implement
    them in your projects.
  prefs: []
  type: TYPE_NORMAL
- en: As you embark on this journey, I encourage you to experiment with the concepts
    presented here. Software architecture is more than patterns and styles – it is
    about creativity, problem-solving, flexibility, and adapting solutions to meet
    the unique challenges of your applications. Happy reading!
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for software engineers who want to enhance their architectural
    knowledge and mindset to solve daily engineering problems. Prior experience in
    engineering will be useful but not essential.
  prefs: []
  type: TYPE_NORMAL
- en: If you have just started learning how to write Kotlin code, are expanding your
    technical experience from Android development to backend, or are transitioning
    from writing Java code, you will find this book useful.
  prefs: []
  type: TYPE_NORMAL
- en: If you are a software architect interested in discussing and exploring unique
    architectural ideas, this is the book for you.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B21737_01.xhtml#_idTextAnchor013), *The Essence of Software Architecture*,
    revisits the importance of software architecture and the role of software architects
    in an organization. It covers how the structure of an organization affects architectural
    decisions. Then it discusses choosing a framework and the factors to consider
    in the process. Several industry-standard documents and diagrams are introduced,
    which will be used for illustrations in subsequent chapters.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B21737_02.xhtml#_idTextAnchor045), *Principles of Software Architecture*,
    explores multiple ways to visualize and quantify software architectures, extracting
    quality attributes for measurement and analysis. It then delves into three key
    concepts: the separation of concerns, cohesiveness, and coupling. Popular architecture
    principles such as SOLID, the Law of Demeter, YAGNI, and future-proofing are also
    covered. These principles lay the foundation for further exploration of architecture
    styles in the following chapters.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B21737_03.xhtml#_idTextAnchor067), *Polymorphism and Alternatives*,
    uses a real-life problem and solves it using multiple styles in Kotlin code. It
    starts with a polymorphic solution, then explores two solutions involving Kotlin
    sealed classes. Next, a solution using delegation is presented, followed by a
    functional approach. Finally, all approaches are compared based on system quality
    attributes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B21737_04.xhtml#_idTextAnchor102), *Peer-to-Peer and Client-Server
    Architecture*, focuses on network communication in distributed systems. It includes
    a step-by-step guide to implementing a client-server solution with an API-first
    approach using OpenAPI specifications and the Http4K framework in Kotlin. The
    chapter then implements a peer-to-peer solution to the same problem and compares
    the two approaches, discussing which is suitable for different situations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B21737_05.xhtml#_idTextAnchor125), *Exploring MVC, MVP, and MVVM*,
    shifts focus to frontend applications. Using a sample Android application, we
    apply MVC, MVP, and MVVM to observe the evolution of the implementation with different
    architecture styles. The three patterns are compared along with other commonly
    used styles.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B21737_06.xhtml#_idTextAnchor212), *Microservices, Serverless,
    and Micro**frontends*, moves the focus to the backend. This chapter shows how
    monolithic applications and service-oriented architectures evolve into microservices
    and nanoservices. It explains how serverless architectures impact modern software
    systems through cloud provider services. Finally, the frontend counterpart of
    microservices, the micro-frontend, is discussed.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B21737_07.xhtml#_idTextAnchor255), *Modular and Layered Architectures*,
    starts with three layered architectures—Clean architecture, Hexagonal architecture,
    and Functional Core Imperative Shell—that have similarities and differences. They
    are demonstrated and compared using Kotlin code for the same real-life problem.
    Later, the chapter explores the Connect pattern, providing a modular approach
    to integrate with remote systems.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B21737_08.xhtml#_idTextAnchor289), *Domain-Driven Design (DDD)*,
    takes a deep dive into DDD design activities. It starts with basic concepts and
    terms, then looks at the bigger picture of the domain with Strategic Design. A
    bounded context is selected for Tactical Design. The chapter also walks through
    three popular domain modeling activities with a real-life example.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B21737_09.xhtml#_idTextAnchor307), *Event Sourcing and CQRS*,
    extends the DDD practices from the previous chapter into two powerful architecture
    patterns. It first illustrates the use of Event Sourcing with a real-life example,
    then explains how CQRS can be applied. Finally, it combines Event Sourcing and
    CQRS as a solution to the same problem to unlock the potential of both architecture
    styles.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B21737_10.xhtml#_idTextAnchor334), *Idempotency, Replication,
    and Recovery Models*, discusses three related architectural concepts. It starts
    with idempotency in distributed systems, providing practical examples of how to
    implement it. Next, several replication models are explored and compared using
    the CAP Theorem. The chapter concludes with system recovery, using RAFT leader
    election as a case study.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B21737_11.xhtml#_idTextAnchor358), *Auditing and Monitoring
    Models*, demonstrates a sample audit trail structure in Kotlin that can be used
    by multiple services but centrally recorded. It also discusses various monitoring
    data formats and approaches for collecting data for monitoring purposes. The chapter
    covers structural and contextual logging with Kotlin code, as well as automated
    alerts, incident management, and metrics.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B21737_12.xhtml#_idTextAnchor379), *Performance and Scalability*,
    focuses on measuring performance using defined metrics. It showcases performance
    testing through basic approaches and micro-benchmarking. The chapter guides you
    through performance testing workflows while discussing strategies for performance
    improvement using Kotlin code. Additionally, a voting system is used to illustrate
    the process of enhancing performance and scaling the system.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B21737_13.xhtml#_idTextAnchor418), *Testing*, explores the role
    of Quality Assurance. It examines various testing methods within the Testing Pyramid
    and highlights best practices for each type. The chapter includes a step-by-step
    journey through a Test-Driven Development exercise with the Kotest framework.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B21737_14.xhtml#_idTextAnchor442), *Security*, focuses on safeguarding
    software systems and their data from malicious attacks. It starts with securing
    network communication using Transport Layer Security (TLS). Then, the chapter
    covers Multi-Factor Authentication (MFA) for user identity verification. It also
    addresses common methods of authorization and data entitlement, techniques for
    hiding and anonymizing sensitive data, and various network security approaches.
    The chapter concludes with a discussion of DevSecOps and a Threat Modeling exercise.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 15*](B21737_15.xhtml#_idTextAnchor474), *Beyond Architecture*, covers
    various engineering topics beyond software architecture. First, it explores several
    Kotlin language features that help engineers achieve better code quality and software
    architecture. Next, it discusses the transition from Java to Kotlin with the help
    of IDE features. The chapter compares two CI approaches: feature-based and trunk-based
    development. It then covers release strategies, briefly touches on Developer Experience,
    and concludes with a look at current trends in software architecture.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*It is essential to approach the material with an open mind and a willingness
    to experiment. Start by revisiting the foundational concepts presented in the
    first two chapters, as they serve as the building blocks for more advanced topics.
    Engage with the hands-on examples and coding exercise, which are designed to materialize
    your understanding for practical application. Reflect on how each architecture
    style can meet the needs of your projects. In addition, consider exploring external
    resources to further enrich your* *learning experience.*'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Software covered in** **the book** | **Operating** **system requirements**
    |'
  prefs: []
  type: TYPE_TB
- en: '| IntelliJ IDEA (Community or Ultimate version) | Windows, macOS, or Linux
    |'
  prefs: []
  type: TYPE_TB
- en: '| Android Studio | Windows, macOS, Linux, or ChromeOS |'
  prefs: []
  type: TYPE_TB
- en: '| OpenJDK 17+ | Windows, macOS, or Linux |'
  prefs: []
  type: TYPE_TB
- en: '| Git CLI tool | Windows, macOS, or Linux |'
  prefs: []
  type: TYPE_TB
- en: '*You will need to configure IntelliJ and Android Studio to use the installed
    JDK and Git* *CLI tool.*'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: '*After reading the book, I would recommend you start a new project to try to
    solve the real-life example problem of household exchanging services in a village,
    or to solve a problem that you know a lot about, e.g. a problem that you face
    in your day-to-day life or work. Meanwhile, apply the architecture styles, analyze
    them with your knowledge of the problem, and explore the frameworks that were
    mentioned in the book. Solving a well-understood problem helps us focus on addressing
    non-functional concerns and* *hands-on coding.*'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Software-Architecture-with-Kotlin](https://github.com/PacktPublishing/Software-Architecture-with-Kotlin).
    If there’s an update to the code, it will be updated in the GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “The `Person` class directly accesses the `city`
    property inside the `Address` class.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For instance, words in menus or dialog boxes appear in **bold**. Here is an example:
    “The **Business** package uses the **Persistence** package to perform the actual
    relational database operations for service contracts and households.”'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](https://customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](https://www.packtpub.com/support/errata)
    and fill in the form.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](https://copyright@packt.com)
    with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](https://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Share your thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *Software Architecture with Kotlin*, we’d love to hear your
    thoughts! Please [click here to go straight to the Amazon review page](https://packt.link/r/1835461867)
    for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
- en: Download a free PDF copy of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for purchasing this book!
  prefs: []
  type: TYPE_NORMAL
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  prefs: []
  type: TYPE_NORMAL
- en: Is your eBook purchase not compatible with the device of your choice?
  prefs: []
  type: TYPE_NORMAL
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  prefs: []
  type: TYPE_NORMAL
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  prefs: []
  type: TYPE_NORMAL
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these simple steps to get the benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Scan the QR code or visit the link below
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B21737_QR_Free_PDF.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[https://packt.link/free-ebook/978-1-83546-186-0](https://packt.link/free-ebook/978-1-83546-186-0)'
  prefs: []
  type: TYPE_NORMAL
- en: Submit your proof of purchase
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
