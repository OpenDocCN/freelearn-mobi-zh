["```java\n//create the window\nvar win1 = Titanium.UI.createWindow({\nwidth: 320,\nheight: 480,\ntop: 0,\nleft: 0,\nbackgroundImage: 'background.png'\n});\n//create the view, this will hold all of our UI controls\n//note the height of this view is the height of the window //minus 40px for the status bar and padding\nvar view = Titanium.UI.createView({\nwidth: 300,\nheight: win1.height - 40,\nleft: 10,\ntop: 10,\nbackgroundColor: '#fff',\nborderRadius: 5\n});\n//we will give the logo a left margin so it centers neatly //within our view\nvar _logoMarginLeft = (view.width - 253) / 2;\n//now let's add our logo to an imageview and add that to our //view object\nvar logo = Titanium.UI.createImageView({\nimage: 'logo.png',\nwidth: 253,\nheight: 96,\nleft: _logoMarginLeft,\ntop: 0\n});\nview.add(logo);\n//add the view to our window\nwin1.add(view);\n//finally, open the window to launch the app\nwin1.open();\n\n```", "```java\n//create tab group\nvar tabGroup = Ti.UI.createTabGroup();\n//create the window\nvar win1 = Titanium.UI.createWindow({\nwidth: 320,\nheight: 480,\ntop: 0,\nleft: 0,\nbackgroundImage: 'background.png',\ntitle: 'Loan Calculator',\nbarImage: 'navbar.png'\n});\n//create the view, this will hold all of our UI controls\n//note the height of this view is the height of the window //minus 134px for the status bar and padding and adjusted for //navbar\nvar view = Titanium.UI.createView({\nwidth: 300,\nheight: win1.height - 134,\nleft: 10,\ntop: 10,\nbackgroundColor: '#fff',\nborderRadius: 5\n});\n//we will give the logo a left margin so it centers neatly //within our view\nvar _logoMarginLeft = (view.width - 253) / 2;\n//now let's add our logo to an imageview and add that to our //view object\nvar logo = Titanium.UI.createImageView({\nimage: 'logo.png',\nwidth: 253,\nheight: 96,\nleft: _logoMarginLeft,\ntop: 0\n});\nview.add(logo);\n//add the view to our window\nwin1.add(view);\n//add the first tab and attach our window object (win1) to it\nvar tab1 = Ti.UI.createTab({\nicon:'icon_calculator.png',\ntitle:'Calculate',\nwindow: win1\n});\n//create the second window for settings tab\nvar win2 = Titanium.UI.createWindow({\nwidth: 320,\nheight: 480,\ntop: 0,\nleft: 0,\nbackgroundImage: 'background.png',\nurl: 'window2.js',\ntitle: 'Settings',\nbarImage: 'navbar.png'\n});\n//add the second tab and attach our external window object //(win2 / window2.js) to it\nvar tab2 = Ti.UI.createTab({\nicon:'icon_settings.png',\ntitle:'Settings',\nwindow: win2\n});\n//now add the tabs to our tabGroup object\ntabGroup.addTab(tab1);\ntabGroup.addTab(tab2);\n//finally, open the tabgroup to launch the app\ntabGroup.open();\n\n```", "```java\n//application variables\nvar numberMonths = 36; //loan length\nvar interestRate = 6.0; //interest rate\n\n```", "```java\n//create a label to identify the textfield to the user\nvar labelAmount = Titanium.UI.createLabel({\nwidth: 'auto',\nheight: 30,\ntop: 100,\nleft: 20,\nfont: {fontSize: 14, fontFamily: 'Helvetica',\nfontWeight:'bold'},},\ntext: 'Loan amount: $'\n});\nview.add(labelAmount);\n//create a label to identify the textfield to the user\nvar labelInterestRate = Titanium.UI.createLabel({\nwidth: 'auto',\nheight: 30,\ntop: 150,\nleft: 20,\nfont: {fontSize: 14, fontFamily: 'Helvetica',\nfontWeight: 'bold'},\ntext: 'Interest Rate: %'\n});\nview.add(labelInterestRate);\n//create a label to identify the textfield to the user\nvar labelLoanLength = Titanium.UI.createLabel({\nwidth: 100,\nheight: 'auto',\ntop: 200,\nleft: 20,\nfont: {fontSize: 14, fontFamily: 'Helvetica',\nfontWeight: 'bold'},\ntext: 'Loan length (' + numberMonths + ' months):'\n});\nview.add(labelLoanLength);\n\n```", "```java\n//creating the textfield for our loan amount input\nvar tfAmount = Titanium.UI.createTextField({ width: 140,\nheight: 30,\ntop: 100,\nright: 20,\nborderStyle:Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,\nreturnKeyType:Titanium.UI.RETURNKEY_DONE,\nhintText: '1000.00'\n});\nview.add(tfAmount);\n//creating the textfield for our percentage interest\n//rate input\nvar tfInterestRate = Titanium.UI.createTextField({\nwidth: 140,\nheight: 30,\ntop: 150,\nright: 20,\nborderStyle:Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,\nreturnKeyType:Titanium.UI.RETURNKEY_DONE,\nvalue: interestRate\n});\nview.add(tfInterestRate);\n\n```", "```java\nTitanium.UI.INPUT_BORDERSTYLE_BEZEL\nTitanium.UI.INPUT_BORDERSTYLE_LINE\nTitanium.UI.INPUT_BORDERSTYLE_NONE\nTitanium.UI.INPUT_BORDERSTYLE_ROUNDED\n\n```", "```java\n//flexible space for button bars\nvar flexSpace = Titanium.UI.createButton({\nsystemButton:Titanium.UI.iPhone.SystemButton.FLEXIBLE_SPACE\n});\n//done system button\nvar buttonDone = Titanium.UI.createButton({\nsystemButton:Titanium.UI.iPhone.SystemButton.DONE,\nbottom: 0\n});\n//add the event listener 'click' event to our done button\nbuttonDone.addEventListener('click', function(e){\ntfAmount.blur();\ntfInterestRate.blur();\ntfInterestRate.top = 150;\nlabelInterestRate.top = 150;\ninterestRate = tfInterestRate.value;\ntfAmount.visible = true;\nlabelAmount.visible = true;\n});\n//creating the textfield for our loan amount input\nvar tfAmount = Titanium.UI.createTextField({\nwidth: 140,\nheight: 30,\ntop: 100,\nright: 20,\nborderStyle:Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,\nreturnKeyType:Titanium.UI.RETURNKEY_DONE,\nhintText: '1000.00',\nkeyboardToolbar: [flexSpace,buttonDone],\nkeyboardType:Titanium.UI.KEYBOARD_PHONE_PAD\n});\nview.add(tfAmount);\n//creating the textfield for our percentage interest rate //input\nvar tfInterestRate = Titanium.UI.createTextField({\nwidth: 140,\nheight: 30,\ntop: 150,\nright: 20,\nborderStyle:Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,\nreturnKeyType:Titanium.UI.RETURNKEY_DONE,\nvalue: interestRate,\nkeyboardToolbar: [flexSpace,buttonDone],\nkeyboardType:Titanium.UI.KEYBOARD_PHONE_PAD\n});\n//if the interest rate is focused change its top value so we //can see it (only for the iphone platform though!)\ntfInterestRate.addEventListener('focus', function(e){\nif(Ti.Platform.osname == 'iphone') {\ntfInterestRate.top = 100;\nlabelInterestRate.top = 100;\ntfAmount.visible = false;\nlabelAmount.visible = false;\n}\n});\nview.add(tfInterestRate);\n\n```", "```java\nTitanium.UI.KEYBOARD_DEFAULT\nTitanium.UI.KEYBOARD_EMAIL\nTitanium.UI.KEYBOARD_ASCII\nTitanium.UI.KEYBOARD_URL\nTitanium.UI.KEYBOARD_NUMBER_PAD\nTitanium.UI.KEYBOARD_NUMBERS_PUNCTUATION\nTitanium.UI.KEYBOARD_PHONE_PAD\n\n```", "```java\n//reference the current window var win1 = Titanium.UI.currentWindow;\n//create the view, this will hold all of our UI controls\nvar view = Titanium.UI.createView({\nwidth: 300,\nheight: 70,\nleft: 10,\ntop: 10,\nbackgroundColor: '#fff',\nborderRadius: 5\n});\n//create a label to identify the switch control to the user\nvar labelSwitch = Titanium.UI.createLabel({\nwidth: 'auto',\nheight: 30,\ntop: 20,\nleft: 20,\nfont: {fontSize: 14, fontFamily: 'Helvetica',\nfontWeight: 'bold'},\ntext: 'Auto Show Chart?'\n});\nview.add(labelSwitch);\n//create the switch object\nvar switchChartOption = Titanium.UI.createSwitch({\nright: 20,\ntop: 20,\nvalue: false\n});\nview.add(switchChartOption);\nwin1.add(view);\n\n```", "```java\n//create the slider to change the loan length\nvar lengthSlider = Titanium.UI.createSlider({\nwidth: 140,\ntop: 200,\nright: 20,\nmin: 12,\nmax: 60,\nvalue: numberMonths,\nthumbImage: 'sliderThumb.png',\nselectedThumbImage: 'sliderThumbSelected.png',\nhighlightedThumbImage: 'sliderThumbSelected.png'\n});\nlengthSlider.addEventListener('change', function(e){\n//output the value to the console for debug\nTi.API.info(lengthSlider.value);\n//update our numberMonths variable\nnumberMonths = Math.round(lengthSlider.value);\n//update label\nlabelLoanLength.text = 'Loan length (' + Math.round(numberMonths) + ' months):';\n});\nview.add(lengthSlider);\n\n```", "```java\n//\n//////set the initial value of win2's custom property\nwin2.autoShowChart = false;\n\n```", "```java\n//create the switch object\nvar switchChartOption = Titanium.UI.createSwitch({\nright: 20,\ntop: 20,\nvalue: false\n});\n//add the event listener for the switch when it changes\nswitchChartOption.addEventListener('change', function(e){\nwin2.autoShowChart = switchChartOption.value;\n});\n//add the switch to the view\nview.add(switchChartOption);\n\n```", "```java\n//calculate the interest for this loan button\nvar buttonCalculateInterest = Titanium.UI.createButton({\nimage: 'calculateInterestButton.png',\nid: 1,\ntop: 255,\nwidth: 252,\nheight: 32,\nleft: 23\n});\n//add the event listener\nbuttonCalculateInterest.addEventListener('click', calculateAndDisplayValue);\n//add the first button to our view\nview.add(buttonCalculateInterest);\n//calculate the interest for this loan button\nvar buttonCalculateRepayments = Titanium.UI.createButton({\nimage: 'calculateRepaymentsButton.png',\nid: 2,\ntop: 300,\nwidth: 252,\nheight: 32,\nleft: 23\n});\n//add the event listener\nbuttonCalculateRepayments.addEventListener('click',\ncalculateAndDisplayValue);\n//add the second and final button to our view\nview.add(buttonCalculateRepayments);\n\n```", "```java\n//add the event handler which will be executed when either of //our calculation buttons are tapped\nfunction calculateAndDisplayValue(e)\n{\n//log the button id so we can debug which button was tapped\nTi.API.info('Button id = ' + e.source.id);\nif (e.source.id == 1)\n{\n//Interest (I) = Principal (P) times Rate Per Period\n//(r) times Number of Periods (n) / 12\nvar totalInterest = (tfAmount.value * (interestRate /\n100) * numberMonths) / 12;\n//log result to console\nTi.API.info(totalInterest);\n}\nelse\n{\n//Interest (I) = Principal (P) times Rate Per Period (r)\n//times Number of Periods (n) / 12\nvar totalInterest = (tfAmount.value * (interestRate /\n100) * numberMonths) / 12;\nvar totalRepayments = Math.round(tfAmount.value) +\ntotalInterest;\n//log result to console\nTi.API.info(totalRepayments);\n}\n} //end function\n\n```", "```java\nif (tfAmount.value == '' || tfAmount.value == null)\n{\nvar errorDialog = Titanium.UI.createAlertDialog({\ntitle: 'Error!',\nmessage: 'You must provide a loan amount.'\n});\nerrorDialog.show();\n}\n}\n\n```", "```java\n//check our win2 autoShowChart boolean value first (coming //from the switch on window2.js)\nif (win2.autoShowChart == true)\n{\nopenChartWindow();\n}\nelse\n{\nvar resultOptionDialog = Titanium.UI.createOptionDialog({\ntitle: optionsMessage + '\\n\\nDo you want to\nview this in a chart?',\noptions: ['Okay', 'No'],\ncancel: 1\n});\n//add the click event listener to the option dialog\nresultOptionDialog.addEventListener('click', function(e){\nTi.API.info('Button index tapped was: ' + e.index);\nif (e.index == 0)\n{\nopenChartWindow();\n}\n});\nresultOptionDialog.show();\n} //end if\n\n```", "```java\n    var chartWin = Titanium.UI.currentWindow;\n    //include the chart library\n    Titanium.include('charts/chart.js');\n    //create the chart title using the variables we passed in from\n    //app.js (our first window)\n    var chartTitleInterest = 'Total Interest: $' +\n    chartWin.totalInterest;\n    var chartTitleRepayments = 'Total Repayments: $' +\n    chartWin.totalRepayments;\n    //create the chart using the sample html from the\n    //raphaeljs.com website\n    var chartHTML = '<html><head> <title>RaphaelJS Chart</title><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/> <script src=\"img/raphael.js.lib\" type=\"text/javascript\" charset=\"utf-8\"></script> <script src=\"img/g.raphael-min.lib\" type=\"text/javascript\" charset=\"utf-8\"></script> <script src=\"img/g.pie-min.lib\" type=\"text/javascript\" charset=\"utf-8\"></script> <script type=\"text/javascript\" charset=\"utf-8\"> window.onload = function () { var r = Raphael(\"chartDiv\"); r.g.txtattr.font = \"12px Verdana, Tahoma, sans-serif\"; r.g.text(150, 10, \"';\n    chartHTML = chartHTML + chartTitleInterest + '\").attr({\"font-size\": 14}); r.g.text(150, 30, \"' + chartTitleRepayments + '\").attr({\"font-size\": 14});';\n    chartHTML = chartHTML + ' r.g.piechart(150, 180, 130, [' + Math.round(chartWin.totalInterest) + ',' + Math.round(chartWin.principalRepayments) + ']); }; </script> </head><body> <div id=\"chartDiv\" style=\"width:320px; height: 320px; margin: 0\"></div> </body></html>';\n    //add a webview to contain our chart\n    var webview = Titanium.UI.createWebView({\n    width: 320,\n    height: 367,\n    top: 0,\n    html: chartHTML\n    });\n    chartWin.add(webview);\n\n    ```", "```java\n    //we'll call this function if the user opts to view the loan //chart\n    function openChartWindow(totalInterest, total)\n    {\n    //Interest (I) = Principal (P) times Rate Per Period (r)\n    //times Number of Periods (n) / 12\n    var totalInterest = (tfAmount.value * (interestRate / 100)\n    * numberMonths) / 12;\n    var totalRepayments = Math.round(tfAmount.value) +\n    totalInterest;\n    var chartWindow = Titanium.UI.createWindow({\n    url: 'chartwin.js',\n    title: 'Loan Pie Chart',\n    barImage: 'navbar.png',\n    barColor: '#000',\n    numberMonths: numberMonths,\n    interestRate: interestRate,\n    totalInterest: totalInterest,\n    totalRepayments: totalRepayments,\n    principalRepayments: (totalRepayments - totalInterest)\n    });\n    tab1.open(chartWindow);\n    }\n\n    ```"]