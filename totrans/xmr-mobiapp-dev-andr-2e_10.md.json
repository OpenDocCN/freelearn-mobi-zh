["```java\npublic static string GetFileName (int poiId)\n{\n  String storagePath = System.IO.Path.Combine (Android.OS.Environment.ExternalStorageDirectory.Path, \"POIApp\");\n  String path = System.IO.Path.Combine (storagePath, \"poiimage\" + poiId + \".jpg\");\n  return path;\n}\n```", "```java\npublic static Bitmap GetImage(int poiId)\n{\n  string filename = GetFileName (poiId);\n  if (File.Exists (filename)) {\n    Java.IO.File imageFile = new Java.IO.File (filename);\n    return BitmapFactory.DecodeFile (imageFile.Path);\n  }\n  return null;\n}\n```", "```java\npublic void DeleteImage (int poiId)\n{\n  String filePath = GetFileName (poiId);\n  if (File.Exists (filePath)) {\n    File.Delete (filePath);\n  }\n}\n```", "```java\n....\nif (response != null || response.IsSuccessStatusCode){\n  DeleteImage (poi.Id.Value);\nstring content = await response.Content.ReadAsStringAsync();\n  return content; \n}\n....\n```", "```java\n&lt;LinearLayout\n    --- &gt;\n    &lt;ImageView\n        p1:src=\"img/ic_placeholder\"\n        p1:layout_width=\"wrap_content\"\n        p1:layout_height=\"200dp\"\n        p1:id=\"@+id/poiImageView\"\n        p1:layout_gravity=\"center_horizontal\"\n        p1:scaleType=\"centerCrop\"\n        p1:layout_marginBottom=\"10dp\" /&gt;\n    &lt;TextView\n        p1:text=\"Name\"\n        p1:layout_width=\"fill_parent\"\n        p1:layout_height=\"wrap_content\"\n        p1:id=\"@+id/textView10\" /&gt;\n         ---\n&lt;/LinearLayout&gt;\n```", "```java\nImageView _poiImageView;\n   ...\n_poiImageView = view.FindViewById&lt;ImageView&gt; (Resource.Id.poiImageView);\n```", "```java\n&lt;ImageButton\n    android:src=\"img/ic_new_picture\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:id=\"@+id/photoImageButton\" /&gt;\n```", "```java\nImageButton _photoImageButton;\n   ...\n   _photoImageButton = view.FindViewById&lt;ImageButton&gt; (\n     Resource.Id.photoImageButton);\n   _photoImageButton.Click += NewPhotoClicked;\n```", "```java\nIntent cameraIntent = new Intent(MediaStore.ActionImageCapture);\n```", "```java\nPackageManager packageManager = PackageManager;\nIList&lt;ResolveInfo&gt; activities = packageManager.QueryIntentActivities(cameraIntent, 0);\nif (activities.Count == 0) {\n  //display alert indicating there are no camera apps\n}\nelse {\n  //launch the camera Intent\n}\n```", "```java\nJava.IO.File imageFile = new Java.IO.File(POIData.Service.GetFilename(_poi.Id.Value));\nAndroid.Net.Uri imageUri = Android.Net.Uri.FromFile (imageFile);\ncameraIntent.PutExtra (MediaStore.ExtraOutput, imageUri);\n```", "```java\ncameraIntent.PutExtra (MediaStore.ExtraSizeLimit, 1.5 * 1024);\n```", "```java\nconst int CAPTURE_PHOTO = 0;\n.. .\nStartActivityForResult(cameraIntent, CAPTURE_PHOTO);\n```", "```java\nint CAPTURE_PHOTO = 100;\nvoid NewPhotoClicked (object sender, EventArgs e)\n{\n  if (_poi.Id &lt;= 0){\n  Toast.MakeText (activity, \"You must save the POI before attaching a photo.\", ToastLength.Short).Show ();\n  return;\n  }\n   Intent cameraIntent = new Intent (MediaStore.ActionImageCapture);\n  PackageManager packageManager = Activity.PackageManager;\n  IList&lt;ResolveInfo&gt; activities = packageManager.QueryIntentActivities (cameraIntent, 0);\n  if (activities.Count == 0) {\n    Toast.MakeText (activity, \"No camera app available.\", ToastLength.Short).Show ();\n  } else {\n    string path = POIService.GetFileName (_poi.Id);\n    Java.IO.File imageFile = new Java.IO.File (path);\n    Android.Net.Uri imageUri = Android.Net.Uri.FromFile (imageFile);\n    cameraIntent.PutExtra (MediaStore.ExtraOutput, imageUri);\n    cameraIntent.PutExtra (MediaStore.ExtraSizeLimit, 1 * 1024 * 1024);\n    StartActivityForResult (cameraIntent, CAPTURE_PHOTO);\n  }\n}\n```", "```java\nprotected override void OnActivityResult (int requestCode, Result resultCode, Intent data)\n{\n  base.OnActivityResult (requestCode, resultCode, data);\n}\n```", "```java\npublic override void OnActivityResult (int requestCode, Result resultCode, Intent data)\n```", "```java\npublic override void OnActivityResult (int requestCode, Result resultCode, Intent data)\n{\n  if (requestCode == CAPTURE_PHOTO) {\n    if (resultCode == Result.Ok) {\n      Bitmap bitmap = POIService.GetImage (_poi.Id.Value);\n      _poiImageView.SetImageBitmap (bitmap);\n      if (bitmap != null) {\n        bitmap.Dispose ();\n        bitmap = null;\n      }\n    } else {\n    Toast.MakeText (Activity, \"No picture captured.\", ToastLength.Short).show();\n    }\n  } else {\n    base.OnActivityResult (requestCode, resultCode, data);\n  }\n}\n```", "```java\nEndpoint: com.packt.poiapp/api/poi/upload\nRequest-Type: multipart/form-data POST\n    -----BOUNDARY\n    Content-Disposition: form-data; name=\"file\"; filename=\"poiimage1.jpg\"\n  Content-Type: application/octet-stream\n/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL===\n  -----BOUNDARY\n   -----BOUNDARY\n  Content-Disposition: form-data; name=\"poi\"; \n  Content type = application/json, Encoding:UTF8\n  Body= {\"id\":\"1\",\"latitude\":\"51.5033\",\"longitude\":\"0.1197\",\"name\":\"London Eye\",\"description\":\"...\",\"image\":\"\"}\n  -----BOUNDARY\n```", "```java\n    public async Task&lt;String&gt; CreateOrUpdatePOIAsync(PointOfInterest poi, Bitmap bitmap)\n    {\n    ...\n    }\n    ```", "```java\n    var settings = new JsonSerializerSettings ();\n    settings.ContractResolver = new POIContractResolver ();\n    var poiJson = JsonConvert.SerializeObject (poi, Formatting.None, settings);\n    var stringContent = new StringContent(poiJson);\n    ```", "```java\n    byte[] bitmapData;\n    var stream = new MemoryStream();\n    bitmap.Compress(Bitmap.CompressFormat.Jpeg, 0, stream);\n    bitmapData = stream.ToArray();\n    var fileContent = new ByteArrayContent(bitmapData);\n    ```", "```java\n    fileContent.Headers.ContentType = \n    MediaTypeHeaderValue.Parse (\"application/octet-stream\");\n    fileContent.Headers.ContentDisposition = new ContentDispositionHeaderValue(\"form-data\")\n    {\n        Name = \"file\",\n        FileName = \"poiimage\" + poi.Id.ToString () + \".jpg\"\n    };\n    ```", "```java\n    string boundary = \"---8d0f01e6b3b5daf\";\n    MultipartFormDataContent multipartContent= new MultipartFormDataContent (boundary);\n    multipartContent.Add (fileContent);\n    multipartContent.Add(stringContent, \"poi\");\n    ```", "```java\n    private const string UPLOAD_POI = \"http://YOUR_IP:8080/com.packt.poiapp/api/poi/upload\";\n    ```", "```java\n    HttpClient httpClient = new HttpClient ();\n    HttpResponseMessage response = await httpClient.PostAsync (UPLOAD_POI, multipartContent);\n    if (response.IsSuccessStatusCode) {\n        string content = await response.Content.ReadAsStringAsync();\n        return content;\n    }\n    return null;\n    ```", "```java\nPOIService service = new POIService ();\nBitmap bitmap = null;\nif (_poi.Id&gt;0) {\n  bitmap = POIService.GetImage (_poi.Id);  \n}\n string response;\nif (bitmap != null) {\n  response = service.CreateOrUpdatePOIAsync (_poi, bitmap);\n} else {\n  response = service.CreateOrUpdatePOIAsync (_poi);\n}\n```", "```java\nif (bitmap != null) {\n  bitmap.Dispose ();\n  bitmap = null;\n}\n```"]