- en: '*Chapter 25*: Getting Started with SharePlay'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Apple introduced **SharePlay** during WWDC 2021, which allows users to share
    experiences by integrating your apps into FaceTime using the **Group Activities**
    framework.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you'll implement SharePlay for a sample app by adding Group
    Activities support to it. You'll begin by learning how SharePlay works. Next,
    you'll explore the app you'll be adding SharePlay support to using the Group Activities
    framework. After that, you'll learn how to create a custom group activity for
    this app, and how to manage a group activity session. Finally, you will test the
    SharePlay experience in the app using two iOS devices.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this chapter, you'll have learned how SharePlay works, and how
    to update your own apps to use it.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding SharePlay
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring the *ShareOrder* app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a custom Group Activity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing a group activity session
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Testing SharePlay in the *ShareOrder* app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You will implement and test the Group Activities framework in a sample app named
    *ShareOrder*. A paid Apple developer account and at least two iOS devices running
    iOS 15.1 or later with the *ShareOrder* app installed will be required. You can
    also use one Mac with macOS 12.1 or later installed and one iOS device with iOS
    15.1 or later installed.
  prefs: []
  type: TYPE_NORMAL
- en: 'The completed Xcode project for this chapter is in the `Chapter25` folder of
    the code bundle for this book, which can be downloaded here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition](https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Check out the following video to see the code in action:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://bit.ly/3I9zb6Y](https://bit.ly/3I9zb6Y)'
  prefs: []
  type: TYPE_NORMAL
- en: Let's start by learning about SharePlay in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding SharePlay
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: SharePlay was introduced by Apple during WWDC 2021\. It enables shared user
    experiences for participants in a FaceTime session. For example, a user may wish
    to watch a video together with another user. All the user needs to do is to FaceTime
    with the other user, launch the video app, and initiate SharePlay. The same app
    will launch for the other user and play the same video, and SharePlay ensures
    that the video stays in sync between both users.
  prefs: []
  type: TYPE_NORMAL
- en: You can also create custom SharePlay experiences. An example of this is the
    *DrawTogether* app demonstrated during WWDC 2021\. In the demonstration, three
    users initially joined a FaceTime session. One user launched the *DrawTogether*
    app, and initiated the SharePlay session in the app. The other users were presented
    with a SharePlay prompt containing a **Join** button. When the **Join** button
    was tapped, the *DrawTogether* app was launched for the other users, and whatever
    a user drew on their screen appeared on the screens of the other users.
  prefs: []
  type: TYPE_NORMAL
- en: Important Information
  prefs: []
  type: TYPE_NORMAL
- en: 'You can see how the *DrawTogether* app works and how it is implemented here:
    [https://developer.apple.com/videos/play/wwdc2021/10187](https://developer.apple.com/videos/play/wwdc2021/10187).'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the *DrawTogether* app here: [https://developer.apple.com/documentation/groupactivities/drawing_content_in_a_group_session](https://developer.apple.com/documentation/groupactivities/drawing_content_in_a_group_session).'
  prefs: []
  type: TYPE_NORMAL
- en: SharePlay is powered by the Group Activities framework. This framework uses
    FaceTime to synchronize your app's activities and to invite other participants
    to join those activities. Objects representing shared activities must conform
    to the `GroupActivity` protocol. After a group activity has started, a `GroupSession`
    object is used to synchronize app behavior between all participants.
  prefs: []
  type: TYPE_NORMAL
- en: Important Information
  prefs: []
  type: TYPE_NORMAL
- en: 'You can find links to all of Apple''s Group Activities-related videos during
    WWDC 2021 here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://developer.apple.com/videos/wwdc2021/?q=group%20activities](https://developer.apple.com/videos/wwdc2021/?q=group%20activities)'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can read Apple''s Group Activities documentation here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://developer.apple.com/documentation/GroupActivities](https://developer.apple.com/documentation/GroupActivities)'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, you will implement the Group Activities framework in a sample
    app named *ShareOrder* by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Add the Group Activities capability to the *ShareOrder* app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create and configure a *ShareOrder* structure conforming to the `GroupActivity`
    protocol. This structure will contain metadata that describes the group activity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure the *ShareOrder* app's user interface with a button to activate the
    group activity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Implement a `GroupSession` object that allows your app to join a group activity
    session.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Implement a `GroupSessionMessenger` object that allows your app to send and
    receive messages. These messages are used to synchronize what the users do in
    the app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Before you do so, let's see how the *ShareOrder* app works in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the ShareOrder app
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The app you will be working on, *ShareOrder*, is a simple app that records
    and displays what you want to order at a restaurant. Let''s build and run this
    app to see how it works. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have not already done so, download the `Chapter25` folder of the code
    bundle for this book at this link: [https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition](https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the `Chapter25` folder, and you'll see two folders, `ShareOrder-start`
    and `ShareOrder-complete`. The first folder contains the app that you will be
    modifying for this lesson, and the second contains the completed app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the `ShareOrder-start` folder and open the `ShareOrder` Xcode project.
    Click on the `Main` storyboard file in the Project navigator. You should see a
    **+** button in the navigation bar and a table view filling the rest of the screen.![Figure
    25.1: ShareOrder app with Main storyboard file displayed'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_25.01_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 25.1: ShareOrder app with Main storyboard file displayed'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The app will display a screen showing an empty table view upon launch. Tapping
    on the **+** button will present a dialog box, which allows you to enter an order,
    which will then appear in the table view.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Click the `ViewController` file in the Project navigator. You should see the
    following code in the Editor area:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Let''s break this down:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This property holds an array of orders, which are of type `String`. This array
    will be the data source for the table view in the app.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This outlet is connected to the table view in the view controller scene inside
    the `Main` storyboard file.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`viewDidLoad()` method:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The code in this method sets the title in the navigation bar to `ShareOrder`,
    and registers the reuse identifier `orderCell` for the table view cells.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`addOrder(_:)` method:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This method is connected to the `orders` array and reload the table view. Tapping
    `orders` array. Each cell in the table view will display the corresponding string
    in the `orders` array.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You may wish to review [*Chapter 15*](B17469_15_Final_VK_ePub.xhtml#_idTextAnchor213)*,
    Getting Started with Table Views*, which covers the table view data source methods
    in more detail.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Build and run the app. Tap the **+** button, enter some text in the alert''s
    text field, and tap **Save**. It will appear in the table view, as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.2: iOS Simulator running the ShareOrder app'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_25.02_B17469.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 25.2: iOS Simulator running the ShareOrder app'
  prefs: []
  type: TYPE_NORMAL
- en: Now that you are familiar with the *ShareOrder* app and how it works, you will
    add Group Activities support for it. After you have done so, adding an order during
    a SharePlay session will make the order appear on the screen of all participants.
    You'll start by creating a custom Group Activity for the *ShareOrder* app in the
    next section.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a custom Group Activity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You have seen that the *ShareOrder* app lets you add orders which will be displayed
    on the screen. You will add a group activity for this app that lets participants
    add orders during a SharePlay session which will appear on every participant''s
    screen. A custom object is required to represent this activity. The steps required
    to implement this are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Add the Group Activities entitlement to the *ShareOrder* app.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a new structure named `ShareOrder` that conforms to the `GroupActivity`
    protocol, and configure the group activity metadata.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add a button to the *ShareOrder* app's user interface and add an action for
    this button to activate the group activity.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important Information
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You can learn more about creating a custom Group Activity at this link: [https://developer.apple.com/documentation/groupactivities/inviting-participants-to-share-an-activity](https://developer.apple.com/documentation/groupactivities/inviting-participants-to-share-an-activity).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Let's start by adding the Group Activities entitlement to the *ShareOrder* app
    in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the Group Activities entitlement
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Because your app will have interactions between different devices, it must
    have the `com.apple.developer.group-session` entitlement. You''ll use Xcode to
    add this entitlement to your app. Note that you need a paid Apple developer account
    for this. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the `ShareOrder` project (the topmost item in the Project navigator)
    and click the `ShareOrder` target. Select the **Signing & Capabilities** pane
    in the Editor area. Verify that **Team** has been set to a paid Apple developer
    account.![Figure 25.3: Xcode Signing & Capabilities pane with account set'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_25.03_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 25.3: Xcode Signing & Capabilities pane with account set'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Instructions on how to set a development team and how to run your app on an
    iOS device are provided in [*Chapter 1*](B17469_01_Final_VK_ePub.xhtml#_idTextAnchor016)*,
    Getting Familiar with Xcode*.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Instructions on how to get a paid Apple Developer account are provided in [*Chapter
    26*](B17469_26_Final_VK_ePub.xhtml#_idTextAnchor496)*, Testing and Submitting
    Your App to the App Store*.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Plug in one of your iOS devices running iOS 15 and verify that the *ShareOrder*
    app can run on your device.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the **Signing and Capabilities** pane, click the **+** button to add a capability
    to the *ShareOrder* app.![Figure 25.4: Xcode Signing and Capabilities pane with
    + button highlighted'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_25.04_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 25.4: Xcode Signing and Capabilities pane with + button highlighted'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'In the window that appears, search for and double-click the Group Activities
    capability to add it to the *ShareOrder* app:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 25.5: Group Activities capability added to ShareOrder app'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_25.05_B17469.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 25.5: Group Activities capability added to ShareOrder app'
  prefs: []
  type: TYPE_NORMAL
- en: You have added the Group Activities entitlement to the *ShareOrder* app. Next,
    you will create a `ShareOrder` structure to represent a group activity in the
    next section.
  prefs: []
  type: TYPE_NORMAL
- en: Creating the ShareOrder structure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The activity that you will implement for the *ShareOrder* app will let orders
    added during a SharePlay session appear on the screen of all participants. You
    need an object to represent this activity. You will implement this object by creating
    a `ShareOrder` structure. This structure will conform the `GroupActivity` protocol,
    and will contain metadata describing the activity. To create and configure the
    `ShareOrder` structure, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the `ViewController` file in the Project navigator and import the `GroupActivities`
    framework as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add the following extension after the last curly brace to create and configure
    the `ShareOrder` structure:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This structure represents the *ShareOrder* app's shareable experience. It conforms
    to the `GroupActivity` protocol, which provides context and metadata to start
    an activity-related session. Here, you use a computed property named `metadata`
    to set the metadata title and the comment. For custom activities, the metadata
    type is set to `.generic`.
  prefs: []
  type: TYPE_NORMAL
- en: You have created and configured the `ShareOrder` structure. In the next section,
    you will add a button to the *ShareOrder* app's user interface and configure this
    button to activate the group activity during a FaceTime session.
  prefs: []
  type: TYPE_NORMAL
- en: Activating a custom group activity
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You have created and configured the `ShareOrder` structure used to represent
    a custom group activity for the *ShareOrder* app. Now you will add a button to
    the *ShareOrder* app''s navigation bar to activate this group activity while you
    are in a FaceTime session with other participants. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Click the `Main` storyboard file in the Project navigator and click the Library
    button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the Library''s filter field, search for a **Bar Button Item** object and
    drag it to the navigation bar next to the **+** button:![Figure 25.6: Library
    with Bar Button Item selected'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_25.06_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 25.6: Library with Bar Button Item selected'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'With the bar button item selected, click the Attributes inspector button. Under
    `person.2.fill`:![Figure 25.7: Attributes inspector showing bar button item with
    Image set to person.2.fill'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_25.07_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 25.7: Attributes inspector showing bar button item with Image set to
    person.2.fill'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This sets the icon for the bar button item.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the Adjust Editor Options button and choose `ViewController` file will
    appear in the assistant editor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Control + Drag* from the bar button item you just added to just before the
    `addOrder(_:)` method in the assistant editor.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A pop-up dialog box will appear.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'In the `activateGroupActivity` and click **Connect**:![Figure 25.8: Pop-up
    dialog box with Name set to activateGroupActivity'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_25.08_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 25.8: Pop-up dialog box with Name set to activateGroupActivity'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Add the following code to the `activateGroupActivity(_:)` method to activate
    the group activity when the bar button item is tapped:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This will display a SharePlay prompt with a **Join** button to all participants
    in the FaceTime session.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **x** button to close the assistant editor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You have just added a button that will activate your group activity when tapped.
    In the next section, you'll learn how to manage a group activity session in the
    *ShareOrder* app.
  prefs: []
  type: TYPE_NORMAL
- en: Managing a group activity session
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You have created the `ShareOrder` structure to represent a group activity for
    the *ShareOrder* app, and you have added a button to the app''s navigation bar
    to activate the group activity during a FaceTime session. Now you need to add
    code to allow participants to join this group activity session and keep all participants
    in sync with one another. The steps required to implement this are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a `GroupSession` object that lets the app join a group activity session.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a `GroupSessionMessenger` object that lets the app send and receive messages
    to synchronize content.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important Information
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You can learn more about session management at this link: [https://developer.apple.com/documentation/groupactivities/joining-your-app-to-a-shared-activity](https://developer.apple.com/documentation/groupactivities/joining-your-app-to-a-shared-activity).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Let's see how to implement and configure a `GroupSession` object for the *ShareOrder*
    app in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing a GroupSession object
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The *ShareOrder* app currently has an object to represent the group activity,
    and a button that is used to activate the group activity during a FaceTime session.
    You''ll add code to your app to implement a `GroupSession` object, which will
    allow participants to join the group activity session. To implement and configure
    the `GroupSession` object for the *ShareOrder* app, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the `ViewController` file in the Project navigator. Add an optional property
    after the `orders` property to hold an instance of the group activity session:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add the following code to `viewDidLoad()` to create an asynchronous task to
    receive a group session:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add the following code to the extension after the `ShareOrder` structure definition
    to implement the `configureGroupSession(_:)` method:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This method removes all the orders in the `orders` array, then assigns the received
    group activity session to the `groupSession` property.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Modify the `configureGroupSession(_:)` method by adding code to join the group
    activity session:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Now that you've implemented and configured the `GroupSession` object, you'll
    implement and configure a `GroupSessionMessenger` object for the *ShareOrder*
    app in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing a GroupSessionMessenger object
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once the users of the *ShareOrder* app have joined the SharePlay session, any
    orders they add to the app will appear on everyone''s screen. This synchronization
    is handled by a `GroupSessionMessenger` object, which can send messages to and
    receive messages from other devices in the group activity session. Do note that
    it is important to keep the size of the messages small, as large message sizes
    may cause apps to crash. For this app, the messages will just hold the strings
    containing the orders submitted, which will be quite small. To implement the `GroupSessionMessenger`
    object for the *ShareOrder* app, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the `ViewController` file, add a new optional property after the `groupSession`
    property to hold an instance of `GroupSessionMessenger`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Modify the `configureGroupSession(_:)` method to create an instance of `GroupSessionMessenger`
    and assign it to the `messenger` property:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add an asynchronous task to receive `GroupSessionMessenger` messages after
    the `messenger` property assignment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Implement the `handle(_:)` method after the `configureGroupSession(_:)` method
    as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This method appends the string from the message to the `orders` array, and reloads
    the table view.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Modify the `addOrder(_:)` method as follows to send a `GroupSessionMessenger`
    message when a participant taps the **+** button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The code you added to the `addOrder(_:)` method creates an asynchronous task
    that sends the message containing the order to all other participants in the FaceTime
    session. When the message is received, it will be processed by the `handle(_:)`
    method, which adds the order to the `orders` array and reloads the table view.
  prefs: []
  type: TYPE_NORMAL
- en: Build and run the *ShareOrder* app on your iOS 15 device. It should work as
    it did before. In the next section, you'll test SharePlay in the *ShareOrder*
    app by using two iOS devices in a FaceTime session.
  prefs: []
  type: TYPE_NORMAL
- en: Testing SharePlay in the ShareOrder app
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You have added all the code required to implement SharePlay in the *ShareOrder*
    app. In order to test it, you''ll need two iOS devices running iOS 15.1 or later
    with the *ShareOrder* app installed. You could also use a Mac running macOS 12.1
    Monterey or later as one of the devices. You''ll initiate a FaceTime session between
    both devices and initiate a SharePlay session. You should be able to add orders
    from either device, and any orders you add will appear on both screens. Follow
    these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Install the *ShareOrder* app on your second iOS device.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Start a FaceTime call between the two devices and launch the *ShareOrder* app
    on the first device.![Figure 25.9: ShareOrder running on first device during FaceTime
    call'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_25.09_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 25.9: ShareOrder running on first device during FaceTime call'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Tap the button to activate the group activity. You should see a SharePlay prompt
    on the second device.![Figure 25.10: Tapping button on first device triggers SharePlay
    prompt on second device'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_25.10_B17469.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 25.10: Tapping button on first device triggers SharePlay prompt on second
    device'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Tap the **Join** button in the SharePlay prompt, and the *ShareOrder* app will
    launch on the second device. Add an order using the **+** button, and it will
    appear on the screen of both devices.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 25.11: Same orders appear on both devices'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_25.11_B17469.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 25.11: Same orders appear on both devices'
  prefs: []
  type: TYPE_NORMAL
- en: Congratulations! You've just implemented SharePlay in the *ShareOrder* app!
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you implemented SharePlay for the *ShareOrder* app by adding
    Group Activities support to it.
  prefs: []
  type: TYPE_NORMAL
- en: You started by learning how SharePlay works. Next, you explored the *ShareOrder*
    app to see how it works. After that, you created a custom group activity for this
    app, and added code to manage a group activity session. Finally, you tested the
    SharePlay experience in the app using two iOS devices.
  prefs: []
  type: TYPE_NORMAL
- en: You now understand the basics of SharePlay and will now be able to add custom
    group activities into your own apps.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will learn how to test and submit your app to the App
    Store.
  prefs: []
  type: TYPE_NORMAL
