["```java\n    public class MyFragment : Fragment\n    {\n    -----\n    -----\n    }\n    ```", "```java\n    public override View OnCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)\n    {\n      // Inflate the layout for your fragment\n      View view = inflater.Inflate(Resource.Layout.MyFragmentLayout, container, false);\n       // Initialize other view controls\n      return view;\n    }\n    ```", "```java\n&lt;fragment class=\"MyApp.MyFragment\"\n  android:id=\"@+id/myFragment\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\" /&gt;\n```", "```java\n&lt;FrameLayout\n  android:id=\"@+id/myFragmentContainer\"\n    android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\" /&gt;\n```", "```java\nMyFragment myFragment = new MyFragment();\nFragmentTransaction ft = FragmentManager.BeginTransaction();\n```", "```java\nft.Add(Resource.Id.myFragmentContainer, myFragment);\nft.Commit();\n```", "```java\n    PointOfInterest _poi;\n     EditText _nameEditText;\n    EditText _descrEditText;\n    EditText _addrEditText;\n    EditText _latEditText;\n    EditText _longEditText;\n    ```", "```java\n    private Activity activity;\n    public override void OnAttach (Activity activity)\n    {\n      base.OnAttach (activity);\n      this.activity = activity;\n    }\n    ```", "```java\n    public override View OnCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)\n    {\n      View view = inflater.Inflate(Resource.Layout.POIDetailFragment, container, false);\n       _nameEditText = view.FindViewById&lt;EditText&gt;(Resource.Id.nameEditText);\n      _descrEditText = view.FindViewById&lt;EditText&gt; (Resource.Id.descrEditText);\n      _addrEditText = view.FindViewById&lt;EditText&gt; (Resource.Id.addrEditText);\n      _latEditText = view.FindViewById&lt;EditText&gt; (Resource.Id.latEditText);\n      _longEditText = view.FindViewById&lt;EditText&gt; (Resource.Id.longEditText);\n     UpdateUI();\n      return view;\n    }\n    ```", "```java\n    public override void OnCreate (Bundle savedInstanceState)\n    {\n      base.OnCreate (savedInstanceState);\n      if (Arguments!=null &amp;&amp; Arguments.ContainsKey(\"poi\")) {\n        string poiJson = Arguments.GetString (\"poi\");\n        _poi = JsonConvert.DeserializeObject&lt;PointOfInterest&gt;(poiJson);\n      } else {\n        _poi = new PointOfInterest ();\n      }\n    }\n    ```", "```java\n    SetHasOptionsMenu (true);\n    ```", "```java\n    public override void OnCreateOptionsMenu (IMenu menu, MenuInflater inflater)\n    {\n      inflater.Inflate(Resource.Menu.POIDetailMenu, menu);\n      base.OnCreateOptionsMenu (menu, inflater);\n    }\n     public override bool OnOptionsItemSelected (IMenuItem item)\n    {\n      switch (item.ItemId)\n      {\n        case Resource.Id.actionSave:\n          SavePOI ();\n          return true;\n        case Resource.Id.actionDelete: \n          DeletePOI ();\n          return true;\n        default:\n          return base.OnOptionsItemSelected(item);\n      }\n    }\n    ```", "```java\npublic override void OnPrepareOptionsMenu (IMenu menu)\n{\n  base.OnPrepareOptionsMenu (menu);\n  if (_poi.Id &lt;= 0) {\n    IMenuItem item = menu.FindItem (Resource.Id.actionDelete);\n    item.SetEnabled (false);\n    item.SetVisible(false);\n  }\n}\n```", "```java\n    &lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n    &lt;FrameLayout \n        p1:minWidth=\"25px\"\n        p1:minHeight=\"25px\"\n        p1:layout_width=\"match_parent\"\n        p1:layout_height=\"match_parent\"\n        p1:id=\"@+id/poiDetailLayout \" /&gt;\n    ```", "```java\n    using Android.App;\n     namespace POIApp\n    {\n      [Activity (Label = \"POIDetailActivity\")]    \n      public class POIDetailActivity : Activity\n      {\n        PointOfInterest _poi;\n        protected override void OnCreate (Bundle bundle)\n        {\n          base.OnCreate (bundle);\n          SetContentView (Resource.Layout.POIDetail);  \n        }\n      }\n    }\n    ```", "```java\n    var detailFragment = new POIDetailFragment();\n    detailFragment.Arguments = new Bundle ();\n    if (Intent.HasExtra (\"poi\")) {\n        string poiJson = Intent.GetStringExtra (\"poi\");\n        detailFragment.Arguments.PutString(\"poi\", poiJson);}\n    ```", "```java\n    FragmentTransaction ft = FragmentManager.BeginTransaction();\n    ft.Add(Resource.Id.poiDetailLayout, detailFragment);\n    ft.Commit();\n    ```", "```java\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;RelativeLayout \n    android:orientation=\"vertical\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"fill_parent\"\n    android:minWidth=\"25px\"\n    android:minHeight=\"25px\"&gt;\n    &lt;ListView\n        android:minWidth=\"25px\"\n        android:minHeight=\"25px\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:id=\"@android:id/list\" /&gt;\n    &lt;ProgressBar\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:id=\"@+id/progressBar\"\n        android:layout_centerInParent=\"true\"\n        android:visibility=\"gone\" /&gt;\n&lt;/RelativeLayout&gt;\n```", "```java\n    namespace POIApp {\n      public class POIListFragment: ListFragment \n      {\n        public override View OnCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)\n        {\n          View view = inflater.Inflate(Resource.Layout.POIListFragment, container, false);\n          return view;\n        }\n      }\n    }\n    ```", "```java\n    private ProgressBar progressBar;\n    private List&lt;PointOfInterest&gt; poiListData;\n    private POIListViewAdapter poiListAdapter;\n    ```", "```java\n    private Activity activity;\n    public override void OnAttach (Activity activity)\n    {\n      base.OnAttach (activity);\n      this.activity = activity;\n    }\n    ```", "```java\n    progressBar = view.FindViewById&lt;ProgressBar&gt; (Resource.Id.progressBar);\n    ```", "```java\n    public async void DownloadPoisListAsync(){\n      POIService service = new POIService ();\n      if (!service.isConnected (activity)) {\n        Toast toast = Toast.MakeText (activity, \"Not conntected to internet. Please check your device network settings.\", ToastLength.Short);\n        toast.Show ();\n      } else {\n        progressBar.Visibility = ViewStates.Visible;\n        poiListData = await service.GetPOIListAsync ();\n        progressBar.Visibility = ViewStates.Gone;\n         poiListAdapter = new POIListViewAdapter (activity, poiListData);\n        this.ListAdapter = poiListAdapter;\n      }\n    }\n    ```", "```java\n    public override void OnResume ()\n    {\n        DownloadPoisListAsync ();\n      base.OnResume ();\n    }\n    ```", "```java\n    SetHasOptionsMenu (true);\n    ```", "```java\n    public override void OnCreateOptionsMenu (IMenu menu, MenuInflater inflater)\n    {\n      <span class=\"strong\"><strong>inflater.Inflate(Resource.Menu.POIListViewMenu, menu);</strong></span>\n      base.OnCreateOptionsMenu (menu, inflater);\n    }\n     public override bool OnOptionsItemSelected (IMenuItem item)\n    {\n      switch (item.ItemId)\n      {\n      case Resource.Id.actionNew:\n    <span class=\"strong\"><strong>    Intent intent = new Intent (activity, typeof(POIDetailActivity));</strong></span>\n        StartActivity (intent);\n        return true;\n      case Resource.Id.actionRefresh:\n        DownloadPoisListAsync ();\n        return true;\n      default :\n        return base.OnOptionsItemSelected(item);\n      }\n    }\n    ```", "```java\n    public override void OnListItemClick (ListView l, View v, int position, long id)\n    {\n      <span class=\"strong\"><strong>PointOfInterest poi = poiListData[position];  </strong></span>\n    Intent poiDetailIntent = new Intent(activity, typeof(POIDetailActivity));\n       string poiJson = JsonConvert.SerializeObject(poi); \n      poiDetailIntent.PutExtra(\"poi\", poiJson);\n      StartActivity(poiDetailIntent);\n    }\n    ```", "```java\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;LinearLayout \n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:minWidth=\"25px\"\n    android:minHeight=\"25px\"\n    android:orientation=\"horizontal\"&gt;\n    &lt;fragment\n        class=\"POIApp.POIListFragment\"\n        android:id=\"@+id/listFragment\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" /&gt;\n&lt;/LinearLayout&gt;\n```", "```java\nusing Android.App;\nusing Android.Os;\n namespace POIApp\n{\n  [Activity (Label = \"POI List\")]\n  public class POIListActivity : Activity\n  {\n    protected override void OnCreate (Bundle bundle)\n    {\n      base.OnCreate (bundle);\n      SetContentView (Resource.Layout.POIList);\n    }\n  }\n}\n```", "```java\n    &lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n    &lt;LinearLayout \n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:minWidth=\"25px\"\n        android:minHeight=\"25px\"\n        android:orientation=\"horizontal\"&gt;\n        &lt;fragment\n          class=\"POIApp.POIListFragment\"\n          android:id=\"@+id/listFragment\"\n          android:layout_width=\"0dp\"\n          android:layout_height=\"match_parent\"\n          android:layout_weight=\"2\" \n          android:paddingLeft=\"20dp\"\n          android:paddingRight=\"20dp\" /&gt;\n        &lt;FrameLayout\n          android:minWidth=\"25px\"\n          android:minHeight=\"25px\"\n          android:layout_width=\"0dp\"\n          android:layout_height=\"match_parent\"\n          android:id=\"@+id/poiDetailLayout\"\n          android:layout_weight=\"3\"\n          android:paddingLeft=\"20dp\"\n          android:paddingRight=\"20dp\" /&gt;\n    &lt;/LinearLayout&gt;\n    ```", "```java\n    public static bool isDualMode = false;\n    ```", "```java\n    var detailsLayout = FindViewById (Resource.Id.poiDetailLayout);\n    if (detailsLayout != null &amp;&amp; detailsLayout.Visibility == ViewStates.Visible) {\n        isDualMode = true;\n    }else{\n    isDualMode = false;\n    }\n    ```", "```java\n    case Resource.Id.actionNew:\n        if (POIListActivity.isDualMode) {\n            var detailFragment = new POIDetailFragment();\n            FragmentTransaction ft = FragmentManager.BeginTransaction ();\n            ft.Replace (Resource.Id.poiDetailLayout, detailFragment);\n            ft.Commit ();\n        } else {\n            Intent intent = new Intent (activity, typeof(POIDetailActivity));\n            StartActivity (intent);\n        }\n    return true;\n    ```", "```java\n    public override void OnListItemClick (ListView l, View v, int position, long id)\n    {\n      PointOfInterest poi = poiListData[position];\n      if (POIListActivity.isDualMode) {\n        var detailFragment = new POIDetailFragment();\n        detailFragment.Arguments = new Bundle ();\n        detailFragment.Arguments.PutString(\"poi\", JsonConvert.SerializeObject(poi));\n         FragmentTransaction ft = FragmentManager.BeginTransaction ();\n        ft.Replace (Resource.Id.poiDetailLayout, detailFragment);\n        ft.Commit ();\n      } else {\n        Intent poiDetailIntent = new Intent(activity, typeof(POIDetailActivity));\n        poiDetailIntent.PutExtra(\"poi\", JsonConvert.SerializeObject(poi));\n        StartActivity(poiDetailIntent);\n      }\n    }\n    ```", "```java\n    public class DeleteDialogFragment : DialogFragment\n    {\n    }\n    ```", "```java\n    public override Dialog OnCreateDialog (Bundle savedInstanceState)\n    {\n      AlertDialog.Builder alertConfirm = new AlertDialog.Builder(this.Activity);\n      alertConfirm.SetTitle(\"Confirm delete\");\n      alertConfirm.SetCancelable(false);\n      alertConfirm.SetPositiveButton(\"OK\", delegate {});\n      alertConfirm.SetNegativeButton(\"Cancel\", delegate {});\n      alertConfirm.SetMessage(\"Are you sure you want to delete?\");\n      return alertConfirm.Create ();\n    }\n    ```", "```java\n    FragmentTransaction ft = FragmentManager.BeginTransaction();\n    DeleteDialogFragment dialogFragment = new DeleteDialogFragment ();\n    dialogFragment.Show(ft, \"dialog\");\n    ```", "```java\n    Bundle bundle = new Bundle();\n    bundle.PutString(\"name\", _poi.Name);\n    dialogFragment.Arguments = bundle;\n    ```", "```java\n    public override Dialog OnCreateDialog (Bundle savedInstanceState)\n    {\n      <span class=\"strong\"><strong>string poiName = Arguments.GetString(\"name\");</strong></span>\n      AlertDialog.Builder alertConfirm = new AlertDialog.Builder(this.Activity);\n      ...\n      ....\n      <span class=\"strong\"><strong>alertConfirm.SetMessage(String.Format(\"Are you sure you want to delete {0}?\", poiName));</strong></span>\n      return alertConfirm.Create ();\n    }\n    ```", "```java\n    protected void DeletePOI()\n    {\n      FragmentTransaction ft = FragmentManager.BeginTransaction();\n      DeleteDialogFragment dialogFragment = new DeleteDialogFragment();\n      <span class=\"strong\"><strong>dialogFragment.SetTargetFragment (this,0);</strong></span>\n      Bundle bundle = new Bundle();\n      bundle.PutString(\"name\", _poi.Name);\n      dialogFragment.Arguments = bundle;\n      dialogFragment.Show(ft, \"dialog\");\n    }\n    ```", "```java\n    public class DeleteDialogFragment : DialogFragment\n    {\n      public override Dialog OnCreateDialog (Bundle savedInstanceState)\n      {\n        <span class=\"strong\"><strong>POIDetailFragment targetFragment = (POIDetailFragment) TargetFragment;</strong></span>\n         string poiName = Arguments.GetString(\"name\");\n         AlertDialog.Builder alertConfirm = new AlertDialog.Builder(this.Activity);\n        alertConfirm.SetTitle(\"Confirm delete\");\n        alertConfirm.SetCancelable(false);\n        alertConfirm.SetPositiveButton(\"OK\", (sender, e) =&gt; {\n          <span class=\"strong\"><strong>targetFragment.DeletePOIAsync();</strong></span>\n        });\n        alertConfirm.SetNegativeButton(\"Cancel\", delegate {});\n        alertConfirm.SetMessage(String.Format(\"Are you sure you want to delete {0}?\", poiName));\n        return alertConfirm.Create ();\n      }\n    }\n    ```", "```java\n    public override void OnSaveInstanceState (Bundle outState)\n    {\n      base.OnSaveInstanceState (outState);\n      int currentPosition = ListView.FirstVisiblePosition;\n      outState.PutInt (\"scroll_position\", currentPosition);\n    }\n    ```", "```java\n    public override void OnCreate (Bundle savedInstanceState)\n    {\n      base.OnCreate (savedInstanceState);\n      if (null != savedInstanceState) {\n        scrollPosition = savedInstanceState.GetInt (\"scroll_position\");  \n      }\n    }\n    ```", "```java\n    public async void DownloadPoisListAsync(){\n      POIService service = new POIService ();\n      if (!service.isConnected (activity)) {\n        ...\n        ...\n      } else {\n        ...\n        ...\n        this.ListAdapter = poiListAdapter;\n        ListView.Post(() =&gt; {\n          ListView.SetSelection(scrollPosition);\n        });\n      }\n    }\n    ```"]