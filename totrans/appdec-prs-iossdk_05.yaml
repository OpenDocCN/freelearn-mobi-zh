- en: Chapter 5. Push Notifications
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Push notifications allow you to send messages even when the application is in
    the background or not running at all. Push notifications increase the user's engagement
    with the application and keep all the users informed about the application through
    messages, which in turn generates revenue. Additionally, by having your data and
    push services interconnected allows you to send push notifications in a selective
    way, such as *Congrats on completing one year with Packt Publishing*. It's the
    easiest way to reach all your users. Parse provides you with the push notification
    services. This chapter will help you to configure push notifications for your
    application.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Setting up push notifications
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Notification helps you in adding real-time messaging to your application. For
    this, you need to create an SSL certificate and then associate the created certificate
    with your **App ID** and **Provisioning Profile**.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Creating an SSL certificate
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You need to create your **App ID** and associated SSL certificate on the Apple
    developer portal. The Parse server will use this certificate to send push notifications
    to the application identified by that **App ID**.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Generating certificate requests
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to generate the certificate and save it to your
    disk:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Open the **Keychain Access** application on your Mac.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to **Keychain Access** | **Certificate Assistant** | **Request a Certificate
    From a Certificate Authority…**.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Certificate Information** window, enter your e-mail address and name.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Save to disk** to download the **.certSigningRequest** file to your
    desktop.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Setting up your App ID
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'An App ID is required for all the iOS applications installed on your developer
    device. You can use your existing App ID, but make sure that it does not have
    a wildcard character. You can create a new App ID by performing the following
    steps:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Log in to the Apple developer portal ([https://developer.apple.com/membercenter/index.action](https://developer.apple.com/membercenter/index.action))
    and navigate to **Certificates, Identifiers & Profiles** ([https://developer.apple.com/account/overview.action](https://developer.apple.com/account/overview.action)).
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Identifiers** from the left panel of the portal.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **+** button on the top right-hand side to create a new App ID.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the new App ID and select the **Push Notifications** checkbox
    under the **App Services** section.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **App ID suffix** section, select **Explicit App ID**. Enter your iOS
    apps **Bundle ID**. This string should match the Bundle identifier in your iOS
    app's `info.plist` file.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Continue** followed by **Submit** to finalize your registration.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select your newly created App ID from the list of **iOS App IDs**, then click
    on **Settings**.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to the **Push Notifications** section. You can download both **Development**
    and **Production SSL certificate**.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Create Certificate...**, then click on **Continue**.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now you can upload your certificate that you have generated in the previous
    section and then click on **Generate**.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After uploading your certificate, click on **Done** and then download the generated
    SSL certificate from the **iOS App ID Settings** screen.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Install the downloaded certificate in your Keychain by double-clicking on the
    SSL certificate.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In **Keychain Access**, under the **My Certificates** section, select your installed
    certificate, it should have **Apple Development IOS Push Services:** as a prefix.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the selected certificate and save it as the `.p12` file format.
    Do not give any password when prompted.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Creating your provisioning profile
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To authenticate your device for the application you need to create a provisioning
    profile. You need to regenerate your provisioning profile every time you update
    your App ID. Perform the following steps to create a provisioning profile:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Log in to the Apple developer portal and navigate to the **Certificates, Identifiers
    & Profiles** section.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Provisioning Profiles** from the **iOS Apps** section.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **+** button on the top right-hand side of the section, to add
    a new provisioning profile.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose **iOS App Development** as the type of your provisioning profile and
    click on **Continue**.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the App ID created in the previous section and click on **Continue**.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select your certificate and click on **Continue**.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the devices from the list of devices on which you want to install and
    test your application and click on **Continue**.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Provide a name to your provisioning profile and click on **Generate**.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Download the generated profile and double-click to install it.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This should launch your Xcode's **Organizer** in the **Devices** panel. Your
    new provisioning profile should appear in the **Provisioning Profile** section
    of **LIBRARY**. Make sure that the **Status** of the profile is **Valid**.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Configuring your Parse app
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To make use of push notification services with Parse, you would have to enable
    this feature in your Parse app by uploading the Push SSL certificate you generated
    in the previous sections:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to your Parse app on the Parse **Dashboard** and select the **Settings**
    tab.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the left-hand side of the settings panel, you will have **Push notifications**.
    Under the **Apple Push Certificate** header, click on **Select your certificate**
    and locate your `.p12` certificate you exported from the Keychain in the previous
    section.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configuring an iOS application for push notifications
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You need to update the following application settings to configure push notifications:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Your application bundle identifier should be exactly the same as you have provided
    on the Apple developer portal while creating the App ID.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Update your **Code Signing Identity** field to match the provisioning profile
    we created in the previous section.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Installation
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In all the previous sections, we have configured all that is required to get
    started with the push notifications. In this section, we will add some code to
    receive push notifications in our application.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: You need to register your device to get the push notifications, add the following
    code in the app's delegate `[application:didFinishLaunchingWithOptions:]` method.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'On successful registration, your callback method `[application:didRegisterForRemoteNotificationsWithDeviceToken:]`
    in the app delegate will be executed. We need to configure this method to inform
    Parse about the new device:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can update the `PFInstallation` just like your `PFObject`. You can add
    variety of special fields which will help you to manage your devices on Parse.
    The following are some of the fields and their uses:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '`badges`: You can change this value in `PFInstallation` to update the badge
    on the app icon. It''s recommended to save the changes of badges on the server
    for future badge increment notifications.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`channels`: This will store the array of channels that are subscribed to thecurrent
    device.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timeZone`: This property is for the current location of the device. It''s
    updated automatically when we update the `Installation` object on the server.
    This is a read-only property.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`deviceType`: This property is for any device type, that can be iOS, Android,
    winrt, winphone, or dotnet. This is a read-only property.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`installationId`: This is a unique ID property for the device used by Parse.
    This is a read-only property.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`deviceToken`: This is the Apple-generated token used for iOS devices. This
    is a read-only property.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`channelUris`: This is the Microsoft-generated push URI for Windows devices.
    This is a read-only property.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`appName`: This is the display name of the client application to which this
    installation belongs. This is a read-only property.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`appVersion`: This is the version of string of the client application to which
    the current installation belongs. This is a read-only property.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`parseVersion`: This is the version of the Parse SDK that uses this installation.
    This is a read-only property.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`appIdentifier`: This is a unique identifier for this installation''s client
    application. In iOS, this is the `Bundle Identifier`. This is a read-only property.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When your application receives notification in foreground mode, you can handle
    the notification using the following code:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After receiving notification, we can pass the notification over to Parse to
    handle it. It will automatically create a modal alert and will display it with
    the push message content.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: You can now execute your application on your device to make sure that everything
    is set up correctly. If you are running the app for the first time on your device,
    you will receive a modal box requesting the permission for sending push notifications
    to the user.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: Sending push notifications
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can send push notifications to devices using the following ways.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: Parse websites
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to send notifications through the Parse website:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to your Parse application on Parse.com.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Push Notifications** tab.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can click on **Send a push** on the top right-hand side of the box.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Compose a message in the message box, and broadcast it to **Everyone**. You
    have other options available to select the device type.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Parse allows you to schedule the notifications as well. You can configure this
    schedule and click on **Send notification** to send the notification.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Parse apps
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Usually you can send push notifications through a web console, or by using
    the REST API, or Cloud Code. However, Parse also allows you to send push notifications
    from your mobile application as well. Remember, you have enabled the **Client
    push** as **Yes**. The enabled **Client push** setting allows you to send a notification
    from one device to another. There are lots of methods available in the `PFPush`
    class, which allow you to send push notifications through your mobile. You can
    access all the methods in the API documentation. Here is the example code to demonstrate
    the push notifications generated from an iOS device:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Cloud Code
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Cloud Code also allows you to send push notifications using the `Parse.Cloud.afterSave`
    method, which will be executed after the object is saved successfully on Parse.
    Cloud can be written in JavaScript. You should be familiar with JavaScript to
    write Cloud Code. Let''s take an example of how to send push notifications after
    each comment:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Sending notifications
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are two ways to send push notifications to devices using Parse. They are
    as follows.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: Channels
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It's the easiest way to start sending notifications. It's based on the Publish/Subscribe
    model. For example, if you want to send a notification to the user on every comment
    on the post he/she created, then you have to create a channel and subscribe the
    user to that channel, and over every comment you need to send a push for that
    channel. This will let the user know when anyone comments on his/her post even
    when the application is not running or is in the background. So for sending the
    push notifications you need to allow the user to create a channel. A device can
    subscribe for one or more channels to receive notifications that can be sent to
    such subscribers. The subscribed channels for Installation are stored in the `channels`
    fields of the `Installation` object.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Subscribing to channels
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can identify a channel by string, which can be a combination of alphanumeric
    characters, underscores, and dashes. Each installation can subscribe to any number
    of channels at any time. You can add a channel by using the following code in
    the `Installation` object:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'After subscribing to comments, your `Installation` object should look something
    like this:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To unsubscribe users from the channel, you can add the following code:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To get a list of channels as an array for caching purposes, you can use the
    following code:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Sending push notifications to channels
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To send push notifications to all the users who are subscribed with the `Comments`
    channel, the following code will send a push to all the subscribed users:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If you want to send a push to multiple channels at the same time, you can use
    the following code:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Using advanced targeting
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In advanced push notifications, Parse allows you to embed a query and you can
    send the result of the query as push notifications to the users. This will help
    you to send pushes to customize a dynamic segment of users.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: 'You can save the data to the `Installation` object just as any `PFObject`.
    Let''s say in your application you allow users to like, comment, and post. The
    following piece of code will help you achieve that:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Sending pushes to queries
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can filter the `Installation` objects by applying queries to the target
    devices for notifications. This can be achieved using the following code:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We can set the query to `PFPush` before sending the notification. You can also
    store the data in relationships. Those relationships can also be used in query:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Customizing notifications
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can customize the push notifications data such as sound played, badge number,
    custom data to send, and expiration of notification.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also customize the notification by wrapping all settings in a `NSDictionary`
    method. Let''s take an example of incrementing the badge by one with custom sound
    and message in the notification:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To set the expiration date of the notification, you can use the following example
    code:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Platform-based targeting
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can have the application working on various platforms. If you want to target
    the push to a specific platform device or operating system, then you can use the
    following code. This code will send a separate notification for iOS, Android,
    and Windows apps:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Receiving push notifications
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you receive a customized notification, you can retrieve the associated
    data from your notification. This data can help in modifying the behavior of the
    application as per the notification. For example, if the notification is sent
    because of the comment on the post, you can directly open the post for that comment
    by reading the push notification data.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: 'Apple has a package size restriction, so it is recommended to keep your data
    size as small as possible:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Responding to payload
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If your application is launched using the notification, you can access the
    data from the `[application:didFinishLaunchingWithOptions:]` method through the
    `launchOptions` dictionary:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'If your application is already running in foreground mode, the data can be
    fetched from the `[application:didRegisterForRemoteNotificationsWithDeviceToken:]`
    method in the `userInfo` dictionary:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Summary
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we explored the setup and installation of push notifications
    in our application.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: We started by setting up push notifications on the Apple developer portal and
    necessary installation in codebase.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: Then, we learned about sending the push notifications and their scheduling.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we saw the ways to receive payload from the notifications.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们了解了从通知中接收有效载荷的方法。
- en: In the next chapter, we will learn about Parse users and their roles.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习关于Parse用户及其角色的内容。
