- en: Chapter 4. Our First Game with Moai
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Adventure time! We're going to start working on our first game made with Moai
    SDK, a simple *Concentration*-like game. For this you'll need some understanding
    of Lua syntax, nothing too fancy, just the basics. If you've never used Lua before,
    it'd be a good idea to read some quick introduction material and have a syntax
    cheat sheet around when reading this book.
  prefs: []
  type: TYPE_NORMAL
- en: Concentration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For those readers who are not familiar with this game, let's describe it.
  prefs: []
  type: TYPE_NORMAL
- en: The game requires a set of tiles. There must be an even number of them. The
    tiles have figures (in pairs, since we're going to match them) on one side and
    a flat color or identical image on the other side (the back of the tile).
  prefs: []
  type: TYPE_NORMAL
- en: 'The gameplay is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Place all the tiles facing down and shuffle them. This way you hide the pairs
    and have no idea where they are.![Concentration](img/5064_04_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, you have to choose two tiles and flip them, to reveal the images.![Concentration](img/5064_04_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If they're different, you have to flip them back again and pick a different
    pair.![Concentration](img/5064_04_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If they are the same, you remove them from the board and the game continues
    with two tiles less.![Concentration](img/5064_04_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The game ends when there are no tiles left.
  prefs: []
  type: TYPE_NORMAL
- en: We will implement this game, with the addition of a ticking clock, so things
    get a little bit more challenging.
  prefs: []
  type: TYPE_NORMAL
- en: In order to do this we'll examine all of Moai SDK's basic features and how to
    use them.
  prefs: []
  type: TYPE_NORMAL
- en: Project setup
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To set up the project we need to perform a couple of steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a folder for our project somewhere on your hard drive.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After that open ZeroBrane Studio and navigate to that folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You'll now see an empty folder and a blank file named `untitled.lua`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Save that file as `main.lua`, which is the usual name for a game entry point
    file. You can name it whatever you want, but we'll use this as a standard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now we are ready to start.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Opening a window
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first thing we'll learn is how to open the main game window using Moai SDK.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is a relatively easy task. The code is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: What we are doing here is calling the `MOAISim.openWindow` class method with
    the necessary parameters, namely, `title` for window (a string), `width`, and
    `height`. As you may have noticed, we used 320 x 480, which is the display resolution
    of an iPhone 3GS (without Retina Display).
  prefs: []
  type: TYPE_NORMAL
- en: If you run the script now, you'll see that a window opens. So that's it, our
    main window is ready. But before going further, let's take a look at an important
    aspect of Moai SDK.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading the example code**'
  prefs: []
  type: TYPE_NORMAL
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com) . If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Resolution independence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The window we just opened has a specific width and height. But, as we know,
    different devices have different resolutions and we can't just open up a screen
    with a fixed width and height because it won't behave correctly on say, an iPhone
    and an iPad.
  prefs: []
  type: TYPE_NORMAL
- en: So we'll introduce a concept here **world resolution** versus **screen/window
    resolution**.
  prefs: []
  type: TYPE_NORMAL
- en: 'The idea is that your game will use world resolution for all the calculations
    and object placement, and then you''ll use a viewport that understands that world
    resolution and translates it into window resolution. So, let''s set that up our
    script as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s take a look at the preceding code line by line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: These lines are defining two constants, namely, our world resolution along the
    X and Y axes. Remember that these are not the dimensions of the screen, just our
    world.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we define `X` and `Y` dimensions for our screen''s resolution. As you can
    see, we made our screen double the size of our world. We do this is in order to
    better illustrate the independence of screen resolution with respect to world
    resolution. In the following chapters, we''ll see that anything you place in the
    world will look twice as big on the screen as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Resolution independence](img/5064_04_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We now need to tell Moai to open a window, this is needed during development
    to create a window for our game, on the devices it will just do nothing.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: This is the same line we saw before, but now, we are using our `SCREEN_RESOLUTION_X`
    and `SCREEN_RESOLUTION_Y` constants. Note that in devices that have fixed size
    screens, this method won't do anything special, but we need it to run our samples
    in the computer.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Now, here is something new (literally). In order to handle the conversion between
    world and screen coordinates, we will use the `MOAIViewport` instances. Note that
    you may have an arbitrary number of viewports, each using different coordinate
    scales. For example, we could use another viewport with the same scale as the
    window for some specific effect or for a user interface (GUI) that doesn't need
    scaling.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Now we set the size for the viewport. This is usually the same size as the screen
    resolution (additionally, on devices this must match the screen resolution if
    you want it to take up the entire screen), but you could make a smaller viewport
    in order to display a small map or something like that, but keep in mind that
    the whole idea of the size is that it will be the target resolution.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: And this is what completes the magic. We set a scale, using a different resolution.
    If you think about this, what we're doing is simply telling the viewport that
    whatever we put on our layers in the future, needs to be stretched/shrunk from
    the world coordinates (`WORLD_RESOLUTION_X` and `WORLD_RESOLUTION_Y`) to another
    set of coordinates (`SCREEN_RESOLUTION_X` and `SCREEN_RESOLUTION_Y`).
  prefs: []
  type: TYPE_NORMAL
- en: That's it, we now have a resolution-independent screen. It's just a matter of
    changing `SCREEN_RESOLUTION_X` and/or `SCREEN_RESOLUTION_Y` and the game will
    adjust accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So, we are now committed to making a *Concentration* game using Moai SDK. We
    reviewed the rules and goals of the *Concentration* game. We also wrote our first
    lines with Moai SDK to open a window and discussed how to implement resolution-independent
    games using world versus screen coordinate systems.
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter will teach you how to display images on screen, the most basic
    skill for today's game developers.
  prefs: []
  type: TYPE_NORMAL
