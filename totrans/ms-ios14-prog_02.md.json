["```swift\nvar isDarkMode = false\nvar profileLabel: UILabel? {\n    didSet {\n        profileLabel?.textColor = isDarkMode ? .white : .black\n    }\n}\nvar profileBackground: UILabel? {\n    didSet {\n        profileBackground?.textColor = isDarkMode ? .black : .white\n    }\n}\n```", "```swift\nUIUserInterfaceStyle\n```", "```swift\n    class ViewController: UIViewController {\n        @IBOutlet weak var headerImageView: UIImageView!\n        @IBOutlet weak var primaryLabel: UILabel!\n        @IBOutlet weak var secondaryLabel: UILabel!\n        @IBOutlet weak var tertiaryLabel: UILabel!\n\n        @IBOutlet weak var linkButton: UIButton!\n\n        @IBOutlet weak var separatorView: UIView!\n\n        @IBOutlet weak var tableView: UITableView!\n\n        override func viewDidLoad() {\n            super.viewDidLoad()\n        }\n    }\n    ```", "```swift\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        primaryLabel.textColor = UIColor.label\n        secondaryLabel.textColor = UIColor.secondaryLabel\n        tertiaryLabel.textColor = UIColor.tertiaryLabel\n\n        linkButton.titleLabel?.textColor = UIColor.link\n\n        separatorView.backgroundColor = UIColor.separator\n\n        tableView.backgroundColor = UIColor.systemGroupedBackground\n\n    }\n    ```", "```swift\nprimaryLabel.textColor = UIColor(named: \"brandLabel\")\n```", "```swift\nextension UIColor {\n    static var brandLabel: UIColor {\n        return UIColor(named: \"brandLabel\") ?? UIColor.label\n    }\n}\n```", "```swift\nprimaryLabel.textColor = UIColor.brandLabel\n```", "```swift\nextension UIImage {\n    static var header: UIImage {\n        return UIImage(named: \"header\") ?? UIImage()\n    }\n}\n```", "```swift\nheaderImageView.image = UIImage.header\n```", "```swift\n    @Environment(\\.colorScheme) var appearance\n    ```", "```swift\n    Text(appearance == .dark ? \"Dark Appearance\" : \"Light Appearance\")\n    ```", "```swift\nstruct ContentView_Previews: PreviewProvider {\n    static var previews: some View {\n        ContentView()\n            .environment(\\.colorScheme, .dark)\n    }\n}\n```", "```swift\nstruct ContentView_Previews: PreviewProvider {\n    static var previews: some View {\n        Group {\n            ContentView().environment(\\.colorScheme, .light)\n             ContentView().environment(\\.colorScheme, .dark)\n        }\n    }\n}\n```", "```swift\ntraitCollection.userInterfaceStyle == .dark\n```", "```swift\npublic enum UIUserInterfaceStyle : Int {\n    case unspecified\n    case light\n    case dark\n}\n```", "```swift\noverride func traitCollectionDidChange(_ previousTraitCollection: UITraitCollection?) {\n    super.traitCollectionDidChange(previousTraitCollection)\n    // Logic here    \n}\n```", "```swift\noverride func traitCollectionDidChange(_ previousTraitCollection: UITraitCollection?) {\n    super.traitCollectionDidChange(previousTraitCollection)\n    let interfaceAppearanceChanged = previousTraitCollection?.hasDifferentColorAppearance(comparedTo: traitCollection)\n}\n```", "```swift\nlet view = UIView()\nview.overrideUserInterfaceStyle = .dark // .light\n```", "```swift\noverrideUserInterfaceStyle = .dark\n```", "```swift\nfor window in UIApplication.shared.windows {\n    window.overrideUserInterfaceStyle = .dark\n}\n```"]