["```java\n    display.setStatusBar( display.HiddenStatusBar )\n    local gameGroup = display.newGroup()\n\n    ```", "```java\n    local sprite = require \"sprite\"\n    local physics = require \"physics\"\n    local ui = require \"ui\"\n\n    ```", "```java\n    local background\n    local ground\n    local charObject\n    local friedEgg\n    local scoreText\n    local eggText\n    local livesText\n    local shade\n    local gameOverScreen\n\n    ```", "```java\n    local gameIsActive = false\n    local startDrop\n    local gameLives = 3\n    local gameScore = 0\n    local eggCount = 0\n    local mRand = math.random\n\n    ```", "```java\n    local eggDensity = 1.0\n    local eggShape = { -12,-13, 12,-13, 12,13, -12,13 }\n    local panShape = { 15,-13, 65,-13, 65,13, 15,13 }\n\n    ```", "```java\n    system.setAccelerometerInterval( 100 )\n    local eggCaughtSound = audio.loadSound( \"friedEgg.wav\" )\n    local gameOverSound = audio.loadSound( \"gameover.wav\" )\n\n    ```", "```java\n    local moveChar = function(event)\n\n    ```", "```java\n    charObject.x = display.contentCenterX -\n    (display.contentCenterX * (event.yGravity * 3))\n\n    ```", "```java\n    if((charObject.x - charObject.width * 0.5) < 0) then\n    charObject.x = charObject.width * 0.5\n    elseif((charObject.x + charObject.width * 0.5) >\n    display.contentWidth) then\n    charObject.x = display.contentWidth - charObject.width *\n    0.5\n    end\n    end\n\n    ```", "```java\ngameScore = 100\nscoreText = display.newText( \"Score: \" .. gameScore, 0, 0, \"Arial\",\n45 )\nscoreText:setTextColor( 255, 255, 255, 255 )\nscoreText.x = 160; scoreText.y = 100\n\n```", "```java\n    local setScore = function( scoreNum )\n\n    ```", "```java\n    local newScore = scoreNum\n    gameScore = newScore\n    if gameScore < 0 then gameScore = 0; end\n\n    ```", "```java\n    scoreText.text = \"Score: \" .. gameScore\n    scoreText.xScale = 0.5; scoreText.yScale = 0.5\n    scoreText.x = (scoreText.contentWidth * 0.5) + 15\n    scoreText.y = 15\n    end\n\n    ```", "```java\n    local drawBackground = function()\n\n    ```", "```java\n    background = display.newImageRect( \"bg.png\", 480, 320 )\n    background.x = 240; background.y = 160\n    gameGroup:insert( background )\n\n    ```", "```java\n    ground = display.newImageRect( \"grass.png\", 480, 75 )\n    ground.x = 240; ground.y = 325\n    ground.myName = \"ground\"\n    local groundShape = { -285,-18, 285,-18, 285,18, -285,18 }\n    physics.addBody( ground, \"static\", { density=1.0, bounce=0,\n    friction=0.5, shape=groundShape } )\n    gameGroup:insert( ground )\n    end\n\n    ```", "```java\n    local hud = function()\n\n    ```", "```java\n    eggText = display.newText( \"Caught: \" .. eggCount, 0, 0,\n    \"Arial\", 45 )\n    eggText:setTextColor( 255, 255, 255, 255 )\n    eggText.xScale = 0.5; eggText.yScale = 0.5\n    eggText.x = (480 - (eggText.contentWidth * 0.5)) - 15\n    eggText.y = 305\n    gameGroup:insert( eggText )\n\n    ```", "```java\n    livesText = display.newText( \"Lives: \" .. gameLives, 0, 0,\n    \"Arial\", 45 )\n    livesText:setTextColor( 255, 255, 255, 255 ) --> white\n    livesText.xScale = 0.5; livesText.yScale = 0.5 --> for\n    clear retina display text\n    livesText.x = (480 - (livesText.contentWidth * 0.5)) - 15\n    livesText.y = 15\n    gameGroup:insert( livesText )\n\n    ```", "```java\n    scoreText = display.newText( \"Score: \" .. gameScore, 0, 0,\n    \"Arial\", 45 )\n    scoreText:setTextColor( 255, 255, 255, 255 ) --> white\n    scoreText.xScale = 0.5; scoreText.yScale = 0.5 --> for\n    clear retina display text\n    scoreText.x = (scoreText.contentWidth * 0.5) + 15\n    scoreText.y = 15\n    gameGroup:insert( scoreText )\n    end\n\n    ```", "```java\n    local livesCount = function()\n\n    ```", "```java\n    gameLives = gameLives - 1\n    livesText.text = \"Lives: \" .. gameLives\n    livesText.xScale = 0.5; livesText.yScale = 0.5 --> for\n    clear retina display text\n    livesText.x = (480 - (livesText.contentWidth * 0.5)) - 15\n    livesText.y = 15\n    print(gameLives .. \" eggs left\")\n    if gameLives < 1 then\n    callGameOver()\n    end\n    end\n\n    ```", "```java\nphysics.addBody( displayObject, [bodyType,] bodyElement1,\n[bodyElement2, ...] )\n\n```", "```java\nlocal hexagon = display.newImage(\"hexagon.png\")\nhexagon.x = hexagon.contentWidth\nhexagon.y = hexagon.contentHeight\nhexagonShape = { -20,-40, 20, -40, 40, 0, 20,40, -20,40, -40,0 }\nphysics.addBody( hexagon, \"static\", { density = 1.0, friction = 0.8,\nbounce = 0.3, shape=hexagonShape } )\n\n```", "```java\n    local createChar = function()\n\n    ```", "```java\n    local characterSheet = sprite.newSpriteSheet\n    ( \"charSprite.png\",128, 128 )\n    local spriteSet = sprite.newSpriteSet(characterSheet, 1, 4)\n    sprite.add( spriteSet, \"move\", 1, 4, 400, 0 )\n    charObject = sprite.newSprite( spriteSet )\n    charObject:prepare(\"move\")\n    charObject:play()\n\n    ```", "```java\n    charObject.x = 240; charObject.y = 250\n    physics.addBody( charObject, \"static\", { density=1.0,\n    bounce=0.4, friction=0.15, shape=panShape } )\n    charObject.rotation = 0\n    charObject.isHit = false\n    charObject.myName = \"character\"\n\n    ```", "```java\n    friedEgg = display.newImageRect( \"friedEgg.png\", 40, 23 )\n    friedEgg.alpha = 1.0\n    friedEgg.isVisible = false\n    gameGroup:insert( charObject )\n    gameGroup:insert( friedEgg )\n    end\n\n    ```", "```java\nnewBody.isAwake = true\nlocal object = newBody.isAwake\n\n```", "```java\nnewBody.isBodyActive = true\nlocal object = newBody.isBodyActive\n\n```", "```java\nnewBody.isBullet = true\nlocal object = newBody.isBullet\n\n```", "```java\nnewBody.isSensor = true\n\n```", "```java\nnewBody.isSleepingAllowed = true\nlocal object = newBody.isSleepingAllowed\n\n```", "```java\nnewBody.isFixedRotation = true\nlocal object = newBody.isFixedRotation\n\n```", "```java\nnewBody.angularVelocity = 50\nlocal myVelocity = newBody.angularVelocity\n\n```", "```java\nnewBody.linearDamping = 5\nlocal object = newBody.linearDamping\n\n```", "```java\nnewBody.angularDamping = 5\nlocal object = newBody.angularDamping\n\n```", "```java\nnewBody.bodyType = \"kinematic\"\nlocal currentBodyType = newBody.bodyType\n\n```", "```java\n    local onEggCollision = function( self, event )\n\n    ```", "```java\n    if event.force > 1 and not self.isHit then\n    audio.play( eggCaughtSound )\n\n    ```", "```java\n    self.isHit = true\n    print( \"Egg destroyed!\")\n    self.isVisible = false\n    friedEgg.x = self.x; friedEgg.y = self.y\n    friedEgg.alpha = 0\n    friedEgg.isVisible = true\n\n    ```", "```java\n    local fadeEgg = function()\n    transition.to( friedEgg, { time=500, alpha=0 } )\n    end\n    transition.to( friedEgg, { time=50, alpha=1.0,\n    onComplete=fadeEgg } )\n    self.parent:remove( self )\n    self = nil\n\n    ```", "```java\n    if event.other.myName == \"character\" then\n    eggCount = eggCount + 1\n    eggText.text = \"Caught: \" .. eggCount\n    eggText.xScale = 0.5; eggText.yScale = 0.5 --> for\n    clear retina display text\n    eggText.x = (480 - (eggText.contentWidth * 0.5)) - 15\n    eggText.y = 305\n    print(\"egg caught\")\n    local newScore = gameScore + 500\n    setScore( newScore )\n    elseif event.other.myName == \"ground\" then\n    livesCount()\n    print(\"ground hit\")\n    end\n    end\n    end\n\n    ```", "```java\n    local eggDrop = function()\n\n    ```", "```java\n    local egg = display.newImageRect( \"egg.png\", 26, 30 )\n    egg.x = 240 + mRand( 120 ); egg.y = -100\n    egg.isHit = false\n    physics.addBody( egg, \"dynamic\",{ density=eggDensity,\n    bounce=0,friction=0.5, shape=eggShape } )\n    egg.isFixedRotation = true\n    gameGroup:insert( egg )\n\n    ```", "```java\n    egg.postCollision = onEggCollision\n    egg:addEventListener( \"postCollision\", egg )\n    end\n\n    ```", "```java\n    local eggTimer = function()\n    startDrop = timer.performWithDelay( 1000, eggDrop, 0 )\n    end\n\n    ```", "```java\n    if gameLives < 1 then\n    timer.cancel( startDrop )\n    print(\"timer cancelled\")\n    end\n\n    ```", "```java\n    local callGameOver = function()\n\n    ```", "```java\n    audio.play( gameOverSound )\n    gameIsActive = false\n    physics.pause()\n\n    ```", "```java\n    shade = display.newRect( 0, 0, 570, 320 )\n    shade:setFillColor( 0, 0, 0, 255 )\n    shade.x = 240; shade.y = 160\n    shade.alpha = 0\n\n    ```", "```java\n    gameOverScreen = display.newImageRect( \"gameOver.png\", 400,\n    300 )\n    local newScore = gameScore\n    setScore( newScore )\n    gameOverScreen.x = 240; gameOverScreen.y = 160\n    gameOverScreen.alpha = 0\n    gameGroup:insert( shade )\n    gameGroup:insert( gameOverScreen )\n    transition.to( shade, { time=200, alpha=0.65 } )\n    transition.to( gameOverScreen, { time=500, alpha=1 } )\n\n    ```", "```java\n    scoreText.isVisible = false\n    scoreText.text = \"Score: \" .. gameScore\n    scoreText.xScale = 0.5; scoreText.yScale = 0.5 --> for\n    clear retina display text\n    scoreText.x = 240\n    scoreText.y = 160\n    scoreText:toFront()\n    timer.performWithDelay( 0,\n    function() scoreText.isVisible = true; end, 1 )\n    end\n\n    ```", "```java\n    local gameActivate = function()\n    gameIsActive = true\n    end\n\n    ```", "```java\n    local gameStart = function()\n\n    ```", "```java\n    physics.start( true )\n    physics.setGravity( 0, 9.8 )\n\n    ```", "```java\n    drawBackground()\n    createChar()\n    eggTimer()\n    hud()\n    gameActivate()\n    Runtime:addEventListener(\"accelerometer\", moveChar)\n    end\n\n    ```", "```java\n    gameStart()\n    return gameGroup\n\n    ```"]