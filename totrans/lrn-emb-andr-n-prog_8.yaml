- en: Chapter 8\. Beyond the Smartphone
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章\. 超越智能手机
- en: 'In Chapter 7, *Tailoring Your Personal Android System*, you learned how to
    add the final personal touch to your custom Android system. You customized both
    the application layer and the system layer: new menus, new apps, and new daemons.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在第7章，*定制您的个人Android系统*中，你学习了如何给你的定制Android系统添加最后的个人风格。你定制了应用层和系统层：新的菜单、新的应用和新的守护进程。
- en: 'In this chapter, we are going even further: we are going *outside* the smartphone,
    connecting to external microcontrollers, sensors, and different devices. We will
    see how our whole world could be connected and interactive with Android.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将更进一步：我们将*超出*智能手机，连接到外部微控制器、传感器和不同的设备。我们将看到整个世界如何与Android连接和互动。
- en: 'You will learn about Android ADK and Arduino, and how Google is filling our
    lives with Android-oriented devices: from Chromecast devices to Android Auto,
    from smart watches to Internet of Things.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你将了解Android ADK和Arduino，以及谷歌如何用Android导向的设备丰富我们的生活：从Chromecast设备到Android Auto，从智能手表到物联网。
- en: Meeting Arduino
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 认识Arduino
- en: 'More than ten years ago, in a bar in a small Italian town, a group of students
    and researchers created a low-cost microcontroller that would revolutionize the
    world of DIY (Do It Yourself)—**Arduino**, shown in the next image:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 十多年前，在一个小意大利酒吧里，一群学生和研究人员创造了一个低成本微控制器，它将彻底改变DIY（Do It Yourself）的世界——**Arduino**，如下一张图片所示：
- en: '![](img/epub_36702041_131.jpeg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/epub_36702041_131.jpeg)'
- en: The latest version of Ardunio (or Genuino, for the non-USA market) is called
    Arduino **UNO**. **Uno** means *one* in Italian and this codename celebrates the
    first stable version of the IDE (Integrated Development Environment) that comes
    with the board itself. This board is based on ATmega328P by Atmel and provides
    a set of controllable input/output pins. It can work as a standalone microcontroller,
    once it has been properly programmed, and can be used via its USB connection.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Arduino（或Genuino，非美国市场）的最新版本被称为Arduino **UNO**。**Uno**在意大利语中意味着*一个*，这个代号是为了庆祝板子自带的IDE（集成开发环境）的第一个稳定版本。这个板子基于Atmel的ATmega328P，提供了一套可控制的输入/输出引脚。一旦被正确编程，它可以作为一个独立的微控制器工作，并且可以通过其USB连接使用。
- en: 'The greatest feature of Arduino is its open nature: everything, from the hardware
    schematics to the development IDE, has been open source since day one. This openness,
    and the extensible design of the board, allowed manufactures and advanced users
    to create an infinite number of so-called **shields**:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Arduino最伟大的特点是它的开放性：从硬件原理图到开发IDE，一切自第一天起就都是开源的。这种开放性和板子的可扩展设计允许制造商和高级用户创建无限数量的所谓**扩展板**：
- en: '![](img/epub_36702041_132.jpeg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/epub_36702041_132.jpeg)'
- en: 'An Arduino shield is a separate component that can be attached to Arduino to
    enhance it and to add new features. The previous image shows how Arduino shields
    can be stacked to create a totally new and customized device. Common examples
    of Arduino shields are:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Arduino扩展板是一个可以附加到Arduino上以增强其功能和添加新功能的独立组件。上一张图片展示了如何堆叠Arduino扩展板以创建一个完全新定制的设备。Arduino扩展板的常见例子包括：
- en: The Ethernet Shield, which gives Arduino the ability to communicate with the
    outside world via an Internet connection.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ethernet Shield，它使Arduino能够通过互联网连接与外界通信。
- en: The Proto Shield, which can be used to make a *permanent* version of a prototype
    that you created with a breadboard.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Proto Shield，它可以用来制作你用面包板创建的原型的*永久*版本。
- en: The Relay Shield, which enables Arduino to pilot high-voltage circuits. This
    is crucial for home automation when you need to turn lights or appliances on and
    off.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Relay Shield，它使Arduino能够控制高压电路。这在家庭自动化中至关重要，当你需要开关灯或电器时。
- en: The Display Shield, which gives Arduino a visual way to communicate with the
    outside world.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Display Shield，它为Arduino提供了一种与外界进行视觉通信的方式。
- en: Since Arduino came out, it has gained more and more fans and passionate developers,
    thanks to its easy interface and the extremely flat learning curve. Today, software
    developers without hardware or electronics knowledge can create projects that
    live outside their computers and can interact with the external world. To take
    advantage of these possibilities, in 2012 Google created the Android ADK.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 自从Arduino问世以来，它获得了越来越多的粉丝和热情的开发者，这得益于其易于使用的界面和极低的学习曲线。今天，没有硬件或电子知识的软件开发者也可以创建超出他们电脑的项目，并能与外部世界互动。为了利用这些可能性，2012年谷歌创建了Android
    ADK。
- en: Android ADK
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Android ADK
- en: Android Accessory Development Kit is the reference implementation for the Android
    Open Accessory device. At Google I/O, in 2012 Google provided Android Accessory
    Development Kits to developers and provided manufacturers with clear specifications
    for creating their own kit, external accessory devices for Android. One of these
    certified devices is the Arduino itself, but thanks to the open nature of the
    whole project, you could build a compatible device yourself.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Android Accessory Development Kit是Android Open Accessory设备的参考实现。在2012年的Google
    I/O大会上，谷歌向开发者提供了Android Accessory Development Kits，并为制造商提供了创建他们自己的套件、为Android创建外部配件设备的明确规范。这些认证设备之一就是Arduino本身，但多亏了整个项目的开放性，你自己也可以构建一个兼容设备。
- en: 'Unfortunately, Android ADK never really *boomed* among developers. Of course,
    you can find lots of interesting projects on the web about connecting an Android
    smartphone to an Arduino, like the one by TCRobotics at [http://blog.bricogeek.com/noticias/arduino/el-adk-de-google-en-un-arduino-uno](http://blog.bricogeek.com/noticias/arduino/el-adk-de-google-en-un-arduino-uno).
    This is surely one of our favorites; it shows the great potential, but also the
    big sacrifice, of keeping an Android smartphone **wired** to a cable the whole
    time:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，Android ADK在开发者中从未真正*火爆*。当然，你可以在网上找到许多关于将Android智能手机连接到Arduino的有趣项目，比如TCRobotics在[http://blog.bricogeek.com/noticias/arduino/el-adk-de-google-en-un-arduino-uno](http://blog.bricogeek.com/noticias/arduino/el-adk-de-google-en-un-arduino-uno)上的项目。这肯定是我们最喜欢的之一；它展示了巨大的潜力，但也揭示了保持Android智能手机**有线**连接到整个过程的巨大牺牲：
- en: '![](img/epub_36702041_133.jpeg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/epub_36702041_133.jpeg)'
- en: Luckily for us, there are much cooler ways to use Android ADK to play around
    with sensors and electronics.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，对于Android ADK的使用，有更多酷炫的方式来与传感器和电子设备互动。
- en: Using UDOO as an all-in-one ADK device
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用UDOO作为一体化的ADK设备
- en: As you already know, UDOO can run Android. What you probably don't know is that
    it comes with an Arduino on it. Yes, both Android and Arduino are on the same
    board! When you think that you can connect a touchscreen, or even a mouse and
    keyboard to UDOO, you soon start fantasizing about all those geeky projects of
    yours becoming reality.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所知，UDOO可以运行Android。你可能不知道的是，它上面还内置了Arduino。是的，Android和Arduino都在同一块板上！当你想到你可以将触摸屏，甚至鼠标和键盘连接到UDOO时，你很快就会开始幻想你那些极客项目的实现。
- en: Getting ready
  id: totrans-23
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To start playing with Arduino, you just need to set up UDOO and connect the
    Android part to the SAM3X (Arduino-compatible) part. The following images show
    an UDOO, as seen from above. On the left, jumper 18 is highlighted. This jumper
    must be unplugged to enable the SAM3X. On the right, the USB port you are going
    to connect to is highlighted as well:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用Arduino，你只需要设置UDOO并将Android部分连接到SAM3X（Arduino兼容）部分。以下图片展示了从上方看到的UDOO，左侧高亮显示的是跳线18。这个跳线必须拔掉才能启用SAM3X。右侧也高亮显示了你要连接的USB端口：
- en: '![](img/epub_36702041_134.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/epub_36702041_134.jpeg)'
- en: Once the board is ready, you can move to the software part.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦板子准备就绪，你就可以进入软件部分。
- en: Flashing the Arduino board
  id: totrans-27
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 刷写Arduino板
- en: 'For this quick example, we are going to command an LED connected to the UDOO.
    The LED will be connected to input 13 of the UDOO board. Every LED has two pins;
    the longer one is the anode and has to be connected to input 13, and the shorter
    one is the cathode and has to be connected to ground, the unnumbered input on
    the left of input 13:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个快速示例中，我们将控制连接到UDOO的LED。LED将连接到UDOO板的输入13。每个LED都有两个引脚；较长的那个是阳极，必须连接到输入13，较短的则是阴极，必须连接到地，即输入13左侧的无编号输入：
- en: '![](img/epub_36702041_135.jpeg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/epub_36702041_135.jpeg)'
- en: The electronics setup is in place. Let's download the Arduino IDE from [http://www.udoo.org/other-resources/](http://www.udoo.org/other-resources/).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 电子设备设置已经就绪。让我们从[http://www.udoo.org/other-resources/](http://www.udoo.org/other-resources/)下载Arduino
    IDE。
- en: 'The first time you run the Arduino IDE, you will be presented with an empty
    project file:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次运行Arduino IDE时，你会看到一个空的项目文件：
- en: '![](img/epub_36702041_136.jpeg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/epub_36702041_136.jpeg)'
- en: 'This empty Arduino sketch gives you a skeleton structure for our Arduino program:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这个空的Arduino草图为你提供了我们的Arduino程序的骨架结构：
- en: A `setup` method that runs once and gets everything in place for the second
    method
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个只运行一次并设置第二方法所需一切的`setup`方法
- en: A `loop` method that keeps on running over and over until the board is turned
    off
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个不断重复运行的`loop`方法，直到板子被关闭
- en: 'To properly connect and program our Arduino, we need to select the board type
    and port. From the Arduino IDE Tools menu, select **Board** *|* **Arduino Due
    (Programming Port)**:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 为了正确连接和编程我们的Arduino，我们需要选择板型和端口。从Arduino IDE工具菜单中选择**板** *|* **Arduino Due (编程端口)**：
- en: '![](img/epub_36702041_137.jpeg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/epub_36702041_137.jpeg)'
- en: 'The previous image shows the amount of different Arduino boards that are available
    on the market nowadays. UDOO is compatible with the Arduino Due, so we are choosing
    that board model. Once we have selected the proper board, we need to select the
    **Port** to use to connect to the UDOO:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张图片显示了目前市场上可用的不同Arduino板数量。UDOO与Arduino Due兼容，因此我们选择了该板型。一旦我们选定了合适的板型，我们需要选择用于连接到UDOO的**端口**：
- en: '![](img/epub_36702041_138.jpeg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/epub_36702041_138.jpeg)'
- en: As you can see in the image, the port name could be slightly different on different
    computers. The previous image shows a common configuration for an Apple MacBook
    Pro.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如你在图中所见，端口名在不同的电脑上可能会有所不同。上一张图片显示了苹果MacBook Pro的常见配置。
- en: 'Once the IDE has been properly configured, we can start with the source code,
    as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦IDE配置正确，我们就可以开始编写源代码，如下所示：
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We can quickly analyze the source code and can find out that:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以快速分析源代码，并找出：
- en: We are specifying PIN number 13
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们指定了引脚号13
- en: We are specifying the model name, manufacturer name, and version number that
    will identify our board once we connect it to Android
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们指定了模型名称、制造商名称和版本号，这些信息将识别我们连接到Android的板型。
- en: We are configuring the serial connection
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们正在配置串行连接
- en: 'We are listening for incoming data on the serial connection and reacting accordingly:'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们正在监听串行连接上的传入数据，并相应地做出反应：
- en: turn on the LED if we received 1
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们收到1，则打开LED
- en: turn off the LED if we received 0
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们收到0，则关闭LED
- en: Once the source code is in place, you can flash it to the Arduino using the
    IDE **File** | **Upload** menu.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦源代码就绪，你可以使用IDE的**文件** | **上传**菜单将其烧录到Arduino上。
- en: Creating the Android app
  id: totrans-51
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建Android应用
- en: 'The Android app will be super simple: a toggle button to turn the LED ON and
    OFF. You can create the initial app using the Android Studio wizard, creating
    an empty `Activity` to get things started. Once the skeleton is in place, you
    need to add a new dependency to your `build.gradle`:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Android应用将非常简单：一个切换按钮来打开和关闭LED。你可以使用Android Studio向导创建初始应用，创建一个空的`Activity`以开始。一旦有了框架，你需要在`build.gradle`中添加一个新的依赖项：
- en: '[PRE1]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Emanuele Palazzetti, author of *Getting started with UDOO* by *Packt Publishing*,
    released a handy Android library, ADK Toolkit ([https://github.com/palazzem/adk-toolkit](https://github.com/palazzem/adk-toolkit)),
    for easier communication between your Android apps and your Android ADK device,
    and we are going to take full advantage of this library.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Emanuele Palazzetti，Packt Publishing出版的《入门UDOO》一书的作者，发布了一个实用的Android库，ADK Toolkit
    ([https://github.com/palazzem/adk-toolkit](https://github.com/palazzem/adk-toolkit))，用于简化你的Android应用和Android
    ADK设备之间的通信，我们将充分利用这个库。
- en: 'You need to add some specific configurations in your Android Manifest. In your
    `<activity>` tag, add the following lines:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要在你的AndroidManifest中添加一些特定的配置。在你的`<activity>`标签中，添加以下行：
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'As you will have noted, the `<meta-data>` tag refers to an XML resource, named
    `accessory_filter`. Right now, it''s missing. Let''s create a `accessory_filter.xml`
    in the `src/res/xml/` folder:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所注意到的，`<meta-data>`标签引用了一个名为`accessory_filter`的XML资源。目前它缺失。让我们在`src/res/xml/`文件夹中创建一个`accessory_filter.xml`：
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This is the exact information we added to the Arduino sketch and will allow
    Android to properly identify our board.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们在Arduino草图中所添加的确切信息，将允许Android正确识别我们的板型。
- en: 'Setup is over. Let''s move on to the UI of our app. Having followed the wizard,
    you now have a single `Activity` with its own layout; chances are that its name
    is `main.xml` and it''s located in `src/res/layout`. Once you have located the
    layout, we can add our button:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 设置完成。让我们继续到我们应用的UI。遵循向导后，你现在有一个带有自己布局的单个`Activity`；很可能是它的名字是`main.xml`，位于`src/res/layout`。一旦你找到了布局，我们可以添加我们的按钮：
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'It''s pretty straightforward: an ID, a couple of labels, and an `onClick` method
    to trigger when the button is tapped.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这非常直接：一个ID，几个标签，以及一个当按钮被点击时触发的`onClick`方法。
- en: 'The method referred by the `onClick` will be placed into our `Activity`:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由`onClick`引用的方法将被放置在我们的`Activity`中：
- en: '[PRE5]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: When the button is clicked, we send `1` if it's ON, or `0` if it's OFF. Fair
    enough, but where do we send this data? What's that `adkManager`?
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 当按钮被点击时，如果是开启状态，我们发送`1`；如果是关闭状态，我们发送`0`。这很公平，但我们把数据发送到哪里？那个`adkManager`是什么？
- en: 'The `adkManager` module comes with the ADK Toolkit. We create it and set it
    up in our `Activity`. This is the final result:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`adkManager`模块随ADK Toolkit提供。我们在`Activity`中创建它并设置它。这是最终的结果：'
- en: '[PRE6]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Finally, our app is completed. Just upload it to our UDOO and you will have
    a huge button to turn your LED ON and OFF:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们的应用完成了。只需将其上传到我们的UDOO，您将有一个巨大的按钮来打开和关闭LED：
- en: '![](img/epub_36702041_139.jpeg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/epub_36702041_139.jpeg)'
- en: Exploring the possibilities of the Internet of Things
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索物联网的可能性
- en: Knowing that your favorite OS can run on thousands of devices, in hundreds of
    different customizations, and communicate with any kind of device, both wired
    or wireless, opens up incredible possibilities.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 知道您最喜欢的操作系统可以在数千种设备上运行，在数百种不同的定制中，并且可以与任何类型的设备通信，无论是有线还是无线，这开辟了令人难以置信的可能性。
- en: Android Auto
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Android Auto
- en: 'In 2014, Google presented Android Auto, an innovative project that aims to
    command an Android system using the controls already available in our cars:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 2014年，谷歌推出了Android Auto，这是一个旨在使用我们汽车中已有的控制命令Android系统的创新项目：
- en: '![](img/epub_36702041_140.jpeg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/epub_36702041_140.jpeg)'
- en: In 2015, the first version of Android Auto was released and the developer community
    started to really look into it. In 2016, dozens of car manufacturers are going
    to release models with integrated Android Auto support.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 2015年，Android Auto的第一个版本发布，开发者社区开始真正关注它。2016年，数十家汽车制造商将推出支持集成Android Auto的车型。
- en: The idea behind Android Auto is to support driving safety and provide users
    with an alternative way to access their devices when they are driving. To achieve
    this goal, Google engineers worked with car manufacturers to create a bridge between
    our Android devices and car dashboards.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Android Auto背后的理念是支持驾驶安全，并在驾驶时为用户提供一种访问其设备的替代方式。为了实现这一目标，谷歌工程师与汽车制造商合作，在Android设备和汽车仪表盘之间建立了一座桥梁。
- en: Car dashboards and controls represent the top of the user experience and interaction
    we can possibly have while driving. Everything is placed specifically to be accessible,
    everything is designed specifically to be easy to use, and everything is created
    to be effective and powerful, but not distracting.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 汽车仪表盘和控制代表了我们驾驶时可能拥有的用户体验和交互的顶端。一切都被放置得恰到好处，以便于访问，一切都被设计得易于使用，一切都被创造得既有效又强大，但又不分散注意力。
- en: 'These constraints forced Google to rethink their popular apps for this new
    challenge. When you connect your Android smartphone to an Android Auto-ready car,
    you can enjoy a different OS user interface, tailored for this particular scenario.
    The next image shows the Google Maps interface for Android Auto:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这些限制迫使谷歌重新思考他们为这个新挑战而流行的应用。当您将Android智能手机连接到Android Auto兼容的汽车时，您可以享受一个针对特定场景定制的不同操作系统用户界面。下一张图片显示了Android
    Auto的Google Maps界面：
- en: '![](img/epub_36702041_141.jpeg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/epub_36702041_141.jpeg)'
- en: 'The next image shows the Google Play Music user interface, once we connect
    our device to an Android Auto-compatible car:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 下一张图片显示了连接我们的设备到Android Auto兼容汽车后，Google Play Music的用户界面：
- en: '![](img/epub_36702041_142.jpeg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/epub_36702041_142.jpeg)'
- en: Popular apps such as Google Maps or Google Play Music evolve into a more effective
    design and take full advantage of the dashboard's bigger screen and wheel controls.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如Google Maps或Google Play Music等流行应用演变成更有效的设计，充分利用了仪表盘更大的屏幕和方向盘控制。
- en: 'From a developer perspective, Android Auto comes with an obvious question:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 从开发者的角度来看，Android Auto带来一个明显的问题：
- en: '*Do I need a car to develop and test my apps?*'
  id: totrans-84
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*我需要一辆车来开发和测试我的应用吗？*'
- en: 'Fortunately, Google provides testing tools for those who want to approach Android
    Auto: the **Desktop Head Unit** (**DHU**). Available with the Android SDK, the
    DHU runs on your computer and allows your computer to act as a car dashboard.
    The following images show how the smartphone switches to Android Auto mode and
    the UI switches to DHU:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，谷歌为那些想要接触Android Auto的人提供了测试工具：**桌面车载单元**（**DHU**）。它随Android SDK一起提供，在您的计算机上运行，并允许您的计算机充当汽车仪表盘。以下图片显示了智能手机如何切换到Android
    Auto模式，以及用户界面如何切换到DHU：
- en: '![](img/epub_36702041_143.jpeg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/epub_36702041_143.jpeg)'
- en: 'The previous image is an example of how the smartphone display will look once
    we connect it to the car—it turns black and shows the Android Auto logo. The next
    image shows how the car dashboard becomes active when we connect the smartphone.
    The car dashboard turns into the Android Auto user interface and, in this example,
    shows a few Google Now cards, with traffic and weather information:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张图片展示了将智能手机连接到汽车后，智能手机显示屏的外观——它变黑并显示了Android Auto标志。下一张图片展示了将智能手机连接后，汽车仪表盘如何变得活跃。汽车仪表盘变成了Android
    Auto用户界面，在这个例子中，显示了几个Google Now卡片，包括交通和天气信息：
- en: '![](img/epub_36702041_144.jpeg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/epub_36702041_144.jpeg)'
- en: Android Wear
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Android Wear
- en: While we wait for Android Auto-enabled cars to invade our lives, we can direct
    our attention to Android Wear.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们等待Android Auto功能的车款进入我们的生活时，我们可以将注意力转向Android Wear。
- en: In 2014, Google announced a particular version of Android, specifically designed
    and developed for smart watches. Started as a customization of Android 5.0 Lollipop,
    Android Wear is currently based on Android 6.0.1 Marshmallow.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 2014年，谷歌宣布了一种特定的Android版本，专门为智能手表设计和开发。Android Wear最初是基于Android 5.0 Lollipop的定制版本，目前基于Android
    6.0.1 Marshmallow。
- en: 'Android Wear aims to enhance the way users can interact with the world every
    day. An Android Wear smart watch connects to an Android smartphone and provides
    quicker access to notifications, messages, and every possible type of content
    that can be enjoyed in a better way without interacting with the smartphone itself:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Android Wear旨在增强用户每天与世界互动的方式。一款Android Wear智能手表连接到Android智能手机，并提供更快地访问通知、消息以及所有可能的、在不与智能手机本身交互的情况下以更好的方式享受的内容：
- en: '![](img/epub_36702041_145.jpeg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/epub_36702041_145.jpeg)'
- en: Smart watches like the one in the previous picture provide integrations with
    dozens of services, such as Google Fit, Endomondo, and IFTTT. They have Bluetooth
    and Wi-Fi connectivity, GPS, and accelerometers. This huge range of possibilities
    pushed the Android community to experiment and create solutions for dozens of
    scenarios.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 像上一张图片中的那样的智能手表提供了与数十个服务的集成，例如Google Fit、Endomondo和IFTTT。它们具有蓝牙和Wi-Fi连接性、GPS和加速度计。这一巨大的可能性推动Android社区进行实验，并为数十种场景创造解决方案。
- en: With the support of Android SDK and the Android community, in the last two years
    we have seen an increasing number of apps tailored for smart watches—we can turn
    on our Philips Hue lights with our watch, we can turn off our Google Nest with
    our watch, and we can know the state of our plants thanks to Parrot Flower Power.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android SDK和Android社区的支持下，在过去两年里，我们看到为智能手表量身定制的应用程序数量不断增加——我们可以用我们的手表打开我们的飞利浦Hue灯，我们可以用我们的手表关闭我们的Google
    Nest，我们可以通过Parrot Flower Power了解我们植物的状态。
- en: Continuing on this path will take us straight to the next section.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 沿着这条道路走下去，将直接带我们进入下一节。
- en: Domotics
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 智能家居
- en: 'We are living in a world where lots of devices, appliances, and "things" that
    were *disconnected* are now part of a growing ecosystem of interconnected devices.
    We came from a past where computation could happen only in our computers—we are
    living in a present where computation happens in our pockets, with our smartphone.
    We are moving toward a future where computation will happen everywhere: a watch,
    a car, a drone, a house, a garden, and much more.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们生活在一个许多设备、家电和“事物”原本是*未连接*的世界，现在却成为了不断增长的互联设备生态系统中的一部分。我们来自一个过去，计算只能在我们的电脑中发生——我们现在生活在这样一个当下，计算发生在我们的口袋里，通过我们的智能手机。我们正朝着这样一个未来迈进，计算将在任何地方发生：手表、汽车、无人机、房屋、花园等等。
- en: 'We had thermostats that had to be commanded manually and we have intelligent
    thermostats now, such as Google Nest, that learn from our habits and react accordingly
    to create a better and more effective user experience:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们曾经有需要手动控制的恒温器，现在我们有智能恒温器，例如Google Nest，它们会从我们的习惯中学习并相应地做出反应，以创造更好的用户体验：
- en: '![](img/epub_36702041_146.jpeg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/epub_36702041_146.jpeg)'
- en: 'We had lights that needed a wall switch to be turned ON and OFF and now we
    have intelligent lights, such as Philips Hue, that can be controlled via smartphone
    or even smart watch. These lights can turn ON automatically the moment we approach
    our home, taking advantage of concepts such as geo-fencing. We have light that
    can interconnect with other devices, such as smart door bells, and can create
    a visual trigger for hearing-impaired users:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们以前需要用墙上的开关来打开和关闭灯光，现在我们有智能灯泡，比如飞利浦Hue，可以通过智能手机甚至智能手表来控制。这些灯泡在我们接近家的时候可以自动打开，利用地理围栏等概念。我们有可以与其他设备互联的灯光，比如智能门铃，可以为听力受损的用户创建视觉触发器：
- en: '![](img/epub_36702041_147.jpeg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/epub_36702041_147.jpeg)'
- en: We have plant sensors, such as Parrot Flower Power, that can show a notification
    on our smartphone and let us know that our plants need water. Knowing that, even
    if we are thousands of kilometers away from home on some remote beach, enjoying
    our holidays, we can remotely command a Belkin WeMo Switch to turn on our irrigation
    system and water our plants.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有植物传感器，比如Parrot Flower Power，可以在我们的智能手机上显示通知，告诉我们我们的植物需要浇水。知道了这一点，即使我们在数千公里外的某个偏远海滩上，享受着假期，我们也可以远程命令Belkin
    WeMo开关打开我们的灌溉系统并给植物浇水。
- en: We have smart refrigerators, such as the Samsung Family Hub, that are connected
    to the Internet and allow you to actually *see* inside your refrigerator to check
    whether the orange juice for tomorrow's breakfast is missing. They are becoming
    so interconnected that the Korean version will be aware of possible discounts
    for your favorite products and suggests which particular supermarket you have
    to check to save some money.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有智能冰箱，比如三星Family Hub，它们连接到互联网，并允许你实际上*看到*冰箱内部，检查明天早餐的橙汁是否缺少。它们变得越来越互联，韩国版本将知道你最喜欢的产品的可能折扣，并建议你检查哪个特定的超市以节省一些钱。
- en: We have smart mirrors, such as the one by Hannah Mittelstaedt ([https://github.com/HannahMitt/HomeMirror](https://github.com/HannahMitt/HomeMirror)),
    which can be easily created with one of your old Android devices. Give your obsolete
    tablet a new life and a new purpose. It could give you weather forecast, the latest
    news, your plants' status, traffic information, or whatever useful information
    you would like to have while you are brushing your teeth in the morning.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有智能镜子，比如汉娜·米特尔施泰特（Hannah Mittelstaedt）制作的那个（[https://github.com/HannahMitt/HomeMirror](https://github.com/HannahMitt/HomeMirror)），可以用你的一部旧安卓设备轻松创建。给你的旧平板电脑赋予新的生命和新的用途。它可以提供天气预报、最新新闻、植物状态、交通信息，或者在你早上刷牙时你想拥有的任何有用信息。
- en: We have smart coffee machines, such as the **Nespresso Prodigio**, that can
    give us the current status of the water level, coffee capsules remaining, and
    maintenance necessary. The coffee machines can be controlled remotely, from your
    couch, and for the first time in our history, the classic joke is not a joke anymore;
    our Android phone can actually make us a coffee!
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有智能咖啡机，比如**Nespresso Prodigio**，它可以告诉我们水位、剩余咖啡胶囊和必要的维护情况。咖啡机可以远程控制，从沙发上操作，而且在我们历史上，这个经典的笑话不再是笑话了；我们的安卓手机实际上可以为我们煮咖啡！
- en: Can a green droid entertain you?
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个绿色的机器人能让你娱乐吗？
- en: '*Once humanity satisfied every basic need, it started fighting boredom!*'
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*一旦人类满足了所有基本需求，就开始与无聊作斗争了！*'
- en: Okay, probably that's too much drama, but we are entering the entertaining section,
    so let's talk about having some fun!
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，可能有点夸张了，但我们正在进入娱乐部分，所以让我们来谈谈一些有趣的事情吧！
- en: Multimedia
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多媒体
- en: 'Entertainment is a huge market and Google jumped into it pretty quickly with
    its Nexus Player and its Chromecast devices:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 娱乐是一个巨大的市场，谷歌很快就跳了进来，推出了它的Nexus Player和Chromecast设备：
- en: '![](img/epub_36702041_148.jpeg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/epub_36702041_148.jpeg)'
- en: The previous image shows the latest model of Google Chromecast. When Google
    approached this market, they decided to provide users with a device that was as
    easy as possible to set up. Google Chromecast has one HDMI connector and a USB
    power cable; that's it. You connect the HDMI to your TV, connect the power supply,
    and your TV can now connect to your smart phone.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张图片展示了谷歌Chromecast的最新型号。当谷歌进入这个市场时，他们决定为用户提供一个尽可能容易设置的设备。谷歌Chromecast有一个HDMI接口和一个USB电源线；仅此而已。你将HDMI连接到电视上，连接电源，现在你的电视就可以连接到你的智能手机了。
- en: 'Your smartphone becomes your remote and, with a few clicks, you can start streaming
    any multimedia content you want, straight to your TV: your preferred YouTube channels,
    your preferred movies from Google Play Store, your music from Google Play Music
    and hundreds of third-party apps can be sources of content.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 你的智能手机变成了遥控器，只需几点击，你就可以开始流式传输你想要的任何多媒体内容，直接到你的电视：你偏好的YouTube频道，你从Google Play
    Store偏好的电影，你从Google Play Music的音乐，以及数百个第三方应用都可以成为内容来源。
- en: 'If you don''t like TV and you are a music addict, Google has you covered with
    Chromecast Audio:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不喜欢看电视，而你是一个音乐迷，谷歌的 Chromecast Audio 可以满足你的需求：
- en: '![](img/epub_36702041_149.jpeg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/epub_36702041_149.jpeg)'
- en: As for the Chromecast, Chromecast Audio is very easy to connect to your Hi-Fi
    system and it's easy to set up via the Chromecast app you can install on your
    Android smartphone.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 至于Chromecast，Chromecast Audio连接到你的Hi-Fi系统非常简单，并且可以通过你可以在Android智能手机上安装的Chromecast应用轻松设置。
- en: One of the key features is that it has a standalone Wi-Fi connection via your
    home Wi-Fi system, so that it can be instructed to reproduce your music instead
    of requiring your phone to stream the music to the Chromecast Audio. You control
    it using your smartphone, but there is no battery drain, because there is no persistent
    Wi-Fi or Bluetooth connection between your phone and your Chromecast Audio.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个关键特性是它可以通过家庭Wi-Fi系统建立独立的Wi-Fi连接，因此它可以被指令播放你的音乐，而不是要求你的手机将音乐流式传输到Chromecast
    Audio。你可以使用智能手机控制它，但不会耗电，因为你的手机和Chromecast Audio之间没有持久的Wi-Fi或蓝牙连接。
- en: Toys
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 玩具
- en: Nowadays, when we think about Android-powered toys, we can only think about
    drones!
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我们想到由Android供电的玩具时，我们只能想到无人机！
- en: '![](img/epub_36702041_150.jpeg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/epub_36702041_150.jpeg)'
- en: The first and most popular, the Parrot ARDrone in the previous picture, set
    the bar and drove the market for quite a while. Over time, lots of commercial
    alternatives showed up, but, as with the smart mirror, the RC toys community also
    went full Do-It-Yourself.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 最受欢迎的，如图中所示的 Parrot ARDrone，设定了标准并推动了市场的发展。随着时间的推移，出现了许多商业替代品，但就像智能镜子一样，遥控玩具社区也完全转向了DIY。
- en: 'During Droidcon Turin 2015 Hackaton, we demonstrated how you could build an
    RC car, powered by UDOO, controlled via Wi-Fi using an Android device… in 24 hours:
    [https://www.hackster.io/team-dronix-alter-ego/dronixcar-37b81a?f=1#](https://www.hackster.io/team-dronix-alter-ego/dronixcar-37b81a?f=1#):'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在2015年都灵Droidcon黑客马拉松期间，我们展示了如何在24小时内使用Android设备通过Wi-Fi控制由UDOO供电的遥控车……[https://www.hackster.io/team-dronix-alter-ego/dronixcar-37b81a?f=1#](https://www.hackster.io/team-dronix-alter-ego/dronixcar-37b81a?f=1#)：
- en: '![](img/epub_36702041_151.jpeg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/epub_36702041_151.jpeg)'
- en: The RC car was equipped with a video camera, streaming in real time to the smartphone.
    The smartphone acted as video consumer and remote controller.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这款遥控车配备了视频摄像头，实时流媒体传输到智能手机。智能手机充当视频消费者和遥控器。
- en: The whole project was released as open source, in the classic Android/Linux
    tradition.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 整个项目以开源的形式发布，遵循经典的Android/Linux传统。
- en: Summary
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: Our journey is over! It's been quite a rollercoaster, from the history of the
    operating system to how it can equip devices ready to communicate with the external
    world. You learned how to retrieve the source code for your devices, how to navigate
    the source folder tree, and how to create the perfect setup to properly build
    a vanilla Android system.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的旅程结束了！这是一段相当刺激的过山车之旅，从操作系统的历史到它如何让设备准备好与外部世界通信。你学习了如何获取设备的源代码，如何导航源文件夹树，以及如何创建完美的设置来正确构建纯净的Android系统。
- en: You stepped up and started to add customizations to your system, to enrich the
    user experience, to improve the performance, and to add support for your own hardware.
    You went deep into the boot sequence's inner structure to customize the system
    even more. You swam back to the surface to customize the highest part of the architecture
    pyramid, the user interface, to provide your users with the ultimate customized
    Android system.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你开始升级系统，添加自定义功能，以丰富用户体验，提高性能，并添加对您自己的硬件的支持。你深入到引导序列的内部结构，以进一步自定义系统。然后你回到表面，自定义架构金字塔的最高部分，即用户界面，为用户提供终极定制的Android系统。
- en: Finally, you saw how easy it is to step away from the Android device itself
    and find a whole world of devices waiting to communicate and interact, powered
    by the awesome Android platform.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你看到了如何轻松地摆脱Android设备本身，发现一个由Android平台驱动的设备世界，这些设备正等待通信和交互。
- en: Our journey is over, but your own has just started! Master what you learned,
    experiment, try out your ideas, fail, learn more, try again, and finally succeed!
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的旅程已经结束，但你的旅程才刚刚开始！掌握你所学的知识，进行实验，尝试你的想法，失败，学习更多，再次尝试，最终成功！
- en: Android is an awesome tool; you can use it to make your craziest ideas become
    a reality!
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: Android 是一个强大的工具；你可以用它将你疯狂的想法变成现实！
