["```swift\nclass MyTableViewCell: UITableViewCell {    @IBOutlet weak var label: UILabel!\n    @IBOutlet weak var button: UIButton!\n    override func awakeFromNib() {\n        super.awakeFromNib()\n        label.setCompressionResistancePriority (.defaultHigh, for: .horizontal)\n        button.setContentHuggingPriority (.defaultHigh, for: .horizontal)\n    }\n}\n```", "```swift\n    NSLayoutConstraint.activate([      myLabel.leadingAnchor.constraint(equalTo:\n          view.safeAreaLayoutGuide.leadingAnchor),\n      myLabel.trailingAnchor.constraint(equalTo:\n          view.safeAreaLayoutGuide.trailingAnchor),\n      myLabel.topAnchor.constraint(equalTo:\n         view.safeAreaLayoutGuide.topAnchor, constant: 30),\n      myLabel.heightAnchor.constraint(equalToConstant: 20)\n```", "```swift\n    // Add child view controllerparentViewController.addChild(childViewController)parentViewController.view.addSubview (childViewController.view)childViewController.view.frame = parentViewController.view.boundschildViewController.didMove(toParent: parentViewController)\n    ```", "```swift\n    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {    let cellData = dataSource[indexPath.row]    let height = cellData.text.height        (withConstrainedWidth:         tableView.frame.width - 32, font:          UIFont.systemFont(ofSize: 14))    return height + 16}\n    ```", "```swift\nclass MyViewController: UIViewController {    override func viewDidLoad(_ animated: Bool) {\n        super. viewDidLoad (animated)\n        navigationItem.title = \"My Title\"\n        let button = UIBarButtonItem(title: \"Button\", style: .plain, \n            target: self, action:#selector(buttonTapped))\n            navigationItem.rightBarButtonItem = button\n    }\n    @objc func buttonTapped() {}\n}\n```", "```swift\nUIView.animate(withDuration: 0.3) {    myView.alpha = 0.0\n}\n```", "```swift\nUIView.animate(withDuration: 0.5) {    myView.topAnchor.constraint(equalTo: superview.\n        topAnchor, constant: 100).isActive = true\n    superview?.layoutIfNeeded()\n}\n```", "```swift\nUIView.animate(withDuration: 1.0,               delay: 0.0,\n               usingSpringWithDamping: 0.5,\n               initialSpringVelocity: 10.0,\n               options: .curveEaseInOut,\n               animations: {\n                myView.transform = CGAffineTransform\n                    (scaleX: 1.5, y: 1.5)\n               },\n               completion: nil)\n```", "```swift\nUIView.animateKeyframes(withDuration: 3.0, delay: 0.0,    options: [], animations: {\n    UIView.addKeyframe(withRelativeStartTime: 0.0,\n        relativeDuration: 0.5, animations: {\n        view.transform = CGAffineTransform (rotationAngle: .pi / 2)\n    })\n    UIView.addKeyframe(withRelativeStartTime: 0.5,\n        relativeDuration: 0.5, animations: {\n        view.transform = CGAffineTransform.identity\n    })\n}, completion: nil)\n```", "```swift\nlet viewController = MyViewController()viewController.modalTransitionStyle = .crossDissolve\npresent(viewController, animated: true, completion: nil)\n```"]