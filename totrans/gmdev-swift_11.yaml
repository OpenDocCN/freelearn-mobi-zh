- en: Chapter 11. Ship It! Preparing for the App Store and Publication
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'What a grand journey! We have stepped through each component of the game development
    process in Swift and we are finally ready to share our hard work with the world.
    We need to prepare our project for publication by finishing the assets associated
    with it: the assorted app icons, the launch screen, and the screenshots for the
    App Store. Then, we will fill out the description and information for our app
    in iTunes Connect. Finally, we will use Xcode to upload a production archive build
    and submit it to the Apple review process. We are very close to seeing our game
    in the App Store!'
  prefs: []
  type: TYPE_NORMAL
- en: While I can show you the general path you can use to submit your app, this process
    is constantly changing as Apple updates iTunes Connect. In addition, every app
    has unique aspects that may require a variation on the path I demonstrate in this
    chapter. I encourage you to browse Apple's official documentation in the iOS Developer
    Library and refer to Stack Overflow for updated answers. You can locate the iOS
    Developer Library by browsing to [https://developer.apple.com/library/ios](https://developer.apple.com/library/ios).
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics in this chapter include:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Finalizing assets: app icons and the launch screen'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finalizing iTunes Connect information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring pricing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uploading our project from Xcode
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Submitting for review in iTunes Connect
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finalizing assets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are several peripheral assets we need before we can publish our game.
    We will create a set of app icons, redesign the launch screen, and take screenshots
    for each device we support for the App Store previews.
  prefs: []
  type: TYPE_NORMAL
- en: Adding app icons
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our app requires multiple sizes of our app icon to display correctly in the
    App Store and the various iOS devices we support. You can find a sample icon set
    in the provided assets bundle, in the `Icon` folder.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You should design your icon to be 1024 pixels wide by 1024 pixels tall and then
    resize down for the other variations. Make sure to check each variation to ensure
    it looks good after resizing. You will upload this large size directly to iTunes
    Connect later in the chapter.
  prefs: []
  type: TYPE_NORMAL
- en: The best way to integrate your icons into your project is to use the `Images.xcassets`
    asset bundle, preconfigured for app icons, that comes along with new projects.
    We will drag and drop our icons into this file to bring them into the project.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to add our icons to the project:'
  prefs: []
  type: TYPE_NORMAL
- en: In Xcode, open the `Images.xcassets` file and locate the **AppIcon** image set
    in the left pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Drag and drop the images from the assets bundle into the corresponding icon
    slots. You can drag your files in as a group and Xcode will process them into
    the correct slots. You can ignore the icon slots for Settings icons, since our
    app does not integrate with iOS settings. When you are finished, your icon image
    set will look something like this:![Adding app icons](img/Image_B04532_11_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go into your general project settings by clicking on your project in the project
    navigator. Locate the **App Icons Source** setting and make sure it is set to
    **AppIcon** to use the image bundle, as shown here:![Adding app icons](img/Image_B04532_11_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We are finished adding our icons in Xcode. We will need to upload a few more
    icon sizes to iTunes Connect later. You can run your project on a real device
    to see your new icons in action.
  prefs: []
  type: TYPE_NORMAL
- en: Designing the launch screen
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When a user taps your icon on their device, iOS shows your app's launch screen
    as an extremely fast-loading simple preview. This creates the illusion that your
    app loads almost instantly. The player gets immediate feedback from their tap
    while your app actually loads in the background. This is not the place to add
    logos, branding, or information of any kind. The goal is to create a very simple
    screen that looks like your app before the content is in place. For Pierre Penguin,
    we will implement a simple blank sky blue background that looks like the main
    menu before it has any content.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to set up your sky blue launch screen:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the `LaunchScreen.xib` file in Xcode. You will see the launch screen open
    in the interface builder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select each preexisting text element and delete each one with the *Delete* key
    on your keyboard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the entire frame by clicking anywhere in the white space of the launch
    screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make sure you have your Utilities bar open on the right hand side of Xcode,
    and open the **Attributes Inspector**, as demonstrated here:![Designing the launch
    screen](img/Image_B04532_11_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Locate the background color setting in the right bar, then click on the existing
    white color option to open a color selection window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose the color sliders tab, and enter the RGB value `102`, `153`, `242`, as
    shown here:![Designing the launch screen](img/Image_B04532_11_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You should see the entire frame turn the sky blue color from our game.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, enter your general settings by clicking the project name in the project
    navigator. As you did before for the app icons, make sure the **Launch Screen
    File** setting is **LaunchScreen**:![Designing the launch screen](img/Image_B04532_11_05.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Perfect! When we run our app, we will see the sky blue color immediately, providing
    a smoother transition between the home screen and our fully loaded app.
  prefs: []
  type: TYPE_NORMAL
- en: Taking screenshots for each supported device
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Fun screenshots will make your game stand out in the App Store. I created some
    sample screenshots for Pierre Penguin in the assets bundle's `Screenshots` folder.
    You will need to create separate screenshots for each iOS device you want to support.
  prefs: []
  type: TYPE_NORMAL
- en: 'Screenshots must be JPG or PNG files. You can use my example screenshots as
    templates for each size of screenshot you need, or follow this table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Device size | Screenshot size for a full screen game |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 3.5" (required) | 960x640 pixels |'
  prefs: []
  type: TYPE_TB
- en: '| 4" (required) | 1136x640 pixels |'
  prefs: []
  type: TYPE_TB
- en: '| 4.7" | 1334x750 pixels |'
  prefs: []
  type: TYPE_TB
- en: '| 5.5" | 2208x1242 pixels |'
  prefs: []
  type: TYPE_TB
- en: '| iPad (all versions) | 2048x1536 pixels |'
  prefs: []
  type: TYPE_TB
- en: Once your screenshots are prepared, you are ready to finalize your game settings
    in iTunes Connect. We will complete the iTunes Connect details next.
  prefs: []
  type: TYPE_NORMAL
- en: Finalizing iTunes Connect information
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: iTunes Connect controls our app's details in the App Store. We will use iTunes
    Connect to create a description for our game, add the screenshots we want to display
    in the App Store, and configure our pricing information and project settings.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to fill out your iTunes Connect information:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the iTunes Connect website in your Web browser. Browse to the **My Apps**
    section, and then click on your game. iTunes Connect will take you to the **Versions**
    tab of your game's page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will start with the screenshots. Drag and drop each device screenshot into
    the corresponding slot in the **App Video Preview and Screenshots** section, as
    seen here:![Finalizing iTunes Connect information](img/Image_B04532_11_06.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Scroll down and fill out the information in the next section: **Name**, **Description**,
    **Keywords**, and associated URLs. These fields are self-explanatory, but you
    can always click on the small gray question mark circles for detailed information
    from Apple.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A word on keywords: users will find your app more easily if you have strong,
    accurate keywords. Try to use phrases you think people may type in to the App
    Store that should lead them to your game. You are limited to 100 characters, so
    omit spaces between keywords.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, scroll down to the **General App Information** section. Here you will
    upload your app icon, enter a version number (`1.0`), pick the App Store category
    for your app (**Games**), and provide your address information. Again, click on
    the gray question mark circles if you need further information on any of these
    fields.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scroll down and locate **Game Center**, then flip the slider to the on position.
    You will need to add your leaderboard and achievements by clicking the blue plus
    icons, as shown here:![Finalizing iTunes Connect information](img/Image_B04532_11_07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, scroll to the **App Review Information** section and fill out your
    contact information again. This is for the Apple employee reviewing your app in
    the event they need more information. You can also select whether you want your
    game to release to the App Store automatically after approval, or wait for you
    to release it manually later to coincide with your marketing efforts.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Save** in the upper right corner.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configuring pricing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Pierre Penguin is going to be free for all to play, but you can choose from
    many pricing strategies for your games.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Apple is constantly updating iTunes Connect and I expect that the Pricing section
    will soon receive an overhaul. Your experience may not match these steps exactly.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to set the price for your game:'
  prefs: []
  type: TYPE_NORMAL
- en: On the iTunes Connect page for your game, click the **Pricing** tab in the top
    navigation bar.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose an **Availability Date**, **Price Tier**, and educational discount. Here
    are my settings for reference:![Configuring pricing](img/Image_B04532_11_08.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Save** in the lower right.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Perfect! Our iTunes Connect information is complete and ready to submit to the
    App Store review process. Now we just need to finalize and upload our build in
    Xcode.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you want to charge for your game then you will need to fill out the contracts
    and banking information found in the **Agreements, Tax, and Banking** section
    of iTunes Connect.
  prefs: []
  type: TYPE_NORMAL
- en: Uploading our project from Xcode
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Next, we will create a final build of our game, validate that it contains everything
    it needs for the App Store, and upload the bundle to iTunes Connect.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we will create the deployment archive for our game. When you are happy
    with your project, use the **Product** menu and select **Archive...**, as shown
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Uploading our project from Xcode](img/Image_B04532_11_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the process finishes, Xcode will open your archive list. From here, you
    can validate your app to make sure it includes all the requisite assets and profiles
    it needs to be on the App Store. Follow these steps to validate your app and upload
    it to iTunes Connect:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Validate** button, as shown in the following screenshot, to validate
    your app.![Uploading our project from Xcode](img/Image_B04532_11_10.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The following screen will ask you to choose a development team for your app.
    If you are a solo developer, you will simply select your own name, as shown here:![Uploading
    our project from Xcode](img/Image_B04532_11_11.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Xcode will create a distribution provisioning profile for you, and then take
    you to a summary screen. Simply click the **Validate** button:![Uploading our
    project from Xcode](img/Image_B04532_11_12.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Xcode will proceed to validate that everything is ready for the App Store, which
    may take a few moments. After it completes, you should see a success message,
    as shown in the following screenshot. If you receive any errors, you may be missing
    an asset or profile that the App Store requires. Read and respond to the error
    message, and refer to the iOS Developer Library, Internet searches, or Stack Overflow
    for further assistance.![Uploading our project from Xcode](img/Image_B04532_11_13.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Done**, then click the blue **Submit to App Store** button to upload
    the archive to iTunes Connect, as shown here:![Uploading our project from Xcode](img/Image_B04532_11_14.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will need to click through the validate steps again, and then finally click
    **Submit**. Xcode will then upload your app to iTunes Connect and display another
    success message.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Congratulations! You have successfully uploaded your app to Apple. We are almost
    finished submitting our app. Next, we will return to iTunes Connect to push our
    app into the review and approval process.
  prefs: []
  type: TYPE_NORMAL
- en: Submitting for review in iTunes Connect
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We are finished prepping our project and we are ready to push our hard work
    into the Apple review process. Follow these steps to submit your app to Apple:'
  prefs: []
  type: TYPE_NORMAL
- en: Return to the iTunes Connect website and browse to your game's page (on the
    **versions** tab).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scroll down to the **Build** section, and select **Click + to add a build before
    you submit your app.**![Submitting for review in iTunes Connect](img/Image_B04532_11_15.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the radio button to select the archive you just uploaded, then click **Done**,
    as shown here. It can take a few minutes (or sometimes hours) for the uploaded
    build to show in this list:![Submitting for review in iTunes Connect](img/Image_B04532_11_16.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Save** in the upper right corner and the **Submit for Review** button
    should light up in blue:![Submitting for review in iTunes Connect](img/Image_B04532_11_17.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Submit for Review** and iTunes Connect will show the **Submit for Review**
    page with three final questions about your game. Apple wants to know if your app
    uses cryptography, third party content, or advertising. I answered no to all three
    questions for Pierre Penguin. It is important to answer these questions accurately,
    so use the question mark icons in iTunes Connect for more information if you are
    unsure how to proceed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After you answer the **Submit for Review** questions, click on **Submit** in
    the upper right. This is the final step of the submission process.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If your app submits successfully, iTunes Connect will return to the versions
    tab of your app''s page. You will see the app status change to **Waiting For Review**,
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Submitting for review in iTunes Connect](img/Image_B04532_11_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Terrific! We have submitted our game to Apple. It is typical for the review
    process to take 7-14 days. Do not be discouraged if your game comes back without
    approval, Apple commonly requires developers to correct small issues and resubmit
    their apps. You are on your way to seeing your game in the App Store!
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many indie developers struggle with the final steps of publishing their games.
    If you are ready to publish a game, you are doing a great job! In this chapter,
    we created app icons and our launch screen, finalized our App Store marketing
    information in iTunes Connect, used Xcode to archive and upload our game, and
    submitted our game to Apple for review. You should now be confident in your ability
    to publish your games to the App Store.
  prefs: []
  type: TYPE_NORMAL
- en: 'We accomplished a great deal in the course of this book: we assembled a complete
    Swift game from a new project template to publication. As we go our separate ways,
    I wish you tremendous luck in your future game development endeavors. My hope
    is that you are now confident in starting your own game projects with Swift. I
    look forward to seeing your creations in the App Store!'
  prefs: []
  type: TYPE_NORMAL
