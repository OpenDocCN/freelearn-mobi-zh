["```kt\n    using UnityEngine; \n    using System.Collections; \n    public class playerScript : MonoBehaviour { \n        public int health = 100; \n        public int damage = 20; \n\n        private Animator anim; \n        // other code \n    } \n\n```", "```kt\n    public class enemyScript : MonoBehaviour { \n\n        public int health = 100; \n        public int damage = 10; \n\n        private Animator anim; \n        // other code    \n    } \n\n```", "```kt\n    GameObject player = GameObject.Find(\"theDude\"); \n    Animator pAnim = player.GetComponent<Animator>(); \n\n    playerScript pScript = player.GetComponent<playerScript>(); \n\n    //Getting Hit \n\n    if (pAnim.GetBool(\"tIsPunching\")){ \n        if (anim.GetBool(\"bEnemyIsDefending\") == false) { \n            Debug.Log(\"enemy got hit\"); \n            anim.SetTrigger(\"tEnemyGotHit\"); \n            anim.SetBool(\"bEnemyIsDefending\", true); \n health -= pScript.damage; \n        } \n    }  \n\n```", "```kt\n    GameObject enemy = GameObject.Find(\"Enemy\"); \n\n    Animator eAnim = enemy.GetComponent<Animator>(); \n\n    enemyScript eScript = enemy.GetComponent<enemyScript>(); \n\n    if (eScript.isPunching == true) { \n        if (anim.GetBool(\"bIsDefending\") == false) { \n            Debug.Log(\"player got hit\"); \n            anim.SetTrigger(\"tGotHit\"); \n            health -= eScript.damage; \n        } \n    } \n\n```", "```kt\n    using System.Collections; \n    using System.Collections.Generic; \n    using UnityEngine; \n\n    public class gameScript : MonoBehaviour { \n\n        playerScript pScript; \n        enemyScript eScript; \n        public bool bGameover = false; \n\n        // Use this for initialization \n        void Start () { \n\n            GameObject player = GameObject.Find(\"theDude\"); \n            pScript = player.GetComponent<playerScript>(); \n\n            GameObject enemy = GameObject.Find(\"Enemy\"); \n            eScript = enemy.GetComponent<enemyScript>(); \n        } \n\n        // Update is called once per frame \n        void Update () { \n            if (!bGameover) { \n\n                int playerHealth = pScript.health; \n                int enemyHealth = eScript.health; \n\n                /* Debug.Log(\"PlayerHealth: \" + playerHealth + \"  \n                EnemyHealth: \" + enemyHealth); */ \n\n                if (playerHealth<= 0 || enemyHealth<= 0) { \n                    bGameover = true; \n                    Debug.Log(\" +++++ GAMEOVER +++++\"); \n                } \n            } \n        } \n    } \n\n```", "```kt\n    public class playerScript : MonoBehaviour { \n\n        public int health = 100; \n        public int damage = 20; \n\n        float totalTime = 0.0f; \n        float timeSinceLastHit = 0.0f; \n        float hitTimeInterval = 0.0f; \n\n        private Animator anim; \n\n public GameObject mainCamera; \n\n        // other code \n    } \n\n```", "```kt\n    void Update () { \n        gameScript gScript = mainCamera.GetComponent<gameScript>(); \n\n        if (!gScript.bGameover) { \n            totalTime += Time.deltaTime; \n\n            //Getting Hit  \n            GameObject enemy = GameObject.Find(\"Enemy\"); \n            Animator eAnim = enemy.GetComponent<Animator>(); \n            enemyScript eScript = enemy.GetComponent<enemyScript>(); \n\n            if (eScript.isPunching == true) { \n                if (anim.GetBool(\"bIsDefending\") == false) { \n\n                    //Debug.Log(\"player got hit\"); \n                    anim.SetTrigger(\"tGotHit\"); \n\n                    health -= eScript.damage; \n                    Debug.Log(\"Player Health: \" + health); \n                } \n            } \n            // Defending \n            if (Input.GetButtonDown(\"Fire2\")) { \n                //Debug.Log(\"Jump pressed\"); \n                anim.SetBool(\"bIsDefending\", true); \n            } \n            else if (Input.GetButtonUp(\"Fire2\")) { \n                anim.SetBool(\"bIsDefending\", false); \n            } \n\n            // Debug.Log(\"Delta time\" + timeChangeInMillis); \n            // Attacking \n            if (totalTime>= timeSinceLastHit + hitTimeInterval) { \n                if (Input.GetButtonDown(\"Fire1\")) {     \n                    anim.SetBool(\"bIsDefending\", false); \n                    anim.SetTrigger(\"tIsPunching\"); \n\n                    timeSinceLastHit = totalTime; \n                    //Debug.Log(\"Fire pressed\"); \n                } \n            } \n        } // check if gameover \n    } // update  \n\n```", "```kt\n    using UnityEngine; \n    using System.Collections; \n\n    public class enemyScript : MonoBehaviour { \n\n        public int health = 100; \n        public int damage = 10; \n\n        private Animator anim; \n\n        public GameObjectmainCamera; \n\n        // public GameObject player; \n\n        int myTick = 0; \n        int currentTick = 0; \n        int prevTick = 0; \n        int nextTick = 10; \n        int punchTick = 0; \n\n        public bool isPunching = false; \n\n        int[] pattern = new[] {120, 30, 180, 30, 60, 30, 40, 60, 180,  \n                               30, 30, 30 ,120, 60, 60, 180, 30, 30,  \n                               120, 30 }; \n        int patternCount = 0; \n        // Use this for initialization \n\n        void Start () { \n            anim = GetComponent<Animator>(); \n            anim.SetBool(\"bEnemyIsDefending\", true); \n\n            Shuffle(pattern); \n\n            nextTick = pattern[0]; \n        } //start \n\n        // Update is called once per frame \n        void Update () { \n\n            punchTick--; \n            myTick++; \n            currentTick = myTick; \n\n            gameScript gScript = mainCamera.GetComponent<gameScript>(); \n\n            if (!gScript.bGameover) { \n\n                GameObject player = GameObject.Find(\"theDude\"); \n                Animator pAnim = player.GetComponent<Animator>(); \n                playerScript pScript = player.GetComponent<playerScript>(); \n\n                //Getting Hit \n                if (pAnim.GetBool(\"tIsPunching\")) { \n                    if (anim.GetBool(\"bEnemyIsDefending\") == false) { \n                        // Debug.Log(\"enemy got hit\"); \n                        anim.SetTrigger(\"tEnemyGotHit\"); \n                        anim.SetBool(\"bEnemyIsDefending\", true); \n\n                        health -= pScript.damage; \n\n                        Debug.Log(\"Enemy Health: \" + health); \n                    } \n                } \n\n                if (currentTick == prevTick + nextTick) { \n                    int choice = Random.Range(1, 4); \n                    // Debug.Log(\"Choice\" + choice); \n\n```", "```kt\n                switch (choice) \n                { \n                    //will punch \n                    case 1: \n                        anim.SetBool(\"bEnemyIsDefending\", false); \n                        anim.SetTrigger(\"tEnemyIsPunching\"); \n                        anim.SetBool(\"bEnemyIsDefending\", true); \n                        isPunching = true; \n                        punchTick = 1; \n                        break; \n\n                    //will defend \n                    case 2: \n                        anim.SetBool(\"bEnemyIsDefending\", true); \n                        break; \n\n                    //will be idle  \n                    case 3:  \n                        anim.SetBool(\"bEnemyIsDefending\", false);  \n                        break; \n                } \n\n                prevTick = currentTick; \n                nextTick = pattern[patterCount];//Random.Range(20, 300); \n\n                if ((patterCount + 1) >= pattern.Length) { \n                    patterCount = 0; \n                    Shuffle(pattern); \n                }  \n                else { \n                    patterCount++; \n                } \n            } \n\n            if (punchTick<= 0) { \n                punchTick = 0; \n                isPunching = false; \n            } \n        } // check if gameover \n    } // Update \n\n```", "```kt\n    void Shuffle(int[] a) {  \n        for (int i = a.Length - 1; i > 0; i--){ \n            int rnd = Random.Range(0, i); \n            int temp = a[i]; \n\n            a[i] = a[rnd]; \n            a[rnd] = temp; \n        } \n\n        for (int i = 0; i <a.Length; i++){ \n            // Debug.Log(a[i]); \n        } \n\n    } // shuffle \n\n```", "```kt\n    public Text enemyTextInstance; \n    public Text playerTextInstance; \n    public Text gameOverText;  \n\n```", "```kt\n    using UnityEngine.UI; \n\n```", "```kt\n    int playerHealth = pScript.health; \n    int enemyHealth = eScript.health; \n\n    enemyTextInstance.text = \"Health: \" + enemyHealth.ToString(); \n    playerTextInstance.text = \"Health: \" + playerHealth.ToString(); \n\n```", "```kt\n    gameOverText.enabled = false; \n\n```", "```kt\n    gameOverText.enabled = true; \n\n```", "```kt\n    public GameObject particlePrefab; \n\n```", "```kt\n    if (playerHealth<= 0 || enemyHealth<= 0) { \n        bGameover = true; \n        gameOverText.enabled = true; \n Instantiate(particlePrefab); \n        Debug.Log(\" +++++ GAMEOVER +++++\"); \n    } \n\n```"]