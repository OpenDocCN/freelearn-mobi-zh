["```swift\nClass Mortgage_data: NSObject {\n    Varmortgage_rollno: String = String()\n    Varmortgage_name: String = String()\n}\n```", "```swift\nclass func copyFile(fileName:NSString){\n    var database_path:NSString=getPath(fileName)\n    var MortgageManager=NSFileManager.defaultManager()\n    if !MortageManager.fileExistsAtPath(database_path){\n    var fromthePath:NSString= NSBundle.mainBundle().resourcePath.stringByAppendingPathComponent(fileName)\n    MortgageManager.copyItemAtPath(fromPath,toPath:database_path, error: nil)\n}\n}\n```", "```swift\nlet mortgage_instance=ModelManager()\n```", "```swift\nvar database:FMDatabase?= nil\nclass var instance:ModelManager{\nmortgage_instance.database=FMDatabase(path:Util.getPath(\"Mortgagedata.sqlite\"))\nvar Mydatapath=Util.getPath(\"Mortgagedata.sqlite\")\nprintln(\"The Current Path is> : \\(Mydatapath)\")\nreturn mortgage_instance\n}\n```", "```swift\nfunc addMortageData(Mortage_Data:Mortgage_data)-> Bool {\n        mortgage_instance.database!.open()\n        let Mortage_Inserted= Mortgage_instance.database!.executeUpdate(\"INSERT INTO Mortgage_Data (mortgage_rollno, mortgage_name) VALUES (?, ?)\",withArgumentsInArray:[Mortgage_data.mortgage_rollno,Mortgage_data.mortgage_name])\n        mortgage_instance.database!.close()\n        return isInserted\n    }\n```", "```swift\n@IBAction func btnInsertClicked(sender: AnyObject) {\nvar mortgage_data: Mortgage_data = Mortgage_data()\nMortgage_data.mortgage_rollno = tmp_ Mortgage_data.mortgage_rollno.text\nMortgage_data.studentName = Mortgage_data.mortgage_name.text\nvar Mortgage_insert = ModelManager.instance.MortgageData(Mortgage)\nif Mortgage_insert {\nUtil.invokeAlertMethod(\"\", MortgageBody: \" Data Inserted \", delegate: nil)\n        } else {\nUtil.invokeAlertMethod(\"\", MortgageBody: \"Error in inserting data\", delegate: nil)\n        }\n\n    Mortgage_data.tmp_rollno.text = \"\"\n    Mortgage_data.tmp_name.text = \"\"\n    Mortgage_data.tmp_rollno =.becomeFirstResponder()\n}\n```", "```swift\nfunc Mortgage_Updatedata(Mortage_data: Mortgage_Data) -> Bool {\n    ModelManager.instance.database!.open()\n    let Mortgage_Info_Updated {\n = sharedInstance.database!.executeUpdate(\"UPDATE Mortgage_data SET Mortgage_name=? WHERE Mortgage_rollno=?\",withArgumentsInArray: [Mortgage_data.Name, Mortgage_data.rollno])\nMortgageinstance.database!.close()\nreturn Mortgage_Info_Updated\n}\n```", "```swift\n@IBActionfuncMortgage_UpdateClicked(sender:AnyObject){\n    var Mortgage_data:Mortgage_data=Mortgage_data()\n    Mortgage_data.mortgage_rollno =tmp_mortgage_rollno.text\n    Mortgage_data.mortgage_name=tmp_mortgage_name.text\n\n    var Mortgage_Data:Mortgage_data=Mortgage_data()\n    var tmp_roll_no: String =\"mortgage_rollno\"\n    var tmp_name: String =\"mortgage_name\"\n\nvar Mortgage_Info_Updated = ModelManager.instance.updateStudentData(Mortgage_data)\nif Mortgage_Info_Updated {\nUtil.invokeAlertMethod(\"\", strBody: \"Mortgage Record has been updated \", delegate: nil)\n} else {\nUtil.invokeAlertMethod(\"\", strBody: \"Error in updating the Mortgage record\", delegate: nil)\n}\n\n    Mortgage_data.tmp_rollno.text=\"\"\n    Mortgage_data.tmp_name.text=\"\"\n    Mortgage_data.tmp_rollno=.becomeFirstResponder()\n}\n```", "```swift\nfunc deleteStudentData(Mortgage_data:Mortgage_Data)-> Bool {\n    Mortgageinstance.database!.open()\nlet Mortgage_isDeleted_var= Mortgageinstance.database!.executeUpdate(\"DELETE FROM Mortgage_data WHERE Mortgage_data_rollno=?\",withArgumentsInArray:[Mortgagedata.name])\nsharedInstance.database!.close()\nreturn Mortgage_isDeleted\n}\n```", "```swift\n@IBAction func btnDeleteClicked(sender:AnyObject){\nvar Mortgage_data:Mortgage_data=Mortgage_data()\n    Mortgage_data.mortgage_rollno =tmp_mortgage_rollno.text\nMortgage_data.mortgage_name=tmp_mortgage_name.text\n\nvar isDeleted_var=ModelManager.instance.deleteStudentData(studentInfo)\nif isDeleted_var{\nUtil.invokeAlertMethod(\"\",strBody:\"Record Deleted\", delegate: nil)\n}else{\nUtil.invokeAlertMethod(\"\",strBody:\"Error- On Deleting Record\", delegate: nil)\n}\n    Mortgage_data.tmp_rollno.text=\"\"\n    Mortgage_data.tmp_name.text=\"\"\n    Mortgage_data.tmp_rollno=.becomeFirstResponder()\n}\n```", "```swift\nfunc SelectMortgageData (){\n    Mortgageinstance.database!.open()\nvar mortgage_resultSet:FMResultSet!= Mortgageinstance.database!.executeQuery(\"SELECT * FROM Mortgage_data\",withArgumentsInArray: nil)\n        var tmp_roll_no: String =\"mortgage_rollno\"\n        var tmp_name: String =\"mortgage_name\"\nif resultSet{\nwhile mortgage_resultSet.next(){\n    println(\"roll no data is : \\(mortgage_resultSet.stringForColumn(tmp_roll_no))\")\n    println(\"name data is : \\(mortgage_resultSet.stringForColumn(tmp_name))\"\n}\n}Mortgageinstance.database!.close()\n}\n```", "```swift\n@IBAction func btnDisplayRecordClicked(sender:AnyObject){\n    ModelManager.instance.MortgageData()\n    }\n```", "```swift\n@IBAction func SaveMortgageData(sender: AnyObject) {\nlet Mortgage_data_save = FMDatabase(path: Database_path as String)\n\nif Mortgage_data_save.open() {\n\nlet insertdata = \"INSERT INTO Mortgage_data (mortgage_rollno, mortgage_name) VALUES ('\\(tmp_mortgage_rollno.text)', '\\(tmp_mortgage_name.text)')\"\n\nlet mortgage_result = Mortgage_data_save.executeUpdate(insertdata, \n            withArgumentsInArray: nil)\n\n        if !mortgage_result {\nMsg_info.text = \"Error inserting Mortgage Details\"\nprintln(\"Error: \\(Mortgage_data_save.Mortgage_ErrorMessage())\")\n        } else {\nMsg_info.text = \"Mortgage Details inserted to system\"\ntmp_mortgage_rollno.text = \"\"\ntmp_mortgage_name.text = \"\"}\n    } else {\nprintln(\"Error: \\(Mortgage_data_save.Mortgage_ErrorMessage())\")\n    }\n}\n```"]