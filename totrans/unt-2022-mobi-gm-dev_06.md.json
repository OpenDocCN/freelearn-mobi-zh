["```kt\npublic void DisableAds()\n{\n    UnityAdController.showAds = false;\n    /* Used to store that we shouldn't show ads */\n    PlayerPrefs.SetInt(\"Show Ads\", 0);\n}\nprotected virtual void Start()\n{\n    /* Initialize the showAds variable */\n    bool showAds = (PlayerPrefs.GetInt(\"Show Ads\", 1)\n        == 1);\n    UnityAdController.showAds = showAds;\n}\n```", "```kt\n    protected override void Start()\n    {\n        /* Initialize Ads if needed */\n        base.Start();\n        if (!UnityAdController.showAds)\n        {\n            /* If not showing ads, just start the game */\n            SetPauseMenu(false);\n        }\n    }\n    ```", "```kt\n        // Other code above...\n        /* Come back after 1 second and check again */\n        yield return new WaitForSeconds(1f);\n    }\n    else if (!UnityAdController.showAds)\n    {\n        /* It's valid to click the button now */\n        contButton.interactable = true;\n        /* If player clicks on button we want to just\n           continue */\n        contButton.onClick.AddListener(Continue);\n        UnityAdController.obstacle = this;\n        /* Change text to allow continue */\n        btnText.text = \"Free Continue\";\n        /* We can now leave the coroutine */\n        break;\n    }\n    else\n    {\n        /* It's valid to click the button now */\n        contButton.interactable = true;\n        // More code below...\n    ```", "```kt\n    /*If we find the button, we can use it */\n    if (continueButton)\n    {\n        //if (UnityAdController.showAds)\n        //{\n            // If a player clicks on a button, we want to\n               play an ad\n            // and then continue\n            StartCoroutine(ShowContinue(continueButton));\n        //}\n        //else\n        //{\n            /* If we can't play an ad, no need for the\n               continue button */\n        //    continueButton.gameObject.SetActive(false);\n        //}\n    }\n    ```", "```kt\n    using UnityEngine;\n    /// <summary>\n    /// Will show or remove a button depending on whether\n    /// we can restore ads or not\n    /// </summary>\n    public class RestoreAdsChecker : MonoBehaviour\n    {\n        // Use this for initialization\n        void Start()\n        {\n            bool canRestore = false;\n            switch (Application.platform)\n            {\n                // Windows Store\n                case RuntimePlatform.WSAPlayerX86:\n                case RuntimePlatform.WSAPlayerX64:\n                case RuntimePlatform.WSAPlayerARM:\n                // iOS, OSX, tvOS\n                case RuntimePlatform.IPhonePlayer:\n                case RuntimePlatform.OSXPlayer:\n                case RuntimePlatform.tvOS:\n                    canRestore = true;\n                    break;\n            }\n            gameObject.SetActive(canRestore);\n        }\n    }\n    ```"]