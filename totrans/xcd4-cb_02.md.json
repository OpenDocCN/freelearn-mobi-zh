["```swift\n[self.view addSubview:self.subView];\n```", "```swift\n[self.subView removeFromSuperview];\n```", "```swift\n    -(void)updateLabel\n    {\n     lblInfo.text = @\"Press button to change the background color\";\n     lblInfo.textColor = [UIColor blueColor];\n     lblInfo.textAlignment = NSTextAlignmentLeft;\n     lblInfo.adjustsFontSizeToFitWidth = TRUE;\n     lblInfo.font = [UIFont fontWithName:@\"Arial-Bold\" size:17];\n    }\n    ```", "```swift\n    - (void)viewDidLoad\n    {\n       [super viewDidLoad];\n\n        // Do any additional setup after loading the view, \n        // typically from a nib.\n        [self updateLabel];\n    }\n    ```", "```swift\n [UIFont fontWithName:@\"Arial-Bold\" size:17];\n```", "```swift\n    - (IBAction)btnTapHere:(UIButton *)sender {\n    [self.lblInfo setBackgroundColor:[UIColor yellowColor]];\n    }\n    ```", "```swift\n    -(void)displayImage\n    {\n     [self.imgPicture setImage:[UIImage imageNamed:@\"Blue-Aqua-Apple.png\"]];\n     [self.imgPicture setContentMode:UIViewContentModeScaleAspectFit];\n    }\n    ```", "```swift\n    [self displayImage];\n    ```", "```swift\n    -(void)populateTextBox {\n      self.txtTextInput.text = @\"This is some sample text\";\n      self.txtTextInput.returnKeyType = UIReturnKeyDone;\n      self.txtTextInput.delegate = self;\n    }\n    ```", "```swift\n    [self populateTextBox];\n    ```", "```swift\n    //  ViewController.h\n    //  ViewObjectsExample\n    //  Created by Steven F Daniel on 15/09/12.\n    //  Copyright (c) 2012 GenieSoft Studios. All rights reserved.\n\n    #import<UIKit/UIKit.h>\n\n    @interface ViewController : UIViewController <UITextFieldDelegate>\n    {\n     IBOutlet UITextField *txtTextInput;\n    }\n    @property (weak, nonatomic) IBOutlet UITextField *txtTextInput;\n    ```", "```swift\n    -(BOOL)textFieldShouldReturn:(UITextField *)textField {\n\n        // Dismisses the keyboard when the \"Done\" button is clicked\n        [textField resignFirstResponder];\n        return YES;\n    }\n    ```", "```swift\n    -(void) textFieldDidBeginEditing:(UITextField *)textField\n    {\n       lblInfo.text = @\"TextField contents are being updated\";\n       [self.lblInfo setBackgroundColor:[UIColor redColor]];\n    }\n\n    -(void)textFieldDidEndEditing:(UITextField *)textField\n    {\n     lblInfo.text = @\"TextField contents have now been updated.\";\n     [self.lblInfo setBackgroundColor:[UIColor greenColor]];\n    }\n    ```", "```swift\n-(void)populateTextBox {\n  self.txtTextInput.text = @\"This is some sample text\";\n  self.txtTextInput.returnKeyType = UIReturnKeyDone;\n  self.txtTextInput.delegate = self;\n}\n```", "```swift\n@interface ViewController : UIViewController <UITextFieldDelegate>\n{\n IBOutlet UITextField *txtTextInput;\n}\n@property (weak, nonatomic) IBOutlet UITextField *txtTextInput;\n```", "```swift\n-(BOOL)textFieldShouldReturn:(UITextField *)textField {\n\n    // Dismisses the keyboard when the \"Done\" button is clicked\n    [textField resignFirstResponder];\n    return YES;\n}\n```", "```swift\n-(void) textFieldDidBeginEditing:(UITextField *)textField\n{\n   lblInfo.text = @\"TextField contents are being updated\";\n   [self.lblInfo setBackgroundColor:[UIColor redColor]];\n}\n\n-(void)textFieldDidEndEditing:(UITextField *)textField\n{\n lblInfo.text = @\"TextField contents have now been updated.\";\n [self.lblInfo setBackgroundColor:[UIColor greenColor]];\n}\n```", "```swift\n    -(void)populateTextBox {\n      self.txtTextInput.text = @\"This is some sample text\";\n     self.txtTextInput.keyboardType = \n     UIKeyboardTypeNumbersAndPunctuation;\n      self.txtTextInput.returnKeyType = UIReturnKeyDone;\n      self.txtTextInput.delegate = self;\n    }\n    ```", "```swift\n-(void)populateTextBox {\n  self.txtTextInput.text = @\"This is some sample text\";\n  self.txtTextInput.keyboardType = \n  UIKeyboardTypeNumbersAndPunctuation;\n  self.txtTextInput.returnKeyType = UIReturnKeyDone;\n  self.txtTextInput.delegate = self;\n}\n```", "```swift\n    #import \"ViewController.h\"\n\n    @interface ViewController ()\n\n    @end\n\n    @implementation ViewController\n\n    @synthesize subView;\n    @synthesize lblInfo;\n    @synthesize pgbProgress;\n    @synthesize imgPicture;\n    @synthesize txtTextInput;\n\n    float incrementBy = 0.0;\n\n    ```", "```swift\n    - (IBAction)btnTapHere:(UIButton *)sender {\n\n     [self fillProgressBar];\n     [self.lblInfo setBackgroundColor:[UIColor yellowColor]];\n    }\n    ```", "```swift\n    - (void)fillProgressBar {\n\n     [self.pgbProgress setProgress:(incrementBy = 0.0f)];\n     [NSTimer scheduledTimerWithTimeInterval:0.5 target:self selector:@selector(incrementBar:) userInfo:nil repeats:YES];\n    }\n\n    -(void)incrementBar:(NSTimer *)timer\n    {\n     incrementBy += 10.0f;\n            [pgbProgress setProgress:(incrementBy / 100)];\n     if (incrementBy > 100.0) {\n         self.lblInfo.text = @\"Processing has been Completed\";\n         [timer invalidate];\n     }\n     else\n     {\n         self.lblInfo.text = [NSString stringWithFormat:@\"Processing data records: %3.2f\",  (pgbProgress.progress * 100)];\n     }\n    }\n    ```", "```swift\nfloat incrementBy = 0.0;\n\n```", "```swift\n- (IBAction)btnTapHere:(UIButton *)sender {\n\n [self fillProgressBar];\n [self.lblInfo setBackgroundColor:[UIColor yellowColor]];\n}\n```", "```swift\n- (void)fillProgressBar {\n\n [self.pgbProgress setProgress:(incrementBy = 0.0f)];\n [NSTimer scheduledTimerWithTimeInterval:0.5 target:self selector:@selector(incrementBar:) userInfo:nil repeats:YES];\n}\n```", "```swift\n-(void)incrementBar:(NSTimer *)timer\n{\n incrementBy += 10.0f;\n        [pgbProgress setProgress:(incrementBy / 100)];\n if (incrementBy > 100.0) {\n     self.lblInfo.text = @\"Processing has been Completed\";\n     [timer invalidate];\n }\n else\n {\n     self.lblInfo.text = [NSString\nstringWithFormat:@\"Processing data records: %3.2f\", (pgbProgress.progress * 100)];\n }\n}\n```", "```swift\n    - (IBAction)viewFadeIn:(UIBarButtonItem *)sender {\n    lblInfo.text = @\"Fade In button clicked.\";\n    }\n\n    - (IBAction)viewFadeOut:(UIBarButtonItem *)sender {\n    lblInfo.text = @\"Fade Out button clicked.\";\n    }\n    ```", "```swift\n    - (IBAction)viewFadeIn:(UIBarButtonItem *)sender {\n\n     [UIView beginAnimations: @\"Fade In\" context:nil];\n     [UIView setAnimationDuration:2.0];\n     [self.subView setAlpha:1.0f];\n     [UIView commitAnimations];\n\n     // Disable our FadeIn Button since we are processing\n     [self.btnFadeOut setEnabled:YES];\n     [self.btnFadeIn  setEnabled:NO];\n    }\n    ```", "```swift\n    - (IBAction)viewFadeOut:(UIBarButtonItem *)sender {\n\n     [UIView beginAnimations: @\"Fade Out\" context:nil];\n     [UIView setAnimationDuration:2.0];\n     [self.subView setAlpha:0.0f];\n     [UIView commitAnimations];\n\n     [self.btnFadeOut setEnabled:NO];\n     [self.btnFadeIn setEnabled:YES];\n    }\n    ```", "```swift\n    - (void)viewDidLoad\n    {\n        [super viewDidLoad];\n\n     // Do any additional setup after loading the view, typically from a nib.\n     [self updateLabel];\n     [self displayImage];\n     [self populateTextBox];\n\n     [self.pgbProgress setProgress:0.0 animated:YES];\n     [self.btnFadeOut setEnabled:YES];\n     [self.btnFadeIn setEnabled:NO];\n    }\n    ```", "```swift\n- (IBAction)viewFadeIn:(UIBarButtonItem *)sender {\n\n [UIView beginAnimations: @\"Fade In\" context:nil];\n [UIView setAnimationDuration:2.0];\n [self.subView setAlpha:1.0f];\n [UIView commitAnimations];\n\n // Disable our FadeIn Button since we are processing\n [self.btnFadeOut setEnabled:YES];\n [self.btnFadeIn  setEnabled:NO];\n}\n```", "```swift\n- (IBAction)viewFadeOut:(UIBarButtonItem *)sender {\n\n [UIView beginAnimations: @\"Fade Out\" context:nil];\n [UIView setAnimationDuration:2.0];\n [self.subView setAlpha:0.0f];\n [UIView commitAnimations];\n\n [self.btnFadeOut setEnabled:NO];\n [self.btnFadeIn setEnabled:YES];\n}\n```", "```swift\n    @interface ViewController : UITableViewController\n\n    ```", "```swift\n    - (void)viewDidLoad\n    {\n        [super viewDidLoad];\n\n     // Do any additional setup after loading the view, typically from a nib.\n     if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad) {\n      self.view.frame = CGRectMake(0, 0, 768, 1024);\n      self.lblMessage.text = @\"I'm running on the iPad\";\n      self.view.backgroundColor = [UIColor yellowColor];\n      self.lblMessage.font = [UIFont systemFontOfSize:18.5f];\n      self.lblMessage.adjustsFontSizeToFitWidth = TRUE;\n     }\n     else {\n      self.lblMessage.text = @\"I'm running on an iPhone\";\n      self.view.backgroundColor = [UIColor blueColor];\n      self.lblMessage.font = [UIFont systemFontOfSize:18.5f];\n      self.lblMessage.adjustsFontSizeToFitWidth = TRUE;\n     }\n    }\n    ```", "```swift\nif ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad) {\n```", "```swift\nself.view.frame = CGRectMake(0, 0, 768, 1024);\nself.lblMessage.text = @\"I'm running on the iPad\";\nself.view.backgroundColor = [UIColor yellowColor];\nself.lblMessage.font = [UIFont systemFontOfSize:18.5f];\nself.lblMessage.adjustsFontSizeToFitWidth = TRUE;\n```", "```swift\n else {\n  self.lblMessage.text = @\"I'm running on an iPhone\";\n  self.view.backgroundColor = [UIColor blueColor];\n  self.lblMessage.font = [UIFont systemFontOfSize:18.5f];\n  self.lblMessage.adjustsFontSizeToFitWidth = TRUE;\n }\n```"]