- en: '*Chapter 11*: Finishing Up Your User Interface'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第11章*: 完成用户界面'
- en: In the previous chapter, you configured the **Explore** screen to display 20
    empty collection view cells in a collection view, added a button to the collection
    view section header to present a view representing the **Locations** screen modally,
    and added a **Cancel** button to dismiss it.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你配置了**探索**屏幕以在集合视图中显示20个空集合视图单元格，向集合视图部分标题中添加了一个按钮以模态方式呈现代表**位置**屏幕的视图，并添加了一个**取消**按钮以关闭它。
- en: In this chapter, you will implement the remaining screens that were shown in
    the app tour shown in [*Chapter 9*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133),
    *Setting Up the User Interface*. First, you'll add a blank table view to the **Locations**
    screen. Next, you'll add the **Restaurant List** screen, which will be displayed
    when a cell in the **Explore** screen is tapped. You'll configure this screen
    to display a collection view containing a single collection view cell. After that,
    you'll add the **Restaurant Detail** screen, which will be displayed when the
    cell in the **Restaurant List** screen is tapped. You'll configure this screen
    to display a table view with static table view cells. You'll also add a button
    to one of the cells that displays a view representing the **Review Form** screen
    when tapped. Finally, you'll make the **Map** screen display a map.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将实现应用浏览中展示的剩余屏幕，即[*第9章*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133)“设置用户界面”中展示的屏幕。首先，你将在**位置**屏幕中添加一个空白表格视图。接下来，你将添加**餐厅列表**屏幕，当在**探索**屏幕中点击单元格时将显示此屏幕。你将配置此屏幕以显示包含单个集合视图单元格的集合视图。之后，你将添加**餐厅详情**屏幕，当在**餐厅列表**屏幕中点击单元格时将显示此屏幕。你将配置此屏幕以显示静态表格视图单元格的表格视图。你还将向其中一个单元格添加一个按钮，当点击时将显示代表**评论表单**屏幕的视图。最后，你将使**地图**屏幕显示地图。
- en: By the end of this chapter, you'll have learned how to add and configure a table
    view to a storyboard scene, how to add segues between scenes, and how to add a
    map view to a scene. The basic user interface of your app will be complete, and
    you will be able to walk through all the screens in the simulator. None of the
    screens will be displaying data, but you will finish their implementation in *Part
    3* of this book.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将学会如何向Storyboard场景中添加和配置表格视图，如何在场景之间添加segues，以及如何向场景中添加地图视图。你的应用程序的基本用户界面将完成，你将能够遍历模拟器中的所有屏幕。所有屏幕都不会显示数据，但你将在本书的*第3部分*中完成它们的实现。
- en: 'The following topics will be covered:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Adding a table view to the **Locations** screen
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在位置屏幕中添加表格视图
- en: Implementing the **Restaurant List** screen
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现**餐厅列表**屏幕
- en: Implementing the **Restaurant Detail** screen
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现**餐厅详情**屏幕
- en: Adding a map view to the **Map** screen
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**地图**屏幕中添加地图视图
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will continue working on the `LetsEat` project that you created in the previous
    chapter.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你将继续在上一章创建的`LetsEat`项目中工作。
- en: 'The completed Xcode project for this chapter is in the `Chapter11` folder of
    the code bundle for this book, which can be downloaded here:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章完成的Xcode项目位于本书代码包的`Chapter11`文件夹中，可以在此处下载：
- en: '[https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition](https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition](https://github.com/PacktPublishing/iOS-15-Programming-for-Beginners-Sixth-Edition)'
- en: 'Check out the following video to see the code in action:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频，了解代码的实际应用：
- en: '[https://bit.ly/3EYWb6i](https://bit.ly/3EYWb6i)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://bit.ly/3EYWb6i](https://bit.ly/3EYWb6i)'
- en: To start, you'll add a table view to the **Locations** screen, which will eventually
    be used to display a list of restaurant locations.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你将在**位置**屏幕中添加一个表格视图，它最终将用于显示餐厅位置列表。
- en: Adding a table view to the Locations screen
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在位置屏幕中添加表格视图
- en: 'When you tap the button in the collection view section header of the **Explore**
    screen, another view representing the **Locations** screen will be presented modally,
    but it is currently blank. Let''s add a table view to this view. Follow these
    steps:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在**探索**屏幕的集合视图部分标题中点击按钮时，将模态地呈现另一个代表**位置**屏幕的视图，但当前它是空的。让我们向此视图添加一个表格视图。按照以下步骤操作：
- en: 'Build and run the `LetsEat` app to make sure everything still works as it should.
    Click the `Main` storyboard file in the Project navigator. In the document outline,
    select the **View Controller** icon in the **View Controller Scene** presented
    modally by the button in the **Explore View Controller Scene**. Click the Library
    button:![Figure 11.1: Toolbar with the Library button shown'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建并运行`LetsEat`应用以确保一切仍然按预期工作。在项目导航器中点击`Main`故事板文件。在文档大纲中，选择由**探索视图控制器场景**中的按钮模态显示的**视图控制器**图标。点击库按钮：![图11.1：显示库按钮的工具栏
- en: '](img/Figure_11.01_B17469.jpg)'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.01_B17469.jpg)'
- en: 'Figure 11.1: Toolbar with the Library button shown'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图11.1：显示库按钮的工具栏
- en: The library will appear. Type `table` into the filter field. A **Table View**
    object will appear in the results.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 库将出现。在过滤器字段中输入`table`。结果中将出现**表格视图**对象。
- en: 'Drag the **Table View** object to the view in the view controller scene:![Figure
    11.2: Library with Table View object selected'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**表格视图**对象拖动到视图控制器场景中的视图中：![图11.2：选择表格视图对象的库
- en: '](img/Figure_11.02_B17469.jpg)'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.02_B17469.jpg)'
- en: 'Figure 11.2: Library with Table View object selected'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图11.2：选择表格视图对象的库
- en: 'You''ll add constraints to make the table view fill the whole screen. With
    the table view selected, click the Add New Constraints button:![Figure 11.3: View
    Controller scene with Table View selected'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将添加约束使表格视图填满整个屏幕。选择表格视图后，点击“添加新约束”按钮：![图11.3：选择表格视图的视图控制器场景
- en: '](img/Figure_11.03_B17469.jpg)'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.03_B17469.jpg)'
- en: 'Figure 11.3: View Controller scene with Table View selected'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图11.3：选择表格视图的视图控制器场景
- en: 'Type `0` into all the **Spacing to nearest neighbor** fields and make sure
    that all the pale red struts are selected (they will turn bright red). Click the
    **Add 4 Constraints** button:![Figure 11.4: Auto Layout add new constraints pop-up
    dialog box'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在所有**最近邻居间距**字段中输入`0`，并确保所有浅红色支撑结构都被选中（它们将变为鲜红色）。点击**添加4个约束**按钮：![图11.4：自动布局添加新约束弹出对话框
- en: '](img/Figure_11.04_B17469.jpg)'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.04_B17469.jpg)'
- en: 'Figure 11.4: Auto Layout add new constraints pop-up dialog box'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图11.4：自动布局添加新约束弹出对话框
- en: 'Verify that the table view''s edges are now flush with the edges of the view
    in the view controller scene:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证表格视图的边缘现在与视图控制器场景中的视图边缘对齐：
- en: '![Figure 11.5: View controller scene with table view filling the screen'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.5：表格视图填满屏幕的视图控制器场景'
- en: '](img/Figure_11.05_B17469.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.05_B17469.jpg)'
- en: 'Figure 11.5: View controller scene with table view filling the screen'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.5：表格视图填满屏幕的视图控制器场景
- en: 'Build and run your app and tap the button in the section header. You''ll see
    an empty table view in the **Locations** screen:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 构建并运行你的应用，点击章节标题中的按钮。你将在**位置**屏幕中看到一个空白的表格视图：
- en: '![Figure 11.6: iOS Simulator showing Explore and Locations screens'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.6：iOS模拟器显示探索和位置屏幕'
- en: '](img/Figure_11.06_B17469.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.06_B17469.jpg)'
- en: 'Figure 11.6: iOS Simulator showing Explore and Locations screens'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.6：iOS模拟器显示探索和位置屏幕
- en: You'll implement the view controller for the **Locations** screen in [*Chapter
    15*](B17469_15_Final_VK_ePub.xhtml#_idTextAnchor213), *Getting Started with Table
    Views*. Eventually, this table view will display a list of restaurant locations,
    as shown in the app tour. As you can see, this process is similar to adding a
    collection view to the **Explore** screen, which you did in the previous chapter.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在[*第15章*](B17469_15_Final_VK_ePub.xhtml#_idTextAnchor213)“使用表格视图入门”中实现**位置**屏幕的视图控制器。最终，这个表格视图将显示餐厅位置列表，如应用浏览中所示。正如你所见，这个过程与在上一章中添加到**探索**屏幕中的集合视图类似。
- en: In the next section, you'll add a view controller scene to your storyboard to
    represent the **Restaurant List** screen.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，你将在故事板中添加一个视图控制器场景来表示**餐厅列表**屏幕。
- en: Implementing the Restaurant List screen
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现餐厅列表屏幕
- en: As can be seen in the app tour in [*Chapter 9*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133)*,
    Setting Up the User Interface*, once you've set a location and tapped a cuisine
    in the **Explore** screen, the **Restaurant List** screen will appear, showing
    a list of restaurants.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如[*第9章*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133)“应用浏览”中所示，在**探索**屏幕中设置位置并点击一种菜系后，将出现**餐厅列表**屏幕，显示餐厅列表。
- en: To implement the `RestaurantListViewController` class, make it the view controller
    for the view controller scene's view, and connect the outlets of the collection
    view to this class. The steps are very similar to the one you followed in the
    previous chapter for the `ExploreViewController` class.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现`RestaurantListViewController`类，将其设置为视图控制器场景视图的视图控制器，并将集合视图的出口连接到这个类。步骤与上一章中为`ExploreViewController`类执行的步骤非常相似。
- en: 'Let''s start by adding the new view controller scene. Follow these steps:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先添加新的视图控制器场景。按照以下步骤操作：
- en: 'In the `Main` storyboard file, move the navigation controller scene and view
    controller scene that you added in the previous chapter upward to make room for
    the new view controller scene that you will add:![Figure 11.7: Editing area showing
    Main storyboard file contents'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在`Main`故事板文件中，将上一章中添加的导航控制器场景和视图控制器场景向上移动，为即将添加的新视图控制器场景腾出空间：![Figure 11.7:
    显示Main故事板文件内容的编辑区域'
- en: '](img/Figure_11.07_B17469.jpg)'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_11.07_B17469.jpg]'
- en: 'Figure 11.7: Editing area showing Main storyboard file contents'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Figure 11.7: 显示Main故事板文件内容的编辑区域'
- en: 'Click the Library button and type `view con` into the filter field. A **View
    Controller** object will be in the results. Drag the **View Controller** object
    into the storyboard to represent the **Restaurant List** screen:![Figure 11.8:
    Library with View Controller object selected'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '点击库按钮，在过滤器字段中输入`view con`。结果中将有一个**视图控制器**对象。将**视图控制器**对象拖动到故事板中以表示**餐厅列表**屏幕：![Figure
    11.8: 已选择视图控制器对象的库'
- en: '](img/Figure_11.08_B17469.jpg)'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_11.08_B17469.jpg]'
- en: 'Figure 11.8: Library with View Controller object selected'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Figure 11.8: 已选择视图控制器对象的库'
- en: 'Click the Library button and type `collec` into the filter field. A **Collection
    View** object will be in the results. Drag the **Collection View** object to the
    view in the view controller scene:![Figure 11.9: Library with Collection View
    object selected'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '点击库按钮，在过滤器字段中输入`collec`。结果中将有一个**集合视图**对象。将**集合视图**对象拖动到视图控制器场景中的视图中：![Figure
    11.9: 已选择集合视图对象的库'
- en: '](img/Figure_11.09_B17469.jpg)'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_11.09_B17469.jpg]'
- en: 'Figure 11.9: Library with Collection View object selected'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Figure 11.9: 已选择集合视图对象的库'
- en: 'You''ll add constraints to make the collection view fill the whole screen.
    With the collection view selected, click the Add New Constraints button:![Figure
    11.10: View controller scene with collection view selected'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '你将添加约束使集合视图填满整个屏幕。在集合视图被选中时，点击**添加新约束**按钮：![Figure 11.10: 已选择集合视图的视图控制器场景'
- en: '](img/Figure_11.10_B17469.jpg)'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_11.10_B17469.jpg]'
- en: 'Figure 11.10: View controller scene with collection view selected'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Figure 11.10: 已选择集合视图的视图控制器场景'
- en: 'Type `0` into all the **Spacing to nearest neighbor** fields and make sure
    that all the pale red struts are selected (they will turn bright red). Click the
    **Add 4 Constraints** button. Verify that the edges of the collection view are
    now flush with the edges of the view in the view controller scene:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在所有**最近邻间距**字段中输入`0`，并确保所有浅红色支撑结构都被选中（它们将变为亮红色）。点击**添加4个约束**按钮。验证集合视图的边缘现在是否与视图控制器场景中视图的边缘对齐：
- en: '![Figure 11.11: View controller scene with collection view filling the screen'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 11.11: 集合视图填满屏幕的视图控制器场景'
- en: '](img/Figure_11.11_B17469.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_11.11_B17469.jpg]'
- en: 'Figure 11.11: View controller scene with collection view filling the screen'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 'Figure 11.11: 集合视图填满屏幕的视图控制器场景'
- en: The view controller scene for the **Restaurant List** screen has been added,
    but it does not have a view controller yet. You'll need one to make it display
    a collection view cell. In the next section, you'll add a new Cocoa Touch Class
    file to your app so that you can declare and define a new view controller class
    for this screen.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**餐厅列表**屏幕的视图控制器场景已添加，但尚未包含视图控制器。你需要一个视图控制器来使其显示集合视图单元格。在下一节中，你将在应用中添加一个新的Cocoa
    Touch类文件，以便声明和定义此屏幕的新视图控制器类。'
- en: Declaring the RestaurantListViewController class
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 声明RestaurantListViewController类
- en: 'As you did in the previous chapter, you''ll add a new Cocoa Touch Class file
    to your project, but this time, you''ll implement the `RestaurantListViewController`
    class. You''ll use an instance of this class as the view controller for the **Restaurant
    List** screen. Follow these steps:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一章所述，你将在项目中添加一个新的Cocoa Touch类文件，但这次，你将实现`RestaurantListViewController`类。你将使用这个类的实例作为**餐厅列表**屏幕的视图控制器。按照以下步骤操作：
- en: Click the Navigator and Inspector buttons to turn on the Navigator and Inspector
    areas.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击导航器和检查器按钮以打开导航器和检查器区域。
- en: Right-click on the `LetsEat` group and choose **New Group** from the pop-up
    menu.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击 `LetsEat` 组，从弹出菜单中选择**新建组**。
- en: Name this new group `Restaurants`. If you make a mistake, click the name and
    press *Return* on your keyboard to make it editable again.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将这个新组命名为 `Restaurants`。如果你出错，点击名称并按键盘上的 *Return* 键使其再次可编辑。
- en: Right-click the `Restaurants` group and select **New File...**.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击 `Restaurants` 组，选择**新建文件...**。
- en: '**iOS** should already be selected. Select **Cocoa Touch Class** and click
    **Next**.'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**iOS** 应已选中。选择**Cocoa Touch 类**并点击**下一步**。'
- en: The `RestaurantListViewController`
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`RestaurantListViewController`'
- en: '`UIViewController`'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`UIViewController`'
- en: Click **Next** when you're done.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成后点击**下一步**。
- en: On the next screen, click **Create**.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一屏，点击**创建**。
- en: 'The `RestaurantListViewController` file has been added to the project, and
    you will see the boilerplate code for the `RestaurantListViewController` class
    in it. The `RestaurantListViewController` class is a subclass of the `UIViewController`
    class and contains a single method, `viewDidLoad()`. Like you did in the previous
    chapter, remove the commented code after the `viewDidLoad()` class in the `RestaurantListViewController`
    class until only the code shown in the following screenshot remains:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`RestaurantListViewController` 文件已添加到项目中，你将在其中看到 `RestaurantListViewController`
    类的样板代码。`RestaurantListViewController` 类是 `UIViewController` 类的子类，包含一个方法，`viewDidLoad()`。如同你在上一章中所做的，从
    `RestaurantListViewController` 类中的 `viewDidLoad()` 类之后删除注释代码，直到只剩下以下截图所示的代码：'
- en: '![Figure 11.12: Editing area showing RestaurantListViewController file''s contents'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.12：显示 RestaurantListViewController 文件内容的编辑区域'
- en: '](img/Figure_11.12_B17469.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.12_B17469.jpg)'
- en: 'Figure 11.12: Editing area showing RestaurantListViewController file''s contents'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.12：显示 RestaurantListViewController 文件内容的编辑区域
- en: As you did before for the `RestaurantListViewController` class the view controller
    for the view in the view controller scene and adopt the collection view data source
    and delegate protocols. You'll also add an outlet for the collection view manually
    in the class definition and use the Connections inspector to connect the outlet
    to the collection view in the storyboard. You'll do this in the next section.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如同之前对 `RestaurantListViewController` 类所做的，为视图场景中的视图控制器采用集合视图数据源和代理协议。你还需要在类定义中手动添加集合视图的出口，并使用连接检查器将出口连接到故事板中的集合视图。你将在下一节中这样做。
- en: Adopting the delegate and data source protocols
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 采用代理和数据源协议
- en: 'You will modify the `RestaurantListViewController` class to make it conform
    to the `UICollectionViewDataSource` and `UICollectionViewDelegate` protocols and
    add any required protocol methods. You''ll also add an outlet for the collection
    view and make an instance of the `RestaurantListViewController` class the view
    controller for the view. Follow these steps:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 你将修改 `RestaurantListViewController` 类，使其符合 `UICollectionViewDataSource` 和 `UICollectionViewDelegate`
    协议，并添加任何必需的协议方法。你还将添加集合视图的出口，并将 `RestaurantListViewController` 类的实例设置为视图的控制器。按照以下步骤操作：
- en: 'Modify the `RestaurantListViewController` class declaration as shown to make
    it adopt the `UICollectionViewDataSource` and `UICollectionViewDelegate` protocols:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下所示修改 `RestaurantListViewController` 类声明，使其采用 `UICollectionViewDataSource`
    和 `UICollectionViewDelegate` 协议：
- en: '[PRE0]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When the error icon appears, click it.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当错误图标出现时，点击它。
- en: You'll see this error because the methods required to conform to the protocols
    you added are not present in the class definition. Click the **Fix** button to
    add stubs for the required methods to your class definition.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会看到这个错误，因为符合你添加的协议所需的方法没有在类定义中存在。点击**修复**按钮，将所需方法的占位符添加到你的类定义中。
- en: 'Verify that the method stubs have been added to the file. Rearrange everything
    so that the stubs are after the `viewDidLoad()` method:![Figure 11.13: Editing
    area showing UICollectionViewDataSource method stubs'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认方法占位符已添加到文件中。重新排列一切，使占位符位于 `viewDidLoad()` 方法之后：![图 11.13：显示 UICollectionViewDataSource
    方法占位符的编辑区域
- en: '](img/Figure_11.13_B17469.jpg)'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.13_B17469.jpg)'
- en: 'Figure 11.13: Editing area showing UICollectionViewDataSource method stubs'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.13：显示 UICollectionViewDataSource 方法占位符的编辑区域
- en: 'Modify the method stubs as shown to make the collection view display a single
    collection view cell on the screen when the app is run:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下所示修改方法占位符，以便在应用运行时在屏幕上显示单个集合视图单元格：
- en: '[PRE1]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Verify that your code looks like this:![Figure 11.14: Editing area showing
    code to display a single cell'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认你的代码看起来像这样：![图 11.14：显示显示单个单元格的代码的编辑区域
- en: '](img/Figure_11.14_B17469.jpg)'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.14：B17469.jpg](img/Figure_11.14_B17469.jpg)'
- en: 'Figure 11.14: Editing area showing code to display a single cell'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.14：显示单个单元格代码的编辑区域
- en: 'Add an outlet, `collectionView`, just after the class declaration:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在类声明之后添加一个输出，`collectionView`：
- en: '[PRE2]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You will link this to the collection view in the storyboard later.
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你将在稍后链接到故事板中的集合视图。
- en: 'Verify that your code looks like this:![Figure 11.15: Editing area showing
    collectionView outlet'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你的代码看起来像这样：![图 11.15：显示 collectionView 输出的编辑区域
- en: '](img/Figure_11.15_B17469.jpg)'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.15：B17469.jpg](img/Figure_11.15_B17469.jpg)'
- en: 'Figure 11.15: Editing area showing collectionView outlet'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.15：显示 collectionView 输出的编辑区域
- en: You won't be using the assistant editor to link the outlet to the collection
    view, like you did in the previous chapter. This is a matter of personal preference—you
    are free to choose whichever method suits you best.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你不会使用辅助编辑器将输出链接到集合视图，就像你在上一章中所做的那样。这是一个个人偏好的问题——你可以自由选择最适合你的方法。
- en: 'Click the `Main` storyboard file and click the **View Controller** icon of
    the newly added **View Controller Scene** in the document outline. Click the Identity
    inspector button:![Figure 11.16: Identity inspector selected'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `Main` 故事板文件，点击文档大纲中新增的 **视图控制器场景** 的 **视图控制器** 图标。点击身份检查器按钮：![图 11.16：已选择身份检查器
- en: '](img/Figure_11.16_B17469.jpg)'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.16：B17469.jpg](img/Figure_11.16_B17469.jpg)'
- en: 'Figure 11.16: Identity inspector selected'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.16：已选择身份检查器
- en: 'To make an instance of the `RestaurantListViewController` class the view controller
    for this scene, select `RestaurantListViewController` in the **Class** field:![Figure
    11.17: Identity inspector with Class set to RestaurantListViewController'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使 `RestaurantListViewController` 类的实例成为此场景的视图控制器，在 **类** 字段中选择 `RestaurantListViewController`：![图
    11.17：身份检查器，类设置为 RestaurantListViewController
- en: '](img/Figure_11.17_B17469.jpg)'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.17：B17469.jpg](img/Figure_11.17_B17469.jpg)'
- en: 'Figure 11.17: Identity inspector with Class set to RestaurantListViewController'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.17：身份检查器，类设置为 RestaurantListViewController
- en: Note that the name of the view controller scene has changed to **Restaurant
    List View Controller Scene**.
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，视图控制器场景的名称已更改为**餐厅列表视图控制器场景**。
- en: 'Click the Connections inspector button. To assign the collection view in the
    `RestaurantListViewController` class definition, drag from the circle next to
    the `collectionView` outlet to the collection view in the **Restaurant List View
    Controller Scene**:![Figure 11.18: Editing area showing collection view to be
    connected'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击连接检查器按钮。要将 `RestaurantListViewController` 类定义中的集合视图分配，从 `collectionView` 输出的旁边的小圆圈拖动到
    **餐厅列表视图控制器场景** 中的集合视图：![图 11.18：显示要连接的集合视图的编辑区域
- en: '](img/Figure_11.18_B17469.jpg)'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.18：B17469.jpg](img/Figure_11.18_B17469.jpg)'
- en: 'Figure 11.18: Editing area showing collection view to be connected'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.18：显示要连接的集合视图的编辑区域
- en: 'Verify that the collection view in the `collectionView` outlet in the `RestaurantListViewController`
    class definition are now connected:![Figure 11.19: Connections inspector showing
    collectionView outlet'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认 `RestaurantListViewController` 类定义中的 `collectionView` 输出的集合视图现在已连接：![图 11.19：显示
    collectionView 输出的连接检查器
- en: '](img/Figure_11.19_B17469.jpg)'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.19：B17469.jpg](img/Figure_11.19_B17469.jpg)'
- en: 'Figure 11.19: Connections inspector showing collectionView outlet'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.19：显示 collectionView 输出的连接检查器
- en: 'Click the `RestaurantListViewController` class the data source and delegate
    object for the collection view, drag from the circles next to the `dataSource`
    and `delegate` outlets to the **Restaurant List View Controller** icon in the
    document outline:![Figure 11.20: Connections inspector selected'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `RestaurantListViewController` 类，为集合视图选择数据源和委托对象，从 `dataSource` 和 `delegate`
    输出的旁边的小圆圈拖动到文档大纲中的 **餐厅列表视图控制器** 图标：![图 11.20：已选择连接检查器
- en: '](img/Figure_11.20_B17469.jpg)'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.20：B17469.jpg](img/Figure_11.20_B17469.jpg)'
- en: 'Figure 11.20: Connections inspector selected'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.20：已选择连接检查器
- en: 'Verify that the `dataSource` and `delegate` outlets are now connected:![Figure
    11.21: Connections inspector with dataSource and delegate outlets set'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认 `dataSource` 和 `delegate` 输出现在已连接：![图 11.21：已设置 dataSource 和 delegate 输出的连接检查器
- en: '](img/Figure_11.21_B17469.jpg)'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.21：B17469.jpg](img/Figure_11.21_B17469.jpg)'
- en: 'Figure 11.21: Connections inspector with dataSource and delegate outlets set'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.21：已设置 dataSource 和 delegate 输出的连接检查器
- en: 'Click the **Collection View Cell** in the document outline. Click the Attributes
    inspector button to set the identifier and color of the collection view cell (you''ll
    learn more about identifiers in [*Chapter 13*](B17469_13_Final_VK_ePub.xhtml#_idTextAnchor194),
    *Getting Started with MVC and Collection Views*):![Figure 11.22: Attributes inspector
    selected'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中点击**集合视图单元格**。点击属性检查器按钮以设置集合视图单元格的标识符和颜色（你将在[*第13章*](B17469_13_Final_VK_ePub.xhtml#_idTextAnchor194)，*开始使用MVC和集合视图*）中了解更多关于标识符的信息）：![图11.22：属性检查器已选中
- en: '](img/Figure_11.22_B17469.jpg)'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.22_B17469.jpg)'
- en: 'Figure 11.22: Attributes inspector selected'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图11.22：属性检查器已选中
- en: 'Set the `restaurantCell` and set the `Light Gray Color`:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置`restaurantCell`并设置`浅灰色颜色`：
- en: '![Figure 11.23: Attributes inspector with identifier and background color set'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.23：属性检查器已设置标识符和背景颜色'
- en: '](img/Figure_11.23_B17469.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.23_B17469.jpg)'
- en: 'Figure 11.23: Attributes inspector with identifier and background color set'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.23：属性检查器已设置标识符和背景颜色
- en: The **Restaurant List View Controller Scene** setup is now complete. Now, you
    need to display this screen when a cell in the **Explore** screen is tapped. To
    do this, you will add a segue between the **Explore** screen and the **Restaurant
    List** screen in the next section.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**餐厅列表视图控制器场景**的设置现在已完成。现在，你需要在一个单元格在**探索**屏幕中被点击时显示这个屏幕。为了做到这一点，你将在下一节中在**探索**屏幕和**餐厅列表**屏幕之间添加一个segue。'
- en: Presenting the Restaurant List screen
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 展示餐厅列表屏幕
- en: 'In the previous chapter, you added a segue to make the **Locations** screen
    appear when a button in the **Explore** screen is tapped. To display the **Restaurant
    List** screen when a cell in the **Explore** screen is tapped, you''ll use a segue
    as well. Follow these steps:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你添加了一个segue，当**探索**屏幕中的按钮被点击时，会显示**位置**屏幕。为了在点击**探索**屏幕中的单元格时显示**餐厅列表**屏幕，你也会使用一个segue。按照以下步骤操作：
- en: 'Click `exploreCell` in the document outline to the **Restaurant List View Controller
    Scene** to add a segue between them:![Figure 11.24: Document outline showing exploreCell'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档大纲中点击`exploreCell`到**餐厅列表视图控制器场景**以在它们之间添加一个segue：![图11.24：文档大纲显示exploreCell
- en: '](img/Figure_11.24_B17469.jpg)'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.24_B17469.jpg)'
- en: 'Figure 11.24: Document outline showing exploreCell'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图11.24：文档大纲显示exploreCell
- en: 'The **Segue** menu will appear. Choose **Show** from the menu:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**segue**菜单将出现。从菜单中选择**显示**：'
- en: '![Figure 11.25: Segue pop-up menu with Show selected'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.25：带有“显示”选项的segue弹出菜单'
- en: '](img/Figure_11.25_B17469.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.25_B17469.jpg)'
- en: 'Figure 11.25: Segue pop-up menu with Show selected'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.25：带有“显示”选项的segue弹出菜单
- en: This makes the **Restaurant List** screen slide in from the right when a cell
    in the **Explore** screen is tapped. A **<Back** button will appear in the navigation
    bar.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得当点击**探索**屏幕中的单元格时，**餐厅列表**屏幕从右侧滑入。在导航栏中会出现一个**<返回**按钮。
- en: 'Build and run your app. In the **Explore** screen, tap a cell. You should see
    the **Restaurant List** screen appear with a collection view containing a single
    cell inside it. Tapping the **<Back** button in the navigation bar will dismiss
    the **Restaurant List** screen:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 构建并运行你的应用。在**探索**屏幕中，点击一个单元格。你应该会看到包含一个单元格的集合视图的**餐厅列表**屏幕出现。在导航栏中点击**<返回**按钮将关闭**餐厅列表**屏幕：
- en: '![Figure 11.26: iOS Simulator showing Explore and Restaurant List screens'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.26：iOS模拟器显示探索和餐厅列表屏幕'
- en: '](img/Figure_11.26_B17469.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.26_B17469.jpg)'
- en: 'Figure 11.26: iOS Simulator showing Explore and Restaurant List screens'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.26：iOS模拟器显示探索和餐厅列表屏幕
- en: The implementation of the **Restaurant List** screen is now complete, and you
    can navigate from the **Explore** screen to the **Restaurant List** screen and
    back. Eventually, the collection view in this screen will display a list of restaurants
    at a particular location, as shown in the app tour. Great! The next thing you
    will do is add a view controller scene to represent the **Restaurant Detail**
    screen. This screen will be displayed when a cell in the **Restaurant List** screen
    is tapped. You'll do this in the next section.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**餐厅列表**屏幕的实现现在已完成，你可以从**探索**屏幕导航到**餐厅列表**屏幕并返回。最终，这个屏幕中的集合视图将显示特定位置的餐厅列表，如应用演示所示。太棒了！接下来，你将添加一个视图控制器场景来表示**餐厅详情**屏幕。当点击**餐厅列表**屏幕中的单元格时，将显示此屏幕。你将在下一节中这样做。'
- en: Implementing the Restaurant Detail screen
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现餐厅详情屏幕
- en: As shown in the app tour in [*Chapter 9*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133)*,
    Setting Up the User Interface*, when you tap a restaurant in the **Restaurant
    List** screen, a **Restaurant Detail** screen containing the details of that restaurant
    will appear. Tapping the **Add Review** button will display the **Review Form**
    screen where you can add reviews and tapping the **Add Photo** button will display
    the **Photo Filter** screen where you can add photos and apply filters to them.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 如 [*第 9 章*](B17469_09_Final_VK_ePub.xhtml#_idTextAnchor133) “设置用户界面” 中的应用程序导游所示，当你点击
    **餐厅列表** 屏幕中的餐厅时，将出现包含该餐厅详细信息的 **餐厅详情** 屏幕。点击 **添加评论** 按钮将显示可以添加评论的 **评论表单** 屏幕，点击
    **添加照片** 按钮将显示可以添加照片并应用滤镜的 **照片滤镜** 屏幕。
- en: In this section, you'll add a new table view controller scene to your storyboard
    to represent the **Restaurant Detail** screen and add a second view controller
    scene to represent the **Review Form** screen. You'll place a button in one of
    the table view cells to present the **Review Form** screen.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将在你的故事板中添加一个新的表格视图控制器场景来表示 **餐厅详情** 屏幕，并添加第二个视图控制器场景来表示 **评论表单** 屏幕。你将在表格视图中的一个单元格中放置一个按钮来显示
    **评论表单** 屏幕。
- en: 'Let''s start by adding the new view controller scene. Follow these steps:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从添加新的视图控制器场景开始。按照以下步骤操作：
- en: 'Click the Library button, type `table` in the filter field, and drag a **Table
    View Controller** object to the storyboard next to the **Restaurant List View
    Controller Scene**:![Figure 11.27: Library with Table View Controller object selected'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击库按钮，在过滤器字段中输入 `table`，然后将 **表格视图控制器** 对象拖动到故事板中，位于 **餐厅列表视图控制器场景** 旁边：![图
    11.27：选择表格视图控制器对象的库
- en: '](img/Figure_11.27_B17469.jpg)'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.27_B17469.jpg)'
- en: 'Figure 11.27: Library with Table View Controller object selected'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.27：选择表格视图控制器对象的库
- en: This will represent the **Restaurant Detail** screen.
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将代表 **餐厅详情** 屏幕。
- en: 'Verify that the **Table View Controller Scene** has been added:![Figure 11.28:
    Editing area showing table view controller scene next to Restaurant List View
    Controller Scene'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证是否已添加 **表格视图控制器场景**：![图 11.28：显示表格视图控制器场景和 Restaurant List 视图控制器场景的编辑区域
- en: '](img/Figure_11.28_B17469.jpg)'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.28_B17469.jpg)'
- en: 'Figure 11.28: Editing area showing table view controller scene next to Restaurant
    List View Controller Scene'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.28：显示表格视图控制器场景和 Restaurant List 视图控制器场景的编辑区域
- en: Note that it already has a table view inside it, so you don't need to add a
    table view to the scene, like you did in the previous section.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，它已经包含了一个表格视图，因此你不需要在场景中添加表格视图，就像你之前章节中所做的那样。
- en: 'To display the `restaurantCell` (in the document outline under the **Restaurant
    List View Controller Scene**) to the table view to add a segue between them:![Figure
    11.29: Document outline with restaurantCell selected'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将 `restaurantCell`（在文档大纲中位于 **餐厅列表视图控制器场景** 之下）显示到表格视图中，以在它们之间添加过渡：![图 11.29：选择
    restaurantCell 的文档大纲
- en: '](img/Figure_11.29_B17469.jpg)'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.29_B17469.jpg)'
- en: 'Figure 11.29: Document outline with restaurantCell selected'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.29：选择 restaurantCell 的文档大纲
- en: Select **Show** from the **Segue** menu. This makes the **Restaurant Detail**
    screen slide in from the right when a cell in the **Restaurant List** screen is
    tapped. A **<Back** button will appear in the navigation bar.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **过渡** 菜单中选择 **显示**。这使得当点击 **餐厅列表** 屏幕中的单元格时，**餐厅详情** 屏幕从右侧滑入。在导航栏中会出现一个 **<返回**
    按钮。
- en: 'Verify that a segue has appeared between the two scenes:![Figure 11.30: Editing
    area showing segue between Restaurant List View Controller Scene and the table
    view controller scene'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证两个场景之间是否出现了过渡：![图 11.30：显示 Restaurant List 视图控制器场景和表格视图控制器场景之间的过渡
- en: '](img/Figure_11.30_B17469.jpg)'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.30_B17469.jpg)'
- en: 'Figure 11.30: Editing area showing segue between Restaurant List View Controller
    Scene and the table view controller scene'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.30：显示 Restaurant List 视图控制器场景和表格视图控制器场景之间的过渡
- en: 'The **Restaurant Detail** screen always displays a fixed number of cells. In
    the document outline, click **Table View** under **Table View Controller Scene**
    and click the Attributes inspector button:![Figure 11.31: Attributes inspector
    selected'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**餐厅详情** 屏幕始终显示固定数量的单元格。在文档大纲中，点击 **表格视图控制器场景** 下的 **表格视图**，然后点击属性检查器按钮：![图
    11.31：属性检查器已选择'
- en: '](img/Figure_11.31_B17469.jpg)'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.31_B17469.jpg)'
- en: 'Figure 11.31: Attributes inspector selected'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.31：属性检查器已选择
- en: 'Set **Content** to **Static Cells** to make the **Restaurant Detail** screen
    display a fixed number of cells:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**内容**设置为**静态单元格**以使**餐厅详情**屏幕显示固定数量的单元格：
- en: '![Figure 11.32: Attributes inspector with Content set to Static Cells'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.32：内容设置为静态单元格的属性检查器'
- en: '](img/Figure_11.32_B17469.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.32_B17469.jpg)'
- en: 'Figure 11.32: Attributes inspector with Content set to Static Cells'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.32：内容设置为静态单元格的属性检查器
- en: You're doing this because the **Restaurant Detail** screen always uses the same
    number of cells to display restaurant details.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 你这样做是因为**餐厅详情**屏幕总是使用相同数量的单元格来显示餐厅详情。
- en: 'Build and run your app. Click on a cell in the **Explore** screen to display
    the **Restaurant List** screen. Then, click on a cell in the **Restaurant List**
    screen to display the **Restaurant Detail** screen:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 构建并运行你的应用。在**探索**屏幕上点击一个单元格以显示**餐厅列表**屏幕。然后，在**餐厅列表**屏幕上点击一个单元格以显示**餐厅详情**屏幕：
- en: '![Figure 11.33: iOS simulator showing Restaurant Detail screen'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.33：显示餐厅详情屏幕的 iOS 模拟器'
- en: '](img/Figure_11.33_B17469.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.33_B17469.jpg)'
- en: 'Figure 11.33: iOS simulator showing Restaurant Detail screen'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.33：显示餐厅详情屏幕的 iOS 模拟器
- en: Click the **Back** button to go back.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**后退**按钮返回。
- en: In the next section, you will implement a button inside one of the table view
    cells to display a screen that represents the **Review Form** screen.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，你将在表格视图中的一个单元格内实现一个按钮以显示表示**评论表单**屏幕的屏幕。
- en: Implementing the Review Form screen
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现评论表单屏幕
- en: 'In this section, you will implement a new view controller scene to represent
    the **Review Form** screen and configure a button in the **Restaurant Detail**
    screen to display it. Follow these steps:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将实现一个新的视图控制器场景来表示**评论表单**屏幕，并在**餐厅详情**屏幕中配置一个按钮以显示它。按照以下步骤操作：
- en: 'You need a button in the `button` into the filter field. A **Button** object
    appears as one of the results. Drag it to the top static cell in the table view
    controller scene representing the **Restaurant Detail** screen:![Figure 11.34:
    Library with Button object selected'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要在过滤器字段中的`button`里添加一个按钮。一个**按钮**对象将作为结果之一出现。将其拖动到表示**餐厅详情**屏幕的表格视图控制器场景中的顶部静态单元格：![图
    11.34：选择按钮对象的库
- en: '](img/Figure_11.34_B17469.jpg)'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.34_B17469.jpg)'
- en: 'Figure 11.34: Library with Button object selected'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.34：选择按钮对象的库
- en: 'Position it on the right-hand side of the cell:![Figure 11.35: Editing area
    showing table view controller scene with button'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其放置在单元格的右侧：![图 11.35：显示带有按钮的表格视图控制器场景的编辑区域
- en: '](img/Figure_11.35_B17469.jpg)'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.35_B17469.jpg)'
- en: 'Figure 11.35: Editing area showing table view controller scene with button'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.35：显示带有按钮的表格视图控制器场景的编辑区域
- en: 'Click the Library button and type `view con` in the filter field. A **View
    Controller** object will appear as one of the results. Drag it next to the table
    view controller scene to represent the **Review Form** screen:![Figure 11.36:
    Library with View Controller object selected'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击库按钮并在过滤器字段中输入`view con`。一个**视图控制器**对象将作为结果之一出现。将其拖动到表格视图控制器场景旁边以表示**评论表单**屏幕：![图
    11.36：选择视图控制器对象的库
- en: '](img/Figure_11.36_B17469.jpg)'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.36_B17469.jpg)'
- en: 'Figure 11.36: Library with View Controller object selected'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.36：选择视图控制器对象的库
- en: 'Verify that the new view controller scene has been added:![Figure 11.37: Editing
    area showing view controller scene next to table view controller scene'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证是否已添加新的视图控制器场景：![图 11.37：显示视图控制器场景和表格视图控制器场景的编辑区域
- en: '](img/Figure_11.37_B17469.jpg)'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.37_B17469.jpg)'
- en: 'Figure 11.37: Editing area showing view controller scene next to table view
    controller scene'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.37：显示视图控制器场景和表格视图控制器场景的编辑区域
- en: 'Click the Library button and type `label` in the filter field. A **Label**
    object appears as one of the results. Drag it to the center of the new view controller
    scene to represent a review:![Figure 11.38: Library with Label object selected'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击库按钮并在过滤器字段中输入`label`。一个**标签**对象将作为结果之一出现。将其拖动到新视图控制器场景的中心以表示一条评论：![图 11.38：选择标签对象的库
- en: '](img/Figure_11.38_B17469.jpg)'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.38_B17469.jpg)'
- en: 'Figure 11.38: Library with Label object selected'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.38：选择标签对象的库
- en: 'Change the label text to `Reviews`. Click the Align button to add horizontal
    and vertical constraints to it:![Figure 11.39: Editing area showing view controller
    scene with label'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将标签文本更改为`评论`。点击对齐按钮以向其添加水平和垂直约束：![图 11.39：显示带有标签的视图控制器场景的编辑区域
- en: '](img/Figure_11.39_B17469.jpg)'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_11.39_B17469.jpg)'
- en: 'Figure 11.39: Editing area showing view controller scene with label'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.39：显示带有标签的视图控制器场景的编辑区域
- en: 'Tick the **Horizontally in Container** and **Vertically in Container** checkboxes.
    Click the **Add 2 Constraints** button. Verify the constraints have been added:![Figure
    11.40: Editing area showing label constraints set'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打勾**容器中水平**和**容器中垂直**复选框。点击**添加 2 个约束**按钮。验证是否已添加约束：![图 11.40：显示已设置标签约束的编辑区域
- en: '](img/Figure_11.40_B17469.jpg)'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_11.40_B17469.jpg]'
- en: 'Figure 11.40: Editing area showing label constraints set'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.40：显示已设置标签约束的编辑区域
- en: These constraints ensure that the **Reviews** label will always be in the middle
    of the screen when the app is run, regardless of orientation or screen size.
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些约束确保当应用运行时，**评论**标签始终位于屏幕中间，无论方向或屏幕大小如何。
- en: '*Ctrl + Drag* from the button in the table view cell to the newly added view
    controller scene and select **Show** from the pop-up menu. This makes the **Review
    Form** screen appear when the button is tapped:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Ctrl + 拖动*从表格视图单元格中的按钮到新添加的视图控制器场景，并从弹出菜单中选择**显示**。这样，当按钮被点击时，会出现**审查表单**屏幕：'
- en: '![Figure 11.41: Segue pop-up menu with Show selected'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_11.41: Segue pop-up menu with Show selected'
- en: '](img/Figure_11.41_B17469.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_11.41_B17469.jpg]'
- en: 'Figure 11.41: Segue pop-up menu with Show selected'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.41：带有“显示选中”的切换弹出菜单
- en: 'Build and run your app. Click on a cell in the **Explore** screen, then click
    on a cell in the **Restaurant List** screen. Click the button in the **Restaurant
    Detail** screen to display the **Review Form** screen:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 构建并运行你的应用。点击**探索**屏幕中的一个单元格，然后点击**餐厅列表**屏幕中的一个单元格。在**餐厅详情**屏幕中点击按钮以显示**审查表单**屏幕：
- en: '![Figure 11.42: iOS simulator showing Review Form screen'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_11.42: iOS simulator showing Review Form screen'
- en: '](img/Figure_11.42_B17469.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_11.42_B17469.jpg]'
- en: 'Figure 11.42: iOS simulator showing Review Form screen'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.42：显示审查表单屏幕的 iOS 模拟器
- en: Fantastic! All the screens that are accessible from the **Explore** tab, except
    for the **Photo Filter** screen, have now been implemented, with hardly any coding
    required! If you wish, you can repeat the steps in this section to add the **Photo
    Filter** screen.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！除了**照片滤镜**屏幕外，所有可以从**探索**标签访问的屏幕现在都已实现，几乎不需要编写任何代码！如果你愿意，可以重复本节中的步骤来添加**照片滤镜**屏幕。
- en: The last thing to do is make the **Map** screen display a map. You'll do this
    in the next section.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 最后要做的就是使**地图**屏幕显示地图。你将在下一节中这样做。
- en: Implementing the Map screen
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现地图屏幕
- en: 'When you launch the app, the **Explore** screen is displayed. Tapping the **Map**
    button in the tab bar makes the **Map** screen appear, but it is blank. To make
    the **Map** screen display a map, you''ll add a map view to the view in the view
    controller scene for the **Map** screen. Follow these steps:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 当你启动应用时，会显示**探索**屏幕。在标签栏中点击**地图**按钮会使**地图**屏幕出现，但它为空白。要使**地图**屏幕显示地图，你需要在**地图**屏幕的视图控制器场景中添加一个地图视图。按照以下步骤操作：
- en: 'Select the view controller scene for the **Map** screen:![Figure 11.43: Editing
    area showing view controller scene'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**地图**屏幕的视图控制器场景：![图 11.43：显示视图控制器场景的编辑区域
- en: '](img/Figure_11.43_B17469.jpg)'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_11.43_B17469.jpg]'
- en: 'Figure 11.43: Editing area showing view controller scene'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.43：显示视图控制器场景的编辑区域
- en: 'To make this scene display a map, click the Library button and type `map` in
    the filter field. A **Map Kit View** object appears as one of the results. Drag
    it to the view in the view controller scene:![Figure 11.44: Library with Map Kit
    View object selected'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使此场景显示地图，点击库按钮并在过滤器字段中输入`map`。一个**地图视图对象**作为结果之一出现。将其拖动到视图控制器场景中的视图上：![图 11.44：选中地图视图对象的库
- en: '](img/Figure_11.44_B17469.jpg)'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_11.44_B17469.jpg]'
- en: 'Figure 11.44: Library with Map Kit View object selected'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.44：选中地图视图对象的库
- en: 'The map should fill the whole screen. With the map view selected, click the
    Add New Constraints button:![Figure 11.45: View controller scene with map view
    selected'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 地图应填满整个屏幕。在地图视图选中状态下，点击“添加新约束”按钮：![图 11.45：选中地图视图的视图控制器场景
- en: '](img/Figure_11.45_B17469.jpg)'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_11.45_B17469.jpg]'
- en: 'Figure 11.45: View controller scene with map view selected'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.45：选中地图视图的视图控制器场景
- en: 'Type `0` into all the **Spacing to nearest neighbor** fields and make sure
    that the pale red struts are selected (they will turn bright red). Click the **Add
    4 Constraints** button. Verify that the map view fills the entire screen:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在所有**最近邻间距**字段中输入`0`，并确保选择了浅红色支撑（它们会变成鲜红色）。点击**添加 4 个约束**按钮。验证地图视图是否填满了整个屏幕：
- en: '![Figure 11.46: View controller scene with map view filling the screen'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.46：视图控制器场景，地图视图填充整个屏幕'
- en: '](img/Figure_11.46_B17469.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.46_B17469.jpg)'
- en: 'Figure 11.46: View controller scene with map view filling the screen'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.46：视图控制器场景，地图视图填充整个屏幕
- en: 'Build and run your app. Click the **Map** button. You should see a map similar
    to the one shown:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 构建并运行您的应用。点击**地图**按钮。您应该看到与以下所示类似的地图：
- en: '![Figure 11.47: iOS Simulator showing Map screen'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.47：iOS 模拟器显示地图屏幕'
- en: '](img/Figure_11.47_B17469.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.47_B17469.jpg)'
- en: 'Figure 11.47: iOS Simulator showing Map screen'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.47：iOS 模拟器显示地图屏幕
- en: 'If you look at the `Main` storyboard file at this point, you should see something
    like this:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您此时查看**Main**故事板文件，您应该看到如下内容：
- en: '![Figure 11.48: Editing area showing all the scenes in Main storyboard file'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.48：编辑区域显示主故事板文件中的所有场景'
- en: '](img/Figure_11.48_B17469.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.48_B17469.jpg)'
- en: 'Figure 11.48: Editing area showing all the scenes in Main storyboard file'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.48：编辑区域显示主故事板文件中的所有场景
- en: Verify that you have all the scenes shown in the preceding screenshot, and you
    can also run your app in the simulator to check that all the screens are working
    properly.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 确认您拥有前述截图中的所有场景，您也可以在模拟器中运行您的应用以检查所有屏幕是否正常工作。
- en: Wonderful! You've now completed the basic user interface for your app!
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！您现在已经完成了应用的基本用户界面！
- en: Summary
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you completed the basic structure of your app. First, you added
    a blank table view to the **Locations** screen. You also added a new view controller
    scene to your storyboard to represent the **Restaurant List** screen, added and
    configured a collection view for this screen, and implemented a segue that displays
    it when a cell in the **Explore** screen is tapped. You added a new table view
    controller scene to represent the **Restaurant Detail** screen, configured a table
    view with static cells for this screen, and implemented a segue that will display
    this screen when a cell in the **Restaurant List** screen is tapped. You also
    added a button to one of the rows in the **Restaurant Detail** screen, added a
    table view controller scene to represent the **Review Form** screen, and configured
    the button you added to display it. Finally, you added a map view to the view
    controller scene for the **Map** screen, and it now displays a map when the **Map**
    button is tapped.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您完成了应用的基本结构。首先，您在**位置**屏幕中添加了一个空白表格视图。您还在故事板中添加了一个新的视图控制器场景来表示**餐厅列表**屏幕，为该屏幕添加并配置了一个集合视图，并实现了当在**探索**屏幕中点击单元格时显示该切换。您添加了一个新的表格视图控制器场景来表示**餐厅详情**屏幕，为该屏幕配置了一个具有静态单元格的表格视图，并实现了当在**餐厅列表**屏幕中点击单元格时显示该屏幕的切换。您还在**餐厅详情**屏幕的一行中添加了一个按钮，添加了一个表格视图控制器场景来表示**评论表单**屏幕，并配置了您添加的按钮以显示它。最后，您在表示**地图**屏幕的视图控制器场景中添加了一个地图视图，当点击**地图**按钮时，它现在会显示地图。
- en: You have successfully implemented all the screens required for your app, and
    you'll be able to test your app's flow when you run it in the simulator. You should
    also be more proficient with Interface Builder. You now know how to add and configure
    a table view to a storyboard scene, how to add segues between scenes and how to
    add a map view to a scene. This will be useful as you implement your own apps
    that contain table views, use segues to navigate between different screens, and
    display maps. Great!
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功实现了应用所需的所有屏幕，当您在模拟器中运行它时，您将能够测试应用流程。您也应该更加熟练地使用界面构建器。现在您知道如何向故事板场景添加和配置表格视图，如何添加场景之间的切换，以及如何向场景添加地图视图。这将有助于您实现包含表格视图、使用切换在不同屏幕间导航以及显示地图的应用。太棒了！
- en: In the next chapter, you'll modify the cells inside the **Explore** screen,
    the **Restaurant List** screen, and the **Locations** screen so that they match
    the designs that were shown in the app tour.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将修改**探索**屏幕、**餐厅列表**屏幕和**位置**屏幕内的单元格，以便它们与在应用游览中显示的设计相匹配。
