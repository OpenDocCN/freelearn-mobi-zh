["```swift\n    private UIPageViewController pageViewController;\n    private int pageCount = 3;\n    public override void ViewDidLoad (){\n    base.ViewDidLoad ();\n    Page firstPage = new Page(0);\n    this.pageViewController = new UIPageViewController( UIPageViewControllerTransitionStyle.PageCurl, UIPageViewControllerNavigationOrientation.Horizontal, UIPageViewControllerSpineLocation.Min);\n    this.pageViewController.SetViewControllers(new UIViewController[] { firstPage }, UIPageViewControllerNavigationDirection.Forward, false, s => { });\n    this.pageViewController.GetNextViewController = this.GetNextViewController;\n    this.pageViewController.GetPreviousViewController = this.GetPreviousViewController;\n    this.pageViewController.View.Frame = this.View.Bounds;\n    this.View.AddSubview(this.pageViewController.View);\n    }\n    private UIViewController GetNextViewController( UIPageViewController pageController, UIViewController referenceViewController){\n    Page currentPageController = referenceViewController as Page;\n    if (currentPageController.PageIndex >= (this.pageCount - 1)){\n    return null;\n    } else{\n    int nextPageIndex = currentPageController.PageIndex + 1;\n    return new Page(nextPageIndex);\n    }\n    }\n    private UIViewController GetPreviousViewController( UIPageViewController pageController, UIViewController referenceViewController){\n    Page currentPageController = referenceViewController as Page;\n    if (currentPageController.PageIndex <= 0){\n    return null;\n    } else{\n    int previousPageIndex = currentPageController.PageIndex - 1;\n    return new Page(previousPageIndex);\n    }\n    }\n\n    ```", "```swift\n    public Page (int pageIndex) : base (\"Page\", null){\n    this.PageIndex = pageIndex;\n    }\n    public int PageIndex{\n    get;\n    private set;\n    }\n\n    ```", "```swift\n    this.imageView.Image = UIImage.FromFile(string.Format( \"images/{0}.jpg\", this.PageIndex + 1));\n    this.lblPageNum.Text = string.Format(\"Page {0}\", this.PageIndex + 1);\n\n    ```", "```swift\nthis.pageViewController = new UIPageViewController( UIPageViewControllerTransitionStyle.PageCurl, UIPageViewControllerNavigationOrientation.Horizontal, UIPageViewControllerSpineLocation.Min);\n\n```", "```swift\nthis.pageViewController.SetViewControllers(new UIViewController[] { firstPage }, UIPageViewControllerNavigationDirection.Forward, false, s => { });\n\n```", "```swift\nUIViewController GetNextViewController(UIPageViewController pageController, UIViewController referenceViewController);\nUIViewController GetPreviousViewController(UIPageViewController pageController, UIViewController referenceViewController);\n\n```", "```swift\nthis.pageViewController.View.Frame = this.View.Bounds;\nthis.View.AddSubview(this.pageViewController.View);\n\n```", "```swift\n    public override void ViewDidLoad (){\n    base.ViewDidLoad ();\n     UIButton.Appearance.BackgroundColor = UIColor.Gray;\n    UIButton.Appearance.SetTitleColor(UIColor.White, UIControlState.Normal); \n\n    this.buttonPresent.TouchUpInside += delegate(object sender, EventArgs e) {\n    this.PresentModalViewController(new ModalController(), true);\n    } ;\n    }\n\n    ```", "```swift\n    this.buttonDismiss.TouchUpInside += delegate(object sender, EventArgs e) {\n    this.DismissModalViewControllerAnimated(true);\n    } ;\n\n    ```", "```swift\nUIButton.UIButtonAppearance buttonStyle = UIButton.AppearanceWhenContainedIn(typeof(ModalController));\nbuttonStyle.BackgroundColor = UIColor.Red;\n\n```", "```swift\nUIButton.AppearanceWhenContainedIn(typeof(MainController), typeof(ModalController));\n\n```", "```swift\n    private TWTweetComposeViewController tweetController;\n    public override void ViewDidLoad (){\n    base.ViewDidLoad ();\n    this.buttonTweet.TouchUpInside += delegate(object sender, EventArgs e) {\n    if (TWTweetComposeViewController.CanSendTweet){\n    this.tweetController = new TWTweetComposeViewController();\n    this.tweetController.SetInitialText(\"Tweet from MonoTouch!\");\n    this.tweetController.AddUrl(NSUrl.FromString( \"http://software.tavlikos.com\"));\n    this.tweetController.SetCompletionHandler(delegate( TWTweetComposeViewControllerResult tweetResult) {\n    if (tweetResult == TWTweetComposeViewControllerResult.Cancelled){\n    Console.WriteLine(\"Tweet cancelled!\");\n    } else{\n    Console.WriteLine(\"Tweet sent!\");\n    }\n    this.DismissModalViewControllerAnimated(true);\n    } );\n    this.PresentModalViewController(this.tweetController, true);\n    } else{\n    Console.WriteLine(\"Cannot use Twitter on this device!\");\n    }\n    } ;\n    }\n\n    ```", "```swift\nif (TWTweetComposeViewController.CanSendTweet)\n\n```", "```swift\nthis.tweetController = new TWTweetComposeViewController();\nthis.tweetController.SetInitialText(\"Tweet from MonoTouch!\");\n\n```", "```swift\nthis.tweetController.SetCompletionHandler(delegate(TWTweetComposeView ControllerResult tweetResult) {\n\n```", "```swift\n    private NSObject kbdFrameChangedObserver;\n    public override void ViewDidLoad (){\n    base.ViewDidLoad ();\n    this.kbdFrameChangedObserver = NSNotificationCenter. DefaultCenter.AddObserver(new NSString(\" UIKeyboardDidChangeFrameNotification\"), this.KeyboardFrameChanged);\n    }\n    private void KeyboardFrameChanged(NSNotification ntf){\n    Console.WriteLine(\"Keyboard frame changed!\");\n    if (ntf.UserInfo != null){\n    NSObject frameEndObj = null;\n    if (ntf.UserInfo.TryGetValue(UIKeyboard.FrameEndUserInfoKey, out frameEndObj)){\n    RectangleF keyboardFrame = (frameEndObj as NSValue).RectangleFValue;\n    RectangleF textFieldFrame = this.txtInput.Frame;\n    if (textFieldFrame.IntersectsWith(keyboardFrame)){\n    textFieldFrame.Y = keyboardFrame.Y - (textFieldFrame.Height + 40f);\n    UIView.BeginAnimations(\"\");\n    this.txtInput.Frame = textFieldFrame;\n    UIView.CommitAnimations();\n    }\n    }\n    }\n    }\n\n    ```", "```swift\nthis.kbdFrameChangedObserver = NSNotificationCenter. DefaultCenter.AddObserver(new NSString( \"UIKeyboardDidChangeFrameNotification\"), this.KeyboardFrameChanged);\n\n```", "```swift\nif (ntf.UserInfo.TryGetValue(UIKeyboard.FrameEndUserInfoKey, out frameEndObj)){\nRectangleF keyboardFrame = (frameEndObj as NSValue).RectangleFValue;\n}\n\n```", "```swift\nforeach (NSString eachItem in ntf.UserInfo.Keys){\nConsole.WriteLine(\"Key: {0}\", eachItem);\n}\n\n```"]