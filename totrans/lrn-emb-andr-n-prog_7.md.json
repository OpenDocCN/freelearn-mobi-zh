["```java\n. build/envsetup.sh && lunch aosp-shamu\nmkdir dist_output\nmake dist DIST_DIR=dist_output\n\n```", "```java\nls -l dist_output/*target_files*\n\n```", "```java\n./build/tools/releasetools/ota_from_target_files \\\n dist_output/aosp_shamu-target_files-eng.esteban.zip ota_update.zip\n\n```", "```java\n./build/tools/releasetools/ota_from_target_files \\\n -i PREVIOUS-aosp-shamu-target_files.zip \\ \n dist_output/aosp-shamu-target_files.zip incremental_ota_update.zip\n\n```", "```java\nMETA-INF/com/google/android/update-binary\n```", "```java\nMETA-INF/com/google/android/updater-script\n```", "```java\n(expr )\n expr + expr  # string concatenation, not integer addition\n expr == expr\n expr != expr\n expr && expr\n expr || expr\n ! expr\n if expr then expr endif\n if expr then expr else expr endif\n function_name(expr, expr,...)\n expr; expr\n```", "```java\na-z, A-Z, 0-9, _, :, /, .\n```", "```java\n\\n, \\t,\n```", "```java\n\\\", \\\\ \n```", "```java\na1 && a2\nif a1 then a2 endif\n```", "```java\nshow_progress(0.750000, 0);\nui_print(\"Android Shamu\");\nmount(\"ext4\", \"EMMC\", \"/dev/block/…/system\", \"system\");\nunmount(\"/system\");\n```", "```java\nabort();\nassert();\n```", "```java\npackages/apps/Settings\n```", "```java\n<project path=\"packages/apps/Settings\" name=\"platform/packages/apps/Settings\" groups=\"pdk-fs\" />\n```", "```java\nproject path=\"packages/apps/Settings\"\n```", "```java\nname=\"platform/packages/apps/Settings\"\n```", "```java\n<remote name=\"aosp\" fetch=\"..\" />\n<default revision=\"refs/tags/android-6.0.0_r6\" remote=\"aosp\" sync-j=\"4\" />\n```", "```java\n<remote  name=\"my_repo-github\" fetch=\"git://github.com/my_personal_repo/\" />\n```", "```java\n<project path=\"packages/apps/Settings\" name=\"my_repo_Settings\" remote=\"my_repo-github\" />\n```", "```java\n<aosp-root>/package/app/myapkfolder/\n\n```", "```java\nLOCAL_PATH := $(call my-dir)\ninclude $(CLEAR_VARS)\nLOCAL_MODULE_TAGS := optional\nLOCAL_MODULE := < your app folder name >\nLOCAL_SRC_FILES := < app apk filename >\nLOCAL_MODULE_CLASS := APPS\nLOCAL_MODULE_SUFFIX := $(COMMON_ANDROID_PACKAGE_SUFFIX)\ninclude $(BUILD_PREBUILT)\n```", "```java\nbuild/target/product\n```", "```java\nPRODUCT_PACKAGES += < what you have defined in LOCAL_MODULE >\n```", "```java\nMETA-INF/com/google/android/\n```", "```java\nui_print(\"Edify Script for binary installation\");\nui_print(\"Flashing a binary\");\nshow_progress(0.700000, 0);\nui_print(\"mounting /system\");\nmount(\"ext4\", \"EMMC\", \"/dev/block/system\", \"/system\");\nui_print(\"\");\nui_print(\"Installing binary\");\npackage_extract_dir(\"system\", \"/system\");\nui_print(\"unmounting system\");\nunmount(\"/system\");\nui_print(\"unmounted system\");\nui_print(\"Operations completed!\");\n```", "```java\nupdate.zip\n---> META-INF/com/google/android/update-script\n---> META-INF/com/google/android/updater-script\n---> system/xbin/mybinary\n```", "```java\n#!/sbin/sh\n\nFD=$2\n\nui_print() {\n  echo -n -e \"ui_print $1\\n\" > /proc/self/fd/$FD\n  echo -n -e \"ui_print\\n\" > /proc/self/fd/$FD\n}\n\nset_perm() {\n  chown $1:$2 $4\n  chmod $3 $4\n}\n\nui_print \"- Mounting /system\"\nmount /system\n\nui_print \"- Installing BusyBox\"\nunzip -o \"$3\" busybox -d /system/xbin\n\nui_print \"- Setting right permissions -\"\nset_perm 0 2000 0755 /system/xbin/busybox\n\nui_print \"- Symlinking BB applets\"\nfor i in $(/system/xbin/busybox --list); do\n  busybox ln -sf busybox \"/system/xbin/$i\"\ndone\n\nui_print \"- Unmounting /system\"\numount /system\n\nui_print \"- BusyBox Installation complete -\"\n```", "```java\nupdate.zip\n---> META-INF/com/google/android/update-script\n---> busybox\n```", "```java\n<aosp>/package/apps/Myapp\n```", "```java\n<aosp>/package/apps/Myapp/Android.mk\n```", "```java\n  LOCAL_PATH := $(call my-dir)\n  include $(CLEAR_VARS)\n\n  # Build all java files in the java subdirectory\n  LOCAL_SRC_FILES := $(call all-subdir-java-files)\n\n  # Name of the APK to build\n  LOCAL_PACKAGE_NAME := LocalPackage\n\n  # Tell it to build an APK\n  include $(BUILD_PACKAGE)\n```", "```java\nadb pull /system/media/bootanimation.zip .\n```", "```java\nzip -r -0 bootanimation.zip part0 part1 partX desc.txt\n\n```", "```java\nffmpeg -i \"path_file\" -r 1 -s 1024x768 -f image2 \"path_images-=.jpg\"\n\n```", "```java\nWORKING_DIRECTORY/packages/apps/Settings\n```", "```java\n:$ mm\n\n```", "```java\n:$ adb shell\n\n```", "```java\nro.product.model=Nexus 6\nro.product.brand=google\nro.product.name=shamu\nro.product.device=shamu\nro.product.board=shamu\n[…]\n```", "```java\nro.telephony.call_ring.delay=0\nring.delay=0\n```", "```java\nlog.tag.launcher_force_rotate=VERBOSE\nlockscreen.rot_override=true\n```", "```java\nwindowsmgr.support_rotation_270=true\n```", "```java\nro.sf.lcd_density=XXX\n```", "```java\nro.media.enc.jpeg.quality=xxx\n```", "```java\nqemu.hw.mainkeys=1\n```", "```java\npersist.adb.notify=0\n```", "```java\nwifi.supplicant_scan_interval=300\n```", "```java\nnet.dns1=8.8.8.8\nnet.dns2=8.8.4.4\n```", "```java\nrun-parts /system/etc/init.d\n```", "```java\n01settings\n02optimizations\n```", "```java\nrun-parts /system/etc/init.d\n```", "```java\n<root-source>/drivers/cpufreq\n```", "```java\n<root-source>/drivers/cpufreq/cpufreq_mygovernor.c\n```", "```java\n <root-source>/drivers/cpufreq/Kconfig \n```", "```java\nconfig CPU_FREQ_GOV_MYGOVERNOR\n tristate \"'mygovernor' cpufreq governor\"\n depends on CPU_FREQ\n help\n 'mygovernor' - my optimized governor!\n\nconfig CPU_FREQ_DEFAULT_GOV_ MYGOVERNOR\n bool \"mygovernor\"\n select CPU_FREQ_GOV_MYGOVERNOR\n help\n Use the CPUFreq governor 'mygovernor' as default.\n```", "```java\nobj-$(CONFIG_CPU_FREQ_GOV_ MYGOVERNOR) += cpufreq_mygovernor.o\n```", "```java\n<root-source>/include/linux/cpufreq.h\n```", "```java\n#elif defined(CONFIG_CPU_FREQ_DEFAULT_GOV_MYGOVERNOR)\nextern struct cpufreq_governor cpufreq_gov_mygovernor;\n#define CPUFREQ_DEFAULT_GOVERNOR (&amp;cpufreq_gov_mygovernor)\n```", "```java\n<root-source>/block\n```"]